<Type Name="PromptBuilder" FullName="System.Speech.Synthesis.PromptBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c649a424eec7b7e5f50e4586a4b4740a97eccff8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36408672" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PromptBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PromptBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.PromptBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class PromptBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class PromptBuilder" />
  <TypeSignature Language="F#" Value="type PromptBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="992a0-101">建立空的 <see cref="T:System.Speech.Synthesis.Prompt" /> 物件，並提供方法來加入內容、選取語音、控制語音屬性，以及控制口語發音。</span>
      <span class="sxs-lookup">
        <span data-stu-id="992a0-101">Creates an empty <see cref="T:System.Speech.Synthesis.Prompt" /> object and provides methods for adding content, selecting voices, controlling voice attributes, and controlling the pronunciation of spoken words.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-102">與<xref:System.Speech.Synthesis.PromptBuilder>，您可以加入各種不同的內容類型加入至的提示字元，包括純文字、 SSML 標記 （做為字串或檔案），錄製音訊，或甚至是另一個<xref:System.Speech.Synthesis.PromptBuilder>物件。</span><span class="sxs-lookup"><span data-stu-id="992a0-102">With <xref:System.Speech.Synthesis.PromptBuilder>, you can add a variety of content types to a prompt, including plain text, SSML markup (as a string or a file), recorded audio, or even another <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 <span data-ttu-id="992a0-103">要附加至文字<xref:System.Speech.Synthesis.PromptBuilder>物件，並選擇性地控制語音屬性，例如強調、 速率和音量，請使用其中一種<xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-103">To append text to a <xref:System.Speech.Synthesis.PromptBuilder> object and optionally control voice attributes such as emphasis, rate, and volume, use one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> methods.</span></span>  <span data-ttu-id="992a0-104">您也可以控制語音屬性，為群組<xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A>和<xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-104">You can also control voice attributes as a group with the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> and <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> methods.</span></span>  
  
 <span data-ttu-id="992a0-105">您可以將文字附加及控制講話內容或它 phishing 英文發音如使用如何<xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>，或<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-105">You can append text and control what is spoken or how it is pronounced using the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>,  <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> methods.</span></span>  
  
 <span data-ttu-id="992a0-106">變更目前選取的讀出語音在提示字元中使用其中一個多載<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>需要語音特性，例如年齡和性別命名特定的聲音，來使用，或指定的方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-106">Change the currently selected speaking voice in the prompt using one of the overloaded <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods, naming a specific voice to use or specifying required voice characteristics, such as age and gender.</span></span>  
  
 <span data-ttu-id="992a0-107">若要產生的語音功能<xref:System.Speech.Synthesis.PromptBuilder>物件，您可以將它做為引數中傳遞<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-107">To generate speech from a <xref:System.Speech.Synthesis.PromptBuilder> object, you can pass it as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
 <span data-ttu-id="992a0-108">如需詳細資訊，請參閱[建構複雜提示](http://msdn.microsoft.com/library/552cb356-7344-473e-b0f2-7a9983f8c1a4)。</span><span class="sxs-lookup"><span data-stu-id="992a0-108">For more information, see [Constructing a Complex Prompt](http://msdn.microsoft.com/library/552cb356-7344-473e-b0f2-7a9983f8c1a4).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="992a0-109">建立 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-109">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PromptBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PromptBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="992a0-110">建立 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-110">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="992a0-111">下列範例會建立新<xref:System.Speech.Synthesis.PromptBuilder>執行個體，並將文字字串。</span><span class="sxs-lookup"><span data-stu-id="992a0-111">The following example creates a new <xref:System.Speech.Synthesis.PromptBuilder> instance and adds a text string to it.</span></span>  
  
```csharp  
using System.Speech.Synthesis;  
  
public void MySimpleText ()  
{  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendText("Hello world!");  
}  
```  
  
 <span data-ttu-id="992a0-112">下列標記會顯示對等項目中 「 語音合成標記語言 」 (SSML) (`xml:lang`是必要的屬性`speak`項目):</span><span class="sxs-lookup"><span data-stu-id="992a0-112">The following markup shows the equivalent in Speech Synthesis Markup Language (SSML), (`xml:lang` is a required attribute of the `speak` element):</span></span>  
  
```xml  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US">  
  Hello world!  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PromptBuilder (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.#ctor(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PromptBuilder(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="new System.Speech.Synthesis.PromptBuilder : System.Globalization.CultureInfo -&gt; System.Speech.Synthesis.PromptBuilder" Usage="new System.Speech.Synthesis.PromptBuilder culture" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="992a0-113">提供特定文化特性的相關資訊，例如文化特性的語言、文化特性的名稱、書寫系統、使用的行事曆，以及如何格式化日期和排序字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-113">Provides information about a specific culture, such as its language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-114">建立 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 類別的新執行個體，並指定文化特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-114">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class and specifies a culture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-115">這個建構函式設定的值<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="992a0-115">This constructor sets the value for the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="992a0-116"><xref:System.Speech.Synthesis.SpeechSynthesizer>物件將嘗試選取支援所指定的語言已安裝的語音`culture`處理提示的參數。</span><span class="sxs-lookup"><span data-stu-id="992a0-116">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object will attempt to select an installed voice that supports the language specified by the `culture` parameter to process the prompt.</span></span> <span data-ttu-id="992a0-117">如果找到具有指定之文化特性的語音，它會使用它。</span><span class="sxs-lookup"><span data-stu-id="992a0-117">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="992a0-118">如果找不到與指定的文化特性的語音，就會使用預設語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-118">If a voice with the specified culture cannot be found, the default voice will be used.</span></span>  
  
 <span data-ttu-id="992a0-119">若要正確讀出中所指定的語言的字`culture`必須安裝參數，語音合成 （語音或 TTS） 引擎，支援的語言。</span><span class="sxs-lookup"><span data-stu-id="992a0-119">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="992a0-120">已安裝的 TTS 引擎會呼叫語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-120">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="992a0-121">若要取得特定文化特性語音已安裝相關的資訊，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-121">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="992a0-122">Microsoft Windows 和 System.Speech API 接受所有有效國家 （地區） 語言代碼的值為`culture`。</span><span class="sxs-lookup"><span data-stu-id="992a0-122">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="992a0-123">隨附於 Windows 7 的 TTS 引擎支援下列語言的國家/地區代碼：</span><span class="sxs-lookup"><span data-stu-id="992a0-123">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="992a0-124">EN-US。</span><span class="sxs-lookup"><span data-stu-id="992a0-124">en-US.</span></span> <span data-ttu-id="992a0-125">英文 （美國）</span><span class="sxs-lookup"><span data-stu-id="992a0-125">English (United States)</span></span>  
  
-   <span data-ttu-id="992a0-126">zh-chs 和 CN。</span><span class="sxs-lookup"><span data-stu-id="992a0-126">zh-CN.</span></span> <span data-ttu-id="992a0-127">中文 （中國）</span><span class="sxs-lookup"><span data-stu-id="992a0-127">Chinese (China)</span></span>  
  
-   <span data-ttu-id="992a0-128">zh-chs 和 TW。</span><span class="sxs-lookup"><span data-stu-id="992a0-128">zh-TW.</span></span> <span data-ttu-id="992a0-129">中文 （台灣）</span><span class="sxs-lookup"><span data-stu-id="992a0-129">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="992a0-130">也允許兩個字母的語言代碼，例如"en-us"。</span><span class="sxs-lookup"><span data-stu-id="992a0-130">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-131">下列範例會建立<xref:System.Speech.Synthesis.PromptBuilder>執行個體，並指定其<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-131">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> instance and specifies its <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>.</span></span>  
  
```csharp  
using System.Speech.Synthesis;  
  
public void MySimpleText ()  
{  
    PromptBuilder builder = new PromptBuilder(new System.Globalization.CultureInfo("en-US"));  
    builder.AppendText("Hello world!");  
}  
```  
  
 <span data-ttu-id="992a0-132">下列標記會顯示對等的 SSML:</span><span class="sxs-lookup"><span data-stu-id="992a0-132">The following markup shows the equivalent SSML:</span></span>  
  
```xml  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US">  
  Hello world!  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendAudio">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="992a0-133">將指定的音訊檔附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-133">Appends a specified audio file to a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendAudio : string -&gt; unit" Usage="promptBuilder.AppendAudio path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="992a0-134">音訊檔的完整路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-134">A fully qualified path to the audio file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-135">將指定的音訊檔附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-135">Appends the specified audio file to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (Uri audioFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(class System.Uri audioFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (audioFile As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(Uri ^ audioFile);" />
      <MemberSignature Language="F#" Value="member this.AppendAudio : Uri -&gt; unit" Usage="promptBuilder.AppendAudio audioFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="audioFile">
          <span data-ttu-id="992a0-136">音訊檔的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-136">URI for the audio file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-137">將位於指定 URI 的音訊檔附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-137">Appends the audio file at the specified URI to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="992a0-138">下列範例會初始化的新執行個體<xref:System.Speech.Synthesis.PromptBuilder>類別，並將其加入文字，後面接著的音訊檔案。</span><span class="sxs-lookup"><span data-stu-id="992a0-138">The following example initializes a new instance of the <xref:System.Speech.Synthesis.PromptBuilder> class and then adds text to it, followed by an audio file.</span></span>  
  
```csharp  
using System.Speech.PromptBuilder;  
  
public void SimpleConcatenation()  
{  
    // Add a prompt fragment from a .wav file.  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendText("How are you today?");  
    builder.AppendAudio(new Uri ("http://www.speech.microsoft.com/ding.wav"));  
}  
```  
  
 <span data-ttu-id="992a0-139">下列標記會顯示對等的 SSML 標記。</span><span class="sxs-lookup"><span data-stu-id="992a0-139">The following markup shows the equivalent SSML markup.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis"  
       xmlns:ms="http://www.microsoft.com/speech/synthesis" xml:lang="en">  
  
  How are you today?  
  <audio src="http://www.speech.microsoft.com/ding.wav" />  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (Uri audioFile, string alternateText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(class System.Uri audioFile, string alternateText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (audioFile As Uri, alternateText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(Uri ^ audioFile, System::String ^ alternateText);" />
      <MemberSignature Language="F#" Value="member this.AppendAudio : Uri * string -&gt; unit" Usage="promptBuilder.AppendAudio (audioFile, alternateText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.Uri" />
        <Parameter Name="alternateText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="audioFile">
          <span data-ttu-id="992a0-140">音訊檔的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-140">URI for the audio file.</span>
          </span>
        </param>
        <param name="alternateText">
          <span data-ttu-id="992a0-141">字串，包含代表音訊的替代文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-141">A string containing alternate text representing the audio.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-142">將指定的音訊檔和替代文字附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-142">Appends the specified audio file and alternate text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-143">如果無法播放音訊檔案，語音合成引擎將說出的替代文字。</span><span class="sxs-lookup"><span data-stu-id="992a0-143">The speech synthesis engine will speak the alternate text if the audio file cannot be played.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-144">下列範例新增的音訊檔<xref:System.Speech.Synthesis.PromptBuilder>執行個體，並指定要說，如果無法播放音訊檔案的文字。</span><span class="sxs-lookup"><span data-stu-id="992a0-144">The following examples adds an audio file to a <xref:System.Speech.Synthesis.PromptBuilder> instance and specifies text to speak if the audio file cannot be played.</span></span>  
  
```csharp  
using System.Speech.PromptBuilder;  
  
public void SimpleConcatenation()  
{  
  
    // Concatenate a prompt fragment from a .wav file.  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendAudio(new Uri ("C:\\OnHold.wav"), "Your call will be answered in the order it was received");  
}  
```  
  
 <span data-ttu-id="992a0-145">下列標記會顯示對等的 SSML 標記。</span><span class="sxs-lookup"><span data-stu-id="992a0-145">The following markup shows the equivalent SSML markup.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis"  
       xmlns:ms="http://www.microsoft.com/speech/synthesis" xml:lang="en">  
  
  <audio src="C:\OnHold.wav"> Your call will be answered in the order it was received. </audio>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBookmark">
      <MemberSignature Language="C#" Value="public void AppendBookmark (string bookmarkName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBookmark(string bookmarkName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBookmark (bookmarkName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBookmark(System::String ^ bookmarkName);" />
      <MemberSignature Language="F#" Value="member this.AppendBookmark : string -&gt; unit" Usage="promptBuilder.AppendBookmark bookmarkName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bookmarkName">
          <span data-ttu-id="992a0-146">字串，包含附加的書籤名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-146">A string containing the name of the appended bookmark.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-147">將書籤附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-147">Appends a bookmark to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-148">語音合成引擎將會產生<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>事件時使用的任何提示遇到書籤<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-148">A speech synthesis engine will generate a <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event if it encounters a bookmark while speaking a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-149">下列範例會建立包含兩個書籤，並將輸出傳送到播放 WAV 檔案的提示。</span><span class="sxs-lookup"><span data-stu-id="992a0-149">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="992a0-150">處理常式<xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached>主控台引發事件時，事件會寫入及音訊資料流中的其位置的書籤的名稱。</span><span class="sxs-lookup"><span data-stu-id="992a0-150">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendBreak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="992a0-151">在 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件的內容中插入中斷 (暫停)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-151">Inserts a break (pause) in the content of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak();" />
      <MemberSignature Language="F#" Value="member this.AppendBreak : unit -&gt; unit" Usage="promptBuilder.AppendBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="992a0-152">將中斷附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-152">Appends a break to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-153">這個方法未指定中斷的持續時間。</span><span class="sxs-lookup"><span data-stu-id="992a0-153">This method does not specify a duration for the break.</span></span> <span data-ttu-id="992a0-154"><xref:System.Speech.Synthesis.SpeechSynthesizer>會決定根據語言內容的持續時間值。</span><span class="sxs-lookup"><span data-stu-id="992a0-154">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will determine a duration value based on the linguistic context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-155">下列範例會建置包含以分行符號分隔的兩個句子的提示字元，並說出電腦上的提示，以預設音訊裝置。</span><span class="sxs-lookup"><span data-stu-id="992a0-155">The following example builds a prompt containing two sentences separated by a break and speaks the prompt to the default audio device on the computer.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45.");  
        builder.AppendBreak();  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:30, and 9:15.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak (System.Speech.Synthesis.PromptBreak strength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak(valuetype System.Speech.Synthesis.PromptBreak strength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak (strength As PromptBreak)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak(System::Speech::Synthesis::PromptBreak strength);" />
      <MemberSignature Language="F#" Value="member this.AppendBreak : System.Speech.Synthesis.PromptBreak -&gt; unit" Usage="promptBuilder.AppendBreak strength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strength" Type="System.Speech.Synthesis.PromptBreak" />
      </Parameters>
      <Docs>
        <param name="strength">
          <span data-ttu-id="992a0-156">表示中斷的持續時間，具有下列增加值：</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-156">Indicates the duration of the break, with the following increasing values:</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-157">將中斷附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件，並指定其強度 (持續時間)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-157">Appends a break to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies its strength (duration).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-158">中的值<xref:System.Speech.Synthesis.PromptBreak>列舉型別表示的字組界限之間的分隔間隔 （暫停） 的範圍。</span><span class="sxs-lookup"><span data-stu-id="992a0-158">The values in the <xref:System.Speech.Synthesis.PromptBreak> enumeration represent a range of separation intervals (pauses) between word boundaries.</span></span> <span data-ttu-id="992a0-159">語音合成引擎判斷確切間隔的持續時間。</span><span class="sxs-lookup"><span data-stu-id="992a0-159">The speech synthesis engine determines the exact duration of the interval.</span></span> <span data-ttu-id="992a0-160">當要求中斷時，其中一個值會傳遞給文字轉換語音 (TTS) 引擎，其中包含這些值與對應的毫秒中斷值之間的對應。</span><span class="sxs-lookup"><span data-stu-id="992a0-160">When a break is requested, one of these values is passed to the text-to-speech (TTS) engine, which contains a mapping between these values and the corresponding millisecond break values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-161">下列範例會建置包含以分行符號分隔的兩個句子的提示字元，並將輸出傳送到播放 WAV 檔案。</span><span class="sxs-lookup"><span data-stu-id="992a0-161">The following example builds a prompt containing two sentences separated by a break and sends the output to a WAV file for playback.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45");  
        builder.AppendBreak(PromptBreak.Medium);  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak (TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak(valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak (duration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak(TimeSpan duration);" />
      <MemberSignature Language="F#" Value="member this.AppendBreak : TimeSpan -&gt; unit" Usage="promptBuilder.AppendBreak duration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="duration">
          <span data-ttu-id="992a0-162">以刻度為單位的時間，一個刻度等於 100 奈秒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-162">The time in ticks, where one tick equals 100 nanoseconds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-163">將指定持續時間的中斷附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-163">Appends a break of the specified duration to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-164">中斷可以用來控制暫停或其他字與字之間的韻律界限。</span><span class="sxs-lookup"><span data-stu-id="992a0-164">A break can be used to control pauses or other prosodic boundaries between words.</span></span> <span data-ttu-id="992a0-165">一個符號是選擇性的。</span><span class="sxs-lookup"><span data-stu-id="992a0-165">A break is optional.</span></span> <span data-ttu-id="992a0-166">如果中斷不存在，合成器會決定根據語言內容的文字之間中斷。</span><span class="sxs-lookup"><span data-stu-id="992a0-166">If a break is not present, the synthesizer determines the break between words depending on the linguistic context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-167">下列範例建置包含兩個句子分隔中斷 15,000,000 刻度 （1.5 秒），在提示字元，並說出電腦上的預設音訊裝置的提示。</span><span class="sxs-lookup"><span data-stu-id="992a0-167">The following example builds a prompt containing two sentences separated by a break of 15,000,000 ticks (1.5 seconds), and speaks the prompt to the default audio device on the computer.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45");  
        builder.AppendBreak(new TimeSpan(15000000));  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPromptBuilder">
      <MemberSignature Language="C#" Value="public void AppendPromptBuilder (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendPromptBuilder(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendPromptBuilder(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendPromptBuilder(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberSignature Language="F#" Value="member this.AppendPromptBuilder : System.Speech.Synthesis.PromptBuilder -&gt; unit" Usage="promptBuilder.AppendPromptBuilder promptBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder">
          <span data-ttu-id="992a0-168">要附加的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-168">The content to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-169">將 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件附加至另一個 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-169">Appends a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object to another <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="992a0-170">下列範例會建立兩個<xref:System.Speech.Synthesis.PromptBuilder>執行個體，然後將它們附加至第三個<xref:System.Speech.Synthesis.PromptBuilder>。</span><span class="sxs-lookup"><span data-stu-id="992a0-170">The example that follows creates two <xref:System.Speech.Synthesis.PromptBuilder> instances and then appends them to a third <xref:System.Speech.Synthesis.PromptBuilder>.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\showtimes.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\showtimes.wav");  
  
        // Build child prompts.  
        PromptBuilder theatreA = new PromptBuilder();  
        theatreA.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 9:30");  
        theatreA.AppendBreak(PromptBreak.Large);  
        PromptBuilder theatreB = new PromptBuilder();  
        theatreB.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Build the parent prompt and append the two child prompts.  
        PromptBuilder showTimes = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        showTimes.AppendText(  
          "The following are the show times for tonight's movies:");  
        showTimes.AppendPromptBuilder(theatreA);  
        showTimes.AppendPromptBuilder(theatreB);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(showTimes);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSsml">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="992a0-171">將 SSML 檔案附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-171">Appends an SSML file to a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendSsml : string -&gt; unit" Usage="promptBuilder.AppendSsml path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="992a0-172">要附加之 SSML 檔案的完整路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-172">A fully qualified path to the SSML file to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-173">將位於指定路徑的 SSML 檔案附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-173">Appends the SSML file at the specified path to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-174">SSML 檔案必須是 XML 格式檔案，並符合[語音合成標記語言 (SSML) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201763)規格。</span><span class="sxs-lookup"><span data-stu-id="992a0-174">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763) specification.</span></span>  
  
 <span data-ttu-id="992a0-175">您也可以附加為字串，使用的 SSML 標記<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-175">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-176">下列範例會建立<xref:System.Speech.Synthesis.PromptBuilder>物件，並將 SSML 檔案使用的內容附加<xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-176">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends the contents of an SSML file using the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a file that defines an SSML prompt.  
        PromptBuilder ssmlFile = new PromptBuilder();  
        ssmlFile.AppendSsml("c:\\test\\Weather.ssml");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(ssmlFile);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 <span data-ttu-id="992a0-177">以下是上述範例中所參考之 SSML 檔案。</span><span class="sxs-lookup"><span data-stu-id="992a0-177">The following is the SSML file that the preceding example references.</span></span>  
  
```xml  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <s> The weather forecast for today is partly cloudy with some sun breaks. </s>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (Uri ssmlFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(class System.Uri ssmlFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (ssmlFile As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(Uri ^ ssmlFile);" />
      <MemberSignature Language="F#" Value="member this.AppendSsml : Uri -&gt; unit" Usage="promptBuilder.AppendSsml ssmlFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlFile" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="ssmlFile">
          <span data-ttu-id="992a0-178">要附加之 SSML 檔案的完整 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-178">A fully qualified URI to the SSML file to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-179">將位於指定 URI 的 SSML 檔案附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-179">Appends the SSML file at the specified URI to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-180">SSML 檔案必須是 XML 格式檔案，並符合[語音合成標記語言 (SSML) 1.0 版](https://www.w3.org/TR/speech-synthesis/)規格。</span><span class="sxs-lookup"><span data-stu-id="992a0-180">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://www.w3.org/TR/speech-synthesis/) specification.</span></span>  
  
 <span data-ttu-id="992a0-181">您也可以附加為字串，使用的 SSML 標記<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-181">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-182">下列範例會建立<xref:System.Speech.Synthesis.PromptBuilder>物件，並將 SSML 檔案使用的內容附加<xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-182">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends the contents of an SSML file using the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a file that defines an SSML prompt.  
        PromptBuilder ssmlFile = new PromptBuilder();  
        ssmlFile.AppendSsml(new Uri("c:\\test\\Weather.ssml"));  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(ssmlFile);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="992a0-183">以下是上述範例中所參考之 SSML 檔案。</span><span class="sxs-lookup"><span data-stu-id="992a0-183">The following is the SSML file that the preceding example references.</span></span>  
  
```xml  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <s> The weather forecast for today is partly cloudy with some sun breaks. </s>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (System.Xml.XmlReader ssmlFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(class System.Xml.XmlReader ssmlFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (ssmlFile As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(System::Xml::XmlReader ^ ssmlFile);" />
      <MemberSignature Language="F#" Value="member this.AppendSsml : System.Xml.XmlReader -&gt; unit" Usage="promptBuilder.AppendSsml ssmlFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlFile" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="ssmlFile">
          <span data-ttu-id="992a0-184">要附加之 XML 檔案的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-184">A fully qualified name to the XML file to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-185">附加 <c>XMLReader</c> 物件，其參考 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件的 SSML 提示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-185">Appends an <c>XMLReader</c> object that references an SSML prompt to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-186">SSML 檔案必須是 XML 格式檔案，並符合[語音合成標記語言 (SSML) 1.0 版](https://www.w3.org/TR/speech-synthesis/)規格。</span><span class="sxs-lookup"><span data-stu-id="992a0-186">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://www.w3.org/TR/speech-synthesis/) specification.</span></span>  
  
 <span data-ttu-id="992a0-187">您也可以附加為字串，使用的 SSML 標記<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-187">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-188">下列範例會建立<xref:System.Speech.Synthesis.PromptBuilder>物件從<xref:System.Xml.XmlReader>物件參考包含語音合成標記語言 (SSML) 標記的檔案。</span><span class="sxs-lookup"><span data-stu-id="992a0-188">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from an <xref:System.Xml.XmlReader> object that references a file containing Speech Synthesis Markup Language (SSML) markup.</span></span>  
  
```csharp  
using System;  
using System.Xml;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Create the path to the SSML file.  
        string weatherFile = Path.GetFullPath("c:\\test\\Weather.xml");  
        PromptBuilder builder = null;  
  
        // Create an XML Reader from the file, create a PromptBuilder and   
        // append the XmlReader.  
        if (File.Exists(weatherFile))  
        {  
          XmlReader reader = XmlReader.Create(weatherFile);  
          builder = new PromptBuilder();  
          builder.AppendSsml(reader);  
          reader.Close();  
        }  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsmlMarkup">
      <MemberSignature Language="C#" Value="public void AppendSsmlMarkup (string ssmlMarkup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsmlMarkup(string ssmlMarkup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsmlMarkup (ssmlMarkup As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsmlMarkup(System::String ^ ssmlMarkup);" />
      <MemberSignature Language="F#" Value="member this.AppendSsmlMarkup : string -&gt; unit" Usage="promptBuilder.AppendSsmlMarkup ssmlMarkup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlMarkup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ssmlMarkup">
          <span data-ttu-id="992a0-189">字串，包含 SSML 標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-189">A string containing SSML markup.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-190">將包含 SSML 標記的指定字串附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-190">Appends the specified string containing SSML markup to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-191">當附加 SSML 標記時，您必須使用正確的逸出字元。</span><span class="sxs-lookup"><span data-stu-id="992a0-191">You must use the appropriate escape characters when appending SSML markup.</span></span> <span data-ttu-id="992a0-192">請注意回溯斜線前面封入的值的引號`interpret-as`在下列範例中的屬性：</span><span class="sxs-lookup"><span data-stu-id="992a0-192">Notice the backward-slashes preceding the quotation marks enclosing the value of the `interpret-as` attribute in the following example:</span></span>  
  
```csharp  
builder.AppendSsmlMarkup("<say-as interpret-as = \"characters\"> chair </say-as>");  
```  
  
> [!NOTE]
>  <span data-ttu-id="992a0-193">用來做為引數的字串<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>不能包含`speak`項目。</span><span class="sxs-lookup"><span data-stu-id="992a0-193">The string used as an argument to <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> cannot include a `speak` element.</span></span>  
  
 <span data-ttu-id="992a0-194">當使用<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>指定中的內嵌發音`phoneme`項目，您可以使用從下列注音字母，提供目前的語音引擎支援它的任何電話：</span><span class="sxs-lookup"><span data-stu-id="992a0-194">When using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> to specify inline pronunciations in a `phoneme` element, you can use phones from any of the following phonetic alphabets, provided that the current speech engine supports it:</span></span>  
  
-   <span data-ttu-id="992a0-195">國際音標 (IPA)</span><span class="sxs-lookup"><span data-stu-id="992a0-195">International Phonetic Alphabet (IPA)</span></span>  
  
-   <span data-ttu-id="992a0-196">通用電話組 (UPS)</span><span class="sxs-lookup"><span data-stu-id="992a0-196">Universal Phone Set (UPS)</span></span>  
  
-   <span data-ttu-id="992a0-197">SAPI 電話設定</span><span class="sxs-lookup"><span data-stu-id="992a0-197">SAPI Phone Set</span></span>  
  
 <span data-ttu-id="992a0-198">任何 SSML 相容的語音引擎將從國際音標語音電話。</span><span class="sxs-lookup"><span data-stu-id="992a0-198">Any SSML-compliant speech engine will speak phones from the IPA.</span></span>  
  
 <span data-ttu-id="992a0-199">您也可以將附加檔案，包含 SSML 標記使用其中一種<xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-199">You can also append a file containing SSML markup using one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods.</span></span> <span data-ttu-id="992a0-200">若要附加要說出文字的格式不是標記語言，使用其中一種<xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>，或<xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-200">To append text to be spoken that is not formatted with markup language, use one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendText">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="992a0-201">將文字附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-201">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string -&gt; unit" Usage="promptBuilder.AppendText textToSpeak" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="992a0-202">字串，包含要讀出的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-202">A string containing the text to be spoken.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-203">指定要附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-203">Specifies text to append to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-204">若要將附加格式為 SSML 標記語言的文字，請使用<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-204">To append text that is formatted as SSML markup language, use <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-205">下列範例會建立<xref:System.Speech.Synthesis.PromptBuilder>物件，並使用文字字串將附加<xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-205">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends a text string using the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder speakText = new PromptBuilder();  
        speakText.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt.  
        synth.Speak(speakText);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptEmphasis emphasis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptEmphasis emphasis) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, emphasis As PromptEmphasis)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptEmphasis emphasis);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string * System.Speech.Synthesis.PromptEmphasis -&gt; unit" Usage="promptBuilder.AppendText (textToSpeak, emphasis)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="emphasis" Type="System.Speech.Synthesis.PromptEmphasis" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="992a0-206">字串，包含要讀出的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-206">A string containing the text to be spoken.</span>
          </span>
        </param>
        <param name="emphasis">
          <span data-ttu-id="992a0-207">要套用至文字的強調語氣或重音值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-207">The value for the emphasis or stress to apply to the text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-208">將文字附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件，並指定文字的強調程度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-208">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the degree of emphasis for the text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-209">在 Windows 中的語音合成引擎不支援這一次的強調參數。</span><span class="sxs-lookup"><span data-stu-id="992a0-209">The speech synthesis engines in Windows do not support the emphasis parameter at this time.</span></span> <span data-ttu-id="992a0-210">設定強調參數的值將會產生任何可發出聲音的變更合成的語音輸出中。</span><span class="sxs-lookup"><span data-stu-id="992a0-210">Setting values for the emphasis parameter will produce no audible change in the synthesized speech output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptRate rate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptRate rate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, rate As PromptRate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptRate rate);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string * System.Speech.Synthesis.PromptRate -&gt; unit" Usage="promptBuilder.AppendText (textToSpeak, rate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="rate" Type="System.Speech.Synthesis.PromptRate" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="992a0-211">字串，包含要讀出的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-211">A string containing the text to be spoken.</span>
          </span>
        </param>
        <param name="rate">
          <span data-ttu-id="992a0-212">要套用至文字的讀出速率值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-212">The value for the speaking rate to apply to the text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-213">將文字附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件，並指定文字的讀出速率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-213">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the speaking rate for the text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="992a0-214">下列範例會建立<xref:System.Speech.Synthesis.PromptBuilder>物件，並將文字字串。</span><span class="sxs-lookup"><span data-stu-id="992a0-214">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends text strings.</span></span> <span data-ttu-id="992a0-215">此範例會使用<xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>方法，以指定緩慢說話速率要加入的字串列舉出訂單的內容。</span><span class="sxs-lookup"><span data-stu-id="992a0-215">The example uses the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method to specify a slow speaking rate for the string being added, which enumerates the contents of an order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder speakRate = new PromptBuilder();  
        speakRate.AppendText("Your order for");  
        speakRate.AppendText("one kitchen sink and one faucet", PromptRate.Slow);  
        speakRate.AppendText("has been confirmed.");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(speakRate);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptVolume volume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptVolume volume) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, volume As PromptVolume)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptVolume volume);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string * System.Speech.Synthesis.PromptVolume -&gt; unit" Usage="promptBuilder.AppendText (textToSpeak, volume)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="volume" Type="System.Speech.Synthesis.PromptVolume" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="992a0-216">字串，包含要讀出的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-216">A string containing the text to be spoken.</span>
          </span>
        </param>
        <param name="volume">
          <span data-ttu-id="992a0-217">要套用至文字的讀出音量 (聲音大小) 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-217">The value for the speaking volume (loudness) to apply to the text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-218">將文字附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件，並指定文字的讀出音量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-218">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the volume to speak the text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-219"><xref:System.Speech.Synthesis.PromptVolume.Default>設定<xref:System.Speech.Synthesis.PromptVolume>是相同的完整磁碟區做為<xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>。</span><span class="sxs-lookup"><span data-stu-id="992a0-219">The <xref:System.Speech.Synthesis.PromptVolume.Default> setting for <xref:System.Speech.Synthesis.PromptVolume> is full volume, which is the same as <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span></span> <span data-ttu-id="992a0-220">其他設定會減少相對於完整磁碟區的語音輸出的磁碟區。</span><span class="sxs-lookup"><span data-stu-id="992a0-220">The other settings decrease the volume of speech output relative to full volume.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-221">下列範例會使用<xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>方法，以指定磁碟區設定的<xref:System.Speech.Synthesis.SpeechSynthesizer>應套用至語音輸出。</span><span class="sxs-lookup"><span data-stu-id="992a0-221">The following example uses the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method to specify volume settings that the <xref:System.Speech.Synthesis.SpeechSynthesizer> should apply to speech output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt that applies different volume settings.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is the default speaking volume.", PromptVolume.Default);  
        builder.AppendBreak();  
        builder.AppendText("This is the extra loud speaking volume.", PromptVolume.ExtraLoud);  
        builder.AppendBreak();  
        builder.AppendText("This is the medium speaking volume.", PromptVolume.Medium);  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithAlias">
      <MemberSignature Language="C#" Value="public void AppendTextWithAlias (string textToSpeak, string substitute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithAlias(string textToSpeak, string substitute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithAlias (textToSpeak As String, substitute As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithAlias(System::String ^ textToSpeak, System::String ^ substitute);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithAlias : string * string -&gt; unit" Usage="promptBuilder.AppendTextWithAlias (textToSpeak, substitute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="substitute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="992a0-222">字串，包含文字表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-222">A string containing the text representation.</span>
          </span>
        </param>
        <param name="substitute">
          <span data-ttu-id="992a0-223">字串，包含要讀出的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-223">A string containing the text to be spoken.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-224">將文字附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件，並指定要讀出的別名文字來取代附加文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-224">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the alias text to be spoken in place of the appended text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-225">這可讓文件中包含語音和撰寫的表單的提示。</span><span class="sxs-lookup"><span data-stu-id="992a0-225">This allows a document to contain both a spoken and a written form for a prompt.</span></span> <span data-ttu-id="992a0-226">例如，書寫的形式可以是縮略字，例如 SAPI，而且出口語的形式可能是展開的縮略字，在此案例語音應用程式開發介面中的文字。</span><span class="sxs-lookup"><span data-stu-id="992a0-226">For example, the written form could be an acronym, such as SAPI, and the spoken form could be the expanded text for the acronym, in this case Speech Application Programming Interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-227">下列範例會將文字字串 （"語音合成標記語言 」） 和其別名 ("SSML 」) 附加至<xref:System.Speech.Synthesis.PromptBuilder>物件。</span><span class="sxs-lookup"><span data-stu-id="992a0-227">The following example appends a text string ("Speech Synthesis Markup Language") and its alias ("SSML") to a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span> <span data-ttu-id="992a0-228">合成器將發出的"S S M L"音。</span><span class="sxs-lookup"><span data-stu-id="992a0-228">The synthesizer will pronounce "S S M L".</span></span>  
  
```  
PromptBuilder alias = new PromptBuilder();  
alias.AppendTextWithAlias("Speech Synthesis Markup Language","SSML");   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendTextWithHint">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="992a0-229">將文字附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件，並指定文字的內容類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-229">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the content type of the text.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendTextWithHint">
      <MemberSignature Language="C#" Value="public void AppendTextWithHint (string textToSpeak, System.Speech.Synthesis.SayAs sayAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithHint(string textToSpeak, valuetype System.Speech.Synthesis.SayAs sayAs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithHint(System::String ^ textToSpeak, System::Speech::Synthesis::SayAs sayAs);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithHint : string * System.Speech.Synthesis.SayAs -&gt; unit" Usage="promptBuilder.AppendTextWithHint (textToSpeak, sayAs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="sayAs" Type="System.Speech.Synthesis.SayAs" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="992a0-230">字串，包含要讀出的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-230">A string containing the text to be spoken.</span>
          </span>
        </param>
        <param name="sayAs">
          <span data-ttu-id="992a0-231">文字的內容類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-231">The content type of the text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-232">將文字附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件，並使用 <see cref="T:System.Speech.Synthesis.SayAs" /> 列舉的成員來指定內容類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-232">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the content type using a member of the <see cref="T:System.Speech.Synthesis.SayAs" /> enumeration.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-233">所指定的內容類型`sayAs`可以提供有關如何讀出的內容的語音合成引擎的指引`textToSpeak`。</span><span class="sxs-lookup"><span data-stu-id="992a0-233">The content type specified by `sayAs` can provide guidance to the speech synthesis engine about how to pronounce the contents of `textToSpeak`.</span></span>  
  
   
  
## Examples  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and define the data types for some of the added strings.  
        PromptBuilder sayAs = new PromptBuilder();  
        sayAs.AppendText("Your");  
        sayAs.AppendTextWithHint("1st", SayAs.NumberOrdinal);  
        sayAs.AppendText("request was for");  
        sayAs.AppendTextWithHint("1", SayAs.NumberCardinal);  
        sayAs.AppendText("room, on");  
        sayAs.AppendTextWithHint("10/19/2012,", SayAs.MonthDayYear);  
        sayAs.AppendText("with early arrival at");  
        sayAs.AppendTextWithHint("12:35pm", SayAs.Time12);  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(sayAs);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithHint">
      <MemberSignature Language="C#" Value="public void AppendTextWithHint (string textToSpeak, string sayAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithHint(string textToSpeak, string sayAs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithHint (textToSpeak As String, sayAs As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithHint(System::String ^ textToSpeak, System::String ^ sayAs);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithHint : string * string -&gt; unit" Usage="promptBuilder.AppendTextWithHint (textToSpeak, sayAs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="sayAs" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="992a0-234">字串，包含要讀出的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-234">A string containing the text to be spoken.</span>
          </span>
        </param>
        <param name="sayAs">
          <span data-ttu-id="992a0-235">文字的內容類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-235">The content type of the text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-236">將文字附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件及指定文字內容類型的 <see cref="T:System.String" /> 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-236">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and a <see cref="T:System.String" /> that specifies the content type of the text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-237">您可以使用這個方法來指定內容類型，不會包含在<xref:System.Speech.Synthesis.SayAs>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="992a0-237">You can use this method to specify a content type that is not included in the <xref:System.Speech.Synthesis.SayAs> enumeration.</span></span> <span data-ttu-id="992a0-238">不過，TTS 引擎必須支援您指定的參數。</span><span class="sxs-lookup"><span data-stu-id="992a0-238">However, the TTS engine must support the parameter that you specify.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithPronunciation">
      <MemberSignature Language="C#" Value="public void AppendTextWithPronunciation (string textToSpeak, string pronunciation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithPronunciation(string textToSpeak, string pronunciation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithPronunciation (textToSpeak As String, pronunciation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithPronunciation(System::String ^ textToSpeak, System::String ^ pronunciation);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithPronunciation : string * string -&gt; unit" Usage="promptBuilder.AppendTextWithPronunciation (textToSpeak, pronunciation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="pronunciation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak">
          <span data-ttu-id="992a0-239">字串，包含使用某語言傳統字母之單字的書寫形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-239">A string containing the written form of the word using the conventional alphabet for a language.</span>
          </span>
        </param>
        <param name="pronunciation">
          <span data-ttu-id="992a0-240">字串，包含要從國際音標 (IPA) 讀出的音素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-240">A string containing phones to be spoken from the International Phonetic Alphabet (IPA).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-241">將文字附加至 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件，並指定文字的發音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-241">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the pronunciation for the text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-242">合成器說出的內容`pronunciation`參數，而非內容的`textToSpeak`參數。</span><span class="sxs-lookup"><span data-stu-id="992a0-242">The synthesizer speaks the contents of the `pronunciation` parameter, not the contents of the `textToSpeak` parameter.</span></span>  
  
 <span data-ttu-id="992a0-243">發音以內嵌方式指定在提示中的只會套用到個別次出現的文字，並覆寫語音引擎或其目前作用中 lexicon 除外的任何發音。</span><span class="sxs-lookup"><span data-stu-id="992a0-243">Pronunciations specified inline in prompts apply only to the individual occurrence of a word and override pronunciations of the speech engine or any of its currently active lexicons.</span></span> <span data-ttu-id="992a0-244">一般而言，您將使用內嵌發音自訂的現有文字的發音或不常見的詞彙，例如適當的名稱，其中的語音合成引擎可能不讀出，以及預期的發音。</span><span class="sxs-lookup"><span data-stu-id="992a0-244">Typically, you will use inline pronunciations for custom pronunciations of existing words or for pronunciation of uncommon words, such as proper names, which the speech synthesis engine may not pronounce as well as expected.</span></span>  
  
 <span data-ttu-id="992a0-245">必須使用電話從國際音標 (IPA) 來指定內嵌發音。</span><span class="sxs-lookup"><span data-stu-id="992a0-245">Inline pronunciations must be specified using phones from the International Phonetic Alphabet (IPA).</span></span> <span data-ttu-id="992a0-246">字母或字元，表示個別音效的語音電話。</span><span class="sxs-lookup"><span data-stu-id="992a0-246">A phone is a letter or character that represents a discreet sound of speech.</span></span> <span data-ttu-id="992a0-247">符合的語音引擎[語音合成標記語言 (SSML) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201763)規格會讀出 IPA 從手機。</span><span class="sxs-lookup"><span data-stu-id="992a0-247">Speech engines that comply with the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763) specification will pronounce phones from the IPA.</span></span> <span data-ttu-id="992a0-248">若要指定內嵌發音使用其他注音字母，請參閱<xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-248">To specify inline pronunciations using other phonetic alphabets, see <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
 <span data-ttu-id="992a0-249">IPA 發行[圖表](http://go.microsoft.com/fwlink/?LinkId=58362)，列出其電話，並將之對應至 Unicode 的數字。</span><span class="sxs-lookup"><span data-stu-id="992a0-249">The IPA publishes a [chart](http://go.microsoft.com/fwlink/?LinkId=58362) that lists its phones and maps them to Unicode numbers.</span></span>  
  
 <span data-ttu-id="992a0-250">IPA 字母中的某些電話有英文字母轉換成相同的表示法。</span><span class="sxs-lookup"><span data-stu-id="992a0-250">Some phones in the IPA alphabet have the same representations as letters in the Latin alphabet.</span></span> <span data-ttu-id="992a0-251">在這些情況下，可能會輸入拉丁字元，並具有適當的表示法的電話。</span><span class="sxs-lookup"><span data-stu-id="992a0-251">In those cases, it is possible to type the Latin character and have the proper representation for a phone.</span></span> <span data-ttu-id="992a0-252">常用文字中的拉丁字元可能代表 IPA 電話集的數個電話，因為只需輸入的拉丁字元可能會導致需要精確 IPA 電話。</span><span class="sxs-lookup"><span data-stu-id="992a0-252">Because the Latin characters as commonly used in text may represent several phones of the IPA phone set, simply typing the Latin character might not result in the precise IPA phone desired.</span></span> <span data-ttu-id="992a0-253">IPA 字母需求，而無法表示為程式碼中的其他電話字元參考包含連字號 (&)、 數字符號 （#），且所有後面接分號 （;） 所需的電話以十六進位或十進位、 Unicode 數字。</span><span class="sxs-lookup"><span data-stu-id="992a0-253">Other phones of the IPA alphabet need to be represented in code as character references consisting of an ampersand (&), the number sign (#), and a Unicode number for the desired phone in hexadecimal or decimal, all followed by a semicolon (;).</span></span> <span data-ttu-id="992a0-254">例如，schwa (（& s)\#x0259;) 表示`&#x0259;`。</span><span class="sxs-lookup"><span data-stu-id="992a0-254">For example, a schwa (&\#x0259;) would be represented by `&#x0259;`.</span></span>  
  
 <span data-ttu-id="992a0-255">若要加入新的或自訂發音多個字，例如以 express 地區方言，或是將適當的名稱或特定教育或醫療專業領域的詞彙，建置詞典 」，並將它加入<xref:System.Speech.Synthesis.SpeechSynthesizer>使用<xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-255">To add new or custom pronunciations for multiple words, for example to express regional dialects or to add proper names or vocabulary that is specific to an educational or medical discipline, build a lexicon and add it to the <xref:System.Speech.Synthesis.SpeechSynthesizer> using <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-256">下列範例會初始化的新執行個體<xref:System.Speech.Synthesis.PromptBuilder>類別。</span><span class="sxs-lookup"><span data-stu-id="992a0-256">The following example initializes a new instance of the <xref:System.Speech.Synthesis.PromptBuilder> class.</span></span> <span data-ttu-id="992a0-257">然後附加文字字串 「 我的名字 」 執行個體。</span><span class="sxs-lookup"><span data-stu-id="992a0-257">It then appends the text string "My name is" to the instance.</span></span> <span data-ttu-id="992a0-258">最後，它會附加字串，包含正確名稱 」 DuBois 」，並指定發音的名稱。</span><span class="sxs-lookup"><span data-stu-id="992a0-258">Finally, it appends a string containing the proper name "DuBois" and specifies the pronunciation of the name.</span></span>  
  
```csharp  
public void ProperName()  
{  
    PromptBuilder builder = new PromptBuilder();  
    builder.AppendText("My name is");  
  
    // Add a proper name and its pronunciation.  
    builder.AppendTextWithPronunciation("DuBois", "duˈbwɑ");     
}  
```  
  
 <span data-ttu-id="992a0-259">下列標記顯示 SSML 這個<xref:System.Speech.Synthesis.PromptBuilder>物件產生。</span><span class="sxs-lookup"><span data-stu-id="992a0-259">The following markup shows the SSML that this <xref:System.Speech.Synthesis.PromptBuilder> object generates.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-us">  
  My name is <phoneme ph="duˈbwɑ"> DuBois </phoneme>  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContent">
      <MemberSignature Language="C#" Value="public void ClearContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.ClearContent" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearContent();" />
      <MemberSignature Language="F#" Value="member this.ClearContent : unit -&gt; unit" Usage="promptBuilder.ClearContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="992a0-260">從 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件清除內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-260">Clears the content from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PromptBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Speech.Synthesis.PromptBuilder.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="992a0-261">取得或設定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件的文化特性資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-261">Gets or sets the culture information for the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-262"><xref:System.Speech.Synthesis.SpeechSynthesizer>物件將嘗試選取支援所指定的語言已安裝的語音<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>處理提示的屬性。</span><span class="sxs-lookup"><span data-stu-id="992a0-262">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object will attempt to select an installed voice that supports the language specified by the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property to process the prompt.</span></span> <span data-ttu-id="992a0-263">如果找到具有指定之文化特性的語音，它會使用它。</span><span class="sxs-lookup"><span data-stu-id="992a0-263">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="992a0-264">如果找不到與指定的文化特性的語音，就會使用預設語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-264">If a voice with the specified culture cannot be found, the default voice will be used.</span></span>  
  
 <span data-ttu-id="992a0-265">也可能不同區段的內容使用提示字元中指定的文化特性<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>， <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>，和<xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-265">A culture may also be specified within the prompt for discreet sections of content using the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, and <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> methods.</span></span> <span data-ttu-id="992a0-266">指定的內容使用上述方法之一的部分將會覆寫的文化特性<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>屬性時作用中，而<xref:System.Speech.Synthesis.SpeechSynthesizer>將嘗試選取支援所指定的語言已安裝的語音`culture`這個方法的參數。</span><span class="sxs-lookup"><span data-stu-id="992a0-266">A culture specified for a portion of content using one of the above methods will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property while in effect, and the <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter of the method.</span></span>  
  
 <span data-ttu-id="992a0-267">若要正確讀出中所指定的語言的字<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>語音合成 （語音或 TTS） 引擎，支援的語言 屬性，必須先安裝。</span><span class="sxs-lookup"><span data-stu-id="992a0-267">To correctly pronounce words in the language specified by the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="992a0-268">已安裝的 TTS 引擎會呼叫語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-268">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="992a0-269">若要取得特定文化特性語音已安裝相關的資訊，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-269">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="992a0-270">Microsoft Windows 和 System.Speech API 接受所有有效國家 （地區） 語言代碼的值為`culture`。</span><span class="sxs-lookup"><span data-stu-id="992a0-270">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="992a0-271">隨附於 Windows 7 的 TTS 引擎支援下列語言的國家/地區代碼：</span><span class="sxs-lookup"><span data-stu-id="992a0-271">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="992a0-272">EN-US。</span><span class="sxs-lookup"><span data-stu-id="992a0-272">en-US.</span></span> <span data-ttu-id="992a0-273">英文 （美國）</span><span class="sxs-lookup"><span data-stu-id="992a0-273">English (United States)</span></span>  
  
-   <span data-ttu-id="992a0-274">zh-chs 和 CN。</span><span class="sxs-lookup"><span data-stu-id="992a0-274">zh-CN.</span></span> <span data-ttu-id="992a0-275">中文 （中國）</span><span class="sxs-lookup"><span data-stu-id="992a0-275">Chinese (China)</span></span>  
  
-   <span data-ttu-id="992a0-276">zh-chs 和 TW。</span><span class="sxs-lookup"><span data-stu-id="992a0-276">zh-TW.</span></span> <span data-ttu-id="992a0-277">中文 （台灣）</span><span class="sxs-lookup"><span data-stu-id="992a0-277">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="992a0-278">也允許兩個字母的語言代碼，例如"en-us"。</span><span class="sxs-lookup"><span data-stu-id="992a0-278">Two-letter language codes such as "en" are also permitted.</span></span>  <span data-ttu-id="992a0-279">請參閱[語言識別項常數和字串](http://msdn.microsoft.com/library/dd318693\(VS.85\).aspx)如需完整的語言代碼清單。</span><span class="sxs-lookup"><span data-stu-id="992a0-279">See [Language Identifier Constants and Strings](http://msdn.microsoft.com/library/dd318693\(VS.85\).aspx) for a comprehensive list of language codes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndParagraph">
      <MemberSignature Language="C#" Value="public void EndParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndParagraph() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndParagraph();" />
      <MemberSignature Language="F#" Value="member this.EndParagraph : unit -&gt; unit" Usage="promptBuilder.EndParagraph " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="992a0-280">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的段落結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-280">Specifies the end of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-281">長的提示時，可以轉譯更像人類的語音它們分解為句子與段落。</span><span class="sxs-lookup"><span data-stu-id="992a0-281">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span> <span data-ttu-id="992a0-282">如需範例，請參閱 <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-282">See <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSentence">
      <MemberSignature Language="C#" Value="public void EndSentence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSentence() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndSentence" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSentence ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSentence();" />
      <MemberSignature Language="F#" Value="member this.EndSentence : unit -&gt; unit" Usage="promptBuilder.EndSentence " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="992a0-283">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的句子結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-283">Specifies the end of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-284">長的提示時，可以轉譯更像人類的語音它們分解為句子與段落。</span><span class="sxs-lookup"><span data-stu-id="992a0-284">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span> <span data-ttu-id="992a0-285">如需範例，請參閱 <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-285">See <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndStyle">
      <MemberSignature Language="C#" Value="public void EndStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndStyle();" />
      <MemberSignature Language="F#" Value="member this.EndStyle : unit -&gt; unit" Usage="promptBuilder.EndStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="992a0-286">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的樣式結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-286">Specifies the end of a style in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-287"><xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A>方法會停止目前的講話樣式。</span><span class="sxs-lookup"><span data-stu-id="992a0-287">The <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> method stops the current speaking style.</span></span> <span data-ttu-id="992a0-288">講話樣式會還原為作用中之前已設定<xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A>方法起始新的講話樣式。</span><span class="sxs-lookup"><span data-stu-id="992a0-288">The speaking style reverts to the setting that was in effect before the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method initiated a new speaking style.</span></span> <span data-ttu-id="992a0-289">如需範例，請參閱 <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-289">See <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndVoice">
      <MemberSignature Language="C#" Value="public void EndVoice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndVoice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndVoice" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndVoice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndVoice();" />
      <MemberSignature Language="F#" Value="member this.EndVoice : unit -&gt; unit" Usage="promptBuilder.EndVoice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="992a0-290">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的語音使用結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-290">Specifies the end of use of a voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-291"><xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>方法會停止目前的語音使用語音輸出。</span><span class="sxs-lookup"><span data-stu-id="992a0-291">The <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A> method stops the use of the current voice for speech output.</span></span> <span data-ttu-id="992a0-292">語音會還原為作用中之前已設定<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>方法起始新的語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-292">The voice reverts to the setting that was in effect before the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> method initiated a new voice.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PromptBuilder.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Speech.Synthesis.PromptBuilder.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="992a0-293">取得 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 是否為空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-293">Gets whether the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> is empty.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartParagraph">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="992a0-294">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的段落開頭，並選擇性地指定語言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-294">Specifies the start of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object, and optionally specifies a language.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-295">長的提示時，可以轉譯更像人類的語音它們分解為句子與段落。</span><span class="sxs-lookup"><span data-stu-id="992a0-295">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartParagraph">
      <MemberSignature Language="C#" Value="public void StartParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartParagraph() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartParagraph();" />
      <MemberSignature Language="F#" Value="member this.StartParagraph : unit -&gt; unit" Usage="promptBuilder.StartParagraph " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="992a0-296">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的段落開頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-296">Specifies the start of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-297">長的提示時，可以轉譯更像人類的語音它們分解為句子與段落。</span><span class="sxs-lookup"><span data-stu-id="992a0-297">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-298">下列範例會建立<xref:System.Speech.Synthesis.PromptBuilder>物件，將附加的內容，並將內容組織成段落和句子。</span><span class="sxs-lookup"><span data-stu-id="992a0-298">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends content, and organizes the content into paragraphs and sentences.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content as paragraphs and sentences.  
        PromptBuilder parSent = new PromptBuilder();  
        parSent.StartParagraph();  
        parSent.StartSentence();  
        parSent.AppendText("Introducing the sentence element.");  
        parSent.EndSentence();  
        parSent.StartSentence();  
        parSent.AppendText("You can use it to mark individual sentences.");  
        parSent.EndSentence();  
        parSent.EndParagraph();  
        parSent.StartParagraph();  
        parSent.AppendText("Another simple paragraph. Sentence structure in this paragraph" +  
          "is not explicitly marked.");  
        parSent.EndParagraph();  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(parSent);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartParagraph">
      <MemberSignature Language="C#" Value="public void StartParagraph (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartParagraph(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartParagraph (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartParagraph(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.StartParagraph : System.Globalization.CultureInfo -&gt; unit" Usage="promptBuilder.StartParagraph culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="992a0-299">提供特定文化特性的相關資訊，例如語言、文化特性的名稱、書寫系統、使用的行事曆，以及如何格式化日期和排序字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-299">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-300">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中指定文化特性的段落開頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-300">Specifies the start of a paragraph in the specified culture in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-301">長的提示時，可以轉譯更像人類的語音它們分解為句子與段落。</span><span class="sxs-lookup"><span data-stu-id="992a0-301">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 <span data-ttu-id="992a0-302">`culture`段落的參數可能會不同於<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>屬性<xref:System.Speech.Synthesis.PromptBuilder>包含它的物件。</span><span class="sxs-lookup"><span data-stu-id="992a0-302">The `culture` parameter for a paragraph can be different than the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains it.</span></span> <span data-ttu-id="992a0-303">作用中，而值`culture`參數會覆寫<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="992a0-303">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="992a0-304"><xref:System.Speech.Synthesis.SpeechSynthesizer>將嘗試選取支援所指定的語言已安裝的語音`culture`說話段落的參數。</span><span class="sxs-lookup"><span data-stu-id="992a0-304">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the paragraph.</span></span> <span data-ttu-id="992a0-305">如果找到具有指定之文化特性的語音，它會使用它。</span><span class="sxs-lookup"><span data-stu-id="992a0-305">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="992a0-306">如果找不到與指定的文化特性的語音，就會使用預設語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-306">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="992a0-307">若要停止使用所指定的語音<xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>，呼叫<xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-307">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>.</span></span>  
  
 <span data-ttu-id="992a0-308">若要正確讀出中所指定的語言的字`culture`必須安裝參數，語音合成 （語音或 TTS） 引擎，支援的語言。</span><span class="sxs-lookup"><span data-stu-id="992a0-308">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="992a0-309">已安裝的 TTS 引擎會呼叫語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-309">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="992a0-310">若要取得特定文化特性語音已安裝相關的資訊，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-310">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="992a0-311">Microsoft Windows 和 System.Speech API 接受所有有效國家 （地區） 語言代碼的值為`culture`。</span><span class="sxs-lookup"><span data-stu-id="992a0-311">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="992a0-312">隨附於 Windows 7 的 TTS 引擎支援下列語言的國家/地區代碼：</span><span class="sxs-lookup"><span data-stu-id="992a0-312">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="992a0-313">EN-US。</span><span class="sxs-lookup"><span data-stu-id="992a0-313">en-US.</span></span> <span data-ttu-id="992a0-314">英文 （美國）</span><span class="sxs-lookup"><span data-stu-id="992a0-314">English (United States)</span></span>  
  
-   <span data-ttu-id="992a0-315">zh-chs 和 CN。</span><span class="sxs-lookup"><span data-stu-id="992a0-315">zh-CN.</span></span> <span data-ttu-id="992a0-316">中文 （中國）</span><span class="sxs-lookup"><span data-stu-id="992a0-316">Chinese (China)</span></span>  
  
-   <span data-ttu-id="992a0-317">zh-chs 和 TW。</span><span class="sxs-lookup"><span data-stu-id="992a0-317">zh-TW.</span></span> <span data-ttu-id="992a0-318">中文 （台灣）</span><span class="sxs-lookup"><span data-stu-id="992a0-318">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="992a0-319">也允許兩個字母的語言代碼，例如"en-us"。</span><span class="sxs-lookup"><span data-stu-id="992a0-319">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartSentence">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="992a0-320">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的句子開頭，並選擇性地指定語言。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-320">Specifies the start of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object, and optionally specifies a language.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-321">長的提示時，可以轉譯更像人類的語音它們分解為句子與段落。</span><span class="sxs-lookup"><span data-stu-id="992a0-321">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartSentence">
      <MemberSignature Language="C#" Value="public void StartSentence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartSentence() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartSentence" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartSentence ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartSentence();" />
      <MemberSignature Language="F#" Value="member this.StartSentence : unit -&gt; unit" Usage="promptBuilder.StartSentence " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="992a0-322">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的段落開頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-322">Specifies the start of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-323">長的提示時，可以轉譯更像人類的語音它們分解為句子與段落。</span><span class="sxs-lookup"><span data-stu-id="992a0-323">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-324">下列範例會建立<xref:System.Speech.Synthesis.PromptBuilder>物件，將附加的內容，並將內容組織成段落和句子。</span><span class="sxs-lookup"><span data-stu-id="992a0-324">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends content, and organizes the content into paragraphs and sentences.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content as paragraphs and sentences.  
        PromptBuilder parSent = new PromptBuilder();  
        parSent.StartParagraph();  
        parSent.StartSentence();  
        parSent.AppendText("Introducing the sentence element.");  
        parSent.EndSentence();  
        parSent.StartSentence();  
        parSent.AppendText("You can use it to mark individual sentences.");  
        parSent.EndSentence();  
        parSent.EndParagraph();  
        parSent.StartParagraph();  
        parSent.AppendText("Another simple paragraph. Sentence structure in this paragraph" +  
          "is not explicitly marked.");  
        parSent.EndParagraph();  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(parSent);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSentence">
      <MemberSignature Language="C#" Value="public void StartSentence (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartSentence(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartSentence (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartSentence(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.StartSentence : System.Globalization.CultureInfo -&gt; unit" Usage="promptBuilder.StartSentence culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="992a0-325">提供特定文化特性的相關資訊，例如語言、文化特性的名稱、書寫系統、使用的行事曆，以及如何格式化日期和排序字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-325">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-326">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中指定文化特性的句子開頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-326">Specifies the start of a sentence in the specified culture in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-327">長的提示時，可以轉譯更像人類的語音它們分解為句子與段落。</span><span class="sxs-lookup"><span data-stu-id="992a0-327">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 <span data-ttu-id="992a0-328">`culture`句子參數可能會不同於`culture`參數包含句子的段落或<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>屬性<xref:System.Speech.Synthesis.PromptBuilder>物件，其中包含它們。</span><span class="sxs-lookup"><span data-stu-id="992a0-328">The `culture` parameter for a sentence can be different than the `culture` parameter for the paragraph that contains the sentence or the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains them.</span></span>  
  
 <span data-ttu-id="992a0-329">作用中，而值`culture`參數會覆寫<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>屬性和`culture`參數包含句子的段落。</span><span class="sxs-lookup"><span data-stu-id="992a0-329">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property and the `culture` parameter for the paragraph that contains the sentence.</span></span> <span data-ttu-id="992a0-330"><xref:System.Speech.Synthesis.SpeechSynthesizer>將嘗試選取支援所指定的語言已安裝的語音`culture`說話句子的參數。</span><span class="sxs-lookup"><span data-stu-id="992a0-330">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the sentence.</span></span> <span data-ttu-id="992a0-331">如果找到具有指定之文化特性的語音，它會使用它。</span><span class="sxs-lookup"><span data-stu-id="992a0-331">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="992a0-332">如果找不到與指定的文化特性的語音，就會使用預設語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-332">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="992a0-333">若要停止使用所指定的語音<xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>，呼叫<xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-333">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A>.</span></span>  
  
 <span data-ttu-id="992a0-334">若要正確讀出中所指定的語言的字`culture`必須安裝參數，語音合成 （語音或 TTS） 引擎，支援的語言。</span><span class="sxs-lookup"><span data-stu-id="992a0-334">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="992a0-335">已安裝的 TTS 引擎會呼叫語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-335">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="992a0-336">若要取得特定文化特性語音已安裝相關的資訊，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-336">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="992a0-337">Microsoft Windows 和 System.Speech API 接受所有有效國家 （地區） 語言代碼的值為`culture`。</span><span class="sxs-lookup"><span data-stu-id="992a0-337">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="992a0-338">隨附於 Windows 7 的 TTS 引擎支援下列語言的國家/地區代碼：</span><span class="sxs-lookup"><span data-stu-id="992a0-338">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="992a0-339">EN-US。</span><span class="sxs-lookup"><span data-stu-id="992a0-339">en-US.</span></span> <span data-ttu-id="992a0-340">英文 （美國）</span><span class="sxs-lookup"><span data-stu-id="992a0-340">English (United States)</span></span>  
  
-   <span data-ttu-id="992a0-341">zh-chs 和 CN。</span><span class="sxs-lookup"><span data-stu-id="992a0-341">zh-CN.</span></span> <span data-ttu-id="992a0-342">中文 （中國）</span><span class="sxs-lookup"><span data-stu-id="992a0-342">Chinese (China)</span></span>  
  
-   <span data-ttu-id="992a0-343">zh-chs 和 TW。</span><span class="sxs-lookup"><span data-stu-id="992a0-343">zh-TW.</span></span> <span data-ttu-id="992a0-344">中文 （台灣）</span><span class="sxs-lookup"><span data-stu-id="992a0-344">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="992a0-345">也允許兩個字母的語言代碼，例如"en-us"。</span><span class="sxs-lookup"><span data-stu-id="992a0-345">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartStyle">
      <MemberSignature Language="C#" Value="public void StartStyle (System.Speech.Synthesis.PromptStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartStyle(class System.Speech.Synthesis.PromptStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartStyle(System.Speech.Synthesis.PromptStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartStyle (style As PromptStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartStyle(System::Speech::Synthesis::PromptStyle ^ style);" />
      <MemberSignature Language="F#" Value="member this.StartStyle : System.Speech.Synthesis.PromptStyle -&gt; unit" Usage="promptBuilder.StartStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Speech.Synthesis.PromptStyle" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="992a0-346">要起始的樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-346">The style to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-347">指定 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的樣式開頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-347">Specifies the start of a style in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-348"><xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A>方法會採用<xref:System.Speech.Synthesis.PromptStyle>物件做為其引數。</span><span class="sxs-lookup"><span data-stu-id="992a0-348">The <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method takes a <xref:System.Speech.Synthesis.PromptStyle> object as its argument.</span></span> <span data-ttu-id="992a0-349">您可以使用的屬性<xref:System.Speech.Synthesis.PromptStyle>設定強調、 說話速率及音量 （聲音大小） 要套用至語音輸出樣式生效時的物件。</span><span class="sxs-lookup"><span data-stu-id="992a0-349">You can use the properties of the <xref:System.Speech.Synthesis.PromptStyle> object to set the emphasis, speaking rate, and volume (loudness) to apply to speech output while the style is in effect.</span></span> <span data-ttu-id="992a0-350">若要停止使用目前的樣式，請呼叫<xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-350">To stop using the current style, call the <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> method.</span></span>  
  
> [!NOTE]
>  -   <span data-ttu-id="992a0-351">在 Windows 中的語音合成引擎不支援這一次的強調參數。</span><span class="sxs-lookup"><span data-stu-id="992a0-351">The speech synthesis engines in Windows do not support the emphasis parameter at this time.</span></span> <span data-ttu-id="992a0-352">設定強調參數的值將會產生任何可發出聲音的變更合成的語音輸出中。</span><span class="sxs-lookup"><span data-stu-id="992a0-352">Setting values for the emphasis parameter will produce no audible change in the synthesized speech output.</span></span>  
> -   <span data-ttu-id="992a0-353"><xref:System.Speech.Synthesis.PromptVolume.Default>設定<xref:System.Speech.Synthesis.PromptVolume>是相同的完整磁碟區做為<xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>。</span><span class="sxs-lookup"><span data-stu-id="992a0-353">The <xref:System.Speech.Synthesis.PromptVolume.Default> setting for <xref:System.Speech.Synthesis.PromptVolume> is full volume, which is the same as <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span></span> <span data-ttu-id="992a0-354">其他設定會減少相對於完整磁碟區的語音輸出的磁碟區。</span><span class="sxs-lookup"><span data-stu-id="992a0-354">The other settings decrease the volume of speech output relative to full volume.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-355">下列範例會建立<xref:System.Speech.Synthesis.PromptBuilder>物件，並將文字字串。</span><span class="sxs-lookup"><span data-stu-id="992a0-355">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends text strings.</span></span> <span data-ttu-id="992a0-356">此範例會使用<xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A>方法，以指定緩慢說話速率要加入的字串列舉出訂單的內容。</span><span class="sxs-lookup"><span data-stu-id="992a0-356">The example uses the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method to specify a slow speaking rate for the string being added, which enumerates the contents of an order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder style = new PromptBuilder();  
        style.AppendText("Your order for");  
        style.StartStyle(new PromptStyle(PromptRate.Slow));  
        style.AppendText("one kitchen sink and one faucet");  
        style.EndStyle();  
        style.AppendText("has been confirmed.");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(style);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartVoice">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="992a0-357">指示合成器變更 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的語音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-357">Instructs the synthesizer to change the voice in a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-358">語音表示已安裝的 TTS 引擎。</span><span class="sxs-lookup"><span data-stu-id="992a0-358">A voice represents an installed TTS engine.</span></span> <span data-ttu-id="992a0-359">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別取得的名稱和屬性的安裝，您可以選取文字轉換語音 (TTS) 語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-359">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="992a0-360">當應用程式呼叫<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>，此方法會驗證每個在登錄中找到的語音符合某些最小的準則。</span><span class="sxs-lookup"><span data-stu-id="992a0-360">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="992a0-361">無法驗證任何語音<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>設定其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性`False`。</span><span class="sxs-lookup"><span data-stu-id="992a0-361">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="992a0-362">應用程式無法呼叫任何<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>方法上的語音其<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性是`False`。</span><span class="sxs-lookup"><span data-stu-id="992a0-362">An application cannot call any of the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods on a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="992a0-363">一般而言，應用程式將不會設定語音<xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="992a0-363">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : System.Globalization.CultureInfo -&gt; unit" Usage="promptBuilder.StartVoice culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="992a0-364">提供特定文化特性的相關資訊，例如語言、文化特性的名稱、書寫系統、使用的行事曆，以及如何格式化日期和排序字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-364">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-365">指示合成器變更 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的語音，並指定要使用之語音的文化特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-365">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the culture of the voice to use.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-366">`culture`參數<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>可能會不同於<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>屬性<xref:System.Speech.Synthesis.PromptBuilder>包含它的物件。</span><span class="sxs-lookup"><span data-stu-id="992a0-366">The `culture` parameter for <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> can be different than the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains it.</span></span>  <span data-ttu-id="992a0-367">作用中，而值`culture`參數會覆寫<xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="992a0-367">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="992a0-368"><xref:System.Speech.Synthesis.SpeechSynthesizer>將嘗試選取支援所指定的語言已安裝的語音`culture`說出內容加上參數<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>和<xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-368">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the content enclosed by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> and <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span> <span data-ttu-id="992a0-369">如果找到具有指定之文化特性的語音，它會使用它。</span><span class="sxs-lookup"><span data-stu-id="992a0-369">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="992a0-370">如果找不到與指定的文化特性的語音，就會使用預設語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-370">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="992a0-371">若要停止使用所指定的語音<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>，呼叫<xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-371">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 <span data-ttu-id="992a0-372">若要正確讀出中所指定的語言的字`culture`必須安裝參數，語音合成 （語音或 TTS） 引擎，支援的語言。</span><span class="sxs-lookup"><span data-stu-id="992a0-372">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="992a0-373">已安裝的 TTS 引擎會呼叫語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-373">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="992a0-374">若要取得特定文化特性語音已安裝相關的資訊，請使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-374">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="992a0-375">Microsoft Windows 和 System.Speech API 接受所有有效國家 （地區） 語言代碼的值為`culture`。</span><span class="sxs-lookup"><span data-stu-id="992a0-375">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="992a0-376">隨附於 Windows 7 的 TTS 引擎支援下列語言的國家/地區代碼：</span><span class="sxs-lookup"><span data-stu-id="992a0-376">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="992a0-377">EN-US。</span><span class="sxs-lookup"><span data-stu-id="992a0-377">en-US.</span></span> <span data-ttu-id="992a0-378">英文 （美國）</span><span class="sxs-lookup"><span data-stu-id="992a0-378">English (United States)</span></span>  
  
-   <span data-ttu-id="992a0-379">zh-chs 和 CN。</span><span class="sxs-lookup"><span data-stu-id="992a0-379">zh-CN.</span></span> <span data-ttu-id="992a0-380">中文 （中國）</span><span class="sxs-lookup"><span data-stu-id="992a0-380">Chinese (China)</span></span>  
  
-   <span data-ttu-id="992a0-381">zh-chs 和 TW。</span><span class="sxs-lookup"><span data-stu-id="992a0-381">zh-TW.</span></span> <span data-ttu-id="992a0-382">中文 （台灣）</span><span class="sxs-lookup"><span data-stu-id="992a0-382">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="992a0-383">也允許兩個字母的語言代碼，例如"en-us"。</span><span class="sxs-lookup"><span data-stu-id="992a0-383">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : System.Speech.Synthesis.VoiceGender -&gt; unit" Usage="promptBuilder.StartVoice gender" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="992a0-384">要使用之語音的性別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-384">The gender of the voice to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-385">指示合成器變更 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的語音，並指定要使用之語音的性別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-385">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the gender of the voice to use.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-386">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別取得的名稱和屬性的安裝，您可以選取文字轉換語音 (TTS) 語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-386">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="992a0-387">若要停止使用所指定的語音<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>呼叫<xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-387">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceInfo voice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(class System.Speech.Synthesis.VoiceInfo voice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (voice As VoiceInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceInfo ^ voice);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : System.Speech.Synthesis.VoiceInfo -&gt; unit" Usage="promptBuilder.StartVoice voice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="voice" Type="System.Speech.Synthesis.VoiceInfo" />
      </Parameters>
      <Docs>
        <param name="voice">
          <span data-ttu-id="992a0-388">要使用之語音的準則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-388">The criteria for the voice to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-389">指示合成器變更 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的語音，並指定新語音的準則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-389">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies criteria for the new voice.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-390">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別取得的名稱和屬性的安裝，您可以選取文字轉換語音 (TTS) 語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-390">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="992a0-391">若要停止使用所指定的語音<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>呼叫<xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-391">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : string -&gt; unit" Usage="promptBuilder.StartVoice name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="992a0-392">要使用之語音的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-392">The name of the voice to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-393">指示合成器變更 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的語音，並指定要使用之語音的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-393">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the name of the voice to use.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-394">若要取得的語音已安裝的資訊，請使用其中<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="992a0-394">To get information about which voices are installed, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods.</span></span>  
  
 <span data-ttu-id="992a0-395">若要停止使用所指定的語音<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>呼叫<xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-395">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge -&gt; unit" Usage="promptBuilder.StartVoice (gender, age)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="992a0-396">要使用之新語音的性別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-396">The gender of the new voice to use.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="992a0-397">要使用之語音的年齡。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-397">The age of the voice to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-398">指示合成器變更 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的語音，並指定新語音的性別和年齡。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-398">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the gender and the age of the new voice.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-399">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別取得的名稱和屬性的安裝，您可以選取文字轉換語音 (TTS) 語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-399">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="992a0-400">若要停止使用所指定的語音<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>呼叫<xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-400">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="F#" Value="member this.StartVoice : System.Speech.Synthesis.VoiceGender * System.Speech.Synthesis.VoiceAge * int -&gt; unit" Usage="promptBuilder.StartVoice (gender, age, voiceAlternate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender">
          <span data-ttu-id="992a0-401">要使用之語音的性別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-401">The gender of the voice to use.</span>
          </span>
        </param>
        <param name="age">
          <span data-ttu-id="992a0-402">要使用之語音的年齡。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-402">The age of the voice to use.</span>
          </span>
        </param>
        <param name="voiceAlternate">
          <span data-ttu-id="992a0-403">整數，當一個以上的語音符合 <c>gender</c> 和 <c>age</c> 參數時，這個整數會指定慣用語音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-403">An integer that specifies a preferred voice when more than one voice matches the <c>gender</c> and <c>age</c> parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="992a0-404">指示合成器變更 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件中的語音，並指定其性別、年齡，以及符合指定性別和年齡的慣用語音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-404">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies its gender, age, and a preferred voice that matches the specified gender and age.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-405">語音合成引擎會計算的符合項目它尋找指定的參數，並傳回語音，當計數等於`voiceAlternate`參數。</span><span class="sxs-lookup"><span data-stu-id="992a0-405">A speech synthesis engine counts the matches it finds for the specified parameters, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="992a0-406">使用<xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>方法和<xref:System.Speech.Synthesis.VoiceInfo>類別取得的名稱和屬性的安裝，您可以選取文字轉換語音 (TTS) 語音。</span><span class="sxs-lookup"><span data-stu-id="992a0-406">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="992a0-407">若要停止使用所指定的語音<xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>呼叫<xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>。</span><span class="sxs-lookup"><span data-stu-id="992a0-407">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public string ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXml();" />
      <MemberSignature Language="F#" Value="member this.ToXml : unit -&gt; string" Usage="promptBuilder.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="992a0-408">傳回從 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件所產生的 SSML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-408">Returns the SSML generated from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="992a0-409">以單行形式傳回 <see cref="T:System.Speech.Synthesis.PromptBuilder" /> 物件所產生的 SSML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="992a0-409">Returns the SSML generated from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object as a single line.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="992a0-410"><xref:System.Speech.Synthesis.PromptBuilder.ToXml%2A>方法不會嘗試格式化以任何方式傳回的 SSML。</span><span class="sxs-lookup"><span data-stu-id="992a0-410">The <xref:System.Speech.Synthesis.PromptBuilder.ToXml%2A> method makes no attempt to format the returned SSML in any way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="992a0-411">下列範例會建立<xref:System.Speech.Synthesis.PromptBuilder>物件，附加文字，，然後將 SSML 相當於提示寫入主控台前，在提示字元的內容。</span><span class="sxs-lookup"><span data-stu-id="992a0-411">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends text, and then writes the SSML equivalent of the prompt to the console before speaking the contents of the prompt.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder style = new PromptBuilder();  
        style.AppendText("Your order for");  
        style.StartStyle(new PromptStyle(PromptRate.Slow));  
        style.AppendText("one kitchen sink and one faucet");  
        style.EndStyle();  
        style.AppendText("has been confirmed.");  
  
        // Write the contents of the PromptBuilder object to the console as  
        // an SSML-compatible XML file.  
        string myXml = style.ToXml();  
        Console.WriteLine("This is the SSML equivalent of the PromptBuilder: \n\n" + myXml);  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(style);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>