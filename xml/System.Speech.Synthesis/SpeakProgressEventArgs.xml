<Type Name="SpeakProgressEventArgs" FullName="System.Speech.Synthesis.SpeakProgressEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6f5a146867d4dbd7adf493e2df44878f559c9c62" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39928836" /></Metadata><TypeSignature Language="C#" Value="public class SpeakProgressEventArgs : System.Speech.Synthesis.PromptEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SpeakProgressEventArgs extends System.Speech.Synthesis.PromptEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.SpeakProgressEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SpeakProgressEventArgs&#xA;Inherits PromptEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeakProgressEventArgs : System::Speech::Synthesis::PromptEventArgs" />
  <TypeSignature Language="F#" Value="type SpeakProgressEventArgs = class&#xA;    inherit PromptEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Synthesis.PromptEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="43861-101">從 <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" /> 事件傳回資料。</span><span class="sxs-lookup"><span data-stu-id="43861-101">Returns data from the <see cref="E:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43861-102">執行個體<xref:System.Speech.Synthesis.SpeakProgressEventArgs>時，會建立<xref:System.Speech.Synthesis.SpeechSynthesizer>物件引發<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>事件。</span><span class="sxs-lookup"><span data-stu-id="43861-102">An instance of <xref:System.Speech.Synthesis.SpeakProgressEventArgs> is created when the <xref:System.Speech.Synthesis.SpeechSynthesizer> object raises the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event.</span></span> <span data-ttu-id="43861-103"><xref:System.Speech.Synthesis.SpeechSynthesizer>引發這個事件，它都在提示字元中使用的任何每個新 word <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>， <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>，或<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="43861-103">The <xref:System.Speech.Synthesis.SpeechSynthesizer> raises this event for each new word that it speaks in a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="43861-104">傳回的資料是以基礎上語音合成標記語言 (SSML) 的程式碼會產生。</span><span class="sxs-lookup"><span data-stu-id="43861-104">The returned data is based on the Speech Synthesis Markup Language (SSML) that the code generates.</span></span> <span data-ttu-id="43861-105">針對傳回的值<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A>包含空格的字元和程式碼所產生的 SSML 標記的內容。</span><span class="sxs-lookup"><span data-stu-id="43861-105">The values returned for <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> include spaces and the characters and contents of the SSML tags generated by the code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43861-106">下列範例示範的資訊，可從<xref:System.Speech.Synthesis.SpeakProgressEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="43861-106">The following example demonstrates the information that is available from <xref:System.Speech.Synthesis.SpeakProgressEventArgs>.</span></span> <span data-ttu-id="43861-107">請注意如何<xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>， <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>， <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>，以及<xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A>方法會影響<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A>依其新增\*\* \<p >**， \*\*  \< /p >**， \*\* \<s >**，並** \</s >\*\* 產生的 SSML 標記。</span><span class="sxs-lookup"><span data-stu-id="43861-107">Note how the <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>, <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>, and <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A> methods affect the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> by their addition of **\<p>**, **\</p>**, **\<s>**, and **\</s>** tags to the generated SSML.</span></span> <span data-ttu-id="43861-108">此外，"30%"，其中每個字組說出此數字的字串 （30%） 的輸出中有兩個項目。</span><span class="sxs-lookup"><span data-stu-id="43861-108">Also, there are two entries in the output for "30%", one for each word to speak this number string (thirty percent).</span></span> <span data-ttu-id="43861-109"><xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A>和<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A>都是相同的每個項目，表示字元"30%。</span><span class="sxs-lookup"><span data-stu-id="43861-109">The <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> and <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> are the same for each entry and represent the characters "30%.</span></span> <span data-ttu-id="43861-110">不過，<xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A>會變更以反映讀出的文字"30"和"percent"的<xref:System.Speech.Synthesis.SpeechSynthesizer>。</span><span class="sxs-lookup"><span data-stu-id="43861-110">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A> changes to reflect the speaking of the words "thirty" and "percent" by the <xref:System.Speech.Synthesis.SpeechSynthesizer>.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt containing a paragraph and two sentences.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.StartParagraph();  
        builder.StartSentence();  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.EndSentence();  
        builder.StartSentence();  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.EndSentence();  
        builder.EndParagraph();  
  
        // Add a handler for the SpeakProgress event.  
        synth.SpeakProgress +=  
          new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write each word and its character postion to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine("CharPos: {0}   CharCount: {1}   AudioPos: {2}    \"{3}\"",  
        e.CharacterPosition, e.CharacterCount, e.AudioPosition, e.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AudioPosition">
      <MemberSignature Language="C#" Value="public TimeSpan AudioPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan AudioPosition" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AudioPosition As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan AudioPosition { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.AudioPosition : TimeSpan" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43861-111">取得事件的音訊位置。</span><span class="sxs-lookup"><span data-stu-id="43861-111">Gets the audio position of the event.</span></span></summary>
        <value><span data-ttu-id="43861-112">傳回在音訊輸出資料流中的事件位置。</span><span class="sxs-lookup"><span data-stu-id="43861-112">Returns the position of the event in the audio output stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43861-113"><xref:System.Speech.Synthesis.SpeechSynthesizer>正規化對應方式要讀出數字的數字。</span><span class="sxs-lookup"><span data-stu-id="43861-113">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="43861-114">比方說，合成讀出數字"4003 」 以 「 四個一千個三"。</span><span class="sxs-lookup"><span data-stu-id="43861-114">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="43861-115">它會引發<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>說出口的的話，並傳回每個事件<xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A>每個字組。</span><span class="sxs-lookup"><span data-stu-id="43861-115">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the spoken words, and returns the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.AudioPosition%2A> for each word.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterCount">
      <MemberSignature Language="C#" Value="public int CharacterCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CharacterCount" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharacterCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CharacterCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CharacterCount : int" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43861-116">取得在引發事件之前剛說出的文字中的字元數。</span><span class="sxs-lookup"><span data-stu-id="43861-116">Gets the number of characters in the word that was spoken just before the event was raised.</span></span></summary>
        <value><span data-ttu-id="43861-117">傳回在引發事件之前剛說出的文字中的字元數。</span><span class="sxs-lookup"><span data-stu-id="43861-117">Returns the number of characters in the word that was spoken just before the event was raised.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43861-118"><xref:System.Speech.Synthesis.SpeechSynthesizer>正規化對應方式要讀出數字的數字。</span><span class="sxs-lookup"><span data-stu-id="43861-118">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="43861-119">比方說，合成讀出數字"4003 」 以 「 四個一千個三"。</span><span class="sxs-lookup"><span data-stu-id="43861-119">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="43861-120">它會引發<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>讀出的文字的每個事件。</span><span class="sxs-lookup"><span data-stu-id="43861-120">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the spoken words.</span></span> <span data-ttu-id="43861-121">不過，<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A>的三個單字的每個屬性都是相同。</span><span class="sxs-lookup"><span data-stu-id="43861-121">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterCount%2A> property for each of the three words is the same.</span></span> <span data-ttu-id="43861-122">在此情況下，它是中的字元計數中的數字 」 4003"文字的提示字元中，四個。</span><span class="sxs-lookup"><span data-stu-id="43861-122">It is the count of the characters in the number "4003" in the text of the prompt, in this case, four.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterPosition">
      <MemberSignature Language="C#" Value="public int CharacterPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CharacterPosition" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CharacterPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CharacterPosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CharacterPosition : int" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43861-123">取得從提示開頭到剛說出的文字的第一個字母之前位置的字元和空格數。</span><span class="sxs-lookup"><span data-stu-id="43861-123">Gets the number of characters and spaces from the beginning of the prompt to the position before the first letter of the word that was just spoken.</span></span></summary>
        <value><span data-ttu-id="43861-124">傳回從提示開頭到剛說出的文字的第一個字母之前位置的字元和空格數。</span><span class="sxs-lookup"><span data-stu-id="43861-124">Returns the number of characters and spaces from the beginning of the prompt to the position before the first letter of the word that was just spoken.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43861-125"><xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A>納入 XML 標記，包括其封入方括號中的字元計數。</span><span class="sxs-lookup"><span data-stu-id="43861-125">The <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> includes the count for characters in XML tags, including their enclosing brackets.</span></span> <span data-ttu-id="43861-126">當使用任何<xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>， <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>，或<xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>方法，將內容新增至包含的開頭和結尾的 SSML 提示`speak`項目。</span><span class="sxs-lookup"><span data-stu-id="43861-126">When using any of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> methods, the contents are added to an SSML prompt that includes the opening and closing `speak` elements.</span></span> <span data-ttu-id="43861-127">開頭`speak`項目將加上位移的 82 字元和空格來<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A>的所有文字和提示字元中的字母。</span><span class="sxs-lookup"><span data-stu-id="43861-127">The opening `speak` element adds an offset of 82 characters and spaces to the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the all the words and letters in the prompt.</span></span> <span data-ttu-id="43861-128">例如，在下列程式碼片段，<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A>的第一個字，"this"是 82。</span><span class="sxs-lookup"><span data-stu-id="43861-128">For example, in the following snippet, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the first word, "this", is 82.</span></span>  
  
```csharp  
builder.AppendText("This is a test");  
Synthesizer.Speak(builder);  
```  
  
 <span data-ttu-id="43861-129">在上述範例中<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A>"test"這個字是 92。</span><span class="sxs-lookup"><span data-stu-id="43861-129">In the above example the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the word "test" is 92.</span></span> <span data-ttu-id="43861-130">在下列程式碼片段<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A>單字的 「 測試 」 為 23 個字元更高版本 (115) 因為開頭**\<韻律字幅 ="high">** 標記前面包含 23 個字元和空格 （兩個逸出字元"\\」 不會計算)。</span><span class="sxs-lookup"><span data-stu-id="43861-130">In the following snippet the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the word "test" is 23 characters higher (115) because the opening **\<prosody pitch="high">**  tag that precedes it contains 23 characters and spaces (the two escape characters "\\" are not counted).</span></span>  
  
```csharp  
builder.AppendSsmlMarkup("This is a <prosody pitch=\"high\"> test </prosody>.");   
Synthesizer.Speak(builder);  
```  
  
 <span data-ttu-id="43861-131">如果您使用<xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>方法將內容新增到提示字元中，藉由指定的檔案中，開啟`xml`宣告和`speak`檔案中的項目無法使用或計算。</span><span class="sxs-lookup"><span data-stu-id="43861-131">If you use the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods to add content to a prompt by specifying a file, the opening `xml` declaration and `speak` elements in the file are not used or counted.</span></span> <span data-ttu-id="43861-132">在開啟之後，檔案的第一個字元`speak`標記將會位於 82，如果它是在提示字元中的第一個內容。</span><span class="sxs-lookup"><span data-stu-id="43861-132">The first character in the file after the opening `speak` tag will be at position 82 if it is the first content in the prompt.</span></span>  
  
 <span data-ttu-id="43861-133">相較之下，字串參數<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>方法不會不會新增到 SSML 提示之前要傳達。</span><span class="sxs-lookup"><span data-stu-id="43861-133">By contrast, the string parameter of a <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method does not get added to an SSML prompt before being spoken.</span></span> <span data-ttu-id="43861-134">因此，<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A>的第一個字，"this"，在下列程式碼片段是零。</span><span class="sxs-lookup"><span data-stu-id="43861-134">Therefore, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> of the first word, "this", in the following snippet is zero.</span></span>  
  
```csharp  
Synthesizer.Speak("This is a test.");  
```  
  
 <span data-ttu-id="43861-135"><xref:System.Speech.Synthesis.SpeechSynthesizer>正規化對應方式要讀出數字的數字。</span><span class="sxs-lookup"><span data-stu-id="43861-135">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="43861-136">比方說，合成讀出數字"4003 」 以 「 四個一千個三"。</span><span class="sxs-lookup"><span data-stu-id="43861-136">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="43861-137">它會引發<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>每三個口說字詞的事件。</span><span class="sxs-lookup"><span data-stu-id="43861-137">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the three spoken words.</span></span> <span data-ttu-id="43861-138">不過，<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A>的三個單字的每個屬性都是相同。</span><span class="sxs-lookup"><span data-stu-id="43861-138">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> property for each of the three words is the same.</span></span> <span data-ttu-id="43861-139">它是中的數字 」 4003"文字的提示字元的第一個字元前面的位置。</span><span class="sxs-lookup"><span data-stu-id="43861-139">It is the position before the first character of the number "4003" in the text of the prompt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43861-140">下列範例會建立<xref:System.Speech.Synthesis.PromptBuilder>，並將附加的 XML 檔案使用的 SSML 內容<xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="43861-140">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> and appends the SSML contents of an XML file using <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="43861-141">範例會輸出到播放 WAV 檔案的語音。</span><span class="sxs-lookup"><span data-stu-id="43861-141">The example outputs speech to a WAV file for playback.</span></span> <span data-ttu-id="43861-142">包含 SSML 的 XML 檔案的內容會出現下方的程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="43861-142">The contents of the XML file containing the SSML appear below the code example.</span></span>  
  
```csharp  
using System;  
using System.Xml;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a path to the file that contains SSML.  
        string weatherFile = Path.GetFullPath("c:\\test\\Weather.ssml");  
  
        // Create an XML Reader from the file, create a PromptBuilder and   
        // append the XmlReader.  
        PromptBuilder builder = new PromptBuilder();  
  
        if (File.Exists(weatherFile))  
        {  
          XmlReader reader = XmlReader.Create(weatherFile);  
          builder.AppendSsml(reader);  
          reader.Close();  
        }  
  
        // Add a handler for the SpeakProgress event.  
        synth.SpeakProgress +=  
          new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write each word and its character position to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine("Speak progress: {0} {1}",  
        e.CharacterPosition, e.Text);  
    }  
  }  
}  
  
```  
  
```xml  
<!-- The following are the contents of the file Weather.ssml.   
Note that because of the <p> tag and the space that follows it,   
that the character position of the first word "The" will be 86. -->  
  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <p> The weather forecast for today is partly cloudy with   
some sun breaks. </p>  
  
  <break strength="medium" />  
  
  <p> Tonight's weather will be cloudy with a 30% chance of   
showers. </p>  
  
</speak>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.SpeakProgressEventArgs.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Speech.Synthesis.SpeakProgressEventArgs.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43861-143">正好在引發事件時所讀出的文字。</span><span class="sxs-lookup"><span data-stu-id="43861-143">The text that was just spoken when the event was raised.</span></span></summary>
        <value><span data-ttu-id="43861-144">傳回正好在引發事件時所讀出的文字。</span><span class="sxs-lookup"><span data-stu-id="43861-144">Returns the text that was just spoken when the event was raised.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43861-145"><xref:System.Speech.Synthesis.SpeechSynthesizer>正規化對應方式要讀出數字的數字。</span><span class="sxs-lookup"><span data-stu-id="43861-145">The <xref:System.Speech.Synthesis.SpeechSynthesizer> normalizes numbers to the words that correspond to how the number will be spoken.</span></span> <span data-ttu-id="43861-146">比方說，合成讀出數字"4003 」 以 「 四個一千個三"。</span><span class="sxs-lookup"><span data-stu-id="43861-146">For example, the synthesizer speaks the number "4003" as "four thousand three".</span></span> <span data-ttu-id="43861-147">它會引發<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>讀出的文字的每個事件。</span><span class="sxs-lookup"><span data-stu-id="43861-147">It raises a <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event for each of the spoken words.</span></span> <span data-ttu-id="43861-148">不過，<xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A>的三個單字的每個屬性都是相同。</span><span class="sxs-lookup"><span data-stu-id="43861-148">However, the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A> property for each of the three words is the same.</span></span> <span data-ttu-id="43861-149">它是從提示字元的文字"4003 」。</span><span class="sxs-lookup"><span data-stu-id="43861-149">It is the text "4003" from the prompt.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43861-150">下列範例說明如何<xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress>事件報告<xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A>和<xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A>包含數字的字串屬性。</span><span class="sxs-lookup"><span data-stu-id="43861-150">The following example illustrates the how the <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakProgress> event reports the <xref:System.Speech.Synthesis.SpeakProgressEventArgs.CharacterPosition%2A> and <xref:System.Speech.Synthesis.SpeakProgressEventArgs.Text%2A> properties for strings that contain numbers.</span></span>  
  
```csharp  
using System;  
using System.Xml;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create an XML Reader from the file, create a PromptBuilder and   
        // append the XmlReader.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("4003");  
  
        // Add a handler for the SpeakProgress event.  
        synth.SpeakProgress +=  
          new EventHandler<SpeakProgressEventArgs>(synth_SpeakProgress);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write each word and its character position to the console.  
    static void synth_SpeakProgress(object sender, SpeakProgressEventArgs e)  
    {  
      Console.WriteLine("Speak progress -    Character position:  {0}    Text:  {1}",  
        e.CharacterPosition, e.Text);  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>