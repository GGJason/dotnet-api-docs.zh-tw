<Type Name="BindingBase" FullName="System.Windows.Data.BindingBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8ae5e1af86693b71cb8941b8cc1b0912429b6b12" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36564611" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BindingBase : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BindingBase extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingBase&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingBase abstract : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type BindingBase = class&#xA;    inherit MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="51126-101">定義 <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.PriorityBinding" /> 和 <see cref="T:System.Windows.Data.MultiBinding" /> 類別的通用特性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="51126-101">Defines the common characteristics of the <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.PriorityBinding" />, and <see cref="T:System.Windows.Data.MultiBinding" /> classes.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51126-102">因為<xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType>方法密封格式，自訂繫結類別衍生自<xref:System.Windows.Data.BindingBase>將無法正常為[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]標記延伸。</span><span class="sxs-lookup"><span data-stu-id="51126-102">Because the <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> method is sealed, a custom binding class that derives from <xref:System.Windows.Data.BindingBase> will not function correctly as a [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] markup extension.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindingGroupName">
      <MemberSignature Language="C#" Value="public string BindingGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingGroupName : string with get, set" Usage="System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51126-103">取得或設定這個繫結所屬之 <see cref="T:System.Windows.Data.BindingGroup" /> 的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-103">Gets or sets the name of the <see cref="T:System.Windows.Data.BindingGroup" /> to which this binding belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51126-104">這個繫結所屬之 <see cref="T:System.Windows.Data.BindingGroup" /> 的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-104">The name of the <see cref="T:System.Windows.Data.BindingGroup" /> to which this binding belongs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51126-105">如果<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>未設定，繫結所屬<xref:System.Windows.Data.BindingGroup>只有當繫結的來源和<xref:System.Windows.FrameworkElement.DataContext%2A>有父項目的<xref:System.Windows.Data.BindingGroup>是相同的物件。</span><span class="sxs-lookup"><span data-stu-id="51126-105">If <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is not set, the binding belongs to a <xref:System.Windows.Data.BindingGroup> only if the binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> are the same object.</span></span>  
  
 <span data-ttu-id="51126-106">如果<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>設為值，繫結所屬<xref:System.Windows.Data.BindingGroup>如果下列條件成立：</span><span class="sxs-lookup"><span data-stu-id="51126-106">If <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is set to a value, the binding belongs to a <xref:System.Windows.Data.BindingGroup> if the following conditions are true:</span></span>  
  
-   <span data-ttu-id="51126-107"><xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>相等。</span><span class="sxs-lookup"><span data-stu-id="51126-107">The <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> are equal.</span></span>  
  
-   <span data-ttu-id="51126-108"><xref:System.Windows.Data.BindingGroup>所屬之父項目的繫結的目標項目。</span><span class="sxs-lookup"><span data-stu-id="51126-108">The <xref:System.Windows.Data.BindingGroup> belongs to a parent element of the binding's target element.</span></span>  
  
 <span data-ttu-id="51126-109">如果<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>設`null`，繫結不屬於<xref:System.Windows.Data.BindingGroup>。</span><span class="sxs-lookup"><span data-stu-id="51126-109">If <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is set to `null`, the binding is never a part of a <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 <span data-ttu-id="51126-110">您可以包含有不同的來源的繫結<xref:System.Windows.FrameworkElement.DataContext%2A>有父項目的<xref:System.Windows.Data.BindingGroup>藉由設定<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>為相同的值繫結的屬性。</span><span class="sxs-lookup"><span data-stu-id="51126-110">You can include bindings that have a source that is different from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to the same value.</span></span>  <span data-ttu-id="51126-111">您可以排除具有相同的來源繫結<xref:System.Windows.FrameworkElement.DataContext%2A>有父項目的<xref:System.Windows.Data.BindingGroup>藉由設定<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>繫結至不同的值的屬性。</span><span class="sxs-lookup"><span data-stu-id="51126-111">You can exclude bindings that have the same source as <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to different values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51126-112">下列範例是應用程式會檢查使用者是否已設定為相等的值的兩個物件的屬性的一部分。</span><span class="sxs-lookup"><span data-stu-id="51126-112">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="51126-113">第一個範例會建立兩個<xref:System.Windows.Controls.TextBox>控制項，其中每一個都是資料繫結至不同的來源： 第一個繫結<xref:System.Windows.Controls.TextBox>屬於<xref:System.Windows.Data.BindingGroup>因為<xref:System.Windows.Controls.TextBox>繼承<xref:System.Windows.FrameworkElement.DataContext%2A>和<xref:System.Windows.Data.BindingGroup>從其父代 <xref:System.Windows.Controls.StackPanel></span><span class="sxs-lookup"><span data-stu-id="51126-113">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to a different source: The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel></span></span>  
  
 <span data-ttu-id="51126-114">第二個繫結<xref:System.Windows.Controls.TextBox>屬於<xref:System.Windows.Data.BindingGroup>因為<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>的<xref:System.Windows.Data.Binding>都設定為`bindingGroup`。</span><span class="sxs-lookup"><span data-stu-id="51126-114">The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="51126-115">下列範例所示<xref:System.Windows.Controls.ValidationRule>先前範例所使用。</span><span class="sxs-lookup"><span data-stu-id="51126-115">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span>  <span data-ttu-id="51126-116">在<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法，此範例會取得每個來源物件的<xref:System.Windows.Data.BindingGroup>，並檢查之物件的屬性是否相等。</span><span class="sxs-lookup"><span data-stu-id="51126-116">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delay">
      <MemberSignature Language="C#" Value="public int Delay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.Delay" />
      <MemberSignature Language="VB.NET" Value="Public Property Delay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Delay : int with get, set" Usage="System.Windows.Data.BindingBase.Delay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51126-117">在目標的值變更之後，取得或設定更新繫結來源之前等待的時間長度 (以毫秒為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-117">Gets or sets the amount of time, in milliseconds, to wait before updating the binding source after the value on the target changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51126-118">再更新繫結來源前的等候時間長度，以毫秒計算。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-118">The amount of time, in milliseconds, to wait before updating the binding source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51126-119">當您使用的繫結目標屬性的值變更時，更新繫結來源時，您將設定<xref:System.Windows.Data.Binding.Mode%2A>屬性<xref:System.Windows.Data.BindingMode.TwoWay>和<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>至<xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>。</span><span class="sxs-lookup"><span data-stu-id="51126-119">When you use a binding to update the binding source whenever the value of the property changes on the target, you set the <xref:System.Windows.Data.Binding.Mode%2A> property to <xref:System.Windows.Data.BindingMode.TwoWay> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> to <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  <span data-ttu-id="51126-120">在此情況下，您可以使用<xref:System.Windows.Data.BindingBase.Delay%2A>屬性來指定是否應該是變更目標時，會在來源更新時之間的時間延遲。</span><span class="sxs-lookup"><span data-stu-id="51126-120">In this situation, you can use the <xref:System.Windows.Data.BindingBase.Delay%2A> property to specify whether there should be a time delay between when the target is changed and when the source is updated.</span></span>  <span data-ttu-id="51126-121">當您想要讓使用者變更的來源物件上的屬性，但您不想每項變更會立即認可至來源時，這非常有用。</span><span class="sxs-lookup"><span data-stu-id="51126-121">This is useful when you want to enable users to change a property on a source object but you don't want each change to be immediately committed to the source.</span></span>  <span data-ttu-id="51126-122">例如，假設您有資料雙向繫結至資料物件的屬性的文字方塊。</span><span class="sxs-lookup"><span data-stu-id="51126-122">For example, suppose that you have a text box that is data two-way bound to a property of a data object.</span></span>  <span data-ttu-id="51126-123">當使用者變更 [文字] 方塊中的值時，來源取得更新。</span><span class="sxs-lookup"><span data-stu-id="51126-123">When the user changes the value in the text box, the source gets updated.</span></span>  <span data-ttu-id="51126-124">若要啟用這種情況下，您將設定<xref:System.Windows.Data.Binding.Mode%2A>屬性<xref:System.Windows.Data.Binding>至<xref:System.Windows.Data.BindingMode.TwoWay>和<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>至<xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>。</span><span class="sxs-lookup"><span data-stu-id="51126-124">To enable this scenario, you set the <xref:System.Windows.Data.Binding.Mode%2A> property on the <xref:System.Windows.Data.Binding> to <xref:System.Windows.Data.BindingMode.TwoWay> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> to <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  <span data-ttu-id="51126-125">若要避免每次按鍵輸入時使用更新的來源物件，設定<xref:System.Windows.Data.BindingBase.Delay%2A>合理的值，讓使用者停止輸入自，經過的時間量之後才更新繫結的屬性。</span><span class="sxs-lookup"><span data-stu-id="51126-125">To avoid updating the source object with every keystroke, set the <xref:System.Windows.Data.BindingBase.Delay%2A> property to a reasonable value to cause the binding to update only after that amount of time has elapsed since the user stopped typing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FallbackValue">
      <MemberSignature Language="C#" Value="public object FallbackValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FallbackValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.FallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Property FallbackValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FallbackValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackValue : obj with get, set" Usage="System.Windows.Data.BindingBase.FallbackValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51126-126">取得或設定當繫結無法傳回值時要用的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-126">Gets or sets the value to use when the binding is unable to return a value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51126-127">預設值是 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-127">The default value is <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51126-128">繫結成功傳回值，如果：</span><span class="sxs-lookup"><span data-stu-id="51126-128">A binding returns a value successfully if:</span></span>  
  
1.  <span data-ttu-id="51126-129">已成功解析繫結來源的路徑。</span><span class="sxs-lookup"><span data-stu-id="51126-129">The path to the binding source resolves successfully.</span></span>  
  
2.  <span data-ttu-id="51126-130">值轉換器，如果有的話，就能夠將轉換結果的值。</span><span class="sxs-lookup"><span data-stu-id="51126-130">The value converter, if any, is able to convert the resulting value.</span></span>  
  
3.  <span data-ttu-id="51126-131">產生的值僅適用於繫結目標 （目標） 屬性。</span><span class="sxs-lookup"><span data-stu-id="51126-131">The resulting value is valid for the binding target (target) property.</span></span>  
  
 <span data-ttu-id="51126-132">如果傳回 1 和 2 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>，目標屬性設定為值<xref:System.Windows.Data.BindingBase.FallbackValue%2A>，如果有的話。</span><span class="sxs-lookup"><span data-stu-id="51126-132">If 1 and 2 return <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>, the target property is set to the value of the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available.</span></span> <span data-ttu-id="51126-133">如果沒有任何<xref:System.Windows.Data.BindingBase.FallbackValue%2A>，會使用目標屬性的預設值。</span><span class="sxs-lookup"><span data-stu-id="51126-133">If there is no <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, the default value of the target property is used.</span></span>  
  
 <span data-ttu-id="51126-134">值<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>不被視為成功的傳回值。</span><span class="sxs-lookup"><span data-stu-id="51126-134">The value <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> is not considered a successful return value.</span></span>  
  
<a name="xamlTextUsage_FallbackValue"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="51126-135">XAML 文字用法</span><span class="sxs-lookup"><span data-stu-id="51126-135">XAML Text Usage</span></span>  
  
```  
<object FallbackValue="fallbackValue" />  
```  
  
 <span data-ttu-id="51126-136">**-或者-**</span><span class="sxs-lookup"><span data-stu-id="51126-136">**- or –**</span></span>  
  
```  
<object>  
  <object.FallbackValue>  
    fallbackValue  
    </object.FallbackValue>  
</object>  
```  
  
<a name="xamlValues_FallbackValue"></a>   
## <a name="xaml-values"></a><span data-ttu-id="51126-137">XAML 值</span><span class="sxs-lookup"><span data-stu-id="51126-137">XAML Values</span></span>  
 <span data-ttu-id="51126-138">*fallbackValue*</span><span class="sxs-lookup"><span data-stu-id="51126-138">*fallbackValue*</span></span>  
 <span data-ttu-id="51126-139">屬性或物件項目值的目標屬性相同的型別。</span><span class="sxs-lookup"><span data-stu-id="51126-139">An attribute or object element value of the same type as the target property.</span></span> <span data-ttu-id="51126-140">請參閱該類型的文件的 XAML 使用方式資訊。</span><span class="sxs-lookup"><span data-stu-id="51126-140">See that type's documentation for XAML usage information.</span></span> <span data-ttu-id="51126-141">該類型可能會或可能不支援屬性語法的值，或可能或可能不支援物件項目語法 （這需要在該類型上的預設建構函式）。</span><span class="sxs-lookup"><span data-stu-id="51126-141">That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</span></span> <span data-ttu-id="51126-142">目標內容類型，因此會影響您使用的值的語法<xref:System.Windows.Data.BindingBase.FallbackValue%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="51126-142">The target property type will therefore influence which syntax you use for the value of the <xref:System.Windows.Data.BindingBase.FallbackValue%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override sealed object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="bindingBase.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="51126-143">可以為標記延伸提供服務的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-143">The object that can provide services for the markup extension.</span>
          </span>
          <span data-ttu-id="51126-144">可能是 <see langword="null" />；</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-144">May be <see langword="null" />;</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51126-145">傳回物件，這個物件應該設定於套用這個繫結和延伸的屬性上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-145">Returns an object that should be set on the property where this binding and extension are applied.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51126-146">要針對繫結目標屬性設定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-146">The value to set on the binding target property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51126-147">此實作提供了透過繫結的基底的語法支援[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]所有提供實用的衍生的類別 (<xref:System.Windows.Data.Binding>， <xref:System.Windows.Data.PriorityBinding>，和<xref:System.Windows.Data.MultiBinding>)。</span><span class="sxs-lookup"><span data-stu-id="51126-147">This implementation provides the base syntax support for binding through [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] for all provided practical derived classes (<xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, and <xref:System.Windows.Data.MultiBinding>).</span></span>  
  
 <span data-ttu-id="51126-148"><xref:System.Windows.Data.BindingBase>預期類別實作，這個方法會傳回運算式物件所繫結的結果。</span><span class="sxs-lookup"><span data-stu-id="51126-148">The <xref:System.Windows.Data.BindingBase> class implementation of this method is expected to return an expression object that is the result of a binding.</span></span> <span data-ttu-id="51126-149">將屬性繫結的運作方式是針對給定<xref:System.Windows.DependencyProperty>上指定<xref:System.Windows.DependencyObject>。</span><span class="sxs-lookup"><span data-stu-id="51126-149">Binding a property works by targeting a given <xref:System.Windows.DependencyProperty> on a given <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="51126-150">這兩個資訊片段經由查詢<xref:System.Windows.Markup.IProvideValueTarget>上的實作`serviceProvider`、 哪些[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)][!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]讀取器會提供繫結的剖析期間。</span><span class="sxs-lookup"><span data-stu-id="51126-150">These two pieces of information are transmitted by querying for an <xref:System.Windows.Markup.IProvideValueTarget> implementation on the `serviceProvider`, which the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] reader makes available during parsing of a binding.</span></span> <span data-ttu-id="51126-151">此基底類別實作會負責檢查有效<xref:System.Windows.DependencyProperty>和<xref:System.Windows.DependencyObject>。</span><span class="sxs-lookup"><span data-stu-id="51126-151">This base class implementation is responsible for checking for a valid <xref:System.Windows.DependencyProperty> and <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="51126-152">如果這些找不到，傳回繫結運算式的實際實作落至各種不同的衍生類別實作時所需的基底類別呼叫內部的抽象方法。</span><span class="sxs-lookup"><span data-stu-id="51126-152">If these are found, the actual implementation of returning a binding expression falls to various derived classes, as implemented by having the base class call an internal abstract method.</span></span> <span data-ttu-id="51126-153">否則，擴充功能會傳回本身的繫結物件。</span><span class="sxs-lookup"><span data-stu-id="51126-153">Otherwise, the extension returns the binding object itself.</span></span> <span data-ttu-id="51126-154">傳回本身的繫結型別不符的錯誤，但這應該不會發生在正常情況下。</span><span class="sxs-lookup"><span data-stu-id="51126-154">Returning the binding itself results in a type mismatch error, but this should not occur under normal circumstances.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="51126-155">因為透過繫結的語法[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]中實作這個方法會依賴實作內部的覆寫，而且因為<xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType>本身密封格式，自訂繫結類別衍生自<xref:System.Windows.Data.BindingBase>將無法正常為[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]標記延伸。</span><span class="sxs-lookup"><span data-stu-id="51126-155">Because the syntax for binding through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] as implemented in this method relies on implementing an internal override, and because <xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType> itself is sealed, a custom binding class that derives from <xref:System.Windows.Data.BindingBase> will not function correctly as a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] markup extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeFallbackValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeFallbackValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeFallbackValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeFallbackValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeFallbackValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeFallbackValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeFallbackValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51126-156">傳回值，表示在這個類別的執行個體上，序列化處理序是否應該將 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 屬性的有效值序列化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-156">Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> property on instances of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51126-157">如果應序列化 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-157">
              <see langword="true" /> if the <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTargetNullValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTargetNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTargetNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTargetNullValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTargetNullValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTargetNullValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeTargetNullValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51126-158">傳回值，這個值表示是否應該序列化此 <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-158">Returns a value that indicates whether the <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> property should be serialized.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51126-159">如果 <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> 屬性應進行序列化則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-159">
              <see langword="true" /> if the <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> property should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringFormat">
      <MemberSignature Language="C#" Value="public string StringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.StringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property StringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StringFormat : string with get, set" Usage="System.Windows.Data.BindingBase.StringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51126-160">取得或設定字串，這個字串指定繫結在其繫結值顯示成字串時的格式化方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-160">Gets or sets a string that specifies how to format the binding if it displays the bound value as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51126-161">字串，指定繫結在其繫結值顯示成字串時的格式化方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-161">A string that specifies how to format the binding if it displays the bound value as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51126-162"><xref:System.Windows.Data.BindingBase.StringFormat%2A> 可以是預先定義、 複合的或自訂字串格式。</span><span class="sxs-lookup"><span data-stu-id="51126-162"><xref:System.Windows.Data.BindingBase.StringFormat%2A> can be a predefined, composite, or custom string format.</span></span> <span data-ttu-id="51126-163">如需字串格式的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。</span><span class="sxs-lookup"><span data-stu-id="51126-163">For more information about string formats, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="51126-164">如果您設定<xref:System.Windows.Data.Binding.Converter%2A>和<xref:System.Windows.Data.BindingBase.StringFormat%2A>首先，套用到資料值轉換器的屬性，然後<xref:System.Windows.Data.BindingBase.StringFormat%2A>套用。</span><span class="sxs-lookup"><span data-stu-id="51126-164">If you set the <xref:System.Windows.Data.Binding.Converter%2A> and <xref:System.Windows.Data.BindingBase.StringFormat%2A> properties, the converter is applied to the data value first, and then the <xref:System.Windows.Data.BindingBase.StringFormat%2A> is applied.</span></span>  
  
 <span data-ttu-id="51126-165">當您將<xref:System.Windows.Data.BindingBase.StringFormat%2A>上<xref:System.Windows.Data.Binding>的複合字串格式，您可以指定只有一個參數。</span><span class="sxs-lookup"><span data-stu-id="51126-165">When you set the <xref:System.Windows.Data.BindingBase.StringFormat%2A> on a <xref:System.Windows.Data.Binding> to a composite string format, you can specify only one parameter.</span></span>  
  
 <span data-ttu-id="51126-166">當您使用<xref:System.Windows.Data.MultiBinding>、<xref:System.Windows.Data.BindingBase.StringFormat%2A>屬性適用於只能在設定時<xref:System.Windows.Data.MultiBinding>。</span><span class="sxs-lookup"><span data-stu-id="51126-166">When you use a <xref:System.Windows.Data.MultiBinding>, the <xref:System.Windows.Data.BindingBase.StringFormat%2A> property applies only when it is set on the <xref:System.Windows.Data.MultiBinding>.</span></span>  <span data-ttu-id="51126-167">值<xref:System.Windows.Data.BindingBase.StringFormat%2A>任何子系上設定<xref:System.Windows.Data.Binding>物件會被忽略。</span><span class="sxs-lookup"><span data-stu-id="51126-167">The value of <xref:System.Windows.Data.BindingBase.StringFormat%2A> that is set on any child <xref:System.Windows.Data.Binding> objects is ignored.</span></span>  <span data-ttu-id="51126-168">中的複合字串格式的參數數目不能超過子系數目<xref:System.Windows.Data.Binding>中的物件<xref:System.Windows.Data.MultiBinding>。</span><span class="sxs-lookup"><span data-stu-id="51126-168">The number of parameters in a composite string format cannot exceed the number of child <xref:System.Windows.Data.Binding> objects in the <xref:System.Windows.Data.MultiBinding>.</span></span>  
  
 <span data-ttu-id="51126-169">當您使用<xref:System.Windows.Data.PriorityBinding>，您可以設定<xref:System.Windows.Data.BindingBase.StringFormat%2A>上<xref:System.Windows.Data.PriorityBinding>、 子繫結物件，或兩者。</span><span class="sxs-lookup"><span data-stu-id="51126-169">When you use a <xref:System.Windows.Data.PriorityBinding>, you can set the <xref:System.Windows.Data.BindingBase.StringFormat%2A> on the <xref:System.Windows.Data.PriorityBinding>, on child binding objects, or both.</span></span>  <span data-ttu-id="51126-170">如果<xref:System.Windows.Data.BindingBase.StringFormat%2A>集，也就繫結的子系上套用時，會使用值。</span><span class="sxs-lookup"><span data-stu-id="51126-170">If the <xref:System.Windows.Data.BindingBase.StringFormat%2A> is set on the child binding that is applied, that value is used.</span></span>  <span data-ttu-id="51126-171">如果<xref:System.Windows.Data.BindingBase.StringFormat%2A>未套用時，子繫結上設定<xref:System.Windows.Data.BindingBase.StringFormat%2A>的<xref:System.Windows.Data.PriorityBinding>如果設定會套用。</span><span class="sxs-lookup"><span data-stu-id="51126-171">If the <xref:System.Windows.Data.BindingBase.StringFormat%2A> is not set on the child binding that is applied, the <xref:System.Windows.Data.BindingBase.StringFormat%2A> of the <xref:System.Windows.Data.PriorityBinding> is applied if it is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51126-172">下列範例會使用<xref:System.Windows.Data.BindingBase.StringFormat%2A>屬性轉換`Price`，也就是<xref:System.Double>，代表貨幣的字串。</span><span class="sxs-lookup"><span data-stu-id="51126-172">The following example uses the <xref:System.Windows.Data.BindingBase.StringFormat%2A> property to convert `Price`, which is a <xref:System.Double>, to a string that represents a currency.</span></span>  
  
 [!code-xaml[ContentStringSnippets#Binding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#binding)]  
  
 <span data-ttu-id="51126-173">下列範例會使用<xref:System.Windows.Data.BindingBase.StringFormat%2A>屬性<xref:System.Windows.Data.MultiBinding>來建立包含的字串`Description`和`Price`中每個項目的<xref:System.Windows.Controls.ListBox>。</span><span class="sxs-lookup"><span data-stu-id="51126-173">The following example uses the <xref:System.Windows.Data.BindingBase.StringFormat%2A> property on a <xref:System.Windows.Data.MultiBinding> to build a string that includes the `Description` and `Price` of each item in a <xref:System.Windows.Controls.ListBox>.</span></span>  
  
 [!code-xaml[ContentStringSnippets#MultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#multibinding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNullValue">
      <MemberSignature Language="C#" Value="public object TargetNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetNullValue : obj with get, set" Usage="System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51126-174">取得或設定當來源值為 <see langword="null" /> 時目標中所使用的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-174">Gets or sets the value that is used in the target when the value of the source is <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51126-175">當來源值為 <see langword="null" /> 時目標中所使用的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51126-175">The value that is used in the target when the value of the source is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_TargetNullValue"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="51126-176">XAML 文字用法</span><span class="sxs-lookup"><span data-stu-id="51126-176">XAML Text Usage</span></span>  
  
```  
<object TargetNullValue="nullValue" />  
```  
  
 <span data-ttu-id="51126-177">**-或者-**</span><span class="sxs-lookup"><span data-stu-id="51126-177">**- or –**</span></span>  
  
```  
<object>  
  <object.TargetNullValue>  
    nullValue  
    </object.TargetNullValue>  
</object>  
```  
  
<a name="xamlValues_TargetNullValue"></a>   
## <a name="xaml-values"></a><span data-ttu-id="51126-178">XAML 值</span><span class="sxs-lookup"><span data-stu-id="51126-178">XAML Values</span></span>  
 <span data-ttu-id="51126-179">*nullValue*</span><span class="sxs-lookup"><span data-stu-id="51126-179">*nullValue*</span></span>  
 <span data-ttu-id="51126-180">屬性或物件項目值的目標屬性相同的型別。</span><span class="sxs-lookup"><span data-stu-id="51126-180">An attribute or object element value of the same type as the target property.</span></span> <span data-ttu-id="51126-181">請參閱該類型的文件的 XAML 使用方式資訊。</span><span class="sxs-lookup"><span data-stu-id="51126-181">See that type's documentation for XAML usage information.</span></span> <span data-ttu-id="51126-182">該類型可能會或可能不支援屬性語法的值，或可能或可能不支援物件項目語法 （這需要在該類型上的預設建構函式）。</span><span class="sxs-lookup"><span data-stu-id="51126-182">That type may or may not support attribute syntax for its values, or may or may not support object element syntax (which requires a default constructor on that type).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51126-183">下列範例會繫結<xref:System.Windows.Controls.TextBox>物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="51126-183">The following example binds a <xref:System.Windows.Controls.TextBox> to a property of an object.</span></span>  <span data-ttu-id="51126-184">如果屬性是`null`、<xref:System.Windows.Controls.TextBox>顯示 「 請輸入字串。 」</span><span class="sxs-lookup"><span data-stu-id="51126-184">If the property is `null`, the <xref:System.Windows.Controls.TextBox> displays "please enter a string."</span></span>  
  
 [!code-xaml[BindingGroupSnippets#TargetNullValue](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#targetnullvalue)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>