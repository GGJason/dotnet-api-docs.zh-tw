<Type Name="BindingBase" FullName="System.Windows.Data.BindingBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8ae5e1af86693b71cb8941b8cc1b0912429b6b12" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36564611" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BindingBase : System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract BindingBase extends System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingBase&#xA;Inherits MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingBase abstract : System::Windows::Markup::MarkupExtension" />
  <TypeSignature Language="F#" Value="type BindingBase = class&#xA;    inherit MarkupExtension" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Object))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定義 <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.PriorityBinding" /> 和 <see cref="T:System.Windows.Data.MultiBinding" /> 類別的通用特性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為<xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType>方法密封格式，自訂繫結類別衍生自<xref:System.Windows.Data.BindingBase>將無法正常為[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]標記延伸。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindingGroupName">
      <MemberSignature Language="C#" Value="public string BindingGroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingGroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingGroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingGroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingGroupName : string with get, set" Usage="System.Windows.Data.BindingBase.BindingGroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個繫結所屬之 <see cref="T:System.Windows.Data.BindingGroup" /> 的名稱。</summary>
        <value>這個繫結所屬之 <see cref="T:System.Windows.Data.BindingGroup" /> 的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>未設定，繫結所屬<xref:System.Windows.Data.BindingGroup>只有當繫結的來源和<xref:System.Windows.FrameworkElement.DataContext%2A>有父項目的<xref:System.Windows.Data.BindingGroup>是相同的物件。  
  
 如果<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>設為值，繫結所屬<xref:System.Windows.Data.BindingGroup>如果下列條件成立：  
  
-   <xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>相等。  
  
-   <xref:System.Windows.Data.BindingGroup>所屬之父項目的繫結的目標項目。  
  
 如果<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>設`null`，繫結不屬於<xref:System.Windows.Data.BindingGroup>。  
  
 您可以包含有不同的來源的繫結<xref:System.Windows.FrameworkElement.DataContext%2A>有父項目的<xref:System.Windows.Data.BindingGroup>藉由設定<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>為相同的值繫結的屬性。  您可以排除具有相同的來源繫結<xref:System.Windows.FrameworkElement.DataContext%2A>有父項目的<xref:System.Windows.Data.BindingGroup>藉由設定<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>繫結至不同的值的屬性。  
  
   
  
## Examples  
 下列範例是應用程式會檢查使用者是否已設定為相等的值的兩個物件的屬性的一部分。 第一個範例會建立兩個<xref:System.Windows.Controls.TextBox>控制項，其中每一個都是資料繫結至不同的來源： 第一個繫結<xref:System.Windows.Controls.TextBox>屬於<xref:System.Windows.Data.BindingGroup>因為<xref:System.Windows.Controls.TextBox>繼承<xref:System.Windows.FrameworkElement.DataContext%2A>和<xref:System.Windows.Data.BindingGroup>從其父代 <xref:System.Windows.Controls.StackPanel>  
  
 第二個繫結<xref:System.Windows.Controls.TextBox>屬於<xref:System.Windows.Data.BindingGroup>因為<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>的<xref:System.Windows.Data.Binding>都設定為`bindingGroup`。  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 下列範例所示<xref:System.Windows.Controls.ValidationRule>先前範例所使用。  在<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法，此範例會取得每個來源物件的<xref:System.Windows.Data.BindingGroup>，並檢查之物件的屬性是否相等。  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delay">
      <MemberSignature Language="C#" Value="public int Delay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delay" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.Delay" />
      <MemberSignature Language="VB.NET" Value="Public Property Delay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delay { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Delay : int with get, set" Usage="System.Windows.Data.BindingBase.Delay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在目標的值變更之後，取得或設定更新繫結來源之前等待的時間長度 (以毫秒為單位)。</summary>
        <value>再更新繫結來源前的等候時間長度，以毫秒計算。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您使用的繫結目標屬性的值變更時，更新繫結來源時，您將設定<xref:System.Windows.Data.Binding.Mode%2A>屬性<xref:System.Windows.Data.BindingMode.TwoWay>和<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>至<xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>。  在此情況下，您可以使用<xref:System.Windows.Data.BindingBase.Delay%2A>屬性來指定是否應該是變更目標時，會在來源更新時之間的時間延遲。  當您想要讓使用者變更的來源物件上的屬性，但您不想每項變更會立即認可至來源時，這非常有用。  例如，假設您有資料雙向繫結至資料物件的屬性的文字方塊。  當使用者變更 [文字] 方塊中的值時，來源取得更新。  若要啟用這種情況下，您將設定<xref:System.Windows.Data.Binding.Mode%2A>屬性<xref:System.Windows.Data.Binding>至<xref:System.Windows.Data.BindingMode.TwoWay>和<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>至<xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>。  若要避免每次按鍵輸入時使用更新的來源物件，設定<xref:System.Windows.Data.BindingBase.Delay%2A>合理的值，讓使用者停止輸入自，經過的時間量之後才更新繫結的屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FallbackValue">
      <MemberSignature Language="C#" Value="public object FallbackValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FallbackValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.FallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Property FallbackValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ FallbackValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FallbackValue : obj with get, set" Usage="System.Windows.Data.BindingBase.FallbackValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當繫結無法傳回值時要用的值。</summary>
        <value>預設值是 <see cref="F:System.Windows.DependencyProperty.UnsetValue" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 繫結成功傳回值，如果：  
  
1.  已成功解析繫結來源的路徑。  
  
2.  值轉換器，如果有的話，就能夠將轉換結果的值。  
  
3.  產生的值僅適用於繫結目標 （目標） 屬性。  
  
 如果傳回 1 和 2 <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>，目標屬性設定為值<xref:System.Windows.Data.BindingBase.FallbackValue%2A>，如果有的話。 如果沒有任何<xref:System.Windows.Data.BindingBase.FallbackValue%2A>，會使用目標屬性的預設值。  
  
 值<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>不被視為成功的傳回值。  
  
<a name="xamlTextUsage_FallbackValue"></a>   
## <a name="xaml-text-usage"></a>XAML 文字用法  
  
```  
<object FallbackValue="fallbackValue" />  
```  
  
 **-或者-**  
  
```  
<object>  
  <object.FallbackValue>  
    fallbackValue  
    </object.FallbackValue>  
</object>  
```  
  
<a name="xamlValues_FallbackValue"></a>   
## <a name="xaml-values"></a>XAML 值  
 *fallbackValue*  
 屬性或物件項目值的目標屬性相同的型別。 請參閱該類型的文件的 XAML 使用方式資訊。 該類型可能會或可能不支援屬性語法的值，或可能或可能不支援物件項目語法 （這需要在該類型上的預設建構函式）。 目標內容類型，因此會影響您使用的值的語法<xref:System.Windows.Data.BindingBase.FallbackValue%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override sealed object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="bindingBase.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">可以為標記延伸提供服務的物件。 可能是 <see langword="null" />；</param>
        <summary>傳回物件，這個物件應該設定於套用這個繫結和延伸的屬性上。</summary>
        <returns>要針對繫結目標屬性設定的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此實作提供了透過繫結的基底的語法支援[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]所有提供實用的衍生的類別 (<xref:System.Windows.Data.Binding>， <xref:System.Windows.Data.PriorityBinding>，和<xref:System.Windows.Data.MultiBinding>)。  
  
 <xref:System.Windows.Data.BindingBase>預期類別實作，這個方法會傳回運算式物件所繫結的結果。 將屬性繫結的運作方式是針對給定<xref:System.Windows.DependencyProperty>上指定<xref:System.Windows.DependencyObject>。 這兩個資訊片段經由查詢<xref:System.Windows.Markup.IProvideValueTarget>上的實作`serviceProvider`、 哪些[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)][!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]讀取器會提供繫結的剖析期間。 此基底類別實作會負責檢查有效<xref:System.Windows.DependencyProperty>和<xref:System.Windows.DependencyObject>。 如果這些找不到，傳回繫結運算式的實際實作落至各種不同的衍生類別實作時所需的基底類別呼叫內部的抽象方法。 否則，擴充功能會傳回本身的繫結物件。 傳回本身的繫結型別不符的錯誤，但這應該不會發生在正常情況下。  
  
> [!IMPORTANT]
>  因為透過繫結的語法[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]中實作這個方法會依賴實作內部的覆寫，而且因為<xref:System.Windows.Data.BindingBase.ProvideValue%2A?displayProperty=nameWithType>本身密封格式，自訂繫結類別衍生自<xref:System.Windows.Data.BindingBase>將無法正常為[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]標記延伸。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeFallbackValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeFallbackValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeFallbackValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeFallbackValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeFallbackValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeFallbackValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeFallbackValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回值，表示在這個類別的執行個體上，序列化處理序是否應該將 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 屬性的有效值序列化。</summary>
        <returns>如果應序列化 <see cref="P:System.Windows.Data.BindingBase.FallbackValue" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTargetNullValue">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTargetNullValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTargetNullValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTargetNullValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTargetNullValue();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTargetNullValue : unit -&gt; bool" Usage="bindingBase.ShouldSerializeTargetNullValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回值，這個值表示是否應該序列化此 <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> 屬性。</summary>
        <returns>如果 <see cref="P:System.Windows.Data.BindingBase.TargetNullValue" /> 屬性應進行序列化則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringFormat">
      <MemberSignature Language="C#" Value="public string StringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.StringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property StringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StringFormat : string with get, set" Usage="System.Windows.Data.BindingBase.StringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定字串，這個字串指定繫結在其繫結值顯示成字串時的格式化方式。</summary>
        <value>字串，指定繫結在其繫結值顯示成字串時的格式化方式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.BindingBase.StringFormat%2A> 可以是預先定義、 複合的或自訂字串格式。 如需字串格式的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。  
  
 如果您設定<xref:System.Windows.Data.Binding.Converter%2A>和<xref:System.Windows.Data.BindingBase.StringFormat%2A>首先，套用到資料值轉換器的屬性，然後<xref:System.Windows.Data.BindingBase.StringFormat%2A>套用。  
  
 當您將<xref:System.Windows.Data.BindingBase.StringFormat%2A>上<xref:System.Windows.Data.Binding>的複合字串格式，您可以指定只有一個參數。  
  
 當您使用<xref:System.Windows.Data.MultiBinding>、<xref:System.Windows.Data.BindingBase.StringFormat%2A>屬性適用於只能在設定時<xref:System.Windows.Data.MultiBinding>。  值<xref:System.Windows.Data.BindingBase.StringFormat%2A>任何子系上設定<xref:System.Windows.Data.Binding>物件會被忽略。  中的複合字串格式的參數數目不能超過子系數目<xref:System.Windows.Data.Binding>中的物件<xref:System.Windows.Data.MultiBinding>。  
  
 當您使用<xref:System.Windows.Data.PriorityBinding>，您可以設定<xref:System.Windows.Data.BindingBase.StringFormat%2A>上<xref:System.Windows.Data.PriorityBinding>、 子繫結物件，或兩者。  如果<xref:System.Windows.Data.BindingBase.StringFormat%2A>集，也就繫結的子系上套用時，會使用值。  如果<xref:System.Windows.Data.BindingBase.StringFormat%2A>未套用時，子繫結上設定<xref:System.Windows.Data.BindingBase.StringFormat%2A>的<xref:System.Windows.Data.PriorityBinding>如果設定會套用。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Windows.Data.BindingBase.StringFormat%2A>屬性轉換`Price`，也就是<xref:System.Double>，代表貨幣的字串。  
  
 [!code-xaml[ContentStringSnippets#Binding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#binding)]  
  
 下列範例會使用<xref:System.Windows.Data.BindingBase.StringFormat%2A>屬性<xref:System.Windows.Data.MultiBinding>來建立包含的字串`Description`和`Price`中每個項目的<xref:System.Windows.Controls.ListBox>。  
  
 [!code-xaml[ContentStringSnippets#MultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentStringSnippets/CSharp/Window1.xaml#multibinding)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNullValue">
      <MemberSignature Language="C#" Value="public object TargetNullValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetNullValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetNullValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetNullValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetNullValue : obj with get, set" Usage="System.Windows.Data.BindingBase.TargetNullValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當來源值為 <see langword="null" /> 時目標中所使用的值。</summary>
        <value>當來源值為 <see langword="null" /> 時目標中所使用的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_TargetNullValue"></a>   
## <a name="xaml-text-usage"></a>XAML 文字用法  
  
```  
<object TargetNullValue="nullValue" />  
```  
  
 **-或者-**  
  
```  
<object>  
  <object.TargetNullValue>  
    nullValue  
    </object.TargetNullValue>  
</object>  
```  
  
<a name="xamlValues_TargetNullValue"></a>   
## <a name="xaml-values"></a>XAML 值  
 *nullValue*  
 屬性或物件項目值的目標屬性相同的型別。 請參閱該類型的文件的 XAML 使用方式資訊。 該類型可能會或可能不支援屬性語法的值，或可能或可能不支援物件項目語法 （這需要在該類型上的預設建構函式）。  
  
   
  
## Examples  
 下列範例會繫結<xref:System.Windows.Controls.TextBox>物件的屬性。  如果屬性是`null`、<xref:System.Windows.Controls.TextBox>顯示 「 請輸入字串。 」  
  
 [!code-xaml[BindingGroupSnippets#TargetNullValue](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#targetnullvalue)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>