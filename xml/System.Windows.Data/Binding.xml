<Type Name="Binding" FullName="System.Windows.Data.Binding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="801b9b6758c7503f88433233450bd01c6f7f068d" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56372833" /></Metadata><TypeSignature Language="C#" Value="public class Binding : System.Windows.Data.BindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Windows.Data.BindingBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding&#xA;Inherits BindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding : System::Windows::Data::BindingBase" />
  <TypeSignature Language="F#" Value="type Binding = class&#xA;    inherit BindingBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a64c9-101">提供繫結定義的高層級存取，連接繫結目標物件的屬性 (通常為 WPF 元素) 和任何資料來源 (例如資料庫、XML 檔案或任何包含資料的物件)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-101">Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] <span data-ttu-id="a64c9-102">資料繫結在資料的展示和互動上，提供應用程式簡單而一致的方式。</span><span class="sxs-lookup"><span data-stu-id="a64c9-102">data binding provides a simple and consistent way for applications to present and interact with data.</span></span> <span data-ttu-id="a64c9-103">資料繫結可讓您同步處理兩個不同的物件屬性的值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-103">Data binding enables you to synchronize the values of the properties of two different objects.</span></span>  
  
 <span data-ttu-id="a64c9-104">若要建立繫結，請使用<xref:System.Windows.Data.Binding>類別或其中一個繼承的類別<xref:System.Windows.Data.BindingBase>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-104">To establish a binding, use the <xref:System.Windows.Data.Binding> class or one of the other classes that inherit <xref:System.Windows.Data.BindingBase>.</span></span> <span data-ttu-id="a64c9-105">哪些物件不論您要繫結和您的資料來源的本質，每個繫結會遵循下圖所說明的模型。</span><span class="sxs-lookup"><span data-stu-id="a64c9-105">Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.</span></span>  
  
 <span data-ttu-id="a64c9-106">![基本資料繫結圖表](~/add/media/databindingmostbasic.png "基本資料繫結圖表")</span><span class="sxs-lookup"><span data-stu-id="a64c9-106">![Basic data binding diagram](~/add/media/databindingmostbasic.png "Basic data binding diagram")</span></span>  
  
 <span data-ttu-id="a64c9-107">該圖示範下列基本[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]資料繫結概念。</span><span class="sxs-lookup"><span data-stu-id="a64c9-107">The figure demonstrates the following fundamental [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding concepts.</span></span>  
  
-   <span data-ttu-id="a64c9-108">每個繫結通常會有四個元件： 繫結目標物件、 目標屬性、 繫結來源，並有<xref:System.Windows.Data.Binding.Path%2A>中要使用的繫結來源的值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-108">Each binding typically has these four components: a binding target object, a target property, a binding source, and a <xref:System.Windows.Data.Binding.Path%2A> to the value in the binding source to use.</span></span> <span data-ttu-id="a64c9-109">比方說，如果您想要繫結的內容<xref:System.Windows.Controls.TextBox>若要將 Employee 物件的 Name 屬性，您的目標物件是<xref:System.Windows.Controls.TextBox>，目標屬性是<xref:System.Windows.Controls.TextBox.Text%2A>屬性，要使用的值是名稱，且來源物件的員工物件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-109">For example, if you want to bind the content of a <xref:System.Windows.Controls.TextBox> to the Name property of an Employee object, your target object is the <xref:System.Windows.Controls.TextBox>, the target property is the <xref:System.Windows.Controls.TextBox.Text%2A> property, the value to use is Name, and the source object is the Employee object.</span></span>  
  
-   <span data-ttu-id="a64c9-110">目標屬性必須是相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-110">The target property must be a dependency property.</span></span> <span data-ttu-id="a64c9-111">這也表示您無法繫結欄位。</span><span class="sxs-lookup"><span data-stu-id="a64c9-111">This also means that you cannot bind a field.</span></span> <span data-ttu-id="a64c9-112">大部分屬性<xref:System.Windows.UIElement>物件相依性屬性，而且大部分的相依性屬性，唯讀的除了預設支援資料繫結。</span><span class="sxs-lookup"><span data-stu-id="a64c9-112">Most properties of <xref:System.Windows.UIElement> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default.</span></span> <span data-ttu-id="a64c9-113">(僅<xref:System.Windows.DependencyObject>類型可以定義相依性屬性以及所有<xref:System.Windows.UIElement>物件都衍生自<xref:System.Windows.DependencyObject>。)</span><span class="sxs-lookup"><span data-stu-id="a64c9-113">(Only <xref:System.Windows.DependencyObject> types can define dependency properties and all <xref:System.Windows.UIElement> objects derive from <xref:System.Windows.DependencyObject>.)</span></span>  
  
-   <span data-ttu-id="a64c9-114">雖然圖中未指出，但應該注意的是，繫結來源物件不限於自訂的 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 物件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-114">Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="a64c9-115">資料繫結支援 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 物件和 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 格式的資料。</span><span class="sxs-lookup"><span data-stu-id="a64c9-115">data binding supports data in the form of [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] objects and [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span> <span data-ttu-id="a64c9-116">若要提供一些範例，可能會繫結來源<xref:System.Windows.UIElement>，任何清單物件、[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]相關聯的物件[!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)]資料或 Web 服務或 XmlNode，其中包含您[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]資料。</span><span class="sxs-lookup"><span data-stu-id="a64c9-116">To provide some examples, your binding source may be a <xref:System.Windows.UIElement>, any list object, a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object that is associated with [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] data or Web Services, or an XmlNode that contains your [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] data.</span></span>  
  
 <span data-ttu-id="a64c9-117">使用<xref:System.Windows.Data.Binding.Mode%2A>屬性，以指定資料流程的方向。</span><span class="sxs-lookup"><span data-stu-id="a64c9-117">Use the <xref:System.Windows.Data.Binding.Mode%2A> property to specify the direction of the data flow.</span></span> <span data-ttu-id="a64c9-118">若要偵測來源變更單向或雙向繫結中，來源必須實作適合的屬性變更通知機制，例如<xref:System.ComponentModel.INotifyPropertyChanged>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-118">To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="a64c9-119">如需範例，請參閱[如何：實作屬性變更通知](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-119">For an example, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span> <span data-ttu-id="a64c9-120"><xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>屬性會指定來源更新的時機。</span><span class="sxs-lookup"><span data-stu-id="a64c9-120">The <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property specifies the timing of source updates.</span></span> <span data-ttu-id="a64c9-121">如需詳細資訊，請參閱 「 基本資料繫結概念 」 中[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-121">For more information, see "Basic Data Binding Concepts" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="a64c9-122">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="a64c9-122">XAML Attribute Usage</span></span>  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a64c9-123">XAML 值</span><span class="sxs-lookup"><span data-stu-id="a64c9-123">XAML Values</span></span>  
 <span data-ttu-id="a64c9-124">*declaration*</span><span class="sxs-lookup"><span data-stu-id="a64c9-124">*declaration*</span></span>  
 <span data-ttu-id="a64c9-125">零個或多個屬性指派子句，以逗號 （，） 分隔。</span><span class="sxs-lookup"><span data-stu-id="a64c9-125">Zero or more attribute-assignment clauses separated by commas (,).</span></span> <span data-ttu-id="a64c9-126">如需詳細資訊，請參閱 < [Binding 標記延伸模組](~/docs/framework/wpf/advanced/binding-markup-extension.md)或是[繫結宣告概觀](~/docs/framework/wpf/data/binding-declarations-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-126">For more information, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.MultiBinding" />
    <altmember cref="T:System.Windows.Data.PriorityBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a64c9-127">初始化 <see cref="T:System.Windows.Data.Binding" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a64c9-127">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a64c9-128">初始化 <see cref="T:System.Windows.Data.Binding" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a64c9-128">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Windows.Data.Binding : string -&gt; System.Windows.Data.Binding" Usage="new System.Windows.Data.Binding path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="a64c9-129">初始 <see cref="P:System.Windows.Data.Binding.Path" /> 來繫結。</span><span class="sxs-lookup"><span data-stu-id="a64c9-129">The initial <see cref="P:System.Windows.Data.Binding.Path" /> for the binding.</span></span></param>
        <summary><span data-ttu-id="a64c9-130">使用初始路徑，初始化 <see cref="T:System.Windows.Data.Binding" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a64c9-130">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class with an initial path.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddSourceUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.AddSourceUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a64c9-131">接聽此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="a64c9-132">要加入的處理常式。</span><span class="sxs-lookup"><span data-stu-id="a64c9-132">The handler to add.</span></span></param>
        <summary><span data-ttu-id="a64c9-133">加入 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件的處理常式。</span><span class="sxs-lookup"><span data-stu-id="a64c9-133">Adds a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-134">這個方法支援附加的事件的使用中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="a64c9-134">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddTargetUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.AddTargetUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a64c9-135">接聽此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-135">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="a64c9-136">要加入的處理常式。</span><span class="sxs-lookup"><span data-stu-id="a64c9-136">The handler to add.</span></span></param>
        <summary><span data-ttu-id="a64c9-137">加入 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件的處理常式。</span><span class="sxs-lookup"><span data-stu-id="a64c9-137">Adds a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-138">這個方法支援附加的事件的使用中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="a64c9-138">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj with get, set" Usage="System.Windows.Data.Binding.AsyncState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-139">取得或設定傳遞至非同步資料發送器的不透明資料。</span><span class="sxs-lookup"><span data-stu-id="a64c9-139">Gets or sets opaque data passed to the asynchronous data dispatcher.</span></span></summary>
        <value><span data-ttu-id="a64c9-140">傳遞至非同步資料發送器的資料。</span><span class="sxs-lookup"><span data-stu-id="a64c9-140">Data passed to the asynchronous data dispatcher.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.IsAsync" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      </Docs>
    </Member>
    <Member MemberName="BindsDirectlyToSource">
      <MemberSignature Language="C#" Value="public bool BindsDirectlyToSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BindsDirectlyToSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberSignature Language="VB.NET" Value="Public Property BindsDirectlyToSource As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BindsDirectlyToSource { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BindsDirectlyToSource : bool with get, set" Usage="System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-141">取得或設定值，這個值表示是否評估與資料項目或 <see cref="T:System.Windows.Data.DataSourceProvider" /> 物件相對的 <see cref="P:System.Windows.Data.Binding.Path" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-141">Gets or sets a value that indicates whether to evaluate the <see cref="P:System.Windows.Data.Binding.Path" /> relative to the data item or the <see cref="T:System.Windows.Data.DataSourceProvider" /> object.</span></span></summary>
        <value><span data-ttu-id="a64c9-142"><see langword="false" /> 表示評估與資料項目本身相對的路徑；否則為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-142"><see langword="false" /> to evaluate the path relative to the data item itself; otherwise, <see langword="true" />.</span></span> <span data-ttu-id="a64c9-143">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-143">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-144">正常的行為 (當這個屬性是`false`) 包含特殊待遇的<xref:System.Windows.Data.DataSourceProvider>物件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-144">The normal behavior (when this property is `false`) includes special treatment for <xref:System.Windows.Data.DataSourceProvider> objects.</span></span> <span data-ttu-id="a64c9-145">在此情況下，繫結引擎會評估<xref:System.Windows.Data.Binding.Path%2A>相對於取自物件<xref:System.Windows.Data.DataSourceProvider.Data%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-145">In this case, the binding engine evaluates the <xref:System.Windows.Data.Binding.Path%2A> relative to the object obtained from the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property.</span></span> <span data-ttu-id="a64c9-146">此外，繫結會接聽<xref:System.Windows.Data.DataSourceProvider.DataChanged>事件及據以回應。</span><span class="sxs-lookup"><span data-stu-id="a64c9-146">In addition, the binding listens for the <xref:System.Windows.Data.DataSourceProvider.DataChanged> event and reacts accordingly.</span></span> <span data-ttu-id="a64c9-147">將此屬性設定為`true`會覆寫這個行為，並提供繫結存取的屬性<xref:System.Windows.Data.DataSourceProvider>物件本身。</span><span class="sxs-lookup"><span data-stu-id="a64c9-147">Setting this property to `true` overrides this behavior and gives the binding access to properties of the <xref:System.Windows.Data.DataSourceProvider> object itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.ObjectDataProvider" />
        <altmember cref="T:System.Windows.Data.XmlDataProvider" />
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As IValueConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::IValueConverter ^ Converter { System::Windows::Data::IValueConverter ^ get(); void set(System::Windows::Data::IValueConverter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.Windows.Data.IValueConverter with get, set" Usage="System.Windows.Data.Binding.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-148">取得或設定要使用的轉換子。</span><span class="sxs-lookup"><span data-stu-id="a64c9-148">Gets or sets the converter to use.</span></span></summary>
        <value><span data-ttu-id="a64c9-149">型別 <see cref="T:System.Windows.Data.IValueConverter" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-149">A value of type <see cref="T:System.Windows.Data.IValueConverter" />.</span></span> <span data-ttu-id="a64c9-150">預設為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-150">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-151">繫結會隱含地使用預設轉換子，會嘗試執行類型轉換的來源值與目標值之間。</span><span class="sxs-lookup"><span data-stu-id="a64c9-151">A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value.</span></span> <span data-ttu-id="a64c9-152">如果無法進行轉換，預設轉換器會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="a64c9-152">If a conversion cannot be made, the default converter returns `null`.</span></span>  
  
 <span data-ttu-id="a64c9-153">如果您想要繫結相關聯的自訂值轉換器，您應該建立類別可實作<xref:System.Windows.Data.IValueConverter>介面，並提供實作<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a64c9-153">If you want to associate a custom value converter with a binding, you should create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and supply implementations for the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="a64c9-154">值轉換器可以將資料從一種類型變更為另一個、 文化特性的詳細資訊，例如字元集之間進行轉換，或修改其呈現方式的其他層面。</span><span class="sxs-lookup"><span data-stu-id="a64c9-154">Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation.</span></span> <span data-ttu-id="a64c9-155">一般轉換案例的範例，請參閱 「 資料轉換 」，在[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-155">For examples of typical conversion scenarios, see "Data Conversion" in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_Converter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="a64c9-156">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="a64c9-156">XAML Attribute Usage</span></span>  
  
```  
<object Converter="myConverter"/>  
```  
  
<a name="xamlValues_Converter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a64c9-157">XAML 值</span><span class="sxs-lookup"><span data-stu-id="a64c9-157">XAML Values</span></span>  
 <span data-ttu-id="a64c9-158">*myConverter*</span><span class="sxs-lookup"><span data-stu-id="a64c9-158">*myConverter*</span></span>  
 <span data-ttu-id="a64c9-159">資源參考至類別可實作<xref:System.Windows.Data.IValueConverter>介面，其中包含實作<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a64c9-159">A resource reference to a class that implements the <xref:System.Windows.Data.IValueConverter> interface, which includes implementations of the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="a64c9-160">若要參考的值轉換器，使用[StaticResource 標記延伸](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-160">To refer to a value converter, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConverterCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConverterCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConverterCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterCulture : System.Globalization.CultureInfo with get, set" Usage="System.Windows.Data.Binding.ConverterCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-161">取得或設定文化特性，藉以評估轉換器。</span><span class="sxs-lookup"><span data-stu-id="a64c9-161">Gets or sets the culture in which to evaluate the converter.</span></span></summary>
        <value><span data-ttu-id="a64c9-162">預設為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-162">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-163">如果您未設定這個屬性，繫結引擎會使用`Language`繫結目標物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-163">If you do not set this property, the binding engine uses the `Language` property of the binding target object.</span></span> <span data-ttu-id="a64c9-164">在 [[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]這預設為"EN-US"，或繼承自] 頁面上，根項目 （或任何項目） 的值，如果已明確設定。</span><span class="sxs-lookup"><span data-stu-id="a64c9-164">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] this defaults to "en-US" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.</span></span>  
  
 <span data-ttu-id="a64c9-165">資料轉換的相關資訊，請參閱中的資料轉換 」 一節[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-165">For information about data conversion, see the Data Conversion section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConverterParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterParameter : obj with get, set" Usage="System.Windows.Data.Binding.ConverterParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-166">取得或設定要傳遞至 <see cref="P:System.Windows.Data.Binding.Converter" /> 的參數。</span><span class="sxs-lookup"><span data-stu-id="a64c9-166">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span></span></summary>
        <value><span data-ttu-id="a64c9-167">要傳遞至 <see cref="P:System.Windows.Data.Binding.Converter" /> 的參數。</span><span class="sxs-lookup"><span data-stu-id="a64c9-167">The parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span></span> <span data-ttu-id="a64c9-168">預設為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-168">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-169">您可以使用<xref:System.Windows.Data.Binding.ConverterParameter%2A>屬性來指定如何轉換物件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-169">You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> property to specify how an object is converted.</span></span>  <span data-ttu-id="a64c9-170">這個屬性會將其他資訊傳遞至您在繫結使用的轉換器。</span><span class="sxs-lookup"><span data-stu-id="a64c9-170">This property passes additional information to a converter that you use on a binding.</span></span>  <span data-ttu-id="a64c9-171">當您指定<xref:System.Windows.Data.Binding.ConverterParameter%2A>，值會傳遞至<xref:System.Windows.Data.IValueConverter.Convert%2A>並<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法為`parameter`參數。</span><span class="sxs-lookup"><span data-stu-id="a64c9-171">When you specify a <xref:System.Windows.Data.Binding.ConverterParameter%2A>, the value is passed to the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods as the `parameter` parameter.</span></span>  
  
 <span data-ttu-id="a64c9-172">如需範例，請參閱[如何：產生的值根據繫結項目清單](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-172">For an example, see [How to: Produce a Value Based on a List of Bound Items](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md).</span></span> <span data-ttu-id="a64c9-173">該範例示範如何實作<xref:System.Windows.Data.IMultiValueConverter>但仍適用於使用方式。</span><span class="sxs-lookup"><span data-stu-id="a64c9-173">That example shows an implementation of an <xref:System.Windows.Data.IMultiValueConverter> but the usage still applies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNothing">
      <MemberSignature Language="C#" Value="public static readonly object DoNothing;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DoNothing" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.DoNothing" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DoNothing As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DoNothing;" />
      <MemberSignature Language="F#" Value=" staticval mutable DoNothing : obj" Usage="System.Windows.Data.Binding.DoNothing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-174">作為傳回值，指示繫結引擎不要執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="a64c9-174">Used as a returned value to instruct the binding engine not to perform any action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-175">繫結來源屬性或轉換子可以傳回<xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType>指示繫結引擎不要執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="a64c9-175">A binding source property or a converter can return <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> to instruct the binding engine not to perform any action.</span></span> <span data-ttu-id="a64c9-176">例如，若要指示繫結引擎不要將值傳輸到繫結目標，不必移至下一個<xref:System.Windows.Data.Binding>中<xref:System.Windows.Data.PriorityBinding>，或不使用`FallBackValue`或預設值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-176">For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <xref:System.Windows.Data.Binding> in a <xref:System.Windows.Data.PriorityBinding>, or not to use the `FallBackValue` or default value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Windows.Data.Binding.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-177">取得或設定要作為繫結來源物件的項目名稱。</span><span class="sxs-lookup"><span data-stu-id="a64c9-177">Gets or sets the name of the element to use as the binding source object.</span></span></summary>
        <value><span data-ttu-id="a64c9-178">值<see langword="Name" />屬性或[X:name 指示詞](~/docs/framework/xaml-services/x-name-directive.md)感興趣的項目。</span><span class="sxs-lookup"><span data-stu-id="a64c9-178">The value of the <see langword="Name" /> property or [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) of the element of interest.</span></span> <span data-ttu-id="a64c9-179">僅當程式碼中的項目透過 <see langword="RegisterName" /> 登錄為適當的 <see cref="T:System.Windows.NameScope" />，您才可以對其參考。</span><span class="sxs-lookup"><span data-stu-id="a64c9-179">You can refer to elements in code only if they are registered to the appropriate <see cref="T:System.Windows.NameScope" /> through <see langword="RegisterName" />.</span></span> <span data-ttu-id="a64c9-180">如需詳細資訊，請參閱 &lt; [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-180">For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
<span data-ttu-id="a64c9-181">預設為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-181">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-182">當您想要繫結至您的應用程式中的另一個項目的屬性，此屬性相當實用。</span><span class="sxs-lookup"><span data-stu-id="a64c9-182">This property is useful when you want to bind to the property of another element in your application.</span></span> <span data-ttu-id="a64c9-183">比方說，如果您想要使用<xref:System.Windows.Controls.Slider>控制的應用程式中的另一個控制項的高度或如果您想要繫結<xref:System.Windows.Controls.ContentControl.Content%2A>的控制項<xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A>屬性您<xref:System.Windows.Controls.ListBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="a64c9-183">For example, if you want to use a <xref:System.Windows.Controls.Slider> to control the height of another control in your application, or if you want to bind the <xref:System.Windows.Controls.ContentControl.Content%2A> of your control to the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> property of your <xref:System.Windows.Controls.ListBox> control.</span></span>  
  
 <span data-ttu-id="a64c9-184">根據預設，繫結繼承所指定的資料內容`DataContext`如果已設定的屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-184">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="a64c9-185">不過，<xref:System.Windows.Data.Binding.ElementName%2A>屬性是其中一種方式，您可以明確設定的來源<xref:System.Windows.Data.Binding>並覆寫繼承的資料內容。</span><span class="sxs-lookup"><span data-stu-id="a64c9-185">However, the <xref:System.Windows.Data.Binding.ElementName%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="a64c9-186">如需詳細資訊，請參閱[如何：指定繫結來源](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-186">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="a64c9-187"><xref:System.Windows.Data.Binding.Source%2A>並<xref:System.Windows.Data.Binding.RelativeSource%2A>的屬性<xref:System.Windows.Data.Binding>類別也可讓您設定的繫結來源明確。</span><span class="sxs-lookup"><span data-stu-id="a64c9-187">The <xref:System.Windows.Data.Binding.Source%2A> and <xref:System.Windows.Data.Binding.RelativeSource%2A> properties of the <xref:System.Windows.Data.Binding> class also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="a64c9-188">不過，只有三個屬性，其中<xref:System.Windows.Data.Binding.ElementName%2A>， <xref:System.Windows.Data.Binding.Source%2A>，和<xref:System.Windows.Data.Binding.RelativeSource%2A>、 應該設定為每個繫結，或可能會發生衝突。</span><span class="sxs-lookup"><span data-stu-id="a64c9-188">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict might occur.</span></span> <span data-ttu-id="a64c9-189">如果繫結來源衝突，則這個屬性會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a64c9-189">This property throws an exception if there is a binding source conflict.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNamespaceManager GetXmlNamespaceManager(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlNamespaceManager (target As DependencyObject) As XmlNamespaceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlNamespaceManager ^ GetXmlNamespaceManager(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetXmlNamespaceManager : System.Windows.DependencyObject -&gt; System.Xml.XmlNamespaceManager" Usage="System.Windows.Data.Binding.GetXmlNamespaceManager target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNamespaceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="a64c9-190">要從中取得命名空間資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-190">The object from which to get namespace information.</span></span></param>
        <summary><span data-ttu-id="a64c9-191">傳回附加至指定物件之繫結所使用的 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 命名空間管理員物件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-191">Returns an [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] namespace manager object used by the binding attached to the specified object.</span></span></summary>
        <returns><span data-ttu-id="a64c9-192">所傳回的物件，用於檢視與所傳遞物件項目之繫結相關的 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 命名空間。</span><span class="sxs-lookup"><span data-stu-id="a64c9-192">A returned object used for viewing [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespaces that relate to the binding on the passed object element.</span></span> <span data-ttu-id="a64c9-193">這個物件應轉換為 <see cref="T:System.Xml.XmlNamespaceManager" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-193">This object should be cast as <see cref="T:System.Xml.XmlNamespaceManager" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-194">這個方法支援的附加的屬性使用方式<xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>附加屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-194">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] <span data-ttu-id="a64c9-195">命名空間管理員會繫結中的資料來源時，才適用[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]繫結來源 (<xref:System.Windows.Data.XmlDataProvider>物件)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-195">namespace managers are relevant only if the data in the binding came from an [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] binding source (<xref:System.Windows.Data.XmlDataProvider> object).</span></span>  
  
 <span data-ttu-id="a64c9-196">如果命名空間管理員未特別套用原始資料來源建立，或是藉由後續呼叫<xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A>繫結，則這個方法會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="a64c9-196">If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> on the binding, then this method will return `null`.</span></span>  
  
 <span data-ttu-id="a64c9-197">這個方法一律會傳回`null`如果繫結背後的資料不是[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="a64c9-197">This method will always return `null` if the data behind the binding is not [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a64c9-198"><paramref name="target" /> 參數不可為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-198">The <paramref name="target" /> parameter cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexerName">
      <MemberSignature Language="C#" Value="public const string IndexerName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IndexerName" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.IndexerName" />
      <MemberSignature Language="VB.NET" Value="Public Const IndexerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ IndexerName;" />
      <MemberSignature Language="F#" Value="val mutable IndexerName : string" Usage="System.Windows.Data.Binding.IndexerName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-199">做為 <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> 的 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />，表示索引子屬性已變更。</span><span class="sxs-lookup"><span data-stu-id="a64c9-199">Used as the <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> of <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> to indicate that an indexer property has changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAsync : bool with get, set" Usage="System.Windows.Data.Binding.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-200">取得或設定值，指出 <see cref="T:System.Windows.Data.Binding" /> 是否應該以非同步方式取得並設定值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-200">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.Binding" /> should get and set values asynchronously.</span></span></summary>
        <value><span data-ttu-id="a64c9-201">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-201">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-202">使用<xref:System.Windows.Data.Binding.IsAsync%2A>屬性時`get`您繫結來源屬性的存取子可能需要很長的時間。</span><span class="sxs-lookup"><span data-stu-id="a64c9-202">Use the <xref:System.Windows.Data.Binding.IsAsync%2A> property when the `get` accessor of your binding source property might take a long time.</span></span> <span data-ttu-id="a64c9-203">其中一個範例是使用的映像屬性`get`從網路下載的存取子。</span><span class="sxs-lookup"><span data-stu-id="a64c9-203">One example is an image property with a `get` accessor that downloads from the Web.</span></span> <span data-ttu-id="a64c9-204">設定<xref:System.Windows.Data.Binding.IsAsync%2A>要`true`可避免[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]時進行下載。</span><span class="sxs-lookup"><span data-stu-id="a64c9-204">Setting <xref:System.Windows.Data.Binding.IsAsync%2A> to `true` avoids blocking the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] while the download occurs.</span></span>  
  
 <span data-ttu-id="a64c9-205">等候要送達的值，報告繫結<xref:System.Windows.Data.BindingBase.FallbackValue%2A>，如果有的話，或預設值繫結的目標屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-205">While waiting for the value to arrive, the binding reports the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available, or the default value of the binding target property.</span></span>  
  
 <span data-ttu-id="a64c9-206">不過，不應該有許多的情況下，您需要使用<xref:System.Windows.Data.Binding.IsAsync%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-206">However, there should not be many scenarios where you need to use the <xref:System.Windows.Data.Binding.IsAsync%2A> property.</span></span> <span data-ttu-id="a64c9-207">[!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)]指導方針，建議您不要定義速度較慢的欄位集合會比的屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-207">The [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] guidelines recommend against defining properties that are orders of magnitude slower than a field set would be.</span></span> <span data-ttu-id="a64c9-208">當您建立您的類別時，請考慮將處理的速度非常慢的作業之外`get`存取子，並快取的結果。</span><span class="sxs-lookup"><span data-stu-id="a64c9-208">When you are creating your class, consider handling extremely slow operations outside of the `get` accessor and caching the result.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.AsyncState" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
        <altmember cref="T:System.Windows.PropertyChangedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As BindingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingMode Mode { System::Windows::Data::BindingMode get(); void set(System::Windows::Data::BindingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Windows.Data.BindingMode with get, set" Usage="System.Windows.Data.Binding.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-209">取得或設定值，這個值表示繫結中資料流程的方向。</span><span class="sxs-lookup"><span data-stu-id="a64c9-209">Gets or sets a value that indicates the direction of the data flow in the binding.</span></span></summary>
        <value><span data-ttu-id="a64c9-210">其中一個 <see cref="T:System.Windows.Data.BindingMode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-210">One of the <see cref="T:System.Windows.Data.BindingMode" /> values.</span></span> <span data-ttu-id="a64c9-211">預設值為 <see cref="F:System.Windows.Data.BindingMode.Default" />，它會傳回目標相依性屬性的預設繫結模式值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-211">The default is <see cref="F:System.Windows.Data.BindingMode.Default" />, which returns the default binding mode value of the target dependency property.</span></span> <span data-ttu-id="a64c9-212">不過，每個相依性屬性的預設值都會不同。</span><span class="sxs-lookup"><span data-stu-id="a64c9-212">However, the default value varies for each dependency property.</span></span> <span data-ttu-id="a64c9-213">一般而言，使用者可編輯的控制項屬性 (例如文字方塊和核取方塊的控制項屬性) 預設為雙向繫結程序，而其他大多數屬性則預設為單向繫結程序。</span><span class="sxs-lookup"><span data-stu-id="a64c9-213">In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</span></span>  
  
<span data-ttu-id="a64c9-214">判斷相依性屬性預設是否會單向或雙向繫結的程式設計方式是，使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 取得屬性的屬性中繼資料，然後檢查 <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> 屬性的布林值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-214">A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-215">若要支援<xref:System.Windows.Data.BindingMode.OneWay>並<xref:System.Windows.Data.BindingMode.TwoWay>繫結，基礎資料必須實作<xref:System.ComponentModel.INotifyPropertyChanged>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-215">To support <xref:System.Windows.Data.BindingMode.OneWay> and <xref:System.Windows.Data.BindingMode.TwoWay> bindings, the underlying data must implement <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="a64c9-216">如需詳細資訊，請參閱[如何：實作屬性變更通知](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-216">For details, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span>  
  
 <span data-ttu-id="a64c9-217">針對<xref:System.Windows.Data.BindingMode.TwoWay>或是<xref:System.Windows.Data.BindingMode.OneWayToSource>繫結，您可以設定來控制目標至來源更新<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-217">For <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> bindings, you can control the target-to-source updates by setting the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span> <span data-ttu-id="a64c9-218">如需詳細資訊，請參閱<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-218">For more information, see <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.</span></span>  
  
 <span data-ttu-id="a64c9-219">如需有關不同的繫結模式的詳細資訊，請參閱[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-219">For more information on the different binding modes, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnSourceUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnSourceUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnSourceUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnSourceUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnSourceUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnSourceUpdated : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-220">當值從繫結目標轉送到繫結來源時，取得或設定指出是否引發 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 事件的值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-220">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event when a value is transferred from the binding target to the binding source.</span></span></summary>
        <value><span data-ttu-id="a64c9-221">如果更新繫結來源值時應該引發 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 事件，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-221"><see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event should be raised when the binding source value is updated; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a64c9-222">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-222">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnTargetUpdated : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-223">取得或設定值，指出將值從繫結來源轉送到繫結目標時，是否引發 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-223">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event when a value is transferred from the binding source to the binding target.</span></span></summary>
        <value><span data-ttu-id="a64c9-224">如果更新繫結目標值時會引發 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 事件，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-224"><see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event should be raised when the binding target value is updated; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a64c9-225">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-225">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-226">取得或設定值，這個值指出是否要在繫結物件上引發 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-226">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event on the bound object.</span></span></summary>
        <value><span data-ttu-id="a64c9-227"><see langword="true" /> 如果<see cref="E:System.Windows.Controls.Validation.Error" />附加的事件應該在來源更新期間驗證錯誤時在繫結物件上引發，否則<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-227"><see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a64c9-228">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-228">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-229">如果繫結具有<xref:System.Windows.Data.Binding.ValidationRules%2A>與它相關聯，則繫結引擎會檢查每個規則，每次將目標屬性值傳輸到 [來源] 屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-229">If the binding has <xref:System.Windows.Data.Binding.ValidationRules%2A> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property.</span></span> <span data-ttu-id="a64c9-230">如果規則導致無效的值，就會建立繫結引擎<xref:System.Windows.Controls.ValidationError>物件，並將它加入至<xref:System.Windows.Controls.Validation>。<xref:System.Windows.Controls.Validation.Errors%2A></span><span class="sxs-lookup"><span data-stu-id="a64c9-230">If a rule invalidates a value, the binding engine creates a <xref:System.Windows.Controls.ValidationError> object and adds it to the <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A></span></span> <span data-ttu-id="a64c9-231">繫結物件的集合。</span><span class="sxs-lookup"><span data-stu-id="a64c9-231">collection of the bound object.</span></span> <span data-ttu-id="a64c9-232">當<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>屬性不是空的<xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType>之物件的附加的屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="a64c9-232">When the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> property is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> attached property of the object is set to `true`.</span></span> <span data-ttu-id="a64c9-233">如果<xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>的屬性<xref:System.Windows.Data.Binding>設為`true`，然後繫結引擎會引發<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>附加物件上的事件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-233">If the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event on the object.</span></span>  
  
 <span data-ttu-id="a64c9-234">如需驗證程序的詳細討論，請參閱中的資料驗證一節[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-234">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyPath Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyPath Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyPath ^ Path { System::Windows::PropertyPath ^ get(); void set(System::Windows::PropertyPath ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : System.Windows.PropertyPath with get, set" Usage="System.Windows.Data.Binding.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-235">取得或設定繫結程序來源屬性的路徑。</span><span class="sxs-lookup"><span data-stu-id="a64c9-235">Gets or sets the path to the binding source property.</span></span></summary>
        <value><span data-ttu-id="a64c9-236">繫結來源的路徑。</span><span class="sxs-lookup"><span data-stu-id="a64c9-236">The path to the binding source.</span></span> <span data-ttu-id="a64c9-237">預設為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-237">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-238">每個繫結通常會有四個元件： 繫結目標物件、 目標屬性、 繫結來源和在要使用的繫結來源值的路徑。</span><span class="sxs-lookup"><span data-stu-id="a64c9-238">Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use.</span></span> <span data-ttu-id="a64c9-239">如需有關這些資料繫結概念的詳細資訊，請參閱 <<c0> [ 資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-239">For more information about these data binding concepts, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="a64c9-240">使用<xref:System.Windows.Data.Binding.Path%2A>屬性來指定您想要繫結來源值：</span><span class="sxs-lookup"><span data-stu-id="a64c9-240">Use the <xref:System.Windows.Data.Binding.Path%2A> property to specify the source value you want to bind to:</span></span>  
  
-   <span data-ttu-id="a64c9-241">在最簡單的案例中，<xref:System.Windows.Data.Binding.Path%2A>屬性值是使用繫結，例如來源物件的屬性名稱`Path=PropertyName`。</span><span class="sxs-lookup"><span data-stu-id="a64c9-241">In the simplest case, the <xref:System.Windows.Data.Binding.Path%2A> property value is the name of the property of the source object to use for the binding, such as `Path=PropertyName`.</span></span>  
  
-   <span data-ttu-id="a64c9-242">類似於 C# 中使用的語法可以指定子屬性的屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-242">Subproperties of a property can be specified by a syntax similar to that used in C#.</span></span> <span data-ttu-id="a64c9-243">例如，子句 `Path=ShoppingCart.Order` 會將繫結設定為物件或屬性 `ShoppingCart` 的子屬性 `Order`。</span><span class="sxs-lookup"><span data-stu-id="a64c9-243">For instance, the clause `Path=ShoppingCart.Order` sets the binding to the subproperty `Order` of the object or property `ShoppingCart`.</span></span>  
  
-   <span data-ttu-id="a64c9-244">若要繫結至附加屬性，請在附加屬性前後加上括號。</span><span class="sxs-lookup"><span data-stu-id="a64c9-244">To bind to an attached property, place parentheses around the attached property.</span></span> <span data-ttu-id="a64c9-245">例如，若要繫結至附加屬性<xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>，語法是`Path=(DockPanel.Dock)`。</span><span class="sxs-lookup"><span data-stu-id="a64c9-245">For example, to bind to the attached property <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>, the syntax is `Path=(DockPanel.Dock)`.</span></span>  
  
-   <span data-ttu-id="a64c9-246">屬性的索引子可以在方括弧內指定，接在套用索引子的屬性名稱後面。</span><span class="sxs-lookup"><span data-stu-id="a64c9-246">Indexers of a property can be specified within square brackets following the property name where the indexer is applied.</span></span> <span data-ttu-id="a64c9-247">例如，子句 `Path=ShoppingCart[0]` 會將繫結設定為索引，而該索引對應於屬性之內部索引處理常值字串 "0" 的方式。</span><span class="sxs-lookup"><span data-stu-id="a64c9-247">For instance, the clause `Path=ShoppingCart[0]` sets the binding to the index that corresponds to how your property's internal indexing handles the literal string "0".</span></span> <span data-ttu-id="a64c9-248">也支援多個索引子。</span><span class="sxs-lookup"><span data-stu-id="a64c9-248">Multiple indexers are also supported.</span></span>  
  
-   <span data-ttu-id="a64c9-249">`Path` 子句中可以混合使用索引子和子屬性；例如，`Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span><span class="sxs-lookup"><span data-stu-id="a64c9-249">Indexers and subproperties can be mixed in a `Path` clause; for example, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span></span>  
  
-   <span data-ttu-id="a64c9-250">您可以在索引子內加入多個以逗號 (,) 分隔的索引子參數。</span><span class="sxs-lookup"><span data-stu-id="a64c9-250">Inside indexers you can have multiple indexer parameters separated by commas (,).</span></span> <span data-ttu-id="a64c9-251">各個參數的型別可以使用括號指定。</span><span class="sxs-lookup"><span data-stu-id="a64c9-251">The type of each parameter can be specified with parentheses.</span></span> <span data-ttu-id="a64c9-252">例如，您可以加入 `Path="[(sys:Int32)42,(sys:Int32)24]"`，其中 `sys` 對應至 `System` 命名空間。</span><span class="sxs-lookup"><span data-stu-id="a64c9-252">For example, you can have `Path="[(sys:Int32)42,(sys:Int32)24]"`, where `sys` is mapped to the `System` namespace.</span></span>  
  
-   <span data-ttu-id="a64c9-253">當來源為集合檢視時，就可以使用斜線 (/) 指定目前的項目。</span><span class="sxs-lookup"><span data-stu-id="a64c9-253">When the source is a collection view, the current item can be specified with a slash (/).</span></span> <span data-ttu-id="a64c9-254">例如，子句 `Path=/` 會將繫結設定為檢視中目前的項目。</span><span class="sxs-lookup"><span data-stu-id="a64c9-254">For example, the clause `Path=/` sets the binding to the current item in the view.</span></span> <span data-ttu-id="a64c9-255">如果來源為集合，這個語法就會指定預設集合檢視目前的項目。</span><span class="sxs-lookup"><span data-stu-id="a64c9-255">When the source is a collection, this syntax specifies the current item of the default collection view.</span></span>  
  
-   <span data-ttu-id="a64c9-256">屬性名稱和斜線可以組合用來周遊本身為集合的屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-256">Property names and slashes can be combined to traverse properties that are collections.</span></span> <span data-ttu-id="a64c9-257">例如，`Path=/Offices/ManagerName` 會指定來源集合目前的項目，其中包含同樣為集合的 `Offices` 屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-257">For example, `Path=/Offices/ManagerName` specifies the current item of the source collection, which contains an `Offices` property that is also a collection.</span></span> <span data-ttu-id="a64c9-258">其目前項目為包含 `ManagerName` 屬性的物件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-258">Its current item is an object that contains a `ManagerName` property.</span></span>  
  
-   <span data-ttu-id="a64c9-259">另外，可以使用句號 (.) 路徑來繫結至目前的來源。</span><span class="sxs-lookup"><span data-stu-id="a64c9-259">Optionally, a period (.) path can be used to bind to the current source.</span></span> <span data-ttu-id="a64c9-260">例如，`Text="{Binding}"` 等於 `Text="{Binding Path=.}"`。</span><span class="sxs-lookup"><span data-stu-id="a64c9-260">For example, `Text="{Binding}"` is equivalent to `Text="{Binding Path=.}"`.</span></span>  
  
 <span data-ttu-id="a64c9-261">如需路徑語法的詳細資訊，請參閱 <<c0> [ 繫結宣告概觀](~/docs/framework/wpf/data/binding-declarations-overview.md)或是[PropertyPath XAML 語法](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-261">For information about path syntax, see [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md) or [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
 <span data-ttu-id="a64c9-262">針對[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]繫結，請參閱<xref:System.Windows.Data.Binding.XPath%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-262">For [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] bindings, see the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span>  
  
 <span data-ttu-id="a64c9-263">若要繫結至整個物件，您不需要指定<xref:System.Windows.Data.Binding.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-263">To bind to an entire object, you do not need to specify the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span> <span data-ttu-id="a64c9-264">如需詳細資訊，請參閱 「 指定的路徑以值 」 中[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-264">For more information, see "Specifying the Path to the Value" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a64c9-265">下列範例示範樣式觸發程序建立<xref:System.Windows.Controls.ToolTip>報告驗證錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="a64c9-265">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="a64c9-266">Setter 值繫結至目前的錯誤內容<xref:System.Windows.Controls.TextBox>(<xref:System.Windows.Controls.TextBox>使用樣式) 使用<xref:System.Windows.Data.Binding.RelativeSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-266">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="a64c9-267">如需有關此範例的詳細資訊，請參閱[How to:實作繫結驗證](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-267">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativeSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSource RelativeSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.RelativeSource RelativeSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.RelativeSource" />
      <MemberSignature Language="VB.NET" Value="Public Property RelativeSource As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSource ^ RelativeSource { System::Windows::Data::RelativeSource ^ get(); void set(System::Windows::Data::RelativeSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelativeSource : System.Windows.Data.RelativeSource with get, set" Usage="System.Windows.Data.Binding.RelativeSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-268">透過指定繫結來源對繫結目標的相對位置，取得或設定繫結來源。</span><span class="sxs-lookup"><span data-stu-id="a64c9-268">Gets or sets the binding source by specifying its location relative to the position of the binding target.</span></span></summary>
        <value><span data-ttu-id="a64c9-269"><see cref="T:System.Windows.Data.RelativeSource" /> 物件，指定要使用的繫結來源相對位置。</span><span class="sxs-lookup"><span data-stu-id="a64c9-269">A <see cref="T:System.Windows.Data.RelativeSource" /> object specifying the relative location of the binding source to use.</span></span> <span data-ttu-id="a64c9-270">預設為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-270">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-271">這個屬性常用的物件的一個屬性繫結至相同的物件，另一個屬性，或在樣式或範本中定義繫結。</span><span class="sxs-lookup"><span data-stu-id="a64c9-271">This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.</span></span>  
  
 <span data-ttu-id="a64c9-272">根據預設，繫結繼承所指定的資料內容`DataContext`如果已設定的屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-272">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="a64c9-273">不過，<xref:System.Windows.Data.Binding.RelativeSource%2A>屬性是其中一種方式，您可以明確設定的來源<xref:System.Windows.Data.Binding>並覆寫繼承的資料內容。</span><span class="sxs-lookup"><span data-stu-id="a64c9-273">However, the <xref:System.Windows.Data.Binding.RelativeSource%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="a64c9-274">如需詳細資訊，請參閱[如何：指定繫結來源](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-274">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="a64c9-275"><xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType>和<xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType>屬性也可讓您設定的繫結來源明確。</span><span class="sxs-lookup"><span data-stu-id="a64c9-275">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="a64c9-276">不過，只有三個屬性，其中<xref:System.Windows.Data.Binding.ElementName%2A>， <xref:System.Windows.Data.Binding.Source%2A>，和<xref:System.Windows.Data.Binding.RelativeSource%2A>、 應該設定為每個繫結，或可能會發生衝突。</span><span class="sxs-lookup"><span data-stu-id="a64c9-276">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="a64c9-277">如果繫結來源衝突，則這個屬性會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a64c9-277">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="a64c9-278">針對[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]的詳細資訊，請參閱 < [RelativeSource 標記延伸](~/docs/framework/wpf/advanced/relativesource-markupextension.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-278">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).</span></span>  
    
## Examples  
 <span data-ttu-id="a64c9-279">下列範例示範樣式觸發程序建立<xref:System.Windows.Controls.ToolTip>報告驗證錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="a64c9-279">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="a64c9-280">Setter 值繫結至目前的錯誤內容<xref:System.Windows.Controls.TextBox>(<xref:System.Windows.Controls.TextBox>使用樣式) 使用<xref:System.Windows.Data.Binding.RelativeSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-280">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="a64c9-281">如需有關此範例的詳細資訊，請參閱[How to:實作繫結驗證](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-281">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 <span data-ttu-id="a64c9-282">若要查看完整的範例，請參閱[繫結驗證範例](https://go.microsoft.com/fwlink/?LinkID=159972)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-282">To see the full example, see [Binding Validation Sample](https://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Source" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveSourceUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.RemoveSourceUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a64c9-283">接聽此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-283">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="a64c9-284">要移除的處理常式。</span><span class="sxs-lookup"><span data-stu-id="a64c9-284">The handler to remove.</span></span></param>
        <summary><span data-ttu-id="a64c9-285">移除 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件的處理常式。</span><span class="sxs-lookup"><span data-stu-id="a64c9-285">Removes a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-286">這個方法支援附加的事件的使用中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="a64c9-286">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveTargetUpdatedHandler : System.Windows.DependencyObject * EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; -&gt; unit" Usage="System.Windows.Data.Binding.RemoveTargetUpdatedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="a64c9-287">接聽此事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-287">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span></span></param>
        <param name="handler"><span data-ttu-id="a64c9-288">要移除的處理常式。</span><span class="sxs-lookup"><span data-stu-id="a64c9-288">The handler to remove.</span></span></param>
        <summary><span data-ttu-id="a64c9-289">移除 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件的處理常式。</span><span class="sxs-lookup"><span data-stu-id="a64c9-289">Removes a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-290">這個方法支援附加的事件的使用中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="a64c9-290">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetXmlNamespaceManager(class System.Windows.DependencyObject target, class System.Xml.XmlNamespaceManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetXmlNamespaceManager (target As DependencyObject, value As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetXmlNamespaceManager(System::Windows::DependencyObject ^ target, System::Xml::XmlNamespaceManager ^ value);" />
      <MemberSignature Language="F#" Value="static member SetXmlNamespaceManager : System.Windows.DependencyObject * System.Xml.XmlNamespaceManager -&gt; unit" Usage="System.Windows.Data.Binding.SetXmlNamespaceManager (target, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="a64c9-291">要從中取得命名空間資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-291">The object from which to get namespace information.</span></span></param>
        <param name="value"><span data-ttu-id="a64c9-292">用於傳遞之項目中的命名空間評估的 <see cref="T:System.Xml.XmlNamespaceManager" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-292">The <see cref="T:System.Xml.XmlNamespaceManager" /> to use for namespace evaluation in the passed element.</span></span></param>
        <summary><span data-ttu-id="a64c9-293">設定所提供項目附加的繫結所使用的命名空間管理員物件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-293">Sets a namespace manager object used by the binding attached to the provided element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-294">這個方法支援的附加的屬性使用方式<xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>附加屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-294">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a64c9-295"><paramref name="target" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-295"><paramref name="target" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePath">
      <MemberSignature Language="C#" Value="public bool ShouldSerializePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializePath" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializePath () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializePath();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializePath : unit -&gt; bool" Usage="binding.ShouldSerializePath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a64c9-296">指示是否應該保存 <see cref="P:System.Windows.Data.Binding.Path" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-296">Indicates whether the <see cref="P:System.Windows.Data.Binding.Path" /> property should be persisted.</span></span></summary>
        <returns><span data-ttu-id="a64c9-297">如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-297"><see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-298">這`ShouldSerialize`提供方法，因為<xref:System.Windows.Data.Binding.Path%2A>屬性並沒有簡單的預設值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-298">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Path%2A> property does not have a simple default value.</span></span> <span data-ttu-id="a64c9-299">這個方法會指出屬性是否已變更其預設值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-299">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="a64c9-300">您通常叫用這個方法如果您正在開發的設計工具<xref:System.Windows.Data.Binding>或是開發您自己的控制項併入<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-300">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSource">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeSource" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSource();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeSource : unit -&gt; bool" Usage="binding.ShouldSerializeSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a64c9-301">指示是否應該保存 <see cref="P:System.Windows.Data.Binding.Source" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-301">Indicates whether the <see cref="P:System.Windows.Data.Binding.Source" /> property should be persisted.</span></span></summary>
        <returns><span data-ttu-id="a64c9-302">如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-302"><see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-303">這`ShouldSerialize`提供方法，因為<xref:System.Windows.Data.Binding.Source%2A>屬性並沒有簡單的預設值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-303">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Source%2A> property does not have a simple default value.</span></span> <span data-ttu-id="a64c9-304">這個方法會指出屬性是否已變更其預設值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-304">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="a64c9-305">您通常叫用這個方法如果您正在開發的設計工具<xref:System.Windows.Data.Binding>或是開發您自己的控制項併入<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-305">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValidationRules">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeValidationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeValidationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeValidationRules () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeValidationRules();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeValidationRules : unit -&gt; bool" Usage="binding.ShouldSerializeValidationRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a64c9-306">指示是否應該保存 <see cref="P:System.Windows.Data.Binding.ValidationRules" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-306">Indicates whether the <see cref="P:System.Windows.Data.Binding.ValidationRules" /> property should be persisted.</span></span></summary>
        <returns><span data-ttu-id="a64c9-307">如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-307"><see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-308">這`ShouldSerialize`提供方法，因為<xref:System.Windows.Data.Binding.ValidationRules%2A>屬性並沒有簡單的預設值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-308">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.ValidationRules%2A> property does not have a simple default value.</span></span> <span data-ttu-id="a64c9-309">這個方法會指出屬性是否已變更其預設值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-309">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="a64c9-310">您通常叫用這個方法如果您正在開發的設計工具<xref:System.Windows.Data.Binding>或是開發您自己的控制項併入<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-310">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public object Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Source { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : obj with get, set" Usage="System.Windows.Data.Binding.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-311">取得或設定要作為繫結來源的物件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-311">Gets or sets the object to use as the binding source.</span></span></summary>
        <value><span data-ttu-id="a64c9-312">要作為繫結來源的物件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-312">The object to use as the binding source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-313">根據預設，繫結繼承所指定的資料內容`DataContext`如果已設定的屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-313">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="a64c9-314">不過，<xref:System.Windows.Data.Binding.Source%2A>屬性是其中一種方式，您可以明確設定的來源<xref:System.Windows.Data.Binding>並覆寫繼承的資料內容。</span><span class="sxs-lookup"><span data-stu-id="a64c9-314">However, the <xref:System.Windows.Data.Binding.Source%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="a64c9-315">如果您不需要的功能建立的範圍中的數個屬性都繼承相同的資料內容，您可以使用<xref:System.Windows.Data.Binding.Source%2A>屬性而非`DataContext`屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-315">If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <xref:System.Windows.Data.Binding.Source%2A> property instead of the `DataContext` property.</span></span>  
  
 <span data-ttu-id="a64c9-316"><xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType>和<xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType>屬性也可讓您設定的繫結來源明確。</span><span class="sxs-lookup"><span data-stu-id="a64c9-316">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="a64c9-317">不過，只有三個屬性，其中<xref:System.Windows.Data.Binding.ElementName%2A>， <xref:System.Windows.Data.Binding.Source%2A>，和<xref:System.Windows.Data.Binding.RelativeSource%2A>、 應該設定為每個繫結，或可能會發生衝突。</span><span class="sxs-lookup"><span data-stu-id="a64c9-317">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="a64c9-318">如果繫結來源衝突，則這個屬性會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a64c9-318">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="a64c9-319">若要清除此屬性，將它設定為<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-319">To clear this property, set it to <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_Source"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="a64c9-320">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="a64c9-320">XAML Attribute Usage</span></span>  
  
```  
<object Source="object"/>  
```  
  
<a name="xamlValues_Source"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a64c9-321">XAML 值</span><span class="sxs-lookup"><span data-stu-id="a64c9-321">XAML Values</span></span>  
 <span data-ttu-id="a64c9-322">*object*</span><span class="sxs-lookup"><span data-stu-id="a64c9-322">*object*</span></span>  
 <span data-ttu-id="a64c9-323">現有的物件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-323">An existing object.</span></span> <span data-ttu-id="a64c9-324">若要參考現有的物件，使用[StaticResource 標記延伸](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span><span class="sxs-lookup"><span data-stu-id="a64c9-324">To refer to an existing object, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a64c9-325">下列範例會使用`Person`物件具有名為字串屬性`PersonName`中所定義`SDKSample`命名空間，第一個反白顯示的列所示。</span><span class="sxs-lookup"><span data-stu-id="a64c9-325">The following example uses a `Person` object with a string property named `PersonName` that is defined in the `SDKSample` namespace, as the first highlighted line shows.</span></span> <span data-ttu-id="a64c9-326">在反白顯示列，其中包含`<src>`項目，它會具現化`Person`物件`PersonName`屬性值為`Joe`。</span><span class="sxs-lookup"><span data-stu-id="a64c9-326">In the highlighted line that contains the `<src>` element, it instantiates the `Person` object with a `PersonName` property value of `Joe`.</span></span> <span data-ttu-id="a64c9-327">這在完成`Resources`區段，然後指派`x:Key`。</span><span class="sxs-lookup"><span data-stu-id="a64c9-327">This is done in the `Resources` section and assigned an `x:Key`.</span></span>  
  
 [!code-xaml[BindingInstantiation](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleBinding/CSharp/Page1.xaml?highlight=4,9,37)]  
  
 <span data-ttu-id="a64c9-328">反白顯示包含的那一行`<TextBlock>`項目示範如何將繫結至`PersonName`屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-328">The highlighted line that contains the `<TextBlock>` elements shows how to bind to the `PersonName` property.</span></span> <span data-ttu-id="a64c9-329">如此一來，<xref:System.Windows.Controls.TextBlock>控制項是顯示為"Joe"的值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-329">As a result, the <xref:System.Windows.Controls.TextBlock> control appears with the value "Joe".</span></span>  
  
 <span data-ttu-id="a64c9-330">在下列範例中，<xref:System.Windows.Data.Binding.Source%2A>的值<xref:System.Windows.Data.Binding>物件都會設為`static`屬性<xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="a64c9-330">In the following example, the <xref:System.Windows.Data.Binding.Source%2A> values of the <xref:System.Windows.Data.Binding> objects are set to the `static` property <xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span></span>  
  
 [!code-xaml[DataBindingLab#ComboBoxMultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/AddProductWindow.xaml#comboboxmultibinding)]  
  
 <span data-ttu-id="a64c9-331">如需完整範例，請參閱 <<c0> [ 資料繫結示範](https://go.microsoft.com/fwlink/?LinkID=163703)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-331">For the full example, see [Data Binding Demo](https://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdated">
      <MemberSignature Language="C#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.SourceUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="F#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" Usage="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a64c9-332">當某個值從繫結目標傳輸至繫結來源，但只在繫結已設定為 <see langword="true" /> 的 <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> 值時發生。</span><span class="sxs-lookup"><span data-stu-id="a64c9-332">Occurs when a value is transferred from the binding target to the binding source, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" /> value set to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SourceUpdatedEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a64c9-333">路由事件資訊</span><span class="sxs-lookup"><span data-stu-id="a64c9-333">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a64c9-334">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="a64c9-334">Identifier field</span></span>|<xref:System.Windows.Data.Binding.SourceUpdatedEvent>|  
|<span data-ttu-id="a64c9-335">路由策略</span><span class="sxs-lookup"><span data-stu-id="a64c9-335">Routing strategy</span></span>|<span data-ttu-id="a64c9-336">事件反昇</span><span class="sxs-lookup"><span data-stu-id="a64c9-336">Bubbling</span></span>|  
|<span data-ttu-id="a64c9-337">Delegate - 委派</span><span class="sxs-lookup"><span data-stu-id="a64c9-337">Delegate</span></span>|<span data-ttu-id="a64c9-338"><xref:System.EventHandler%601>受限於<xref:System.Windows.Data.DataTransferEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-338"><xref:System.EventHandler%601>, constrained to <xref:System.Windows.Data.DataTransferEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
        <altmember cref="E:System.Windows.Data.Binding.TargetUpdated" />
      </Docs>
    </Member>
    <Member MemberName="SourceUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SourceUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SourceUpdatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SourceUpdatedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-339">識別 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-339">Identifies the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdated">
      <MemberSignature Language="C#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.TargetUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="F#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" Usage="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a64c9-340">發生於值從繫結來源傳送至繫結目標時，但僅針對 <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> 值設為 <see langword="true" /> 的繫結。</span><span class="sxs-lookup"><span data-stu-id="a64c9-340">Occurs when a value is transferred from the binding source to the binding target, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" /> value set to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TargetUpdatedEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="a64c9-341">路由事件資訊</span><span class="sxs-lookup"><span data-stu-id="a64c9-341">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a64c9-342">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="a64c9-342">Identifier field</span></span>|<xref:System.Windows.Data.Binding.TargetUpdatedEvent>|  
|<span data-ttu-id="a64c9-343">路由策略</span><span class="sxs-lookup"><span data-stu-id="a64c9-343">Routing strategy</span></span>|<span data-ttu-id="a64c9-344">事件反昇</span><span class="sxs-lookup"><span data-stu-id="a64c9-344">Bubbling</span></span>|  
|<span data-ttu-id="a64c9-345">Delegate - 委派</span><span class="sxs-lookup"><span data-stu-id="a64c9-345">Delegate</span></span>|<span data-ttu-id="a64c9-346"><xref:System.EventHandler%601>受限於<xref:System.Windows.Data.DataTransferEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-346"><xref:System.EventHandler%601>, constrained to <xref:System.Windows.Data.DataTransferEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
        <altmember cref="E:System.Windows.Data.Binding.SourceUpdated" />
      </Docs>
    </Member>
    <Member MemberName="TargetUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TargetUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TargetUpdatedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TargetUpdatedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-347">識別 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-347">Identifies the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceExceptionFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceExceptionFilter As UpdateSourceExceptionFilterCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceExceptionFilterCallback ^ UpdateSourceExceptionFilter { System::Windows::Data::UpdateSourceExceptionFilterCallback ^ get(); void set(System::Windows::Data::UpdateSourceExceptionFilterCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceExceptionFilter : System.Windows.Data.UpdateSourceExceptionFilterCallback with get, set" Usage="System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceExceptionFilterCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-348">取得或設定可用來提供自訂邏輯的處理常式，以處理繫結引擎在更新繫結來源值期間所遇到的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a64c9-348">Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span></span> <span data-ttu-id="a64c9-349">只有您已建立 <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> 與繫結的關聯時才適用。</span><span class="sxs-lookup"><span data-stu-id="a64c9-349">This is only applicable if you have associated an <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> with your binding.</span></span></summary>
        <value><span data-ttu-id="a64c9-350">提供自訂邏輯以處理繫結引擎在更新繫結來源值期間所遇到之例外狀況的方法。</span><span class="sxs-lookup"><span data-stu-id="a64c9-350">A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-351"><xref:System.Windows.Controls.ExceptionValidationRule>是內建驗證規則會檢查繫結來源屬性更新期間擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a64c9-351">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property.</span></span> <span data-ttu-id="a64c9-352">如果您已建立關聯<xref:System.Windows.Controls.ExceptionValidationRule>與您<xref:System.Windows.Data.Binding>物件，您可以使用這個屬性設定來提供自訂邏輯來處理這些例外狀況處理常式。</span><span class="sxs-lookup"><span data-stu-id="a64c9-352">If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object, you can use this property to set a handler to provide custom logic for handling these exceptions.</span></span> <span data-ttu-id="a64c9-353">如果<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>中未指定<xref:System.Windows.Data.Binding>，則繫結引擎會建立<xref:System.Windows.Controls.ValidationError>發生例外狀況並將它加入<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>繫結元素的集合。</span><span class="sxs-lookup"><span data-stu-id="a64c9-353">If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a64c9-354"><xref:System.Windows.Controls.TextBox.Text%2A>屬性的下列<xref:System.Windows.Controls.TextBox>是資料繫結來源屬性`Age3`型別的`int`。</span><span class="sxs-lookup"><span data-stu-id="a64c9-354">The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`.</span></span> <span data-ttu-id="a64c9-355"><xref:System.Windows.Controls.ExceptionValidationRule>檢查 （例如，當使用者輸入的值無法轉換成整數） 的來源屬性更新期間所擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a64c9-355">The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).</span></span>  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 <span data-ttu-id="a64c9-356">您可以提供自訂邏輯以處理這些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a64c9-356">You can provide custom logic to handle those exceptions.</span></span> <span data-ttu-id="a64c9-357">下列範例示範如何使用<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>屬性來設定<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-357">The following example shows how to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 <span data-ttu-id="a64c9-358">以下是範例實作<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-358">The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 <span data-ttu-id="a64c9-359"><xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>也可以傳回`null`，例外狀況本身，或<xref:System.Windows.Controls.ValidationError>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-359">The <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> can also return `null`, the exception itself, or a <xref:System.Windows.Controls.ValidationError>.</span></span> <span data-ttu-id="a64c9-360">如需詳細資訊，請參閱<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-360">For more information, see <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 <span data-ttu-id="a64c9-361">如需完整的範例，請參閱[繫結驗證範例](https://go.microsoft.com/fwlink/?LinkID=159972)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-361">For the complete sample, see [Binding Validation Sample](https://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceTrigger As UpdateSourceTrigger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceTrigger UpdateSourceTrigger { System::Windows::Data::UpdateSourceTrigger get(); void set(System::Windows::Data::UpdateSourceTrigger value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceTrigger : System.Windows.Data.UpdateSourceTrigger with get, set" Usage="System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-362">取得或設定值，這個值會判斷繫結來源更新的時機。</span><span class="sxs-lookup"><span data-stu-id="a64c9-362">Gets or sets a value that determines the timing of binding source updates.</span></span></summary>
        <value><span data-ttu-id="a64c9-363">其中一個 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-363">One of the <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> values.</span></span> <span data-ttu-id="a64c9-364">預設為 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />，它會傳回目標相依性屬性的預設 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-364">The default is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, which returns the default <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> value of the target dependency property.</span></span> <span data-ttu-id="a64c9-365">不過，大多數相依性屬性的預設值為 <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />，而 <see cref="P:System.Windows.Controls.TextBox.Text" /> 屬性具有 <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" /> 的預設值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-365">However, the default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, while the <see cref="P:System.Windows.Controls.TextBox.Text" /> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.</span></span>  
  
<span data-ttu-id="a64c9-366">一種判斷相依性屬性之預設 <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> 值的程式設計方式是使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 取得屬性的屬性中繼資料，然後再檢查 <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> 屬性的值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-366">A programmatic way to determine the default <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> value of a dependency property is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-367">繫結<xref:System.Windows.Data.BindingMode.TwoWay>或<xref:System.Windows.Data.BindingMode.OneWayToSource>接聽目標屬性中的變更，並將它們傳播回來源。</span><span class="sxs-lookup"><span data-stu-id="a64c9-367">Bindings that are <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> listen for changes in the target property and propagate them back to the source.</span></span> <span data-ttu-id="a64c9-368">這種情況稱為更新來源。</span><span class="sxs-lookup"><span data-stu-id="a64c9-368">This is known as updating the source.</span></span> <span data-ttu-id="a64c9-369">通常，每當目標屬性變更時，就會發生這些更新。</span><span class="sxs-lookup"><span data-stu-id="a64c9-369">Usually, these updates happen whenever the target property changes.</span></span> <span data-ttu-id="a64c9-370">這是正常核取方塊和其他簡單控制項，但它通常不是適用於文字欄位。</span><span class="sxs-lookup"><span data-stu-id="a64c9-370">This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields.</span></span> <span data-ttu-id="a64c9-371">之後每個按鍵動作可能會降低效能，並拒絕使用者的一般機會按退格鍵和修正輸入錯誤的新值之後才更新。</span><span class="sxs-lookup"><span data-stu-id="a64c9-371">Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value.</span></span> <span data-ttu-id="a64c9-372">因此，預設值<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>的值<xref:System.Windows.Controls.TextBox.Text%2A>屬性是<xref:System.Windows.Data.UpdateSourceTrigger.LostFocus>而非<xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-372">Therefore, the default <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of the <xref:System.Windows.Controls.TextBox.Text%2A> property is <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> and not <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  
  
 <span data-ttu-id="a64c9-373">如果您設定<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>值加入<xref:System.Windows.Data.UpdateSourceTrigger.Explicit>，您必須呼叫<xref:System.Windows.Data.BindingExpression.UpdateSource%2A>方法或所做的變更將不會傳播回來源。</span><span class="sxs-lookup"><span data-stu-id="a64c9-373">If you set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Mode" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnDataErrors : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-374">取得或設定值，這個值表示是否要包含 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-374">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="a64c9-375"><see langword="true" /> 表示包含 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-375"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-376">設定這個屬性提供替代使用<xref:System.Windows.Controls.DataErrorValidationRule>項目明確。</span><span class="sxs-lookup"><span data-stu-id="a64c9-376">Setting this property provides an alternative to using the <xref:System.Windows.Controls.DataErrorValidationRule> element explicitly.</span></span> <span data-ttu-id="a64c9-377"><xref:System.Windows.Controls.DataErrorValidationRule>是內建驗證規則會檢查所引發的錯誤<xref:System.ComponentModel.IDataErrorInfo>來源物件的實作。</span><span class="sxs-lookup"><span data-stu-id="a64c9-377">The <xref:System.Windows.Controls.DataErrorValidationRule> is a built-in validation rule that checks for errors that are raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object.</span></span> <span data-ttu-id="a64c9-378">如果會引發錯誤，就會建立繫結引擎<xref:System.Windows.Controls.ValidationError>發生錯誤並將它加入<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>繫結元素的集合。</span><span class="sxs-lookup"><span data-stu-id="a64c9-378">If an error is raised, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the error and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="a64c9-379">錯誤缺乏會清除這個驗證回應，除非另一個規則就會發出驗證問題。</span><span class="sxs-lookup"><span data-stu-id="a64c9-379">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="a64c9-380"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> .NET Framework 3.5 版中引進。</span><span class="sxs-lookup"><span data-stu-id="a64c9-380"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a64c9-381">如需詳細資訊，請參閱 [.NET Framework 版本和相依性](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-381">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a64c9-382">下列範例會使用<xref:System.ComponentModel.IDataErrorInfo>並<xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A>來驗證使用者輸入在<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-382">The following examples uses <xref:System.ComponentModel.IDataErrorInfo> and <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="a64c9-383">第一個範例會建立資料型別可實作<xref:System.ComponentModel.IDataErrorInfo>報告驗證錯誤。</span><span class="sxs-lookup"><span data-stu-id="a64c9-383">The first example creates a data type that implements <xref:System.ComponentModel.IDataErrorInfo> to report validation errors.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#idataerrorinfodata)]
 [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#idataerrorinfodata)]  
  
 <span data-ttu-id="a64c9-384">下列範例會繫結`Age`屬性，以<xref:System.Windows.Controls.TextBox>並設定<xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A>要`true`上<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-384">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span>  <span data-ttu-id="a64c9-385">當使用者輸入無效的值時，在出現的紅色框線<xref:System.Windows.Controls.TextBox>而<xref:System.Windows.Controls.ToolTip>報告的錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="a64c9-385">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#idataerrorinfoxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnExceptions">
      <MemberSignature Language="C#" Value="public bool ValidatesOnExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnExceptions : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-386">取得或設定值，這個值表示是否要包含 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-386">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="a64c9-387"><see langword="true" /> 表示包含 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-387"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-388">設定這個屬性提供替代使用<xref:System.Windows.Controls.ExceptionValidationRule>項目明確。</span><span class="sxs-lookup"><span data-stu-id="a64c9-388">Setting this property provides an alternative to using the <xref:System.Windows.Controls.ExceptionValidationRule> element explicitly.</span></span> <span data-ttu-id="a64c9-389"><xref:System.Windows.Controls.ExceptionValidationRule>是內建驗證規則會檢查來源屬性更新期間所擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a64c9-389">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</span></span> <span data-ttu-id="a64c9-390">如果擲回例外狀況，就會建立繫結引擎<xref:System.Windows.Controls.ValidationError>與例外狀況並將它加入<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>繫結元素的集合。</span><span class="sxs-lookup"><span data-stu-id="a64c9-390">If an exception is thrown, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="a64c9-391">錯誤缺乏會清除這個驗證回應，除非另一個規則就會發出驗證問題。</span><span class="sxs-lookup"><span data-stu-id="a64c9-391">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="a64c9-392"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> .NET Framework 3.5 版中引進。</span><span class="sxs-lookup"><span data-stu-id="a64c9-392"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a64c9-393">如需詳細資訊，請參閱 [.NET Framework 版本和相依性](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-393">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a64c9-394">下列範例會使用<xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>來驗證使用者輸入在<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-394">The following examples use <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="a64c9-395">第一個範例會建立資料型別會擲回例外狀況時`Age`屬性設定為無效的屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-395">The first example creates a data type that throws an exception when the `Age` property is set to an invalid property.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#throwexceptiondata)]
 [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#throwexceptiondata)]  
  
 <span data-ttu-id="a64c9-396">下列範例會繫結`Age`屬性，以<xref:System.Windows.Controls.TextBox>並設定<xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>要`true`上<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-396">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="a64c9-397">當使用者輸入無效的值時，在出現的紅色框線<xref:System.Windows.Controls.TextBox>而<xref:System.Windows.Controls.ToolTip>報告的錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="a64c9-397">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#throwexceptionxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataErrors : bool with get, set" Usage="System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-398">取得或設定值，這個值表示是否要包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-398">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="a64c9-399"><see langword="true" /> 表示包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-399"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a64c9-400">預設為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-400">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-401">當<xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A>已`true`，會檢查繫結，並報告由實作的資料來源所引發的錯誤<xref:System.ComponentModel.INotifyDataErrorInfo>。</span><span class="sxs-lookup"><span data-stu-id="a64c9-401">When <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.Binding.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-402">取得檢查使用者輸入有效性的規則集合。</span><span class="sxs-lookup"><span data-stu-id="a64c9-402">Gets a collection of rules that check the validity of the user input.</span></span></summary>
        <value><span data-ttu-id="a64c9-403"><see cref="T:System.Windows.Controls.ValidationRule" /> 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="a64c9-403">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-404">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]資料繫結模型可讓您將建立關聯<xref:System.Windows.Data.Binding.ValidationRules%2A>與您<xref:System.Windows.Data.Binding>或<xref:System.Windows.Data.MultiBinding>物件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-404">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="a64c9-405">您可以建立自訂規則，藉由衍生自<xref:System.Windows.Controls.ValidationRule>類別，並實作<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法，或者您可以使用內建<xref:System.Windows.Controls.ExceptionValidationRule>，這會使失效值，如果在來源更新期間有例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a64c9-405">You can create custom rules by deriving from the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, or you can use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which invalidates a value if there are exceptions during source updates.</span></span>  
  
 <span data-ttu-id="a64c9-406">繫結引擎會檢查每個<xref:System.Windows.Controls.ValidationRule>每次輸入的值 （繫結目標屬性值） 會傳送到繫結來源屬性的繫結相關聯。</span><span class="sxs-lookup"><span data-stu-id="a64c9-406">The binding engine checks each <xref:System.Windows.Controls.ValidationRule> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property.</span></span> <span data-ttu-id="a64c9-407">如需驗證程序的詳細討論，請參閱中的資料驗證一節[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-407">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a64c9-408">此屬性可以在設定[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]只能使用集合語法所示，或藉由存取的集合物件，使用的各種方法，例如`Add`。</span><span class="sxs-lookup"><span data-stu-id="a64c9-408">This property can be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as `Add`.</span></span> <span data-ttu-id="a64c9-409">要存取的集合物件的屬性是唯讀，而該集合本身是讀寫。</span><span class="sxs-lookup"><span data-stu-id="a64c9-409">The property to access the collection object is read-only, whereas the collection itself is read-write.</span></span>  
  
<a name="xamlPropertyElementUsage_ValidationRules"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="a64c9-410">XAML 屬性項目用法</span><span class="sxs-lookup"><span data-stu-id="a64c9-410">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.ValidationRules>  
    oneOrMoreValidationRules  
  </object.ValidationRules>  
</object>  
  
```  
  
<a name="xamlValues_ValidationRules"></a>   
## <a name="xaml-values"></a><span data-ttu-id="a64c9-411">XAML 值</span><span class="sxs-lookup"><span data-stu-id="a64c9-411">XAML Values</span></span>  
 <span data-ttu-id="a64c9-412">*oneOrMoreValidationRules*</span><span class="sxs-lookup"><span data-stu-id="a64c9-412">*oneOrMoreValidationRules*</span></span>  
 <span data-ttu-id="a64c9-413">一或多個<xref:System.Windows.Controls.ValidationRule>物件。</span><span class="sxs-lookup"><span data-stu-id="a64c9-413">One or more <xref:System.Windows.Controls.ValidationRule> objects.</span></span> <span data-ttu-id="a64c9-414">您可以使用<xref:System.Windows.Controls.ExceptionValidationRule>類別或子類別化來建立自訂規則<xref:System.Windows.Controls.ValidationRule>類別。</span><span class="sxs-lookup"><span data-stu-id="a64c9-414">You can use the <xref:System.Windows.Controls.ExceptionValidationRule> class or create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Validation" />
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManager">
      <MemberSignature Language="C#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="ILAsm" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XmlNamespaceManager" />
      <MemberSignature Language="VB.NET" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="F#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" Usage="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a64c9-415">取得或設定 <see cref="T:System.Xml.XmlNamespaceManager" />，用於在 XML 繫結中執行命名空間感知 <see langword="XPath" /> 查詢。</span><span class="sxs-lookup"><span data-stu-id="a64c9-415">Gets or sets the <see cref="T:System.Xml.XmlNamespaceManager" /> used to perform namespace-aware <see langword="XPath" /> queries in XML bindings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-416">這個附加的屬性會使用屬性值繼承會重現已存在於的命名空間繼承行為[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="a64c9-416">This attached property uses property value inheritance, which reproduces the behavior of namespace inheritance that is present in [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)].</span></span> <span data-ttu-id="a64c9-417">如需詳細資訊，請參閱[屬性值繼承](~/docs/framework/wpf/advanced/property-value-inheritance.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-417">For details, see [Property Value Inheritance](~/docs/framework/wpf/advanced/property-value-inheritance.md).</span></span>  
  
<a name="dependencyPropertyInfo_XmlNamespaceManager"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a64c9-418">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="a64c9-418">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a64c9-419">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="a64c9-419">Identifier field</span></span>|<xref:System.Windows.Data.Binding.XmlNamespaceManagerProperty>|  
|<span data-ttu-id="a64c9-420">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="a64c9-420">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty XmlNamespaceManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XmlNamespaceManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ XmlNamespaceManagerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable XmlNamespaceManagerProperty : System.Windows.DependencyProperty" Usage="System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-421">識別 <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> 附加屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-421">Identifies the <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XPath : string with get, set" Usage="System.Windows.Data.Binding.XPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a64c9-422">取得或設定 <see langword="XPath" /> 查詢，以傳回 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 繫結來源上要使用的值。</span><span class="sxs-lookup"><span data-stu-id="a64c9-422">Gets or sets an <see langword="XPath" /> query that returns the value on the [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] binding source to use.</span></span></summary>
        <value><span data-ttu-id="a64c9-423"><see langword="XPath" /> 查詢。</span><span class="sxs-lookup"><span data-stu-id="a64c9-423">The <see langword="XPath" /> query.</span></span> <span data-ttu-id="a64c9-424">預設為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a64c9-424">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a64c9-425">當繫結來源時[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]資料，而非[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]物件，<xref:System.Windows.Data.Binding.XPath%2A>而不是使用屬性<xref:System.Windows.Data.Binding.Path%2A>屬性，表示要使用的繫結來源值的路徑。</span><span class="sxs-lookup"><span data-stu-id="a64c9-425">When the binding source is [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data instead of a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, the <xref:System.Windows.Data.Binding.XPath%2A> property is used instead of the <xref:System.Windows.Data.Binding.Path%2A> property to indicate the path to the value on the binding source to use.</span></span>  
  
 <span data-ttu-id="a64c9-426">藉由設定<xref:System.Windows.Data.Binding.XPath%2A>屬性，您會建立`XPath`查詢，以選取的節點的集合 (<xref:System.Xml.XmlElement?displayProperty=nameWithType>並<xref:System.Xml.XmlAttribute?displayProperty=nameWithType>都是衍生自<xref:System.Xml.XmlNode?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-426">By setting the <xref:System.Windows.Data.Binding.XPath%2A> property, you are creating an `XPath` query to select a node or a collection of nodes (<xref:System.Xml.XmlElement?displayProperty=nameWithType> and <xref:System.Xml.XmlAttribute?displayProperty=nameWithType> both derive from <xref:System.Xml.XmlNode?displayProperty=nameWithType>).</span></span> <span data-ttu-id="a64c9-427"><xref:System.Xml.XmlNode?displayProperty=nameWithType> 已[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]物件，這表示您可以使用其屬性的繫結<xref:System.Windows.Data.Binding.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-427"><xref:System.Xml.XmlNode?displayProperty=nameWithType> is a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, which means you can bind to its properties using the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span>  
  
 <span data-ttu-id="a64c9-428"><xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType>方法會處理`XPath`中的運算式<xref:System.Windows.Data.Binding.XPath%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a64c9-428">The <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> method handles the `XPath` expressions from the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span> <span data-ttu-id="a64c9-429">`XPath` 不支援函式。</span><span class="sxs-lookup"><span data-stu-id="a64c9-429">`XPath` functions are not supported.</span></span> <span data-ttu-id="a64c9-430">針對`XPath`運算式的詳細資訊，請參閱<xref:System.Xml.XmlNode.SelectNodes%2A>文件和範例 > 一節中提供一些範例。</span><span class="sxs-lookup"><span data-stu-id="a64c9-430">For `XPath` expression information, see the <xref:System.Xml.XmlNode.SelectNodes%2A> documentation and some examples provided in the Example section.</span></span>  
  
 <span data-ttu-id="a64c9-431">LINQ to XML 物件<xref:System.Xml.Linq.XDocument>並<xref:System.Xml.Linq.XElement>請勿使用`XPath`。</span><span class="sxs-lookup"><span data-stu-id="a64c9-431">LINQ to XML objects <xref:System.Xml.Linq.XDocument> and <xref:System.Xml.Linq.XElement> do not use `XPath`.</span></span> <span data-ttu-id="a64c9-432">如需詳細資訊，請參閱[如何：For XML 查詢結果繫結至 XDocument、 XElement 或 LINQ](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md)。</span><span class="sxs-lookup"><span data-stu-id="a64c9-432">For details, see [How to: Bind to XDocument, XElement, or LINQ for XML Query Results](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>