<Type Name="Binding" FullName="System.Windows.Data.Binding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b494c904e9e37c94748406bd0f7931b61046db17" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
    <Meta Name="ms.locfileid" Value="31911074" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Binding : System.Windows.Data.BindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Windows.Data.BindingBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding&#xA;Inherits BindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding : System::Windows::Data::BindingBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="51a5b-101">提供繫結定義的高層級存取，連接繫結目標物件的屬性 (通常為 WPF 元素) 和任何資料來源 (例如資料庫、XML 檔案或任何包含資料的物件)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="51a5b-101">Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]<span data-ttu-id="51a5b-102"> 資料繫結在資料的展示和互動上，提供應用程式簡單而一致的方式。</span><span class="sxs-lookup"><span data-stu-id="51a5b-102"> data binding provides a simple and consistent way for applications to present and interact with data.</span></span> <span data-ttu-id="51a5b-103">資料繫結可讓您同步處理兩個不同物件的屬性值。</span><span class="sxs-lookup"><span data-stu-id="51a5b-103">Data binding enables you to synchronize the values of the properties of two different objects.</span></span>  
  
 <span data-ttu-id="51a5b-104">若要建立的繫結，使用<xref:System.Windows.Data.Binding>類別或其中一個繼承的類別<xref:System.Windows.Data.BindingBase>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-104">To establish a binding, use the <xref:System.Windows.Data.Binding> class or one of the other classes that inherit <xref:System.Windows.Data.BindingBase>.</span></span> <span data-ttu-id="51a5b-105">不論什麼物件繫結，您的資料來源的本質，每個繫結會遵循模型，如下圖所示。</span><span class="sxs-lookup"><span data-stu-id="51a5b-105">Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.</span></span>  
  
 <span data-ttu-id="51a5b-106">![基本資料繫結圖表](~/add/media/databindingmostbasic.png "基本資料繫結圖表")</span><span class="sxs-lookup"><span data-stu-id="51a5b-106">![Basic data binding diagram](~/add/media/databindingmostbasic.png "Basic data binding diagram")</span></span>  
  
 <span data-ttu-id="51a5b-107">此圖中會示範下列基本[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]資料繫結的概念。</span><span class="sxs-lookup"><span data-stu-id="51a5b-107">The figure demonstrates the following fundamental [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding concepts.</span></span>  
  
-   <span data-ttu-id="51a5b-108">每個繫結通常會有四個元件： 繫結目標物件、 目標屬性、 繫結來源和<xref:System.Windows.Data.Binding.Path%2A>中要使用的繫結來源值。</span><span class="sxs-lookup"><span data-stu-id="51a5b-108">Each binding typically has these four components: a binding target object, a target property, a binding source, and a <xref:System.Windows.Data.Binding.Path%2A> to the value in the binding source to use.</span></span> <span data-ttu-id="51a5b-109">例如，如果您想要繫結的內容<xref:System.Windows.Controls.TextBox>Employee 物件的 Name 屬性，您的目標物件是<xref:System.Windows.Controls.TextBox>，目標屬性是<xref:System.Windows.Controls.TextBox.Text%2A>屬性，要使用的值是名稱，而來源物件是員工物件。</span><span class="sxs-lookup"><span data-stu-id="51a5b-109">For example, if you want to bind the content of a <xref:System.Windows.Controls.TextBox> to the Name property of an Employee object, your target object is the <xref:System.Windows.Controls.TextBox>, the target property is the <xref:System.Windows.Controls.TextBox.Text%2A> property, the value to use is Name, and the source object is the Employee object.</span></span>  
  
-   <span data-ttu-id="51a5b-110">目標屬性必須是相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-110">The target property must be a dependency property.</span></span> <span data-ttu-id="51a5b-111">這也表示您無法繫結欄位。</span><span class="sxs-lookup"><span data-stu-id="51a5b-111">This also means that you cannot bind a field.</span></span> <span data-ttu-id="51a5b-112">大部分屬性<xref:System.Windows.UIElement>物件是相依性屬性，大多數相依性屬性，唯讀的除了預設支援資料繫結。</span><span class="sxs-lookup"><span data-stu-id="51a5b-112">Most properties of <xref:System.Windows.UIElement> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default.</span></span> <span data-ttu-id="51a5b-113">(只有<xref:System.Windows.DependencyObject>類型可以定義相依性屬性以及所有<xref:System.Windows.UIElement>物件衍生自<xref:System.Windows.DependencyObject>。)</span><span class="sxs-lookup"><span data-stu-id="51a5b-113">(Only <xref:System.Windows.DependencyObject> types can define dependency properties and all <xref:System.Windows.UIElement> objects derive from <xref:System.Windows.DependencyObject>.)</span></span>  
  
-   <span data-ttu-id="51a5b-114">雖然圖中未指出，但應該注意的是，繫結來源物件不限於自訂的 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 物件。</span><span class="sxs-lookup"><span data-stu-id="51a5b-114">Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="51a5b-115"> 資料繫結支援 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 物件和 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 格式的資料。</span><span class="sxs-lookup"><span data-stu-id="51a5b-115"> data binding supports data in the form of [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] objects and [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span> <span data-ttu-id="51a5b-116">若要提供一些範例，可能是繫結來源<xref:System.Windows.UIElement>，任何清單物件，[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]與其相關聯物件[!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)]資料、 Web 服務或 XmlNode，其中包含您[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]資料。</span><span class="sxs-lookup"><span data-stu-id="51a5b-116">To provide some examples, your binding source may be a <xref:System.Windows.UIElement>, any list object, a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object that is associated with [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] data or Web Services, or an XmlNode that contains your [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] data.</span></span>  
  
 <span data-ttu-id="51a5b-117">使用<xref:System.Windows.Data.Binding.Mode%2A>屬性，以指定資料流程的方向。</span><span class="sxs-lookup"><span data-stu-id="51a5b-117">Use the <xref:System.Windows.Data.Binding.Mode%2A> property to specify the direction of the data flow.</span></span> <span data-ttu-id="51a5b-118">若要偵測來源變更單向或雙向繫結中，來源必須實作適當的屬性變更通知機制例如<xref:System.ComponentModel.INotifyPropertyChanged>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-118">To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="51a5b-119">如需範例，請參閱[How to： 實作屬性變更告知](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-119">For an example, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span> <span data-ttu-id="51a5b-120"><xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>屬性會指定來源更新的時機。</span><span class="sxs-lookup"><span data-stu-id="51a5b-120">The <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property specifies the timing of source updates.</span></span> <span data-ttu-id="51a5b-121">如需詳細資訊，請參閱 < 基本資料繫結概念 > 中[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-121">For more information, see "Basic Data Binding Concepts" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="51a5b-122">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="51a5b-122">XAML Attribute Usage</span></span>  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="51a5b-123">XAML 值</span><span class="sxs-lookup"><span data-stu-id="51a5b-123">XAML Values</span></span>  
 <span data-ttu-id="51a5b-124">*declaration*</span><span class="sxs-lookup"><span data-stu-id="51a5b-124">*declaration*</span></span>  
 <span data-ttu-id="51a5b-125">以逗號 （，） 分隔的零或多個屬性指派子句。</span><span class="sxs-lookup"><span data-stu-id="51a5b-125">Zero or more attribute-assignment clauses separated by commas (,).</span></span> <span data-ttu-id="51a5b-126">如需詳細資訊，請參閱[繫結標記延伸](~/docs/framework/wpf/advanced/binding-markup-extension.md)或[繫結宣告概觀](~/docs/framework/wpf/data/binding-declarations-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-126">For more information, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.MultiBinding" />
    <altmember cref="T:System.Windows.Data.PriorityBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-127">初始化 <see cref="T:System.Windows.Data.Binding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-127">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-128">初始化 <see cref="T:System.Windows.Data.Binding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-128">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="51a5b-129">初始 <see cref="P:System.Windows.Data.Binding.Path" /> 來繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-129">The initial <see cref="P:System.Windows.Data.Binding.Path" /> for the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a5b-130">使用初始路徑，初始化 <see cref="T:System.Windows.Data.Binding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-130">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class with an initial path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="51a5b-131">接聽這個事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="51a5b-132">要加入的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-132">The handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a5b-133">加入 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-133">Adds a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-134">這個方法支援附加的事件的使用中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="51a5b-134">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="51a5b-135">接聽這個事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-135">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="51a5b-136">要加入的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-136">The handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a5b-137">加入 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-137">Adds a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-138">這個方法支援附加的事件的使用中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="51a5b-138">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-139">取得或設定傳遞至非同步資料發送器的不透明資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-139">Gets or sets opaque data passed to the asynchronous data dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-140">傳遞至非同步資料發送器的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-140">Data passed to the asynchronous data dispatcher.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.IsAsync" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      </Docs>
    </Member>
    <Member MemberName="BindsDirectlyToSource">
      <MemberSignature Language="C#" Value="public bool BindsDirectlyToSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BindsDirectlyToSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberSignature Language="VB.NET" Value="Public Property BindsDirectlyToSource As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BindsDirectlyToSource { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-141">取得或設定值，這個值表示是否評估與資料項目或 <see cref="T:System.Windows.Data.DataSourceProvider" /> 物件相對的 <see cref="P:System.Windows.Data.Binding.Path" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-141">Gets or sets a value that indicates whether to evaluate the <see cref="P:System.Windows.Data.Binding.Path" /> relative to the data item or the <see cref="T:System.Windows.Data.DataSourceProvider" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-142">
            <see langword="false" /> 表示評估與資料項目本身相對的路徑；否則為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-142">
              <see langword="false" /> to evaluate the path relative to the data item itself; otherwise, <see langword="true" />.</span>
          </span>
          <span data-ttu-id="51a5b-143">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-143">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-144">正常行為 (當這個屬性是`false`) 包含特殊處理方式<xref:System.Windows.Data.DataSourceProvider>物件。</span><span class="sxs-lookup"><span data-stu-id="51a5b-144">The normal behavior (when this property is `false`) includes special treatment for <xref:System.Windows.Data.DataSourceProvider> objects.</span></span> <span data-ttu-id="51a5b-145">在此情況下，繫結引擎會評估<xref:System.Windows.Data.Binding.Path%2A>相對於物件取自<xref:System.Windows.Data.DataSourceProvider.Data%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-145">In this case, the binding engine evaluates the <xref:System.Windows.Data.Binding.Path%2A> relative to the object obtained from the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property.</span></span> <span data-ttu-id="51a5b-146">此外，繫結會接聽<xref:System.Windows.Data.DataSourceProvider.DataChanged>事件並據以回應。</span><span class="sxs-lookup"><span data-stu-id="51a5b-146">In addition, the binding listens for the <xref:System.Windows.Data.DataSourceProvider.DataChanged> event and reacts accordingly.</span></span> <span data-ttu-id="51a5b-147">此屬性設定為`true`會覆寫此行為，並提供繫結存取屬性<xref:System.Windows.Data.DataSourceProvider>物件本身。</span><span class="sxs-lookup"><span data-stu-id="51a5b-147">Setting this property to `true` overrides this behavior and gives the binding access to properties of the <xref:System.Windows.Data.DataSourceProvider> object itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.ObjectDataProvider" />
        <altmember cref="T:System.Windows.Data.XmlDataProvider" />
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As IValueConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::IValueConverter ^ Converter { System::Windows::Data::IValueConverter ^ get(); void set(System::Windows::Data::IValueConverter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-148">取得或設定要使用的轉換子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-148">Gets or sets the converter to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-149">型別 <see cref="T:System.Windows.Data.IValueConverter" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-149">A value of type <see cref="T:System.Windows.Data.IValueConverter" />.</span>
          </span>
          <span data-ttu-id="51a5b-150">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-150">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-151">繫結，會隱含地使用嘗試執行類型轉換的來源值與目標值之間的預設轉換子。</span><span class="sxs-lookup"><span data-stu-id="51a5b-151">A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value.</span></span> <span data-ttu-id="51a5b-152">如果無法進行轉換，預設轉換器會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="51a5b-152">If a conversion cannot be made, the default converter returns `null`.</span></span>  
  
 <span data-ttu-id="51a5b-153">如果您想要與繫結產生關聯的自訂值轉換器，您應該建立一個類別，實作<xref:System.Windows.Data.IValueConverter>介面，並提供實作<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="51a5b-153">If you want to associate a custom value converter with a binding, you should create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and supply implementations for the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="51a5b-154">值轉換器可以將資料從一個類型變更為另一個、 翻譯文化特性的詳細資料，例如字元集，或修改其簡報的其他層面。</span><span class="sxs-lookup"><span data-stu-id="51a5b-154">Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation.</span></span> <span data-ttu-id="51a5b-155">一般轉換案例的範例，請參閱 「 資料轉換 」，在[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-155">For examples of typical conversion scenarios, see "Data Conversion" in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_Converter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="51a5b-156">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="51a5b-156">XAML Attribute Usage</span></span>  
  
```  
<object Converter="myConverter"/>  
```  
  
<a name="xamlValues_Converter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="51a5b-157">XAML 值</span><span class="sxs-lookup"><span data-stu-id="51a5b-157">XAML Values</span></span>  
 <span data-ttu-id="51a5b-158">*myConverter*</span><span class="sxs-lookup"><span data-stu-id="51a5b-158">*myConverter*</span></span>  
 <span data-ttu-id="51a5b-159">實作的類別資源參考<xref:System.Windows.Data.IValueConverter>介面，其中包含實作<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="51a5b-159">A resource reference to a class that implements the <xref:System.Windows.Data.IValueConverter> interface, which includes implementations of the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="51a5b-160">若要參考的值轉換器，請使用[StaticResource 標記延伸](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-160">To refer to a value converter, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConverterCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConverterCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConverterCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-161">取得或設定文化特性，藉以評估轉換器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-161">Gets or sets the culture in which to evaluate the converter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-162">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-162">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-163">如果您未設定這個屬性，就會使用繫結引擎`Language`繫結目標物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-163">If you do not set this property, the binding engine uses the `Language` property of the binding target object.</span></span> <span data-ttu-id="51a5b-164">在[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]這預設為"EN-US"或繼承自 頁面上，根項目 （或任何項目） 的值，如果其中一個已明確設定。</span><span class="sxs-lookup"><span data-stu-id="51a5b-164">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] this defaults to "en-US" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.</span></span>  
  
 <span data-ttu-id="51a5b-165">資料轉換的相關資訊，請參閱中的資料轉換 」 一節[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-165">For information about data conversion, see the Data Conversion section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConverterParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-166">取得或設定要傳遞至 <see cref="P:System.Windows.Data.Binding.Converter" /> 的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-166">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-167">要傳遞至 <see cref="P:System.Windows.Data.Binding.Converter" /> 的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-167">The parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span>
          </span>
          <span data-ttu-id="51a5b-168">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-168">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-169">您可以使用<xref:System.Windows.Data.Binding.ConverterParameter%2A>屬性來指定物件轉換的方式。</span><span class="sxs-lookup"><span data-stu-id="51a5b-169">You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> property to specify how an object is converted.</span></span>  <span data-ttu-id="51a5b-170">這個屬性會將其他資訊傳遞至您的繫結使用的轉換器。</span><span class="sxs-lookup"><span data-stu-id="51a5b-170">This property passes additional information to a converter that you use on a binding.</span></span>  <span data-ttu-id="51a5b-171">當您指定<xref:System.Windows.Data.Binding.ConverterParameter%2A>，值會傳遞至<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法`parameter`參數。</span><span class="sxs-lookup"><span data-stu-id="51a5b-171">When you specify a <xref:System.Windows.Data.Binding.ConverterParameter%2A>, the value is passed to the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods as the `parameter` parameter.</span></span>  
  
 <span data-ttu-id="51a5b-172">如需範例，請參閱[如何： 產生清單的繫結項目值以](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-172">For an example, see [How to: Produce a Value Based on a List of Bound Items](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md).</span></span> <span data-ttu-id="51a5b-173">該範例會示範實作<xref:System.Windows.Data.IMultiValueConverter>但仍適用於使用方式。</span><span class="sxs-lookup"><span data-stu-id="51a5b-173">That example shows an implementation of an <xref:System.Windows.Data.IMultiValueConverter> but the usage still applies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNothing">
      <MemberSignature Language="C#" Value="public static readonly object DoNothing;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DoNothing" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.DoNothing" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DoNothing As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DoNothing;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-174">作為傳回值，指示繫結引擎不要執行任何動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-174">Used as a returned value to instruct the binding engine not to perform any action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-175">繫結來源屬性或轉換子可以傳回<xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType>，指示繫結引擎不要執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="51a5b-175">A binding source property or a converter can return <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> to instruct the binding engine not to perform any action.</span></span> <span data-ttu-id="51a5b-176">例如，若要指示繫結引擎不要傳輸繫結目標時，不將移至下一個值<xref:System.Windows.Data.Binding>中<xref:System.Windows.Data.PriorityBinding>，或不使用`FallBackValue`或預設值。</span><span class="sxs-lookup"><span data-stu-id="51a5b-176">For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <xref:System.Windows.Data.Binding> in a <xref:System.Windows.Data.PriorityBinding>, or not to use the `FallBackValue` or default value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-177">取得或設定要作為繫結來源物件的項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-177">Gets or sets the name of the element to use as the binding source object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-178">值<see langword="Name" />屬性或[X:name 指示詞](~/docs/framework/xaml-services/x-name-directive.md)感興趣的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-178">The value of the <see langword="Name" /> property or [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) of the element of interest.</span>
          </span>
          <span data-ttu-id="51a5b-179">僅當程式碼中的項目透過 <see langword="RegisterName" /> 登錄為適當的 <see cref="T:System.Windows.NameScope" />，您才可以對其參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-179">You can refer to elements in code only if they are registered to the appropriate <see cref="T:System.Windows.NameScope" /> through <see langword="RegisterName" />.</span>
          </span>
          <span data-ttu-id="51a5b-180">如需詳細資訊，請參閱[WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-180">For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span>
          </span>
          <span data-ttu-id="51a5b-181">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-181">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-182">當您想要繫結至應用程式中的另一個項目的屬性，這個屬性是很有用。</span><span class="sxs-lookup"><span data-stu-id="51a5b-182">This property is useful when you want to bind to the property of another element in your application.</span></span> <span data-ttu-id="51a5b-183">例如，如果您想要使用<xref:System.Windows.Controls.Slider>來控制應用程式中的另一個控制項的高度或如果您想要繫結<xref:System.Windows.Controls.ContentControl.Content%2A>至控制項的<xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A>屬性您<xref:System.Windows.Controls.ListBox>控制項。</span><span class="sxs-lookup"><span data-stu-id="51a5b-183">For example, if you want to use a <xref:System.Windows.Controls.Slider> to control the height of another control in your application, or if you want to bind the <xref:System.Windows.Controls.ContentControl.Content%2A> of your control to the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> property of your <xref:System.Windows.Controls.ListBox> control.</span></span>  
  
 <span data-ttu-id="51a5b-184">根據預設，繫結繼承所指定的資料內容`DataContext`如果其中一個已設定的屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-184">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="51a5b-185">不過，<xref:System.Windows.Data.Binding.ElementName%2A>屬性是一種方式，您可以明確設定的來源<xref:System.Windows.Data.Binding>並覆寫繼承的資料內容。</span><span class="sxs-lookup"><span data-stu-id="51a5b-185">However, the <xref:System.Windows.Data.Binding.ElementName%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="51a5b-186">如需詳細資訊，請參閱[How to： 指定的繫結來源](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-186">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="51a5b-187"><xref:System.Windows.Data.Binding.Source%2A>和<xref:System.Windows.Data.Binding.RelativeSource%2A>屬性<xref:System.Windows.Data.Binding>類別也可讓您設定的繫結來源明確。</span><span class="sxs-lookup"><span data-stu-id="51a5b-187">The <xref:System.Windows.Data.Binding.Source%2A> and <xref:System.Windows.Data.Binding.RelativeSource%2A> properties of the <xref:System.Windows.Data.Binding> class also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="51a5b-188">不過，只有三個屬性，其中<xref:System.Windows.Data.Binding.ElementName%2A>， <xref:System.Windows.Data.Binding.Source%2A>，和<xref:System.Windows.Data.Binding.RelativeSource%2A>、 應該設定為每個繫結，或可能會發生衝突。</span><span class="sxs-lookup"><span data-stu-id="51a5b-188">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict might occur.</span></span> <span data-ttu-id="51a5b-189">如果繫結來源衝突，則這個屬性會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="51a5b-189">This property throws an exception if there is a binding source conflict.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNamespaceManager GetXmlNamespaceManager(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlNamespaceManager (target As DependencyObject) As XmlNamespaceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlNamespaceManager ^ GetXmlNamespaceManager(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNamespaceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="51a5b-190">要從中取得命名空間資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-190">The object from which to get namespace information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a5b-191">傳回附加至指定物件之繫結所使用的 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 命名空間管理員物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-191">Returns an [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] namespace manager object used by the binding attached to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51a5b-192">傳回物件，用來檢視所傳遞物件項目的繫結相關的 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] 命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-192">A returned object used for viewing [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespaces that relate to the binding on the passed object element.</span>
          </span>
          <span data-ttu-id="51a5b-193">這個物件應轉型為 <see cref="T:System.Xml.XmlNamespaceManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-193">This object should be cast as <see cref="T:System.Xml.XmlNamespaceManager" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-194">這個方法支援附加的屬性的使用方式的<xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>附加屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-194">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]<span data-ttu-id="51a5b-195"> 命名空間管理員才有意義的資料繫結中來自[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]繫結來源 (<xref:System.Windows.Data.XmlDataProvider>物件)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-195"> namespace managers are relevant only if the data in the binding came from an [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] binding source (<xref:System.Windows.Data.XmlDataProvider> object).</span></span>  
  
 <span data-ttu-id="51a5b-196">如果命名空間管理員沒有特別套用在原始資料來源建立或由後續呼叫<xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A>的繫結，則這個方法將傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="51a5b-196">If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> on the binding, then this method will return `null`.</span></span>  
  
 <span data-ttu-id="51a5b-197">這個方法一律會傳回`null`如果繫結背後的資料不是[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="51a5b-197">This method will always return `null` if the data behind the binding is not [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="51a5b-198">
            <paramref name="target" /> 參數不可為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-198">The <paramref name="target" /> parameter cannot be <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexerName">
      <MemberSignature Language="C#" Value="public const string IndexerName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IndexerName" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.IndexerName" />
      <MemberSignature Language="VB.NET" Value="Public Const IndexerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ IndexerName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-199">做為 <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> 的 <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />，表示索引子屬性已變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-199">Used as the <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> of <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> to indicate that an indexer property has changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-200">取得或設定值，這個值表示 <see cref="T:System.Windows.Data.Binding" /> 是否應非同步取得及設定值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-200">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.Binding" /> should get and set values asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-201">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-201">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-202">使用<xref:System.Windows.Data.Binding.IsAsync%2A>屬性時`get`存取子，您的繫結來源屬性可能需要很長的時間。</span><span class="sxs-lookup"><span data-stu-id="51a5b-202">Use the <xref:System.Windows.Data.Binding.IsAsync%2A> property when the `get` accessor of your binding source property might take a long time.</span></span> <span data-ttu-id="51a5b-203">其中一個範例是以影像屬性`get`從網路下載的存取子。</span><span class="sxs-lookup"><span data-stu-id="51a5b-203">One example is an image property with a `get` accessor that downloads from the Web.</span></span> <span data-ttu-id="51a5b-204">設定<xref:System.Windows.Data.Binding.IsAsync%2A>至`true`可避免[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]下載進行時。</span><span class="sxs-lookup"><span data-stu-id="51a5b-204">Setting <xref:System.Windows.Data.Binding.IsAsync%2A> to `true` avoids blocking the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] while the download occurs.</span></span>  
  
 <span data-ttu-id="51a5b-205">繫結會等待到達的值，報告<xref:System.Windows.Data.BindingBase.FallbackValue%2A>，如果有的話，或預設值繫結的目標屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-205">While waiting for the value to arrive, the binding reports the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available, or the default value of the binding target property.</span></span>  
  
 <span data-ttu-id="51a5b-206">不過，不應該有許多案例中您需要使用<xref:System.Windows.Data.Binding.IsAsync%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-206">However, there should not be many scenarios where you need to use the <xref:System.Windows.Data.Binding.IsAsync%2A> property.</span></span> <span data-ttu-id="51a5b-207">[!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)]指導方針，建議您不要定義速度較慢比欄位集的屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-207">The [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] guidelines recommend against defining properties that are orders of magnitude slower than a field set would be.</span></span> <span data-ttu-id="51a5b-208">當您建立您的類別時，請考慮將處理的速度非常慢作業之外的`get`存取子和快取結果。</span><span class="sxs-lookup"><span data-stu-id="51a5b-208">When you are creating your class, consider handling extremely slow operations outside of the `get` accessor and caching the result.</span></span> <span data-ttu-id="51a5b-209">如需詳細資訊，請參閱[NIB： 選擇之間指定屬性和方法](http://msdn.microsoft.com/library/55825e8f-7e2e-448a-9505-7217cc91b1af)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-209">For more information, see [NIB: Choosing Between Properties and Methods](http://msdn.microsoft.com/library/55825e8f-7e2e-448a-9505-7217cc91b1af).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.AsyncState" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
        <altmember cref="T:System.Windows.PropertyChangedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As BindingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingMode Mode { System::Windows::Data::BindingMode get(); void set(System::Windows::Data::BindingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-210">取得或設定值，這個值表示繫結中資料流程的方向。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-210">Gets or sets a value that indicates the direction of the data flow in the binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-211">其中一個 <see cref="T:System.Windows.Data.BindingMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-211">One of the <see cref="T:System.Windows.Data.BindingMode" /> values.</span>
          </span>
          <span data-ttu-id="51a5b-212">預設值是<see cref="F:System.Windows.Data.BindingMode.Default" />，它會傳回目標相依性屬性的預設繫結模式值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-212">The default is <see cref="F:System.Windows.Data.BindingMode.Default" />, which returns the default binding mode value of the target dependency property.</span>
          </span>
          <span data-ttu-id="51a5b-213">不過，每個相依性屬性的預設值都會不同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-213">However, the default value varies for each dependency property.</span>
          </span>
          <span data-ttu-id="51a5b-214">一般而言，使用者可編輯的控制項屬性 (例如文字方塊和核取方塊的控制項屬性) 預設為雙向繫結，而其他大多數屬性則預設為單向繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-214">In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</span>
          </span>
          <span data-ttu-id="51a5b-215">判斷相依性屬性預設是否會單向或雙向繫結的程式設計方式是，使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 取得屬性的屬性中繼資料，然後檢查 <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> 屬性的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-215">A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-216">若要支援<xref:System.Windows.Data.BindingMode.OneWay>和<xref:System.Windows.Data.BindingMode.TwoWay>基礎資料繫結必須實作<xref:System.ComponentModel.INotifyPropertyChanged>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-216">To support <xref:System.Windows.Data.BindingMode.OneWay> and <xref:System.Windows.Data.BindingMode.TwoWay> bindings, the underlying data must implement <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="51a5b-217">如需詳細資訊，請參閱[How to： 實作屬性變更告知](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-217">For details, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span>  
  
 <span data-ttu-id="51a5b-218">如<xref:System.Windows.Data.BindingMode.TwoWay>或<xref:System.Windows.Data.BindingMode.OneWayToSource>繫結，您可以設定來控制目標到來源更新<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-218">For <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> bindings, you can control the target-to-source updates by setting the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span> <span data-ttu-id="51a5b-219">如需詳細資訊，請參閱<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-219">For more information, see <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.</span></span>  
  
 <span data-ttu-id="51a5b-220">如需有關不同的繫結模式的詳細資訊，請參閱[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-220">For more information on the different binding modes, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnSourceUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnSourceUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnSourceUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnSourceUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnSourceUpdated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-221">當值從繫結目標轉送到繫結來源時，取得或設定指出是否引發 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 事件的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-221">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event when a value is transferred from the binding target to the binding source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-222">
            <see langword="true" /> 如果<see cref="E:System.Windows.Data.Binding.SourceUpdated" />更新，否則繫結來源值時，應該引發事件<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-222">
              <see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event should be raised when the binding source value is updated; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="51a5b-223">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-223">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-224">取得或設定值，指出將值從繫結來源轉送到繫結目標時，是否引發 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-224">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event when a value is transferred from the binding source to the binding target.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-225">
            <see langword="true" /> 如果<see cref="E:System.Windows.Data.Binding.TargetUpdated" />更新，否則繫結目標值時，應該引發事件<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-225">
              <see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event should be raised when the binding target value is updated; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="51a5b-226">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-226">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-227">取得或設定值，這個值指出是否要在繫結物件上引發 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-227">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event on the bound object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-228">
            <see langword="true" /> 如果<see cref="E:System.Windows.Controls.Validation.Error" />附加的事件應該在來源更新期間驗證錯誤時在繫結物件上引發，否則<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-228">
              <see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="51a5b-229">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-229">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-230">如果繫結具有<xref:System.Windows.Data.Binding.ValidationRules%2A>與它相關聯，繫結引擎會檢查每個規則，每次傳輸來源屬性的目標屬性值。</span><span class="sxs-lookup"><span data-stu-id="51a5b-230">If the binding has <xref:System.Windows.Data.Binding.ValidationRules%2A> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property.</span></span> <span data-ttu-id="51a5b-231">如果規則導致無效的值，就會建立繫結引擎<xref:System.Windows.Controls.ValidationError>物件，並將它加入至<xref:System.Windows.Controls.Validation>。<xref:System.Windows.Controls.Validation.Errors%2A></span><span class="sxs-lookup"><span data-stu-id="51a5b-231">If a rule invalidates a value, the binding engine creates a <xref:System.Windows.Controls.ValidationError> object and adds it to the <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A></span></span> <span data-ttu-id="51a5b-232">繫結物件的集合。</span><span class="sxs-lookup"><span data-stu-id="51a5b-232">collection of the bound object.</span></span> <span data-ttu-id="51a5b-233">當<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>屬性不是空的<xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType>附加的屬性的物件設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="51a5b-233">When the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> property is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> attached property of the object is set to `true`.</span></span> <span data-ttu-id="51a5b-234">如果<xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>屬性<xref:System.Windows.Data.Binding>設`true`，然後繫結引擎引發<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>附加物件上的事件。</span><span class="sxs-lookup"><span data-stu-id="51a5b-234">If the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event on the object.</span></span>  
  
 <span data-ttu-id="51a5b-235">驗證程序的詳細討論，請參閱中的資料驗證一節[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-235">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyPath Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyPath Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyPath ^ Path { System::Windows::PropertyPath ^ get(); void set(System::Windows::PropertyPath ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-236">取得或設定繫結來源屬性的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-236">Gets or sets the path to the binding source property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-237">繫結來源的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-237">The path to the binding source.</span>
          </span>
          <span data-ttu-id="51a5b-238">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-238">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-239">每個繫結通常會有四個元件： 繫結目標物件、 目標屬性、 繫結來源、 和中要使用的繫結來源值的路徑。</span><span class="sxs-lookup"><span data-stu-id="51a5b-239">Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use.</span></span> <span data-ttu-id="51a5b-240">如需有關這些資料繫結概念的詳細資訊，請參閱[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-240">For more information about these data binding concepts, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="51a5b-241">使用<xref:System.Windows.Data.Binding.Path%2A>屬性來指定您想要繫結來源值：</span><span class="sxs-lookup"><span data-stu-id="51a5b-241">Use the <xref:System.Windows.Data.Binding.Path%2A> property to specify the source value you want to bind to:</span></span>  
  
-   <span data-ttu-id="51a5b-242">在最簡單的情況下，<xref:System.Windows.Data.Binding.Path%2A>屬性值是使用繫結，例如來源物件的屬性名稱`Path=PropertyName`。</span><span class="sxs-lookup"><span data-stu-id="51a5b-242">In the simplest case, the <xref:System.Windows.Data.Binding.Path%2A> property value is the name of the property of the source object to use for the binding, such as `Path=PropertyName`.</span></span>  
  
-   <span data-ttu-id="51a5b-243">子屬性的屬性可以指定類似在 C# 中使用的語法。</span><span class="sxs-lookup"><span data-stu-id="51a5b-243">Subproperties of a property can be specified by a syntax similar to that used in C#.</span></span> <span data-ttu-id="51a5b-244">例如，子句 `Path=ShoppingCart.Order` 會將繫結設定為物件或屬性 `ShoppingCart` 的子屬性 `Order`。</span><span class="sxs-lookup"><span data-stu-id="51a5b-244">For instance, the clause `Path=ShoppingCart.Order` sets the binding to the subproperty `Order` of the object or property `ShoppingCart`.</span></span>  
  
-   <span data-ttu-id="51a5b-245">若要繫結至附加屬性，請在附加屬性前後加上括號。</span><span class="sxs-lookup"><span data-stu-id="51a5b-245">To bind to an attached property, place parentheses around the attached property.</span></span> <span data-ttu-id="51a5b-246">例如，若要附加的屬性繫結<xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>，語法是`Path=(DockPanel.Dock)`。</span><span class="sxs-lookup"><span data-stu-id="51a5b-246">For example, to bind to the attached property <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>, the syntax is `Path=(DockPanel.Dock)`.</span></span>  
  
-   <span data-ttu-id="51a5b-247">屬性的索引子可以在方括弧內指定，接在套用索引子的屬性名稱後面。</span><span class="sxs-lookup"><span data-stu-id="51a5b-247">Indexers of a property can be specified within square brackets following the property name where the indexer is applied.</span></span> <span data-ttu-id="51a5b-248">例如，子句 `Path=ShoppingCart[0]` 會將繫結設定為索引，而該索引對應於屬性之內部索引處理常值字串 "0" 的方式。</span><span class="sxs-lookup"><span data-stu-id="51a5b-248">For instance, the clause `Path=ShoppingCart[0]` sets the binding to the index that corresponds to how your property's internal indexing handles the literal string "0".</span></span> <span data-ttu-id="51a5b-249">也支援多個索引子。</span><span class="sxs-lookup"><span data-stu-id="51a5b-249">Multiple indexers are also supported.</span></span>  
  
-   <span data-ttu-id="51a5b-250">`Path` 子句中可以混合使用索引子和子屬性；例如，`Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span><span class="sxs-lookup"><span data-stu-id="51a5b-250">Indexers and subproperties can be mixed in a `Path` clause; for example, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span></span>  
  
-   <span data-ttu-id="51a5b-251">您可以在索引子內加入多個以逗號 (,) 分隔的索引子參數。</span><span class="sxs-lookup"><span data-stu-id="51a5b-251">Inside indexers you can have multiple indexer parameters separated by commas (,).</span></span> <span data-ttu-id="51a5b-252">各個參數的型別可以使用括號指定。</span><span class="sxs-lookup"><span data-stu-id="51a5b-252">The type of each parameter can be specified with parentheses.</span></span> <span data-ttu-id="51a5b-253">例如，您可以加入 `Path="[(sys:Int32)42,(sys:Int32)24]"`，其中 `sys` 對應至 `System` 命名空間。</span><span class="sxs-lookup"><span data-stu-id="51a5b-253">For example, you can have `Path="[(sys:Int32)42,(sys:Int32)24]"`, where `sys` is mapped to the `System` namespace.</span></span>  
  
-   <span data-ttu-id="51a5b-254">當來源為集合檢視時，就可以使用斜線 (/) 指定目前的項目。</span><span class="sxs-lookup"><span data-stu-id="51a5b-254">When the source is a collection view, the current item can be specified with a slash (/).</span></span> <span data-ttu-id="51a5b-255">例如，子句 `Path=/` 會將繫結設定為檢視中目前的項目。</span><span class="sxs-lookup"><span data-stu-id="51a5b-255">For example, the clause `Path=/` sets the binding to the current item in the view.</span></span> <span data-ttu-id="51a5b-256">如果來源為集合，這個語法就會指定預設集合檢視目前的項目。</span><span class="sxs-lookup"><span data-stu-id="51a5b-256">When the source is a collection, this syntax specifies the current item of the default collection view.</span></span>  
  
-   <span data-ttu-id="51a5b-257">屬性名稱和斜線可以組合用來周遊本身為集合的屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-257">Property names and slashes can be combined to traverse properties that are collections.</span></span> <span data-ttu-id="51a5b-258">例如，`Path=/Offices/ManagerName` 會指定來源集合目前的項目，其中包含同樣為集合的 `Offices` 屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-258">For example, `Path=/Offices/ManagerName` specifies the current item of the source collection, which contains an `Offices` property that is also a collection.</span></span> <span data-ttu-id="51a5b-259">其目前項目為包含 `ManagerName` 屬性的物件。</span><span class="sxs-lookup"><span data-stu-id="51a5b-259">Its current item is an object that contains a `ManagerName` property.</span></span>  
  
-   <span data-ttu-id="51a5b-260">另外，可以使用句號 (.) 路徑來繫結至目前的來源。</span><span class="sxs-lookup"><span data-stu-id="51a5b-260">Optionally, a period (.) path can be used to bind to the current source.</span></span> <span data-ttu-id="51a5b-261">例如，`Text="{Binding}"` 等於 `Text="{Binding Path=.}"`。</span><span class="sxs-lookup"><span data-stu-id="51a5b-261">For example, `Text="{Binding}"` is equivalent to `Text="{Binding Path=.}"`.</span></span>  
  
 <span data-ttu-id="51a5b-262">路徑語法的詳細資訊，請參閱[繫結宣告概觀](~/docs/framework/wpf/data/binding-declarations-overview.md)或[PropertyPath XAML 語法](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-262">For information about path syntax, see [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md) or [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
 <span data-ttu-id="51a5b-263">如[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]繫結，請參閱<xref:System.Windows.Data.Binding.XPath%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-263">For [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] bindings, see the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span>  
  
 <span data-ttu-id="51a5b-264">若要繫結至整個物件時，您不需要指定<xref:System.Windows.Data.Binding.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-264">To bind to an entire object, you do not need to specify the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span> <span data-ttu-id="51a5b-265">如需詳細資訊，請參閱 「 指定的路徑以值"中[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-265">For more information, see "Specifying the Path to the Value" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a5b-266">下列範例示範建立樣式觸發程序<xref:System.Windows.Controls.ToolTip>，報告驗證錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="51a5b-266">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="51a5b-267">Setter 的值會繫結至目前的錯誤內容<xref:System.Windows.Controls.TextBox>(<xref:System.Windows.Controls.TextBox>使用樣式) 使用<xref:System.Windows.Data.Binding.RelativeSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-267">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="51a5b-268">如需有關此範例的詳細資訊，請參閱[How to： 實作繫結驗證](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-268">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativeSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSource RelativeSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.RelativeSource RelativeSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.RelativeSource" />
      <MemberSignature Language="VB.NET" Value="Public Property RelativeSource As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSource ^ RelativeSource { System::Windows::Data::RelativeSource ^ get(); void set(System::Windows::Data::RelativeSource ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-269">透過指定繫結來源對繫結目標的相對位置，取得或設定繫結來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-269">Gets or sets the binding source by specifying its location relative to the position of the binding target.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-270">A<see cref="T:System.Windows.Data.RelativeSource" />物件，指定要使用的繫結來源相對位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-270">A <see cref="T:System.Windows.Data.RelativeSource" /> object specifying the relative location of the binding source to use.</span>
          </span>
          <span data-ttu-id="51a5b-271">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-271">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-272">這個屬性常用物件的一個屬性繫結至相同的物件，另一個屬性，或在樣式或範本中定義的繫結。</span><span class="sxs-lookup"><span data-stu-id="51a5b-272">This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.</span></span>  
  
 <span data-ttu-id="51a5b-273">根據預設，繫結繼承所指定的資料內容`DataContext`如果其中一個已設定的屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-273">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="51a5b-274">不過，<xref:System.Windows.Data.Binding.RelativeSource%2A>屬性是一種方式，您可以明確設定的來源<xref:System.Windows.Data.Binding>並覆寫繼承的資料內容。</span><span class="sxs-lookup"><span data-stu-id="51a5b-274">However, the <xref:System.Windows.Data.Binding.RelativeSource%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="51a5b-275">如需詳細資訊，請參閱[How to： 指定的繫結來源](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-275">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="51a5b-276"><xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType>和<xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType>屬性也可讓您設定的繫結來源明確。</span><span class="sxs-lookup"><span data-stu-id="51a5b-276">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="51a5b-277">不過，只有三個屬性，其中<xref:System.Windows.Data.Binding.ElementName%2A>， <xref:System.Windows.Data.Binding.Source%2A>，和<xref:System.Windows.Data.Binding.RelativeSource%2A>、 應該設定為每個繫結，或可能會發生衝突。</span><span class="sxs-lookup"><span data-stu-id="51a5b-277">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="51a5b-278">如果繫結來源衝突，則這個屬性會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="51a5b-278">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="51a5b-279">如[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]的詳細資訊，請參閱[RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-279">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).</span></span>  
    
## Examples  
 <span data-ttu-id="51a5b-280">下列範例示範建立樣式觸發程序<xref:System.Windows.Controls.ToolTip>，報告驗證錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="51a5b-280">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="51a5b-281">Setter 的值會繫結至目前的錯誤內容<xref:System.Windows.Controls.TextBox>(<xref:System.Windows.Controls.TextBox>使用樣式) 使用<xref:System.Windows.Data.Binding.RelativeSource%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-281">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="51a5b-282">如需有關此範例的詳細資訊，請參閱[How to： 實作繫結驗證](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-282">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 <span data-ttu-id="51a5b-283">若要查看完整的範例，請參閱[繫結驗證範例](http://go.microsoft.com/fwlink/?LinkID=159972)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-283">To see the full example, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Source" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="51a5b-284">接聽這個事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-284">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="51a5b-285">要移除的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-285">The handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a5b-286">移除 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-286">Removes a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-287">這個方法支援附加的事件的使用中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="51a5b-287">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="51a5b-288">接聽這個事件的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-288">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="51a5b-289">要移除的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-289">The handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a5b-290">移除 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-290">Removes a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-291">這個方法支援附加的事件的使用中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="51a5b-291">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetXmlNamespaceManager(class System.Windows.DependencyObject target, class System.Xml.XmlNamespaceManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetXmlNamespaceManager (target As DependencyObject, value As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetXmlNamespaceManager(System::Windows::DependencyObject ^ target, System::Xml::XmlNamespaceManager ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="51a5b-292">要從中取得命名空間資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-292">The object from which to get namespace information.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="51a5b-293">
            <see cref="T:System.Xml.XmlNamespaceManager" />，做為傳遞的項目中命名空間評估之用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-293">The <see cref="T:System.Xml.XmlNamespaceManager" /> to use for namespace evaluation in the passed element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a5b-294">設定所提供項目附加的繫結所使用的命名空間管理員物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-294">Sets a namespace manager object used by the binding attached to the provided element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-295">這個方法支援附加的屬性的使用方式的<xref:System.Windows.Data.Binding.XmlNamespaceManager%2A>附加屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-295">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="51a5b-296">
            <paramref name="target" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-296">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePath">
      <MemberSignature Language="C#" Value="public bool ShouldSerializePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializePath" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializePath () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializePath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-297">指示是否應該保存 <see cref="P:System.Windows.Data.Binding.Path" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-297">Indicates whether the <see cref="P:System.Windows.Data.Binding.Path" /> property should be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51a5b-298">如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-298">
              <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-299">這`ShouldSerialize`方法提供，因為<xref:System.Windows.Data.Binding.Path%2A>屬性並沒有簡單的預設值。</span><span class="sxs-lookup"><span data-stu-id="51a5b-299">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Path%2A> property does not have a simple default value.</span></span> <span data-ttu-id="51a5b-300">這個方法會指出屬性是否已變更其預設值。</span><span class="sxs-lookup"><span data-stu-id="51a5b-300">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="51a5b-301">如果您開發的設計工具通常呼叫這個方法<xref:System.Windows.Data.Binding>或開發您自己的控制項加入<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-301">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSource">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeSource" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-302">指示是否應該保存 <see cref="P:System.Windows.Data.Binding.Source" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-302">Indicates whether the <see cref="P:System.Windows.Data.Binding.Source" /> property should be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51a5b-303">如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-303">
              <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-304">這`ShouldSerialize`方法提供，因為<xref:System.Windows.Data.Binding.Source%2A>屬性並沒有簡單的預設值。</span><span class="sxs-lookup"><span data-stu-id="51a5b-304">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Source%2A> property does not have a simple default value.</span></span> <span data-ttu-id="51a5b-305">這個方法會指出屬性是否已變更其預設值。</span><span class="sxs-lookup"><span data-stu-id="51a5b-305">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="51a5b-306">如果您開發的設計工具通常呼叫這個方法<xref:System.Windows.Data.Binding>或開發您自己的控制項加入<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-306">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValidationRules">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeValidationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeValidationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeValidationRules () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeValidationRules();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-307">指示是否應該保存 <see cref="P:System.Windows.Data.Binding.ValidationRules" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-307">Indicates whether the <see cref="P:System.Windows.Data.Binding.ValidationRules" /> property should be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51a5b-308">如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-308">
              <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-309">這`ShouldSerialize`方法提供，因為<xref:System.Windows.Data.Binding.ValidationRules%2A>屬性並沒有簡單的預設值。</span><span class="sxs-lookup"><span data-stu-id="51a5b-309">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.ValidationRules%2A> property does not have a simple default value.</span></span> <span data-ttu-id="51a5b-310">這個方法會指出屬性是否已變更其預設值。</span><span class="sxs-lookup"><span data-stu-id="51a5b-310">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="51a5b-311">如果您開發的設計工具通常呼叫這個方法<xref:System.Windows.Data.Binding>或開發您自己的控制項加入<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-311">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public object Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Source { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-312">取得或設定要作為繫結來源的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-312">Gets or sets the object to use as the binding source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-313">要作為繫結來源的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-313">The object to use as the binding source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-314">根據預設，繫結繼承所指定的資料內容`DataContext`如果其中一個已設定的屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-314">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="51a5b-315">不過，<xref:System.Windows.Data.Binding.Source%2A>屬性是一種方式，您可以明確設定的來源<xref:System.Windows.Data.Binding>並覆寫繼承的資料內容。</span><span class="sxs-lookup"><span data-stu-id="51a5b-315">However, the <xref:System.Windows.Data.Binding.Source%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="51a5b-316">如果您不需要的功能建立的執行範圍的數個屬性繼承相同的資料內容，您可以使用<xref:System.Windows.Data.Binding.Source%2A>屬性而非`DataContext`屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-316">If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <xref:System.Windows.Data.Binding.Source%2A> property instead of the `DataContext` property.</span></span>  
  
 <span data-ttu-id="51a5b-317"><xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType>和<xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType>屬性也可讓您設定的繫結來源明確。</span><span class="sxs-lookup"><span data-stu-id="51a5b-317">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="51a5b-318">不過，只有三個屬性，其中<xref:System.Windows.Data.Binding.ElementName%2A>， <xref:System.Windows.Data.Binding.Source%2A>，和<xref:System.Windows.Data.Binding.RelativeSource%2A>、 應該設定為每個繫結，或可能會發生衝突。</span><span class="sxs-lookup"><span data-stu-id="51a5b-318">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="51a5b-319">如果繫結來源衝突，則這個屬性會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="51a5b-319">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="51a5b-320">若要清除此屬性，將它設定為<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-320">To clear this property, set it to <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_Source"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="51a5b-321">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="51a5b-321">XAML Attribute Usage</span></span>  
  
```  
<object Source="object"/>  
```  
  
<a name="xamlValues_Source"></a>   
## <a name="xaml-values"></a><span data-ttu-id="51a5b-322">XAML 值</span><span class="sxs-lookup"><span data-stu-id="51a5b-322">XAML Values</span></span>  
 <span data-ttu-id="51a5b-323">*object*</span><span class="sxs-lookup"><span data-stu-id="51a5b-323">*object*</span></span>  
 <span data-ttu-id="51a5b-324">現有的物件。</span><span class="sxs-lookup"><span data-stu-id="51a5b-324">An existing object.</span></span> <span data-ttu-id="51a5b-325">若要參考現有的物件，使用[StaticResource 標記延伸](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span><span class="sxs-lookup"><span data-stu-id="51a5b-325">To refer to an existing object, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a5b-326">下列範例會使用`Person`物件具有名為字串屬性`PersonName`集中定義的`SDKSample`命名空間中的，第一個反白顯示的列所示。</span><span class="sxs-lookup"><span data-stu-id="51a5b-326">The following example uses a `Person` object with a string property named `PersonName` that is defined in the `SDKSample` namespace, as the first highlighted line shows.</span></span> <span data-ttu-id="51a5b-327">在反白顯示列，其中包含`<src>`項目，它會具現化`Person`物件`PersonName`屬性值為`Joe`。</span><span class="sxs-lookup"><span data-stu-id="51a5b-327">In the highlighted line that contains the `<src>` element, it instantiates the `Person` object with a `PersonName` property value of `Joe`.</span></span> <span data-ttu-id="51a5b-328">這是`Resources`區段，並指派`x:Key`。</span><span class="sxs-lookup"><span data-stu-id="51a5b-328">This is done in the `Resources` section and assigned an `x:Key`.</span></span>  
  
 [!code-xaml[BindingInstantiation](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleBinding/CSharp/Page1.xaml?highlight=4,9,37)]  
  
 <span data-ttu-id="51a5b-329">包含反白顯示的列`<TextBlock>`項目示範如何將繫結至`PersonName`屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-329">The highlighted line that contains the `<TextBlock>` elements shows how to bind to the `PersonName` property.</span></span> <span data-ttu-id="51a5b-330">如此一來，<xref:System.Windows.Controls.TextBlock>控制項就會出現 「 Joe"的值。</span><span class="sxs-lookup"><span data-stu-id="51a5b-330">As a result, the <xref:System.Windows.Controls.TextBlock> control appears with the value "Joe".</span></span>  
  
 <span data-ttu-id="51a5b-331">在下列範例中，<xref:System.Windows.Data.Binding.Source%2A>值<xref:System.Windows.Data.Binding>物件都會設為`static`屬性<xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="51a5b-331">In the following example, the <xref:System.Windows.Data.Binding.Source%2A> values of the <xref:System.Windows.Data.Binding> objects are set to the `static` property <xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span></span>  
  
 [!code-xaml[DataBindingLab#ComboBoxMultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/AddProductWindow.xaml#comboboxmultibinding)]  
  
 <span data-ttu-id="51a5b-332">如需完整範例，請參閱[資料繫結示範](http://go.microsoft.com/fwlink/?LinkID=163703)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-332">For the full example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdated">
      <MemberSignature Language="C#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.SourceUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SourceUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SourceUpdatedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-333">識別 <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> 附加事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-333">Identifies the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdated">
      <MemberSignature Language="C#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.TargetUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TargetUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TargetUpdatedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-334">識別 <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> 附加事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-334">Identifies the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceExceptionFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceExceptionFilter As UpdateSourceExceptionFilterCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceExceptionFilterCallback ^ UpdateSourceExceptionFilter { System::Windows::Data::UpdateSourceExceptionFilterCallback ^ get(); void set(System::Windows::Data::UpdateSourceExceptionFilterCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceExceptionFilterCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-335">取得或設定可用來提供自訂邏輯的處理常式，以處理繫結引擎在更新繫結來源值期間所遇到的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-335">Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span>
          </span>
          <span data-ttu-id="51a5b-336">只有在 <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> 已經與繫結相關聯時，這個屬性才適用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-336">This is only applicable if you have associated an <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> with your binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-337">提供自訂邏輯以處理繫結引擎在更新繫結來源值期間所遇到之例外狀況的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-337">A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-338"><xref:System.Windows.Controls.ExceptionValidationRule>是內建的驗證規則會檢查繫結來源屬性更新期間擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="51a5b-338">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property.</span></span> <span data-ttu-id="51a5b-339">如果您有相關聯<xref:System.Windows.Controls.ExceptionValidationRule>與您<xref:System.Windows.Data.Binding>物件，您可以使用這個屬性設定來提供自訂邏輯以處理這些例外狀況處理常式。</span><span class="sxs-lookup"><span data-stu-id="51a5b-339">If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object, you can use this property to set a handler to provide custom logic for handling these exceptions.</span></span> <span data-ttu-id="51a5b-340">如果<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>上未指定<xref:System.Windows.Data.Binding>，建立繫結引擎<xref:System.Windows.Controls.ValidationError>與例外狀況並將它加入<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>繫結項目的集合。</span><span class="sxs-lookup"><span data-stu-id="51a5b-340">If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a5b-341"><xref:System.Windows.Controls.TextBox.Text%2A>的下列屬性<xref:System.Windows.Controls.TextBox>是資料繫結來源屬性`Age3`型別的`int`。</span><span class="sxs-lookup"><span data-stu-id="51a5b-341">The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`.</span></span> <span data-ttu-id="51a5b-342"><xref:System.Windows.Controls.ExceptionValidationRule>檢查 （例如，當使用者輸入的值無法轉換為整數） 之來源屬性更新期間所擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="51a5b-342">The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).</span></span>  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 <span data-ttu-id="51a5b-343">您可以提供自訂邏輯以處理這些例外狀況。</span><span class="sxs-lookup"><span data-stu-id="51a5b-343">You can provide custom logic to handle those exceptions.</span></span> <span data-ttu-id="51a5b-344">下列範例示範如何使用<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>屬性來設定<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-344">The following example shows how to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 <span data-ttu-id="51a5b-345">以下是範例實作<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-345">The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 <span data-ttu-id="51a5b-346"><xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>也可以傳回`null`，本身的例外狀況或<xref:System.Windows.Controls.ValidationError>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-346">The <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> can also return `null`, the exception itself, or a <xref:System.Windows.Controls.ValidationError>.</span></span> <span data-ttu-id="51a5b-347">如需詳細資訊，請參閱<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-347">For more information, see <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 <span data-ttu-id="51a5b-348">如需完整範例，請參閱[繫結驗證範例](http://go.microsoft.com/fwlink/?LinkID=159972)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-348">For the complete sample, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceTrigger As UpdateSourceTrigger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceTrigger UpdateSourceTrigger { System::Windows::Data::UpdateSourceTrigger get(); void set(System::Windows::Data::UpdateSourceTrigger value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-349">取得或設定值，這個值會判斷繫結來源更新的時機。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-349">Gets or sets a value that determines the timing of binding source updates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-350">其中一個 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-350">One of the <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> values.</span>
          </span>
          <span data-ttu-id="51a5b-351">預設值是<see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />，它會傳回預設<see cref="T:System.Windows.Data.UpdateSourceTrigger" />目標相依性屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-351">The default is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, which returns the default <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> value of the target dependency property.</span>
          </span>
          <span data-ttu-id="51a5b-352">不過，大多數相依性屬性的預設值是<see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />，雖然<see cref="P:System.Windows.Controls.TextBox.Text" />屬性具有預設值是<see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-352">However, the default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, while the <see cref="P:System.Windows.Controls.TextBox.Text" /> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.</span>
          </span>
          <span data-ttu-id="51a5b-353">若要判斷預設的程式設計方式<see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" />相依性屬性的值是要取得的屬性使用的屬性中繼資料<see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" />然後核取的值<see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" />屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-353">A programmatic way to determine the default <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> value of a dependency property is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-354">繫結<xref:System.Windows.Data.BindingMode.TwoWay>或<xref:System.Windows.Data.BindingMode.OneWayToSource>接聽中的目標屬性的變更，並將它們傳播回來源。</span><span class="sxs-lookup"><span data-stu-id="51a5b-354">Bindings that are <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> listen for changes in the target property and propagate them back to the source.</span></span> <span data-ttu-id="51a5b-355">這種情況稱為更新來源。</span><span class="sxs-lookup"><span data-stu-id="51a5b-355">This is known as updating the source.</span></span> <span data-ttu-id="51a5b-356">通常，當目標屬性變更時，就可能發生這些更新。</span><span class="sxs-lookup"><span data-stu-id="51a5b-356">Usually, these updates happen whenever the target property changes.</span></span> <span data-ttu-id="51a5b-357">這是正常的核取方塊和其他簡單的控制項，但它通常不是適用於文字欄位。</span><span class="sxs-lookup"><span data-stu-id="51a5b-357">This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields.</span></span> <span data-ttu-id="51a5b-358">每個按鍵動作可能會降低效能，並拒絕使用者一般機會退格鍵並認可新的值之前修正輸入錯誤之後更新。</span><span class="sxs-lookup"><span data-stu-id="51a5b-358">Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value.</span></span> <span data-ttu-id="51a5b-359">因此，預設值<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>值<xref:System.Windows.Controls.TextBox.Text%2A>屬性是<xref:System.Windows.Data.UpdateSourceTrigger.LostFocus>而非<xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-359">Therefore, the default <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of the <xref:System.Windows.Controls.TextBox.Text%2A> property is <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> and not <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  
  
 <span data-ttu-id="51a5b-360">如果您設定<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>值設定為<xref:System.Windows.Data.UpdateSourceTrigger.Explicit>，您必須呼叫<xref:System.Windows.Data.BindingExpression.UpdateSource%2A>方法或所做的變更將不會傳播到來源。</span><span class="sxs-lookup"><span data-stu-id="51a5b-360">If you set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Mode" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnDataErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-361">取得或設定值，這個值表示是否要包含 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-361">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-362">
            <see langword="true" /> 表示包含 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-362">
              <see langword="true" /> to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-363">設定這個屬性提供替代<xref:System.Windows.Controls.DataErrorValidationRule>元素明確。</span><span class="sxs-lookup"><span data-stu-id="51a5b-363">Setting this property provides an alternative to using the <xref:System.Windows.Controls.DataErrorValidationRule> element explicitly.</span></span> <span data-ttu-id="51a5b-364"><xref:System.Windows.Controls.DataErrorValidationRule>是內建的驗證規則，以檢查所引發的錯誤<xref:System.ComponentModel.IDataErrorInfo>來源物件的實作。</span><span class="sxs-lookup"><span data-stu-id="51a5b-364">The <xref:System.Windows.Controls.DataErrorValidationRule> is a built-in validation rule that checks for errors that are raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object.</span></span> <span data-ttu-id="51a5b-365">如果會引發錯誤，就會建立繫結引擎<xref:System.Windows.Controls.ValidationError>發生錯誤並將它加入<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>繫結項目的集合。</span><span class="sxs-lookup"><span data-stu-id="51a5b-365">If an error is raised, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the error and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="51a5b-366">錯誤缺乏清除這個驗證回應，除非另一項規則會引發驗證問題。</span><span class="sxs-lookup"><span data-stu-id="51a5b-366">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="51a5b-367"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> .NET Framework 3.5 版中引進。</span><span class="sxs-lookup"><span data-stu-id="51a5b-367"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="51a5b-368">如需詳細資訊，請參閱 [.NET Framework 版本和相依性](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-368">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a5b-369">下列範例會使用<xref:System.ComponentModel.IDataErrorInfo>和<xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A>來驗證使用者輸入中的<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-369">The following examples uses <xref:System.ComponentModel.IDataErrorInfo> and <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="51a5b-370">第一個範例會建立資料型別可實作<xref:System.ComponentModel.IDataErrorInfo>報告驗證錯誤。</span><span class="sxs-lookup"><span data-stu-id="51a5b-370">The first example creates a data type that implements <xref:System.ComponentModel.IDataErrorInfo> to report validation errors.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#idataerrorinfodata)]
 [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#idataerrorinfodata)]  
  
 <span data-ttu-id="51a5b-371">下列範例會繫結`Age`屬性<xref:System.Windows.Controls.TextBox>並設定<xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A>至`true`上<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-371">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span>  <span data-ttu-id="51a5b-372">當使用者輸入無效的值時，在出現紅色框線<xref:System.Windows.Controls.TextBox>和<xref:System.Windows.Controls.ToolTip>報告的錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="51a5b-372">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#idataerrorinfoxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnExceptions">
      <MemberSignature Language="C#" Value="public bool ValidatesOnExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnExceptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-373">取得或設定值，這個值表示是否要包含 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-373">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-374">
            <see langword="true" /> 表示包含 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-374">
              <see langword="true" /> to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-375">設定這個屬性提供替代<xref:System.Windows.Controls.ExceptionValidationRule>元素明確。</span><span class="sxs-lookup"><span data-stu-id="51a5b-375">Setting this property provides an alternative to using the <xref:System.Windows.Controls.ExceptionValidationRule> element explicitly.</span></span> <span data-ttu-id="51a5b-376"><xref:System.Windows.Controls.ExceptionValidationRule>是內建的驗證規則會檢查來源屬性更新期間所擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="51a5b-376">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</span></span> <span data-ttu-id="51a5b-377">如果擲回例外狀況，就會建立繫結引擎<xref:System.Windows.Controls.ValidationError>與例外狀況並將它加入<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>繫結項目的集合。</span><span class="sxs-lookup"><span data-stu-id="51a5b-377">If an exception is thrown, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="51a5b-378">錯誤缺乏清除這個驗證回應，除非另一項規則會引發驗證問題。</span><span class="sxs-lookup"><span data-stu-id="51a5b-378">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="51a5b-379"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> .NET Framework 3.5 版中引進。</span><span class="sxs-lookup"><span data-stu-id="51a5b-379"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="51a5b-380">如需詳細資訊，請參閱 [.NET Framework 版本和相依性](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-380">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51a5b-381">下列範例會使用<xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>來驗證使用者輸入中的<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-381">The following examples use <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="51a5b-382">第一個範例會建立資料型別會擲回例外狀況時`Age`屬性設定為無效的屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-382">The first example creates a data type that throws an exception when the `Age` property is set to an invalid property.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#throwexceptiondata)]
 [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#throwexceptiondata)]  
  
 <span data-ttu-id="51a5b-383">下列範例會繫結`Age`屬性<xref:System.Windows.Controls.TextBox>並設定<xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A>至`true`上<xref:System.Windows.Data.Binding>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-383">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="51a5b-384">當使用者輸入無效的值時，在出現紅色框線<xref:System.Windows.Controls.TextBox>和<xref:System.Windows.Controls.ToolTip>報告的錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="51a5b-384">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#throwexceptionxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-385">取得或設定值，這個值表示是否要包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-385">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-386">
            <see langword="true" /> 表示包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-386">
              <see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="51a5b-387">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-387">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-388">當<xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A>是`true`，繫結檢查，並會報告所實作的資料來源所引發的錯誤<xref:System.ComponentModel.INotifyDataErrorInfo>。</span><span class="sxs-lookup"><span data-stu-id="51a5b-388">When <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-389">取得檢查使用者輸入有效性的規則集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-389">Gets a collection of rules that check the validity of the user input.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-390">
            <see cref="T:System.Windows.Controls.ValidationRule" /> 物件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-390">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-391">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]資料繫結模型可讓您將<xref:System.Windows.Data.Binding.ValidationRules%2A>與您<xref:System.Windows.Data.Binding>或<xref:System.Windows.Data.MultiBinding>物件。</span><span class="sxs-lookup"><span data-stu-id="51a5b-391">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="51a5b-392">您可以建立自訂規則衍生自<xref:System.Windows.Controls.ValidationRule>類別，並實作<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法，或者您可以使用內建<xref:System.Windows.Controls.ExceptionValidationRule>，這會導致在來源更新期間的例外狀況是否無效值。</span><span class="sxs-lookup"><span data-stu-id="51a5b-392">You can create custom rules by deriving from the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, or you can use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which invalidates a value if there are exceptions during source updates.</span></span>  
  
 <span data-ttu-id="51a5b-393">繫結引擎會檢查每個<xref:System.Windows.Controls.ValidationRule>每次輸入的值 （繫結目標屬性值） 轉送到繫結來源屬性的繫結相關聯。</span><span class="sxs-lookup"><span data-stu-id="51a5b-393">The binding engine checks each <xref:System.Windows.Controls.ValidationRule> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property.</span></span> <span data-ttu-id="51a5b-394">驗證程序的詳細討論，請參閱中的資料驗證一節[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-394">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="51a5b-395">此屬性可以在設定[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]只能使用集合語法所示，或藉由存取的集合物件，使用的各種方法，例如`Add`。</span><span class="sxs-lookup"><span data-stu-id="51a5b-395">This property can be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as `Add`.</span></span> <span data-ttu-id="51a5b-396">要存取的集合物件的屬性是唯讀的而集合本身則是讀寫。</span><span class="sxs-lookup"><span data-stu-id="51a5b-396">The property to access the collection object is read-only, whereas the collection itself is read-write.</span></span>  
  
<a name="xamlPropertyElementUsage_ValidationRules"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="51a5b-397">XAML 屬性項目用法</span><span class="sxs-lookup"><span data-stu-id="51a5b-397">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.ValidationRules>  
    oneOrMoreValidationRules  
  </object.ValidationRules>  
</object>  
  
```  
  
<a name="xamlValues_ValidationRules"></a>   
## <a name="xaml-values"></a><span data-ttu-id="51a5b-398">XAML 值</span><span class="sxs-lookup"><span data-stu-id="51a5b-398">XAML Values</span></span>  
 <span data-ttu-id="51a5b-399">*oneOrMoreValidationRules*</span><span class="sxs-lookup"><span data-stu-id="51a5b-399">*oneOrMoreValidationRules*</span></span>  
 <span data-ttu-id="51a5b-400">一或多個<xref:System.Windows.Controls.ValidationRule>物件。</span><span class="sxs-lookup"><span data-stu-id="51a5b-400">One or more <xref:System.Windows.Controls.ValidationRule> objects.</span></span> <span data-ttu-id="51a5b-401">您可以使用<xref:System.Windows.Controls.ExceptionValidationRule>類別或子類別化來建立自訂規則<xref:System.Windows.Controls.ValidationRule>類別。</span><span class="sxs-lookup"><span data-stu-id="51a5b-401">You can use the <xref:System.Windows.Controls.ExceptionValidationRule> class or create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Validation" />
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManager">
      <MemberSignature Language="C#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="ILAsm" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XmlNamespaceManager" />
      <MemberSignature Language="VB.NET" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty XmlNamespaceManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XmlNamespaceManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ XmlNamespaceManagerProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-402">識別 <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> 附加屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-402">Identifies the <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="51a5b-403">取得或設定 <see langword="XPath" /> 查詢，以傳回 [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] 繫結來源上要使用的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-403">Gets or sets an <see langword="XPath" /> query that returns the value on the [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] binding source to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="51a5b-404">
            <see langword="XPath" /> 查詢。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-404">The <see langword="XPath" /> query.</span>
          </span>
          <span data-ttu-id="51a5b-405">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a5b-405">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a5b-406">繫結來源時[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]資料，而非[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]物件<xref:System.Windows.Data.Binding.XPath%2A>而不是使用屬性<xref:System.Windows.Data.Binding.Path%2A>屬性，指出要使用的繫結來源上的值的路徑。</span><span class="sxs-lookup"><span data-stu-id="51a5b-406">When the binding source is [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data instead of a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, the <xref:System.Windows.Data.Binding.XPath%2A> property is used instead of the <xref:System.Windows.Data.Binding.Path%2A> property to indicate the path to the value on the binding source to use.</span></span>  
  
 <span data-ttu-id="51a5b-407">藉由設定<xref:System.Windows.Data.Binding.XPath%2A>屬性，您要建立`XPath`查詢，以選取的節點的集合 (<xref:System.Xml.XmlElement?displayProperty=nameWithType>和<xref:System.Xml.XmlAttribute?displayProperty=nameWithType>兩者都衍生自<xref:System.Xml.XmlNode?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-407">By setting the <xref:System.Windows.Data.Binding.XPath%2A> property, you are creating an `XPath` query to select a node or a collection of nodes (<xref:System.Xml.XmlElement?displayProperty=nameWithType> and <xref:System.Xml.XmlAttribute?displayProperty=nameWithType> both derive from <xref:System.Xml.XmlNode?displayProperty=nameWithType>).</span></span> <span data-ttu-id="51a5b-408"><xref:System.Xml.XmlNode?displayProperty=nameWithType> 是[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]物件，這表示您可以使用其屬性的繫結<xref:System.Windows.Data.Binding.Path%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-408"><xref:System.Xml.XmlNode?displayProperty=nameWithType> is a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, which means you can bind to its properties using the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span>  
  
 <span data-ttu-id="51a5b-409"><xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType>方法會處理`XPath`運算式從<xref:System.Windows.Data.Binding.XPath%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="51a5b-409">The <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> method handles the `XPath` expressions from the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span> <span data-ttu-id="51a5b-410">`XPath` 不支援函式。</span><span class="sxs-lookup"><span data-stu-id="51a5b-410">`XPath` functions are not supported.</span></span> <span data-ttu-id="51a5b-411">如`XPath`運算式的詳細資訊，請參閱<xref:System.Xml.XmlNode.SelectNodes%2A>文件集和範例 > 一節中提供一些範例。</span><span class="sxs-lookup"><span data-stu-id="51a5b-411">For `XPath` expression information, see the <xref:System.Xml.XmlNode.SelectNodes%2A> documentation and some examples provided in the Example section.</span></span>  
  
 <span data-ttu-id="51a5b-412">LINQ to XML 物件<xref:System.Xml.Linq.XDocument>和<xref:System.Xml.Linq.XElement>不要使用`XPath`。</span><span class="sxs-lookup"><span data-stu-id="51a5b-412">LINQ to XML objects <xref:System.Xml.Linq.XDocument> and <xref:System.Xml.Linq.XElement> do not use `XPath`.</span></span> <span data-ttu-id="51a5b-413">如需詳細資訊，請參閱[How to: for XML 查詢結果繫結至 XDocument、 XElement 或 LINQ](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md)。</span><span class="sxs-lookup"><span data-stu-id="51a5b-413">For details, see [How to: Bind to XDocument, XElement, or LINQ for XML Query Results](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>