<Type Name="ObjectDataProvider" FullName="System.Windows.Data.ObjectDataProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a2480cf45f8af52fd289c0a5f075fc4f72e219b0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37521612" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataProvider : System.Windows.Data.DataSourceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataProvider extends System.Windows.Data.DataSourceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.ObjectDataProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataProvider&#xA;Inherits DataSourceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataProvider : System::Windows::Data::DataSourceProvider" />
  <TypeSignature Language="F#" Value="type ObjectDataProvider = class&#xA;    inherit DataSourceProvider" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.DataSourceProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>包裝並建立可作為繫結來源的物件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <xref:System.Windows.Data.ObjectDataProvider> 當沒有指定的型別或成員上執行反映的權限時，就會失敗。 如需詳細資訊，請參閱中的權限需求[繫結來源概觀](~/docs/framework/wpf/data/binding-sources-overview.md)。  
  
 有許多方式可建立要用做為繫結來源物件。 比方說，您可以在這裡建立您的物件中的資源區段您[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]頁面上，或者您可以在程式碼中建立您的物件，並將它設為`DataContext`您的視窗。  
  
 <xref:System.Windows.Data.ObjectDataProvider> 可讓您建立您的物件中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]並使其可做為繫結來源。 它提供下列屬性可讓您在物件上執行的查詢，並繫結至結果。  
  
-   使用<xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters%2A>將參數傳遞給建構函式物件的屬性。  
  
-   使用 <xref:System.Windows.Data.ObjectDataProvider.MethodName%2A>屬性設為呼叫的方法，並使用<xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A>將參數傳遞給方法的屬性。 然後，您可以繫結至方法的結果。  
  
 您也可以使用<xref:System.Windows.Data.ObjectDataProvider.IsAsynchronous%2A>屬性來指定是否要在背景工作執行緒或作用中的內容中執行物件建立。  
  
 當您想要取代您目前的繫結來源物件與另一個物件，並已更新所有相關聯的繫結時，這個類別也很有用。  
  
 <xref:System.Windows.Data.ObjectDataProvider> 提供便利的方式，來建立和使用物件做為繫結中的來源物件[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，但它不會取代現有的資料模型。  
  
 如果您要實作您自己的資料繫結的物件，請參閱[繫結來源概觀](~/docs/framework/wpf/data/binding-sources-overview.md)資訊和建議。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.XmlDataProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ObjectDataProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Data.ObjectDataProvider" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginQuery">
      <MemberSignature Language="C#" Value="protected override void BeginQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void BeginQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ObjectDataProvider.BeginQuery" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub BeginQuery ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void BeginQuery();" />
      <MemberSignature Language="F#" Value="abstract member BeginQuery : unit -&gt; unit&#xA;override this.BeginQuery : unit -&gt; unit" Usage="objectDataProvider.BeginQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>開始建立要求的物件，可能會立即建立或在背景執行緒上建立，視 <see cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" /> 屬性的值而定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A>和<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>基底類別的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructorParameters">
      <MemberSignature Language="C#" Value="public System.Collections.IList ConstructorParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList ConstructorParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructorParameters As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ ConstructorParameters { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConstructorParameters : System.Collections.IList" Usage="System.Windows.Data.ObjectDataProvider.ConstructorParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得要傳遞至建構函式的參數清單。</summary>
        <value>要傳遞至建構函式的參數清單。 預設值是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 以隱含方式變更這個集合會導致<xref:System.Windows.Data.ObjectDataProvider>重新整理。 變更多個重新整理造成屬性時，使用<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建議。  
  
<a name="xamlPropertyElementUsage_ConstructorParameters"></a>   
## <a name="xaml-property-element-usage"></a>XAML 屬性項目用法  
  
```xaml  
<object>  
  <object.ConstructorParameters>  
    parameterValues  
  </object.ConstructorParameters>  
</object>  
```  

## Examples  
在下列範例會使用反白顯示的線條<xref:System.Windows.Data.ObjectDataProvider>的包裝函式為`Person`物件。 `<ObjectDataProvider.ConstructorParameters>`項目會顯示如何傳遞<xref:System.String>其建構函式的引數。 
  
 [!code-xaml[SimpleBinding#ObjectDataProvider.ConstructorParameters](~/samples/snippets/visualbasic/VS_Snippets_Wpf/SimpleBinding/VisualBasic/Page1.xaml?highlight=10-14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsynchronous">
      <MemberSignature Language="C#" Value="public bool IsAsynchronous { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsynchronous" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAsynchronous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsynchronous { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAsynchronous : bool with get, set" Usage="System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出要在背景工作執行緒 (Worker Thread) 或主動式內容中執行物件建立。</summary>
        <value>如果在背景工作執行緒中 (Worker Thread) 執行物件建立，就是 <see langword="true" />，否則就是 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性就很有用，如果您要繫結會慢可供使用的外部資料物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.IsAsync" />
        <altmember cref="T:System.Windows.Data.XmlDataProvider" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ObjectDataProvider.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string with get, set" Usage="System.Windows.Data.ObjectDataProvider.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要呼叫之方法的名稱。</summary>
        <value>要呼叫之方法的名稱。 預設值是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性在物件上呼叫方法，並使用<xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A>將參數傳遞給方法的屬性。 然後，您可以繫結至方法的結果。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodParameters">
      <MemberSignature Language="C#" Value="public System.Collections.IList MethodParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList MethodParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ObjectDataProvider.MethodParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodParameters As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ MethodParameters { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodParameters : System.Collections.IList" Usage="System.Windows.Data.ObjectDataProvider.MethodParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得要傳遞至該方法的參數清單。</summary>
        <value>要傳遞至該方法的參數清單。 預設為空白清單。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Windows.Data.ObjectDataProvider.MethodName%2A>屬性設為您的物件上呼叫方法，並使用<xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A>將參數傳遞給方法的屬性。 然後，您可以繫結至方法的結果。  
  
 以隱含方式變更這個集合會導致<xref:System.Windows.Data.ObjectDataProvider>重新整理的物件。 變更多個重新整理造成屬性時，使用<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>建議。  
  
<a name="xamlPropertyElementUsage_MethodParameters"></a>   
## <a name="xaml-property-element-usage"></a>XAML 屬性項目用法  
  
```  
<object>  
  <object.MethodParameters>  
    parameterValues  
  </object.MethodParameters>  
</object>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectInstance">
      <MemberSignature Language="C#" Value="public object ObjectInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectInstance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectInstance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectInstance { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectInstance : obj with get, set" Usage="System.Windows.Data.ObjectDataProvider.ObjectInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定作為繫結來源使用的物件。</summary>
        <value>物件的執行個體，此物件是從 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 及 <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" /> 或是將 <see cref="T:System.Windows.Data.DataSourceProvider" /> 用來做為 <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 的 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" /> 建構出來的。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>設定為非 null 值，所指定的物件類型的屬性會保存<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>。 如果<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>指派使用者<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>屬性會傳回指定的物件類型。 如果<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>設定為<xref:System.Windows.Data.DataSourceProvider>，則<xref:System.Windows.Data.ObjectDataProvider>會使用<xref:System.Windows.Data.DataSourceProvider.Data%2A>有效指派的來源提供者<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>。  
  
 如果<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>使用時，<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>並<xref:System.Windows.Data.DataSourceProvider.Data%2A>將不會更新直到<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>呼叫。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">同時指派了 <see cref="T:System.Windows.Data.ObjectDataProvider" /> 和 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 給 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />，但只允許一個。</exception>
      </Docs>
    </Member>
    <Member MemberName="ObjectType">
      <MemberSignature Language="C#" Value="public Type ObjectType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ObjectType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.ObjectDataProvider.ObjectType" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ObjectType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectType : Type with get, set" Usage="System.Windows.Data.ObjectDataProvider.ObjectType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要建立執行個體之物件的類型。</summary>
        <value>如果 <see cref="T:System.Windows.Data.ObjectDataProvider" /> 並未初始化，或是明確設定為 null，這個屬性就是 <see langword="null" />。 如果指派了 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />，<see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 就會傳回物件的型別，而如果物件是 null 就會傳回 null。 預設值是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Data.DataSourceProvider.DeferRefresh%2A>使用時，<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>並<xref:System.Windows.Data.DataSourceProvider.Data%2A>不會更新直到<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>呼叫。  
  
<a name="xamlAttributeUsage_ObjectType"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<object ObjectType="myDataType"/>  
```  
  
<a name="xamlValues_ObjectType"></a>   
## <a name="xaml-values"></a>XAML 值  
 *myDataType*  
 要建立的執行個體的資料類型。 使用[X:type 標記延伸](~/docs/framework/xaml-services/x-type-markup-extension.md)設定類型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">同時指派了 <see cref="T:System.Windows.Data.ObjectDataProvider" /> 和 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 給 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />，但只允許一個。</exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeConstructorParameters">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeConstructorParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeConstructorParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeConstructorParameters () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeConstructorParameters();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeConstructorParameters : unit -&gt; bool" Usage="objectDataProvider.ShouldSerializeConstructorParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否應該保存 <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters" /> 屬性。</summary>
        <returns>如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這`ShouldSerialize`提供方法，因為<xref:System.Windows.Data.ObjectDataProvider.ConstructorParameters%2A>屬性並沒有簡單的預設值。 這個方法會指出屬性是否已變更其預設值。 您通常叫用這個方法如果您正在開發的設計工具<xref:System.Windows.Data.ObjectDataProvider>或是開發您自己的控制項併入<xref:System.Windows.Data.ObjectDataProvider>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeMethodParameters">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeMethodParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeMethodParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeMethodParameters () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeMethodParameters();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeMethodParameters : unit -&gt; bool" Usage="objectDataProvider.ShouldSerializeMethodParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否應該保存 <see cref="P:System.Windows.Data.ObjectDataProvider.MethodParameters" /> 屬性。</summary>
        <returns>如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這`ShouldSerialize`提供方法，因為<xref:System.Windows.Data.ObjectDataProvider.MethodParameters%2A>屬性並沒有簡單的預設值。 這個方法會指出屬性是否已變更其預設值。 您通常叫用這個方法如果您正在開發的設計工具<xref:System.Windows.Data.ObjectDataProvider>或是開發您自己的控制項併入<xref:System.Windows.Data.ObjectDataProvider>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeObjectInstance">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeObjectInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeObjectInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeObjectInstance () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeObjectInstance();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeObjectInstance : unit -&gt; bool" Usage="objectDataProvider.ShouldSerializeObjectInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否應該保存 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" /> 屬性。</summary>
        <returns>如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這`ShouldSerialize`提供方法，因為<xref:System.Windows.Data.ObjectDataProvider.ObjectInstance%2A>屬性並沒有簡單的預設值。 這個方法會指出屬性是否已變更其預設值。 您通常叫用這個方法如果您正在開發的設計工具<xref:System.Windows.Data.ObjectDataProvider>或是開發您自己的控制項併入<xref:System.Windows.Data.ObjectDataProvider>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeObjectType">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeObjectType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeObjectType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeObjectType () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeObjectType();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeObjectType : unit -&gt; bool" Usage="objectDataProvider.ShouldSerializeObjectType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否應該保存 <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" /> 屬性。</summary>
        <returns>如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這`ShouldSerialize`提供方法，因為<xref:System.Windows.Data.ObjectDataProvider.ObjectType%2A>屬性並沒有簡單的預設值。 這個方法會指出屬性是否已變更其預設值。 您通常叫用這個方法如果您正在開發的設計工具<xref:System.Windows.Data.ObjectDataProvider>或是開發您自己的控制項併入<xref:System.Windows.Data.ObjectDataProvider>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>