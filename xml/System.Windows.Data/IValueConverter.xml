<Type Name="IValueConverter" FullName="System.Windows.Data.IValueConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b8c6cb41e50e3c60f13fdc97930862b45ee2d24b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37521895" /></Metadata><TypeSignature Language="C#" Value="public interface IValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.IValueConverter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IValueConverter" />
  <TypeSignature Language="F#" Value="type IValueConverter = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>提供方法，將自訂邏輯套用至繫結。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您想要繫結相關聯的值轉換器，建立類別可實作<xref:System.Windows.Data.IValueConverter>介面，然後再實作<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法。 轉換器可以將資料從一種類型變更為另一個、 轉譯資料是根據文化特性資訊，或修改展示檔的其他層面。 例如一些典型的轉換子案例的詳細資訊，請參閱 「 資料轉換 」 中[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。  
  
 值轉換器會區分文化特性。 同時<xref:System.Windows.Data.IValueConverter.Convert%2A>並<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法有`culture`參數，表示文化特性資訊。 如果不會影響轉換的文化特性資訊，然後您就可以忽略該參數在您的自訂轉換子。  
  
 <xref:System.Windows.Data.IValueConverter.Convert%2A>並<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法也有參數，稱為`parameter`，讓您可以使用這個轉換子的相同執行個體使用不同的參數。 比方說，您可以撰寫格式化的轉換子，會產生不同格式的資料是根據您所使用的輸入參數。 您可以使用<xref:System.Windows.Data.Binding.ConverterParameter%2A>的<xref:System.Windows.Data.Binding>類別，以做為引數方式傳遞參數<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.IMultiValueConverter" />
    <altmember cref="T:System.Windows.Data.ValueConversionAttribute" />
  </Docs>
  <Members>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Convert(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iValueConverter.Convert (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">由繫結來源所產生的值。</param>
        <param name="targetType">繫結目標屬性的型別。</param>
        <param name="parameter">要使用的轉換子參數。</param>
        <param name="culture">要在轉換子中使用的文化特性。</param>
        <summary>轉換值。</summary>
        <returns>轉換過的值。 如果方法傳回 <see langword="null" />，就會使用有效的 null 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 它會傳播到繫結目標繫結來源的值時，資料繫結引擎會呼叫這個方法。  
  
 資料繫結引擎不會攔截由使用者提供的轉換器會擲回的例外狀況。 所擲回任何例外狀況<xref:System.Windows.Data.IValueConverter.Convert%2A>方法所擲回任何未攔截到例外狀況，<xref:System.Windows.Data.IValueConverter.Convert%2A>方法呼叫會被視為執行階段錯誤。 處理預期的問題，藉由傳回<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>。  
  
 傳回值<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>表示轉換子產生任何值，而且繫結使用<xref:System.Windows.Data.BindingBase.FallbackValue%2A>若有的話的預設值改為或。  
  
 傳回值<xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType>指出，繫結不會傳送值或使用<xref:System.Windows.Data.BindingBase.FallbackValue%2A>或預設值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertBack(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertBack(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iValueConverter.ConvertBack (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">由繫結目標所產生的值。</param>
        <param name="targetType">要轉換的目標類型。</param>
        <param name="parameter">要使用的轉換子參數。</param>
        <param name="culture">要在轉換子中使用的文化特性。</param>
        <summary>轉換值。</summary>
        <returns>轉換過的值。 如果方法傳回 <see langword="null" />，就會使用有效的 null 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 它會傳播到繫結來源繫結目標的值時，資料繫結引擎會呼叫這個方法。  
  
 此方法的實作必須是反向<xref:System.Windows.Data.IValueConverter.Convert%2A>方法。  
  
 資料繫結引擎不會攔截由使用者提供的轉換器會擲回的例外狀況。 所擲回任何例外狀況<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法所擲回任何未攔截到例外狀況，<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法呼叫會被視為執行階段錯誤。 藉由傳回處理預期的問題<xref:System.Windows.DependencyProperty>。<xref:System.Windows.DependencyProperty.UnsetValue>。  
  
 傳回值<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>表示轉換子產生任何值，而且繫結使用<xref:System.Windows.Data.BindingBase.FallbackValue%2A>若有的話的預設值改為或。  
  
 傳回值<xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType>指出，繫結不會傳送值或使用<xref:System.Windows.Data.BindingBase.FallbackValue%2A>或預設值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>