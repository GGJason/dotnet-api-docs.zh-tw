<Type Name="IValueConverter" FullName="System.Windows.Data.IValueConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2520b2433930c48092fc5ece0acbccc8427e953a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.IValueConverter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IValueConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="14db0-101">提供方法，將自訂邏輯套用至繫結。</span>
      <span class="sxs-lookup">
        <span data-stu-id="14db0-101">Provides a way to apply custom logic to a binding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14db0-102">如果您想要與繫結產生關聯的值轉換器，建立一個類別，實作<xref:System.Windows.Data.IValueConverter>介面，然後實作<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="14db0-102">If you want to associate a value converter with a binding, create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and then implement the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="14db0-103">轉換器可以從一種類型變更資料、 轉譯資料根據文化特性資訊，或修改展示檔的其他層面。</span><span class="sxs-lookup"><span data-stu-id="14db0-103">Converters can change data from one type to another, translate data based on cultural information, or modify other aspects of the presentation.</span></span> <span data-ttu-id="14db0-104">一些典型的轉換器案例的範例，請參閱 「 資料轉換 」，在[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="14db0-104">For examples of some typical converter scenarios, see "Data Conversion" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="14db0-105">值轉換器會感知文化特性。</span><span class="sxs-lookup"><span data-stu-id="14db0-105">Value converters are culture-aware.</span></span> <span data-ttu-id="14db0-106">同時<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法有`culture`參數，指出文化特性資訊。</span><span class="sxs-lookup"><span data-stu-id="14db0-106">Both the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods have a `culture` parameter that indicates the cultural information.</span></span> <span data-ttu-id="14db0-107">如果轉換的文化特性資訊無關，您可以在您自訂轉換子中忽略該參數。</span><span class="sxs-lookup"><span data-stu-id="14db0-107">If cultural information is irrelevant to the conversion, then you can ignore that parameter in your custom converter.</span></span>  
  
 <span data-ttu-id="14db0-108"><xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法也會有參數，呼叫`parameter`，讓您可以使用不同的參數使用相同的執行個體的轉換器。</span><span class="sxs-lookup"><span data-stu-id="14db0-108">The <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods also have a parameter called `parameter` so that you can use the same instance of the converter with different parameters.</span></span> <span data-ttu-id="14db0-109">例如，您可以撰寫會產生不同格式的資料是根據您使用的輸入參數的格式轉換子。</span><span class="sxs-lookup"><span data-stu-id="14db0-109">For example, you can write a formatting converter that produces different formats of data based on the input parameter that you use.</span></span> <span data-ttu-id="14db0-110">您可以使用<xref:System.Windows.Data.Binding.ConverterParameter%2A>的<xref:System.Windows.Data.Binding>類別傳遞參數做為引數至<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="14db0-110">You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> of the <xref:System.Windows.Data.Binding> class to pass a parameter as an argument into the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.IMultiValueConverter" />
    <altmember cref="T:System.Windows.Data.ValueConversionAttribute" />
  </Docs>
  <Members>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Convert(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="14db0-111">由繫結來源所產生的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14db0-111">The value produced by the binding source.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="14db0-112">繫結目標屬性的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14db0-112">The type of the binding target property.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="14db0-113">要使用的轉換子參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14db0-113">The converter parameter to use.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="14db0-114">要在轉換子中使用的文化特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14db0-114">The culture to use in the converter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14db0-115">轉換值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14db0-115">Converts a value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14db0-116">轉換過的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14db0-116">A converted value.</span>
          </span>
          <span data-ttu-id="14db0-117">如果方法傳回 <see langword="null" />，就會使用有效的 null 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14db0-117">If the method returns <see langword="null" />, the valid null value is used.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14db0-118">資料繫結引擎在傳播到繫結目標的繫結來源的值時呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="14db0-118">The data binding engine calls this method when it propagates a value from the binding source to the binding target.</span></span>  
  
 <span data-ttu-id="14db0-119">資料繫結引擎不會攔截例外狀況擲回由使用者提供的轉換器。</span><span class="sxs-lookup"><span data-stu-id="14db0-119">The data binding engine does not catch exceptions that are thrown by a user-supplied converter.</span></span> <span data-ttu-id="14db0-120">就會擲回任何例外狀況<xref:System.Windows.Data.IValueConverter.Convert%2A>方法所擲回任何無法攔截例外狀況，<xref:System.Windows.Data.IValueConverter.Convert%2A>方法呼叫，會被視為執行階段錯誤。</span><span class="sxs-lookup"><span data-stu-id="14db0-120">Any exception that is thrown by the <xref:System.Windows.Data.IValueConverter.Convert%2A> method, or any uncaught exceptions that are thrown by methods that the <xref:System.Windows.Data.IValueConverter.Convert%2A> method calls, are treated as run-time errors.</span></span> <span data-ttu-id="14db0-121">處理預期的問題，藉由傳回<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="14db0-121">Handle anticipated problems by returning <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="14db0-122">傳回值為<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>表示轉換器會產生任何值，並繫結使用<xref:System.Windows.Data.BindingBase.FallbackValue%2A>，如果有的話的預設值改為或。</span><span class="sxs-lookup"><span data-stu-id="14db0-122">A return value of <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> indicates that the converter produced no value and that the binding uses the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if available, or the default value instead.</span></span>  
  
 <span data-ttu-id="14db0-123">傳回值為<xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType>表示繫結不會不傳送值或使用<xref:System.Windows.Data.BindingBase.FallbackValue%2A>或預設值。</span><span class="sxs-lookup"><span data-stu-id="14db0-123">A return value of <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> indicates that the binding does not transfer the value or use the <xref:System.Windows.Data.BindingBase.FallbackValue%2A> or default value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertBack(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertBack(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="14db0-124">由繫結目標所產生的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14db0-124">The value that is produced by the binding target.</span>
          </span>
        </param>
        <param name="targetType">
          <span data-ttu-id="14db0-125">要轉換的目標類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14db0-125">The type to convert to.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="14db0-126">要使用的轉換子參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14db0-126">The converter parameter to use.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="14db0-127">要在轉換子中使用的文化特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14db0-127">The culture to use in the converter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="14db0-128">轉換值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14db0-128">Converts a value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="14db0-129">轉換過的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14db0-129">A converted value.</span>
          </span>
          <span data-ttu-id="14db0-130">如果方法傳回 <see langword="null" />，就會使用有效的 null 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="14db0-130">If the method returns <see langword="null" />, the valid null value is used.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14db0-131">資料繫結引擎在傳播到繫結來源對繫結目標的值時呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="14db0-131">The data binding engine calls this method when it propagates a value from the binding target to the binding source.</span></span>  
  
 <span data-ttu-id="14db0-132">這個方法的實作必須是函數的反函數<xref:System.Windows.Data.IValueConverter.Convert%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="14db0-132">The implementation of this method must be the inverse of the <xref:System.Windows.Data.IValueConverter.Convert%2A> method.</span></span>  
  
 <span data-ttu-id="14db0-133">資料繫結引擎不會攔截例外狀況擲回由使用者提供的轉換器。</span><span class="sxs-lookup"><span data-stu-id="14db0-133">The data binding engine does not catch exceptions that are thrown by a user-supplied converter.</span></span> <span data-ttu-id="14db0-134">就會擲回任何例外狀況<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法所擲回任何無法攔截例外狀況，<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>方法呼叫，會被視為執行階段錯誤。</span><span class="sxs-lookup"><span data-stu-id="14db0-134">Any exception that is thrown by the <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> method, or any uncaught exceptions that are thrown by methods that the <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> method calls, are treated as run-time errors.</span></span> <span data-ttu-id="14db0-135">處理預期的問題，藉由傳回<xref:System.Windows.DependencyProperty>。<xref:System.Windows.DependencyProperty.UnsetValue>。</span><span class="sxs-lookup"><span data-stu-id="14db0-135">Handle anticipated problems by returning <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>.</span></span>  
  
 <span data-ttu-id="14db0-136">傳回值為<xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>表示轉換器會產生任何值，並繫結使用<xref:System.Windows.Data.BindingBase.FallbackValue%2A>，如果有的話的預設值改為或。</span><span class="sxs-lookup"><span data-stu-id="14db0-136">A return value of <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> indicates that the converter produced no value and that the binding uses the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if available, or the default value instead.</span></span>  
  
 <span data-ttu-id="14db0-137">傳回值為<xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType>表示繫結不會不傳送值或使用<xref:System.Windows.Data.BindingBase.FallbackValue%2A>或預設值。</span><span class="sxs-lookup"><span data-stu-id="14db0-137">A return value of <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> indicates that the binding does not transfer the value or use the <xref:System.Windows.Data.BindingBase.FallbackValue%2A> or default value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>