<Type Name="BindingOperations" FullName="System.Windows.Data.BindingOperations">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b6d6ad02d9cad5d3fea47f68a5d2f16bfb2f4a51" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class BindingOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BindingOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingOperations" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingOperations abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d5516-101">提供靜態方法操作繫結，包括 <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.MultiBinding" /> 和 <see cref="T:System.Windows.Data.PriorityBinding" /> 物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5516-101">Provides static methods to manipulate bindings, including <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5516-102">這個類別會公開一組靜態方法，可做為資料繫結的協助程式作業。</span><span class="sxs-lookup"><span data-stu-id="d5516-102">This class exposes a set of static methods that serve as helper operations for data bindings.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AccessCollection">
      <MemberSignature Language="C#" Value="public static void AccessCollection (System.Collections.IEnumerable collection, Action accessMethod, bool writeAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AccessCollection(class System.Collections.IEnumerable collection, class System.Action accessMethod, bool writeAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.AccessCollection(System.Collections.IEnumerable,System.Action,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AccessCollection (collection As IEnumerable, accessMethod As Action, writeAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AccessCollection(System::Collections::IEnumerable ^ collection, Action ^ accessMethod, bool writeAccess);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
        <Parameter Name="accessMethod" Type="System.Action" />
        <Parameter Name="writeAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="d5516-103">要存取的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-103">The collection to access.</span>
          </span>
        </param>
        <param name="accessMethod">
          <span data-ttu-id="d5516-104">要對集合執行的動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-104">The action to perform on the collection.</span>
          </span>
        </param>
        <param name="writeAccess">
          <span data-ttu-id="d5516-105">如果 <c>accessMethod</c> 將會寫入至集合，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-105">
              <see langword="true" /> if <c>accessMethod</c> will write to the collection; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-106">透過應用程式在呼叫 EnableCollectionSynchronization 時指定的同步處理機制，提供對集合的存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-106">Provides access to a collection by using the synchronization mechanism that the application specified when it called EnableCollectionSynchronization.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearAllBindings">
      <MemberSignature Language="C#" Value="public static void ClearAllBindings (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearAllBindings(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearAllBindings (target As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearAllBindings(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d5516-107">要從中移除繫結的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-107">The object from which to remove bindings.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-108">移除所指定 <see cref="T:System.Windows.DependencyObject" /> 的所有繫結 (包括類型為 <see cref="T:System.Windows.Data.Binding" />、<see cref="T:System.Windows.Data.MultiBinding" /> 和 <see cref="T:System.Windows.Data.PriorityBinding" /> 的繫結)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-108">Removes all bindings, including bindings of type <see cref="T:System.Windows.Data.Binding" />, <see cref="T:System.Windows.Data.MultiBinding" />, and <see cref="T:System.Windows.Data.PriorityBinding" />, from the specified <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5516-109">如果指定的物件不是資料繫結，這個方法沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="d5516-109">If the specified object is not data-bound, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5516-110">如果 <paramref name="target" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-110">If <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClearBinding">
      <MemberSignature Language="C#" Value="public static void ClearBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearBinding (target As DependencyObject, dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d5516-111">要從中移除繫結的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-111">The object from which to remove the binding.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="d5516-112">要從中移除繫結的相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-112">The dependency property from which to remove the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-113">如果有的話，請從屬性移除繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-113">Removes the binding from a property if there is one.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5516-114">如果指定的屬性是資料繫結與<xref:System.Windows.Data.Binding>， <xref:System.Windows.Data.PriorityBinding>，或<xref:System.Windows.Data.MultiBinding>，這個方法會移除對應的繫結運算式和還原之前的任何區域值的屬性值已設定透過繫結。</span><span class="sxs-lookup"><span data-stu-id="d5516-114">If the given property is data-bound with a <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, or <xref:System.Windows.Data.MultiBinding>, this method removes the corresponding binding expression and restores the value of the property to what it was before any local value was set through the binding.</span></span>  
  
 <span data-ttu-id="d5516-115">如果指定的屬性不是資料繫結，這個方法沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="d5516-115">If the given property is not data-bound, this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5516-116">
            <paramref name="target" /> 和 <paramref name="dp" /> 參數不可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-116">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CollectionRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionRegisteringEventArgs&gt; CollectionRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionRegistering As EventHandler(Of CollectionRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionRegisteringEventArgs ^&gt; ^ CollectionRegistering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5516-117">當資料繫結系統注意到集合時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-117">Occurs when the data-binding system notices a collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionViewRegistering">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.CollectionViewRegisteringEventArgs&gt; CollectionViewRegistering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.BindingOperations.CollectionViewRegistering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Event CollectionViewRegistering As EventHandler(Of CollectionViewRegisteringEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Windows::Data::CollectionViewRegisteringEventArgs ^&gt; ^ CollectionViewRegistering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.CollectionViewRegisteringEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5516-118">當資料繫結系統注意到集合檢視時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-118">Occurs when the data-binding system notices a collection view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void DisableCollectionSynchronization (System.Collections.IEnumerable collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableCollectionSynchronization(class System.Collections.IEnumerable collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.DisableCollectionSynchronization(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableCollectionSynchronization (collection As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DisableCollectionSynchronization(System::Collections::IEnumerable ^ collection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="d5516-119">要移除其同步存取的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-119">The collection to remove synchronized access from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-120">移除為指定集合註冊的同步處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-120">Remove the synchronization registered for the specified collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisconnectedSource">
      <MemberSignature Language="C#" Value="public static object DisconnectedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property object DisconnectedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingOperations.DisconnectedSource" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DisconnectedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Object ^ DisconnectedSource { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5516-121">取得物件，從視覺化樹狀結構中移除項目容器時，它會取代 <see cref="P:System.Windows.FrameworkElement.DataContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-121">Gets an object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5516-122">在項目容器從視覺化樹狀結構中移除時取代 <see cref="P:System.Windows.FrameworkElement.DataContext" /> 的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-122">An object that replaces the <see cref="P:System.Windows.FrameworkElement.DataContext" /> when an item container is removed from the visual tree.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5516-123">使用這個屬性，如果您需要處理<xref:System.Windows.FrameworkElement.DataContext%2A>的項目容器。</span><span class="sxs-lookup"><span data-stu-id="d5516-123">Use this property if you need to deal with the <xref:System.Windows.FrameworkElement.DataContext%2A> of an item container.</span></span>  <span data-ttu-id="d5516-124">項目容器是顯示的項目中的 UI 項目<xref:System.Windows.Controls.ItemsControl>。</span><span class="sxs-lookup"><span data-stu-id="d5516-124">An item container is the UI element that displays an item in an <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="d5516-125">當<xref:System.Windows.Controls.ItemsControl>是資料繫結至集合，項目容器會產生每個項目。</span><span class="sxs-lookup"><span data-stu-id="d5516-125">When an <xref:System.Windows.Controls.ItemsControl> is data bound to a collection, an item container is generated for each item.</span></span>  <span data-ttu-id="d5516-126">在某些情況下，項目容器會從視覺化樹狀結構移除。</span><span class="sxs-lookup"><span data-stu-id="d5516-126">In some cases, item containers are removed from the visual tree.</span></span>  <span data-ttu-id="d5516-127">移除項目容器的所在的兩種一般情況下會從基礎集合中移除項目時，當已啟用虛擬化<xref:System.Windows.Controls.ItemsControl>。</span><span class="sxs-lookup"><span data-stu-id="d5516-127">Two typical cases where an item container is removed are when an item is removed from the underlying collection and when virtualization is enabled on the <xref:System.Windows.Controls.ItemsControl>.</span></span>  <span data-ttu-id="d5516-128">在這些情況下，<xref:System.Windows.FrameworkElement.DataContext%2A>的項目容器的屬性會設定為<xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A>屬性應該檢查是否<xref:System.Windows.FrameworkElement.DataContext%2A>等於<xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A>存取之前<xref:System.Windows.FrameworkElement.DataContext%2A>中<xref:System.Windows.FrameworkElement.DataContextChanged>事件項目容器。</span><span class="sxs-lookup"><span data-stu-id="d5516-128">In these cases, the <xref:System.Windows.FrameworkElement.DataContext%2A> property of the item container will be set to the <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> property  You should check whether the <xref:System.Windows.FrameworkElement.DataContext%2A> is equal to the <xref:System.Windows.Data.BindingOperations.DisconnectedSource%2A> before accessing the <xref:System.Windows.FrameworkElement.DataContext%2A> in the <xref:System.Windows.FrameworkElement.DataContextChanged> event for item containers.</span></span> <span data-ttu-id="d5516-129">如需項目容器和虛擬化的詳細資訊，請參閱在 < 備註 ><xref:System.Windows.Controls.VirtualizingStackPanel>類別。</span><span class="sxs-lookup"><span data-stu-id="d5516-129">For more information about item containers and virtualization, see the remarks in the <xref:System.Windows.Controls.VirtualizingStackPanel> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnableCollectionSynchronization">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d5516-130">讓 <see cref="T:System.Windows.Data.CollectionView" /> 物件能夠參與同步存取多個執行緒上所使用的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-130">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection that is used on multiple threads.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="d5516-131">WPF 應用程式可以顯示的資料使用集合<xref:System.Windows.Controls.ItemsControl>或其中一個子類別 (<xref:System.Windows.Controls.ListBox>， <xref:System.Windows.Controls.DataGrid>， <xref:System.Windows.Controls.TreeView>，<xref:System.Windows.Controls.ListView>等。)。</span><span class="sxs-lookup"><span data-stu-id="d5516-131">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span> <span data-ttu-id="d5516-132">WPF 通道透過的子集合的所有存取<xref:System.Windows.Data.CollectionView>。</span><span class="sxs-lookup"><span data-stu-id="d5516-132">WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="d5516-133">同時<xref:System.Windows.Controls.ItemsControl>和<xref:System.Windows.Data.CollectionView>所在具有執行緒相似性<xref:System.Windows.Controls.ItemsControl>已建立，即禁止並擲回例外狀況的不同的執行緒上使用它們。</span><span class="sxs-lookup"><span data-stu-id="d5516-133">Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span> <span data-ttu-id="d5516-134">作用中，集合也適用於這項限制。</span><span class="sxs-lookup"><span data-stu-id="d5516-134">In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="d5516-135">若要使用多個執行緒上的集合。</span><span class="sxs-lookup"><span data-stu-id="d5516-135">You may want to use the collection on multiple threads.</span></span>   <span data-ttu-id="d5516-136">例如，在您想要更新集合 （新增或移除項目） 上的 「 資料收集 」 執行緒，同時將結果顯示於 「 使用者介面 」 執行緒，讓 UI 保持回應時資料收集的情況。</span><span class="sxs-lookup"><span data-stu-id="d5516-136">For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span> <span data-ttu-id="d5516-137">在這種情況下，您必須負責確保對集合的同步處理 （「 安全執行緒 」） 存取項目。</span><span class="sxs-lookup"><span data-stu-id="d5516-137">In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection.</span></span>   <span data-ttu-id="d5516-138">通常這是使用簡單的鎖定機制或複雜的同步處理機制例如號誌，重設事件，等等。</span><span class="sxs-lookup"><span data-stu-id="d5516-138">This is typically done using either a simple lock mechanism or a more elaborate synchronization mechanism such as semaphores, reset events, etc.</span></span> 
 
<span data-ttu-id="d5516-139">雖然您必須同步處理對集合的應用程式的存取，也必須從 WPF 保證該存取權 (特別是從<xref:System.Windows.Data.CollectionView>) 參與相同的同步處理機制。</span><span class="sxs-lookup"><span data-stu-id="d5516-139">While you must synchronize your application's access to the collection, you must also guarantee that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span>  <span data-ttu-id="d5516-140">您可以藉由呼叫 <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> 方法執行這項作業。</span><span class="sxs-lookup"><span data-stu-id="d5516-140">You do this by calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> method.</span></span>
 
<span data-ttu-id="d5516-141">若要使用多個執行緒的集合，其中是 UI 執行緒擁有<xref:System.Windows.Controls.ItemsControl>，應用程式具有下列責任：</span><span class="sxs-lookup"><span data-stu-id="d5516-141">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, an application has the following responsibilities:</span></span>

1. <span data-ttu-id="d5516-142">選擇同步處理機制。</span><span class="sxs-lookup"><span data-stu-id="d5516-142">Choose a synchronization mechanism.</span></span>

1. <span data-ttu-id="d5516-143">同步處理應用程式以使用該機制在集合中的所有存取。</span><span class="sxs-lookup"><span data-stu-id="d5516-143">Synchronize all access from the application to the collection using that mechanism.</span></span>

1. <span data-ttu-id="d5516-144">呼叫<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>通知 WPF 的機制。</span><span class="sxs-lookup"><span data-stu-id="d5516-144">Call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> to inform WPF of the mechanism.</span></span>

   - <span data-ttu-id="d5516-145">呼叫必須發生在 UI 執行緒上。</span><span class="sxs-lookup"><span data-stu-id="d5516-145">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="d5516-146">之前使用不同的執行緒上的集合，或附加至集合之前，必須發生呼叫<xref:System.Windows.Controls.ItemsControl>，兩者取其較更新版本。</span><span class="sxs-lookup"><span data-stu-id="d5516-146">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

   - <span data-ttu-id="d5516-147">呼叫<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)>多載，如果使用簡單的鎖定機制; 呼叫<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)>多載，如果使用更複雜的機制。</span><span class="sxs-lookup"><span data-stu-id="d5516-147">Call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> overload if using a simple lock mechanism; call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> overload if using a more elaborate mechanism.</span></span>

1. <span data-ttu-id="d5516-148">請確認集合，該變更通知的變更 (透過<xref:System.Collections.Specialized.INotifyCollectionChanged>) 都是不可部分完成; 無法存取來自其他執行緒能介入了解。</span><span class="sxs-lookup"><span data-stu-id="d5516-148">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span>  <span data-ttu-id="d5516-149">（這是通常可用的。</span><span class="sxs-lookup"><span data-stu-id="d5516-149">(This is usually free.</span></span> <span data-ttu-id="d5516-150">For instance，<xref:System.Collections.ObjectModel.ObservableCollection%601>可保證，前提是所有的變更會受到同步處理。)</span><span class="sxs-lookup"><span data-stu-id="d5516-150">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="d5516-151">如果您呼叫<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>，呼叫必須也發生在 UI 執行緒上。</span><span class="sxs-lookup"><span data-stu-id="d5516-151">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="d5516-152">如果您想要在多個 UI 執行緒上使用相同的集合，您必須呼叫<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>(和<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>有需要) 分別在每個 UI 執行緒上。</span><span class="sxs-lookup"><span data-stu-id="d5516-152">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="d5516-153">避免發生死結。</span><span class="sxs-lookup"><span data-stu-id="d5516-153">Avoid deadlock.</span></span>  <span data-ttu-id="d5516-154">這是已經應用程式的責任選擇要使用同步處理，但是它還必須考慮到帳戶 WPF 參與同步處理，如下列段落所述。</span><span class="sxs-lookup"><span data-stu-id="d5516-154">This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization, as discussed in the following paragraph.</span></span>

<span data-ttu-id="d5516-155">傳回，WPF 提供下列行為：</span><span class="sxs-lookup"><span data-stu-id="d5516-155">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="d5516-156"><xref:System.Windows.Data.CollectionView>存取集合中指定的同步處理機制。</span><span class="sxs-lookup"><span data-stu-id="d5516-156">The <xref:System.Windows.Data.CollectionView> accesses the collection using the given synchronization mechanism.</span></span>

- <span data-ttu-id="d5516-157"><xref:System.Windows.Data.CollectionView>維護的 「 陰影複製 」 使用的集合在 UI 執行緒上。</span><span class="sxs-lookup"><span data-stu-id="d5516-157">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="d5516-158"><xref:System.Windows.Data.CollectionView.CollectionChanged> 事件的佇列到達時 （在任何執行緒）。</span><span class="sxs-lookup"><span data-stu-id="d5516-158"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="d5516-159">暫止的事件會套用至 UI 執行緒上以非同步方式將陰影複製時若要這樣做的機會。</span><span class="sxs-lookup"><span data-stu-id="d5516-159">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="d5516-160"><xref:System.Windows.Data.CollectionView>不會直接使用應用程式可以看到任何其他同步處理機制。</span><span class="sxs-lookup"><span data-stu-id="d5516-160">The <xref:System.Windows.Data.CollectionView> won't directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="d5516-161">這是 WPF 的方式協助避免發生死結 （請參閱上一個項目 7）。</span><span class="sxs-lookup"><span data-stu-id="d5516-161">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="d5516-162">結果是，您可以變更任何執行緒上的集合，這些變更最後會出現在<xref:System.Windows.Controls.ItemsControl>UI 執行緒時有 「 趕上 」 的時間。</span><span class="sxs-lookup"><span data-stu-id="d5516-162">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span>  <span data-ttu-id="d5516-163">已調整的實作，從飽和 UI 執行緒，並佔用一般使用者輸入的回應執行緒的變更會流至 UI 執行緒，保持背景的速率的節流。</span><span class="sxs-lookup"><span data-stu-id="d5516-163">The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object lockObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object lockObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, lockObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ lockObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
        <Parameter Name="lockObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="d5516-164">需要同步存取的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-164">The collection that needs synchronized access.</span>
          </span>
        </param>
        <param name="lockObject">
          <span data-ttu-id="d5516-165">存取集合時要鎖定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-165">The object to lock when accessing the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-166">使用簡單的鎖定機制，讓 <see cref="T:System.Windows.Data.CollectionView" /> 物件能夠參與同步存取多個執行緒上所使用的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-166">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a simple locking mechanism.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="d5516-167">WPF 應用程式可以顯示的資料使用集合<xref:System.Windows.Controls.ItemsControl>或其中一個子類別 (<xref:System.Windows.Controls.ListBox>， <xref:System.Windows.Controls.DataGrid>， <xref:System.Windows.Controls.TreeView>，<xref:System.Windows.Controls.ListView>等。)。</span><span class="sxs-lookup"><span data-stu-id="d5516-167">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span> <span data-ttu-id="d5516-168">WPF 通道透過的子集合的所有存取<xref:System.Windows.Data.CollectionView>。</span><span class="sxs-lookup"><span data-stu-id="d5516-168">WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="d5516-169">同時<xref:System.Windows.Controls.ItemsControl>和<xref:System.Windows.Data.CollectionView>所在具有執行緒相似性<xref:System.Windows.Controls.ItemsControl>已建立，即禁止並擲回例外狀況的不同的執行緒上使用它們。</span><span class="sxs-lookup"><span data-stu-id="d5516-169">Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span> <span data-ttu-id="d5516-170">作用中，集合也適用於這項限制。</span><span class="sxs-lookup"><span data-stu-id="d5516-170">In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="d5516-171">若要使用多個執行緒上的集合。</span><span class="sxs-lookup"><span data-stu-id="d5516-171">You may want to use the collection on multiple threads.</span></span>   <span data-ttu-id="d5516-172">例如，在您想要更新集合 （新增或移除項目） 上的 「 資料收集 」 執行緒，同時將結果顯示於 「 使用者介面 」 執行緒，讓 UI 保持回應時資料收集的情況。</span><span class="sxs-lookup"><span data-stu-id="d5516-172">For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span> <span data-ttu-id="d5516-173">在這種情況下，您有責任確保同步處理 （「 安全執行緒 」） 存取集合，並從 WPF 保證該存取權 (特別是從<xref:System.Windows.Data.CollectionView>) 參與相同的同步處理機制。</span><span class="sxs-lookup"><span data-stu-id="d5516-173">In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span> <span data-ttu-id="d5516-174">藉由呼叫<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)>方法，您可以使用簡單的鎖定機制。</span><span class="sxs-lookup"><span data-stu-id="d5516-174">By calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> method, you can do this by using a simple lock mechanism.</span></span> 
 
<span data-ttu-id="d5516-175">若要使用多個執行緒的集合，其中是 UI 執行緒擁有<xref:System.Windows.Controls.ItemsControl>，您必須執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="d5516-175">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, you must do the following:</span></span>

1. <span data-ttu-id="d5516-176">具現化物件來存取集合時，鎖定。</span><span class="sxs-lookup"><span data-stu-id="d5516-176">Instantiate an object to lock when accessing the collection.</span></span>

1. <span data-ttu-id="d5516-177">同步處理對集合的應用程式的所有存取鎖定該物件。</span><span class="sxs-lookup"><span data-stu-id="d5516-177">Synchronize all access from the application to the collection by locking that object.</span></span>

1. <span data-ttu-id="d5516-178">呼叫<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)>通知 WPF 使用簡單的鎖定機制。</span><span class="sxs-lookup"><span data-stu-id="d5516-178">Call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object)> to inform WPF that you are using a simple lock mechanism.</span></span>

   - <span data-ttu-id="d5516-179">呼叫必須發生在 UI 執行緒上。</span><span class="sxs-lookup"><span data-stu-id="d5516-179">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="d5516-180">之前使用不同的執行緒上的集合，或附加至集合之前，必須發生呼叫<xref:System.Windows.Controls.ItemsControl>，兩者取其較更新版本。</span><span class="sxs-lookup"><span data-stu-id="d5516-180">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

1. <span data-ttu-id="d5516-181">請確認集合，該變更通知的變更 (透過<xref:System.Collections.Specialized.INotifyCollectionChanged>) 都是不可部分完成; 無法存取來自其他執行緒能介入了解。</span><span class="sxs-lookup"><span data-stu-id="d5516-181">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span>  <span data-ttu-id="d5516-182">（這是通常可用的。</span><span class="sxs-lookup"><span data-stu-id="d5516-182">(This is usually free.</span></span> <span data-ttu-id="d5516-183">For instance，<xref:System.Collections.ObjectModel.ObservableCollection%601>可保證，前提是所有的變更會受到同步處理。)</span><span class="sxs-lookup"><span data-stu-id="d5516-183">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="d5516-184">如果您呼叫<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>，呼叫必須也發生在 UI 執行緒上。</span><span class="sxs-lookup"><span data-stu-id="d5516-184">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="d5516-185">如果您想要在多個 UI 執行緒上使用相同的集合，您必須呼叫<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>(和<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>有需要) 分別在每個 UI 執行緒上。</span><span class="sxs-lookup"><span data-stu-id="d5516-185">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="d5516-186">避免發生死結。</span><span class="sxs-lookup"><span data-stu-id="d5516-186">Avoid deadlock.</span></span>  <span data-ttu-id="d5516-187">選擇要使用同步處理，但是它還必須考慮到帳戶 WPF 的參與同步處理，這是已經應用程式的責任。</span><span class="sxs-lookup"><span data-stu-id="d5516-187">This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</span></span> <span data-ttu-id="d5516-188">（請參閱的詳細資訊，下方）。</span><span class="sxs-lookup"><span data-stu-id="d5516-188">(See more, below.)</span></span>

<span data-ttu-id="d5516-189">傳回，WPF 提供下列行為：</span><span class="sxs-lookup"><span data-stu-id="d5516-189">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="d5516-190"><xref:System.Windows.Data.CollectionView>存取集合中的鎖定機制。</span><span class="sxs-lookup"><span data-stu-id="d5516-190">The <xref:System.Windows.Data.CollectionView> accesses the collection using the locking mechanism.</span></span>

- <span data-ttu-id="d5516-191"><xref:System.Windows.Data.CollectionView>維護的 「 陰影複製 」 使用的集合在 UI 執行緒上。</span><span class="sxs-lookup"><span data-stu-id="d5516-191">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="d5516-192"><xref:System.Windows.Data.CollectionView.CollectionChanged> 事件的佇列到達時 （在任何執行緒）。</span><span class="sxs-lookup"><span data-stu-id="d5516-192"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="d5516-193">暫止的事件會套用至 UI 執行緒上以非同步方式將陰影複製時若要這樣做的機會。</span><span class="sxs-lookup"><span data-stu-id="d5516-193">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="d5516-194"><xref:System.Windows.Data.CollectionView>不是直接將使用的應用程式可以看到任何其他同步處理機制。</span><span class="sxs-lookup"><span data-stu-id="d5516-194">The <xref:System.Windows.Data.CollectionView> will not directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="d5516-195">這是 WPF 的方式協助避免發生死結 （請參閱上一個項目 7）。</span><span class="sxs-lookup"><span data-stu-id="d5516-195">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="d5516-196">結果是，您可以變更任何執行緒上的集合，這些變更最後會出現在<xref:System.Windows.Controls.ItemsControl>UI 執行緒時有 「 趕上 」 的時間。</span><span class="sxs-lookup"><span data-stu-id="d5516-196">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span>  <span data-ttu-id="d5516-197">已調整的實作，從飽和 UI 執行緒，並佔用一般使用者輸入的回應執行緒的變更會流至 UI 執行緒，保持背景的速率的節流。</span><span class="sxs-lookup"><span data-stu-id="d5516-197">The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCollectionSynchronization">
      <MemberSignature Language="C#" Value="public static void EnableCollectionSynchronization (System.Collections.IEnumerable collection, object context, System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableCollectionSynchronization(class System.Collections.IEnumerable collection, object context, class System.Windows.Data.CollectionSynchronizationCallback synchronizationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableCollectionSynchronization (collection As IEnumerable, context As Object, synchronizationCallback As CollectionSynchronizationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableCollectionSynchronization(System::Collections::IEnumerable ^ collection, System::Object ^ context, System::Windows::Data::CollectionSynchronizationCallback ^ synchronizationCallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.IEnumerable" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="synchronizationCallback" Type="System.Windows.Data.CollectionSynchronizationCallback" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="d5516-198">需要同步存取的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-198">The collection that needs synchronized access.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="d5516-199">傳遞至回呼的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-199">An object that is passed to the callback.</span>
          </span>
        </param>
        <param name="synchronizationCallback">
          <span data-ttu-id="d5516-200">當需要存取集合時，就會叫用回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-200">The callback that is invoked whenever access to the collection is required.</span>
          </span>
          <span data-ttu-id="d5516-201">您可以使用它來確保一次只會有一個執行緒存取集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-201">You can use it to ensure that the collection is accessed by one thread at a time.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-202">使用簡單鎖定以外的機制，讓 <see cref="T:System.Windows.Data.CollectionView" /> 物件能夠參與同步存取多個執行緒上所使用的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-202">Enables a <see cref="T:System.Windows.Data.CollectionView" /> object to participate in synchronized access to a collection used on multiple threads by using a mechanism other than a simple lock.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="d5516-203">WPF 應用程式可以顯示的資料使用集合<xref:System.Windows.Controls.ItemsControl>或其中一個子類別 (<xref:System.Windows.Controls.ListBox>， <xref:System.Windows.Controls.DataGrid>， <xref:System.Windows.Controls.TreeView>，<xref:System.Windows.Controls.ListView>等。)。</span><span class="sxs-lookup"><span data-stu-id="d5516-203">A WPF application can display a collection of data using an <xref:System.Windows.Controls.ItemsControl> or one of its subclasses (<xref:System.Windows.Controls.ListBox>, <xref:System.Windows.Controls.DataGrid>, <xref:System.Windows.Controls.TreeView>, <xref:System.Windows.Controls.ListView>, etc.).</span></span> <span data-ttu-id="d5516-204">WPF 通道透過的子集合的所有存取<xref:System.Windows.Data.CollectionView>。</span><span class="sxs-lookup"><span data-stu-id="d5516-204">WPF channels all its access to the collection through a subclass of <xref:System.Windows.Data.CollectionView>.</span></span> <span data-ttu-id="d5516-205">同時<xref:System.Windows.Controls.ItemsControl>和<xref:System.Windows.Data.CollectionView>所在具有執行緒相似性<xref:System.Windows.Controls.ItemsControl>已建立，即禁止並擲回例外狀況的不同的執行緒上使用它們。</span><span class="sxs-lookup"><span data-stu-id="d5516-205">Both the <xref:System.Windows.Controls.ItemsControl> and the <xref:System.Windows.Data.CollectionView> have affinity to the thread on which the <xref:System.Windows.Controls.ItemsControl> was created, meaning that using them on a different thread is forbidden and throws an exception.</span></span> <span data-ttu-id="d5516-206">作用中，集合也適用於這項限制。</span><span class="sxs-lookup"><span data-stu-id="d5516-206">In effect, this restriction applies to the collection as well.</span></span>
 
<span data-ttu-id="d5516-207">若要使用多個執行緒上的集合。</span><span class="sxs-lookup"><span data-stu-id="d5516-207">You may want to use the collection on multiple threads.</span></span>   <span data-ttu-id="d5516-208">例如，在您想要更新集合 （新增或移除項目） 上的 「 資料收集 」 執行緒，同時將結果顯示於 「 使用者介面 」 執行緒，讓 UI 保持回應時資料收集的情況。</span><span class="sxs-lookup"><span data-stu-id="d5516-208">For example, you want to update the collection (add or remove items) on a "data-gathering" thread, while displaying the results on a "user interface" thread, so that the UI remains responsive while data-gathering is happening.</span></span> <span data-ttu-id="d5516-209">在這種情況下，您有責任確保同步處理 （「 安全執行緒 」） 存取集合，並從 WPF 保證該存取權 (特別是從<xref:System.Windows.Data.CollectionView>) 參與相同的同步處理機制。</span><span class="sxs-lookup"><span data-stu-id="d5516-209">In such a situation, you are responsible for ensuring synchronized ("thread-safe") access to the collection and for guaranteeing that access from WPF (specifically from <xref:System.Windows.Data.CollectionView>) participates in the same synchronization mechanism.</span></span> <span data-ttu-id="d5516-210">藉由呼叫<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)>方法，您可以使用同步處理機制，例如號誌、 重設事件等等。</span><span class="sxs-lookup"><span data-stu-id="d5516-210">By calling the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> method, you can do this by using a synchronization mechanism such as a semaphores, a reset event, etc.</span></span> 
 
<span data-ttu-id="d5516-211">若要使用多個執行緒的集合，其中是 UI 執行緒擁有<xref:System.Windows.Controls.ItemsControl>，您必須執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="d5516-211">To use a collection on multiple threads, one of which is the UI thread that owns the <xref:System.Windows.Controls.ItemsControl>, you must do the following:</span></span>

1. <span data-ttu-id="d5516-212">選擇同步處理機制。</span><span class="sxs-lookup"><span data-stu-id="d5516-212">Choose a synchronization mechanism.</span></span>

1. <span data-ttu-id="d5516-213">同步處理應用程式以使用該機制在集合中的所有存取。</span><span class="sxs-lookup"><span data-stu-id="d5516-213">Synchronize all access from the application to the collection using that mechanism.</span></span>

1. <span data-ttu-id="d5516-214">呼叫<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)>多載來通知 WPF 使用以外簡單鎖定機制。</span><span class="sxs-lookup"><span data-stu-id="d5516-214">Call the <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization(System.Collections.IEnumerable,System.Object,System.Windows.Data.CollectionSynchronizationCallback)> overload to inform WPF that you are using a mechanism other than simple locking.</span></span>

   - <span data-ttu-id="d5516-215">呼叫必須發生在 UI 執行緒上。</span><span class="sxs-lookup"><span data-stu-id="d5516-215">The call must occur on the UI thread.</span></span>

   - <span data-ttu-id="d5516-216">之前使用不同的執行緒上的集合，或附加至集合之前，必須發生呼叫<xref:System.Windows.Controls.ItemsControl>，兩者取其較更新版本。</span><span class="sxs-lookup"><span data-stu-id="d5516-216">The call must occur before using the collection on a different thread or before attaching the collection to the <xref:System.Windows.Controls.ItemsControl>, whichever is later.</span></span>

1. <span data-ttu-id="d5516-217">請確認集合，該變更通知的變更 (透過<xref:System.Collections.Specialized.INotifyCollectionChanged>) 都是不可部分完成; 無法存取來自其他執行緒能介入了解。</span><span class="sxs-lookup"><span data-stu-id="d5516-217">Ensure that a change to the collection and the notification of that change (through <xref:System.Collections.Specialized.INotifyCollectionChanged>) are atomic; no access from other threads can intervene.</span></span>  <span data-ttu-id="d5516-218">（這是通常可用的。</span><span class="sxs-lookup"><span data-stu-id="d5516-218">(This is usually free.</span></span> <span data-ttu-id="d5516-219">For instance，<xref:System.Collections.ObjectModel.ObservableCollection%601>可保證，前提是所有的變更會受到同步處理。)</span><span class="sxs-lookup"><span data-stu-id="d5516-219">For instance, <xref:System.Collections.ObjectModel.ObservableCollection%601> guarantees this, provided that all changes are protected by synchronization.)</span></span>

1. <span data-ttu-id="d5516-220">如果您呼叫<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>，呼叫必須也發生在 UI 執行緒上。</span><span class="sxs-lookup"><span data-stu-id="d5516-220">If you call <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, that call must also occur on the UI thread.</span></span>

1. <span data-ttu-id="d5516-221">如果您想要在多個 UI 執行緒上使用相同的集合，您必須呼叫<xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A>(和<xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>有需要) 分別在每個 UI 執行緒上。</span><span class="sxs-lookup"><span data-stu-id="d5516-221">If you want to use the same collection on multiple UI threads, you must call <xref:System.Windows.Data.BindingOperations.EnableCollectionSynchronization%2A> (and <xref:System.Windows.Data.BindingOperations.DisableCollectionSynchronization%2A>, if needed) separately on each UI thread.</span></span>

1. <span data-ttu-id="d5516-222">避免發生死結。</span><span class="sxs-lookup"><span data-stu-id="d5516-222">Avoid deadlock.</span></span>  <span data-ttu-id="d5516-223">選擇要使用同步處理，但是它還必須考慮到帳戶 WPF 的參與同步處理，這是已經應用程式的責任。</span><span class="sxs-lookup"><span data-stu-id="d5516-223">This is already the application's responsibility once it chooses to use synchronization, but it must also take into account WPF's participation in the synchronization.</span></span> <span data-ttu-id="d5516-224">（請參閱的詳細資訊，下方）。</span><span class="sxs-lookup"><span data-stu-id="d5516-224">(See more, below.)</span></span>

<span data-ttu-id="d5516-225">傳回，WPF 提供下列行為：</span><span class="sxs-lookup"><span data-stu-id="d5516-225">In return, WPF provides the following behavior:</span></span>

- <span data-ttu-id="d5516-226"><xref:System.Windows.Data.CollectionView>存取集合，藉由呼叫已註冊<xref:System.Windows.Data.CollectionSynchronizationCallback>具有下列引數：</span><span class="sxs-lookup"><span data-stu-id="d5516-226">The <xref:System.Windows.Data.CollectionView> accesses the collection by calling the registered <xref:System.Windows.Data.CollectionSynchronizationCallback> with the following arguments:</span></span>

   - <span data-ttu-id="d5516-227">`collection`： 感興趣的集合。</span><span class="sxs-lookup"><span data-stu-id="d5516-227">`collection`: the collection of interest.</span></span>
   - <span data-ttu-id="d5516-228">`context`： 已註冊的內容物件。</span><span class="sxs-lookup"><span data-stu-id="d5516-228">`context`: the registered context object.</span></span>
   - <span data-ttu-id="d5516-229">`accessMethod`： 委派，會執行實際的存取。</span><span class="sxs-lookup"><span data-stu-id="d5516-229">`accessMethod`: a delegate that performs the actual access.</span></span>
   - <span data-ttu-id="d5516-230">`writeAccess`:`true`如果委派將會修改該集合中。`false`否則。</span><span class="sxs-lookup"><span data-stu-id="d5516-230">`writeAccess`: `true` if the delegate will modify the collection; `false` otherwise.</span></span>

   <span data-ttu-id="d5516-231">您<xref:System.Windows.Data.CollectionSynchronizationCallback>應該建立集合的同步處理 (使用`context`物件和`writeAccess`值，視需要)，呼叫`accessMethod`，然後放開同步處理。</span><span class="sxs-lookup"><span data-stu-id="d5516-231">Your <xref:System.Windows.Data.CollectionSynchronizationCallback> should establish synchronization on the collection (using the `context` object and the `writeAccess` value, as appropriate), call the `accessMethod`, then release synchronization.</span></span>

- <span data-ttu-id="d5516-232"><xref:System.Windows.Data.CollectionView>維護的 「 陰影複製 」 使用的集合在 UI 執行緒上。</span><span class="sxs-lookup"><span data-stu-id="d5516-232">The <xref:System.Windows.Data.CollectionView> maintains a "shadow copy" of the collection for use on the UI thread.</span></span>

- <span data-ttu-id="d5516-233"><xref:System.Windows.Data.CollectionView.CollectionChanged> 事件的佇列到達時 （在任何執行緒）。</span><span class="sxs-lookup"><span data-stu-id="d5516-233"><xref:System.Windows.Data.CollectionView.CollectionChanged> events are queued up as they arrive (on any thread).</span></span>

- <span data-ttu-id="d5516-234">暫止的事件會套用至 UI 執行緒上以非同步方式將陰影複製時若要這樣做的機會。</span><span class="sxs-lookup"><span data-stu-id="d5516-234">Pending events are applied to the shadow copy asynchronously on the UI thread when it has the opportunity to do so.</span></span>

- <span data-ttu-id="d5516-235"><xref:System.Windows.Data.CollectionView>不是直接將使用的應用程式可以看到任何其他同步處理機制。</span><span class="sxs-lookup"><span data-stu-id="d5516-235">The <xref:System.Windows.Data.CollectionView> will not directly use any other synchronization mechanism visible to the application.</span></span> <span data-ttu-id="d5516-236">這是 WPF 的方式協助避免發生死結 （請參閱上一個項目 7）。</span><span class="sxs-lookup"><span data-stu-id="d5516-236">This is WPF's way of helping to avoid deadlock (see the previous item 7).</span></span>   

<span data-ttu-id="d5516-237">結果是，您可以變更任何執行緒上的集合，這些變更最後會出現在<xref:System.Windows.Controls.ItemsControl>UI 執行緒時有 「 趕上 」 的時間。</span><span class="sxs-lookup"><span data-stu-id="d5516-237">The net effect is that you can change the collection on any thread, and those changes eventually appear in the <xref:System.Windows.Controls.ItemsControl> when the UI thread has time to "catch up".</span></span>  <span data-ttu-id="d5516-238">已調整的實作，從飽和 UI 執行緒，並佔用一般使用者輸入的回應執行緒的變更會流至 UI 執行緒，保持背景的速率的節流。</span><span class="sxs-lookup"><span data-stu-id="d5516-238">The implementation has been tuned to throttle the rate that changes flow into the UI thread to keep background threads from saturating the UI thread and starving the response to normal user input.</span></span>

 <span data-ttu-id="d5516-239">`context`參數是任意的物件傳遞至`callback`。</span><span class="sxs-lookup"><span data-stu-id="d5516-239">The `context` parameter is an arbitrary object that is passed to the `callback`.</span></span> <span data-ttu-id="d5516-240">您可以使用它來判斷用來控制存取的同步處理機制`collection`。</span><span class="sxs-lookup"><span data-stu-id="d5516-240">You can use it to determine the synchronization mechanism used to control access to `collection`.</span></span> <span data-ttu-id="d5516-241">`Context` 可以是`null`。</span><span class="sxs-lookup"><span data-stu-id="d5516-241">`Context` can be `null`.</span></span>  
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.Binding GetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.Binding GetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBinding (target As DependencyObject, dp As DependencyProperty) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::Binding ^ GetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d5516-242">
            <c>dp</c> 所在的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-242">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="d5516-243">要從其中擷取繫結的繫結目標屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-243">The binding target property from which to retrieve the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-244">擷取針對指定之屬性設定的 <see cref="T:System.Windows.Data.Binding" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-244">Retrieves the <see cref="T:System.Windows.Data.Binding" /> object that is set on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5516-245">針對指定之屬性設定的 <see cref="T:System.Windows.Data.Binding" /> 物件；如果未設定 <see cref="T:System.Windows.Data.Binding" /> 物件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-245">The <see cref="T:System.Windows.Data.Binding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.Binding" /> object has been set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5516-246">
            <paramref name="target" /> 和 <paramref name="dp" /> 參數都不能為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-246">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingBase GetBindingBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingBase GetBindingBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingBase (target As DependencyObject, dp As DependencyProperty) As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingBase ^ GetBindingBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d5516-247">
            <c>dp</c> 所在的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-247">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="d5516-248">要從中擷取 <see cref="T:System.Windows.Data.BindingBase" /> 物件的繫結目標屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-248">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingBase" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-249">擷取針對指定之屬性設定的 <see cref="T:System.Windows.Data.BindingBase" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-249">Retrieves the <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5516-250">針對指定之屬性設定的 <see cref="T:System.Windows.Data.BindingBase" /> 物件；如果未設定繫結物件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-250">The <see cref="T:System.Windows.Data.BindingBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5516-251"><xref:System.Windows.Data.BindingBase>類別是常見的基底類別， <xref:System.Windows.Data.Binding>， <xref:System.Windows.Data.PriorityBinding>，和<xref:System.Windows.Data.MultiBinding>類別。</span><span class="sxs-lookup"><span data-stu-id="d5516-251">The <xref:System.Windows.Data.BindingBase> class is the common base class for the <xref:System.Windows.Data.Binding>, <xref:System.Windows.Data.PriorityBinding>, and <xref:System.Windows.Data.MultiBinding> classes.</span></span> <span data-ttu-id="d5516-252">您可以使用<xref:System.Windows.Data.BindingOperations.GetBinding%2A>， <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>，和<xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A>的屬性上設定的方法，如果您事先知道也就繫結的型別。</span><span class="sxs-lookup"><span data-stu-id="d5516-252">You can use the <xref:System.Windows.Data.BindingOperations.GetBinding%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBinding%2A>, and <xref:System.Windows.Data.BindingOperations.GetMultiBinding%2A> methods if you know in advance the type of binding that is set on the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5516-253">
            <paramref name="target" /> 和 <paramref name="dp" /> 參數不可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-253">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpression GetBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpression (target As DependencyObject, dp As DependencyProperty) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpression ^ GetBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d5516-254">
            <c>dp</c> 所在的繫結目標物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-254">The binding target object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="d5516-255">要從中擷取 <see cref="T:System.Windows.Data.BindingExpression" /> 物件的繫結目標屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-255">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpression" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-256">傳回與指定物件上的指定繫結目標屬性相關聯的 <see cref="T:System.Windows.Data.BindingExpression" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-256">Returns the <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the specified binding target property on the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5516-257">與指定之屬性相關聯的 <see cref="T:System.Windows.Data.BindingExpression" /> 物件，如果物件不存在，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-257">The <see cref="T:System.Windows.Data.BindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span>
          </span>
          <span data-ttu-id="d5516-258">如果已針對該屬性設定 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 物件，則會傳回 <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-258">If a <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object is set on the property, the <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression" /> is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5516-259"><xref:System.Windows.Data.BindingExpression>物件會維護繫結來源與繫結目標之間的連線。</span><span class="sxs-lookup"><span data-stu-id="d5516-259">The <xref:System.Windows.Data.BindingExpression> object maintains the connection between the binding source and the binding target.</span></span> <span data-ttu-id="d5516-260">您可以取得<xref:System.Windows.Data.BindingExpression>物件藉由呼叫這個靜態方法，或藉由呼叫<xref:System.Windows.FrameworkElement.GetBindingExpression%2A>資料繫結上的方法<xref:System.Windows.FrameworkElement>或<xref:System.Windows.FrameworkContentElement>物件。</span><span class="sxs-lookup"><span data-stu-id="d5516-260">You can obtain the <xref:System.Windows.Data.BindingExpression> object by calling this static method or by calling the <xref:System.Windows.FrameworkElement.GetBindingExpression%2A> method on a data-bound <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5516-261">下列範例顯示實作<xref:System.Windows.Controls.Primitives.ButtonBase.Click>用事件處理常式<xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>方法，以取得<xref:System.Windows.Data.BindingExpression>，然後呼叫<xref:System.Windows.Data.BindingExpression.DataItem%2A>屬性來存取繫結來源物件。</span><span class="sxs-lookup"><span data-stu-id="d5516-261">The following example shows the implementation of a <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler that uses the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A> method to obtain the <xref:System.Windows.Data.BindingExpression> and then calls the <xref:System.Windows.Data.BindingExpression.DataItem%2A> property to access the binding source object.</span></span>  
  
 <span data-ttu-id="d5516-262"><xref:System.Windows.Controls.TextBlock> `SavingsText`是繫結目標物件和<xref:System.Windows.Controls.TextBlock.Text%2A>是繫結目標屬性。</span><span class="sxs-lookup"><span data-stu-id="d5516-262">The <xref:System.Windows.Controls.TextBlock>`SavingsText` is the binding target object and <xref:System.Windows.Controls.TextBlock.Text%2A> is the binding target property.</span></span>  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5516-263">
            <paramref name="target" /> 和 <paramref name="dp" /> 參數不可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-263">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpressionBase">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase GetBindingExpressionBase (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase GetBindingExpressionBase(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBindingExpressionBase (target As DependencyObject, dp As DependencyProperty) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ GetBindingExpressionBase(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d5516-264">
            <c>dp</c> 所在的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-264">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="d5516-265">要從中擷取 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 物件的繫結目標屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-265">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-266">擷取針對指定之屬性設定的 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-266">Retrieves the <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5516-267">針對指定之屬性設定的 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 物件；如果未設定繫結物件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-267">The <see cref="T:System.Windows.Data.BindingExpressionBase" /> object that is set on the given property or <see langword="null" /> if no binding object has been set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5516-268"><xref:System.Windows.Data.BindingExpressionBase>類別是常見的基底類別， <xref:System.Windows.Data.BindingExpression>， <xref:System.Windows.Data.PriorityBindingExpression>，和<xref:System.Windows.Data.MultiBindingExpression>類別。</span><span class="sxs-lookup"><span data-stu-id="d5516-268">The <xref:System.Windows.Data.BindingExpressionBase> class is the common base class for the <xref:System.Windows.Data.BindingExpression>, <xref:System.Windows.Data.PriorityBindingExpression>, and <xref:System.Windows.Data.MultiBindingExpression> classes.</span></span> <span data-ttu-id="d5516-269">您可以使用<xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>， <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>，和<xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A>方法，如果您事先知道在屬性上設定的繫結的型別。</span><span class="sxs-lookup"><span data-stu-id="d5516-269">You can use the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>, <xref:System.Windows.Data.BindingOperations.GetPriorityBindingExpression%2A>, and <xref:System.Windows.Data.BindingOperations.GetMultiBindingExpression%2A> methods if you know in advance type of binding that is set on the property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5516-270">
            <paramref name="target" /> 和 <paramref name="dp" /> 參數都不能為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-270">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBinding GetMultiBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBinding GetMultiBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBinding (target As DependencyObject, dp As DependencyProperty) As MultiBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBinding ^ GetMultiBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d5516-271">
            <c>dp</c> 所在的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-271">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="d5516-272">要從其中擷取繫結的繫結目標屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-272">The binding target property from which to retrieve the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-273">擷取針對指定之屬性設定的 <see cref="T:System.Windows.Data.MultiBinding" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-273">Retrieves the <see cref="T:System.Windows.Data.MultiBinding" /> object that is set on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5516-274">針對指定之屬性設定的 <see cref="T:System.Windows.Data.MultiBinding" /> 物件；如果未設定 <see cref="T:System.Windows.Data.MultiBinding" /> 物件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-274">The <see cref="T:System.Windows.Data.MultiBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.MultiBinding" /> object has been set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5516-275">
            <paramref name="target" /> 和 <paramref name="dp" /> 參數都不能為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-275">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetMultiBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.MultiBindingExpression GetMultiBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.MultiBindingExpression GetMultiBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMultiBindingExpression (target As DependencyObject, dp As DependencyProperty) As MultiBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::MultiBindingExpression ^ GetMultiBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.MultiBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d5516-276">
            <c>dp</c> 所在的繫結目標物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-276">The binding target object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="d5516-277">要從中擷取 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 物件的繫結目標屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-277">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-278">傳回與指定物件上的指定繫結目標屬性相關聯的 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-278">Returns the <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the specified binding target property on the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5516-279">與指定之屬性相關聯的 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 物件，如果物件不存在，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-279">The <see cref="T:System.Windows.Data.MultiBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5516-280">與指定之屬性相關聯的 <xref:System.Windows.Data.MultiBindingExpression> 物件，如果物件不存在，則為 `null`。</span><span class="sxs-lookup"><span data-stu-id="d5516-280">The <xref:System.Windows.Data.MultiBindingExpression> object associated with the given property or `null` if none exists.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5516-281">
            <paramref name="target" /> 和 <paramref name="dp" /> 參數不可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-281">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBinding GetPriorityBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBinding GetPriorityBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBinding (target As DependencyObject, dp As DependencyProperty) As PriorityBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBinding ^ GetPriorityBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d5516-282">
            <c>dp</c> 所在的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-282">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="d5516-283">要從其中擷取繫結的繫結目標屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-283">The binding target property from which to retrieve the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-284">擷取針對指定之屬性設定的 <see cref="T:System.Windows.Data.PriorityBinding" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-284">Retrieves the <see cref="T:System.Windows.Data.PriorityBinding" /> object that is set on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5516-285">針對指定之屬性設定的 <see cref="T:System.Windows.Data.PriorityBinding" /> 物件；如果未設定 <see cref="T:System.Windows.Data.PriorityBinding" /> 物件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-285">The <see cref="T:System.Windows.Data.PriorityBinding" /> object set on the given property or <see langword="null" /> if no <see cref="T:System.Windows.Data.PriorityBinding" /> object has been set.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5516-286">
            <paramref name="target" /> 和 <paramref name="dp" /> 參數都不能為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-286">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be null.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetPriorityBindingExpression">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.PriorityBindingExpression GetPriorityBindingExpression(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPriorityBindingExpression (target As DependencyObject, dp As DependencyProperty) As PriorityBindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::PriorityBindingExpression ^ GetPriorityBindingExpression(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.PriorityBindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d5516-287">
            <c>dp</c> 所在的繫結目標物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-287">The binding target object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="d5516-288">要從中擷取 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 物件的繫結目標屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-288">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-289">傳回與指定物件上的指定繫結目標屬性相關聯的 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-289">Returns the <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the specified binding target property on the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5516-290">與指定之屬性相關聯的 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 物件，如果物件不存在，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-290">The <see cref="T:System.Windows.Data.PriorityBindingExpression" /> object associated with the given property or <see langword="null" /> if none exists.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5516-291">
            <paramref name="target" /> 和 <paramref name="dp" /> 參數不可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-291">The <paramref name="target" /> and <paramref name="dp" /> parameters cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindingGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingGroup&gt; GetSourceUpdatingBindingGroups(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindingGroups (root As DependencyObject) As ReadOnlyCollection(Of BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingGroup ^&gt; ^ GetSourceUpdatingBindingGroups(System::Windows::DependencyObject ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingGroup&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="root">
          <span data-ttu-id="d5516-292">要取得其繫結群組的根<see cref="T:System.Windows.UIElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-292">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.</span>
          </span>
          <span data-ttu-id="d5516-293">這個方法會傳回<see cref="T:System.Windows.Data.BindingGroup" />物件，其與此項目或它的子代項目相關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-293">This method returns <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with this element or its descendant elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-294">取得所有 <see cref="T:System.Windows.Data.BindingGroup" /> 物件，這些物件有無效值或者目標值尚未被來源更新。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-294">Gets all <see cref="T:System.Windows.Data.BindingGroup" /> objects that have invalid values or target values have not been updated the source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5516-295">
            <see cref="T:System.Windows.Data.BindingGroup" /> 物件的集合，這些物件與指定的項目相關聯，並且含有無效值或是其目標值尚未更新來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-295">A collection of <see cref="T:System.Windows.Data.BindingGroup" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5516-296">如果`root`是`null`，<xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A>傳回所有<xref:System.Windows.Data.BindingGroup>無效或尚未更新的物件。</span><span class="sxs-lookup"><span data-stu-id="d5516-296">If `root` is `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindingGroups%2A> returns all <xref:System.Windows.Data.BindingGroup> objects that are invalid or have not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceUpdatingBindings">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings (System.Windows.DependencyObject root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; GetSourceUpdatingBindings(class System.Windows.DependencyObject root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourceUpdatingBindings (root As DependencyObject) As ReadOnlyCollection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ GetSourceUpdatingBindings(System::Windows::DependencyObject ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="root">
          <span data-ttu-id="d5516-297">要取得其繫結群組的根<see cref="T:System.Windows.UIElement" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-297">The root <see cref="T:System.Windows.UIElement" /> to get binding groups for.</span>
          </span>
          <span data-ttu-id="d5516-298">這個方法會傳回<see cref="T:System.Windows.Data.BindingExpressionBase" />物件，其與此項目或它的子代項目相關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-298">This method returns <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with this element or its descendant elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-299">取得所有 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 物件，這些物件有無效值或者目標值尚未被來源更新。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-299">Gets all <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that have invalid values or target values have not been updated the source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5516-300">
            <see cref="T:System.Windows.Data.BindingExpressionBase" /> 物件的集合，這些物件與指定的項目相關聯，並且含有無效值或是其目標值尚未更新來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-300">A collection of <see cref="T:System.Windows.Data.BindingExpressionBase" /> objects that are associated with the specified element and have invalid values or target values have not been updated the source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5516-301">如果`root`是`null`，<xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A>傳回所有<xref:System.Windows.Data.BindingExpressionBase>無效或尚未更新的物件。</span><span class="sxs-lookup"><span data-stu-id="d5516-301">If `root` is `null`, <xref:System.Windows.Data.BindingOperations.GetSourceUpdatingBindings%2A> returns all <xref:System.Windows.Data.BindingExpressionBase> objects that are invalid or have not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDataBound">
      <MemberSignature Language="C#" Value="public static bool IsDataBound (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDataBound(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDataBound (target As DependencyObject, dp As DependencyProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDataBound(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d5516-302">
            <c>dp</c> 所在的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-302">The object where <c>dp</c> is.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="d5516-303">要檢查的相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-303">The dependency property to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-304">傳回值，這個值表示指定的屬性目前是否已繫結資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-304">Returns a value that indicates whether the specified property is currently data-bound.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5516-305">如果指定的屬性已繫結資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-305">
              <see langword="true" /> if the specified property is data-bound; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5516-306">如果 <paramref name="target" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-306">If <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyObject target, System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Data.BindingExpressionBase SetBinding(class System.Windows.DependencyObject target, class System.Windows.DependencyProperty dp, class System.Windows.Data.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetBinding (target As DependencyObject, dp As DependencyProperty, binding As BindingBase) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Data::BindingExpressionBase ^ SetBinding(System::Windows::DependencyObject ^ target, System::Windows::DependencyProperty ^ dp, System::Windows::Data::BindingBase ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="d5516-307">繫結的繫結目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-307">The binding target of the binding.</span>
          </span>
        </param>
        <param name="dp">
          <span data-ttu-id="d5516-308">繫結的目標屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-308">The target property of the binding.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="d5516-309">描述繫結的 <see cref="T:System.Windows.Data.BindingBase" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-309">The <see cref="T:System.Windows.Data.BindingBase" /> object that describes the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d5516-310">建立 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 的新執行個體，並使其與指定的繫結目標屬性產生關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-310">Creates and associates a new instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> with the specified binding target property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d5516-311">已建立並與指定屬性產生關聯的 <see cref="T:System.Windows.Data.BindingExpressionBase" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-311">The instance of <see cref="T:System.Windows.Data.BindingExpressionBase" /> created for and associated with the specified property.</span>
          </span>
          <span data-ttu-id="d5516-312">
            <see cref="T:System.Windows.Data.BindingExpressionBase" /> 類別是 <see cref="T:System.Windows.Data.BindingExpression" />、<see cref="T:System.Windows.Data.MultiBindingExpression" /> 和 <see cref="T:System.Windows.Data.PriorityBindingExpression" /> 的基底類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-312">The <see cref="T:System.Windows.Data.BindingExpressionBase" /> class is the base class of <see cref="T:System.Windows.Data.BindingExpression" />, <see cref="T:System.Windows.Data.MultiBindingExpression" />, and <see cref="T:System.Windows.Data.PriorityBindingExpression" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5516-313">這個方法建立的新執行個體<xref:System.Windows.Data.BindingExpressionBase>並將執行個體與指定之物件的指定相依性屬性相關聯。</span><span class="sxs-lookup"><span data-stu-id="d5516-313">This method creates a new instance of a <xref:System.Windows.Data.BindingExpressionBase> and associates the instance with the given dependency property of the given object.</span></span> <span data-ttu-id="d5516-314">這個方法是將繫結附加至任意的方式<xref:System.Windows.DependencyObject>，可能不會公開自己的 SetBinding 方法。</span><span class="sxs-lookup"><span data-stu-id="d5516-314">This method is the way to attach a binding to an arbitrary <xref:System.Windows.DependencyObject> that may not expose its own SetBinding method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5516-315">下列範例會示範如何使用這個方法來設定繫結。</span><span class="sxs-lookup"><span data-stu-id="d5516-315">The following example shows how to use this method to set a binding.</span></span> <span data-ttu-id="d5516-316">在此範例中，`myNewBindDef`是<xref:System.Windows.Data.Binding>描述的繫結的物件。</span><span class="sxs-lookup"><span data-stu-id="d5516-316">In this example, `myNewBindDef` is a <xref:System.Windows.Data.Binding> object that describes the binding.</span></span> <span data-ttu-id="d5516-317">繫結的目標是`myDateText`，執行個體<xref:System.Windows.Controls.TextBlock>類別。</span><span class="sxs-lookup"><span data-stu-id="d5516-317">The binding target is `myDateText`, an instance of the <xref:System.Windows.Controls.TextBlock> class.</span></span>  
  
 [!code-csharp[BindConversion#BOSetBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#bosetbinding)]
 [!code-vb[BindConversion#BOSetBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#bosetbinding)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d5516-318">
            <paramref name="binding" /> 參數不可為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5516-318">The <paramref name="binding" /> parameter cannot be <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>