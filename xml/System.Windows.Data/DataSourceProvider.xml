<Type Name="DataSourceProvider" FullName="System.Windows.Data.DataSourceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b69b026e4c25cdaac8db8887e388b431180c5d47" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32692377" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataSourceProvider : System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceProvider extends System.Object implements class System.ComponentModel.INotifyPropertyChanged, class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.DataSourceProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceProvider&#xA;Implements INotifyPropertyChanged, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceProvider abstract : System::ComponentModel::INotifyPropertyChanged, System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>常用的基底類別和 <see cref="T:System.Windows.Data.DataSourceProvider" /> 物件協定，是執行幾項查詢以產生單一物件或物件清單 (可當作繫結來源物件使用) 的因素。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.DataSourceProvider> 為現有的資料模型; 的便利包裝函式它不會取代任何資料模型。 資料提供者不會嘗試加寬的複雜度和例如 ADO 資料模型的一些屬性的單一物件。  
  
 <xref:System.Windows.Data.DataSourceProvider> 是抽象類別。 使用其中一種衍生的類別，也就是<xref:System.Windows.Data.XmlDataProvider>和<xref:System.Windows.Data.ObjectDataProvider>。 <xref:System.Windows.Data.DataSourceProvider>感知[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]執行緒和發送器的模型。 它會在建立時是假設執行緒[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]執行緒。 事件會取得封送處理從背景工作執行緒的應用程式的 UI 執行緒。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Data.DataSourceProvider" /> 類別的新執行個體。 這是受保護的建構函式。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="protected virtual void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void BeginInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>表示這個物件即將開始初始化；直到呼叫對應的 <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> 方法，才會發生隱含的 <see cref="M:System.Windows.Data.DataSourceProvider.EndInit" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginQuery">
      <MemberSignature Language="C#" Value="protected virtual void BeginQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void BeginQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.BeginQuery" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub BeginQuery ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void BeginQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，這個基底類別會在已呼叫 <see cref="M:System.Windows.Data.DataSourceProvider.InitialLoad" /> 或 <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" /> 之後呼叫這個方法。 如果延後重新整理或停用初始載入，基底類別就會延遲呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **實作器注意事項：** 您可以選擇以執行查詢，在相同執行緒上或在背景執行緒，或使用`IsAsynchronous`。 查詢完成時，呼叫<xref:System.Windows.Data.DataSourceProvider.OnQueryFinished%2A>有更新的公用屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public object Data { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Data" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.DataSourceProvider.Data" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Data As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Data { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得基礎資料物件。</summary>
        <value>做為基礎資料物件之 <see cref="T:System.Object" /> 型別的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Data.DataSourceProvider>用做為繫結的來源，這是產生的繫結來源物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.ObjectType" />
      </Docs>
    </Member>
    <Member MemberName="DataChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.DataSourceProvider.DataChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DataChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當 <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 屬性有新值時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **實作器注意事項：** 引發這個事件上可以使用新的資料物件時<xref:System.Windows.Data.DataSourceProvider.Data%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferRefresh">
      <MemberSignature Language="C#" Value="public virtual IDisposable DeferRefresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable DeferRefresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeferRefresh () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ DeferRefresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>進入延後循環，您可以用來變更提供者屬性，並且延遲自動重新整理。</summary>
        <returns>您可以用來處置呼叫物件的 <see cref="T:System.IDisposable" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 典型的使用方式是建立`using`採用這種方法的範圍，然後將多個屬性變更放在範圍內。 延後循環結束之前，這會延遲自動重新整理。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="protected System.Windows.Threading.Dispatcher Dispatcher { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.DataSourceProvider.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Protected Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); void set(System::Windows::Threading::Dispatcher ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要使用之 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 執行緒目前的 <see cref="T:System.Windows.Threading.Dispatcher" /> 物件。</summary>
        <value>目前<see cref="T:System.Windows.Threading.Dispatcher" />物件[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]来使用的執行緒。 根據預設，這是與建立這個執行個體所在之執行緒相關聯的 <see cref="T:System.Windows.Threading.Dispatcher" /> 物件。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="protected virtual void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.EndInit" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指出這個物件的初始化已經完成，如果沒有任何其他未處理的 <see cref="M:System.Windows.Data.DataSourceProvider.Refresh" />，這就會導致 <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public Exception Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Error" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.DataSourceProvider.Error" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Error As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Error { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得上次查詢作業的錯誤。</summary>
        <value>做為上次查詢作業錯誤之 <see cref="T:System.Exception" /> 型別的值，如果沒有錯誤，則為 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialLoad">
      <MemberSignature Language="C#" Value="public void InitialLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitialLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.InitialLoad" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitialLoad ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitialLoad();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>啟動基礎資料模型的初始查詢。 結果會針對 <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 屬性傳回。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當啟動相依的資料繫結，繫結引擎通常會呼叫這個方法。 設定<xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A>至`false`防止或延遲自動載入的資料。  
  
 <xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A>方法可以呼叫多次。 提供者會忽略後續呼叫，一旦忙於執行初始查詢;提供者不會重新啟動已在執行查詢時<xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A>會再次呼叫。 當查詢完成時成功，任何<xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A>呼叫仍不會重新查詢資料。 <xref:System.Windows.Data.DataSourceProvider.InitialLoad%2A>作業是通常是非同步，<xref:System.Windows.Data.DataSourceProvider.DataChanged>就會引發事件時<xref:System.Windows.Data.DataSourceProvider.Data%2A>假設新值的屬性。  
  
 應用程式會呼叫<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>，讓資料重新整理。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialLoadEnabled">
      <MemberSignature Language="C#" Value="public bool IsInitialLoadEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialLoadEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInitialLoadEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitialLoadEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示是否要防止或延遲自動資料載入。</summary>
        <value>
          <see langword="false" /> 表示防止或延遲自動資料載入，否則為 <see langword="true" />。 預設值是 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常<xref:System.Windows.Data.DataSourceProvider>執行其查詢，並設定其<xref:System.Windows.Data.DataSourceProvider.Data%2A>屬性繫結使用它的第一次或<xref:System.Windows.Data.CollectionViewSource>。 您可以省略此步驟中，藉由設定<xref:System.Windows.Data.DataSourceProvider.IsInitialLoadEnabled%2A>屬性`false`。 在此情況下，應用程式必須明確地呼叫<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>造成此提供者取得其資料。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRefreshDeferred">
      <MemberSignature Language="C#" Value="protected bool IsRefreshDeferred { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRefreshDeferred" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.DataSourceProvider.IsRefreshDeferred" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsRefreshDeferred As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsRefreshDeferred { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出是否仍然有未處理的 <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> 在使用中。</summary>
        <value>
          如果仍然有未處理的 <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh" /> 在使用中，就是 <see langword="true" />，否則就是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 **實作器注意事項：** 若要重新整理延遲最佳利用，請勿呼叫<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>當這個屬性是`true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">所引發事件的引數。</param>
        <summary>使用所提供的引數來引發 <see cref="E:System.Windows.Data.DataSourceProvider.PropertyChanged" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OnQueryFinished">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>衍生類別會呼叫這個方法來指出查詢已經完成。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnQueryFinished">
      <MemberSignature Language="C#" Value="protected void OnQueryFinished (object newData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnQueryFinished(object newData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnQueryFinished (newData As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnQueryFinished(System::Object ^ newData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newData">查詢的結果資料。</param>
        <summary>衍生類別會呼叫這個方法來指出查詢已經完成。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此回呼可以從任何執行緒呼叫。 這項實作封送處理回結果[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]執行緒之前設定的任何公用內容以及之前引發任何事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryFinished">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryFinished (object newData, Exception error, System.Windows.Threading.DispatcherOperationCallback completionWork, object callbackArguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryFinished(object newData, class System.Exception error, class System.Windows.Threading.DispatcherOperationCallback completionWork, object callbackArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.OnQueryFinished(System.Object,System.Exception,System.Windows.Threading.DispatcherOperationCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryFinished (newData As Object, error As Exception, completionWork As DispatcherOperationCallback, callbackArguments As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryFinished(System::Object ^ newData, Exception ^ error, System::Windows::Threading::DispatcherOperationCallback ^ completionWork, System::Object ^ callbackArguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newData" Type="System.Object" />
        <Parameter Name="error" Type="System.Exception" />
        <Parameter Name="completionWork" Type="System.Windows.Threading.DispatcherOperationCallback" />
        <Parameter Name="callbackArguments" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newData">查詢的結果資料。</param>
        <param name="error">執行查詢時所發生的錯誤。 如果沒有錯誤，這個值為 <see langword="null" />。</param>
        <param name="completionWork">用於對 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 執行緒執行完成工作 (例如設定其他屬性) 的選擇性委派。</param>
        <param name="callbackArguments">隨 <c>completionWork</c> 委派當作參數傳送的選擇性引數。</param>
        <summary>衍生類別會呼叫這個方法來指出查詢已經完成。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此回呼可以從任何執行緒呼叫。 這項實作封送處理回結果[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]執行緒之前設定的任何公用內容以及之前引發任何事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.DataSourceProvider.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當屬性值變更時發生。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>啟始基礎資料模型的重新整理作業。 結果會針對 <see cref="P:System.Windows.Data.DataSourceProvider.Data" /> 屬性傳回。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 重新整理作業是通常是非同步的<xref:System.Windows.Data.DataSourceProvider.DataChanged>就會引發事件時<xref:System.Windows.Data.DataSourceProvider.Data%2A>假設新值的屬性。 如果重新整理作業失敗，<xref:System.Windows.Data.DataSourceProvider.Data%2A>屬性設定為`null`;<xref:System.Windows.Data.DataSourceProvider.Error%2A>屬性設為錯誤的例外狀況。 應用程式可以呼叫<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>一次重新整理仍進行時。 呼叫<xref:System.Windows.Data.DataSourceProvider.Refresh%2A>兩次引發<xref:System.Windows.Data.DataSourceProvider.DataChanged>事件兩次。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>這個成員可以支援 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基礎結構，但不建議直接使用於您的程式碼中。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.DataSourceProvider.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>這個成員可以支援 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基礎結構，但不建議直接使用於您的程式碼中。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>