<Type Name="RelativeSource" FullName="System.Windows.Data.RelativeSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23ee53906dfabf89a476708c5d66099d48a48012" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39769070" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RelativeSource : System.Windows.Markup.MarkupExtension, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelativeSource extends System.Windows.Markup.MarkupExtension implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.RelativeSource" />
  <TypeSignature Language="VB.NET" Value="Public Class RelativeSource&#xA;Inherits MarkupExtension&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelativeSource : System::Windows::Markup::MarkupExtension, System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type RelativeSource = class&#xA;    inherit MarkupExtension&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Markup.MarkupExtension</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.MarkupExtensionReturnType(typeof(System.Windows.Data.RelativeSource))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>實作標記延伸，這個標記延伸描述與繫結目標位置相對的繫結來源位置。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 其中一個指定的繫結來源的方式是使用<xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType>屬性。 這是該屬性的屬性型別。 <xref:System.Windows.Data.RelativeSource> 同時是標記延伸實作和資料物件。 當延伸模組會傳回本身 (請參閱<xref:System.Windows.Data.RelativeSource.ProvideValue%2A>)，資料中包含的相關資訊。 標記延伸的主要目的是允許以屬性形式的變數引數建構函式語法以便<xref:System.Windows.Data.RelativeSourceMode.FindAncestor>模式可以是內部定義的兩個額外的引數的上階類型和其他模式不需要的層級。  
  
 針對[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]的詳細資訊，請參閱 < [RelativeSource 標記延伸](~/docs/framework/wpf/advanced/relativesource-markupextension.md)。  
  
## Examples  
 下列範例示範樣式觸發程序建立<xref:System.Windows.Controls.ToolTip>報告驗證錯誤訊息。 使用<xref:System.Windows.Data.Binding.RelativeSource%2A>屬性的 setter 值繫結至目前的錯誤內容<xref:System.Windows.Controls.TextBox>(<xref:System.Windows.Controls.TextBox>使用樣式)。 如需有關此範例的詳細資訊，請參閱[如何： 實作繫結驗證](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)。  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 下列範例所示<xref:System.Windows.Style>定義的自訂控制項呼叫`NumericUpDown`。 <xref:System.Windows.Controls.TextBlock.Text%2A>的屬性<xref:System.Windows.Controls.TextBlock>繫結至`Value`物件的`TemplatedParent`，這是`NumericUpDown`控制這個<xref:System.Windows.Style>在此情況下套用至。  
  
 [!code-xaml[CustomControlNumericUpDown#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary/themes/generic.xaml#relativesource)]  
  
 如需完整的範例，請參閱[NumericUpDown 自訂控制項，具有佈景主題和 UI 自動化支援範例](http://go.microsoft.com/fwlink/?LinkID=160025)。  
  
 下列傳回第二個<xref:System.Windows.Controls.ItemsControl>繫結的目標項目開始向上路徑上發生。  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.RelativeSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Data.RelativeSource" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Data.RelativeSource" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource (System.Windows.Data.RelativeSourceMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Data.RelativeSourceMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As RelativeSourceMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource(System::Windows::Data::RelativeSourceMode mode);" />
      <MemberSignature Language="F#" Value="new System.Windows.Data.RelativeSource : System.Windows.Data.RelativeSourceMode -&gt; System.Windows.Data.RelativeSource" Usage="new System.Windows.Data.RelativeSource mode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Data.RelativeSourceMode" />
      </Parameters>
      <Docs>
        <param name="mode">其中一個 <see cref="T:System.Windows.Data.RelativeSourceMode" /> 值。</param>
        <summary>以初始模式來初始化 <see cref="T:System.Windows.Data.RelativeSource" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelativeSource (System.Windows.Data.RelativeSourceMode mode, Type ancestorType, int ancestorLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Data.RelativeSourceMode mode, class System.Type ancestorType, int32 ancestorLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As RelativeSourceMode, ancestorType As Type, ancestorLevel As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RelativeSource(System::Windows::Data::RelativeSourceMode mode, Type ^ ancestorType, int ancestorLevel);" />
      <MemberSignature Language="F#" Value="new System.Windows.Data.RelativeSource : System.Windows.Data.RelativeSourceMode * Type * int -&gt; System.Windows.Data.RelativeSource" Usage="new System.Windows.Data.RelativeSource (mode, ancestorType, ancestorLevel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Data.RelativeSourceMode" />
        <Parameter Name="ancestorType" Type="System.Type" />
        <Parameter Name="ancestorLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mode">其中一個 <see cref="T:System.Windows.Data.RelativeSourceMode" /> 值。 這個簽章若要相關，這就應該是 <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />。</param>
        <param name="ancestorType">要尋找的祖系 <see cref="T:System.Type" />。</param>
        <param name="ancestorLevel">在所有屬於特定型別祖系當中，所需祖系的序數位置。</param>
        <summary>以初始模式加上尋找所需相對來源的額外樹狀目錄結構導覽限定詞，初始化 <see cref="T:System.Windows.Data.RelativeSource" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ancestorType` 並`ancestorLevel`做為參數提供有任何相關性`mode`以外的其他<xref:System.Windows.Data.RelativeSourceMode.FindAncestor>。 請勿使用此簽章為其他<xref:System.Windows.Data.RelativeSourceMode>值。  
  
   
  
## Examples  
 下列傳回第二個<xref:System.Windows.Controls.ItemsControl>繫結的目標項目開始向上路徑上發生。  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AncestorLevel">
      <MemberSignature Language="C#" Value="public int AncestorLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AncestorLevel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.AncestorLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AncestorLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AncestorLevel { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AncestorLevel : int with get, set" Usage="System.Windows.Data.RelativeSource.AncestorLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要尋找的祖系層級，採用 <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> 模式。 使用 1 來表示最接近繫結目標項目的項目。</summary>
        <value>上階層級。 使用 1 來表示最接近繫結目標項目的項目。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Data.RelativeSource.Mode%2A>屬性未明確設定，設定<xref:System.Windows.Data.RelativeSource.AncestorType%2A>或<xref:System.Windows.Data.RelativeSource.AncestorLevel%2A>屬性會以隱含方式鎖定<xref:System.Windows.Data.RelativeSource.Mode%2A>屬性值，以<xref:System.Windows.Data.RelativeSourceMode.FindAncestor>。  
  
<a name="xamlTextUsage_AncestorLevel"></a>   
## <a name="xaml-text-usage"></a>XAML 文字使用方式  
 針對[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]的詳細資訊，請參閱 < [RelativeSource 標記延伸](~/docs/framework/wpf/advanced/relativesource-markupextension.md)。  
  
   
  
## Examples  
 下列傳回第二個<xref:System.Windows.Controls.ItemsControl>繫結的目標項目開始向上路徑上發生。  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="AncestorType">
      <MemberSignature Language="C#" Value="public Type AncestorType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AncestorType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.AncestorType" />
      <MemberSignature Language="VB.NET" Value="Public Property AncestorType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AncestorType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AncestorType : Type with get, set" Usage="System.Windows.Data.RelativeSource.AncestorType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要尋找的祖系型別。</summary>
        <value>祖系的型別。 預設值是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Data.RelativeSource.Mode%2A>屬性未明確設定，設定<xref:System.Windows.Data.RelativeSource.AncestorType%2A>或<xref:System.Windows.Data.RelativeSource.AncestorLevel%2A>屬性會以隱含方式鎖定<xref:System.Windows.Data.RelativeSource.Mode%2A>屬性值，以<xref:System.Windows.Data.RelativeSourceMode.FindAncestor>。  
  
<a name="xamlTextUsage_AncestorType"></a>   
## <a name="xaml-text-usage"></a>XAML 文字使用方式  
 針對[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]的詳細資訊，請參閱 < [RelativeSource 標記延伸](~/docs/framework/wpf/advanced/relativesource-markupextension.md)。  
  
   
  
## Examples  
 下列傳回第二個<xref:System.Windows.Controls.ItemsControl>繫結的目標項目開始向上路徑上發生。  
  
 [!code-csharp[BindConversion#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/BindConversion/CSharp/Window1.xaml.cs#relativesource)]
 [!code-vb[BindConversion#RelativeSource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindConversion/visualbasic/window1.xaml.vb#relativesource)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Windows.Data.RelativeSource" /> 不是處於 <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" /> 模式。</exception>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="P:System.Windows.Data.RelativeSource.AncestorLevel" />
        <altmember cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSourceMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.RelativeSourceMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As RelativeSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSourceMode Mode { System::Windows::Data::RelativeSourceMode get(); void set(System::Windows::Data::RelativeSourceMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Windows.Data.RelativeSourceMode with get, set" Usage="System.Windows.Data.RelativeSource.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Markup.ConstructorArgument("mode")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Data.RelativeSourceMode" /> 值，這個值描述與繫結目標位置相對的繫結來源位置。</summary>
        <value>其中一個 <see cref="T:System.Windows.Data.RelativeSourceMode" /> 值。 預設值是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性是唯讀，在初始化之後。 如果未明確設定此屬性，設定<xref:System.Windows.Data.RelativeSource.AncestorType%2A>或<xref:System.Windows.Data.RelativeSource.AncestorType%2A>而<xref:System.Windows.Data.RelativeSource.AncestorLevel%2A>屬性會以隱含方式鎖定此屬性值設<xref:System.Windows.Data.RelativeSourceMode.FindAncestor>。  
  
<a name="xamlTextUsage_Mode"></a>   
## <a name="xaml-text-usage"></a>XAML 文字使用方式  
 針對[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]的詳細資訊，請參閱 < [RelativeSource 標記延伸](~/docs/framework/wpf/advanced/relativesource-markupextension.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">初始化之後，這個屬性就是固定的屬性。 不要變更這個執行個體上的 <see cref="P:System.Windows.Data.RelativeSource.Mode" />，而要建立新的 <see cref="T:System.Windows.Data.RelativeSource" /> 或使用不同的靜態執行個體。</exception>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="PreviousData">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource PreviousData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource PreviousData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.PreviousData" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PreviousData As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ PreviousData { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousData : System.Windows.Data.RelativeSource" Usage="System.Windows.Data.RelativeSource.PreviousData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得靜態值，作用是傳回針對 <see cref="T:System.Windows.Data.RelativeSource" /> 模式建構的 <see cref="F:System.Windows.Data.RelativeSourceMode.PreviousData" />。</summary>
        <value>靜態 <see cref="T:System.Windows.Data.RelativeSource" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 三個四<xref:System.Windows.Data.RelativeSourceMode>值， <xref:System.Windows.Data.RelativeSourceMode.PreviousData>， <xref:System.Windows.Data.RelativeSourceMode.Self>，或<xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>，可能會產生<xref:System.Windows.Data.RelativeSource>，是完全靜態的包含沒有唯一的私用值。 所有使用的靜態屬性可以都共用相同的物件，而不必每次使用配置個別物件。 因此，使用靜態屬性，可降低記憶體使用量。  
  
<a name="xamlTextUsage_PreviousData"></a>   
## <a name="xaml-text-usage"></a>XAML 文字使用方式  
 針對[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]的詳細資訊，請參閱 < [RelativeSource 標記延伸](~/docs/framework/wpf/advanced/relativesource-markupextension.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public override object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="override this.ProvideValue : IServiceProvider -&gt; obj" Usage="relativeSource.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">可以為標記延伸提供服務的物件。 在這個實作中，此參數可以是 <see langword="null" />。</param>
        <summary>傳回物件，此物件應該設定為目標物件對於這個標記延伸之屬性上的值。 對於 <see cref="T:System.Windows.Data.RelativeSource" />，這是另一個 <see cref="T:System.Windows.Data.RelativeSource" />，使用指定之模式的適當來源。</summary>
        <returns>另一個 <see cref="T:System.Windows.Data.RelativeSource" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.RelativeSource> 同時是標記延伸實作和資料物件。 延伸模組會傳回本身的資料中包含的相關資訊。 標記延伸的主要目的是允許以屬性形式的變數引數建構函式語法以便<xref:System.Windows.Data.RelativeSourceMode.FindAncestor>模式可以是內嵌定義，具有兩個額外的引數的上階類型和其他模式不需要的層級。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Self">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource Self { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource Self" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.Self" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Self As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ Self { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Self : System.Windows.Data.RelativeSource" Usage="System.Windows.Data.RelativeSource.Self" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得靜態值，作用是傳回針對 <see cref="T:System.Windows.Data.RelativeSource" /> 模式建構的 <see cref="F:System.Windows.Data.RelativeSourceMode.Self" />。</summary>
        <value>靜態 <see cref="T:System.Windows.Data.RelativeSource" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 三個四<xref:System.Windows.Data.RelativeSourceMode>值， <xref:System.Windows.Data.RelativeSourceMode.PreviousData>， <xref:System.Windows.Data.RelativeSourceMode.Self>，或<xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>，可能會產生<xref:System.Windows.Data.RelativeSource>，是完全靜態的包含沒有唯一的私用值。 所有使用的靜態屬性可以都共用相同的物件，而不必每次使用配置個別物件。 因此，使用靜態屬性，可降低記憶體使用量。  
  
<a name="xamlTextUsage_Self"></a>   
## <a name="xaml-text-usage"></a>XAML 文字使用方式  
 針對[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]的詳細資訊，請參閱 < [RelativeSource 標記延伸](~/docs/framework/wpf/advanced/relativesource-markupextension.md)。  
  
   
  
## Examples  
 下列範例示範樣式觸發程序建立<xref:System.Windows.Controls.ToolTip>報告驗證錯誤訊息。 Setter 值繫結至目前的錯誤內容<xref:System.Windows.Controls.TextBox>(<xref:System.Windows.Controls.TextBox>使用樣式) 使用<xref:System.Windows.Data.Binding.RelativeSource%2A>屬性。 請參閱[如何： 實作繫結驗證](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)如需有關此範例。  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAncestorLevel">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAncestorLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAncestorLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorLevel" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeAncestorLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeAncestorLevel();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeAncestorLevel : unit -&gt; bool" Usage="relativeSource.ShouldSerializeAncestorLevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否應該保存 <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel" /> 屬性。</summary>
        <returns>如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這`ShouldSerialize`提供方法，因為<xref:System.Windows.Data.RelativeSource.AncestorLevel%2A>屬性並沒有簡單的預設值。 這個方法會指出屬性是否已變更其預設值。 您通常叫用這個方法如果您正在開發的設計工具<xref:System.Windows.Data.RelativeSource>或是開發您自己的控制項併入<xref:System.Windows.Data.RelativeSource>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeAncestorType">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeAncestorType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeAncestorType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorType" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeAncestorType () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeAncestorType();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeAncestorType : unit -&gt; bool" Usage="relativeSource.ShouldSerializeAncestorType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否應該保存 <see cref="P:System.Windows.Data.RelativeSource.AncestorType" /> 屬性。</summary>
        <returns>如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這`ShouldSerialize`提供方法，因為<xref:System.Windows.Data.RelativeSource.AncestorType%2A>屬性並沒有簡單的預設值。 這個方法會指出屬性是否已變更其預設值。 您通常叫用這個方法如果您正在開發的設計工具<xref:System.Windows.Data.RelativeSource>或是開發您自己的控制項併入<xref:System.Windows.Data.RelativeSource>。  
  
 如需詳細資訊，請參閱 <<c0> [ 定義預設值使用 ShouldSerialize 和重設方法](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>這個成員支援 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基礎結構，但是您不可以從程式碼直接使用它。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.RelativeSource.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>這個成員支援 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基礎結構，但是您不可以從程式碼直接使用它。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplatedParent">
      <MemberSignature Language="C#" Value="public static System.Windows.Data.RelativeSource TemplatedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Data.RelativeSource TemplatedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.RelativeSource.TemplatedParent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TemplatedParent As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Data::RelativeSource ^ TemplatedParent { System::Windows::Data::RelativeSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemplatedParent : System.Windows.Data.RelativeSource" Usage="System.Windows.Data.RelativeSource.TemplatedParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得靜態值，作用是傳回針對 <see cref="T:System.Windows.Data.RelativeSource" /> 模式建構的 <see cref="F:System.Windows.Data.RelativeSourceMode.TemplatedParent" />。</summary>
        <value>靜態 <see cref="T:System.Windows.Data.RelativeSource" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 三個四<xref:System.Windows.Data.RelativeSourceMode>值， <xref:System.Windows.Data.RelativeSourceMode.PreviousData>， <xref:System.Windows.Data.RelativeSourceMode.Self>，或<xref:System.Windows.Data.RelativeSourceMode.TemplatedParent>，可能會產生<xref:System.Windows.Data.RelativeSource>，是完全靜態的包含沒有唯一的私用值。 所有使用的靜態屬性可以都共用相同的物件，而不必每次使用配置個別物件。 因此，使用靜態屬性，可降低記憶體使用量。  
  
<a name="xamlTextUsage_TemplatedParent"></a>   
## <a name="xaml-text-usage"></a>XAML 文字使用方式  
 針對[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]的詳細資訊，請參閱 < [RelativeSource 標記延伸](~/docs/framework/wpf/advanced/relativesource-markupextension.md)。  
  
   
  
## Examples  
 下列範例所示<xref:System.Windows.Style>定義的自訂控制項呼叫`NumericUpDown`。 <xref:System.Windows.Controls.TextBlock.Text%2A>的屬性<xref:System.Windows.Controls.TextBlock>繫結至`Value`物件的`TemplatedParent`，這是`NumericUpDown`控制這個<xref:System.Windows.Style>在此情況下套用至。  
  
 [!code-xaml[CustomControlNumericUpDown#RelativeSource](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary/themes/generic.xaml#relativesource)]  
  
 如需完整的範例，請參閱[NumericUpDown 自訂控制項，具有佈景主題和 UI 自動化支援範例](http://go.microsoft.com/fwlink/?LinkID=160025)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.RelativeSourceMode" />
        <altmember cref="T:System.Windows.Data.RelativeSource" />
      </Docs>
    </Member>
  </Members>
</Type>