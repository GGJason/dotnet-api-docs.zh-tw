<Type Name="BindingGroup" FullName="System.Windows.Data.BindingGroup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b826e7069b0044a7213adf25c03adbfe354c267b" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52603292" /></Metadata><TypeSignature Language="C#" Value="public class BindingGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BindingGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class BindingGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type BindingGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8ecc3-101">內含用來驗證物件之繫結和 <see cref="T:System.Windows.Controls.ValidationRule" /> 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-101">Contains a collection of bindings and <see cref="T:System.Windows.Controls.ValidationRule" /> objects that are used to validate an object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-102">A<xref:System.Windows.Data.BindingGroup>建立多個繫結，會進行驗證並同時更新之間的關聯性。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-102">A <xref:System.Windows.Data.BindingGroup> creates a relationship between multiple bindings, which can be validated and updated together.</span></span> <span data-ttu-id="8ecc3-103">例如，假設應用程式會提示使用者輸入的位址。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-103">For example, suppose that an application prompts the user to enter an address.</span></span> <span data-ttu-id="8ecc3-104">接著，應用程式填入物件的型別`Address`，其中具有屬性， `Street`， `City`， `ZipCode`，和`Country`，使用者提供的值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-104">The application then populates an object of type `Address`, which has the properties, `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided.</span></span> <span data-ttu-id="8ecc3-105">應用程式必須包含四個面板<xref:System.Windows.Controls.TextBox>控制項，每個都是資料繫結至其中一個物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-105">The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is data bound to one of the object's properties.</span></span> <span data-ttu-id="8ecc3-106">您可以使用<xref:System.Windows.Controls.ValidationRule>中<xref:System.Windows.Data.BindingGroup>驗證`Address`物件。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-106">You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object.</span></span> <span data-ttu-id="8ecc3-107">如果繫結參與相同<xref:System.Windows.Data.BindingGroup>，您可以確保 zip 程式碼是有效的地址的國家/地區。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-107">If the bindings participate in the same <xref:System.Windows.Data.BindingGroup>, you can ensure that the zip-code is valid for the country of the address.</span></span>  
  
 <span data-ttu-id="8ecc3-108">您設定<xref:System.Windows.FrameworkElement.BindingGroup%2A>上的屬性<xref:System.Windows.FrameworkElement>或<xref:System.Windows.FrameworkContentElement>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-108">You set the <xref:System.Windows.FrameworkElement.BindingGroup%2A> property on <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="8ecc3-109">項目子系繼承<xref:System.Windows.Data.BindingGroup>從其父項目，就如同任何其他可繼承的屬性。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-109">Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property.</span></span> <span data-ttu-id="8ecc3-110">繫結的子系的項目新增至<xref:System.Windows.Data.BindingGroup>發生下列情況的其中一個：</span><span class="sxs-lookup"><span data-stu-id="8ecc3-110">A binding on a descendent element is added to a <xref:System.Windows.Data.BindingGroup> if one of the following situations occurs:</span></span>  
  
-   <span data-ttu-id="8ecc3-111">繫結的來源並<xref:System.Windows.FrameworkElement.DataContext%2A>具有項目的<xref:System.Windows.Data.BindingGroup>是相同的物件和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-111">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="8ecc3-112"><xref:System.Windows.Data.BindingBase.BindingGroupName%2A>繫結屬性等於<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.FrameworkContentElement.BindingGroup%2A>且未明確設定`null`。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-112">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding is equal to the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> and they are not explicitly set to `null`.</span></span>  
  
 <span data-ttu-id="8ecc3-113">在位址的範例中，假設<xref:System.Windows.FrameworkElement.DataContext%2A>的<xref:System.Windows.Controls.Panel>設定為型別的物件`Address`。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-113">In the example of the address, suppose that the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.Panel> is set to the object of type `Address`.</span></span> <span data-ttu-id="8ecc3-114">每個繫結<xref:System.Windows.Controls.TextBox>新增至<xref:System.Windows.Data.BindingGroup> 面板。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-114">The binding for each <xref:System.Windows.Controls.TextBox> is added to the <xref:System.Windows.Data.BindingGroup> of the panel.</span></span>  
  
 <span data-ttu-id="8ecc3-115">您將新增<xref:System.Windows.Controls.ValidationRule>物件至<xref:System.Windows.Data.BindingGroup>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-115">You add <xref:System.Windows.Controls.ValidationRule> objects to a <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="8ecc3-116"><xref:System.Windows.Data.BindingGroup>的第一個參數當做傳遞<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法時<xref:System.Windows.Controls.ValidationRule>執行。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-116">The <xref:System.Windows.Data.BindingGroup> is passed as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method when the <xref:System.Windows.Controls.ValidationRule> runs.</span></span> <span data-ttu-id="8ecc3-117">您可以使用<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>或<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>上的方法<xref:System.Windows.Data.BindingGroup>以取得建議的值的物件，而<xref:System.Windows.Data.BindingGroup.Items%2A>屬性取得繫結來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-117">You can use the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method on that <xref:System.Windows.Data.BindingGroup> to get the proposed values of the object, and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the sources of the bindings.</span></span>  
  
 <span data-ttu-id="8ecc3-118">A<xref:System.Windows.Data.BindingGroup>更新在相同的時間，而不是個別更新每個繫結的繫結的來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-118">A <xref:System.Windows.Data.BindingGroup> updates the sources of the binding at the same time instead of each binding being updated separately.</span></span> <span data-ttu-id="8ecc3-119">當您呼叫其中一個方法來驗證資料 (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>， <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>，或<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>)，每個繫結<xref:System.Windows.Controls.TextBox>在此範例會進行驗證，並可能進行更新。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-119">When you call one of the methods to validate the data (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>, <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>, or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>), the binding for each <xref:System.Windows.Controls.TextBox> in the example is validated and potentially updated.</span></span> <span data-ttu-id="8ecc3-120">繫結時的一部分<xref:System.Windows.Data.BindingGroup>，直到您呼叫不會更新繫結來源<xref:System.Windows.Data.BindingGroup.UpdateSources%2A>或是<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>上<xref:System.Windows.Data.BindingGroup>，除非您明確設定<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-120">When a binding is part of a <xref:System.Windows.Data.BindingGroup>, the source of the binding is not updated until you call <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> or <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> on the <xref:System.Windows.Data.BindingGroup>, unless you explicitly set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ecc3-121">下列範例會建立應用程式會提示使用者輸入的描述和價格項目和供應項目到期的日期。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-121">The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires.</span></span> <span data-ttu-id="8ecc3-122">應用程式會顯示在表單下方的項目目前的資訊。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-122">The application displays the current information for the item below the form.</span></span> <span data-ttu-id="8ecc3-123">使用者可以提交，或取消所做的變更。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-123">The user can submit or cancel the changes.</span></span>  
  
 <span data-ttu-id="8ecc3-124">應用程式會執行下列命令來達成此行為。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-124">The application does the following to achieve this behavior.</span></span>  
  
-   <span data-ttu-id="8ecc3-125">會建立<xref:System.Windows.Data.BindingGroup>並將它加入根<xref:System.Windows.Controls.StackPanel>當它建立[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]應用程式。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-125">Creates a <xref:System.Windows.Data.BindingGroup> and adds it the root <xref:System.Windows.Controls.StackPanel> when it creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of the application.</span></span>  
  
-   <span data-ttu-id="8ecc3-126">呼叫<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>， <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>，和<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>若要啟用的應用程式的邏輯中回復變更。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-126">Calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, and <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in the application's logic to enable rolling back changes.</span></span>  
  
-   <span data-ttu-id="8ecc3-127">呼叫<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>在<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法來取得使用者的輸入，然後檢查 透過 100 元的項目可在至少 7 天。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-127">Calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in a <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.</span></span>  
  
 <span data-ttu-id="8ecc3-128">下列範例會建立[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]應用程式。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-128">The following example creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of the application.</span></span> <span data-ttu-id="8ecc3-129">根目錄<xref:System.Windows.Controls.StackPanel>已經<xref:System.Windows.Data.BindingGroup>包含<xref:System.Windows.Controls.ValidationRule>來驗證項目，如先前所述。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-129">The root <xref:System.Windows.Controls.StackPanel> has a <xref:System.Windows.Data.BindingGroup> that contains a <xref:System.Windows.Controls.ValidationRule> that validates the item, as described previously.</span></span> <span data-ttu-id="8ecc3-130">上的繫結物件`Price`屬性和`OfferExpires`屬性會變成一部分<xref:System.Windows.Data.BindingGroup>每個繫結，且<xref:System.Windows.Controls.ValidationRule>藉此確定價格和日期，分別是有效的值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-130">The binding objects on the `Price` property and the `OfferExpires` property become part of the <xref:System.Windows.Data.BindingGroup> and each binding has a <xref:System.Windows.Controls.ValidationRule> to make sure that price and date, respectively, are valid values.</span></span> <span data-ttu-id="8ecc3-131">之前執行的個別屬性的驗證規則<xref:System.Windows.Controls.ValidationRule>上<xref:System.Windows.Data.BindingGroup>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-131">The validation rules for the individual properties run before the <xref:System.Windows.Controls.ValidationRule> on the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 <span data-ttu-id="8ecc3-132">下列範例會示範應用程式的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-132">The following example shows the event handlers for the application.</span></span> <span data-ttu-id="8ecc3-133">當使用者按一下 [提交] 按鈕時，應用程式會呼叫<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>逐一執行這<xref:System.Windows.Controls.ValidationRule>相關聯<xref:System.Windows.Data.BindingGroup>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-133">When the user clicks the Submit button, the application calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to run each <xref:System.Windows.Controls.ValidationRule> that is associated with the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="8ecc3-134">如果每個<xref:System.Windows.Controls.ValidationRule>成功，<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>將值儲存至物件，並結束編輯異動。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-134">If each <xref:System.Windows.Controls.ValidationRule> succeeds, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> saves the values to the object and ends the edit transaction.</span></span> <span data-ttu-id="8ecc3-135">如果<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>會成功，應用程式開始另一個編輯異動。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-135">If <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> is successful, the application begins another edit transaction.</span></span> <span data-ttu-id="8ecc3-136">當<xref:System.Windows.Controls.ValidationRule>失敗，請<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>因為應用程式設定，就會發生事件<xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A>要`true`上<xref:System.Windows.Data.BindingGroup>（在上述範例中）。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-136">When a <xref:System.Windows.Controls.ValidationRule> fails, the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event occurs because the application set <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` on the <xref:System.Windows.Data.BindingGroup> (in the previous example).</span></span> <span data-ttu-id="8ecc3-137">`ItemError` 控制代碼<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>事件，並顯示給使用者的驗證錯誤的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-137">`ItemError` handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event and displays information about the validation error to the user.</span></span> <span data-ttu-id="8ecc3-138">此範例也會處理<xref:System.Windows.FrameworkElement.Loaded>事件<xref:System.Windows.Controls.StackPanel>並<xref:System.Windows.Controls.Primitives.ButtonBase.Click>事件**取消** 按鈕。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-138">The example also handles the <xref:System.Windows.FrameworkElement.Loaded> event for the <xref:System.Windows.Controls.StackPanel> and the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event for the **Cancel** button.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#WindowLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#windowlogic)]
 [!code-vb[BindingGroupSnippets#WindowLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#windowlogic)]  
  
 <span data-ttu-id="8ecc3-139">下列範例顯示的自訂<xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`，已加入<xref:System.Windows.Data.BindingGroup>中第一個範例。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-139">The following example shows the custom <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, which was added to the <xref:System.Windows.Data.BindingGroup> in the first example.</span></span> <span data-ttu-id="8ecc3-140"><xref:System.Windows.Controls.ValidationRule>會使用<xref:System.Windows.Data.BindingGroup>在其<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法來取得使用者輸入表單，並檢查，如果項目超過 $100 元即可，它可在至少 7 天的值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-140">The <xref:System.Windows.Controls.ValidationRule> uses the <xref:System.Windows.Data.BindingGroup> in its <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BindingGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BindingGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ecc3-141">初始化 <see cref="T:System.Windows.Data.BindingGroup" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-141">Initializes a new instance of the <see cref="T:System.Windows.Data.BindingGroup" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="bindingGroup.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ecc3-142">開始對 <see cref="T:System.Windows.Data.BindingGroup" /> 中的來源，進行編輯異動。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-142">Begins an edit transaction on the sources in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-143">如果中的來源<xref:System.Windows.Data.BindingGroup>支援捨棄暫止的變更，您可以呼叫<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>若要開始編輯異動，請呼叫<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>若要儲存暫止的變更，請呼叫<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>捨棄暫止的變更。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-143">If the sources in the <xref:System.Windows.Data.BindingGroup> support discarding pending changes, you can call <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to begin the edit transaction, call <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes, call <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes.</span></span>  
  
 <span data-ttu-id="8ecc3-144">中每個物件<xref:System.Windows.Data.BindingGroup.Items%2A>可實<xref:System.ComponentModel.IEditableObject>，<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>呼叫 <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8ecc3-144">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> calls <xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ecc3-145">下列範例會呼叫<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>開始編輯異動的視窗載入時。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-145">The following example calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> when a window loads to begin the edit transaction.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt; BindingExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingExpressionBase&gt; BindingExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingExpressions As Collection(Of BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ BindingExpressions { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingExpressionBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingExpressions : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;" Usage="System.Windows.Data.BindingGroup.BindingExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingExpressionBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ecc3-146">取得 <see cref="T:System.Windows.Data.BindingExpression" /> 物件的集合，這類物件包含 <see cref="T:System.Windows.Data.BindingGroup" /> 中各個繫結的資訊。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-146">Gets a collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each Binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="8ecc3-147"><see cref="T:System.Windows.Data.BindingExpression" /> 物件的集合，這類物件包含 <see cref="T:System.Windows.Data.BindingGroup" /> 中各個繫結的資訊。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-147">A collection of <see cref="T:System.Windows.Data.BindingExpression" /> objects that contains information for each binding in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-148">A<xref:System.Windows.Data.BindingExpression>屬於<xref:System.Windows.Data.BindingGroup>發生下列情況的其中一個：</span><span class="sxs-lookup"><span data-stu-id="8ecc3-148">A <xref:System.Windows.Data.BindingExpression> belongs to a <xref:System.Windows.Data.BindingGroup> if one of the following cases occurs:</span></span>  
  
-   <span data-ttu-id="8ecc3-149">繫結的來源並<xref:System.Windows.FrameworkElement.DataContext%2A>具有項目的<xref:System.Windows.Data.BindingGroup>是相同的物件和<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>未設定。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-149">The binding's source and the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> are the same object and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> is not set.</span></span>  
  
-   <span data-ttu-id="8ecc3-150"><xref:System.Windows.Data.BindingBase.BindingGroupName%2A>繫結屬性與<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>設定為相同的非 null 值和<xref:System.Windows.Data.BindingGroup>所屬的繫結目標項目的父項目。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-150">The <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of the binding and the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> are set to the same non-null value and the <xref:System.Windows.Data.BindingGroup> belongs to a parent element of the binding's target element.</span></span>  
  
-   <span data-ttu-id="8ecc3-151">您將新增<xref:System.Windows.Data.BindingExpression>至<xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-151">You add a <xref:System.Windows.Data.BindingExpression> to <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="bindingGroup.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ecc3-152">結束編輯異動並捨棄暫止的變更。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-152">Ends the edit transaction and discards the pending changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-153">這個方法會導致捨棄暫止的變更，如果能夠這樣做的來源物件，並結束編輯異動的來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-153">This method causes the sources to discard the pending changes, if a source object is capable of doing so and end the edit transaction.</span></span> <span data-ttu-id="8ecc3-154">然後此方法會更新目標屬性的已儲存的來源值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-154">Then the method updates the target properties with the saved source values.</span></span>  
  
 <span data-ttu-id="8ecc3-155">中每個物件<xref:System.Windows.Data.BindingGroup.Items%2A>可實<xref:System.ComponentModel.IEditableObject>，<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>呼叫 <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8ecc3-155">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> calls <xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ecc3-156">下列範例會呼叫<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>捨棄暫止的變更，然後呼叫<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>準備要重新編輯的來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-156">The following example calls <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> to discard the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#CancelEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#canceledit)]
 [!code-vb[BindingGroupSnippets#CancelEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#canceledit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRestoreValues">
      <MemberSignature Language="C#" Value="public bool CanRestoreValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRestoreValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRestoreValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRestoreValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRestoreValues : bool" Usage="System.Windows.Data.BindingGroup.CanRestoreValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ecc3-157">取得值，這個值表示繫結中的每一個來源是否可以捨棄暫止的變更並還原為原始值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-157">Gets whether each source in the binding can discard pending changes and restore the original values.</span></span></summary>
        <value><span data-ttu-id="8ecc3-158">如果繫結中的每一個來源都可以捨棄暫止的變更並還原為原始值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-158"><see langword="true" /> if each source in the binding can discard pending changes and restore the original values; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-159">來源可以捨棄暫止的變更，如果它會實作<xref:System.ComponentModel.IEditableObject>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-159">A source can discard pending changes if it implements <xref:System.ComponentModel.IEditableObject>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommitEdit">
      <MemberSignature Language="C#" Value="public bool CommitEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CommitEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.CommitEdit" />
      <MemberSignature Language="VB.NET" Value="Public Function CommitEdit () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CommitEdit();" />
      <MemberSignature Language="F#" Value="member this.CommitEdit : unit -&gt; bool" Usage="bindingGroup.CommitEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ecc3-160">如果所有驗證規則都成功，這個方法會執行所有的 <see cref="T:System.Windows.Controls.ValidationRule" /> 物件，並更新繫結來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-160">Runs all the <see cref="T:System.Windows.Controls.ValidationRule" /> objects and updates the binding sources if all validation rules succeed.</span></span></summary>
        <returns><span data-ttu-id="8ecc3-161">如果每一個 <see cref="T:System.Windows.Controls.ValidationRule" /> 都成功，而且這些值都被認可到來源，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-161"><see langword="true" /> if every <see cref="T:System.Windows.Controls.ValidationRule" /> succeeds and the values are committed to the sources; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-162">如果每一個<xref:System.Windows.Controls.ValidationRule>成功，這個方法會導致認可暫止的變更並結束編輯異動，來源的來源物件是否能夠這樣做。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-162">If every <xref:System.Windows.Controls.ValidationRule> succeeds, this method causes the sources to commit the pending changes and end the edit transaction, if a source object is capable of doing so.</span></span>  
  
 <span data-ttu-id="8ecc3-163">中每個物件<xref:System.Windows.Data.BindingGroup.Items%2A>可實<xref:System.ComponentModel.IEditableObject>，<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>呼叫 <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="8ecc3-163">For each object in <xref:System.Windows.Data.BindingGroup.Items%2A> that implements <xref:System.ComponentModel.IEditableObject>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> calls <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=nameWithType></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ecc3-164">下列範例會呼叫<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>來儲存暫止的變更，然後呼叫<xref:System.Windows.Data.BindingGroup.BeginEdit%2A>準備要重新編輯的來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-164">The following example calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to save the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BeginEdit](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#beginedit)]
 [!code-vb[BindingGroupSnippets#BeginEdit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#beginedit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object item, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object item, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (item As Object, propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ item, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetValue : obj * string -&gt; obj" Usage="bindingGroup.GetValue (item, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="8ecc3-165">包含指定之屬性的物件。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-165">The object that contains the specified property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="8ecc3-166">要取得其建議值的屬性。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-166">The property whose proposed value to get.</span></span></param>
        <summary><span data-ttu-id="8ecc3-167">傳回指定之屬性與項目的建議值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-167">Returns the proposed value for the specified property and item.</span></span></summary>
        <returns><span data-ttu-id="8ecc3-168">建議的屬性值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-168">The proposed property value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-169">使用這個方法在<xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType>方法來取得要認可至來源的值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-169">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="8ecc3-170">傳回值的類型取決於處的階段<xref:System.Windows.Controls.ValidationRule>，就會發生。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-170">The type of the return value depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="8ecc3-171">比方說，如果<xref:System.Windows.Controls.TextBox>資料繫結至整數類型的屬性和<xref:System.Windows.Controls.ValidationRule>呼叫<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>具有其<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>設定為<xref:System.Windows.Controls.ValidationStep.RawProposedValue>，方法會傳回字串。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-171">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer and the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>, the method returns a string.</span></span> <span data-ttu-id="8ecc3-172">如果<xref:System.Windows.Controls.ValidationRule>有其<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>設定為<xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>，此方法會傳回繫結的轉換器會傳回任何類型。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-172">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the method returns whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="8ecc3-173">在此範例中，<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>通常會傳回一個整數。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-173">In this example, <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> usually returns an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ecc3-174">下列範例是會提示使用者輸入多個客戶，並將銷售人員指派給每位客戶的應用程式的一部分。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-174">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="8ecc3-175">應用程式會檢查銷售人員和客戶屬於相同的區域。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-175">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="8ecc3-176">此範例將示範<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法，它會使用<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>方法，以取得客戶輸入的值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-176">The example shows the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, which uses the <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method to get values that the customer entered.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#itembindgroupvalidationrule)]
 [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#itembindgroupvalidationrule)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8ecc3-177">指定之項目和屬性沒有繫結。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-177">There is not a binding for the specified item and property.</span></span></exception>
        <exception cref="T:System.Windows.Data.ValueUnavailableException"><span data-ttu-id="8ecc3-178">無法取得指定之屬性的值，因為發生轉換錯誤，或先前的驗證規則失敗。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-178">The value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasValidationError">
      <MemberSignature Language="C#" Value="public bool HasValidationError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidationError { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidationError : bool" Usage="System.Windows.Data.BindingGroup.HasValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ecc3-179">取得值，指出 <see cref="T:System.Windows.Data.BindingGroup" /> 是否擁有失敗的驗證規則。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-179">Gets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule.</span></span></summary>
        <value><span data-ttu-id="8ecc3-180">如果 <see cref="T:System.Windows.Data.BindingGroup" /> 有失敗的驗證規則，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-180"><see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> has a failed validation rule; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Windows.Data.BindingGroup.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ecc3-181">取得或設定值，指出 <see cref="T:System.Windows.Data.BindingGroup" /> 是否含有尚未寫入至來源的建議值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-181">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source.</span></span></summary>
        <value><span data-ttu-id="8ecc3-182">如果 <see cref="T:System.Windows.Data.BindingGroup" /> 含有尚未寫入至來源的建議值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-182"><see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> contains a proposed value that has not been written to the source; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IList Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Items { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IList" Usage="System.Windows.Data.BindingGroup.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ecc3-183">取得 <see cref="T:System.Windows.Data.BindingGroup" /> 中之 Binding 物件所使用的來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-183">Gets the sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="8ecc3-184"><see cref="T:System.Windows.Data.BindingGroup" /> 中之 Binding 物件所使用的來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-184">The sources that are used by the Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-185">用來做為來源新增至每個物件<xref:System.Windows.Data.BindingGroup.Items%2A>屬性的一次，即使物件使用於多個繫結時做為來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-185">Each object that is used as a source is added into the <xref:System.Windows.Data.BindingGroup.Items%2A> property once, even if the object is used as the source for multiple bindings.</span></span> <span data-ttu-id="8ecc3-186">通常是在只有一個項目<xref:System.Windows.Data.BindingGroup.Items%2A>，這是物件<xref:System.Windows.FrameworkElement.DataContext%2A>使用的項目<xref:System.Windows.Data.BindingGroup>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-186">Often, there is just one item in <xref:System.Windows.Data.BindingGroup.Items%2A>, which is the object that is the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that uses the <xref:System.Windows.Data.BindingGroup>.</span></span> <span data-ttu-id="8ecc3-187">可能會<xref:System.Windows.Data.BindingGroup>有多個來源，不過。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-187">It is possible for a <xref:System.Windows.Data.BindingGroup> to have multiple sources, however.</span></span> <span data-ttu-id="8ecc3-188">例如，如果繫結物件會共用相同<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>但使用不同的來源物件，當做來源使用的每個物件處於<xref:System.Windows.Data.BindingGroup.Items%2A>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-188">For example, if Binding objects share the same <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> but use different source objects, each object that is used as a source is in <xref:System.Windows.Data.BindingGroup.Items%2A>.</span></span>  
  
 <span data-ttu-id="8ecc3-189">也可以在多個物件<xref:System.Windows.Data.BindingGroup.Items%2A>如果繫結的路徑會解析至巢狀屬性的來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-189">There can also be multiple objects in <xref:System.Windows.Data.BindingGroup.Items%2A> if the path of a Binding resolves to a nested property of the source.</span></span> <span data-ttu-id="8ecc3-190">例如，假設<xref:System.Windows.Controls.TextBox>控制項的繫結是一部分<xref:System.Windows.Data.BindingGroup>並將其<xref:System.Windows.FrameworkElement.DataContext%2A>是`Customer`物件，其中包含型別的屬性`Address`。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-190">For example, suppose a <xref:System.Windows.Controls.TextBox> control's binding is a part of a <xref:System.Windows.Data.BindingGroup> and its <xref:System.Windows.FrameworkElement.DataContext%2A> is a `Customer` object, which has a property of type `Address`.</span></span> <span data-ttu-id="8ecc3-191">如果<xref:System.Windows.Data.Binding.Path%2A>的<xref:System.Windows.Data.Binding>是`Address.ZipCode`屬性，`Address`新增至<xref:System.Windows.Data.BindingGroup.Items%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-191">If the <xref:System.Windows.Data.Binding.Path%2A> of the <xref:System.Windows.Data.Binding> is the `Address.ZipCode` property, the `Address` is added to the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ecc3-192">下列範例會是一部分的應用程式，會檢查使用者是否已設定為相同值的兩個物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-192">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="8ecc3-193">第一個範例會建立兩個<xref:System.Windows.Controls.TextBox>控制項，其中每一個都是資料繫結至不同的來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-193">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="8ecc3-194">第一個繫結<xref:System.Windows.Controls.TextBox>取得它的來源`object1`，從<xref:System.Windows.FrameworkElement.DataContext%2A>的<xref:System.Windows.Controls.TextBox>控制項的父項目 ( <xref:System.Windows.Controls.StackPanel>)。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-194">The binding of the first <xref:System.Windows.Controls.TextBox> gets its source, `object1`, from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.TextBox> control's parent element (the <xref:System.Windows.Controls.StackPanel>).</span></span> <span data-ttu-id="8ecc3-195">第二個<xref:System.Windows.Controls.TextBox>，繫結來源設為`object2`。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-195">On the second <xref:System.Windows.Controls.TextBox>, the source of the binding is set to `object2`.</span></span> <span data-ttu-id="8ecc3-196">此範例也會建立<xref:System.Windows.Controls.Label>顯示驗證錯誤。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-196">The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="8ecc3-197">下列範例所示<xref:System.Windows.Controls.ValidationRule>，先前的範例使用。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-197">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="8ecc3-198">在 <xref:System.Windows.Controls.ValidationRule.Validate%2A>方法，此範例會取得每個來源物件<xref:System.Windows.Data.BindingGroup>並檢查物件的屬性是否相等。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-198">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Data.BindingGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ecc3-199">取得或設定名稱，這個名稱會識別用來包含和排除 <see cref="T:System.Windows.Data.BindingGroup" /> 中 Binding 物件的 <see cref="T:System.Windows.Data.BindingGroup" /> 。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-199">Gets or sets the name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />, which can be used to include and exclude Binding objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="8ecc3-200">可識別 <see cref="T:System.Windows.Data.BindingGroup" /> 的名稱。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-200">The name that identifies the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-201">如果<xref:System.Windows.Data.BindingGroup.Name%2A>已`null`，繫結具有的相同物件的來源<xref:System.Windows.FrameworkElement.DataContext%2A>具有項目的<xref:System.Windows.Data.BindingGroup>參與<xref:System.Windows.Data.BindingGroup>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-201">If <xref:System.Windows.Data.BindingGroup.Name%2A> is `null`, bindings that have a source that is the same object as the <xref:System.Windows.FrameworkElement.DataContext%2A> of the element that has the <xref:System.Windows.Data.BindingGroup> participate in the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 <span data-ttu-id="8ecc3-202">您可以包含具有不同來源的繫結<xref:System.Windows.FrameworkElement.DataContext%2A>具有父項目的<xref:System.Windows.Data.BindingGroup>藉由設定<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>而<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>屬性繫結至相同的值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-202">You can include bindings that have a source that is different from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to the same value.</span></span> <span data-ttu-id="8ecc3-203">您可以排除具有相同的來源的繫結<xref:System.Windows.FrameworkElement.DataContext%2A>具有父項目的<xref:System.Windows.Data.BindingGroup>藉由設定<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>而<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>屬性繫結至不同的值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-203">You can exclude bindings that have the same source as <xref:System.Windows.FrameworkElement.DataContext%2A> of the parent element that has the <xref:System.Windows.Data.BindingGroup> by setting <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> property of a binding to different values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ecc3-204">下列範例會是一部分的應用程式，會檢查使用者是否已設定為相同值的兩個物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-204">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="8ecc3-205">第一個範例會建立兩個<xref:System.Windows.Controls.TextBox>控制項，其中每一個都是資料繫結至不同的來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-205">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source.</span></span> <span data-ttu-id="8ecc3-206">第一個繫結<xref:System.Windows.Controls.TextBox>屬於<xref:System.Windows.Data.BindingGroup>因為<xref:System.Windows.Controls.TextBox>繼承<xref:System.Windows.FrameworkElement.DataContext%2A>並<xref:System.Windows.Data.BindingGroup>從其父代<xref:System.Windows.Controls.StackPanel>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-206">The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>.</span></span>  
  
 <span data-ttu-id="8ecc3-207">第二個繫結<xref:System.Windows.Controls.TextBox>屬於<xref:System.Windows.Data.BindingGroup>因為<xref:System.Windows.Data.BindingGroup.Name%2A>的<xref:System.Windows.Data.BindingGroup>並<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>的<xref:System.Windows.Data.Binding>都設定為`bindingGroup`。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-207">The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Data.BindingGroup.Name%2A> of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupName](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupname)]  
[!code-xaml[BindingGroupSnippets#ValidationAdornerSite](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validationadornersite)]  
  
 <span data-ttu-id="8ecc3-208">下列範例所示<xref:System.Windows.Controls.ValidationRule>，先前的範例使用。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-208">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span> <span data-ttu-id="8ecc3-209">在 <xref:System.Windows.Controls.ValidationRule.Validate%2A>方法，此範例會取得每個來源物件<xref:System.Windows.Data.BindingGroup>並檢查物件的屬性是否相等。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-209">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.BindingGroup.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ecc3-210">取得或設定值，這個值會表示當 <see cref="E:System.Windows.Controls.Validation.Error" /> 的狀態變更時，是否會發生 <see cref="T:System.Windows.Controls.ValidationRule" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-210">Gets or sets whether the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes.</span></span></summary>
        <value><span data-ttu-id="8ecc3-211">當 <see cref="E:System.Windows.Controls.Validation.Error" /> 的狀態變更時，如果發生 <see cref="T:System.Windows.Controls.ValidationRule" /> 事件，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-211"><see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> event occurs when the state of a <see cref="T:System.Windows.Controls.ValidationRule" /> changes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8ecc3-212">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-212">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-213"><xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>附加的事件發生在具有的項目上<xref:System.Windows.Data.BindingGroup>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-213">The <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event occurs on the element that has the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ecc3-214">下列範例會建立<xref:System.Windows.Data.BindingGroup>，並設定<xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A>要`true`以便讓應用程式能夠處理<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>事件時<xref:System.Windows.Controls.ValidationRule>失敗。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-214">The following example creates a <xref:System.Windows.Data.BindingGroup> and sets <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` so that the application can handle the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event when a <xref:System.Windows.Controls.ValidationRule> fails.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="8ecc3-215">下列範例會處理<xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-215">The following example handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ErrorHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml.cs#errorhandler)]
 [!code-vb[BindingGroupSnippets#ErrorHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window1.xaml.vb#errorhandler)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.Owner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Owner As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Owner { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.DependencyObject" Usage="System.Windows.Data.BindingGroup.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ecc3-216">取得被指派這個 <see cref="T:System.Windows.Data.BindingGroup" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-216">Gets the object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span></span></summary>
        <value><span data-ttu-id="8ecc3-217">被指派這個<see cref="T:System.Windows.Data.BindingGroup" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-217">The object that this <see cref="T:System.Windows.Data.BindingGroup" /> is assigned to.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SharesProposedValues">
      <MemberSignature Language="C#" Value="public bool SharesProposedValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharesProposedValues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberSignature Language="VB.NET" Value="Public Property SharesProposedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SharesProposedValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SharesProposedValues : bool with get, set" Usage="System.Windows.Data.BindingGroup.SharesProposedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ecc3-218">取得或設定值，這個值指出 <see cref="T:System.Windows.Data.BindingGroup" /> 是否重複使用尚未認可至來源的目標值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-218">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source.</span></span></summary>
        <value><span data-ttu-id="8ecc3-219">如果 <see cref="T:System.Windows.Data.BindingGroup" /> 重複使用尚未認可至來源的目標值則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-219"><see langword="true" /> if the <see cref="T:System.Windows.Data.BindingGroup" /> reuses target values that have not been committed to the source; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8ecc3-220">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-220">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-221">建議的值是值已變更繫結的目標，但不是已認可到來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-221">A proposed value is a value that has been changed on the target of a binding, but has not been committed to the source.</span></span> <span data-ttu-id="8ecc3-222">例如，假設在沒有雙向繫結<xref:System.Windows.Controls.TextBox>而<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>屬性設定為<xref:System.Windows.Data.UpdateSourceTrigger.Explicit>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-222">For example, suppose that there is a two-way binding on a <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property is set to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>.</span></span> <span data-ttu-id="8ecc3-223">如果使用者變更的值<xref:System.Windows.Controls.TextBox>，建議的值是在值<xref:System.Windows.Controls.TextBox>認可至來源之前。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-223">If the user changes the value of the <xref:System.Windows.Controls.TextBox>, the proposed value is the value that is in the <xref:System.Windows.Controls.TextBox> before it is committed to source.</span></span>  
  
 <span data-ttu-id="8ecc3-224">當<xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A>是`true`，則<xref:System.Windows.Data.BindingGroup>當一個繫結離開 BindingGroup 並與相同來源的另一個繫結加入 BindingGroup 使用建議的值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-224">When <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> is `true`, the <xref:System.Windows.Data.BindingGroup> uses the proposed value when one binding leaves the BindingGroup and another Binding with the same source joins the BindingGroup.</span></span>  <span data-ttu-id="8ecc3-225">例如，假設應用程式可讓使用者編輯多個欄位，並按一下按鈕來更新的來源物件。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-225">For example, suppose that an application enables a user to edit multiple fields and update the source object by clicking a button.</span></span> <span data-ttu-id="8ecc3-226">當欄位不正在編輯時，應用程式會顯示在<xref:System.Windows.Controls.TextBlock>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-226">When a field is not being edited, the application displays it in a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="8ecc3-227">當使用者開始編輯欄位時，將會取代應用程式<xref:System.Windows.Controls.TextBlock>與<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-227">When the user begins to edit a field, the application replaces the <xref:System.Windows.Controls.TextBlock> with a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="8ecc3-228">當使用者完成編輯該欄位時，將會取代應用程式<xref:System.Windows.Controls.TextBox>與<xref:System.Windows.Controls.TextBlock>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-228">When the user finishes editing that field, the application replaces the <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="8ecc3-229">因為直到使用者按一下按鈕時，就不會更新來源，必須是讓<xref:System.Windows.Controls.TextBlock>來顯示建議的值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-229">Because the source is not updated until the user clicks the button, there must be a way for the <xref:System.Windows.Controls.TextBlock> to display the proposed value.</span></span> <span data-ttu-id="8ecc3-230">藉由設定<xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A>至`true`，應用程式就會顯示使用者的變更至欄位即使尚未更新來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-230">By setting <xref:System.Windows.Data.BindingGroup.SharesProposedValues%2A> to `true`, the application will display the user's changes to a field even when the source has not been updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (object item, string propertyName, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(object item, string propertyName, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (item As Object, propertyName As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(System::Object ^ item, System::String ^ propertyName, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : obj * string *  -&gt; bool" Usage="bindingGroup.TryGetValue (item, propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="8ecc3-231">包含指定之屬性的物件。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-231">The object that contains the specified property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="8ecc3-232">要取得其建議值的屬性。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-232">The property whose proposed value to get.</span></span></param>
        <param name="value"><span data-ttu-id="8ecc3-233">當這個方法傳回時，傳回值會包含代表建議之屬性值的物件。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-233">When this method returns, contains an object that represents the proposed property value.</span></span> <span data-ttu-id="8ecc3-234">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-234">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="8ecc3-235">嘗試取得指定之屬性與項目的建議值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-235">Attempts to get the proposed value for the specified property and item.</span></span></summary>
        <returns><span data-ttu-id="8ecc3-236">如果這個值就是指定之屬性的建議值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-236"><see langword="true" /> if value is the proposed value for the specified property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-237"><xref:System.Windows.Data.BindingGroup.TryGetValue%2A> 傳回`false`如果沒有指定的項目和屬性的繫結或指定的屬性值不是可用的因為發生轉換錯誤，或因為先前的驗證規則失敗。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-237"><xref:System.Windows.Data.BindingGroup.TryGetValue%2A> returns `false` if there is not a binding for the specified item and property or if the value of the specified property is not available, due to a conversion error or because an earlier validation rule failed.</span></span>  
  
 <span data-ttu-id="8ecc3-238">使用這個方法在<xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType>方法來取得要認可至來源的值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-238">Use this method in the <xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=nameWithType> method to get the value to be committed to the source.</span></span> <span data-ttu-id="8ecc3-239">型別`value`處的階段而定<xref:System.Windows.Controls.ValidationRule>，就會發生。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-239">The type `value` depends on the stage at which the <xref:System.Windows.Controls.ValidationRule> occurs.</span></span> <span data-ttu-id="8ecc3-240">例如，如果<xref:System.Windows.Controls.TextBox>資料繫結至型別整數的屬性`value`是一個字串，如果<xref:System.Windows.Controls.ValidationRule>呼叫<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>具有其<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>設為<xref:System.Windows.Controls.ValidationStep.RawProposedValue>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-240">For example, if a <xref:System.Windows.Controls.TextBox> is data bound to a property of type integer, `value` is a string if the <xref:System.Windows.Controls.ValidationRule> that calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.RawProposedValue>.</span></span> <span data-ttu-id="8ecc3-241">如果<xref:System.Windows.Controls.ValidationRule>有其<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>設為<xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>的型別`value`是由繫結的轉換器會傳回任何類型。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-241">If the <xref:System.Windows.Controls.ValidationRule> has its <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> set to <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue>, the type of `value` is whatever type that is returned by the binding's converter.</span></span> <span data-ttu-id="8ecc3-242">在此範例中，`value`通常是整數。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-242">In this example, `value` is usually an integer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ecc3-243">下列範例會建立自訂<xref:System.Windows.Controls.ValidationRule>名為`ValidateDateAndPrice`。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-243">The following example creates a custom <xref:System.Windows.Controls.ValidationRule> named `ValidateDateAndPrice`.</span></span> <span data-ttu-id="8ecc3-244">在 <xref:System.Windows.Controls.ValidationRule.Validate%2A>方法，此範例會使用<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>方法和<xref:System.Windows.Data.BindingGroup.Items%2A>屬性來取得使用者在表單中輸入的值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-244">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example uses the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> method and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the values the user entered into the form.</span></span> <span data-ttu-id="8ecc3-245">然後此範例會檢查，是否項目超過 $100 元即可，它可在至少 7 天。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-245">Then the example checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span> <span data-ttu-id="8ecc3-246">這個範例屬於較大範例的上<xref:System.Windows.Data.BindingGroup>類別</span><span class="sxs-lookup"><span data-stu-id="8ecc3-246">This example is part of a larger example on the <xref:System.Windows.Data.BindingGroup> class</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSources">
      <MemberSignature Language="C#" Value="public bool UpdateSources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UpdateSources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.UpdateSources" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateSources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UpdateSources();" />
      <MemberSignature Language="F#" Value="member this.UpdateSources : unit -&gt; bool" Usage="bindingGroup.UpdateSources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ecc3-247">如果所有驗證規則都成功，則會對此繫結和屬性 <see cref="T:System.Windows.Controls.ValidationRule" /> 設定為 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" />、<see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> 或 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> 的 <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> 物件執行該轉換子，並將目標值儲存至來源物件。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-247">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />, <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />, or <see cref="F:System.Windows.Controls.ValidationStep.UpdatedValue" /> and saves the values of the targets to the source objects if all the validation rules succeed.</span></span></summary>
        <returns><span data-ttu-id="8ecc3-248">如果所有驗證規則成功，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-248"><see langword="true" /> if all validation rules succeed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-249">這個方法會更新來源，如果每一個<xref:System.Windows.Controls.ValidationRule>成功，但它不會造成要認可暫止的變更並結束編輯異動的來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-249">This method updates the source if every <xref:System.Windows.Controls.ValidationRule> succeeds, but it does not cause the sources to commit the pending changes and end the edit transaction.</span></span> <span data-ttu-id="8ecc3-250">也就是說，如果來源物件實作<xref:System.ComponentModel.IEditableObject>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-250">That is, if the source object implements <xref:System.ComponentModel.IEditableObject>.</span></span> <span data-ttu-id="8ecc3-251">呼叫這個方法不會造成<xref:System.ComponentModel.IEditableObject.EndEdit%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-251">Calling this method does not cause <xref:System.ComponentModel.IEditableObject.EndEdit%2A> to be called.</span></span> <span data-ttu-id="8ecc3-252">使用<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>方法具有認可暫止的變更的來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-252">Use the <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> method to have the sources commit the pending changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ecc3-253">下列範例是會提示使用者輸入多個客戶，並將銷售人員指派給每位客戶的應用程式的一部分。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-253">The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer.</span></span> <span data-ttu-id="8ecc3-254">應用程式會檢查銷售人員和客戶屬於相同的區域。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-254">The application checks that the sales representative and the customer belong to the same region.</span></span> <span data-ttu-id="8ecc3-255">此範例會呼叫<xref:System.Windows.Data.BindingGroup.UpdateSources%2A>驗證繫結，並將值儲存至來源，如果所有驗證規則都成功。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-255">The example calls <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> to validate the bindings and save the values to the source if all the validation rules succeed.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#UpdateSources](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window2.xaml.cs#updatesources)]
 [!code-vb[BindingGroupSnippets#UpdateSources](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window2.xaml.vb#updatesources)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataError">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataError : bool with get, set" Usage="System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ecc3-256">取得或設定值，這個值表示是否要包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-256">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span></span></summary>
        <value><span data-ttu-id="8ecc3-257"><see langword="true" /> 表示包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-257"><see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8ecc3-258">預設值為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-258">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-259">當<xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A>已`true`，會檢查繫結，並報告由實作的資料來源所引發的錯誤<xref:System.ComponentModel.INotifyDataErrorInfo>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-259">When <xref:System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateWithoutUpdate">
      <MemberSignature Language="C#" Value="public bool ValidateWithoutUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateWithoutUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingGroup.ValidateWithoutUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateWithoutUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateWithoutUpdate();" />
      <MemberSignature Language="F#" Value="member this.ValidateWithoutUpdate : unit -&gt; bool" Usage="bindingGroup.ValidateWithoutUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ecc3-260">對此繫結和屬性 <see cref="T:System.Windows.Controls.ValidationRule" /> 設定為 <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> 或 <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> 的 <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" /> 物件執行轉換子。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-260">Runs the converter on the binding and the <see cref="T:System.Windows.Controls.ValidationRule" /> objects that have the <see cref="P:System.Windows.Controls.ValidationRule.ValidationStep" /> property set to <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" /> or <see cref="F:System.Windows.Controls.ValidationStep.ConvertedProposedValue" />.</span></span></summary>
        <returns><span data-ttu-id="8ecc3-261">如果驗證規則成功，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-261"><see langword="true" /> if the validation rules succeed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-262">當您呼叫這個方法時，不會更新來源。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-262">The sources are not updated when you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationErrors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt; ValidationErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.Controls.ValidationError&gt; ValidationErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationErrors As ReadOnlyCollection(Of ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ ValidationErrors { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Controls::ValidationError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationErrors : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;" Usage="System.Windows.Data.BindingGroup.ValidationErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Controls.ValidationError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ecc3-263">取得導致 <see cref="T:System.Windows.Controls.ValidationError" /> 無效之 <see cref="T:System.Windows.Data.BindingGroup" /> 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-263">Gets a collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused the <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span></span></summary>
        <value><span data-ttu-id="8ecc3-264">導致 <see cref="T:System.Windows.Controls.ValidationError" /> 無效之 <see cref="T:System.Windows.Data.BindingGroup" /> 物件的集合。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-264">A collection of <see cref="T:System.Windows.Controls.ValidationError" /> objects that caused <see cref="T:System.Windows.Data.BindingGroup" /> to be invalid.</span></span>  <span data-ttu-id="8ecc3-265">如果沒有錯誤，這個值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-265">The value is <see langword="null" /> if there are no errors.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.BindingGroup.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ecc3-266">取得 <see cref="T:System.Windows.Controls.ValidationRule" /> 物件的集合，這些物件會驗證 <see cref="T:System.Windows.Data.BindingGroup" /> 中的來源物件。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-266">Gets a collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></summary>
        <value><span data-ttu-id="8ecc3-267"><see cref="T:System.Windows.Controls.ValidationRule" /> 物件的集合，這些物件會驗證 <see cref="T:System.Windows.Data.BindingGroup" /> 中的來源物件。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-267">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects that validate the source objects in the <see cref="T:System.Windows.Data.BindingGroup" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ecc3-268">當<xref:System.Windows.Controls.ValidationRule>新增至<xref:System.Windows.Data.BindingGroup>，則<xref:System.Windows.Data.BindingGroup>傳入做為第一個參數的<xref:System.Windows.Controls.ValidationRule.Validate%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-268">When a <xref:System.Windows.Controls.ValidationRule> is added to a <xref:System.Windows.Data.BindingGroup>, the <xref:System.Windows.Data.BindingGroup> is passed in as the first parameter of the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="8ecc3-269">您可以使用，以取得物件的建議的值<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>或<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>方法。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-269">You can get the proposed values of the object by using the <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> or <xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29> method.</span></span> <span data-ttu-id="8ecc3-270">您可以取得物件所來自的繫結的來源<xref:System.Windows.Data.BindingGroup.Items%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-270">You can get the objects that are the sources of the bindings from the <xref:System.Windows.Data.BindingGroup.Items%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ecc3-271">下列範例會將自訂<xref:System.Windows.Controls.ValidationRule>，`ValidateDateAndPrice`至<xref:System.Windows.Data.BindingGroup>。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-271">The following example adds the custom <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, to the <xref:System.Windows.Data.BindingGroup>.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroup](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#bindinggroup)]  
  
 <span data-ttu-id="8ecc3-272">下列範例顯示 `ValidateDateAndPrice` 類別。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-272">The following example shows the `ValidateDateAndPrice` class.</span></span> <span data-ttu-id="8ecc3-273"><xref:System.Windows.Controls.ValidationRule.Validate%2A>方法會使用<xref:System.Windows.Data.BindingGroup>以取得使用者輸入表單，並檢查，如果項目超過 $100 元即可，它可在至少 7 天的值。</span><span class="sxs-lookup"><span data-stu-id="8ecc3-273">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method uses the <xref:System.Windows.Data.BindingGroup> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>