<Type Name="MultiBinding" FullName="System.Windows.Data.MultiBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="294b7b6af0117116a9d26758620b1f71e08c5302" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56397190" /></Metadata><TypeSignature Language="C#" Value="public class MultiBinding : System.Windows.Data.BindingBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MultiBinding extends System.Windows.Data.BindingBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.MultiBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class MultiBinding&#xA;Inherits BindingBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultiBinding : System::Windows::Data::BindingBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type MultiBinding = class&#xA;    inherit BindingBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Bindings")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>描述附加至單一繫結目標屬性的 <see cref="T:System.Windows.Data.Binding" /> 物件集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以指定多個繫結中的<xref:System.Windows.Data.MultiBinding>物件。 當您使用<xref:System.Windows.Data.MultiBinding>物件轉換子，它會產生這些繫結的值為基礎的繫結目標的最後一個值。 例如，色彩可能會計算來自紅色、 藍色以及綠色值，可以是來自相同或不同的繫結來源物件的值。 值，當移動時從目標到來源，目標屬性值會轉譯成一組回送入繫結的值。  
  
 值<xref:System.Windows.Data.MultiBinding.Mode%2A>並<xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A>屬性會決定功能的<xref:System.Windows.Data.MultiBinding>，除非個別的繫結會覆寫這些屬性的預設值為使用集合中的所有繫結。 比方說，如果<xref:System.Windows.Data.MultiBinding.Mode%2A>上的屬性<xref:System.Windows.Data.MultiBinding>物件設定為<xref:System.Windows.Data.BindingMode.TwoWay>，然後在集合中的所有繫結會被視為<xref:System.Windows.Data.BindingMode.TwoWay>除非您設定不同<xref:System.Windows.Data.MultiBinding.Mode%2A>上其中一個繫結的值明確。 如需詳細資訊，請參閱 <<c0> <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=nameWithType> 和<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=nameWithType>屬性。  
  
 <xref:System.Windows.Data.MultiBinding> 目前僅支援類型 <xref:System.Windows.Data.Binding> 的物件，而非 <xref:System.Windows.Data.MultiBinding> 或 <xref:System.Windows.Data.PriorityBinding>。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.IMultiValueConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultiBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultiBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Data.MultiBinding" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bindings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingBase&gt; Bindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Data.BindingBase&gt; Bindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.Bindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bindings As Collection(Of BindingBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingBase ^&gt; ^ Bindings { System::Collections::ObjectModel::Collection&lt;System::Windows::Data::BindingBase ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Bindings : System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingBase&gt;" Usage="System.Windows.Data.MultiBinding.Bindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Data.BindingBase&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在這個 <see cref="T:System.Windows.Data.MultiBinding" /> 執行個體中，取得 <see cref="T:System.Windows.Data.Binding" /> 物件的集合。</summary>
        <value><see cref="T:System.Windows.Data.Binding" /> 物件的集合。 <see cref="T:System.Windows.Data.MultiBinding" /> 目前僅支援類型 <see cref="T:System.Windows.Data.Binding" /> 的物件，而非 <see cref="T:System.Windows.Data.MultiBinding" /> 或 <see cref="T:System.Windows.Data.PriorityBinding" />。 將 <see cref="T:System.Windows.Data.Binding" /> 子系加入 <see cref="T:System.Windows.Data.MultiBinding" /> 物件中會隱含將子系加入 <see cref="T:System.Windows.Data.MultiBinding" /> 物件的 <see cref="T:System.Windows.Data.BindingBase" /> 集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  此屬性可以在設定[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]只能藉由使用的語法，就會顯示，或藉由存取的集合物件，使用的各種方法，例如`Add`。 用來存取的集合物件的屬性是唯讀，而該集合本身是讀取/寫入。  
  
<a name="xamlPropertyElementUsage_Bindings"></a>   
## <a name="xaml-property-element-usage"></a>XAML 屬性項目用法  
  
```  
<object>  
  oneOrMoreBindings  
</object>  
  
```  
  
<a name="xamlValues_Bindings"></a>   
## <a name="xaml-values"></a>XAML 值  
 *oneOrMoreBindings*  
 一或多個<xref:System.Windows.Data.Binding>物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IMultiValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IMultiValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As IMultiValueConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::IMultiValueConverter ^ Converter { System::Windows::Data::IMultiValueConverter ^ get(); void set(System::Windows::Data::IMultiValueConverter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.Windows.Data.IMultiValueConverter with get, set" Usage="System.Windows.Data.MultiBinding.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IMultiValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定在來源值與目標值之間進行轉換所要使用的轉換子。</summary>
        <value><see cref="T:System.Windows.Data.IMultiValueConverter" /> 類型的值，表示要使用的轉換子。 預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 個別的繫結集合中可以有自己的值<xref:System.Windows.Data.Binding.Converter%2A>。 如需詳細資訊，請參閱<xref:System.Windows.Data.IValueConverter>。  
  
<a name="xamlAttributeUsage_Converter"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<object Converter="myConverter"/>  
```  
  
<a name="xamlValues_Converter"></a>   
## <a name="xaml-values"></a>XAML 值  
 *myConverter*  
 資源參考至類別可實作<xref:System.Windows.Data.IMultiValueConverter>介面，其中包含實作<xref:System.Windows.Data.IMultiValueConverter.Convert%2A>和<xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A>方法。 若要參考的值轉換器，使用[標記延伸和 WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConverterCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConverterCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ConverterCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConverterCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterCulture : System.Globalization.CultureInfo with get, set" Usage="System.Windows.Data.MultiBinding.ConverterCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Globalization.CultureInfo" /> 物件，這個物件套用至 <see cref="T:System.Windows.Data.MultiBinding" /> 所包裝繫結的任何指定轉換子或 <see cref="T:System.Windows.Data.MultiBinding" /> 本身。</summary>
        <value>有效的 <see cref="T:System.Globalization.CultureInfo" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ConverterCulture"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<object ConverterCulture="ietfLanguageTag"/>  
```  
  
<a name="xamlValues_ConverterCulture"></a>   
## <a name="xaml-values"></a>XAML 值  
 *ietfLanguageTag*  
 字串，用來設定<xref:System.Globalization.CultureInfo>。 此字串用來在內部呼叫。 <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A>. 如需字串格式的詳細資訊，請參閱<xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ConverterParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConverterParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConverterParameter : obj with get, set" Usage="System.Windows.Data.MultiBinding.ConverterParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要傳遞至轉換器當做其他資訊的選擇性參數。</summary>
        <value>要傳遞至轉換器的參數。 預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_ConverterParameter"></a>   
## <a name="xaml-property-element-usage"></a>XAML 屬性項目用法  
  
```  
<object>  
  <object.ConverterParameter>  
    converterParameter  
  </object.ConverterParameter>  
</object>  
```  
  
<a name="xamlAttributeUsage_ConverterParameter"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<object property="converterParameter" />  
```  
  
<a name="xamlValues_ConverterParameter"></a>   
## <a name="xaml-values"></a>XAML 值  
 *converterParameter*  
 值的型別轉換子，可能是物件項目或字串，根據定義，這兩個屬性輸入所使用的 XAML 功能以及的轉換子的實作。 透過該類型轉換子會採用`parameter`所定義的參數及其<xref:System.Windows.Data.IValueConverter.Convert%2A>和<xref:System.Windows.Data.IValueConverter.ConvertBack%2A>實作。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.IMultiValueConverter" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As BindingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingMode Mode { System::Windows::Data::BindingMode get(); void set(System::Windows::Data::BindingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Windows.Data.BindingMode with get, set" Usage="System.Windows.Data.MultiBinding.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出此繫結資料流程的方向。</summary>
        <value>其中一個 <see cref="T:System.Windows.Data.BindingMode" /> 值。 預設值為 <see cref="F:System.Windows.Data.BindingMode.Default" />，它會傳回目標相依性屬性的預設繫結模式值。 不過，每個相依性屬性的預設值都會不同。 一般而言，使用者可以編輯的控制項屬性，例如 <see cref="P:System.Windows.Controls.TextBox.Text" />，預設為雙向繫結，而其他大多數屬性則預設為單向繫結。  
  
判斷相依性屬性預設是否會單向或雙向繫結的程式設計方式是，使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 取得屬性的屬性中繼資料，然後檢查 <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> 屬性的布林值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Data.MultiBinding.Mode%2A>並<xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A>屬性會決定功能的<xref:System.Windows.Data.MultiBinding>，除非個別的繫結會覆寫這些屬性的預設值為使用集合中的所有繫結。 比方說，如果<xref:System.Windows.Data.MultiBinding.Mode%2A>上的屬性<xref:System.Windows.Data.MultiBinding>物件設定為<xref:System.Windows.Data.BindingMode.TwoWay>，然後在集合中的所有繫結會被視為<xref:System.Windows.Data.BindingMode.TwoWay>除非您設定不同<xref:System.Windows.Data.MultiBinding.Mode%2A>上其中一個繫結的值明確。 如需詳細資訊，請參閱 <<c0> <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=nameWithType> 和<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=nameWithType>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnSourceUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnSourceUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnSourceUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.NotifyOnSourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnSourceUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnSourceUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnSourceUpdated : bool with get, set" Usage="System.Windows.Data.MultiBinding.NotifyOnSourceUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當值從繫結目標轉送到繫結來源時，取得或設定指出是否引發 <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> 事件的值。</summary>
        <value>如果更新繫結來源值時將引發 <see cref="E:System.Windows.FrameworkElement.SourceUpdated" /> 事件，則為 <see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.NotifyOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnTargetUpdated : bool with get, set" Usage="System.Windows.Data.MultiBinding.NotifyOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出將值從繫結來源轉送到繫結目標時，是否引發 <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> 事件。</summary>
        <value>如果更新繫結目標值時會引發 <see cref="E:System.Windows.FrameworkElement.TargetUpdated" /> 事件，則為<see langword="true" />；否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyOnValidationError : bool with get, set" Usage="System.Windows.Data.MultiBinding.NotifyOnValidationError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否要在繫結項目上引發 <see cref="E:System.Windows.Controls.Validation.Error" /> 附加事件。</summary>
        <value><see langword="true" /> 如果<see cref="E:System.Windows.Controls.Validation.Error" />附加的事件將會在來源更新期間驗證錯誤時繫結項目上引發，否則<see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.NotifyOnValidationError" />
        <altmember cref="P:System.Windows.Data.MultiBinding.ValidationRules" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.ShouldSerializeBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeBindings : unit -&gt; bool" Usage="multiBinding.ShouldSerializeBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否應該保存 <see cref="P:System.Windows.Data.MultiBinding.Bindings" /> 屬性。</summary>
        <returns>如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這`ShouldSerialize`提供方法，因為<xref:System.Windows.Data.MultiBinding.Bindings%2A>屬性並沒有簡單的預設值。 這個方法會指出屬性是否已變更其預設值。 您通常叫用這個方法如果您正在開發的設計工具<xref:System.Windows.Data.MultiBinding>或是開發您自己的控制項併入<xref:System.Windows.Data.MultiBinding>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValidationRules">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeValidationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeValidationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.ShouldSerializeValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeValidationRules () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeValidationRules();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeValidationRules : unit -&gt; bool" Usage="multiBinding.ShouldSerializeValidationRules " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示是否應該保存 <see cref="P:System.Windows.Data.MultiBinding.ValidationRules" /> 屬性。</summary>
        <returns>如果屬性值已經從其預設值變更，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這`ShouldSerialize`提供方法，因為<xref:System.Windows.Data.MultiBinding.ValidationRules%2A>屬性並沒有簡單的預設值。 這個方法會指出屬性是否已變更其預設值。 您通常叫用這個方法如果您正在開發的設計工具<xref:System.Windows.Data.MultiBinding>或是開發您自己的控制項併入<xref:System.Windows.Data.MultiBinding>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要加入的子物件。</param>
        <summary>加入子物件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要加入物件中的文字。</param>
        <summary>將節點的文字內容加入物件中。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceExceptionFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceExceptionFilter As UpdateSourceExceptionFilterCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceExceptionFilterCallback ^ UpdateSourceExceptionFilter { System::Windows::Data::UpdateSourceExceptionFilterCallback ^ get(); void set(System::Windows::Data::UpdateSourceExceptionFilterCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceExceptionFilter : System.Windows.Data.UpdateSourceExceptionFilterCallback with get, set" Usage="System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceExceptionFilterCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定可用來提供自訂邏輯的處理常式，以處理繫結引擎在更新繫結來源值期間所遇到的例外狀況。 只有 <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> 與 <see cref="T:System.Windows.Data.MultiBinding" /> 物件已建立關聯性才適用。</summary>
        <value>提供自訂邏輯以處理繫結引擎在更新繫結來源值期間所遇到之例外狀況的方法。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ExceptionValidationRule>類別代表內建驗證規則會檢查繫結來源屬性更新期間所擲回的例外狀況。 如果您已建立關聯<xref:System.Windows.Controls.ExceptionValidationRule>物件與您<xref:System.Windows.Data.MultiBinding>物件，您可以使用這個屬性設定來提供自訂邏輯來處理這些例外狀況處理常式。  
  
 如需範例，請參閱 <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A?displayProperty=nameWithType>。  
  
 如需詳細資訊，驗證程序的相關<xref:System.Windows.Data.MultiBinding>物件，請參閱<xref:System.Windows.Data.MultiBinding.ValidationRules%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.UpdateSourceTrigger" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceTrigger As UpdateSourceTrigger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceTrigger UpdateSourceTrigger { System::Windows::Data::UpdateSourceTrigger get(); void set(System::Windows::Data::UpdateSourceTrigger value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateSourceTrigger : System.Windows.Data.UpdateSourceTrigger with get, set" Usage="System.Windows.Data.MultiBinding.UpdateSourceTrigger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值會判斷繫結來源更新的時機。</summary>
        <value>其中一個 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值。 預設值為 <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />，它會傳回目標相依性屬性的預設 <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> 值。 不過，大多數相依性屬性的預設值為 <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />，而 <see cref="P:System.Windows.Controls.TextBox.Text" /> 屬性具有 <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" /> 的預設值。  
  
一種判斷相依性屬性之預設 <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> 值的程式設計方式是使用 <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> 取得屬性的屬性中繼資料，然後再檢查 <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> 屬性的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Data.MultiBinding.Mode%2A>並<xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A>屬性會決定功能的<xref:System.Windows.Data.MultiBinding>，除非個別的繫結會覆寫這些屬性的預設值為使用集合中的所有繫結。 比方說，如果<xref:System.Windows.Data.MultiBinding.Mode%2A>上的屬性<xref:System.Windows.Data.MultiBinding>物件設定為<xref:System.Windows.Data.BindingMode.TwoWay>，然後在集合中的所有繫結會被視為<xref:System.Windows.Data.BindingMode.TwoWay>除非您設定不同<xref:System.Windows.Data.MultiBinding.Mode%2A>上其中一個繫結的值明確。 如需詳細資訊，請參閱 <<c0> <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=nameWithType> 和<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=nameWithType>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnDataErrors : bool with get, set" Usage="System.Windows.Data.MultiBinding.ValidatesOnDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示是否要包含 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />。</summary>
        <value><see langword="true" /> 表示包含 <see cref="T:System.Windows.Controls.DataErrorValidationRule" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定這個屬性提供替代使用<xref:System.Windows.Controls.DataErrorValidationRule>項目明確。 <xref:System.Windows.Controls.DataErrorValidationRule>是內建驗證規則會檢查所引發的錯誤<xref:System.ComponentModel.IDataErrorInfo>來源物件的實作。 如果會引發錯誤，就會建立繫結引擎<xref:System.Windows.Controls.ValidationError>發生錯誤並將它加入<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>繫結元素的集合。 錯誤缺乏會清除這個驗證回應，除非另一個規則就會發出驗證問題。  
  
 如需詳細資訊，驗證程序的相關<xref:System.Windows.Data.MultiBinding>物件，請參閱<xref:System.Windows.Data.MultiBinding.ValidationRules%2A>屬性。  
  
 <xref:System.Windows.Data.MultiBinding.ValidatesOnDataErrors%2A> .NET Framework 3.5 版中引進。  如需詳細資訊，請參閱[版本和相依性](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnExceptions">
      <MemberSignature Language="C#" Value="public bool ValidatesOnExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidatesOnExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnExceptions : bool with get, set" Usage="System.Windows.Data.MultiBinding.ValidatesOnExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示是否要包含 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />。</summary>
        <value><see langword="true" /> 表示包含 <see cref="T:System.Windows.Controls.ExceptionValidationRule" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定這個屬性提供替代使用<xref:System.Windows.Controls.ExceptionValidationRule>項目明確。 <xref:System.Windows.Controls.ExceptionValidationRule>是內建驗證規則會檢查來源屬性更新期間所擲回的例外狀況。 如果擲回例外狀況，就會建立繫結引擎<xref:System.Windows.Controls.ValidationError>與例外狀況並將它加入<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>繫結元素的集合。 錯誤缺乏會清除這個驗證回應，除非另一個規則就會發出驗證問題。  
  
 如需詳細資訊，驗證程序的相關<xref:System.Windows.Data.MultiBinding>物件，請參閱<xref:System.Windows.Data.MultiBinding.ValidationRules%2A>屬性。  
  
 <xref:System.Windows.Data.MultiBinding.ValidatesOnExceptions%2A> .NET Framework 3.5 版中引進。  如需詳細資訊，請參閱[版本和相依性](~/docs/framework/migration-guide/versions-and-dependencies.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.MultiBinding.ValidatesOnDataErrors" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataErrors { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnNotifyDataErrors : bool with get, set" Usage="System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示是否要包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />。</summary>
        <value><see langword="true" /> 表示包含 <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />，否則為 <see langword="false" />。 預設為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors%2A>已`true`，會檢查繫結，並報告由實作的資料來源所引發的錯誤<xref:System.ComponentModel.INotifyDataErrorInfo>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.MultiBinding.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidationRules : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;" Usage="System.Windows.Data.MultiBinding.ValidationRules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Data.MultiBinding" /> 這個執行個體的 <see cref="T:System.Windows.Controls.ValidationRule" /> 物件集合。</summary>
        <value><see cref="T:System.Windows.Data.MultiBinding" /> 這個執行個體的 <see cref="T:System.Windows.Controls.ValidationRule" /> 物件集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以設定驗證規則，兩者<xref:System.Windows.Data.MultiBinding>物件，並個別<xref:System.Windows.Data.Binding>中的物件<xref:System.Windows.Data.MultiBinding>物件。 繫結引擎會評估<xref:System.Windows.Data.MultiBinding.ValidationRules%2A>上<xref:System.Windows.Data.MultiBinding>物件時從繫結目標屬性的值會移<xref:System.Windows.Data.IMultiValueConverter>物件。 在那之後，從轉換器移到個別的繫結的繫結來源屬性的值時，繫結引擎會評估<xref:System.Windows.Data.Binding.ValidationRules%2A>該<xref:System.Windows.Data.Binding>物件。  
  
 多個驗證程序，以及如何提供視覺化回饋時失效的詳細資訊，請參閱 「 資料驗證 」，在[資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。  
  
> [!NOTE]
>  此屬性可以在設定[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]只能藉由使用語法所示，或藉由存取的集合物件，使用的各種方法，例如`Add`。 用來存取的集合物件的屬性是唯讀，而該集合本身是讀寫。  
  
<a name="xamlPropertyElementUsage_ValidationRules"></a>   
## <a name="xaml-property-element-usage"></a>XAML 屬性項目用法  
  
```  
<object>  
  <object.ValidationRules>  
    oneOrMoreValidationRules  
  </object.ValidationRules>  
</object>  
```  
  
<a name="xamlValues_ValidationRules"></a>   
## <a name="xaml-values"></a>XAML 值  
 *oneOrMoreValidationRules*  
 一或多個<xref:System.Windows.Controls.ValidationRule>物件。 您可以使用<xref:System.Windows.Controls.ExceptionValidationRule>類別或子類別化來建立您的自訂規則<xref:System.Windows.Controls.ValidationRule>類別。  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159972">繫結驗證範例</related>
      </Docs>
    </Member>
  </Members>
</Type>