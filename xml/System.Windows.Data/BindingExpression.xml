<Type Name="BindingExpression" FullName="System.Windows.Data.BindingExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3fea4e6dbea6033b76ee98df8b9b14a76125994d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30626742" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BindingExpression : System.Windows.Data.BindingExpressionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BindingExpression extends System.Windows.Data.BindingExpressionBase implements class System.Windows.IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.BindingExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BindingExpression&#xA;Inherits BindingExpressionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingExpression sealed : System::Windows::Data::BindingExpressionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingExpressionBase</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary>含有 <see cref="T:System.Windows.Data.Binding" /> 之單一執行個體的詳細資訊。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Data.Binding>類別是繫結的宣告的高層級的類別。 <xref:System.Windows.Data.BindingExpression>類別為基礎的物件會維護繫結來源與繫結目標之間的連線。 A<xref:System.Windows.Data.Binding>包含可以跨數個共用的所有資訊<xref:System.Windows.Data.BindingExpression>物件。 A<xref:System.Windows.Data.BindingExpression>無法共用，並包含所有執行個體資訊相關的執行個體運算式<xref:System.Windows.Data.Binding>。  
  
 例如，請考慮下列項目，其中`myDataObject`的執行個體`MyData`類別`myBinding`來源<xref:System.Windows.Data.Binding>物件，和`MyData`類別是包含名為字串屬性的定義的類別`MyDataProperty`。 此範例中會繫結內容的文字`mytext`，這是執行個體<xref:System.Windows.Controls.TextBlock>至`MyDataProperty`。  
  
 [!code-csharp[CodeOnlyBinding#1](~/samples/snippets/csharp/VS_Snippets_Wpf/CodeOnlyBinding/CSharp/binding.cs#1)]
 [!code-vb[CodeOnlyBinding#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CodeOnlyBinding/VisualBasic/App.vb#1)]  
  
 您可以使用相同`myBinding`物件以建立其他的繫結。 例如，您可能會使用`myBinding`要繫結文字內容的核取方塊，以物件`MyDataProperty`。 在這種情況下，會有兩個執行個體<xref:System.Windows.Data.BindingExpression>共用`myBinding`物件。  
  
 您可以取得<xref:System.Windows.Data.BindingExpression>物件使用<xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>方法或<xref:System.Windows.FrameworkElement.GetBindingExpression%2A>資料繫結物件上的方法。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個 <see cref="T:System.Windows.Data.BindingExpression" /> 所使用的繫結來源物件。</summary>
        <value>這個 <see cref="T:System.Windows.Data.BindingExpression" /> 所使用的繫結來源物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例顯示實作<xref:System.Windows.Controls.Primitives.ButtonBase.Click>用事件處理常式<xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A>方法，以取得<xref:System.Windows.Data.BindingExpression>，然後呼叫<xref:System.Windows.Data.BindingExpression.DataItem%2A>屬性來存取繫結來源物件。  
  
 <xref:System.Windows.Controls.TextBlock> `SavingsText`是繫結目標物件，並將其<xref:System.Windows.Controls.TextBlock.Text%2A>屬性是繫結目標屬性。  
  
 [!code-csharp[DirectionalBinding#OnRentRaise](~/samples/snippets/csharp/VS_Snippets_Wpf/DirectionalBinding/CSharp/Page1.xaml.cs#onrentraise)]
 [!code-vb[DirectionalBinding#OnRentRaise](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DirectionalBinding/VisualBasic/DirectionalBinding.vb#onrentraise)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.Binding ParentBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.Binding ParentBinding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ParentBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::Binding ^ ParentBinding { System::Windows::Data::Binding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回目前 <see cref="T:System.Windows.Data.Binding" /> 的 <see cref="T:System.Windows.Data.BindingExpression" /> 物件。</summary>
        <value>目前繫結運算式的 <see cref="T:System.Windows.Data.Binding" /> 物件。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSource">
      <MemberSignature Language="C#" Value="public object ResolvedSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResolvedSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResolvedSource { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個 <see cref="T:System.Windows.Data.BindingExpression" /> 的繫結來源物件。</summary>
        <value>這個 <see cref="T:System.Windows.Data.BindingExpression" /> 的繫結來源物件。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolvedSourcePropertyName">
      <MemberSignature Language="C#" Value="public string ResolvedSourcePropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResolvedSourcePropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.BindingExpression.ResolvedSourcePropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolvedSourcePropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResolvedSourcePropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個 <see cref="T:System.Windows.Data.BindingExpression" /> 的繫結來源屬性的名稱。</summary>
        <value>這個 <see cref="T:System.Windows.Data.BindingExpression" /> 的繫結來源屬性的名稱。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.IWeakEventListener.ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="bool IWeakEventListener.ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.IWeakEventListener.ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.System#Windows#IWeakEventListener#ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean Implements IWeakEventListener.ReceiveWeakEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.IWeakEventListener.ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e) = System::Windows::IWeakEventListener::ReceiveWeakEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">呼叫這個方法的 <see cref="T:System.Windows.WeakEventManager" /> 型別。 這只會辨識屬於 <see cref="T:System.Collections.Specialized.CollectionChangedEventManager" /> 型別的管理員物件。</param>
        <param name="sender">發出事件的物件。</param>
        <param name="e">事件資料。</param>
        <summary>這個成員支援 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基礎結構，但是您不可以從程式碼直接使用它。</summary>
        <returns>
          如果由接聽程式處理事件，就是 <see langword="true" />，否則就是 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSource">
      <MemberSignature Language="C#" Value="public override void UpdateSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateSource ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將目前的繫結目標值傳送至 <see cref="F:System.Windows.Data.BindingMode.TwoWay" /> 或 <see cref="F:System.Windows.Data.BindingMode.OneWayToSource" /> 繫結的繫結來源屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法不會執行任何動作時<xref:System.Windows.Data.Binding.Mode%2A>繫結的不<xref:System.Windows.Data.BindingMode.TwoWay>或<xref:System.Windows.Data.BindingMode.OneWayToSource>。  
  
 如果<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>繫結的值設定為<xref:System.Windows.Data.UpdateSourceTrigger.Explicit>，您必須呼叫<xref:System.Windows.Data.BindingExpression.UpdateSource%2A>方法或所做的變更將不會傳播到來源。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">繫結已與目標中斷連結。</exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTarget">
      <MemberSignature Language="C#" Value="public override void UpdateTarget ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateTarget() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateTarget ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateTarget();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>強制執行從繫結來源屬性至繫結目標屬性的資料傳輸。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可讓您強制從 source 屬性的資料傳輸至目標屬性。 如果您的來源物件會實作適當的屬性變更通知機制，例如<xref:System.ComponentModel.INotifyPropertyChanged>，目標更新會自動發生。 不過，您必須使用這個方法來更新目標屬性明確地在您的來源物件不提供適當的屬性變更通知的情況下的選項。 如果您的應用程式需要定期更新目標內容，您也可以使用這個方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">繫結已與目標中斷連結。</exception>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
  </Members>
</Type>