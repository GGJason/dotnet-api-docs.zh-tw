<Type Name="UpdateSourceExceptionFilterCallback" FullName="System.Windows.Data.UpdateSourceExceptionFilterCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b715c214c4452338e4dca1c03eb939da6f68b56c" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51910011" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate object UpdateSourceExceptionFilterCallback(object bindExpression, Exception exception);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UpdateSourceExceptionFilterCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function UpdateSourceExceptionFilterCallback(bindExpression As Object, exception As Exception) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ UpdateSourceExceptionFilterCallback(System::Object ^ bindExpression, Exception ^ exception);" />
  <TypeSignature Language="F#" Value="type UpdateSourceExceptionFilterCallback = delegate of obj * Exception -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="bindExpression" Type="System.Object" />
    <Parameter Name="exception" Type="System.Exception" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="bindExpression">發生例外狀況的物件。</param>
    <param name="exception">遇到的例外狀況。</param>
    <summary>代表方法，這個方法會處理繫結來源值更新期間所擲回的例外狀況。 這必須搭配 <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> 使用。</summary>
    <returns>物件，通常是下列其中一項： 
 <list type="table"><listheader><term> 值 
 </term><description> 描述 
 </description></listheader><item><term><see langword="null" /></term><description> 若要忽略任何例外狀況。 預設行為 (如果沒有 <see cref="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />) 是建立具有例外狀況的 <see cref="T:System.Windows.Controls.ValidationError" />，並將其加入至繫結項目的 <see cref="P:System.Windows.Controls.Validation.Errors" /> 集合。  
  
 </description></item><item><term> 任何物件 
 </term><description> 若要以設定為該物件的 <see cref="T:System.Windows.Controls.ValidationError" /> 建立 <see cref="P:System.Windows.Controls.ValidationError.ErrorContent" /> 物件。  
  
<see cref="T:System.Windows.Controls.ValidationError" /> 物件已加入至繫結項目的 <see cref="P:System.Windows.Controls.Validation.Errors" /> 集合。  
  
 </description></item><item><term> 一個 <see cref="T:System.Windows.Controls.ValidationError" /> 物件 
 </term><description> 若要將 <see cref="T:System.Windows.Data.BindingExpression" /> 或 <see cref="T:System.Windows.Data.MultiBindingExpression" /> 物件設定為 <see cref="P:System.Windows.Controls.ValidationError.BindingInError" />。 <see cref="T:System.Windows.Controls.ValidationError" /> 物件已加入至繫結項目的 <see cref="P:System.Windows.Controls.Validation.Errors" /> 集合。  
  
 </description></item></list></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您已建立關聯<xref:System.Windows.Controls.ExceptionValidationRule>與您<xref:System.Windows.Data.Binding>物件已使用的選項<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>屬性來設定此提供自訂邏輯來處理例外狀況的回呼。 每當繫結引擎會更新繫結來源值時，發生任何例外狀況，則會叫用這個回呼。  
  
 如果<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>中未指定<xref:System.Windows.Data.Binding>，則繫結引擎會建立<xref:System.Windows.Controls.ValidationError>發生例外狀況並將它加入<xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>繫結元素的集合。  
  
   
  
## Examples  
 <xref:System.Windows.Controls.TextBox.Text%2A>屬性的下列<xref:System.Windows.Controls.TextBox>是資料繫結來源屬性`Age3`型別的`int`。 <xref:System.Windows.Controls.ExceptionValidationRule>檢查 （例如，當使用者輸入的值無法轉換成整數） 的來源屬性更新期間所擲回的例外狀況。  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 您可以提供自訂邏輯以處理這些例外狀況。 下列範例示範如何使用<xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>屬性來設定<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>:  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 以下是範例實作<xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>:  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 如需完整的範例，請參閱[繫結驗證範例](https://go.microsoft.com/fwlink/?LinkID=159972)。  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter" />
  </Docs>
</Type>