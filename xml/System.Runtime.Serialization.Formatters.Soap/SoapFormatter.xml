<Type Name="SoapFormatter" FullName="System.Runtime.Serialization.Formatters.Soap.SoapFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="20cf03747670a29229d8efb50e46a95e13bcf1b2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36534347" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SoapFormatter : System.Runtime.Remoting.Messaging.IRemotingFormatter, System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapFormatter extends System.Object implements class System.Runtime.Remoting.Messaging.IRemotingFormatter, class System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapFormatter&#xA;Implements IFormatter, IRemotingFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapFormatter sealed : System::Runtime::Remoting::Messaging::IRemotingFormatter, System::Runtime::Serialization::IFormatter" />
  <TypeSignature Language="F#" Value="type SoapFormatter = class&#xA;    interface IRemotingFormatter&#xA;    interface IFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Messaging.IRemotingFormatter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>以 SOAP 格式序列化和還原序列化物件，或連接之物件的整個圖形。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  從.NET Framework 2.0 開始，這個類別已經過時。 請改用 <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>。  
  
 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>和<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>類別會實作<xref:System.Runtime.Remoting.Messaging.IRemotingFormatter>介面，以支援遠端程序呼叫 (Rpc)，而<xref:System.Runtime.Serialization.IFormatter>介面 (由繼承<xref:System.Runtime.Remoting.Messaging.IRemotingFormatter>) 若要支援序列化的物件圖形。 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>類別也支援使用 Rpc<xref:System.Runtime.Serialization.Formatters.ISoapMessage>物件，而不使用<xref:System.Runtime.Remoting.Messaging.IRemotingFormatter>功能。  
  
 Rpc 的期間<xref:System.Runtime.Remoting.Messaging.IRemotingFormatter>介面可讓兩個不同的物件圖形的規格： 要序列化的物件圖形和包含的標頭 （適用於遠端函式呼叫的相關資訊的物件陣列的其他圖形例如，交易識別碼或方法簽章）。 進行適當的序列化，第一個圖形的根物件必須實作的物件<xref:System.Runtime.Remoting.Messaging.IMethodCallMessage>介面或<xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>介面。  
  
 在 RPC，還原序列化期間<xref:System.Runtime.Remoting.Messaging.HeaderHandler>來指定委派<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A>格式器的方法。 遠端執行功能基礎結構使用<xref:System.Runtime.Remoting.Messaging.HeaderHandler>產生支援的物件，委派<xref:System.Runtime.Serialization.ISerializable>介面。 此物件包含標頭，儲存的資訊，而會變成圖形還原序列化程式所傳回的根。  
  
 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>也可以處理與實作的物件所產生的 Rpc<xref:System.Runtime.Serialization.Formatters.ISoapMessage>介面。 若要建立使用 RPC，而不使用<xref:System.Runtime.Remoting.Messaging.IRemotingFormatter>功能，支援的物件位置<xref:System.Runtime.Serialization.Formatters.ISoapMessage>根目錄中的圖形，正在序列化的介面。 若要還原序列化此方式建立 RPC<xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject%2A>屬性必須設定為支援的另一個物件<xref:System.Runtime.Serialization.Formatters.ISoapMessage>介面，並包含相關的遠端呼叫資訊。  
  
## <a name="timespan-serialization"></a>TimeSpan 序列化  
 TimeSpan 物件都會序列化根據 ISO 8601: 1998年區段 5.5.3.2.1 「 替代 」 標準。  
  
## <a name="version-information"></a>版本資訊  
 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter>不支援序列化的.NET framework 版本之間的相容性。 序列化通常 framework 1.1 和 2.0 版類型之間就會失敗。 若要解決此問題，可以執行下列動作：  
  
-   若要使用的轉換<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>，這樣會提供 1.1 和 2.0 之間的相容性。  
  
-   將現有的保存的資料轉換成新格式。  
  
-   將所有的生產者和取用者的序列化資料轉換成 2.0 版中。  
  
-   避免使用從 1.1 變更為 2.0 的型別。  
  
   
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用預設屬性值，初始化 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表顯示 <xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter> 執行個體的初始屬性值。  
  
|屬性|值|  
|--------------|-----------|  
|<xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.SurrogateSelector%2A>|`null`|  
|<xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context%2A>|新<xref:System.Runtime.Serialization.StreamingContext>初始化為指定的序列化的資料可以傳輸至或接收從任何其他內容|  
  
   
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapFormatter (System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.ISurrogateSelector selector, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (selector As ISurrogateSelector, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapFormatter(System::Runtime::Serialization::ISurrogateSelector ^ selector, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.Formatters.Soap.SoapFormatter : System.Runtime.Serialization.ISurrogateSelector * System.Runtime.Serialization.StreamingContext -&gt; System.Runtime.Serialization.Formatters.Soap.SoapFormatter" Usage="new System.Runtime.Serialization.Formatters.Soap.SoapFormatter (selector, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="selector" Type="System.Runtime.Serialization.ISurrogateSelector" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="selector">要與 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" /> 新執行個體一起使用的 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />。 可以是 <see langword="null" />。</param>
        <param name="context">
          <see cref="T:System.Runtime.Serialization.StreamingContext" />，保留序列化的來源和目的地。 如果 <c>context</c> 參數為 <see langword="null" />，則 <see cref="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context" /> 會預設為 <see cref="F:System.Runtime.Serialization.StreamingContextStates.CrossMachine" />。</param>
        <summary>使用指定的 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> 和 <see cref="T:System.Runtime.Serialization.ISurrogateSelector" />，初始化 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 物件，序列化或還原序列化從，指定<xref:System.IO.Stream>。  
  
 在序列化或還原序列化程序使用指定<xref:System.Runtime.Serialization.ISurrogateSelector>搜尋想要還原序列化的物件類型與您已註冊的 surrogate。 代理是 helper 的序列化和還原序列化特定類別的物件。 預設值<xref:System.Runtime.Serialization.ISurrogateSelector>無法處理從衍生的物件序列化<xref:System.MarshalByRefObject>進行遠端處理。 在遠端處理的情況下指定<xref:System.Runtime.Serialization.ISurrogateSelector>取代物件衍生自<xref:System.MarshalByRefObject>與<xref:System.Runtime.Remoting.ObjRef>序列化時所指定的代理選取器的物件。 因此，如果您想要使用遠端物件時，設定`selector`參數的執行個體<xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>。 如果您不需要 (instance)，設定`selector`參數必須為`null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="AssemblyFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterAssemblyStyle AssemblyFormat" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.AssemblyFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyFormat As FormatterAssemblyStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterAssemblyStyle AssemblyFormat { System::Runtime::Serialization::Formatters::FormatterAssemblyStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyFormat : System.Runtime.Serialization.Formatters.FormatterAssemblyStyle with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.AssemblyFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterAssemblyStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定有關尋找和載入組件之還原序列化程式的行為。</summary>
        <value>其中一個 <see cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" /> 值，指定還原序列化程式行為。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
      </Docs>
    </Member>
    <Member MemberName="Binder">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.SerializationBinder Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder Binder" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Binder" />
      <MemberSignature Language="VB.NET" Value="Public Property Binder As SerializationBinder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::SerializationBinder ^ Binder { System::Runtime::Serialization::SerializationBinder ^ get(); void set(System::Runtime::Serialization::SerializationBinder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binder : System.Runtime.Serialization.SerializationBinder with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Binder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定控制將序列化物件繫結至型別的 <see cref="T:System.Runtime.Serialization.SerializationBinder" />。</summary>
        <value>
          <see cref="T:System.Runtime.Serialization.SerializationBinder" />，與這個 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> 一起使用。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationBinder" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.StreamingContext Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context" />
      <MemberSignature Language="VB.NET" Value="Public Property Context As StreamingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::StreamingContext Context { System::Runtime::Serialization::StreamingContext get(); void set(System::Runtime::Serialization::StreamingContext value); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Runtime.Serialization.StreamingContext with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與此 <see cref="T:System.Runtime.Serialization.StreamingContext" /> 一起使用的 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" />。</summary>
        <value>
          <see cref="T:System.Runtime.Serialization.StreamingContext" />，與這個 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> 一起使用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.StreamingContext>提供列舉，描述來源和目的地指定的序列化資料流，以及保留該內容和其他呼叫端定義的內容序列化的方式。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將資料流還原序列化至物件圖形。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  呼叫此方法不受信任的資料時，會造成安全性風險。 呼叫這個方法僅使用信任的資料。 如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream serializationStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream serializationStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializationStream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::IO::Stream ^ serializationStream);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.IO.Stream -&gt; obj&#xA;override this.Deserialize : System.IO.Stream -&gt; obj" Usage="soapFormatter.Deserialize serializationStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="serializationStream">資料流，包含要還原序列化的資料。</param>
        <summary>還原序列化在提供的資料流上的資料，並重新組合物件 Graph。</summary>
        <returns>還原序列化圖形的最上層物件 (根)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 成功的還原序列化資料流中目前的位置必須是物件圖形的開頭。  
  
> [!IMPORTANT]
>  呼叫此方法不受信任的資料時，會造成安全性風險。 呼叫這個方法僅使用信任的資料。 如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。  
  
   
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serializationStream" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream serializationStream, System.Runtime.Remoting.Messaging.HeaderHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.IO.Stream serializationStream, class System.Runtime.Remoting.Messaging.HeaderHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Deserialize(System.IO.Stream,System.Runtime.Remoting.Messaging.HeaderHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializationStream As Stream, handler As HeaderHandler) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Deserialize(System::IO::Stream ^ serializationStream, System::Runtime::Remoting::Messaging::HeaderHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.IO.Stream * System.Runtime.Remoting.Messaging.HeaderHandler -&gt; obj&#xA;override this.Deserialize : System.IO.Stream * System.Runtime.Remoting.Messaging.HeaderHandler -&gt; obj" Usage="soapFormatter.Deserialize (serializationStream, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="handler" Type="System.Runtime.Remoting.Messaging.HeaderHandler" />
      </Parameters>
      <Docs>
        <param name="serializationStream">資料流，包含要還原序列化的資料。</param>
        <param name="handler">委派，用於處理在資料流上找到的任何標頭。 可以是 <see langword="null" />。</param>
        <summary>將資料流還原序列化至物件圖形中，使用指定的 <see cref="T:System.Runtime.Remoting.Messaging.HeaderHandler" /> 處理該資料流中的任何標頭。</summary>
        <returns>還原序列化圖形的最上層物件 (根)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 標頭只能用於特定的遠端處理應用程式。 <xref:System.Runtime.Remoting.Messaging.HeaderHandler>參數是下列其中一種從 SOAP Remote Procedure Call (RPC) 格式的資料流中傳回標頭。 另一種方式是使用<xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject%2A>屬性。  
  
 成功的還原序列化資料流中目前的位置必須是物件圖形的開頭。  
  
## <a name="timespan-serialization"></a>TimeSpan 序列化  
 TimeSpan 物件都會序列化根據 ISO 8601: 1998年區段 5.5.3.2.1 「 替代 」 標準。  
  
> [!IMPORTANT]
>  呼叫此方法不受信任的資料時，會造成安全性風險。 呼叫這個方法僅使用信任的資料。 如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serializationStream" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException">
          <paramref name="serializationStream" /> 支援搜尋，且它的長度為 0。</exception>
      </Docs>
    </Member>
    <Member MemberName="FilterLevel">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.TypeFilterLevel FilterLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.TypeFilterLevel FilterLevel" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.FilterLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterLevel As TypeFilterLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::TypeFilterLevel FilterLevel { System::Runtime::Serialization::Formatters::TypeFilterLevel get(); void set(System::Runtime::Serialization::Formatters::TypeFilterLevel value); };" />
      <MemberSignature Language="F#" Value="member this.FilterLevel : System.Runtime.Serialization.Formatters.TypeFilterLevel with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.FilterLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.TypeFilterLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 .NET Framework 遠端之自動還原序列化的 <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />。</summary>
        <value>
          <see cref="T:System.Runtime.Serialization.Formatters.TypeFilterLevel" />，表示目前的自動還原序列化層級。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 支援的值為<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low>和<xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full>（預設值）。 如需有關還原序列化層級的詳細資訊，請參閱[自動還原序列化.NET 遠端處理中](http://msdn.microsoft.com/library/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>序列化物件或連接之物件的圖形。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream serializationStream, object graph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream serializationStream, object graph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (serializationStream As Stream, graph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Serialize(System::IO::Stream ^ serializationStream, System::Object ^ graph);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.IO.Stream * obj -&gt; unit&#xA;override this.Serialize : System.IO.Stream * obj -&gt; unit" Usage="soapFormatter.Serialize (serializationStream, graph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationStream">資料流，格式子放置要序列化的資料所在。</param>
        <param name="graph">要序列化的物件或物件 Graph 的根。 這個根物件的所有子物件都會自動序列化。</param>
        <summary>使用指定的根，將物件或物件的圖形序列化至指定的 <see cref="T:System.IO.Stream" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 TimeSpan 物件都會序列化根據 ISO 8601: 1998年區段 5.5.3.2.1 「 替代 」 標準。  
  
   
  
## Examples  
 [!code-cpp[SoapFormatter Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapFormatter Example/CPP/soapformatter.cpp#1)]
 [!code-csharp[SoapFormatter Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapFormatter Example/CS/soapformatter.cs#1)]
 [!code-vb[SoapFormatter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapFormatter Example/VB/soapformatter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serializationStream" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream serializationStream, object graph, System.Runtime.Remoting.Messaging.Header[] headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.IO.Stream serializationStream, object graph, class System.Runtime.Remoting.Messaging.Header[] headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.Serialize(System.IO.Stream,System.Object,System.Runtime.Remoting.Messaging.Header[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (serializationStream As Stream, graph As Object, headers As Header())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Serialize(System::IO::Stream ^ serializationStream, System::Object ^ graph, cli::array &lt;System::Runtime::Remoting::Messaging::Header ^&gt; ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.IO.Stream * obj * System.Runtime.Remoting.Messaging.Header[] -&gt; unit&#xA;override this.Serialize : System.IO.Stream * obj * System.Runtime.Remoting.Messaging.Header[] -&gt; unit" Usage="soapFormatter.Serialize (serializationStream, graph, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="graph" Type="System.Object" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Messaging.Header[]" />
      </Parameters>
      <Docs>
        <param name="serializationStream">資料流，格式子放置要序列化的資料所在。</param>
        <param name="graph">要序列化的物件或物件圖形的根。 這個根物件的所有子物件都會自動序列化。</param>
        <param name="headers">要包含在序列化中的遠端標頭。 可以是 <see langword="null" />。</param>
        <summary>使用指定的根，將物件或物件圖形序列化至 SOAP 遠端程序呼叫 (RPC) 格式的指定 <see cref="T:System.IO.Stream" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 標頭只能用於特定的遠端處理應用程式。  
  
 TimeSpan 物件都會序列化根據 ISO 8601: 1998年區段 5.5.3.2.1 「 替代 」 標準。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="serializationStream" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SurrogateSelector">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ISurrogateSelector SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector SurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.SurrogateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property SurrogateSelector As ISurrogateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ISurrogateSelector ^ SurrogateSelector { System::Runtime::Serialization::ISurrogateSelector ^ get(); void set(System::Runtime::Serialization::ISurrogateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SurrogateSelector : System.Runtime.Serialization.ISurrogateSelector with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.SurrogateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定在序列化和還原序列化期間控制型別替代的 <see cref="T:System.Runtime.Serialization.SurrogateSelector" />。</summary>
        <value>
          <see cref="T:System.Runtime.Serialization.SurrogateSelector" />，與這個 <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter" /> 一起使用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Runtime.Remoting>產生<xref:System.Runtime.Remoting.ObjRef>的執行個體<xref:System.MarshalByRefObject>物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopObject">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.ISoapMessage TopObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.Formatters.ISoapMessage TopObject" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject" />
      <MemberSignature Language="VB.NET" Value="Public Property TopObject As ISoapMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::ISoapMessage ^ TopObject { System::Runtime::Serialization::Formatters::ISoapMessage ^ get(); void set(System::Runtime::Serialization::Formatters::ISoapMessage ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TopObject : System.Runtime.Serialization.Formatters.ISoapMessage with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TopObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.ISoapMessage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Runtime.Serialization.Formatters.ISoapMessage" />，做為 SOAP 上層物件還原序列化的目標。</summary>
        <value>SOAP 上層物件要還原序列化至的 <see cref="T:System.Runtime.Serialization.Formatters.ISoapMessage" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性用於 SOAP 遠端程序呼叫 (RPC) 格式，並指定 SOAP 上方的記錄不是通用語言執行階段物件類型的遠端呼叫的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeFormat">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.Formatters.FormatterTypeStyle TypeFormat" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TypeFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeFormat As FormatterTypeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::Formatters::FormatterTypeStyle TypeFormat { System::Runtime::Serialization::Formatters::FormatterTypeStyle get(); void set(System::Runtime::Serialization::Formatters::FormatterTypeStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TypeFormat : System.Runtime.Serialization.Formatters.FormatterTypeStyle with get, set" Usage="System.Runtime.Serialization.Formatters.Soap.SoapFormatter.TypeFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters.Soap</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.Formatters.FormatterTypeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定型別描述在已序列化資料流中的配置格式。</summary>
        <value>型別描述在已序列化資料流中配置所採用的格式。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
      </Docs>
    </Member>
  </Members>
</Type>