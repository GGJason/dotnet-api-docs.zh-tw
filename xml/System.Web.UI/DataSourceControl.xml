<Type Name="DataSourceControl" FullName="System.Web.UI.DataSourceControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="842df3c6b74186a3d204954e81b7f70a1326ef4e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36577484" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataSourceControl : System.Web.UI.Control, System.ComponentModel.IListSource, System.Web.UI.IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceControl extends System.Web.UI.Control implements class System.ComponentModel.IListSource, class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceControl&#xA;Inherits Control&#xA;Implements IDataSource, IListSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceControl abstract : System::Web::UI::Control, System::ComponentModel::IListSource, System::Web::UI::IDataSource" />
  <TypeSignature Language="F#" Value="type DataSourceControl = class&#xA;    inherit Control&#xA;    interface IDataSource&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.DataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.DataSourceControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>作為控制項的基底類別，這些控制項代表與資料繫結控制項的資料來源。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 支援控制項的資料繫結架構，可讓 Web 伺服器控制項繫結至資料一致的方式。 資料繫結控制項，以及協助繫結稱為資料來源控制項的類別會參照 web 伺服器控制項的繫結至資料。 資料來源控制項可以表示任何資料來源： 關聯式資料庫、 檔案、 資料流、 商務物件等等。 資料繫結控制項，不論來源或基礎資料的格式一致的方式中的資料來源控制項呈現資料。  
  
 您可以使用所提供的資料來源控制項使用 ASP.NET，包括<xref:System.Web.UI.WebControls.SqlDataSource>， <xref:System.Web.UI.WebControls.AccessDataSource>，和<xref:System.Web.UI.WebControls.XmlDataSource>，才能執行大部分的網頁開發工作。 使用基底<xref:System.Web.UI.DataSourceControl>類別，當您想要實作您自己的自訂資料來源控制項。  
  
 雖然任何類別可實作<xref:System.Web.UI.IDataSource>介面是資料來源控制項，大部分的 ASP.NET 資料來源控制項擴充抽象<xref:System.Web.UI.DataSourceControl>類別，可提供的基底實作<xref:System.Web.UI.IDataSource>介面。 <xref:System.Web.UI.DataSourceControl>類別也提供的實作<xref:System.ComponentModel.IListSource>介面，可讓您以程式設計的方式指派至資料來源控制項`DataSource`資料繫結控制項和傳回資料做為基本的清單控制項的屬性。  
  
 任何衍生自的 ASP.NET 控制項<xref:System.Web.UI.WebControls.DataBoundControl>類別可以繫結至資料來源控制項。 當<xref:System.Web.UI.WebControls.DataBoundControl>繫結至資料來源控制項，資料繫結會自動在執行階段執行。 您也可以使用公開 （expose） 的 ASP.NET 控制項使用資料來源控制項`DataSource`或`DataSourceID`屬性和支援基本資料繫結，但不是衍生自<xref:System.Web.UI.WebControls.DataBoundControl>。 使用這些資料繫結控制項時，您必須明確呼叫`DataBind`方法。 如需資料繫結的詳細資訊，請參閱[ASP.NET 資料存取內容對應](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2)。  
  
 您可以將資料來源控制項的組合視為<xref:System.Web.UI.DataSourceControl>物件和其相關聯的資料清單，稱為資料來源檢視。 每個清單的資料由<xref:System.Web.UI.DataSourceView>物件。 因為基礎資料存放區包含一或多個清單的資料，<xref:System.Web.UI.DataSourceControl>永遠都與一個或多名為<xref:System.Web.UI.DataSourceView>物件。 <xref:System.Web.UI.IDataSource>介面定義的所有資料來源控制項都用來與資料來源檢視互動的方法：<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>方法用來列舉目前資料來源控制項，與相關聯的資料來源檢視和<xref:System.Web.UI.DataSourceControl.GetView%2A>依名稱，方法用來擷取特定資料來源檢視執行個體。  
  
 當兩個不同介面的呼叫端用來存取資料，您也可以將資料來源控制項。 <xref:System.Web.UI.DataSourceControl>類別是網頁開發人員直接互動開發 Web Forms 頁面時的介面和<xref:System.Web.UI.DataSourceView>類別是資料繫結控制項和資料繫結控制項作者互動的介面。 因為<xref:System.Web.UI.DataSourceView>物件只能在執行階段可供使用、 保存的資料來源控制項的任何狀態或資料來源檢視必須直接由資料來源控制項。  
  
 沒有任何視覺化呈現 ASP.NET 資料來源控制項。實作控制項，讓您以宣告方式，建立，並選擇性地允許它們參與狀態管理。 如此一來，資料來源控制項不支援視覺化功能例如<xref:System.Web.UI.DataSourceControl.EnableTheming%2A>或<xref:System.Web.UI.DataSourceControl.SkinID%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範如何擴充類別<xref:System.Web.UI.DataSourceControl>類別。 `CsvDataSource`控制項代表儲存在.csv 檔案中的逗號分隔的檔案資料。 `CsvDataSource`類別會提供自己的實作<xref:System.Web.UI.DataSourceControl.GetView%2A>， <xref:System.Web.UI.DataSourceControl.GetViewNames%2A>，和其他方法，因為基底類別實作會無法運作。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 下列程式碼範例示範如何使用`CsvDataSource`Web 表單中的控制項。  
  
 [!code-aspx-csharp[Urtue.Samples.Alexkr.CsvDataSource_1_webform#50](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1_webform/CS/webform6cs.aspx#50)]
 [!code-aspx-vb[Urtue.Samples.Alexkr.CsvDataSource_1_webform#50](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1_webform/VB/webform6vb.aspx#50)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.DataSourceControl" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyStyleSheetSkin">
      <MemberSignature Language="C#" Value="public override void ApplyStyleSheetSkin (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyStyleSheetSkin(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyStyleSheetSkin(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="override this.ApplyStyleSheetSkin : System.Web.UI.Page -&gt; unit" Usage="dataSourceControl.ApplyStyleSheetSkin page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">包含控制項的 <see cref="T:System.Web.UI.Page" />。</param>
        <summary>將頁面樣式表中所定義的樣式屬性套用至控制項。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.DataSourceControl.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 ASP.NET 產生的伺服器控制項識別項。</summary>
        <value>ASP.NET 產生的伺服器控制項識別項。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDMode">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ClientIDMode ClientIDMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ClientIDMode ClientIDMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.ClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ClientIDMode As ClientIDMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ClientIDMode ClientIDMode { System::Web::UI::ClientIDMode get(); void set(System::Web::UI::ClientIDMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDMode : System.Web.UI.ClientIDMode with get, set" Usage="System.Web.UI.DataSourceControl.ClientIDMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>這個屬性不會用於資料來源控制項。</summary>
        <value>這個屬性不會用於資料來源控制項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性的<xref:System.Web.UI.Control>基底類別不會用於資料來源控制項因為資料來源控制項不會呈現標記。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">嘗試設定此屬性。</exception>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.DataSourceControl.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.ControlCollection" /> 物件，表示 UI 階層架構中指定之伺服器控制項的子控制項。</summary>
        <value>指定之伺服器控制項的子控制項集合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="dataSourceControl.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立儲存子控制項的集合。</summary>
        <returns>傳回 <see cref="T:System.Web.UI.EmptyControlCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  因為資料來源控制項不允許子控制項<xref:System.Web.UI.DataSourceControl>類別的預設實作不支援內嵌的子控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.DataSourceControl.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出這個控制項是否支援佈景主題。</summary>
        <value>所有情況下都是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為<xref:System.Web.UI.DataSourceControl>控制項沒有視覺化呈現，不支援佈景主題。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">嘗試設定 <see cref="P:System.Web.UI.DataSourceControl.EnableTheming" /> 屬性的值。</exception>
        <altmember cref="P:System.Web.UI.DataSourceControl.SkinID" />
        <altmember cref="P:System.Web.UI.DataSourceControl.Visible" />
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberSignature Language="F#" Value="override this.FindControl : string -&gt; System.Web.UI.Control" Usage="dataSourceControl.FindControl id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">所要尋找的控制項識別項。</param>
        <summary>在目前命名容器搜尋具有指定 <paramref name="id" /> 參數的伺服器控制項。</summary>
        <returns>指定的控制項，如果指定的控制項不存在，則為 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="dataSourceControl.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>設定控制項的輸入焦點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為<xref:System.Web.UI.DataSourceControl>控制項有任何視覺效果呈現呼叫<xref:System.Web.UI.DataSourceControl.Focus%2A>在其上的方法會擲回<xref:System.NotSupportedException>例外狀況。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">嘗試呼叫 <see cref="M:System.Web.UI.DataSourceControl.Focus" /> 方法。</exception>
        <altmember cref="P:System.Web.UI.DataSourceControl.Visible" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.DataSourceView" Usage="dataSourceControl.GetView viewName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">要擷取之 <see cref="T:System.Web.UI.DataSourceView" /> 的名稱。 對於只支援一個檢視的資料來源控制項，例如 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />，會忽略這個參數。</param>
        <summary>取得與資料來源控制項關聯的具名資料來源檢視。</summary>
        <returns>傳回與 <see cref="T:System.Web.UI.DataSourceView" /> 關聯的具名 <see cref="T:System.Web.UI.DataSourceControl" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以透過檢視與資料來源控制項藉由呼叫目前相關聯集列舉<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>方法。  
  
 資料來源控制項類別可支援其基礎資料的一個或多個檢視。 執行個體，代表這些檢視<xref:System.Web.UI.DataSourceView>類別。 資料來源檢視定義資料來源控制項的功能、 從基礎資料存放區擷取資料所需的所有工作和執行作業，例如排序、 插入、 刪除和更新。  
  
> [!NOTE]
>  <xref:System.Web.UI.DataSourceControl>類別的預設實作會傳回`null`。 如果您擴充<xref:System.Web.UI.DataSourceControl>類別，覆寫<xref:System.Web.UI.DataSourceControl.GetView%2A>方法以傳回指定<xref:System.Web.UI.DataSourceView>物件。  
  
   
  
## Examples  
 下列程式碼範例示範如何擴充的資料來源控制項類別<xref:System.Web.UI.DataSourceControl>類別會實作<xref:System.Web.UI.IDataSource.GetView%2A>方法，傳回強型別執行個體<xref:System.Web.UI.DataSourceView>類別。 資料來源控制項只支援一個檢視，因為它會忽略名稱，並傳回名為使用預設的檢視名稱的檢視。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.UI.DataSourceControl>類別。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; System.Collections.ICollection&#xA;override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="dataSourceControl.GetViewNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得名稱集合，表示與 <see cref="T:System.Web.UI.DataSourceView" /> 控制項關聯的 <see cref="T:System.Web.UI.DataSourceControl" /> 物件清單。</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" />，包含與 <see cref="T:System.Web.UI.DataSourceView" /> 關聯的 <see cref="T:System.Web.UI.DataSourceControl" /> 物件名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Collections.ICollection>名稱集合是允許的一組值可以傳遞至<xref:System.Web.UI.DataSourceControl.GetView%2A>方法。  
  
 <xref:System.Web.UI.ListSourceHelper>類別，用於<xref:System.Web.UI.DataSourceControl>類別的<xref:System.ComponentModel.IListSource>實作，會檢查<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>兩個方法<xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23ContainsListCollection%2A>和<xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23GetList%2A>呼叫以判斷是否在資料來源控制項都與一個或更多的資料來源檢視。 如果<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>傳回`null`，這是預設實作的方法，<xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23ContainsListCollection%2A>傳回`false`和<xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23GetList%2A>傳回`null`。  
  
> [!NOTE]
>  <xref:System.Web.UI.DataSourceControl>類別的預設實作會傳回`null`。 如果您擴充<xref:System.Web.UI.DataSourceControl>類別，覆寫<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>方法以傳回檢視名稱的集合。  
  
   
  
## Examples  
 下列程式碼範例示範如何擴充的類別<xref:System.Web.UI.DataSourceControl>類別可以覆寫預設實作，它會傳回`null`，以提供的檢視名稱集合。 `CsvDataSource`類別僅支援一個檢視，因此，會傳回的預設檢視表名稱使用的項目集合。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.UI.DataSourceControl>類別。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasControls">
      <MemberSignature Language="C#" Value="public override bool HasControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.HasControls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function HasControls () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool HasControls();" />
      <MemberSignature Language="F#" Value="override this.HasControls : unit -&gt; bool" Usage="dataSourceControl.HasControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>判斷伺服器控制項是否包含任何子控制項。</summary>
        <returns>如果控制項包含其他控制項，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseDataSourceChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseDataSourceChangedEvent (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseDataSourceChangedEvent(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseDataSourceChangedEvent (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseDataSourceChangedEvent(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseDataSourceChangedEvent : EventArgs -&gt; unit&#xA;override this.RaiseDataSourceChangedEvent : EventArgs -&gt; unit" Usage="dataSourceControl.RaiseDataSourceChangedEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Web.UI.IDataSource.DataSourceChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A>方法會告知資料繫結控制項的基礎資料來源或快取在記憶體中的資料已經變更，並應該重新繫結控制項，並執行任何所需的其他工作。 一般而言，<xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A>屬性的資料來源控制項或參數值已變更時呼叫方法。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫<xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A>方法時的資料來源或其基礎資料已變更，就可能會影響任何繫結控制項。 在此範例中，以檔案為基礎的資料來源控制項延伸<xref:System.Web.UI.DataSourceControl>類別所引發<xref:System.Web.UI.IDataSource.DataSourceChanged>藉由呼叫事件<xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A>隨時`FileName`屬性變更。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>在覆寫<see cref="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" />方法，使已註冊的委派能接收到事件。</para>
        </block>
        <altmember cref="E:System.Web.UI.IDataSource.DataSourceChanged" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dataSourceControl.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收控制項內容的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件。</param>
        <summary>將伺服器控制項內容輸出至提供的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件，並在啟用追蹤時儲存控制項的追蹤資訊。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.DataSourceControl.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得套用至 <see cref="T:System.Web.UI.DataSourceControl" /> 控制項的面板。</summary>
        <value>
          <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為<xref:System.Web.UI.DataSourceControl>控制項沒有視覺化呈現，您不能設定<xref:System.Web.UI.DataSourceControl.SkinID%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">嘗試設定 <see cref="P:System.Web.UI.DataSourceControl.SkinID" /> 屬性的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IListSource.ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.DataSourceControl.System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示資料來源控制項是否與一個或多個資料清單產生關聯。</summary>
        <value>如果 <see cref="T:System.Web.UI.DataSourceControl" /> 與一個或多個 <see cref="T:System.Web.UI.DataSourceView" /> 物件關聯，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性用來判斷目前的物件是否可以當做資料的一或多個清單的來源。 資料來源控制項封裝清單的資料做為<xref:System.Web.UI.DataSourceView>物件; 因此，當一或多個相關聯<xref:System.Web.UI.DataSourceView>物件，<xref:System.Web.UI.DataSourceControl>控制項代表清單的來源物件和屬性會傳回`true`。  
  
 這個屬性會呼叫靜態<xref:System.Web.UI.ListSourceHelper.ContainsListCollection%2A?displayProperty=nameWithType>方法，以判斷是否在目前的資料來源控制項可用來當做資料來源。 <xref:System.Web.UI.ListSourceHelper>類別會決定是否<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>方法會傳回有效的檢視名稱的集合。 如果是這樣，這個屬性會傳回`true`。 如果<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>傳回`null`，這是預設實作<xref:System.Web.UI.DataSourceControl>類別，該方法會傳回`false`。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得可以當做資料清單來源使用的資料來源控制項清單。</summary>
        <returns>可以當做資料清單來源使用的資料來源控制項之 <see cref="T:System.Collections.IList" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來擷取一組可用來當做資料來源的物件。 資料來源控制項封裝清單的資料做為<xref:System.Web.UI.DataSourceView>物件; 因此，當一或多個相關聯<xref:System.Web.UI.DataSourceView>物件<xref:System.Web.UI.DataSourceControl>控制項代表清單的來源物件，而且方法會傳回<xref:System.Collections.IList>的集合一個項目、<xref:System.Web.UI.DataSourceControl>本身。  
  
 這個方法會呼叫靜態<xref:System.Web.UI.ListSourceHelper.GetList%2A?displayProperty=nameWithType>方法來擷取<xref:System.Collections.IList>物件的集合，可用來當做資料來源。 <xref:System.Web.UI.ListSourceHelper>類別會決定是否<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>傳回有效的檢視名稱的集合。 若是如此，<xref:System.Web.UI.ListSourceHelper>類別會傳回<xref:System.Collections.IList>的一個項目集合<xref:System.Web.UI.DataSourceControl>控制項。 如果<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>傳回`null`，這是預設實作<xref:System.Web.UI.DataSourceControl>類別<xref:System.Web.UI.ListSourceHelper>類別也會傳回`null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler System.Web.UI.IDataSource.DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event DataSourceChanged As EventHandler Implements System.Web.UI.IDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.IDataSource.DataSourceChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetView">
      <MemberSignature Language="C#" Value="System.Web.UI.DataSourceView IDataSource.GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.DataSourceView System.Web.UI.IDataSource.GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetView (viewName As String) As DataSourceView Implements IDataSource.GetView" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::DataSourceView ^ System.Web.UI.IDataSource.GetView(System::String ^ viewName) = System::Web::UI::IDataSource::GetView;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">要擷取之 <see cref="T:System.Web.UI.DataSourceView" /> 的名稱。 對於只支援一個檢視的資料來源控制項，例如 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />，會忽略這個參數。</param>
        <summary>取得與 <see cref="T:System.Web.UI.DataSourceView" /> 控制項關聯的具名 <see cref="T:System.Web.UI.DataSourceControl" /> 物件。 有些資料來源控制項只支援一個檢視，有些則可支援多個檢視。</summary>
        <returns>傳回與 <see cref="T:System.Web.UI.DataSourceView" /> 關聯的具名 <see cref="T:System.Web.UI.DataSourceControl" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `viewName`只支援一個檢視，這類的資料來源控制項上呼叫這個方法時，會忽略參數<xref:System.Web.UI.WebControls.SqlDataSource>和<xref:System.Web.UI.WebControls.AccessDataSource>控制項。  
  
> [!NOTE]
>  <xref:System.Web.UI.DataSourceControl>類別的預設實作會呼叫此介面方法，會傳回`null`。 如果您擴充<xref:System.Web.UI.DataSourceControl>類別，覆寫<xref:System.Web.UI.DataSourceControl.GetView%2A>方法以傳回指定<xref:System.Web.UI.DataSourceView>物件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetViewNames">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDataSource.GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.Web.UI.IDataSource.GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Function GetViewNames () As ICollection Implements IDataSource.GetViewNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.Web.UI.IDataSource.GetViewNames() = System::Web::UI::IDataSource::GetViewNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得名稱集合，表示與 <see cref="T:System.Web.UI.DataSourceView" /> 控制項關聯的 <see cref="T:System.Web.UI.DataSourceControl" /> 物件清單。</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" />，包含與 <see cref="T:System.Web.UI.DataSourceView" /> 關聯的 <see cref="T:System.Web.UI.DataSourceControl" /> 物件名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.DataSourceControl>類別的預設實作會呼叫此介面方法，會傳回`null`，表示該只有一個檢視支援。 如果您擴充<xref:System.Web.UI.DataSourceControl>類別，覆寫<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>方法以傳回檢視名稱的集合。 名稱可以傳遞至<xref:System.Web.UI.DataSourceControl.GetView%2A>方法以傳回<xref:System.Web.UI.DataSourceView>物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.DataSourceControl.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否視覺化顯示控制項。</summary>
        <value>一定是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為<xref:System.Web.UI.DataSourceControl>控制項有沒有視覺化呈現，<xref:System.Web.UI.DataSourceControl.Visible%2A>屬性一律會傳回`false`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">嘗試設定 <see cref="P:System.Web.UI.DataSourceControl.Visible" /> 屬性的值。</exception>
      </Docs>
    </Member>
  </Members>
</Type>