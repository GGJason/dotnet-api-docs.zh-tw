<Type Name="ClientScriptManager" FullName="System.Web.UI.ClientScriptManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="80d12784deb82fe4a3792e1b417ab7930d851d03" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientScriptManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ClientScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptManager sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="30ba8-101">定義用來管理 Web 應用程式中用戶端指令碼的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="30ba8-101">Defines methods for managing client scripts in Web applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-102"><xref:System.Web.UI.ClientScriptManager>類別用來管理用戶端指令碼，並將它們加入至 Web 應用程式。</span><span class="sxs-lookup"><span data-stu-id="30ba8-102">The <xref:System.Web.UI.ClientScriptManager> class is used to manage client scripts and add them to Web applications.</span></span> <span data-ttu-id="30ba8-103">您可以取得的參考<xref:System.Web.UI.ClientScriptManager>類別從<xref:System.Web.UI.Page.ClientScript%2A>屬性<xref:System.Web.UI.Page>物件。</span><span class="sxs-lookup"><span data-stu-id="30ba8-103">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> class from the <xref:System.Web.UI.Page.ClientScript%2A> property of the <xref:System.Web.UI.Page> object.</span></span>  
  
 <span data-ttu-id="30ba8-104">您可以將用戶端指令碼加入網頁以宣告方式在頁面的 HTML 標記中包含指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-104">You can add a client script to a Web page declaratively by including the script in the HTML markup of the page.</span></span> <span data-ttu-id="30ba8-105">不過，有很多情況下以動態方式加入用戶端指令碼會在需要時。</span><span class="sxs-lookup"><span data-stu-id="30ba8-105">However, there are situations when adding client script dynamically is needed.</span></span> <span data-ttu-id="30ba8-106">若要以動態方式加入指令碼，使用<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法，<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>方法，<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法，或<xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>方法，會根據時間和方式想要新增指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-106">To add a script dynamically, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, or the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method, depending on when and how you want to add the script.</span></span> <span data-ttu-id="30ba8-107">如需詳細資訊，請參閱[如何： 加入用戶端指令碼以動態方式以 ASP.NET Web Pages](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666)。</span><span class="sxs-lookup"><span data-stu-id="30ba8-107">For more information, see [How to: Add Client Script Dynamically to ASP.NET Web Pages](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span></span>  
  
 <span data-ttu-id="30ba8-108"><xref:System.Web.UI.ClientScriptManager>類別唯一識別指令碼，依索引鍵<xref:System.String>和<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="30ba8-108">The <xref:System.Web.UI.ClientScriptManager> class uniquely identifies scripts by a key <xref:System.String> and a <xref:System.Type>.</span></span> <span data-ttu-id="30ba8-109">具有相同索引鍵和類型的指令碼會被視為重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-109">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30ba8-110">使用指令碼類型有助於避免混淆類似的指令碼可能會在頁面上的使用中的不同使用者控制項。</span><span class="sxs-lookup"><span data-stu-id="30ba8-110">Using the script type helps to avoid confusing similar scripts from different user controls that might be in use on the page.</span></span>  
  
 <span data-ttu-id="30ba8-111"><xref:System.Web.UI.ClientScriptManager>類別可以用來叫用用戶端回呼的情況下，最好從用戶端執行伺服端程式碼，但未執行回傳時。</span><span class="sxs-lookup"><span data-stu-id="30ba8-111">The <xref:System.Web.UI.ClientScriptManager> class can be used to invoke client callbacks in situations when it is desirable to run server code from the client without performing a postback.</span></span> <span data-ttu-id="30ba8-112">這被指執行超出訊號範圍回呼伺服器。</span><span class="sxs-lookup"><span data-stu-id="30ba8-112">This is referred to as performing an out-of-band callback to the server.</span></span> <span data-ttu-id="30ba8-113">在用戶端回呼，用戶端指令碼函式會傳送至 ASP.NET 網頁的非同步要求。</span><span class="sxs-lookup"><span data-stu-id="30ba8-113">In a client callback, a client script function sends an asynchronous request to an ASP.NET Web page.</span></span> <span data-ttu-id="30ba8-114">Web 網頁會執行其一般生命週期的修改的版本，以處理回呼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-114">The Web page runs a modified version of its normal life cycle to process the callback.</span></span> <span data-ttu-id="30ba8-115">使用<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法，以取得用戶端函式的參考，叫用時，會起始伺服器事件的用戶端回呼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-115">Use the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method to obtain a reference to a client function that, when invoked, initiates a client callback to a server event.</span></span> <span data-ttu-id="30ba8-116">如需詳細資訊，請參閱[實作用戶端回呼而不回傳](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)。</span><span class="sxs-lookup"><span data-stu-id="30ba8-116">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="30ba8-117">回呼指令碼將無法用在舊的瀏覽器不支援文件物件模型 (DOM)，以及它們需要 ECMAScript 已啟用用戶端上。</span><span class="sxs-lookup"><span data-stu-id="30ba8-117">Script callbacks will not work in older browsers that do not support the Document Object Model (DOM), and they require that ECMAScript is enabled on the client.</span></span> <span data-ttu-id="30ba8-118">若要檢查瀏覽器是否支援回呼，請使用<xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>屬性，可透過存取<xref:System.Web.HttpRequest.Browser%2A>屬性的內建 ASP.NET<xref:System.Web.HttpContext.Request%2A>物件。</span><span class="sxs-lookup"><span data-stu-id="30ba8-118">To check if the browser supports callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property, which is accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the ASP.NET intrinsic <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="30ba8-119">使用<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法和<xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>方法，以定義用戶端的回傳事件。</span><span class="sxs-lookup"><span data-stu-id="30ba8-119">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method and the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method to define a client postback event.</span></span> <span data-ttu-id="30ba8-120">這些方法可讓用戶端指令碼函式，當叫用，會導致回傳至網頁伺服器。</span><span class="sxs-lookup"><span data-stu-id="30ba8-120">These methods enable client script functions, when invoked, to cause the server to post back to the page.</span></span> <span data-ttu-id="30ba8-121">用戶端的回傳事件不同的是從用戶端回呼網頁完成一般生命週期，以處理用戶端回傳事件。</span><span class="sxs-lookup"><span data-stu-id="30ba8-121">A client postback event is different from a client callback in that the Web page completes a normal life cycle to process the client postback event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="30ba8-122">如果您使用<xref:System.Web.UI.WebControls.Button>控制項和<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>屬性設定為`false`，則您可以使用<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法以傳回用戶端回傳事件<xref:System.Web.UI.WebControls.Button>控制項。</span><span class="sxs-lookup"><span data-stu-id="30ba8-122">If you are using a <xref:System.Web.UI.WebControls.Button> control and the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is set to `false`, then you can use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method to return the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="30ba8-123"><xref:System.Web.UI.WebControls.Button.OnClientClick%2A>屬性<xref:System.Web.UI.WebControls.Button>控制項，<xref:System.Web.UI.WebControls.ImageButton>控制項和<xref:System.Web.UI.WebControls.LinkButton>控制項可以用來執行用戶端指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-123">The <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control, <xref:System.Web.UI.WebControls.ImageButton> control, and <xref:System.Web.UI.WebControls.LinkButton> control can be used to run client script.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-124">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法<xref:System.Web.UI.ClientScriptManager>類別。</span><span class="sxs-lookup"><span data-stu-id="30ba8-124">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="30ba8-125">頁中所定義的兩個用戶端指令碼： `PopupScript`，載入頁面時，顯示警示訊息和`ButtonClickScript`，而後者可定義用戶端的處理常式的 HTML 按鈕`onClick`事件。</span><span class="sxs-lookup"><span data-stu-id="30ba8-125">Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCallbackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ba8-126">取得用戶端函式的參考，這個函式會在叫用時，啟始對伺服器事件的用戶端回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-126">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="30ba8-127">處理用戶端回呼的伺服器 <see cref="T:System.Web.UI.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-127">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="30ba8-128">控制項必須實作 <see cref="T:System.Web.UI.ICallbackEventHandler" /> 介面並提供 <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-128">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30ba8-129">從用戶端指令碼傳遞到伺服器的引數</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-129">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="30ba8-130">
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-130">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="30ba8-131">會接收成功的伺服器事件結果的用戶端事件處理常式名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-131">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="30ba8-132">在啟始回呼 (Callback) 之前，於用戶端上評估的用戶端指令碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-132">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="30ba8-133">指令碼的結果會傳回給用戶端事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-133">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-134">取得用戶端函式的參考，這個函式會在叫用時，啟始對伺服器事件的用戶端回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-134">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
          <span data-ttu-id="30ba8-135">這個多載方法的用戶端函式包含指定的控制項、引數、用戶端指令碼和內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-135">The client function for this overloaded method includes a specified control, argument, client script, and context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-136">叫用用戶端回呼的用戶端函式名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-136">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-137"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29>方法會執行的頻外回呼伺服器頁面的一般生命週期的已修改的版本。</span><span class="sxs-lookup"><span data-stu-id="30ba8-137">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method performs an out-of-band callback to the server that is a modified version of a page's normal life cycle.</span></span> <span data-ttu-id="30ba8-138">如需詳細資訊，請參閱[實作用戶端回呼而不回傳](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)。</span><span class="sxs-lookup"><span data-stu-id="30ba8-138">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="30ba8-139">Microsoft Internet Explorer （5.0 或更新版本） 瀏覽器時，指令碼回呼機制透過 Microsoft.XmlHttp COM 物件實作，而且需要瀏覽器設為 執行 ActiveX 控制項。</span><span class="sxs-lookup"><span data-stu-id="30ba8-139">When the browser is Microsoft Internet Explorer (version 5.0 or later), the script callback mechanism is implemented through the Microsoft.XmlHttp COM object and requires the browser to be set to run ActiveX controls.</span></span> <span data-ttu-id="30ba8-140">會使用其他瀏覽器，XMLHttpRequest 使用瀏覽器的本機文件物件模型 (DOM)。</span><span class="sxs-lookup"><span data-stu-id="30ba8-140">For other browsers, an XMLHttpRequest using the browser's local Document Object Model (DOM) is used.</span></span> <span data-ttu-id="30ba8-141">若要檢查瀏覽器是否支援用戶端回呼，請使用<xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="30ba8-141">To check whether a browser supports client callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property.</span></span> <span data-ttu-id="30ba8-142">若要檢查瀏覽器是否支援透過 HTTP 的 XML，請使用<xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="30ba8-142">To check whether a browser supports XML over HTTP, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> property.</span></span> <span data-ttu-id="30ba8-143">兩個屬性都可透過存取<xref:System.Web.HttpRequest.Browser%2A>屬性的內建 ASP.NET<xref:System.Web.HttpContext.Request%2A>物件。</span><span class="sxs-lookup"><span data-stu-id="30ba8-143">Both properties are accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the intrinsic ASP.NET <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="30ba8-144"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>多載<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法會執行以同步方式透過 HTTP 使用 XML 的回呼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-144">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method performs a callback synchronously using XML over HTTP.</span></span> <span data-ttu-id="30ba8-145">當回呼案例中，以同步方式傳送資料，同步回呼就會立即傳回，而不會封鎖瀏覽器。</span><span class="sxs-lookup"><span data-stu-id="30ba8-145">When sending data synchronously in a callback scenario, synchronous callbacks return immediately and do not block the browser.</span></span> <span data-ttu-id="30ba8-146">同步沒有兩個回呼可以在瀏覽器中同時執行。</span><span class="sxs-lookup"><span data-stu-id="30ba8-146">No two synchronous callbacks callback can execute at the same time in the browser.</span></span> <span data-ttu-id="30ba8-147">如果第二個同步回呼一經引發，而另一個是目前有擱置中，第二個同步回呼取消第一個，並會傳回第二個的回呼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-147">If a second synchronous callback is fired while one is currently pending, the second synchronous callback cancels the first and only the second callback will return.</span></span>  
  
 <span data-ttu-id="30ba8-148">若要以非同步方式傳送資料，請使用其中一個多載採用`useAsync`參數，這是布林值，以控制此行為。</span><span class="sxs-lookup"><span data-stu-id="30ba8-148">To send data asynchronously, use one of the overloads that takes the `useAsync` parameter, which is a Boolean value controlling this behavior.</span></span> <span data-ttu-id="30ba8-149">在非同步案例中，您可以有多個暫止的回呼。不過，它們傳回的順序不會保證以符合它們初始化的順序。</span><span class="sxs-lookup"><span data-stu-id="30ba8-149">In the asynchronous scenario you can have multiple pending callbacks; however, the order in which they return is not guaranteed to match the order in which they were initiated.</span></span>  
  
 <span data-ttu-id="30ba8-150">此外，這個多載的<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法會指定用戶端函式可處理所產生的錯誤狀況的情況<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-150">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method specifies no client function to handle the case of an error condition generated by the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method.</span></span> <span data-ttu-id="30ba8-151">若要指定將用戶端錯誤回呼處理常式，請使用其中一個多載採用`clientErrorCallback`參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-151">To specify a client error callback handler, use one of the overloads that takes the `clientErrorCallback` parameter.</span></span>  
  
 <span data-ttu-id="30ba8-152"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29>方法會採用選擇性字串`argument`參數並傳回字串。</span><span class="sxs-lookup"><span data-stu-id="30ba8-152">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method takes an optional string `argument` parameter and returns a string.</span></span> <span data-ttu-id="30ba8-153">中傳送或接收多個值，串連輸入中的值或字串，會分別傳回。</span><span class="sxs-lookup"><span data-stu-id="30ba8-153">To pass in or to receive multiple values, concatenate values in the input or return string, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="30ba8-154">請避免使用指令碼回呼作業期間需要更新的網頁或控制項屬性的實作中的檢視狀態。</span><span class="sxs-lookup"><span data-stu-id="30ba8-154">Avoid using the view state in the implementation of page or control properties that need be updated during script callback operations.</span></span> <span data-ttu-id="30ba8-155">如果屬性不受網頁要求，您可以使用工作階段狀態。</span><span class="sxs-lookup"><span data-stu-id="30ba8-155">If the properties are to survive page requests, you can use session state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-156">下列程式碼範例示範如何使用兩個多載<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>遞增整數的用戶端回呼案例中的方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-156">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="30ba8-157">會顯示這兩個回撥機制;它們之間的差異，就是使用`context`參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-157">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="30ba8-158">A`ReceiveServerData1`用戶端的回呼函式會使用提供`context`參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-158">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="30ba8-159">相反地，`ReceiveServerData2`用戶端的回呼函式定義於`<script>`頁面上的區塊。</span><span class="sxs-lookup"><span data-stu-id="30ba8-159">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="30ba8-160">A<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>方法是遞增的值傳遞給它的伺服器處理常式和<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>方法會傳回字串形式遞增的值。</span><span class="sxs-lookup"><span data-stu-id="30ba8-160">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="30ba8-161">如果<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>方法會傳回錯誤，則`ProcessCallBackError`呼叫用戶端函式。</span><span class="sxs-lookup"><span data-stu-id="30ba8-161">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-162">指定的 <see cref="T:System.Web.UI.Control" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-162">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="30ba8-163">指定的 <see cref="T:System.Web.UI.Control" /> 未實作 <see cref="T:System.Web.UI.ICallbackEventHandler" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-163">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, bool useAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="30ba8-164">處理用戶端回呼的伺服器 <see cref="T:System.Web.UI.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-164">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="30ba8-165">控制項必須實作 <see cref="T:System.Web.UI.ICallbackEventHandler" /> 介面並提供 <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-165">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30ba8-166">從用戶端指令碼傳遞到伺服器的引數</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-166">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="30ba8-167">
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-167">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="30ba8-168">會接收成功的伺服器事件結果的用戶端事件處理常式名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-168">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="30ba8-169">在啟始回呼 (Callback) 之前，於用戶端上評估的用戶端指令碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-169">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="30ba8-170">指令碼的結果會傳回給用戶端事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-170">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="30ba8-171">
            <see langword="true" /> 表示非同步執行回呼，<see langword="false" /> 表示同步執行回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-171">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-172">取得用戶端函式的參考，這個函式會在叫用時，啟始對伺服器事件的用戶端回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-172">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="30ba8-173">這個多載方法的用戶端函式包含指定的控制項、引數、用戶端指令碼、內容和布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-173">The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-174">叫用用戶端回呼的用戶端函式名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-174">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-175">這個多載<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法需要`useAsync`參數，可讓您以非同步方式將值設定為執行用戶端回呼`true`。</span><span class="sxs-lookup"><span data-stu-id="30ba8-175">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` parameter, which allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="30ba8-176">這個方法的多載版本，不需要`useAsync`參數將值設為`false`預設。</span><span class="sxs-lookup"><span data-stu-id="30ba8-176">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span>  
  
 <span data-ttu-id="30ba8-177">如需有關這個方法的詳細資訊，請參閱備註為多載<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-177">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-178">指定的 <see cref="T:System.Web.UI.Control" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-178">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="30ba8-179">指定的 <see cref="T:System.Web.UI.Control" /> 未實作 <see cref="T:System.Web.UI.ICallbackEventHandler" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-179">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackEventReference (target As String, argument As String, clientCallback As String, context As String, clientErrorCallback As String, useAsync As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::String ^ target, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="30ba8-180">處理用戶端回呼之伺服器 <see cref="T:System.Web.UI.Control" /> 的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-180">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="30ba8-181">控制項必須實作 <see cref="T:System.Web.UI.ICallbackEventHandler" /> 介面並提供 <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-181">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30ba8-182">從用戶端指令碼傳遞到伺服器的引數</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-182">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="30ba8-183">
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-183">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="30ba8-184">會接收成功的伺服器事件結果的用戶端事件處理常式名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-184">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="30ba8-185">在啟始回呼 (Callback) 之前，於用戶端上評估的用戶端指令碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-185">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="30ba8-186">指令碼的結果會傳回給用戶端事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-186">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="30ba8-187">當伺服器事件處理常式發生錯誤時，接收結果之用戶端事件處理常式的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-187">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="30ba8-188">
            <see langword="true" /> 表示非同步執行回呼，<see langword="false" /> 表示同步執行回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-188">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-189">取得用戶端函式的參考，這個函式會在叫用時，啟始對伺服器事件的用戶端回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-189">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="30ba8-190">這個多載方法的用戶端函式包含指定的目標、引數、用戶端指令碼、內容、錯誤處理常式和布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-190">The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-191">叫用用戶端回呼的用戶端函式名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-191">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-192">這個多載<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法會採用`target`字串參數，而不是<xref:System.Web.UI.Control>參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-192">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method takes a `target` string parameter instead of a <xref:System.Web.UI.Control> parameter.</span></span> <span data-ttu-id="30ba8-193">當您想要回到以外的字串，包含回呼時，請使用此多載<xref:System.Web.UI.Control.UniqueID%2A>的控制項。</span><span class="sxs-lookup"><span data-stu-id="30ba8-193">Use this overload when you want the callback to go back to something other than a string containing the <xref:System.Web.UI.Control.UniqueID%2A> of the control.</span></span>  
  
 <span data-ttu-id="30ba8-194">此外，這個多載的<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法需要`useAsync`和`clientErrorCallback`參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-194">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="30ba8-195">`useAsync`參數可讓您以非同步方式將值設定為執行用戶端回呼`true`。</span><span class="sxs-lookup"><span data-stu-id="30ba8-195">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="30ba8-196">這個方法的多載版本，不需要`useAsync`參數將值設為`false`預設。</span><span class="sxs-lookup"><span data-stu-id="30ba8-196">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="30ba8-197">`clientErrorCallback`參數可讓您定義時所呼叫的用戶端函式名稱的伺服器處理常式，<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>方法，這個方法會傳回錯誤。</span><span class="sxs-lookup"><span data-stu-id="30ba8-197">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method, returns an error.</span></span> <span data-ttu-id="30ba8-198">這個方法的多載版本，不需要`clientErrorCallback`參數將值設定為 null。</span><span class="sxs-lookup"><span data-stu-id="30ba8-198">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="30ba8-199">如需有關這個方法的詳細資訊，請參閱備註為多載<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-199">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-200">下列程式碼範例示範如何使用兩個多載<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>遞增整數的用戶端回呼案例中的方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-200">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="30ba8-201">會顯示這兩個回撥機制;它們之間的差異，就是使用`context`參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-201">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="30ba8-202">A`ReceiveServerData1`用戶端的回呼函式會使用提供`context`參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-202">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="30ba8-203">相反地，`ReceiveServerData2`用戶端的回呼函式定義於`<script>`頁面上的區塊。</span><span class="sxs-lookup"><span data-stu-id="30ba8-203">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="30ba8-204">A<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>方法是遞增的值傳遞給它的伺服器處理常式和<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>方法會傳回字串形式遞增的值。</span><span class="sxs-lookup"><span data-stu-id="30ba8-204">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="30ba8-205">如果<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>方法會傳回錯誤，則用戶端函式`ProcessCallBackError`呼叫。</span><span class="sxs-lookup"><span data-stu-id="30ba8-205">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="30ba8-206">處理用戶端回呼的伺服器 <see cref="T:System.Web.UI.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-206">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="30ba8-207">控制項必須實作 <see cref="T:System.Web.UI.ICallbackEventHandler" /> 介面並提供 <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-207">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30ba8-208">從用戶端指令碼傳遞到伺服器 <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> 方法的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-208">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="30ba8-209">會接收成功的伺服器事件結果的用戶端事件處理常式名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-209">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="30ba8-210">在啟始回呼 (Callback) 之前，於用戶端上評估的用戶端指令碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-210">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="30ba8-211">指令碼的結果會傳回給用戶端事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-211">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="30ba8-212">當伺服器事件處理常式發生錯誤時，接收結果之用戶端事件處理常式的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-212">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="30ba8-213">
            <see langword="true" /> 表示非同步執行回呼，<see langword="false" /> 表示同步執行回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-213">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-214">取得用戶端函式的參考，這個函式會在叫用時，啟始對伺服器事件的用戶端回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-214">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="30ba8-215">這個多載方法的用戶端函式包含指定的控制項、引數、用戶端指令碼、內容、錯誤處理常式和布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-215">The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-216">叫用用戶端回呼的用戶端函式名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-216">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-217">這個多載<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法需要`useAsync`和`clientErrorCallback`參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-217">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="30ba8-218">`useAsync`參數可讓您以非同步方式將值設定為執行用戶端回呼`true`。</span><span class="sxs-lookup"><span data-stu-id="30ba8-218">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="30ba8-219">這個方法的多載版本，不需要`useAsync`參數將值設為`false`預設。</span><span class="sxs-lookup"><span data-stu-id="30ba8-219">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="30ba8-220">`clientErrorCallback`參數可讓您定義時所呼叫的用戶端函式名稱的伺服器處理常式 (<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>方法) 會傳回錯誤。</span><span class="sxs-lookup"><span data-stu-id="30ba8-220">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler (the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method) returns an error.</span></span> <span data-ttu-id="30ba8-221">這個方法的多載版本，不需要`clientErrorCallback`參數將值設定為 null。</span><span class="sxs-lookup"><span data-stu-id="30ba8-221">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="30ba8-222">如需有關這個方法的詳細資訊，請參閱備註為多載<xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-222">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-223">指定的 <see cref="T:System.Web.UI.Control" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-223">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="30ba8-224">指定的 <see cref="T:System.Web.UI.Control" /> 未實作 <see cref="T:System.Web.UI.ICallbackEventHandler" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-224">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackClientHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ba8-225">取得可用於用戶端事件中的參考 (其開頭附加了 <see langword="javascript:" />)，以回傳給伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-225">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="30ba8-226">用來處理回傳的伺服器控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-226">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30ba8-227">傳遞給伺服器控制項的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-227">The parameter passed to the server control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-228">取得可用於用戶端事件中的參考，並附加 <see langword="javascript:" /> 至其開頭，針對指定控制項並以指定事件引數回傳給伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-228">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-229">字串，表示對包含目標控制項 ID 和事件引數之回傳函式的 JavaScript 呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-229">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-230">使用<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法需要處理實作回傳的控制項<xref:System.Web.UI.IPostBackEventHandler>介面。</span><span class="sxs-lookup"><span data-stu-id="30ba8-230">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="30ba8-231">若要實作<xref:System.Web.UI.IPostBackEventHandler>介面<xref:System.Web.UI.Page>，使用指示詞。</span><span class="sxs-lookup"><span data-stu-id="30ba8-231">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-232">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-232">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method.</span></span> <span data-ttu-id="30ba8-233">自訂控制項， `MyControl`，實作<xref:System.Web.UI.IPostBackEventHandler>介面。</span><span class="sxs-lookup"><span data-stu-id="30ba8-233">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="30ba8-234">按一下頁面上的 HTML 錨定項目時，<xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A>叫用方法的自訂控制項。</span><span class="sxs-lookup"><span data-stu-id="30ba8-234">When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="30ba8-235">下列程式碼範例具有相同的功能與前一個，而不是自訂控制項，除了<xref:System.Web.UI.Page>類別會實作<xref:System.Web.UI.IPostBackEventHandler>介面。</span><span class="sxs-lookup"><span data-stu-id="30ba8-235">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="30ba8-236">用來處理回傳的伺服器控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-236">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30ba8-237">傳遞給伺服器控制項的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-237">The parameter passed to the server control.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="30ba8-238">
            <see langword="true" /> 表示註冊回傳事件以進行驗證，<see langword="false" /> 表示不註冊回傳事件以進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-238">
              <see langword="true" /> to register the postback event for validation; <see langword="false" /> to not register the post back event for validation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-239">取得可用於用戶端事件中的參考 (其開頭附加了 <see langword="javascript:" />)，針對指定控制項，以指定的事件引數和布林值 (指示是否註冊事件驗證的回傳) 回傳給伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-239">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-240">字串，表示對包含目標控制項 ID 和事件引數之回傳函式的 JavaScript 呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-240">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-241">使用<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法需要處理實作回傳的控制項<xref:System.Web.UI.IPostBackEventHandler>介面。</span><span class="sxs-lookup"><span data-stu-id="30ba8-241">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="30ba8-242">若要實作<xref:System.Web.UI.IPostBackEventHandler>介面<xref:System.Web.UI.Page>，使用指示詞。</span><span class="sxs-lookup"><span data-stu-id="30ba8-242">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ba8-243">傳回字串，該字串可用於用戶端事件中造成回傳給伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-243">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="30ba8-244">定義回傳的 <see cref="T:System.Web.UI.PostBackOptions" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-244">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-245">傳回字串，該字串可用於用戶端事件中造成回傳給伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-245">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="30ba8-246">指定的 <see cref="T:System.Web.UI.PostBackOptions" /> 執行個體會定義參考字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-246">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-247">視為用戶端上的指令碼時，啟始用戶端回傳的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-247">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-248">若要實作<xref:System.Web.UI.IPostBackEventHandler>介面<xref:System.Web.UI.Page>，使用指示詞。</span><span class="sxs-lookup"><span data-stu-id="30ba8-248">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="30ba8-249"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法可以與使用<xref:System.Web.UI.WebControls.Button>負責控制何時<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>屬性是`false`。</span><span class="sxs-lookup"><span data-stu-id="30ba8-249">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="30ba8-250">在此案例中，<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法會傳回用戶端回傳事件<xref:System.Web.UI.WebControls.Button>控制項。</span><span class="sxs-lookup"><span data-stu-id="30ba8-250">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-251">
            <see cref="T:System.Web.UI.PostBackOptions" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-251">The <see cref="T:System.Web.UI.PostBackOptions" /> parameter is <see langword="null" /></span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="30ba8-252">在伺服器上處理回傳的伺服器 <see cref="T:System.Web.UI.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-252">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30ba8-253">傳遞至處理回傳之控制項的選擇性引數字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-253">A string of optional arguments to pass to the control that processes the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-254">傳回字串，該字串可用於用戶端事件中造成回傳給伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-254">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="30ba8-255">參考字串是由處理回傳的指定控制項和其他事件資訊的字串引數所定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-255">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-256">視為用戶端上的指令碼時，啟始回傳的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-256">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-257">若要實作<xref:System.Web.UI.IPostBackEventHandler>介面<xref:System.Web.UI.Page>，使用指示詞。</span><span class="sxs-lookup"><span data-stu-id="30ba8-257">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="30ba8-258"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法可以與使用<xref:System.Web.UI.WebControls.Button>負責控制何時<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>屬性是`false`。</span><span class="sxs-lookup"><span data-stu-id="30ba8-258">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="30ba8-259">在此案例中，<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法會傳回用戶端回傳事件<xref:System.Web.UI.WebControls.Button>控制項。</span><span class="sxs-lookup"><span data-stu-id="30ba8-259">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-260">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-260">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method.</span></span> <span data-ttu-id="30ba8-261">自訂控制項， `MyControl`，實作<xref:System.Web.UI.IPostBackEventHandler>介面。</span><span class="sxs-lookup"><span data-stu-id="30ba8-261">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="30ba8-262">按一下頁面上的按鈕時，<xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A>叫用方法的自訂控制項。</span><span class="sxs-lookup"><span data-stu-id="30ba8-262">When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="30ba8-263">下列程式碼範例具有相同的功能與前一個，而不是自訂控制項，除了<xref:System.Web.UI.Page>類別會實作<xref:System.Web.UI.IPostBackEventHandler>介面。</span><span class="sxs-lookup"><span data-stu-id="30ba8-263">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-264">指定的 <see cref="T:System.Web.UI.Control" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-264">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions, registerForEventValidation As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options, bool registerForEventValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="30ba8-265">定義回傳的 <see cref="T:System.Web.UI.PostBackOptions" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-265">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="30ba8-266">
            <see langword="true" /> 表示註冊事件參考以進行驗證，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-266">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-267">傳回字串，該字串可用於用戶端事件中造成回傳給伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-267">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="30ba8-268">指定的 <see cref="T:System.Web.UI.PostBackOptions" /> 物件會定義參考字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-268">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object.</span>
          </span>
          <span data-ttu-id="30ba8-269">或者，註冊事件參考以進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-269">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-270">視為用戶端上的指令碼時，啟始用戶端回傳的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-270">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-271">若要實作<xref:System.Web.UI.IPostBackEventHandler>介面<xref:System.Web.UI.Page>物件，請使用指示詞。</span><span class="sxs-lookup"><span data-stu-id="30ba8-271">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page> object, use the  directive.</span></span>  
  
 <span data-ttu-id="30ba8-272"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法可以與使用<xref:System.Web.UI.WebControls.Button>負責控制何時<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>屬性是`false`。</span><span class="sxs-lookup"><span data-stu-id="30ba8-272">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="30ba8-273">在此案例中，<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法會傳回用戶端回傳事件<xref:System.Web.UI.WebControls.Button>控制項。</span><span class="sxs-lookup"><span data-stu-id="30ba8-273">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="30ba8-274">如果`registerForEventValidation`是`true`、<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29>方法呼叫<xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>方法，使用唯一的控制項 ID 表示已產生事件的用戶端控制項登錄事件參考以進行驗證。</span><span class="sxs-lookup"><span data-stu-id="30ba8-274">If `registerForEventValidation` is `true`, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-275">
            <see cref="T:System.Web.UI.PostBackOptions" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-275">The <see cref="T:System.Web.UI.PostBackOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="30ba8-276">在伺服器上處理回傳的伺服器 <see cref="T:System.Web.UI.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-276">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30ba8-277">要傳遞至 <c>控制項</c> 的選擇性引數字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-277">A string of optional arguments to pass to <c>control</c>.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="30ba8-278">
            <see langword="true" /> 表示註冊事件參考以進行驗證，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-278">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-279">傳回字串，以用於用戶端事件中造成回傳給伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-279">Returns a string to use in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="30ba8-280">參考字串是由處理回傳的指定控制項和其他事件資訊的字串引數所定義。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-280">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
          <span data-ttu-id="30ba8-281">或者，註冊事件參考以進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-281">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-282">視為用戶端上的指令碼時，啟始回傳的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-282">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-283">若要實作<xref:System.Web.UI.IPostBackEventHandler>介面<xref:System.Web.UI.Page>，使用指示詞。</span><span class="sxs-lookup"><span data-stu-id="30ba8-283">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 <span data-ttu-id="30ba8-284"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法可以與使用<xref:System.Web.UI.WebControls.Button>負責控制何時<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>屬性是`false`。</span><span class="sxs-lookup"><span data-stu-id="30ba8-284">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="30ba8-285">在此案例中，<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>方法會傳回用戶端回傳事件<xref:System.Web.UI.WebControls.Button>控制項。</span><span class="sxs-lookup"><span data-stu-id="30ba8-285">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="30ba8-286">如果`registerForEventValidation`為 true，<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29>方法呼叫<xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29>方法，使用唯一的控制項 ID 表示已產生事件的用戶端控制項登錄事件參考以進行驗證。</span><span class="sxs-lookup"><span data-stu-id="30ba8-286">If `registerForEventValidation` is true, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-287">指定的 <see cref="T:System.Web.UI.Control" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-287">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWebResourceUrl">
      <MemberSignature Language="C#" Value="public string GetWebResourceUrl (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetWebResourceUrl(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetWebResourceUrl(Type ^ type, System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30ba8-288">資源的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-288">The type of the resource.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="30ba8-289">組件中資源的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-289">The fully qualified name of the resource in the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-290">取得對組件中資源的 URL 參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-290">Gets a URL reference to a resource in an assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-291">對資源的 URL 參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-291">The URL reference to the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-292"><xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A>方法傳回其 URL 參考的組件中內嵌資源。</span><span class="sxs-lookup"><span data-stu-id="30ba8-292">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method returns a URL reference to a resource embedded in an assembly.</span></span> <span data-ttu-id="30ba8-293">傳回的參考不是 URL 編碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-293">The returned reference is not URL encoded.</span></span> <span data-ttu-id="30ba8-294">資源可以是指令碼檔案、 影像或任何靜態檔案。</span><span class="sxs-lookup"><span data-stu-id="30ba8-294">Resources can be script files, images, or any static file.</span></span> <span data-ttu-id="30ba8-295">您指定將用來存取資源的物件為基礎的類型。</span><span class="sxs-lookup"><span data-stu-id="30ba8-295">You specify the type based on the object that will be accessing the resource.</span></span>  
  
 <span data-ttu-id="30ba8-296">註冊頁面的 Web 資源是唯一識別由型別和名稱。</span><span class="sxs-lookup"><span data-stu-id="30ba8-296">A Web resource registered with the page is uniquely identified by its type and name.</span></span> <span data-ttu-id="30ba8-297">使用指定的型別和名稱組合只能有一個資源可以向頁面。</span><span class="sxs-lookup"><span data-stu-id="30ba8-297">Only one resource with a given type and name pair can be registered with the page.</span></span> <span data-ttu-id="30ba8-298">嘗試註冊已註冊的資源不會建立重複的已註冊的資源。</span><span class="sxs-lookup"><span data-stu-id="30ba8-298">Attempting to register a resource that is already registered does not create a duplicate of the registered resource.</span></span>  
  
 <span data-ttu-id="30ba8-299"><xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A>方法用於搭配<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A>方法來存取的資源內嵌於組件。</span><span class="sxs-lookup"><span data-stu-id="30ba8-299">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method is used in conjunction with the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method for accessing resources embedded in assemblies.</span></span> <span data-ttu-id="30ba8-300">如需有關應用程式中使用的資源的詳細資訊，請參閱[ASP.NET Web 網頁資源概觀](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd)。</span><span class="sxs-lookup"><span data-stu-id="30ba8-300">For more information on using resources in applications, see [ASP.NET Web Page Resources Overview](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-301">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-301">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method.</span></span> <span data-ttu-id="30ba8-302">*類型*在此範例中的參數設定為包含資源的組件中類別的類型。</span><span class="sxs-lookup"><span data-stu-id="30ba8-302">The *type* parameter in this example is set to the type of class in the assembly containing the resource.</span></span> <span data-ttu-id="30ba8-303">`resourceName`參數指定的資源，包括預設命名空間的完整路徑。</span><span class="sxs-lookup"><span data-stu-id="30ba8-303">The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="30ba8-304">下列程式碼範例示範如何以程式設計的方式套用<xref:System.Web.UI.WebResourceAttribute>中繼資料屬性來標記系統將會處理資源的組件。</span><span class="sxs-lookup"><span data-stu-id="30ba8-304">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span> <span data-ttu-id="30ba8-305">編譯類別庫中的下列類別設定為預設命名空間`Samples.AspNet.CS.Controls`或`Samples.AspNet.VB.Controls`，視您使用何種語言。</span><span class="sxs-lookup"><span data-stu-id="30ba8-305">Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="30ba8-306">這個範例需要名為的 JavaScript 檔案`Script_include.js`。</span><span class="sxs-lookup"><span data-stu-id="30ba8-306">This example requires a JavaScript file named `Script_include.js`.</span></span> <span data-ttu-id="30ba8-307">.Js 檔案是包含的組件中的內嵌的資源`ClientScriptResourceLabel`物件。</span><span class="sxs-lookup"><span data-stu-id="30ba8-307">The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object.</span></span> <span data-ttu-id="30ba8-308">如果您使用[!INCLUDE[vs_current_short](~/includes/vs-current-short-md.md)]，在 類別庫專案的 [屬性] 視窗中，設定**建置動作**至**內嵌資源**選取指令碼檔案時。</span><span class="sxs-lookup"><span data-stu-id="30ba8-308">If you are using [!INCLUDE[vs_current_short](~/includes/vs-current-short-md.md)], in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected.</span></span> <span data-ttu-id="30ba8-309">如果您正在編譯的程式庫，在命令列，請使用參數將內嵌資源。</span><span class="sxs-lookup"><span data-stu-id="30ba8-309">If you are compiling the library at the command line, use the  switch to embed the resource.</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-310">Web 資源名稱為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-310">The web resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="30ba8-311">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-311">\- or -</span>
          </span>
          <span data-ttu-id="30ba8-312">Web 資源名稱長度為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-312">The web resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptBlockRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ba8-313">判斷用戶端指令碼區塊是否向 <see cref="T:System.Web.UI.Page" /> 物件註冊過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-313">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="30ba8-314">要搜尋的用戶端指令碼區塊索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-314">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-315">判斷用戶端指令碼區塊是否已使用指定的索引鍵，向 <see cref="T:System.Web.UI.Page" /> 物件註冊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-315">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-316">如果此用戶端指令碼區塊已註冊，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-316">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-317">呼叫這個方法之前先呼叫<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法，以避免註冊重複的指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-317">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="30ba8-318">這是特別重要，此指令碼需要大量伺服器資源用來建立。</span><span class="sxs-lookup"><span data-stu-id="30ba8-318">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30ba8-319">用戶端指令碼是唯一識別由其索引鍵和其類型。</span><span class="sxs-lookup"><span data-stu-id="30ba8-319">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30ba8-320">具有相同索引鍵和類型的指令碼會被視為重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-320">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="30ba8-321">這個多載<xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>方法呼叫的多載，兩者`key`和`type`類型的參數設定為<xref:System.Web.UI.Page>物件</span><span class="sxs-lookup"><span data-stu-id="30ba8-321">This overload of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30ba8-322">要搜尋的用戶端指令碼區塊型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-322">The type of the client script block to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30ba8-323">要搜尋的用戶端指令碼區塊索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-323">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-324">判斷用戶端指令碼區塊是否已使用指定的索引鍵和型別，向 <see cref="T:System.Web.UI.Page" /> 物件註冊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-324">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-325">如果此用戶端指令碼區塊已註冊，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-325">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-326">呼叫這個方法之前先呼叫<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法，以避免註冊重複的指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-326">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="30ba8-327">這是特別重要，此指令碼需要大量伺服器資源用來建立。</span><span class="sxs-lookup"><span data-stu-id="30ba8-327">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30ba8-328">用戶端指令碼是唯一識別由其索引鍵和其類型。</span><span class="sxs-lookup"><span data-stu-id="30ba8-328">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30ba8-329">具有相同索引鍵和類型的指令碼會被視為重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-329">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30ba8-330">您指定將用來存取資源的物件為基礎的類型。</span><span class="sxs-lookup"><span data-stu-id="30ba8-330">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="30ba8-331">比方說，當使用`Page`存取資源，您指定的執行個體`Page`型別。</span><span class="sxs-lookup"><span data-stu-id="30ba8-331">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-332">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-332">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="30ba8-333">請注意，是否已移除邏輯，以檢查是否有現有的用戶端指令碼區塊，會不會有兩個重複的用戶端指令碼所呈現頁面的 HTML 原始碼中因為<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法檢查是否有重複的項目。</span><span class="sxs-lookup"><span data-stu-id="30ba8-333">Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates.</span></span> <span data-ttu-id="30ba8-334">檢查的好處是減少不必要的計算。</span><span class="sxs-lookup"><span data-stu-id="30ba8-334">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-335">用戶端指令碼型別為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-335">The client script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptIncludeRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ba8-336">判斷用戶端指令碼 Include 是否向 <see cref="T:System.Web.UI.Page" /> 物件註冊過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-336">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptIncludeRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="30ba8-337">要搜尋的用戶端指令碼 Include 索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-337">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-338">判斷用戶端指令碼 Include 是否已使用指定的索引鍵，向 <see cref="T:System.Web.UI.Page" /> 物件註冊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-338">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-339">如果用戶端指令碼 Include 已註冊，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-339">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-340">呼叫這個方法之前先呼叫<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>方法，以避免註冊重複的指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-340">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="30ba8-341">這是特別重要，此指令碼需要大量伺服器資源用來建立。</span><span class="sxs-lookup"><span data-stu-id="30ba8-341">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30ba8-342">用戶端指令碼包含可唯一識別索引鍵和其型別。</span><span class="sxs-lookup"><span data-stu-id="30ba8-342">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30ba8-343">具有相同索引鍵和類型的指令碼會被視為重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-343">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="30ba8-344">這個多載<xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>方法呼叫的多載，兩者`key`和`type`類型的參數設定為<xref:System.Web.UI.Page>物件。</span><span class="sxs-lookup"><span data-stu-id="30ba8-344">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30ba8-345">要搜尋的用戶端指令碼 Include 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-345">The type of the client script include to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30ba8-346">要搜尋的用戶端指令碼 Include 索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-346">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-347">判斷用戶端指令碼 Include 是否已使用指定的索引鍵和型別，向 <see cref="T:System.Web.UI.Page" /> 物件註冊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-347">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-348">如果用戶端指令碼 Include 已註冊，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-348">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-349">呼叫這個方法之前先呼叫<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>包含方法，以避免註冊重複的用戶端指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-349">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate client script includes.</span></span> <span data-ttu-id="30ba8-350">這是特別重要，此指令碼需要大量伺服器資源用來建立。</span><span class="sxs-lookup"><span data-stu-id="30ba8-350">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30ba8-351">用戶端指令碼包含可唯一識別索引鍵和其型別。</span><span class="sxs-lookup"><span data-stu-id="30ba8-351">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30ba8-352">具有相同索引鍵和類型的指令碼會被視為重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-352">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30ba8-353">您指定將用來存取資源的物件為基礎的類型。</span><span class="sxs-lookup"><span data-stu-id="30ba8-353">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="30ba8-354">比方說，當使用 Page 執行個體來存取資源，您指定`Page`型別。</span><span class="sxs-lookup"><span data-stu-id="30ba8-354">For instance, when using a Page instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-355">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-355">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method.</span></span> <span data-ttu-id="30ba8-356">請注意，邏輯，以檢查是否有現有的用戶端指令碼包含已移除，是否不有兩個重複的用戶端指令碼中所呈現頁面的 HTML 原始碼因為<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>方法檢查是否有重複的項目。</span><span class="sxs-lookup"><span data-stu-id="30ba8-356">Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="30ba8-357">檢查的好處是減少不必要的計算。</span><span class="sxs-lookup"><span data-stu-id="30ba8-357">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="30ba8-358">這個範例需要名為的 JavaScript 檔案`Script_include.js`，具有下列內容：</span><span class="sxs-lookup"><span data-stu-id="30ba8-358">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-359">用戶端指令碼 Include 型別為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-359">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOnSubmitStatementRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ba8-360">判斷 OnSubmit 陳述式是否向 <see cref="T:System.Web.UI.Page" /> 物件註冊過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-360">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOnSubmitStatementRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="30ba8-361">要搜尋的 OnSubmit 陳述式索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-361">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-362">判斷 OnSubmit 陳述式是否已使用指定的索引鍵，向 <see cref="T:System.Web.UI.Page" /> 物件註冊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-362">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-363">如果 OnSubmit 陳述式已註冊，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-363">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-364">呼叫這個方法之前先呼叫<xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>方法，以避免註冊重複 OnSubmit 陳述式。</span><span class="sxs-lookup"><span data-stu-id="30ba8-364">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate OnSubmit statements.</span></span> <span data-ttu-id="30ba8-365">這是特別重要，如果陳述式就需要大量伺服器資源用來建立。</span><span class="sxs-lookup"><span data-stu-id="30ba8-365">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30ba8-366">陳述式是以其索引鍵和其類型唯一識別。</span><span class="sxs-lookup"><span data-stu-id="30ba8-366">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30ba8-367">具有相同索引鍵和類型的陳述式會被視為重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-367">Statements with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="30ba8-368">這個多載<xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>方法呼叫的多載，兩者`key`和`type`類型的參數設定為<xref:System.Web.UI.Page>物件</span><span class="sxs-lookup"><span data-stu-id="30ba8-368">This overload of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30ba8-369">要搜尋的 OnSubmit 陳述式類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-369">The type of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30ba8-370">要搜尋的 OnSubmit 陳述式索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-370">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-371">判斷 OnSubmit 陳述式是否已使用指定的索引鍵和類型，向 <see cref="T:System.Web.UI.Page" /> 物件註冊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-371">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-372">如果 OnSubmit 陳述式已註冊，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-372">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-373">呼叫這個方法之前先呼叫<xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>方法，以避免註冊重複的陳述式。</span><span class="sxs-lookup"><span data-stu-id="30ba8-373">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate statements.</span></span> <span data-ttu-id="30ba8-374">這是特別重要，如果陳述式就需要大量伺服器資源用來建立。</span><span class="sxs-lookup"><span data-stu-id="30ba8-374">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30ba8-375">陳述式是以其索引鍵和其類型唯一識別。</span><span class="sxs-lookup"><span data-stu-id="30ba8-375">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30ba8-376">具有相同索引鍵和類型的陳述式會被視為重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-376">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30ba8-377">您指定將用來存取資源的物件為基礎的類型。</span><span class="sxs-lookup"><span data-stu-id="30ba8-377">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="30ba8-378">比方說，當使用`Page`存取資源，您指定的執行個體`Page`型別。</span><span class="sxs-lookup"><span data-stu-id="30ba8-378">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-379">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-379">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method.</span></span> <span data-ttu-id="30ba8-380">名為指令碼`OnSubmitScript`已向<xref:System.Web.UI.Page>使頁面的表單時送出指令碼會叫用。</span><span class="sxs-lookup"><span data-stu-id="30ba8-380">A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-381">OnSubmit 陳述式類型為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-381">The OnSubmit statement type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartupScriptRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ba8-382">判斷啟始指令碼是否向 <see cref="T:System.Web.UI.Page" /> 物件註冊過。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-382">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="30ba8-383">要搜尋的啟始指令碼索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-383">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-384">判斷啟始指令碼是否已使用指定的索引鍵，向 <see cref="T:System.Web.UI.Page" /> 物件註冊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-384">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-385">如果啟始指令碼已登錄，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-385">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-386">呼叫這個方法之前先呼叫<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法，以避免註冊重複的指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-386">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="30ba8-387">這是特別重要，此指令碼需要大量伺服器資源用來建立。</span><span class="sxs-lookup"><span data-stu-id="30ba8-387">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30ba8-388">啟動指令碼是唯一識別由其索引鍵和其類型。</span><span class="sxs-lookup"><span data-stu-id="30ba8-388">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30ba8-389">具有相同索引鍵和類型的指令碼會被視為重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-389">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="30ba8-390">這個多載<xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>方法呼叫的多載，這兩個字串`key`和`type`類型的參數設定為<xref:System.Web.UI.Page>物件</span><span class="sxs-lookup"><span data-stu-id="30ba8-390">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a string `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(Type ^ type, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30ba8-391">要搜尋的啟始指令碼型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-391">The type of the startup script to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30ba8-392">要搜尋的啟始指令碼索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-392">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-393">判斷啟始指令碼是否已使用指定的索引鍵和型別，向 <see cref="T:System.Web.UI.Page" /> 物件註冊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-393">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="30ba8-394">如果啟始指令碼已登錄，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-394">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-395">呼叫這個方法之前先呼叫<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法，以避免註冊重複的指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-395">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="30ba8-396">這是特別重要，此指令碼需要大量伺服器資源用來建立。</span><span class="sxs-lookup"><span data-stu-id="30ba8-396">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="30ba8-397">用戶端啟動指令碼是唯一識別由其索引鍵和其類型。</span><span class="sxs-lookup"><span data-stu-id="30ba8-397">A client startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30ba8-398">具有相同索引鍵和類型的指令碼會被視為重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-398">Scripts with the same key and type are considered duplicates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-399">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-399">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="30ba8-400">請注意，是否已移除邏輯，以檢查是否有現有的啟動指令碼區塊，會不會有兩個重複的啟動指令碼所呈現頁面的 HTML 原始碼中因為<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法檢查是否有重複的項目。</span><span class="sxs-lookup"><span data-stu-id="30ba8-400">Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates.</span></span> <span data-ttu-id="30ba8-401">檢查的好處是減少不必要的計算。</span><span class="sxs-lookup"><span data-stu-id="30ba8-401">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-402">啟始指令碼型別為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-402">The startup script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName">
          <span data-ttu-id="30ba8-403">要註冊的陣列名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-403">The array name to register.</span>
          </span>
        </param>
        <param name="arrayValue">
          <span data-ttu-id="30ba8-404">要註冊的一或多個陣列值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-404">The array value or values to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-405">使用陣列名稱和陣列值，向 <see cref="T:System.Web.UI.Page" /> 物件註冊 JavaScript 陣列宣告。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-405">Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-406"><xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>檢查，以查看是否已註冊的陣列存在中指定的名稱與同名`arrayName`參數，如果是的話，將在指定的值`arrayValue`參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-406">The <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter.</span></span> <span data-ttu-id="30ba8-407">因為基礎儲存機制根據<xref:System.Collections.ArrayList>，允許重複的項目。</span><span class="sxs-lookup"><span data-stu-id="30ba8-407">Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed.</span></span> <span data-ttu-id="30ba8-408">如果具有相同名稱的已註冊陣列`arrayName`參數不存在，則會建立和中的值`arrayValue`加入它的參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-408">If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.</span></span>  
  
 <span data-ttu-id="30ba8-409">如果您想產生 JavaScript 陣列中的字串常值，包含單引號 （'） 或逸出雙引號內 (\\") 中`arrayValue`參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-409">If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\") in the `arrayValue` parameter.</span></span> <span data-ttu-id="30ba8-410">值`arrayValue`參數應該是單一項目。</span><span class="sxs-lookup"><span data-stu-id="30ba8-410">The value of the `arrayValue` parameter should be a single element.</span></span> <span data-ttu-id="30ba8-411">如果要加入至陣列需要一個以上的值，請使用多個呼叫<xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-411">If more than one value needs to be added to the array, make multiple calls using the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-412">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>和<xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-412">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="30ba8-413">這個範例會登錄陣列和隱藏的值，定義`OnClick`事件`<input>`按鈕來計算兩個值的陣列和隱藏的值的總和。</span><span class="sxs-lookup"><span data-stu-id="30ba8-413">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-414">
            <paramref name="arrayName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-414">
              <paramref name="arrayName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.String.Split" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ba8-415">向 <see cref="T:System.Web.UI.Page" /> 物件註冊用戶端指令碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-415">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30ba8-416">要註冊的用戶端指令碼型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-416">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30ba8-417">要註冊的用戶端指令碼索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-417">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="30ba8-418">要註冊的用戶端指令碼常值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-418">The client script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-419">使用型別、索引鍵和指令碼常值，向 <see cref="T:System.Web.UI.Page" /> 物件註冊用戶端指令碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-419">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-420">用戶端指令碼是唯一識別由其索引鍵和其類型。</span><span class="sxs-lookup"><span data-stu-id="30ba8-420">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30ba8-421">具有相同索引鍵和類型的指令碼會被視為重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-421">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30ba8-422">指定的型別和索引鍵組合只有一個指令碼可以向頁面。</span><span class="sxs-lookup"><span data-stu-id="30ba8-422">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="30ba8-423">嘗試註冊已註冊的指令碼不會建立指令碼的重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-423">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="30ba8-424">呼叫<xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>方法來判斷是否已註冊的用戶端指令碼，具有給定索引鍵和類型配對，並避免不必要地嘗試要加入指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-424">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="30ba8-425">中的這個多載<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法，您必須確定提供的指令碼`script`參數會包裝在`<script>`項目區塊。</span><span class="sxs-lookup"><span data-stu-id="30ba8-425">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you must make sure that the script provided in the `script` parameter is wrapped in a `<script>` element block.</span></span>  
  
 <span data-ttu-id="30ba8-426"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法會將指令碼區塊所呈現頁面的頂端。</span><span class="sxs-lookup"><span data-stu-id="30ba8-426">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="30ba8-427">指令碼區塊並非都能註冊它們的順序輸出。</span><span class="sxs-lookup"><span data-stu-id="30ba8-427">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="30ba8-428">如果指令碼區塊的順序很重要，使用<xref:System.Text.StringBuilder>来收集在單一字串中，指令碼的物件，然後再將它們登錄單一用戶端指令碼區塊中的所有。</span><span class="sxs-lookup"><span data-stu-id="30ba8-428">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-429">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-429">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30ba8-430">要註冊的用戶端指令碼型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-430">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30ba8-431">要註冊的用戶端指令碼索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-431">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="30ba8-432">要註冊的用戶端指令碼常值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-432">The client script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="30ba8-433">表示是否加入指令碼標記的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-433">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-434">使用型別、索引鍵、指令碼常值，以及表示是否加入指令碼標記的布林值，向 <see cref="T:System.Web.UI.Page" /> 物件註冊用戶端指令碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-434">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-435">用戶端指令碼是唯一識別由其索引鍵和其類型。</span><span class="sxs-lookup"><span data-stu-id="30ba8-435">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30ba8-436">具有相同索引鍵和類型的指令碼會被視為重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-436">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30ba8-437">指定的型別和索引鍵組合只有一個指令碼可以向頁面。</span><span class="sxs-lookup"><span data-stu-id="30ba8-437">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="30ba8-438">嘗試註冊已註冊的指令碼不會建立指令碼的重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-438">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="30ba8-439">呼叫<xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>方法，以判斷是否已註冊的用戶端指令碼，具有給定索引鍵和類型配對。</span><span class="sxs-lookup"><span data-stu-id="30ba8-439">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered.</span></span> <span data-ttu-id="30ba8-440">這可讓您避免不必要地嘗試要加入指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-440">This lets you avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="30ba8-441">中的這個多載<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法，您可以指出是否在指令碼中提供`script`參數會包裝與`<script>`所使用的項目區塊`addScriptTags`參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-441">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="30ba8-442">設定`addScriptTags`至`true`表示指令碼標記將會自動加入。</span><span class="sxs-lookup"><span data-stu-id="30ba8-442">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="30ba8-443"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法會將指令碼區塊所呈現頁面的頂端。</span><span class="sxs-lookup"><span data-stu-id="30ba8-443">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="30ba8-444">指令碼區塊並非都能註冊它們的順序輸出。</span><span class="sxs-lookup"><span data-stu-id="30ba8-444">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="30ba8-445">如果指令碼區塊的順序很重要，使用<xref:System.Text.StringBuilder>来收集在單一字串中，指令碼的物件，然後再將它們登錄單一用戶端指令碼區塊中的所有。</span><span class="sxs-lookup"><span data-stu-id="30ba8-445">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-446">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-446">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span> <span data-ttu-id="30ba8-447">請注意，`addScriptTags`參數設定為`true`讓的開始和關閉指令碼標記未隨附於`script`參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-447">Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-448">用戶端指令碼區塊型別為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-448">The client script block type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ba8-449">向 <see cref="T:System.Web.UI.Page" /> 物件註冊用戶端指令碼 Include。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-449">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClientScriptInclude (key As String, url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(System::String ^ key, System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="30ba8-450">要註冊的用戶端指令碼 Include 索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-450">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="30ba8-451">要註冊的用戶端指令碼 Include URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-451">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-452">使用索引鍵和 URL 在 <see cref="T:System.Web.UI.Page" /> 物件註冊用戶端指令碼，讓您能夠從用戶端呼叫此指令碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-452">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL, which enables the script to be called from the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-453">用戶端指令碼包含可唯一識別索引鍵和其型別。</span><span class="sxs-lookup"><span data-stu-id="30ba8-453">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30ba8-454">具有相同索引鍵和類型的指令碼會被視為重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-454">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30ba8-455">指定的型別和索引鍵組合只有一個指令碼可以向頁面。</span><span class="sxs-lookup"><span data-stu-id="30ba8-455">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="30ba8-456">嘗試註冊已註冊的指令碼不會建立指令碼的重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-456">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="30ba8-457">呼叫<xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A>方法，以判斷是否包含具有指定索引鍵的用戶端指令碼和已註冊型別組，並避免不必要地嘗試要加入指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-457">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method to determine whether a client script include with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="30ba8-458">若要解決用戶端 URL，請使用<xref:System.Web.UI.Control.ResolveClientUrl%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-458">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="30ba8-459">這個方法會使用內容呼叫它來解析路徑的 URL。</span><span class="sxs-lookup"><span data-stu-id="30ba8-459">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="30ba8-460">這個多載<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>方法呼叫的多載， `key`、 `URL`，和`type`參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-460">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method calls the overload that takes a `key`, a `URL`, and a `type` parameter.</span></span>  
  
 <span data-ttu-id="30ba8-461">方法會將指令碼區塊所呈現頁面的頂端。</span><span class="sxs-lookup"><span data-stu-id="30ba8-461">The method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-462">如需相關資訊，包括語法、 使用方式和範例，請參閱<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>。</span><span class="sxs-lookup"><span data-stu-id="30ba8-462">For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30ba8-463">要註冊的用戶端指令碼 Include 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-463">The type of the client script include to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30ba8-464">要註冊的用戶端指令碼 Include 索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-464">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="30ba8-465">要註冊的用戶端指令碼 Include URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-465">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-466">使用型別、索引鍵和 URL，向 <see cref="T:System.Web.UI.Page" /> 物件註冊用戶端指令碼 Include。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-466">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-467">這個多載<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>方法會採用*金鑰*和*url*參數來識別指令碼，以及`type`包括參數來指定用戶端指令碼的識別。</span><span class="sxs-lookup"><span data-stu-id="30ba8-467">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method takes *key* and *url* parameters to identify the script, as well as a `type` parameter to specify the identification of the client script include.</span></span> <span data-ttu-id="30ba8-468">您指定將用來存取資源的物件為基礎的類型。</span><span class="sxs-lookup"><span data-stu-id="30ba8-468">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="30ba8-469">比方說，當使用`Page`存取資源，您指定的執行個體`Page`型別。</span><span class="sxs-lookup"><span data-stu-id="30ba8-469">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="30ba8-470">若要解決用戶端 URL，請使用<xref:System.Web.UI.Control.ResolveClientUrl%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-470">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="30ba8-471">這個方法會使用內容呼叫它來解析路徑的 URL。</span><span class="sxs-lookup"><span data-stu-id="30ba8-471">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="30ba8-472">這個方法所呈現頁面的頂端加入指令碼區塊。</span><span class="sxs-lookup"><span data-stu-id="30ba8-472">This method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-473">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-473">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method.</span></span> <span data-ttu-id="30ba8-474">請注意，是否邏輯，以檢查是否有現有的用戶端指令碼包含已移除，仍不會重複的用戶端指令碼中所呈現頁面因為<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>方法檢查是否有重複的項目。</span><span class="sxs-lookup"><span data-stu-id="30ba8-474">Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="30ba8-475">檢查的好處是減少不必要的計算。</span><span class="sxs-lookup"><span data-stu-id="30ba8-475">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="30ba8-476">這個範例需要名 Script_include.js 為具有下列內容的 JavaScript 檔案：</span><span class="sxs-lookup"><span data-stu-id="30ba8-476">This example requires a JavaScript file named Script_include.js with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-477">用戶端指令碼 Include 型別為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-477">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="30ba8-478">URL 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-478">The URL is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="30ba8-479">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-479">\- or -</span>
          </span>
          <span data-ttu-id="30ba8-480">URL 是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-480">The URL is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptResource (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptResource(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptResource(Type ^ type, System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30ba8-481">要註冊的用戶端指令碼資源類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-481">The type of the client script resource to register.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="30ba8-482">要註冊的用戶端指令碼資源名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-482">The name of the client script resource to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-483">使用型別和資源名稱，向 <see cref="T:System.Web.UI.Page" /> 物件註冊用戶端指令碼資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-483">Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-484"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A>方法從透過 WebResource.axd HTTP 處理常式的組件存取編譯中資源時才使用。</span><span class="sxs-lookup"><span data-stu-id="30ba8-484">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method is used when accessing compiled-in resources from assemblies through the WebResource.axd HTTP handler.</span></span> <span data-ttu-id="30ba8-485"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A>方法註冊的指令碼<xref:System.Web.UI.Page>物件，並可防止重複的指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-485">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method registers the script with the <xref:System.Web.UI.Page> object and prevents duplicate scripts.</span></span> <span data-ttu-id="30ba8-486">這個方法會包裝與資源 URL 的內容`<script>`項目區塊。</span><span class="sxs-lookup"><span data-stu-id="30ba8-486">This method wraps the contents of the resource URL with a `<script>` element block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-487">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-487">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="30ba8-488">下列程式碼範例示範如何以程式設計的方式套用<xref:System.Web.UI.WebResourceAttribute>中繼資料屬性來標記系統將會處理資源的組件。</span><span class="sxs-lookup"><span data-stu-id="30ba8-488">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="30ba8-489">這個範例需要名為的 JavaScript 檔案`Script_include.js`，具有下列內容：</span><span class="sxs-lookup"><span data-stu-id="30ba8-489">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 <span data-ttu-id="30ba8-490">編譯`Script_include.js`檔案中的資源為`Samples.AspNet.CS.Controls`包含組件`ClientScriptResourceLabel`類別。</span><span class="sxs-lookup"><span data-stu-id="30ba8-490">Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-491">用戶端資源名稱為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-491">The client resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="30ba8-492">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-492">\- or -</span>
          </span>
          <span data-ttu-id="30ba8-493">用戶端資源名稱長度為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-493">The client resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterExpandoAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ba8-494">將名稱/值組註冊為指定之控制項的自訂 (Expando) 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-494">Registers a name/value pair as a custom (expando) attribute of the specified control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="30ba8-495">網頁上包含自訂屬性的 <see cref="T:System.Web.UI.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-495">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="30ba8-496">要註冊的自訂屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-496">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="30ba8-497">自訂屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-497">The value of the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-498">使用控制項 ID、屬性名稱和屬性值，將名稱/值組註冊為指定之控制項的自訂 (Expando) 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-498">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-499"><xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>方法註冊為指定的自訂 (expando) 屬性的名稱/值組<xref:System.Web.UI.Control>。</span><span class="sxs-lookup"><span data-stu-id="30ba8-499">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="30ba8-500">Expando 屬性設為以動態方式從 JavaScript 保留呈現的控制項的標記的 XHTML 相容性。</span><span class="sxs-lookup"><span data-stu-id="30ba8-500">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="30ba8-501">引號和自訂 (expando) 屬性的值中的反斜線逸出。</span><span class="sxs-lookup"><span data-stu-id="30ba8-501">Quotes and backslashes in the custom (expando) attribute's values are escaped.</span></span> <span data-ttu-id="30ba8-502">如果您不想要逸出引號和反斜線，呼叫<xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>方法多載，並設定`encode`參數`false`。</span><span class="sxs-lookup"><span data-stu-id="30ba8-502">If you do not want to escape quotes and backslashes, call the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> overload method and set the `encode` parameter to `false`.</span></span>  
  
 <span data-ttu-id="30ba8-503">如果找不到 expando 屬性，或找不到要加入至 expando 屬性的控制項，仍發出用戶端指令碼，但它不會影響的控制項。</span><span class="sxs-lookup"><span data-stu-id="30ba8-503">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="30ba8-504">網頁上包含自訂屬性的 <see cref="T:System.Web.UI.Control" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-504">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="30ba8-505">要註冊的自訂屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-505">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="30ba8-506">自訂屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-506">The value of the custom attribute.</span>
          </span>
        </param>
        <param name="encode">
          <span data-ttu-id="30ba8-507">表示是否對要註冊之自訂屬性進行編碼的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-507">A Boolean value indicating whether to encode the custom attribute to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-508">使用控制項 ID、屬性名稱、屬性值，以及表示是否編碼屬性值的布林值，將名稱/值組註冊為指定之控制項的自訂 (Expando) 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-508">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-509"><xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>方法註冊為指定的自訂 (expando) 屬性的名稱/值組<xref:System.Web.UI.Control>。</span><span class="sxs-lookup"><span data-stu-id="30ba8-509">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="30ba8-510">Expando 屬性設為以動態方式從 JavaScript 保留呈現的控制項的標記的 XHTML 相容性。</span><span class="sxs-lookup"><span data-stu-id="30ba8-510">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="30ba8-511">設定`encode`參數`true`如果您需要逸出引號和 expando 屬性的值中的反斜線。</span><span class="sxs-lookup"><span data-stu-id="30ba8-511">Set the `encode` parameter to `true` if you need to escape quotes and backslashes in your expando attribute's value.</span></span>  
  
 <span data-ttu-id="30ba8-512">如果找不到 expando 屬性，或找不到要加入至 expando 屬性的控制項，仍發出用戶端指令碼，但它不會影響的控制項。</span><span class="sxs-lookup"><span data-stu-id="30ba8-512">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-513">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A>方法<xref:System.Web.UI.ClientScriptManager>類別。</span><span class="sxs-lookup"><span data-stu-id="30ba8-513">The following code example demonstrates how to use the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="30ba8-514">在轉譯的頁面集合中的用戶端指令碼`title`屬性`<span>`項目。</span><span class="sxs-lookup"><span data-stu-id="30ba8-514">The client script in the rendered page sets the `title` attribute of a `<span>` element.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/cs/clientscriptexpando.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/vb/clientscriptexpando.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForEventValidation">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ba8-515">註冊事件參考以進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-515">Registers an event reference for validation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="30ba8-516">唯一的 ID，表示產生事件的用戶端控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-516">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-517">使用唯一的控制項 ID (表示產生事件的用戶端控制項) 註冊事件參考以進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-517">Registers an event reference for validation with a unique control ID representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-518">如需詳細資訊和範例，請參閱<xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-518">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-519">下列範例示範如何使用<xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>方法和<xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A>方法，以註冊回呼，以進行驗證，而且如何驗證回呼源自頁面。</span><span class="sxs-lookup"><span data-stu-id="30ba8-519">The following example shows how to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/eventvalidation2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/eventvalidation2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (options As PostBackOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::Web::UI::PostBackOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="30ba8-520">
            <see cref="T:System.Web.UI.PostBackOptions" /> 物件，指定產生用戶端 JavaScript 以啟始回傳事件的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-520">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-521">使用 <see cref="T:System.Web.UI.PostBackOptions" /> 註冊事件參考以進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-521">Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-522">如需詳細資訊和範例，請參閱<xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-522">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.ValidateEvent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="30ba8-523">唯一的 ID，表示產生事件的用戶端控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-523">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30ba8-524">隨用戶端事件傳遞的事件引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-524">Event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-525">使用唯一的控制項 ID 和事件引數 (表示產生事件的用戶端控制項) 註冊事件參考以進行驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-525">Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30ba8-526">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>方法和<xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A>註冊回呼，以進行驗證和驗證回呼源自頁面的方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-526">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="30ba8-527">若要改善驗證範例所示，您可以修改驗證`argument`參數，以包含特定的使用者，例如識別或角色資訊</span><span class="sxs-lookup"><span data-stu-id="30ba8-527">To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 <span data-ttu-id="30ba8-528">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>註冊回呼，以進行驗證的方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-528">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method to register a callback for validation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="30ba8-529">這個方法會在 <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> 方法之前呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-529">The method is called prior to the <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName">
          <span data-ttu-id="30ba8-530">要註冊的隱藏欄位名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-530">The name of the hidden field to register.</span>
          </span>
        </param>
        <param name="hiddenFieldInitialValue">
          <span data-ttu-id="30ba8-531">要註冊的欄位初始值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-531">The initial value of the field to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-532">向 <see cref="T:System.Web.UI.Page" /> 物件註冊隱藏值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-532">Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-533"><xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>方法會建立隱藏`<input>`呈現的 HTML 網頁上的項目。</span><span class="sxs-lookup"><span data-stu-id="30ba8-533">The <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method creates a hidden `<input>` element on the rendered HTML page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-534">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>和<xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-534">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="30ba8-535">這個範例會登錄陣列和隱藏的值，定義`OnClick`事件`<input>`按鈕來計算兩個值的陣列和隱藏的值的總和。</span><span class="sxs-lookup"><span data-stu-id="30ba8-535">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-536">
            <paramref name="hiddenFieldName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-536">
              <paramref name="hiddenFieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.WebControls.HiddenField" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30ba8-537">要註冊的 OnSubmit 陳述式類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-537">The type of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30ba8-538">要註冊的 OnSubmit 陳述式索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-538">The key of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="30ba8-539">要註冊的 OnSubmit 陳述式指令碼常值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-539">The script literal of the OnSubmit statement to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-540">使用類型、索引鍵和指令碼常值 (Literal)，向 <see cref="T:System.Web.UI.Page" /> 物件註冊 OnSubmit 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-540">Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
          <span data-ttu-id="30ba8-541">當送出 <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> 時，會執行該陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-541">The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-542">索引鍵和其型別可唯一識別 OnSubmit 陳述式。</span><span class="sxs-lookup"><span data-stu-id="30ba8-542">An OnSubmit statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30ba8-543">具有相同索引鍵和類型的陳述式會被視為重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-543">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30ba8-544">指定的型別和索引鍵組合的單獨一個陳述式可以向頁面。</span><span class="sxs-lookup"><span data-stu-id="30ba8-544">Only one statement with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="30ba8-545">嘗試註冊已註冊的陳述式不會建立重複的陳述式。</span><span class="sxs-lookup"><span data-stu-id="30ba8-545">Attempting to register a statement that is already registered will not create a duplicate of the statement.</span></span>  
  
 <span data-ttu-id="30ba8-546">呼叫<xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A>方法來判斷是否 OnSubmit 陳述式已登錄指定的索引鍵和類型配對，並避免不必要地嘗試要加入指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-546">Call the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method to determine whether an OnSubmit statement is already registered with a given key and type pair and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="30ba8-547">`script`參數<xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>，只要它們是以分號 （;） 分隔的正確方法可以包含多個指令碼命令。</span><span class="sxs-lookup"><span data-stu-id="30ba8-547">The `script` parameter of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands as long as they are properly delimited with a semicolon (;).</span></span>  
  
 <span data-ttu-id="30ba8-548"><xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>新增指令碼執行時再將頁面送出，而且可讓您有機會取消送出。</span><span class="sxs-lookup"><span data-stu-id="30ba8-548">The <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> adds a script that is executed before the page is submitted and gives you an opportunity to cancel the submission.</span></span>  
  
 <span data-ttu-id="30ba8-549">如需有關 HTML 表單和`OnSubmit`屬性，請參閱[World Wide Web Consortium (W3C) 網站](http://go.microsoft.com/fwlink/?linkid=37125)。</span><span class="sxs-lookup"><span data-stu-id="30ba8-549">For more information on HTML forms and the `OnSubmit` attribute, see the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-550">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-550">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-551">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-551">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ba8-552">向 <see cref="T:System.Web.UI.Page" /> 物件註冊啟始指令碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-552">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30ba8-553">要註冊的啟始指令碼型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-553">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30ba8-554">要註冊的啟始指令碼索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-554">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="30ba8-555">要註冊的啟始指令碼常值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-555">The startup script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-556">使用型別、索引鍵和指令碼常值，向 <see cref="T:System.Web.UI.Page" /> 物件註冊啟始指令碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-556">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-557">用戶端指令碼是唯一識別由其索引鍵和其類型。</span><span class="sxs-lookup"><span data-stu-id="30ba8-557">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30ba8-558">具有相同索引鍵和類型的指令碼會被視為重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-558">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30ba8-559">指定的型別和索引鍵組合只有一個指令碼可以向頁面。</span><span class="sxs-lookup"><span data-stu-id="30ba8-559">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="30ba8-560">嘗試註冊已註冊的指令碼不會建立指令碼的重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-560">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="30ba8-561">呼叫<xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>方法來判斷是否已註冊啟動指令碼，具有給定索引鍵和類型配對，並避免不必要地嘗試要加入指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-561">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="30ba8-562">中的這個多載<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法，您必須確定提供的指令碼`script`參數會包裝與`<script>`項目區塊。</span><span class="sxs-lookup"><span data-stu-id="30ba8-562">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you must make sure that the script provided in the `script` parameter is wrapped with a `<script>` element block.</span></span>  
  
 <span data-ttu-id="30ba8-563">所加入的指令碼區塊<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法執行時在網頁完成載入，但頁面之前<xref:System.Web.UI.Control.OnLoad%2A>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="30ba8-563">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="30ba8-564">指令碼區塊並非都能註冊它們的順序輸出。</span><span class="sxs-lookup"><span data-stu-id="30ba8-564">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="30ba8-565">如果指令碼區塊的順序很重要，使用<xref:System.Text.StringBuilder>来收集在單一字串中，指令碼的物件，然後再將它們登錄單一用戶端指令碼區塊中的所有。</span><span class="sxs-lookup"><span data-stu-id="30ba8-565">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-566">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-566">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="30ba8-567">請注意，開頭和結尾的指令碼標記包含在`script`參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-567">Note that the beginning and closing script tags are included within the `script` parameter.</span></span> <span data-ttu-id="30ba8-568">若要將指令碼標記加入根據額外的參數設定，請參閱<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-568">To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="30ba8-569">要註冊的啟始指令碼型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-569">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="30ba8-570">要註冊的啟始指令碼索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-570">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="30ba8-571">要註冊的啟始指令碼常值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-571">The startup script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="30ba8-572">表示是否加入指令碼標記的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-572">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-573">使用型別、索引鍵、指令碼常值，以及表示是否加入指令碼標記的布林值，向 <see cref="T:System.Web.UI.Page" /> 物件註冊啟始指令碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-573">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="30ba8-574">啟動指令碼是唯一識別由其索引鍵和其類型。</span><span class="sxs-lookup"><span data-stu-id="30ba8-574">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="30ba8-575">具有相同索引鍵和類型的指令碼會被視為重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-575">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="30ba8-576">指定的型別和索引鍵組合只有一個指令碼可以向頁面。</span><span class="sxs-lookup"><span data-stu-id="30ba8-576">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="30ba8-577">嘗試註冊已註冊的指令碼不會建立指令碼的重複。</span><span class="sxs-lookup"><span data-stu-id="30ba8-577">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="30ba8-578">呼叫<xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>方法來判斷是否已註冊啟動指令碼，具有給定索引鍵和類型配對，並避免不必要地嘗試要加入指令碼。</span><span class="sxs-lookup"><span data-stu-id="30ba8-578">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="30ba8-579">中的這個多載<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法，您可以指出是否在指令碼中提供`script`參數會包裝與`<script>`所使用的項目區塊`addScriptTags`參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-579">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="30ba8-580">設定`addScriptTags`至`true`表示指令碼標記將會自動加入。</span><span class="sxs-lookup"><span data-stu-id="30ba8-580">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="30ba8-581">所加入的指令碼區塊<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法執行時在網頁完成載入，但頁面之前<xref:System.Web.UI.Control.OnLoad%2A>就會引發事件。</span><span class="sxs-lookup"><span data-stu-id="30ba8-581">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="30ba8-582">指令碼區塊並非都能註冊它們的順序輸出。</span><span class="sxs-lookup"><span data-stu-id="30ba8-582">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="30ba8-583">如果指令碼區塊的順序很重要，使用<xref:System.Text.StringBuilder>来收集在單一字串中，指令碼的物件，然後再將它們登錄單一用戶端指令碼區塊中的所有。</span><span class="sxs-lookup"><span data-stu-id="30ba8-583">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="30ba8-584">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-584">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="30ba8-585">請注意，`addScriptTags`參數設定為`false`讓的開始和關閉指令碼標記隨附於`script`參數。</span><span class="sxs-lookup"><span data-stu-id="30ba8-585">Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="30ba8-586">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-586">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
        <altmember cref="F:System.Web.UI.HtmlTextWriterTag.Script" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="30ba8-587">驗證用戶端事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-587">Validates a client event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="30ba8-588">唯一的 ID，表示產生事件的用戶端控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-588">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-589">驗證使用 <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> 方法註冊以進行事件驗證的用戶端事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-589">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="30ba8-590">唯一的 ID，表示產生事件的用戶端控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-590">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="30ba8-591">隨用戶端事件傳遞的事件引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-591">The event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="30ba8-592">驗證使用 <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> 方法註冊以進行事件驗證的用戶端事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-592">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="30ba8-593">下列程式碼範例示範如何使用<xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>方法和<xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A>註冊回呼，以進行驗證和驗證回呼源自頁面的方法。</span><span class="sxs-lookup"><span data-stu-id="30ba8-593">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="30ba8-594">若要改善的驗證，如下所示，您可以修改驗證`argument`參數，以包含特定的使用者，例如識別或角色資訊</span><span class="sxs-lookup"><span data-stu-id="30ba8-594">To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="30ba8-595">
            <paramref name="uniqueId" /> 為 <see langword="null" /> 或空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="30ba8-595">
              <paramref name="uniqueId" /> is <see langword="null" /> or an empty string ("").</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>