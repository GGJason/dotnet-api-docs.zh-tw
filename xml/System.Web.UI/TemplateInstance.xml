<Type Name="TemplateInstance" FullName="System.Web.UI.TemplateInstance">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f353e358b613343f344accff563e703458137bc" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37529711" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum TemplateInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TemplateInstance extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.TemplateInstance" />
  <TypeSignature Language="VB.NET" Value="Public Enum TemplateInstance" />
  <TypeSignature Language="C++ CLI" Value="public enum class TemplateInstance" />
  <TypeSignature Language="F#" Value="type TemplateInstance = " />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>指定樣板的執行個體可建立的次數。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.TemplateInstance>列舉型別指定值，表示可以建立的範本執行個體的次數。 Attribute 類別使用的值來自<xref:System.Web.UI.TemplateInstanceAttribute>列舉型別。 特別是，屬性。單一和屬性。多個欄位分別指定範本時，單一和多重執行的個體。 單一執行個體的範本可讓您參考包含在範本內的控制項。  
  
 使用單一值屬性中繼資料中的控制項的範例包括<xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A>屬性<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控制項，<xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A>屬性<xref:System.Web.UI.WebControls.WebParts.EditorZone>控制項，而<xref:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate%2A>屬性<xref:System.Web.UI.WebControls.WebParts.WebPartZone>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.TemplateInstance>列舉型別和屬性類別。 自訂<xref:System.Web.UI.WebControls.LoginView>控制項，名為`MyLoginView`，會覆寫<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>屬性，並使用屬性類別來指定該只有一個執行個體<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>屬性建立。  
  
 [!code-csharp[System.Web.UI.TemplateInstance#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.TemplateInstance/cs/templateinstance.cs#1)]
 [!code-vb[System.Web.UI.TemplateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.TemplateInstance/vb/templateinstance.vb#1)]  
  
 下列程式碼範例是使用 ASPX 檔案`MyLoginView`控制項，並示範如何存取<xref:System.Web.UI.WebControls.Label>內的控制項<xref:System.Web.UI.WebControls.LoginView.AnonymousTemplate%2A>屬性。  
  
 [!code-aspx-csharp[System.Web.UI.TemplateInstance#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.TemplateInstance/cs/templateinstance.aspx#2)]
 [!code-aspx-vb[System.Web.UI.TemplateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.TemplateInstance/vb/templateinstance.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.TemplateInstanceAttribute" />
    <altmember cref="P:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
  </Docs>
  <Members>
    <Member MemberName="Multiple">
      <MemberSignature Language="C#" Value="Multiple" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.TemplateInstance Multiple = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.TemplateInstance.Multiple" />
      <MemberSignature Language="VB.NET" Value="Multiple" />
      <MemberSignature Language="C++ CLI" Value="Multiple" />
      <MemberSignature Language="F#" Value="Multiple = 0" Usage="System.Web.UI.TemplateInstance.Multiple" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.TemplateInstance</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>執行個體化多次的樣板。</summary>
      </Docs>
    </Member>
    <Member MemberName="Single">
      <MemberSignature Language="C#" Value="Single" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.TemplateInstance Single = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.TemplateInstance.Single" />
      <MemberSignature Language="VB.NET" Value="Single" />
      <MemberSignature Language="C++ CLI" Value="Single" />
      <MemberSignature Language="F#" Value="Single = 1" Usage="System.Web.UI.TemplateInstance.Single" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.TemplateInstance</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>執行個體化單次的樣板。</summary>
      </Docs>
    </Member>
  </Members>
</Type>