<Type Name="IStyleSheet" FullName="System.Web.UI.IStyleSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0dde21405f37dad7f367c6ef6f4da8cb33f98123" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51920164" /></Metadata><TypeSignature Language="C#" Value="public interface IStyleSheet" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStyleSheet" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IStyleSheet" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStyleSheet" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStyleSheet" />
  <TypeSignature Language="F#" Value="type IStyleSheet = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定義為了支援樣式規則的建立，類別必須實作的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作這個介面的類別可以使用它來支援建立樣式規則。  
  
 若要自訂的階層式樣式表的建立和註冊的方式，您必須建立可實作這個介面的類別。  
  
 <xref:System.Web.UI.HtmlControls.HtmlHead>類別會實作這個介面，以供透過 ASP.NET<xref:System.Web.UI.Page.Header%2A>屬性。  
  
> [!NOTE]
>  不支援新增或在非同步回傳期間以程式設計方式修改樣式或樣式規則。 當 AJAX 功能新增至 ASP.NET Web 網頁上時，非同步回傳會更新頁面的區域，而不需要更新整個頁面。 如需詳細資訊，請參閱 < [Microsoft Ajax 概觀](https://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb)。  
  
   
  
## Examples  
 下列程式碼範例會使用<xref:System.Web.UI.Page.Header%2A>實作<xref:System.Web.UI.IStyleSheet>示範以程式設計方式建立新的樣式規則與註冊自訂<xref:System.Web.UI.WebControls.Style>物件。  
  
 在此範例中，自訂的第一部分<xref:System.Web.UI.WebControls.Style>物件， `labelStyle`、 建立並登錄目前的位置 (URL)。 然後`label1`標籤呼叫<xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A>方法，讓`labelStyle`樣式套用至`label1`標籤。  
  
 此範例的第二個部分定義其他自訂<xref:System.Web.UI.WebControls.Style>物件， `bodyStyle`，並設定其屬性，以建立新的樣式規則。  
  
> [!NOTE]
>  這個類別主要被供開發人員想要建立的自訂實作。 此範例會示範.NET Framework 所提供的實作。  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/CS/istylesheetcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/VB/istylesheetvb.aspx#1)]  
  
 以下是在上述範例中的 [Web] 頁面的程式碼後置檔案。  
  
 [!code-csharp[System.Web.UI.IStyleSheet#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/CS/istylesheetcs.aspx.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Style" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlHead" />
    <related type="Article" href="https://msdn.microsoft.com/library/14adecd2-b688-45ec-b942-4a89183b3f91">逐步解說： 實作新樣式</related>
  </Docs>
  <Members>
    <Member MemberName="CreateStyleRule">
      <MemberSignature Language="C#" Value="public void CreateStyleRule (System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver, string selector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateStyleRule(class System.Web.UI.WebControls.Style style, class System.Web.UI.IUrlResolutionService urlResolver, string selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStyleSheet.CreateStyleRule(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateStyleRule(System::Web::UI::WebControls::Style ^ style, System::Web::UI::IUrlResolutionService ^ urlResolver, System::String ^ selector);" />
      <MemberSignature Language="F#" Value="abstract member CreateStyleRule : System.Web.UI.WebControls.Style * System.Web.UI.IUrlResolutionService * string -&gt; unit" Usage="iStyleSheet.CreateStyleRule (style, urlResolver, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
        <Parameter Name="selector" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="style">要加入至內嵌樣式表的樣式規則。</param>
        <param name="urlResolver"><see cref="T:System.Web.UI.IUrlResolutionService" /> 實作的物件，包含目前位置 (URL) 的內容資訊。</param>
        <param name="selector">HTML 頁面中受樣式影響的部分。</param>
        <summary>類別實作時，建立所指定之文件語言項目型別或選取器的樣式規則。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A>方法會建立指定的選取器的樣式規則。 相同的選取器，可以建立多個樣式規則。  
  
 如果`urlResolver`設定為`null`，在目前的 URL<xref:System.Web.UI.Page>會使用執行個體。  
  
> [!NOTE]
>  不支援新增或在非同步回傳期間以程式設計方式修改樣式或樣式規則。 當 AJAX 功能新增至 ASP.NET Web 網頁上時，非同步回傳會更新頁面的區域，而不需要更新整個頁面。 如需詳細資訊，請參閱 < [Microsoft Ajax 概觀](https://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb)。  
  
   
  
## Examples  
 下列程式碼範例會使用<xref:System.Web.UI.Page.Header%2A>實作<xref:System.Web.UI.IStyleSheet>示範定義新<xref:System.Web.UI.WebControls.Style>物件， `bodyStyle`。 然後`bodyStyle`呼叫新增至目前 URL <xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A>。  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheetCreateStyleRule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheetCreateStyleRule/CS/istylesheetcreatestylerulecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheetCreateStyleRule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheetCreateStyleRule/VB/istylesheetcreatestylerulevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="public void RegisterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterStyle(class System.Web.UI.WebControls.Style style, class System.Web.UI.IUrlResolutionService urlResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStyleSheet.RegisterStyle(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::IUrlResolutionService ^ urlResolver);" />
      <MemberSignature Language="F#" Value="abstract member RegisterStyle : System.Web.UI.WebControls.Style * System.Web.UI.IUrlResolutionService -&gt; unit" Usage="iStyleSheet.RegisterStyle (style, urlResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
      </Parameters>
      <Docs>
        <param name="style">要加入至內嵌樣式表的樣式規則。</param>
        <param name="urlResolver"><see cref="T:System.Web.UI.IUrlResolutionService" /> 實作的物件，包含目前位置 (URL) 的內容資訊。</param>
        <summary>類別實作時，將新樣式規則加入至網頁 <see langword="&lt;head&gt;" /> 區段中的內嵌樣式表。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會加入新的樣式規則並<xref:System.Web.UI.WebControls.Style.RegisteredCssClass%2A>至內嵌的樣式表內的屬性名稱`<head>`一節<xref:System.Web.UI.Page>物件，並將規則與自動產生樣式名稱。 <xref:System.Web.UI.WebControls.Style>物件會使用指定呈現`urlResolver`參數。  
  
 如果`urlResolver`設定為`null`，在目前的 URL<xref:System.Web.UI.Page>用。  
  
 如果<xref:System.Web.UI.WebControls.Style>已登錄物件，它不會加入多次。  
  
> [!NOTE]
>  不支援新增或以程式設計方式修改樣式，在非同步回傳期間。 當 AJAX 功能新增至 ASP.NET Web 網頁上時，非同步回傳會更新頁面的區域，而不需要更新整個頁面。 如需詳細資訊，請參閱 < [Microsoft Ajax 概觀](https://msdn.microsoft.com/library/be84d9b3-b7cd-47d7-8494-be4abfaad9cb)。  
  
   
  
## Examples  
 下列程式碼範例會使用<xref:System.Web.UI.Page.Header%2A>實作<xref:System.Web.UI.IStyleSheet>示範建立自訂<xref:System.Web.UI.WebControls.Style>物件， `labelStyle`，並接著將其註冊為目前的位置 (URL)。 然後`label1`標籤呼叫<xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A>方法，讓`labelStyle`樣式套用至`label1`標籤。  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheetRegisterStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheetRegisterStyle/CS/istylesheetregisterstylecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheetRegisterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheetRegisterStyle/VB/istylesheetregisterstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>