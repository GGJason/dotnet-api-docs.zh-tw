<Type Name="SessionPageStatePersister" FullName="System.Web.UI.SessionPageStatePersister">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34ccac48e85222cbde2f2485252a44672a9b8823" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30606452" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SessionPageStatePersister : System.Web.UI.PageStatePersister" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionPageStatePersister extends System.Web.UI.PageStatePersister" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.SessionPageStatePersister" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionPageStatePersister&#xA;Inherits PageStatePersister" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionPageStatePersister : System::Web::UI::PageStatePersister" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.PageStatePersister</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>將 ASP.NET 網頁檢視狀態儲存在 Web 伺服器上。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 網頁可以儲存<xref:System.Web.UI.Page>狀態之間原本是無狀態的 HTTP 要求和回應的處理，並提供任何網頁所需的資訊。 此狀態稱為 「 檢視狀態 」。  
  
 預設的 ASP.NET 持續性機制是將檢視狀態儲存在用戶端使用<xref:System.Web.UI.HiddenFieldPageStatePersister>類別。 儲存檢視狀態和資料與每個 HTTP 要求和回應中表現良好一般，而且是大型的 Web 伺服陣列案例中很重要，因為它並不重要的 Web 伺服器要求提供服務： 頁面狀態是可在目前的內容伺服器精確地呈現頁面。  
  
 會對用戶端的資源有限，或使用不支援隱藏的欄位元素的標記語言的小型裝置提供服務網頁的情況下，它都必須儲存在伺服器上檢視狀態。 數個 ASP.NET 裝置頁面配接器會覆寫`GetStatePersister`方法以傳回<xref:System.Web.UI.SessionPageStatePersister>用戶端相關聯的工作階段物件中的伺服器儲存的頁面狀態的物件。  
  
   
  
## Examples  
 下列程式碼範例示範如何撰寫<xref:System.Web.UI.Adapters.PageAdapter>類別，以傳回的執行個體<xref:System.Web.UI.SessionPageStatePersister>類別，而不使用預設<xref:System.Web.UI.HiddenFieldPageStatePersister>類別來儲存伺服器端工作階段物件的檢視狀態。  
  
 [!code-csharp[System.Web.UI.SessionPageStatePersister_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.SessionPageStatePersister_1/CS/mypageadapter2.cs#1)]
 [!code-vb[System.Web.UI.SessionPageStatePersister_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.SessionPageStatePersister_1/VB/mypageadapter2.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.PageStatePersister" />
    <altmember cref="T:System.Web.UI.HiddenFieldPageStatePersister" />
    <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionPageStatePersister (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.SessionPageStatePersister.#ctor(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionPageStatePersister(System::Web::UI::Page ^ page);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">建立其檢視狀態保存性機制的 <see cref="T:System.Web.UI.Page" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.SessionPageStatePersister" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何撰寫<xref:System.Web.UI.Adapters.PageAdapter>類別，以傳回的執行個體<xref:System.Web.UI.SessionPageStatePersister>類別來儲存伺服器端工作階段物件的檢視狀態。  
  
 [!code-csharp[System.Web.UI.SessionPageStatePersister_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.SessionPageStatePersister_1/CS/mypageadapter2.cs#1)]
 [!code-vb[System.Web.UI.SessionPageStatePersister_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.SessionPageStatePersister_1/VB/mypageadapter2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Web.SessionState.HttpSessionState" /> 是 null (在 Visual Basic 中為 <see langword="Nothing" />)。</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.SessionPageStatePersister.Load" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>當 <see cref="T:System.Web.UI.Page" /> 物件初始化其控制項階層架構時，便會從伺服器端工作階段物件還原序列化並載入保存的狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.SessionPageStatePersister>類別會實作<xref:System.Web.UI.SessionPageStatePersister.Load%2A>方法以載入的頁面狀態從<xref:System.Web.SessionState.HttpSessionState>用戶端相關聯的物件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="M:System.Web.UI.SessionPageStatePersister.Load" /> 方法無法順利還原序列化對 Web 伺服器之要求中包含的狀態。</exception>
        <altmember cref="M:System.Web.UI.SessionPageStatePersister.Save" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.SessionPageStatePersister.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>序列化 <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> 或 <see cref="P:System.Web.UI.PageStatePersister.ControlState" /> 屬性中包含的任何物件狀態，並將狀態寫入工作階段物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.SessionPageStatePersister>類別會實作<xref:System.Web.UI.HiddenFieldPageStatePersister.Save%2A>方法，將中的頁面狀態<xref:System.Web.SessionState.HttpSessionState>用戶端相關聯的物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.SessionPageStatePersister.Load" />
      </Docs>
    </Member>
  </Members>
</Type>