<Type Name="ServiceReference" FullName="System.Web.UI.ServiceReference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3575395c3216b868e4cf88b24b9d20ee8e2db08b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30608392" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceReference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceReference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ServiceReference" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceReference" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceReference" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>註冊 Web 服務以便於網頁中使用。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要從 ECMAScript (JavaScript) 呼叫 Web 服務方法，您必須 ASP.NET 網頁中加入服務參考，並套用<xref:System.Web.Script.Services.ScriptServiceAttribute>屬性設定為 Web 服務類別定義。 如果您要加入的服務參考中的 Web 服務<xref:System.Web.UI.ScriptManager>或<xref:System.Web.UI.ScriptManagerProxy>內 ASP.NET 頁面中，JavaScript 物件會在瀏覽器中具現化控制項。  
  
 Proxy 物件會用來執行下列作業：  
  
-   在 JavaScript 中的非同步要求對 Web 服務方法，  
  
-   初始化執行個體的 proxy 伺服器的資料型別，特別使用做為輸入參數來叫用 Web 方法。  
  
> [!NOTE]
>  <xref:System.Web.UI.ServiceReference>控制項只可以用相同的網域中的服務。  
  
 您可以宣告方式定義的 Web 服務的位置，藉由新增`<asp:ServiceReference>`項目`<Services>`元素內`<asp:ScriptManager>`元素在網頁上，然後設定其<xref:System.Web.UI.ServiceReference.Path%2A>屬性，如下列範例所示。  
  
```  
<asp:ScriptManager runat="server" ID="scriptManager">  
  <Services>  
    <asp:ServiceReference Path="~/WebServices/SimpleWebService.asmx" />  
  </Services>  
</asp:ScriptManager>  
```  
  
 您可能會使用<xref:System.Web.UI.ServiceReference.InlineScript%2A>屬性，指出 proxy 產生指令碼是否包含在網頁中內嵌指令碼區塊做，或個別要求所取得。  
  
 您可以也以程式設計方式加入<xref:System.Web.UI.ServiceReference>物件透過<xref:System.Web.UI.ScriptManager.Services%2A?displayProperty=nameWithType>或<xref:System.Web.UI.ScriptManagerProxy.Services%2A?displayProperty=nameWithType>集合使用<xref:System.Collections.ObjectModel.Collection%601.Add%2A>方法<xref:System.Web.UI.ServiceReferenceCollection>類別。  
  
   
  
## Examples  
 下列範例會示範如何在網頁標記中呼叫 Web 服務方法，從指令碼加入至 Web 服務的參考。  
  
 [!code-aspx-csharp[System.Web.Script.Services.ScriptMethodAttribute#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Services.ScriptMethodAttribute/CS/Default.aspx#5)]
 [!code-aspx-vb[System.Web.Script.Services.ScriptMethodAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Services.ScriptMethodAttribute/VB/Default.aspx#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.ServiceReference" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.ServiceReference" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceReference(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Web 服務的位置。</param>
        <summary>使用指定的路徑來初始化 <see cref="T:System.Web.UI.ServiceReference" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyScript">
      <MemberSignature Language="C#" Value="protected internal virtual string GetProxyScript (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetProxyScript(class System.Web.UI.ScriptManager scriptManager, class System.Web.UI.Control containingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetProxyScript(System::Web::UI::ScriptManager ^ scriptManager, System::Web::UI::Control ^ containingControl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="containingControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="scriptManager">頁面上的 <see cref="T:System.Web.UI.ScriptManager" /> 控制項。</param>
        <param name="containingControl">
          <see cref="T:System.Web.UI.Control" /> 物件。</param>
        <summary>從可覆寫為自訂項目的衍生 <see cref="T:System.Web.UI.ServiceReference" /> 物件提供 Proxy 指令碼。</summary>
        <returns>Proxy 指令碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `containingControl`參數是<xref:System.Web.UI.ScriptManager>物件或<xref:System.Web.UI.ScriptManagerProxy>物件上的<xref:System.Web.UI.ServiceReference>物件定義。 它應做為基礎的相對 URL 解析。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProxyUrl">
      <MemberSignature Language="C#" Value="protected internal virtual string GetProxyUrl (System.Web.UI.ScriptManager scriptManager, System.Web.UI.Control containingControl);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetProxyUrl(class System.Web.UI.ScriptManager scriptManager, class System.Web.UI.Control containingControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetProxyUrl(System::Web::UI::ScriptManager ^ scriptManager, System::Web::UI::Control ^ containingControl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="containingControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="scriptManager">頁面上的 <see cref="T:System.Web.UI.ScriptManager" /> 控制項。</param>
        <param name="containingControl">
          <see cref="T:System.Web.UI.Control" /> 物件。</param>
        <summary>從衍生的 <see cref="T:System.Web.UI.ServiceReference" /> 物件提供的 Proxy URL 可以覆寫為自訂項目。</summary>
        <returns>Proxy URL。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `containingControl`參數是<xref:System.Web.UI.ScriptManager>物件或<xref:System.Web.UI.ScriptManagerProxy>物件上的<xref:System.Web.UI.ServiceReference>物件定義，應該用於做為基礎的相對 URL 解析。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InlineScript">
      <MemberSignature Language="C#" Value="public virtual bool InlineScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InlineScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ServiceReference.InlineScript" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InlineScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool InlineScript { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，以指出是否要將 Proxy 產生指令碼包含在頁面中做為內嵌指令碼區塊，以及個別要求是否能取得該指定碼。</summary>
        <value>
          如果要將 Proxy 產生指令碼包含在頁面中做為內嵌指令碼區塊，則為 <see langword="true" />，如果要以個別要求來取得 Proxy 產生指令碼，則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.ServiceReference.InlineScript%2A>屬性未宣告中，預設值是`false`。  
  
 當<xref:System.Web.UI.ServiceReference.InlineScript%2A>設`false`，產生的 ECMAScript (JavaScript) proxy 的指令碼為個別的指令碼檔案下載到伺服器的其他要求。 如果您使用瀏覽器快取，此選項時，很有幫助多個網頁會使用相同的服務參考。  
  
 當<xref:System.Web.UI.ServiceReference.InlineScript%2A>設`true`、 proxy 產生指令碼是包含為網頁中內嵌指令碼區塊。 這會減少的網路要求，特別是當頁面中有許多的服務參考和其他頁面不會參考相同的服務，以改善伺服器效能。 此外，<xref:System.Web.UI.ServiceReference.Path%2A>屬性必須設定為相對路徑時<xref:System.Web.UI.ServiceReference.InlineScript%2A>設`true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public virtual string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ServiceReference.Path" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定參考 Web 服務的路徑。</summary>
        <value>參考 Web 服務的路徑。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ServiceReference.Path%2A>屬性可以指向只對本機 Web 服務。 換句話說，這個屬性可以只指向與啟用 AJAX 的 ASP.NET Web 應用程式位於相同網域中的 Web 服務。 <xref:System.Web.UI.ServiceReference.Path%2A> 可以是相對、 應用程式相對，網域相對或絕對路徑。  
  
 如果<xref:System.Web.UI.ServiceReference.InlineScript%2A>屬性設定為`true`，則您必須使用相對路徑，以指向相同的 Web 應用程式所在的頁面<xref:System.Web.UI.ServiceReference>執行個體。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ServiceReference.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回字串，表示 <see cref="P:System.Web.UI.ServiceReference.Path" /> 屬性或型別名稱的值。</summary>
        <returns>如果已定義，會傳回 <see cref="P:System.Web.UI.ServiceReference.Path" /> 屬性的值，否則會傳回該類型之 <see cref="P:System.Reflection.MemberInfo.Name" /> 屬性的值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>