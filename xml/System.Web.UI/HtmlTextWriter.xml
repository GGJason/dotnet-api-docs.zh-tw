<Type Name="HtmlTextWriter" FullName="System.Web.UI.HtmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1effac224cab104a3732039892b15de7e19da8b1" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48739690" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlTextWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HtmlTextWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTextWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTextWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type HtmlTextWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c6942-101">將標記字元及文字寫入 ASP.NET 伺服器控制項輸出資料流。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6942-101">Writes markup characters and text to an ASP.NET server control output stream.</span>
      </span>
      <span data-ttu-id="c6942-102">此類別提供 ASP.NET 伺服器控制項在向用戶端呈現標記時所使用的格式化功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c6942-102">This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-103"><xref:System.Web.UI.HtmlTextWriter>類別用來呈現到桌面瀏覽器的 HTML 4.0。</span><span class="sxs-lookup"><span data-stu-id="c6942-103">The <xref:System.Web.UI.HtmlTextWriter> class is used to render HTML 4.0 to desktop browsers.</span></span> <span data-ttu-id="c6942-104"><xref:System.Web.UI.HtmlTextWriter>也是中的所有標記寫入器的基底類別<xref:System.Web.UI>命名空間，包括<xref:System.Web.UI.ChtmlTextWriter>， <xref:System.Web.UI.Html32TextWriter>，和<xref:System.Web.UI.XhtmlTextWriter>類別。</span><span class="sxs-lookup"><span data-stu-id="c6942-104">The <xref:System.Web.UI.HtmlTextWriter> is also the base class for all markup writers in the <xref:System.Web.UI> namespace, including the <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, and <xref:System.Web.UI.XhtmlTextWriter> classes.</span></span> <span data-ttu-id="c6942-105">這些類別用來寫入項目、 屬性和標記的各種不同的樣式和配置資訊。</span><span class="sxs-lookup"><span data-stu-id="c6942-105">These classes are used to write the elements, attributes, and style and layout information for different types of markup.</span></span> <span data-ttu-id="c6942-106">此外，這些類別會使用每一種標記語言相關聯的頁面和控制項的配接器類別。</span><span class="sxs-lookup"><span data-stu-id="c6942-106">In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</span></span>  
  
 <span data-ttu-id="c6942-107">在大部分情況下，ASP.NET 會自動使用適當的寫入器提出要求的裝置。</span><span class="sxs-lookup"><span data-stu-id="c6942-107">In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</span></span> <span data-ttu-id="c6942-108">不過，如果您建立自訂的文字寫入器，或者您想要指定特定的寫入器，來呈現特定裝置的頁面，您必須將對應的寫入器中的頁面`controlAdapters`應用程式.browser 檔案區段。</span><span class="sxs-lookup"><span data-stu-id="c6942-108">However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the `controlAdapters` section of the application .browser file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-109">下列程式碼範例示範如何覆寫<xref:System.Web.UI.Control.Render%2A>方法的自訂控制項衍生自<xref:System.Web.UI.Control>類別。</span><span class="sxs-lookup"><span data-stu-id="c6942-109">The following code example shows how to override the <xref:System.Web.UI.Control.Render%2A> method of a custom control that is derived from the <xref:System.Web.UI.Control> class.</span></span> <span data-ttu-id="c6942-110">在程式碼範例說明如何使用各種<xref:System.Web.UI.HtmlTextWriter>方法、 屬性和欄位。</span><span class="sxs-lookup"><span data-stu-id="c6942-110">The code example illustrates how to use various <xref:System.Web.UI.HtmlTextWriter> methods, properties, and fields.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#1)]
 [!code-vb[MarkupTextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
    <altmember cref="T:System.Web.UI.Html32TextWriter" />
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
    <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-111">初始化 <see cref="T:System.Web.UI.HtmlTextWriter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-111">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="c6942-112">呈現標記內容的 <see cref="T:System.IO.TextWriter" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-112">The <see cref="T:System.IO.TextWriter" /> instance that renders the markup content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-113">初始化 <see cref="T:System.Web.UI.HtmlTextWriter" /> 類別的新執行個體 (此執行個體使用預設的定位字串)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-113">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class that uses a default tab string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-114"><xref:System.Web.UI.HtmlTextWriter.%23ctor%2A>多載<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29>建構函式使用<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>常數需要的行縮排時。</span><span class="sxs-lookup"><span data-stu-id="c6942-114">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant when indentation of a line is necessary.</span></span> <span data-ttu-id="c6942-115">它會呼叫<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>來初始化新執行個體的多載。</span><span class="sxs-lookup"><span data-stu-id="c6942-115">It calls the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> overload to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-116">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29>建構函式來建立自訂<xref:System.Web.UI.HtmlTextWriter>名為物件`StyledLabelHtmlWriter.`當`MyPage`自訂類別，衍生自<xref:System.Web.UI.Page>類別中，用戶端要求它會使用瀏覽器，`StyledLabelHtmlWriter`類別呈現其輸出資料流的內容。</span><span class="sxs-lookup"><span data-stu-id="c6942-116">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="c6942-117">呈現標記內容的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-117">The <see cref="T:System.IO.TextWriter" /> that renders the markup content.</span>
          </span>
        </param>
        <param name="tabString">
          <span data-ttu-id="c6942-118">用來呈現行縮排的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-118">The string to use to render a line indentation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-119">使用指定的定位字串字元初始化 <see cref="T:System.Web.UI.HtmlTextWriter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-119">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class with a specified tab string character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-120"><xref:System.Web.UI.HtmlTextWriter.%23ctor%2A>多載<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>建構函式使用`tabString`時必要的行縮排。</span><span class="sxs-lookup"><span data-stu-id="c6942-120">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor uses `tabString` when indentation of a line is necessary.</span></span> <span data-ttu-id="c6942-121">它會呼叫<xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType>基底建構函式，來初始化新執行個體。</span><span class="sxs-lookup"><span data-stu-id="c6942-121">It calls the <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> base constructor to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-122">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29>建構函式來建立自訂<xref:System.Web.UI.HtmlTextWriter>名為物件`StyledLabelHtmlWriter.`當`MyPage`自訂類別，衍生自<xref:System.Web.UI.Page>類別中，用戶端要求它會使用瀏覽器，`StyledLabelHtmlWriter`類別呈現其輸出資料流的內容。</span><span class="sxs-lookup"><span data-stu-id="c6942-122">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-123">將指定的標記屬性和值加入項目的開頭標記中，這些項目是 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件經過後續呼叫 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法而建立的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-123">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string -&gt; unit&#xA;override this.AddAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6942-124">字串，包含要加入的屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-124">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-125">字串，包含要指派給屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-125">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-126">將指定的標記屬性和值加入項目的開頭標記中，這些項目是 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件經過後續呼叫 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法而建立的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-126">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-127">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>多載<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29>方法，如果屬性不是其中一個<xref:System.Web.UI.HtmlTextWriterAttribute>值，或如果屬性不知道執行階段之前。</span><span class="sxs-lookup"><span data-stu-id="c6942-127">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time.</span></span>  
  
 <span data-ttu-id="c6942-128">任何指定的標記項目中，執行個體<xref:System.Web.UI.HtmlTextWriter>類別會維護一份該元素的屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-128">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="c6942-129">當<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>呼叫方法時，新增的任何屬性<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法轉譯為項目的開頭標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-129">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="c6942-130">屬性的清單則會清除從<xref:System.Web.UI.HtmlTextWriter>物件。</span><span class="sxs-lookup"><span data-stu-id="c6942-130">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="c6942-131">程式碼撰寫模式，來呈現的標記項目如下所示：</span><span class="sxs-lookup"><span data-stu-id="c6942-131">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="c6942-132">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法，將任何屬性加入至項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-132">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="c6942-133">請使用 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-133">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="c6942-134">視需要使用其他方法來呈現項目的開頭和結尾標記之間的內容。</span><span class="sxs-lookup"><span data-stu-id="c6942-134">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="c6942-135">請使用 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-135">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-136">下列程式碼範例示範如何呼叫<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法之前呼叫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-136">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method before calling the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="c6942-137">程式碼會呼叫的兩個不同的多載<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>和兩個不同的多載<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>再呼叫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法，以呈現`<span>`輸出資料流的項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-137">The code calls two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> before it calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to render a `<span>` element to the output stream.</span></span> <span data-ttu-id="c6942-138"><xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29>方法用來定義自訂屬性的具名`CustomAttribute`和名為自訂值`CustomAttributeValue`如`<span>`這段程式碼呈現的項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-138">The <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method is used to define the custom attribute named `CustomAttribute` and the custom value named `CustomAttributeValue` for the `<span>` element that this code renders.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c6942-139">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />，表示要加入輸出資料流的標記屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-139">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-140">字串，包含要指派給屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-140">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-141">將標記屬性和屬性值加入項目的開頭標記中，此項目是 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件經過後續呼叫 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法而建立的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-141">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-142">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>多載<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>方法以轉譯標準標記屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-142">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to render a standard markup attribute.</span></span>  
  
 <span data-ttu-id="c6942-143">任何指定的標記項目中，執行個體<xref:System.Web.UI.HtmlTextWriter>類別會維護一份該元素的屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-143">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="c6942-144">當<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>呼叫方法時，所新增的任何屬性<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法轉譯為項目的開頭標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-144">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes that are added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="c6942-145">屬性的清單則會清除從<xref:System.Web.UI.HtmlTextWriter>。</span><span class="sxs-lookup"><span data-stu-id="c6942-145">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter>.</span></span>  
  
 <span data-ttu-id="c6942-146">程式碼撰寫模式，來呈現的標記項目如下所示：</span><span class="sxs-lookup"><span data-stu-id="c6942-146">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="c6942-147">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法，將任何屬性加入至項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-147">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="c6942-148">請使用 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-148">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="c6942-149">視需要使用其他方法來呈現項目的開頭和結尾標記之間的內容。</span><span class="sxs-lookup"><span data-stu-id="c6942-149">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="c6942-150">請使用 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-150">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-151">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>多載<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>方法來加入`Onclick`屬性的標記項目，然後將其值設定為下列的 ECMAScript 程式碼：</span><span class="sxs-lookup"><span data-stu-id="c6942-151">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to add an `Onclick` attribute to a markup element, and then set its value to the following ECMAScript code:</span></span>  
  
```  
alert('Hello');  
```  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#1)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value, bool fEndode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value, bool fEndode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String, fEndode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, bool fEndode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * bool -&gt; unit&#xA;override this.AddAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, fEndode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEndode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6942-152">字串，包含要加入的屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-152">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-153">字串，包含要指派給屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-153">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="fEndode">
          <span data-ttu-id="c6942-154">如果要為屬性及屬性值編碼則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-154">
              <see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-155">將指定的標記屬性和值加入項目的開頭標記中，這些項目是 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件經過後續呼叫 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法而建立的 (使用選擇性編碼)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-155">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-156">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>多載<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>方法，如果屬性不是其中一個<xref:System.Web.UI.HtmlTextWriterAttribute>值，或等到執行的階段和編碼方式不知道該屬性是否需要。</span><span class="sxs-lookup"><span data-stu-id="c6942-156">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time and encoding is needed.</span></span>  
  
 <span data-ttu-id="c6942-157">任何指定的標記項目中，執行個體<xref:System.Web.UI.HtmlTextWriter>類別會維護一份該元素的屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-157">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="c6942-158">當<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>呼叫方法時，新增的任何屬性<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法轉譯為項目的開頭標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-158">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="c6942-159">屬性的清單則會清除從<xref:System.Web.UI.HtmlTextWriter>物件。</span><span class="sxs-lookup"><span data-stu-id="c6942-159">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="c6942-160">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>方法`fEncode`設定為`true`，如果此屬性可能包含引號 （"）、 小於符號 (<)，或連字號 (&)。</span><span class="sxs-lookup"><span data-stu-id="c6942-160">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="c6942-161">方法呼叫會將編碼需求提出要求之裝置的屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-161">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="c6942-162">您可以設定`fEncode`至`false`、 如果您知道，沒有這些字元，將會產生，或如果您知道已編碼屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-162">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
<span data-ttu-id="c6942-163">如果屬性型別是`Style`，將不會編碼值即使`fEndode`是`true`。</span><span class="sxs-lookup"><span data-stu-id="c6942-163">If the attribute type is `Style`, the value won’t be encoded even if `fEndode` is `true`.</span></span> <span data-ttu-id="c6942-164">請確定的樣式值 CSS 標準，並且不包含惡意程式碼。</span><span class="sxs-lookup"><span data-stu-id="c6942-164">Ensure that the style value is CSS-compliant and doesn’t contain malicious code.</span></span>
  
 <span data-ttu-id="c6942-165">程式碼撰寫模式，來呈現的標記項目如下所示：</span><span class="sxs-lookup"><span data-stu-id="c6942-165">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="c6942-166">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法，將任何屬性加入至項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-166">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="c6942-167">請使用 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-167">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="c6942-168">視需要使用其他方法來呈現項目的開頭和結尾標記之間的內容。</span><span class="sxs-lookup"><span data-stu-id="c6942-168">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="c6942-169">請使用 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-169">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-170">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>多載<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>方法，以確保自訂的屬性，名為`myattribute`，和其值不編碼為`<img>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-170">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method to ensure that a custom attribute, named `myattribute`, and its value are not encoded for an `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttribute (name As String, value As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit&#xA;override this.AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6942-171">字串，包含要加入的屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-171">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-172">字串，包含要指派給屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-172">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c6942-173">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />，表示該屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-173">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-174">將指定的標記屬性和值，連同 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 列舉值，一起加入此項目的開頭標記中，此項目是 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件經過後續呼叫 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法而建立的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-174">Adds the specified markup attribute and value, along with an <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value, to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-175">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>多載<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29>方法只能在繼承自時<xref:System.Web.UI.HtmlTextWriter>類別。</span><span class="sxs-lookup"><span data-stu-id="c6942-175">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c6942-176">它可讓您建立新`name`和`key`組屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-176">It enables you to create new `name` and `key` pairs for attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c6942-177">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />，表示要加入輸出資料流的標記屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-177">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-178">字串，包含要指派給屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-178">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="c6942-179">如果要為屬性及屬性值編碼則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-179">
              <see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-180">將標記屬性和屬性值加入項目的開頭標記中，此項目是 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件經過後續呼叫 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法而建立的 (使用選擇性編碼)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-180">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-181">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>多載<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29>來呈現使用選擇性編碼的標準標記屬性的方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-181">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to render a standard markup attribute, with optional encoding.</span></span>  
  
 <span data-ttu-id="c6942-182">任何指定的標記項目中，執行個體<xref:System.Web.UI.HtmlTextWriter>類別會維護一份該元素的屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-182">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="c6942-183">當<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>呼叫方法時，新增的任何屬性<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>項目的開頭標記呈現。</span><span class="sxs-lookup"><span data-stu-id="c6942-183">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> are rendered to the opening tag of the element.</span></span> <span data-ttu-id="c6942-184">屬性的清單則會清除從<xref:System.Web.UI.HtmlTextWriter>物件。</span><span class="sxs-lookup"><span data-stu-id="c6942-184">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="c6942-185">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29>方法`fEncode`設定為`true`，如果此屬性可能包含引號 （"）、 小於符號 (<)，或連字號 (&)。</span><span class="sxs-lookup"><span data-stu-id="c6942-185">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="c6942-186">方法呼叫會將編碼需求提出要求之裝置的屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-186">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="c6942-187">您可以設定`fEncode`至`false`、 如果您知道，沒有這些字元，將會產生，或如果您知道已編碼屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-187">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
 <span data-ttu-id="c6942-188">如果屬性型別是`Style`，將不會編碼值即使`fEncode`是`true`。</span><span class="sxs-lookup"><span data-stu-id="c6942-188">If the attribute type is `Style`, the value won’t be encoded even if `fEncode` is `true`.</span></span> <span data-ttu-id="c6942-189">請確定的樣式值 CSS 標準，並且不包含惡意程式碼。</span><span class="sxs-lookup"><span data-stu-id="c6942-189">Ensure that the style value is CSS-compliant and doesn’t contain malicious code.</span></span>

  
 <span data-ttu-id="c6942-190">程式碼撰寫模式，來呈現的標記項目如下所示：</span><span class="sxs-lookup"><span data-stu-id="c6942-190">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="c6942-191">使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法，將任何屬性加入至項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-191">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="c6942-192">請使用 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-192">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="c6942-193">視需要使用其他方法來呈現項目的開頭和結尾標記之間的內容。</span><span class="sxs-lookup"><span data-stu-id="c6942-193">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="c6942-194">請使用 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-194">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-195">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29>方法，確定字串值，指派給`Alt`屬性`<img>`項目會編碼為要求的裝置。</span><span class="sxs-lookup"><span data-stu-id="c6942-195">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to ensure that the string value that is assigned to an `Alt` attribute for an `<img>` element is encoded for the requesting device.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-196">將標記樣式屬性加入項目的開頭標記中，此項目是 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件經過後續呼叫 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法所建立的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-196">Adds a markup style attribute to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string -&gt; unit&#xA;override this.AddStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6942-197">字串，包含所要加入的樣式屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-197">A string that contains the style attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-198">字串，包含要指派給屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-198">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-199">將指定的標記樣式屬性和屬性值加入由對 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法的後續呼叫所建立的開頭標記中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-199">Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-200">使用<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>多載<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29>方法時樣式不是成員<xref:System.Web.UI.HtmlTextWriterStyle>列舉型別或不知道執行階段之前。</span><span class="sxs-lookup"><span data-stu-id="c6942-200">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method when the style is not a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration or is not known until run time.</span></span>  
  
 <span data-ttu-id="c6942-201"><xref:System.Web.UI.HtmlTextWriter>類別會維護它所呈現的標記項目樣式的清單。</span><span class="sxs-lookup"><span data-stu-id="c6942-201">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="c6942-202">當<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>呼叫方法時，所新增的任何樣式<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法轉譯為項目的開頭標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-202">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles that are added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="c6942-203">則清除的樣式清單。</span><span class="sxs-lookup"><span data-stu-id="c6942-203">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="c6942-204">程式碼撰寫模式，來呈現的標記項目如下所示：</span><span class="sxs-lookup"><span data-stu-id="c6942-204">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="c6942-205">使用<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法來加入任何樣式屬性的項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-205">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="c6942-206">請使用 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-206">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="c6942-207">視需要使用其他方法來呈現的項目開頭和結尾標記之間所找到的內容。</span><span class="sxs-lookup"><span data-stu-id="c6942-207">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="c6942-208">請使用 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-208">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-209">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>多載<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29>方法，以呈現`font-size`並`color`樣式屬性上`<p>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-209">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method to render `font-size` and `color` style attributes on a `<p>` element.</span></span> <span data-ttu-id="c6942-210">此程式碼範例會使用<xref:System.Web.UI.HtmlTextWriter>類別呈現控制項的內容。</span><span class="sxs-lookup"><span data-stu-id="c6942-210">This code example uses the <xref:System.Web.UI.HtmlTextWriter> class to render the contents of the control.</span></span>  
  
 [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CPP/htmltextwriter_addstyleattribute.cpp#1)]
 [!code-csharp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CS/htmltextwriter_addstyleattribute.cs#1)]
 [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/VB/htmltextwriter_addstyleattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit&#xA;override this.AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c6942-211">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" />，表示要加入輸出資料流的樣式屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-211">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-212">字串，包含要指派給屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-212">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-213">將與指定的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 值相關聯的標記樣式屬性以及屬性值，加入由對 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法的後續呼叫所建立的開頭標記中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-213">Adds the markup style attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> value and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-214">使用<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>多載<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29>樣式時的成員方法<xref:System.Web.UI.HtmlTextWriterStyle>列舉型別，且已知在執行階段之前。</span><span class="sxs-lookup"><span data-stu-id="c6942-214">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> method when the style is a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration and is known before run time.</span></span>  
  
 <span data-ttu-id="c6942-215"><xref:System.Web.UI.HtmlTextWriter>類別會維護它所呈現的標記項目樣式的清單。</span><span class="sxs-lookup"><span data-stu-id="c6942-215">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="c6942-216">當<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>呼叫方法時，新增的任何樣式<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法轉譯為項目的開頭標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-216">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="c6942-217">則清除的樣式清單。</span><span class="sxs-lookup"><span data-stu-id="c6942-217">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="c6942-218">程式碼撰寫模式，來呈現的標記項目如下所示：</span><span class="sxs-lookup"><span data-stu-id="c6942-218">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="c6942-219">使用<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法來加入任何樣式屬性的項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-219">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="c6942-220">請使用 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-220">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="c6942-221">視需要使用其他方法來呈現的項目開頭和結尾標記之間所找到的內容。</span><span class="sxs-lookup"><span data-stu-id="c6942-221">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="c6942-222">請使用 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-222">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-223">下列程式碼範例示範如何使用組件的覆寫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>從衍生類別中的方法<xref:System.Web.UI.HtmlTextWriter>類別。</span><span class="sxs-lookup"><span data-stu-id="c6942-223">The following code example demonstrates how to use part of an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c6942-224">程式碼會檢查是否`<Label>`所呈現項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-224">The code checks whether a `<Label>` element is being rendered.</span></span> <span data-ttu-id="c6942-225">如果是的話<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>方法呼叫，以檢查是否`Color`已經為定義的樣式屬性`<Label>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-225">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method is called to check whether a `Color` style attribute has been defined for the `<Label>` element.</span></span> <span data-ttu-id="c6942-226">如果`Color`未定義屬性、 程式碼會呼叫這個多載<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法來加入`Color`屬性樣式屬性，然後將其值設定為`red`。</span><span class="sxs-lookup"><span data-stu-id="c6942-226">If a `Color` attribute has not been defined, the code calls this overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add the `Color` attribute to the style attribute, and then set its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddStyleAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddStyleAttribute (name As String, value As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit&#xA;override this.AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6942-227">字串，包含所要加入的樣式屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-227">A string that contains the style attribute to be added.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-228">字串，包含要指派給屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-228">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c6942-229">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" />，表示所要加入的樣式屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-229">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-230">將指定的標記樣式屬性和屬性值，連同 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列舉值，一起加入由對 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法的後續呼叫所建立的開頭標記中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-230">Adds the specified markup style attribute and the attribute value, along with an <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value, to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-231">使用<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>多載<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29>方法只能在繼承自時<xref:System.Web.UI.HtmlTextWriter>類別。</span><span class="sxs-lookup"><span data-stu-id="c6942-231">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c6942-232">它可讓您建立新`name`並`value`配對的<xref:System.Web.UI.HtmlTextWriterStyle>屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-232">It enables you to create new `name` and `value` pairs for <xref:System.Web.UI.HtmlTextWriterStyle> attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="BeginRender">
      <MemberSignature Language="C#" Value="public virtual void BeginRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginRender();" />
      <MemberSignature Language="F#" Value="abstract member BeginRender : unit -&gt; unit&#xA;override this.BeginRender : unit -&gt; unit" Usage="htmlTextWriter.BeginRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6942-233">將即將要呈現控制項的訊息告知 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件或衍生類別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-233">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control is about to be rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-234"><xref:System.Web.UI.HtmlTextWriter>類別實作<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>方法沒有任何功能。</span><span class="sxs-lookup"><span data-stu-id="c6942-234">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method has no functionality.</span></span> <span data-ttu-id="c6942-235">您必須覆寫<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>從衍生類別中的方法<xref:System.Web.UI.HtmlTextWriter>提供您自己的轉譯功能。</span><span class="sxs-lookup"><span data-stu-id="c6942-235">You must override the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method in a class derived from <xref:System.Web.UI.HtmlTextWriter> to provide your own rendering functionality.</span></span> <span data-ttu-id="c6942-236">例如，在可能需要的標記語言`<p>`立即呈現的控制項，但前面的項目需要`<p>`稍早決定項目，您可以使用<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>覆寫。</span><span class="sxs-lookup"><span data-stu-id="c6942-236">For example, in a markup language that might require `<p>` elements to be rendered immediately ahead of a control, but where the need for the `<p>` element is determined earlier, you could use the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="htmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6942-237">關閉 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件，並釋放與它相關的任何系統資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-237">Closes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and releases any system resources associated with it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-238">這個實作<xref:System.Web.UI.HtmlTextWriter.Close%2A>方法呼叫<xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType>基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-238">This implementation of the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method calls the <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> base method.</span></span>  
  
 <span data-ttu-id="c6942-239">呼叫之後<xref:System.Web.UI.HtmlTextWriter.Close%2A>方法，在任何作業<xref:System.Web.UI.HtmlTextWriter>物件可能會擲回例外狀況，因為已發行其所有資源。</span><span class="sxs-lookup"><span data-stu-id="c6942-239">Following a call to the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method, any operations on the <xref:System.Web.UI.HtmlTextWriter> object might throw exceptions because all its resources have been released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.IO.TextWriter.Close" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTabString">
      <MemberSignature Language="C#" Value="public const string DefaultTabString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultTabString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultTabString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultTabString;" />
      <MemberSignature Language="F#" Value="val mutable DefaultTabString : string" Usage="System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-240">表示單一定位字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-240">Represents a single tab character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-241">單一索引標籤被以 ASCII 9 字元。</span><span class="sxs-lookup"><span data-stu-id="c6942-241">The single tab is represented by the ASCII 9 character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-242">下列程式碼範例示範如何建立的建構函式<xref:System.IO.TextWriter>物件做為參數並傳遞<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>欄位做為參數引數的建構函式的第二個版本。</span><span class="sxs-lookup"><span data-stu-id="c6942-242">The following code example demonstrates how to create a constructor that takes a <xref:System.IO.TextWriter> object as a parameter and passes the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field as a parameter argument to a second version of the constructor.</span></span> <span data-ttu-id="c6942-243">從程式碼，呼叫這個建構函式時<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>欄位定義的縮排原則由頁面或配接器的標記寫入器執行個體。</span><span class="sxs-lookup"><span data-stu-id="c6942-243">When this constructor is called from code, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#1)]
 [!code-vb[MarkupTextWriter_Methods3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="DoubleQuoteChar">
      <MemberSignature Language="C#" Value="public const char DoubleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char DoubleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const DoubleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char DoubleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable DoubleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-244">表示引號 (") 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-244">Represents the quotation mark (") character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-245"><xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar>欄位由<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>關閉屬性的方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-245">The <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to close an attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-246">下列程式碼範例示範如何轉譯`border`屬性`<table>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-246">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="c6942-247">程式碼會呼叫<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法以呈現屬性和其值，以及使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法，以呈現<xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>和<xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar>欄位。</span><span class="sxs-lookup"><span data-stu-id="c6942-247">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="c6942-248">此程式碼範例會呈現下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-248">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.Write" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EncodeAttributeValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-249">根據目前內容中 <see cref="T:System.Web.HttpRequest" /> 物件的需求來編碼指定標記屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-249">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected string EncodeAttributeValue (string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeAttributeValue(string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeAttributeValue (value As String, fEncode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeAttributeValue(System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="member this.EncodeAttributeValue : string * bool -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-250">包含要編碼的屬性值的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-250">A string containing the attribute value to encode.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="c6942-251">
            <see langword="true" /> 表示要編碼屬性值；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-251">
              <see langword="true" /> to encode the attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-252">根據目前內容中 <see cref="T:System.Web.HttpRequest" /> 物件的需求來編碼指定標記屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-252">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-253">包含已編碼屬性值的字串、如果 <paramref name="value" /> 是空的則為 <see langword="null" />，或者如果 <paramref name="fEncode" /> 是 <see langword="false" />，則為未編碼的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-253">A string containing the encoded attribute value, <see langword="null" /> if <paramref name="value" /> is empty, or the unencoded attribute value if <paramref name="fEncode" /> is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-254">使用<xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>多載<xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29>方法，如果屬性不是<xref:System.Web.UI.HtmlTextWriterAttribute>列舉值或不知道執行階段之前。</span><span class="sxs-lookup"><span data-stu-id="c6942-254">Use the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method if the attribute is not an <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value or is not known until run time.</span></span>  
  
 <span data-ttu-id="c6942-255"><xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>方法會移除雙引號 （"）、 連字號 (&) 及小於符號 (<) 讓該無效的標記不會產生，不論輸入為何。</span><span class="sxs-lookup"><span data-stu-id="c6942-255">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="c6942-256">實際的編碼由執行<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-256">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-257">下列程式碼範例示範如何呼叫<xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>方法中的參數<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法呼叫，並接著將編碼`color:blue`樣式屬性值。</span><span class="sxs-lookup"><span data-stu-id="c6942-257">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call, and then encodes a `color:blue` style attribute value.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#5](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#5)]
 [!code-csharp[HtmlTextWriter_Methods#5](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#5)]
 [!code-vb[HtmlTextWriter_Methods#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string EncodeAttributeValue(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncodeAttributeValue (attrKey As HtmlTextWriterAttribute, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ EncodeAttributeValue(System::Web::UI::HtmlTextWriterAttribute attrKey, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string&#xA;override this.EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (attrKey, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrKey">
          <span data-ttu-id="c6942-258">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />，表示該標記屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-258">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> representing the markup attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-259">包含要編碼的屬性值的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-259">A string containing the attribute value to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-260">根據目前內容中 <see cref="T:System.Web.HttpRequest" /> 物件的需求來編碼指定標記屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-260">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-261">字串，包含已編碼的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-261">A string containing the encoded attribute value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-262"><xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A>方法會移除雙引號 （"）、 連字號 (&) 及小於符號 (<) 讓該無效的標記不會產生，不論輸入為何。</span><span class="sxs-lookup"><span data-stu-id="c6942-262">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="c6942-263">實際的編碼由執行<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-263">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeUrl">
      <MemberSignature Language="C#" Value="protected string EncodeUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeUrl (url As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.EncodeUrl : string -&gt; string" Usage="htmlTextWriter.EncodeUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="c6942-264">字串，包含要編碼的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-264">A string containing the URL to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-265">執行最少的 URL 編碼，透過的方式是將指定 URL 中的空格轉換為字串 "%20"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-265">Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-266">字串，包含已編碼的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-266">A string containing the encoded URL.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-267">URL 編碼的字元包含百分比符號 （%），後面接著的兩位數十六進位表示法 （不區分大小寫） 字元的 ISO-拉丁文字碼指標。</span><span class="sxs-lookup"><span data-stu-id="c6942-267">URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</span></span> <span data-ttu-id="c6942-268">空格的十六進位表示法是 20。</span><span class="sxs-lookup"><span data-stu-id="c6942-268">The hexadecimal representation of a space is 20.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-269">下列程式碼範例示範如何呼叫<xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A>方法，將轉換中的參數形式傳遞的 URL 中的任何空格<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="c6942-269">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> method to convert any spaces in the URL that is passed as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#6)]
 [!code-vb[HtmlTextWriter_Methods#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.UrlPathEncode(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-270">取得 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件用來將內容寫入網頁的編碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-270">Gets the encoding that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object uses to write content to the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6942-271">
            <see cref="T:System.Text.Encoding" />，用此編碼方式將標記寫入網頁。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-271">The <see cref="T:System.Text.Encoding" /> in which the markup is written to the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-272"><xref:System.Web.UI.HtmlTextWriter.Encoding%2A>屬性取得其值來自基底<xref:System.IO.TextWriter>物件。</span><span class="sxs-lookup"><span data-stu-id="c6942-272">The <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property obtains its value from the base <xref:System.IO.TextWriter> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-273">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.Encoding%2A>撰寫的自訂控制項用來呈現包含該頁面的文字編碼方式類型的屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-273">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property to write the type of encoding that a custom control uses to render text to the page that contains it.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#2)]
 [!code-csharp[HtmlTextWriter_Properties#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#2)]
 [!code-vb[HtmlTextWriter_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="EndRender">
      <MemberSignature Language="C#" Value="public virtual void EndRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EndRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndRender();" />
      <MemberSignature Language="F#" Value="abstract member EndRender : unit -&gt; unit&#xA;override this.EndRender : unit -&gt; unit" Usage="htmlTextWriter.EndRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6942-274">將控制項已完成呈現的訊息告知 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件或衍生類別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-274">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control has finished rendering.</span>
          </span>
          <span data-ttu-id="c6942-275">您可以使用此方法來關閉在 <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> 方法中所開啟的任何標記項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-275">You can use this method to close any markup elements opened in the <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-276"><xref:System.Web.UI.HtmlTextWriter>類別實作<xref:System.Web.UI.HtmlTextWriter.EndRender%2A>方法沒有任何功能。</span><span class="sxs-lookup"><span data-stu-id="c6942-276">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method has no functionality.</span></span> <span data-ttu-id="c6942-277">您必須覆寫<xref:System.Web.UI.HtmlTextWriter.EndRender%2A>類別衍生自中<xref:System.Web.UI.HtmlTextWriter>類別，以提供您自己的轉譯功能。</span><span class="sxs-lookup"><span data-stu-id="c6942-277">You must override <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to provide your own rendering functionality.</span></span>  
  
 <span data-ttu-id="c6942-278">您可以使用<xref:System.Web.UI.HtmlTextWriter.EndRender%2A>方法以關閉任何標記項目中開啟<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-278">You can use the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method to close any markup elements opened in the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      </Docs>
    </Member>
    <Member MemberName="EndTagLeftChars">
      <MemberSignature Language="C#" Value="public const string EndTagLeftChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EndTagLeftChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberSignature Language="VB.NET" Value="Public Const EndTagLeftChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EndTagLeftChars;" />
      <MemberSignature Language="F#" Value="val mutable EndTagLeftChars : string" Usage="System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-279">表示標記項目結尾標記的左角括弧和斜線符號 (&lt;/)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-279">Represents the left angle bracket and slash mark (&lt;/) of the closing tag of a markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-280"><xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars>欄位由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法來建構標記項目結束標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-280">The <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to construct markup element end tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-281">下列程式碼範例示範如何呈現目的結尾標記`<table>`所使用的標記項目<xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars>而<xref:System.Web.UI.HtmlTextWriter.TagRightChar>呼叫中的參數值的欄位<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-281">The following code example shows how to render the closing tag of a `<table>` markup element by using the <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> and the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> fields as parameter values in calls to the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 <span data-ttu-id="c6942-282">此程式碼範例會呈現下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-282">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EnterStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-283">寫入標記項目的開頭標記，該標記項目包含實作指定樣式之配置和字元格式的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-283">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.EnterStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="c6942-284">
            <see cref="T:System.Web.UI.WebControls.Style" />，指定開始套用至標記區塊的配置和格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-284">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-285">寫入 <see langword="&lt;span&gt;" /> 項目的開頭標記，該項目包含實作指定樣式之配置和字元格式的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-285">Writes the opening tag of a <see langword="&lt;span&gt;" /> element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-286">使用<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法，以套用至標記區塊的樣式，例如背景色彩或框線寬度。</span><span class="sxs-lookup"><span data-stu-id="c6942-286">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="c6942-287"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>和<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法讓裝置配接器或控制項建立會使用指定樣式的字元格式的標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-287">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="c6942-288">使用相同的值，如`style`中<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法，可讓您在對應<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-288">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="c6942-289"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>多載<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29>方法會呈現開頭標記中的，`<span>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-289">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> method renders the opening tag of a `<span>` element.</span></span> <span data-ttu-id="c6942-290">此方法接著會將所需的屬性和樣式屬性的開頭標記`<span>`項目以顯示所指定的設定<xref:System.Web.UI.WebControls.Style>物件。</span><span class="sxs-lookup"><span data-stu-id="c6942-290">This method then adds the necessary attributes and style attributes to the opening tag of the `<span>` element to display the settings specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="c6942-291">如果您想要呈現包含屬性和樣式屬性，請使用不同的標記項目<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>多載。</span><span class="sxs-lookup"><span data-stu-id="c6942-291">If you want to render a different markup element to contain the attributes and style attributes, use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-292">下列程式碼範例示範如何使用自訂類別，名為`TextSample`衍生自<xref:System.Web.UI.WebControls.WebControl>類別，以使用<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法，以套用<xref:System.Web.UI.WebControls.Style.ForeColor%2A>樣式的文字字串。</span><span class="sxs-lookup"><span data-stu-id="c6942-292">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="c6942-293"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法的 HTML 呈現`<span style="color:Navy;">`。</span><span class="sxs-lookup"><span data-stu-id="c6942-293">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="c6942-294"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法呼叫關閉`<span>`呈現文字後的項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-294">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.EnterStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="c6942-295">
            <see cref="T:System.Web.UI.WebControls.Style" />，指定開始套用至標記區塊的配置和格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-295">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span>
          </span>
        </param>
        <param name="tag">
          <span data-ttu-id="c6942-296">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" />，指定標記項目的開頭標記 (此標記將包含 <c>style</c> 中所指定的樣式物件)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-296">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the opening tag of the markup element that will contain the style object specified in <c>style</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-297">寫入標記項目的開頭標記，該標記項目包含實作指定樣式之配置和字元格式的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-297">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-298">使用<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法，以套用至標記區塊的樣式，例如背景色彩或框線寬度。</span><span class="sxs-lookup"><span data-stu-id="c6942-298">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="c6942-299"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>和<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法讓裝置配接器或控制項建立會使用指定樣式的字元格式的標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-299">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="c6942-300">使用相同的值，如`style`中<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法，可讓您在對應<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-300">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="c6942-301"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>多載<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>方法會呈現所指定之項目的開頭標記`tag`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-301">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the opening tag of the element specified by the `tag` parameter.</span></span> <span data-ttu-id="c6942-302"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>方法則會將所需的屬性和樣式屬性加入要顯示的設定所指定之項目的開頭標記<xref:System.Web.UI.WebControls.Style>物件。</span><span class="sxs-lookup"><span data-stu-id="c6942-302">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="c6942-303">使用<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29>多載來呈現開頭標記中的，`<span>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-303">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> overload to render the opening tag of a `<span>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-304">下列程式碼範例示範如何使用自訂類別，名為`TextSample`衍生自<xref:System.Web.UI.WebControls.WebControl>類別，以使用<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法，以套用<xref:System.Web.UI.WebControls.Style.ForeColor%2A>樣式的文字字串。</span><span class="sxs-lookup"><span data-stu-id="c6942-304">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="c6942-305"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法的 HTML 呈現`<span style="color:Navy;">`。</span><span class="sxs-lookup"><span data-stu-id="c6942-305">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML`<span style="color:Navy;">`.</span></span> <span data-ttu-id="c6942-306"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法呼叫關閉`<span>`呈現文字後的項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-306">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EqualsChar">
      <MemberSignature Language="C#" Value="public const char EqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char EqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char EqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable EqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-307">表示等號 (<see langword="=" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-307">Represents the equal sign (<see langword="=" />).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-308">您可能想要<xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>欄位，而不是<xref:System.Web.UI.HtmlTextWriter.EqualsChar>欄位建構的屬性值的開頭分隔符號時。</span><span class="sxs-lookup"><span data-stu-id="c6942-308">You might want to use the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field instead of the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field when constructing the opening delimiter of an attribute value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-309">下列程式碼範例示範如何轉譯`src`屬性和其值的一部分`<img>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-309">The following code example shows how to render the `src` attribute and part of its value for an `<img>` element.</span></span> <span data-ttu-id="c6942-310">程式碼會使用<xref:System.Web.UI.HtmlTextWriter.EqualsChar>欄位中<xref:System.Web.UI.HtmlTextWriter.Write%2A>轉譯之間的等號 （=） 的方法呼叫`src`屬性和其值。</span><span class="sxs-lookup"><span data-stu-id="c6942-310">The code uses the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call to render the equal sign (=) between the `src` attribute and its value.</span></span>  
  
 <span data-ttu-id="c6942-311">此程式碼範例會呈現下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-311">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      </Docs>
    </Member>
    <Member MemberName="EqualsDoubleQuoteString">
      <MemberSignature Language="C#" Value="public const string EqualsDoubleQuoteString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EqualsDoubleQuoteString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsDoubleQuoteString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EqualsDoubleQuoteString;" />
      <MemberSignature Language="F#" Value="val mutable EqualsDoubleQuoteString : string" Usage="System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-312">表示組成字串 (=") 的等號 (=) 和雙引號 (")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-312">Represents an equal sign (=) and a double quotation mark (") together in a string (=").</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-313"><xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>欄位由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>和<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法，來建構的屬性值的開頭分隔符號。</span><span class="sxs-lookup"><span data-stu-id="c6942-313">The <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods to construct the opening delimiter of attribute values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-314">下列程式碼範例示範如何轉譯`border`屬性`<table>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-314">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="c6942-315">程式碼會呼叫<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法以呈現屬性和其值，以及使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法，以呈現<xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString>和<xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar>欄位。</span><span class="sxs-lookup"><span data-stu-id="c6942-315">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="c6942-316">此程式碼範例會呈現下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-316">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExitStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-317">寫入標記項目的結尾標記，以結束指定的配置與字元格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-317">Writes the closing tag of a markup element to end the specified layout and character formatting.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.ExitStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="c6942-318">
            <see cref="T:System.Web.UI.WebControls.Style" />，指定要關閉的配置與格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-318">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to close.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-319">寫入 <see langword="&lt;span&gt;" /> 項目的結尾標記，以結束指定的配置與字元格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-319">Writes the closing tag of a <see langword="&lt;span&gt;" /> element to end the specified layout and character formatting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-320"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>多載<xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29>方法的結尾標記呈現的`<span>`項目控制項的結尾標記之後，關閉項目開啟對應<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="c6942-320">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> method renders the closing tag of a `<span>` element after the closing tag of the control, closing the element opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> call.</span></span>  
  
 <span data-ttu-id="c6942-321"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>和<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法讓裝置配接器或控制項建立開始及結束使用指定樣式的字元格式的區塊的標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-321">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="c6942-322">使用相同的值，如`style`中<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法，可讓您在對應<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-322">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-323">下列程式碼範例示範如何使用自訂類別，名為`TextSample`衍生自<xref:System.Web.UI.WebControls.WebControl>類別，以使用<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法，以套用<xref:System.Web.UI.WebControls.Style.ForeColor%2A>樣式的文字字串。</span><span class="sxs-lookup"><span data-stu-id="c6942-323">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="c6942-324"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法的 HTML 呈現`<span style="color:Navy;">`。</span><span class="sxs-lookup"><span data-stu-id="c6942-324">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="c6942-325"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法呼叫關閉`<span>`呈現文字後的項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-325">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.ExitStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="c6942-326">
            <see cref="T:System.Web.UI.WebControls.Style" />，指定版面配置和格式設定，以停止套用輸出文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-326">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to stop applying to the output text.</span>
          </span>
        </param>
        <param name="tag">
          <span data-ttu-id="c6942-327">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" />，指定標記項目的結尾標記，其中包含已套用指定樣式的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-327">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</span>
          </span>
          <span data-ttu-id="c6942-328">這必須符合對應 <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> 呼叫中所傳遞的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-328">This must match the key passed in the corresponding <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-329">寫入指定標記項目的結尾標記，以結束指定的版面配置與字元格式設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-329">Writes the closing tag of the specified markup element to end the specified layout and character formatting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-330"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>多載<xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>方法的結尾標記呈現所指定之項目的`tag`控制項的結尾標記之後, 關閉已開啟由相對應的項目<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="c6942-330">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the closing tag of the element that is specified by `tag` after the closing tag of the control, closing the element that was opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method call.</span></span>  
  
 <span data-ttu-id="c6942-331"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>和<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法讓裝置配接器或控制項建立開始及結束使用指定樣式的字元格式的區塊的標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-331">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="c6942-332">使用相同的值，如`style`中<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法，可讓您在對應<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-332">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-333">下列程式碼範例示範如何使用自訂類別，名為`TextSample`衍生自<xref:System.Web.UI.WebControls.WebControl>類別，以使用<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法，以套用<xref:System.Web.UI.WebControls.Style.ForeColor%2A>樣式的文字字串。</span><span class="sxs-lookup"><span data-stu-id="c6942-333">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="c6942-334"><xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法的 HTML 呈現`<span style="color:Navy;">`。</span><span class="sxs-lookup"><span data-stu-id="c6942-334">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="c6942-335"><xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法呼叫關閉`<span>`呈現文字後的項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-335">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FilterAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FilterAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.FilterAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FilterAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FilterAttributes();" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : unit -&gt; unit&#xA;override this.FilterAttributes : unit -&gt; unit" Usage="htmlTextWriter.FilterAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6942-336">移除網頁或 Web 伺服器控制項的所有屬性上的所有標記和樣式屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-336">Removes all the markup and style attributes on all properties of the page or Web server control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-337">屬性會呈現在標記項目之前<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-337">Before attributes are rendered on a markup element, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method is called.</span></span> <span data-ttu-id="c6942-338">依次<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法呼叫<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>和<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>針對每個屬性和樣式來呈現的方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-338">In turn, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> and <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> methods for each attribute and style to render.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-339">下列程式碼範例示範如何使用自訂類別，衍生自<xref:System.Web.UI.HtmlTextWriter>類別，覆寫<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-339">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="c6942-340">呼叫時，<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>覆寫會檢查是否有文字寫入器呈現任何`<label>`或`<a>`項目：</span><span class="sxs-lookup"><span data-stu-id="c6942-340">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements:</span></span>  
  
-   <span data-ttu-id="c6942-341">如果`<label>`轉譯項目時，<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法檢查是否`style`屬性轉譯項目上，如果沒有，請建立`style`屬性，並將它設定為`color: blue`。</span><span class="sxs-lookup"><span data-stu-id="c6942-341">If a `<label>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method checks whether a `style` attribute is rendered on the element and, if not, creates a `style` attribute and sets it to `color: blue`.</span></span>  
  
-   <span data-ttu-id="c6942-342">如果`<a>`轉譯項目時，<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法會判斷是否`href`屬性會是包含，而且如果沒有，請新增`href`url http://www.cohowinery.com。</span><span class="sxs-lookup"><span data-stu-id="c6942-342">If an `<a>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether an `href` attribute is included and, if not, adds an `href` to the URL http://www.cohowinery.com.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="htmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6942-343">清除目前 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件的所有緩衝區，並使任何緩衝的資料寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-343">Clears all buffers for the current <see cref="T:System.Web.UI.HtmlTextWriter" /> object and causes any buffered data to be written to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-344"><xref:System.Web.UI.HtmlTextWriter>類別實作<xref:System.Web.UI.HtmlTextWriter.Flush%2A>方法只會呼叫<xref:System.IO.TextWriter.Flush%2A>基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-344">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.Flush%2A> method just calls the <xref:System.IO.TextWriter.Flush%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterAttribute GetAttributeKey(string attrName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeKey (attrName As String) As HtmlTextWriterAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterAttribute GetAttributeKey(System::String ^ attrName);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeKey : string -&gt; System.Web.UI.HtmlTextWriterAttribute" Usage="htmlTextWriter.GetAttributeKey attrName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrName">
          <span data-ttu-id="c6942-345">字串，包含要取得的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 之屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-345">A string that contains the attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-346">取得指定屬性的對應 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-346">Obtains the corresponding <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-347">指定屬性的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 列舉值，如果該屬性不是列舉型別的成員，則為無效的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-347">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute; otherwise, an invalid <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value if the attribute is not a member of the enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-348">如果`attrName`是`null`或空字串 ("")，或輸入值-1，屬性名稱的資料表中找不到<xref:System.Web.UI.HtmlTextWriterAttribute>物件，就會傳回。</span><span class="sxs-lookup"><span data-stu-id="c6942-348">If `attrName` is `null` or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <xref:System.Web.UI.HtmlTextWriterAttribute> object, is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-349">下列程式碼範例示範如何使用類別、 衍生自<xref:System.Web.UI.HtmlTextWriter>類別，覆寫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-349">The following code example demonstrates how to use a class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="c6942-350">覆寫檢查是否`tagKey`等於<xref:System.Web.UI.HtmlTextWriterTag.Font>欄位中，表示`<font>`將呈現的標記項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-350">The override checks whether `tagKey` is equal to the <xref:System.Web.UI.HtmlTextWriterTag.Font> field, which indicates that a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="c6942-351">因此，覆寫呼叫<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>方法來找出是否`<font>`項目包含<xref:System.Web.UI.HtmlTextWriterAttribute.Size>屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-351">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to find out whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="c6942-352">如果<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>會傳回`false`，則<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法呼叫<xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A>方法，以定義<xref:System.Web.UI.HtmlTextWriterAttribute.Size>並將其值設定為`30pt`。</span><span class="sxs-lookup"><span data-stu-id="c6942-352">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> returns `false`, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.IsAttributeDefined" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeName">
      <MemberSignature Language="C#" Value="protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetAttributeName(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeName (attrKey As HtmlTextWriterAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetAttributeName(System::Web::UI::HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeName : System.Web.UI.HtmlTextWriterAttribute -&gt; string" Usage="htmlTextWriter.GetAttributeName attrKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="attrKey">
          <span data-ttu-id="c6942-353">要取得的標記屬性名稱之 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-353">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> to obtain the markup attribute name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-354">取得與指定的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 值相關聯的標記屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-354">Obtains the name of the markup attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-355">字串，包含標記屬性的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-355">A string containing the name of the markup attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-356"><xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A>方法會傳回空字串 ("")，如果`attrKey`不是有效<xref:System.Web.UI.HtmlTextWriterAttribute>值。</span><span class="sxs-lookup"><span data-stu-id="c6942-356">The <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method returns an empty string (""), if `attrKey` is not a valid <xref:System.Web.UI.HtmlTextWriterAttribute> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-357">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A>方法，將轉換<xref:System.Web.UI.HtmlTextWriterAttribute.Size>列舉值，以其字串名稱。</span><span class="sxs-lookup"><span data-stu-id="c6942-357">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method to convert a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> enumeration value to its string name.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#6)]
 [!code-vb[HtmlTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterStyle GetStyleKey(string styleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleKey (styleName As String) As HtmlTextWriterStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterStyle GetStyleKey(System::String ^ styleName);" />
      <MemberSignature Language="F#" Value="member this.GetStyleKey : string -&gt; System.Web.UI.HtmlTextWriterStyle" Usage="htmlTextWriter.GetStyleKey styleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="styleName">
          <span data-ttu-id="c6942-358">要取得的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 之樣式屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-358">The style attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-359">取得指定樣式的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-359">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value for the specified style.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-360">對應到 <paramref name="styleName" /> 的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-360">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value corresponding to <paramref name="styleName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-361"><xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A>方法會傳回值的型別為-1<xref:System.Web.UI.HtmlTextWriterStyle>值，如果`styleName`並未對應到任何<xref:System.Web.UI.HtmlTextWriterStyle>列舉值。</span><span class="sxs-lookup"><span data-stu-id="c6942-361">The <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method returns the value -1 typed as a <xref:System.Web.UI.HtmlTextWriterStyle> value, if `styleName` does not correspond to any <xref:System.Web.UI.HtmlTextWriterStyle> enumeration value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-362">下列程式碼範例示範如何覆寫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>從衍生類別中的方法<xref:System.Web.UI.HtmlTextWriter>類別。</span><span class="sxs-lookup"><span data-stu-id="c6942-362">The following code example demonstrates how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c6942-363"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>覆寫會判斷是否`<label>`呈現標記，以及如果是這樣，檢查項目的<xref:System.Web.UI.HtmlTextWriterStyle.Color>屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-363">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override determines whether a `<label>` markup will be rendered, and, if so, checks the element for a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute.</span></span> <span data-ttu-id="c6942-364">如果<xref:System.Web.UI.HtmlTextWriterStyle.Color>未定義屬性，<xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A>的呼叫中的第一個參數使用方法<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法來加入<xref:System.Web.UI.HtmlTextWriterStyle.Color>屬性設定為`<label>`標記項目並將<xref:System.Web.UI.HtmlTextWriterStyle.Color>屬性`red`.</span><span class="sxs-lookup"><span data-stu-id="c6942-364">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method is used as the first parameter in a call to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to a `<label>` markup element and set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#1)]
 [!code-vb[HtmlTextWriter_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleName">
      <MemberSignature Language="C#" Value="protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetStyleName(valuetype System.Web.UI.HtmlTextWriterStyle styleKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleName (styleKey As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetStyleName(System::Web::UI::HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="F#" Value="member this.GetStyleName : System.Web.UI.HtmlTextWriterStyle -&gt; string" Usage="htmlTextWriter.GetStyleName styleKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleKey" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="styleKey">
          <span data-ttu-id="c6942-365">要取得的樣式屬性名稱之 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-365">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> to obtain the style attribute name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-366">取得與指定的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列舉值相關聯的標記樣式屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-366">Obtains the markup style attribute name associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-367">與 <paramref name="styleKey" /> 中所指定的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列舉值相關聯的樣式屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-367">The style attribute name associated with the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value specified in <paramref name="styleKey" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-368">如果`styleKey`不是有效<xref:System.Web.UI.HtmlTextWriterStyle>物件，<xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A>方法會傳回空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="c6942-368">If `styleKey` is not a valid <xref:System.Web.UI.HtmlTextWriterStyle> object, the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-369">下列程式碼範例示範如何檢查是否`<label>`所呈現項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-369">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="c6942-370">如果因此，它會檢查是否<xref:System.Web.UI.HtmlTextWriterStyle.Color>項目上已定義樣式屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-370">If so, it checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="c6942-371">如果未定義的屬性，<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法呼叫而<xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A>方法將<xref:System.Web.UI.HtmlTextWriterStyle.Color>成其字串表示，要傳遞給列舉型別成員<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-371">If the attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method is called and the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method converts the <xref:System.Web.UI.HtmlTextWriterStyle.Color> enumeration member into its string representation to pass to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Web.UI.HtmlTextWriterTag GetTagKey(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagKey (tagName As String) As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HtmlTextWriterTag GetTagKey(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag&#xA;override this.GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag" Usage="htmlTextWriter.GetTagKey tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="c6942-372">要取得的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 之標記項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-372">The markup element for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-373">取得與指定標記項目相關聯的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-373">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value associated with the specified markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-374">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列舉值，否則，如果 <paramref name="tagName" /> 未與特定的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 值有關聯，則為 <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-374">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value; otherwise, if <paramref name="tagName" /> is not associated with a specific <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value, <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-375">如果`tagName`是`null`，空字串 ("")，或找不到標記的標記名稱的資料表中<xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A>方法會傳回<xref:System.Web.UI.HtmlTextWriterTag.Unknown>欄位。</span><span class="sxs-lookup"><span data-stu-id="c6942-375">If `tagName` is `null`, an empty string (""), or cannot be found in the table of markup tag names, the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method returns the <xref:System.Web.UI.HtmlTextWriterTag.Unknown> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-376">下列程式碼範例示範如何覆寫的多載<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>接受字串做為其參數的方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-376">The following code example shows how to override the overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that takes a string as its parameter.</span></span> <span data-ttu-id="c6942-377">字串會傳遞至<xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A>方法，將它轉換成相對應<xref:System.Web.UI.HtmlTextWriterTag>列舉成員，並再將其傳遞至<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>採用多載<xref:System.Web.UI.HtmlTextWriterTag>做為參數的列舉值。</span><span class="sxs-lookup"><span data-stu-id="c6942-377">The string is passed to the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method, which converts it to the corresponding <xref:System.Web.UI.HtmlTextWriterTag> enumeration member, and then passes that to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload that takes a <xref:System.Web.UI.HtmlTextWriterTag> enumeration value as a parameter.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#8](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#8)]
 [!code-csharp[HtmlTextWriter_Methods3#8](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#8)]
 [!code-vb[HtmlTextWriter_Methods3#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string&#xA;override this.GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string" Usage="htmlTextWriter.GetTagName tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <span data-ttu-id="c6942-378">要取得的標記項目之 <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-378">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> to obtain the markup element for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-379">取得與指定 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列舉值相關聯的標記項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-379">Obtains the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-380">表示標記項目的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-380">A string representing the markup element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-381">如果`tagKey`不是有效<xref:System.Web.UI.HtmlTextWriterTag>的值，<xref:System.Web.UI.HtmlTextWriter.GetTagName%2A>方法會傳回空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="c6942-381">If `tagKey` is not a valid <xref:System.Web.UI.HtmlTextWriterTag> value, the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-382">下列程式碼範例示範如何關閉`<font>`使用的項目<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-382">The following code example demonstrates how to close a `<font>` element by using the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method.</span></span> <span data-ttu-id="c6942-383"><xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法呼叫<xref:System.Web.UI.HtmlTextWriter.GetTagName%2A>方法，將轉換<xref:System.Web.UI.HtmlTextWriterTag.Font>為字串的值。</span><span class="sxs-lookup"><span data-stu-id="c6942-383">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method to convert the <xref:System.Web.UI.HtmlTextWriterTag.Font> value to a string.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods3#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#7)]
 [!code-vb[HtmlTextWriter_Methods3#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : int with get, set" Usage="System.Web.UI.HtmlTextWriter.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-384">取得或設定定位點位置的數目，此為標記的每一行開頭要縮排的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-384">Gets or sets the number of tab positions to indent the beginning of each line of markup.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6942-385">每一行要縮排的定位點位置的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-385">The number of tab positions to indent each line.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-386">藉由撰寫所指定的字串執行縮排`tabString`的參數<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29>建構函式所指定的次數<xref:System.Web.UI.HtmlTextWriter.Indent%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-386">Indentation is performed by writing the string that is specified by the `tabString` parameter of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor the number of times that are specified by the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property.</span></span>  
  
 <span data-ttu-id="c6942-387">如果<xref:System.Web.UI.HtmlTextWriter.Indent%2A>屬性設定為負值，儲存之前將它變更為 0。</span><span class="sxs-lookup"><span data-stu-id="c6942-387">If the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property is set to a negative value, it is changed to 0 before being saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-388">下列程式碼範例示範如何以遞增的值指派給<xref:System.Web.UI.HtmlTextWriter.Indent%2A>屬性加入開頭標記中，新增屬性之後`<span>`項目和<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-388">The following code example demonstrates how to increment the value that is assigned to the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property when attributes have been added to the opening tag of a `<span>` element and the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method has been called.</span></span> <span data-ttu-id="c6942-389">這會增加任何呈現的標記內的縮排`<span>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-389">This increases the indentation for any markup that is rendered inside the `<span>` element.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      </Docs>
    </Member>
    <Member MemberName="InnerWriter">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter InnerWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter InnerWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerWriter As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ InnerWriter { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerWriter : System.IO.TextWriter with get, set" Usage="System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-390">取得或設定寫入標記項目內部內容的文字寫入器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-390">Gets or sets the text writer that writes the inner content of the markup element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6942-391">寫入內部標記內容的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-391">A <see cref="T:System.IO.TextWriter" /> that writes the inner markup content.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-392">內部標記內容是找到的開頭和結尾標記的標記語言項目之間的文字。</span><span class="sxs-lookup"><span data-stu-id="c6942-392">Inner markup content is the text found between the opening and closing tags of a markup language element.</span></span>  
  
 <span data-ttu-id="c6942-393">如果<xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A>屬性設定為<xref:System.IO.TextWriter>的執行個體的物件<xref:System.Web.HttpWriter>類別，此事實會記載，並儲存個別的參考。</span><span class="sxs-lookup"><span data-stu-id="c6942-393">If the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property is set to a <xref:System.IO.TextWriter> object that is an instance of the <xref:System.Web.HttpWriter> class, this fact is noted and a separate reference is saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-394">下列程式碼範例示範如何使用自訂的 Web 伺服器控制項，衍生自<xref:System.Web.UI.WebControls.WebControl>類別，覆寫<xref:System.Web.UI.Control.Render%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-394">The following code example shows how to use a custom Web server control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that overrides the <xref:System.Web.UI.Control.Render%2A> method.</span></span> <span data-ttu-id="c6942-395">它會使用<xref:System.Web.UI.HtmlTextWriter>類別來寫入`<font>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-395">It uses the <xref:System.Web.UI.HtmlTextWriter> class to write a `<font>` element.</span></span> <span data-ttu-id="c6942-396">它會將寫入之項目的開頭標記之後，它會使用<xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A>屬性，以將字串寫入`"<br> The time on the server:"`串連的值與這個字串和<xref:System.DateTime.Now%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-396">After it writes the opening tag of the element, it uses the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property to write the string `"<br> The time on the server:"` and concatenates this string with the value of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#3)]
 [!code-csharp[HtmlTextWriter_Properties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#3)]
 [!code-vb[HtmlTextWriter_Properties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpWriter" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-397">判斷指定的標記屬性和其值是否在下一次呼叫 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法期間呈現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-397">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c6942-398">與標記屬性關聯的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-398">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-399">判斷指定的標記屬性和其值是否在下一次呼叫 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法期間呈現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-399">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-400">如果屬性會在 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法的下一個呼叫期間呈現，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-400">
              <see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-401">若要取得的值指派給<xref:System.Web.UI.HtmlTextWriterAttribute>物件，請使用<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29>而非此多載。</span><span class="sxs-lookup"><span data-stu-id="c6942-401">To obtain the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object, use the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> overload instead of this one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-402">下列程式碼範例示範如何使用覆寫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法中的類別，繼承自<xref:System.Web.UI.HtmlTextWriter>類別。</span><span class="sxs-lookup"><span data-stu-id="c6942-402">The following code example shows how to use an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class that inherits from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c6942-403"><xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>是否覆寫檢查`<font>`將呈現的標記項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-403">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override checks whether a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="c6942-404">因此，覆寫呼叫<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>方法來檢查是否`<font>`項目包含<xref:System.Web.UI.HtmlTextWriterAttribute.Size>屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-404">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to check whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="c6942-405">如果沒有，則<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法呼叫<xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A>方法，定義<xref:System.Web.UI.HtmlTextWriterAttribute.Size>屬性，並將其值設為`30pt`。</span><span class="sxs-lookup"><span data-stu-id="c6942-405">If not, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute *  -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c6942-406">與標記屬性關聯的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-406">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-407">指派給屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-407">The value assigned to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-408">判斷指定的標記屬性和其值是否在下一次呼叫 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法期間呈現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-408">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-409">如果屬性會在 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法的下一個呼叫期間呈現，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-409">
              <see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-410">如果<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>方法會傳回`true`的值指派給<xref:System.Web.UI.HtmlTextWriterAttribute>傳回的物件`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-410">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStyleAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-411">判斷標記樣式屬性是否會在 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法的下一個呼叫期間呈現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-411">Determines whether a markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c6942-412">與此屬性相關聯的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-412">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-413">判斷指定的標記樣式屬性是否會在 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法的下一個呼叫期間呈現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-413">Determines whether the specified markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-414">如果此屬性將在 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法的下一個呼叫期間呈現，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-414">
              <see langword="true" /> if the attribute will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-415">若要取得會呈現具有指定的樣式屬性的值，請使用<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29>多載<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-415">To get the value that will be rendered with the specified style attribute, use the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> overload of the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-416">下列程式碼範例示範如何檢查是否`<label>`所呈現項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-416">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="c6942-417">如果是的話<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>方法會檢查是否<xref:System.Web.UI.HtmlTextWriterStyle.Color>項目上已定義樣式屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-417">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="c6942-418">如果<xref:System.Web.UI.HtmlTextWriterStyle.Color>未定義屬性，<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法來定義<xref:System.Web.UI.HtmlTextWriterStyle.Color>屬性，並將其值設為`red`。</span><span class="sxs-lookup"><span data-stu-id="c6942-418">If the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method defines the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute and sets its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle *  -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c6942-419">與此屬性相關聯的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-419">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-420">指派給樣式屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-420">The value assigned to the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-421">判斷指定的標記樣式屬性以及該屬性的值是否會在 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法的下一個呼叫期間呈現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-421">Determines whether the specified markup style attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-422">如果此屬性以及屬性值將在 <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> 方法的下一個呼叫期間呈現，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-422">
              <see langword="true" /> if the attribute and its value will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-423">如果<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A>方法會傳回`true`的值指派給<xref:System.Web.UI.HtmlTextWriterStyle>屬性會傳回在`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-423">If the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterStyle> attribute is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsValidFormAttribute (string attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidFormAttribute(string attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidFormAttribute (attribute As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidFormAttribute(System::String ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member IsValidFormAttribute : string -&gt; bool&#xA;override this.IsValidFormAttribute : string -&gt; bool" Usage="htmlTextWriter.IsValidFormAttribute attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="c6942-424">字串，其中包含要檢查的屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-424">A string that contains the name of the attribute to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-425">檢查屬性，確定該屬性可以呈現在 <see langword="&lt;form&gt;" /> 標記項目的開頭標記中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-425">Checks an attribute to ensure that it can be rendered in the opening tag of a <see langword="&lt;form&gt;" /> markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-426">一定是 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-426">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-427"><xref:System.Web.UI.HtmlTextWriter>類別實作<xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A>方法會傳回`true`的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-427">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> method returns `true` for all attributes.</span></span> <span data-ttu-id="c6942-428">覆寫<xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A>若要限制可以呈現開頭標記中的屬性`<form>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-428">Override the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> to limit the attributes that can be rendered in the opening tag of a `<form>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c6942-429">覆寫<see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />方法來傳回<see langword="true" />只針對這些屬性可以包含在<see langword="&lt;form&gt;" />類別衍生自的標記項目<see cref="T:System.Web.UI.HtmlTextWriter" />類別。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-429">Override the <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> method to return <see langword="true" /> only for those attributes that can be included in the <see langword="&lt;form&gt;" /> element of the markup for which the class derived from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class is intended.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public override string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-430">取得或設定 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件所用的行結束字元字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-430">Gets or sets the line terminator string used by the <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6942-431">目前 <see cref="T:System.Web.UI.HtmlTextWriter" /> 使用的行結束字元字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-431">The line terminator string used by the current <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-432">預設行結束字元字串是歸位字元，後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-432">The default line terminator string is a carriage return, followed by a line feed ("\r\n").</span></span>  
  
 <span data-ttu-id="c6942-433">行結束字元字串寫入輸出資料流，每一次的<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="c6942-433">The line terminator string is written to the output stream whenever one of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> methods is called.</span></span> <span data-ttu-id="c6942-434">如果<xref:System.Web.UI.HtmlTextWriter.NewLine%2A>屬性設定為`null`，使用預設的新行字元。</span><span class="sxs-lookup"><span data-stu-id="c6942-434">If the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property is set to `null`, the default new line character is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-435">下列程式碼範例示範如何使用自訂類別，衍生自<xref:System.Web.UI.HtmlTextWriter>類別，覆寫<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-435">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="c6942-436">呼叫時，<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>覆寫會檢查是否有文字寫入器呈現任何`<label>`或`<a>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-436">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements.</span></span> <span data-ttu-id="c6942-437">如果是這樣，<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法會判斷是否要將樣式屬性定義標籤。</span><span class="sxs-lookup"><span data-stu-id="c6942-437">If so, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether a style attribute is defined for the label.</span></span> <span data-ttu-id="c6942-438">如果未不定義任何樣式，則<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法會設定的預設值為`style:color`為藍色的屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-438">If no style is defined, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method sets the default value for the `style:color` attribute to blue.</span></span> <span data-ttu-id="c6942-439"><xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A>方法則會使用<xref:System.Web.UI.HtmlTextWriter.NewLine%2A>插入線條屬性中斷在標記中，並將寫入任何定義的屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-439">The <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method then uses the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property to insert a line break in the markup tag and writes any other defined attributes.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool&#xA;override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6942-440">字串，包含要呈現的屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-440">A string containing the name of the attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-441">字串，包含要指派給屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-441">A string containing the value that is assigned to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c6942-442">與標記屬性關聯的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-442">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-443">判斷指定的標記屬性以及該屬性的值是否可以在目前的標記項目中呈現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-443">Determines whether the specified markup attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-444">一定是 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-444">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-445"><xref:System.Web.UI.HtmlTextWriter>類別實作<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>方法一律會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="c6942-445">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="c6942-446"><xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>覆寫可判斷屬性是否要呈現的頁面。</span><span class="sxs-lookup"><span data-stu-id="c6942-446">The <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> overrides can determine whether an attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-447">下列程式碼範例示範如何覆寫<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-447">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method.</span></span> <span data-ttu-id="c6942-448">如果<xref:System.Web.UI.HtmlTextWriterAttribute.Size>呈現屬性，但<xref:System.Web.UI.HtmlTextWriterAttribute.Size>的值不是`30pt`，則<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A>覆寫呼叫<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法來加入<xref:System.Web.UI.HtmlTextWriterAttribute.Size>屬性，並將其值設定為`30pt`。</span><span class="sxs-lookup"><span data-stu-id="c6942-448">If a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> value is not `30pt`, the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> override calls the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `30pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#5)]
 [!code-vb[MarkupTextWriter_Methods3#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c6942-449">如果您繼承自<see cref="T:System.Web.UI.HtmlTextWriter" />類別，您可以覆寫<see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />方法來傳回<see langword="false" />防止完全呈現、 呈現在特定的項目，或特定的標記所呈現的屬性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-449">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> method to return <see langword="false" /> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup.</span>
            </span>
            <span data-ttu-id="c6942-450">比方說，如果不想讓物件衍生自<see cref="T:System.Web.UI.HtmlTextWriter" />呈現<see langword="bgcolor" />屬性設定為<see langword="&lt;table&gt;" />項目，您可以覆寫<see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />，並傳回<see langword="false" />當<paramref name="name" />傳遞<see langword="bgcolor" />和<see cref="P:System.Web.UI.HtmlTextWriter.TagName" />屬性值是<see langword="table" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-450">For example, if you do not want the object derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="bgcolor" /> attribute to <see langword="&lt;table&gt;" /> elements, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="bgcolor" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="table" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool&#xA;override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6942-451">字串，包含要呈現的樣式屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-451">A string containing the name of the style attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-452">字串，包含指派給樣式屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-452">A string containing the value that is assigned to the style attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c6942-453">與此樣式屬性相關聯的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-453">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-454">判斷指定的標記樣式屬性以及該屬性的值是否可以在目前的標記項目中呈現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-454">Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-455">一定是 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-455">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-456"><xref:System.Web.UI.HtmlTextWriter>類別實作<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>方法一律會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="c6942-456">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="c6942-457"><xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>覆寫就可以判斷頁面是否要呈現的樣式屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-457">The <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> overrides can determine whether a style attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-458">下列程式碼範例示範如何覆寫<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-458">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method.</span></span> <span data-ttu-id="c6942-459">如果<xref:System.Web.UI.HtmlTextWriterStyle.Color>呈現樣式屬性，但<xref:System.Web.UI.HtmlTextWriterStyle.Color>值不是`purple`，則<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A>覆寫會使用<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法來設定<xref:System.Web.UI.HtmlTextWriterStyle.Color>屬性設定為`purple`。</span><span class="sxs-lookup"><span data-stu-id="c6942-459">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterStyle.Color> value is not `purple`, the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `purple`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#6)]
 [!code-vb[MarkupTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c6942-460">如果您繼承自<see cref="T:System.Web.UI.HtmlTextWriter" />類別，您可以覆寫<see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />方法來傳回<see langword="false" />防止完全呈現、 呈現在特定的項目，或特定的標記語言呈現的樣式屬性。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-460">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> method to return <see langword="false" /> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language.</span>
            </span>
            <span data-ttu-id="c6942-461">比方說，如果不想讓物件衍生自<see cref="T:System.Web.UI.HtmlTextWriter" />呈現<see langword="color" />樣式屬性，來<see langword="&lt;p&gt;" />您可以覆寫項目， <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> ，並傳回<see langword="false" />時<paramref name="name" />傳遞<see langword="color" />而<see cref="P:System.Web.UI.HtmlTextWriter.TagName" />屬性值是<see langword="p" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-461">For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="color" /> style attribute to a <see langword="&lt;p&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="color" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="p" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="abstract member OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool&#xA;override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="htmlTextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6942-462">字串，包含要呈現的項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-462">A string containing the name of the element to render.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c6942-463">與項目相關聯的 <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-463">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associated with the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-464">判斷指定的標記項目是否將在提出要求的網頁上呈現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-464">Determines whether the specified markup element will be rendered to the requesting page.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-465">一定是 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-465">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-466"><xref:System.Web.UI.HtmlTextWriter>類別實作<xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>方法一律會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="c6942-466">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method always returns `true`.</span></span> <span data-ttu-id="c6942-467"><xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>覆寫就可以判斷是否要呈現的項目頁面。</span><span class="sxs-lookup"><span data-stu-id="c6942-467">The <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> overrides can determine whether an element will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-468">下列程式碼範例示範如何覆寫<xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-468">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method.</span></span> <span data-ttu-id="c6942-469">如果<xref:System.Web.UI.HtmlTextWriterTag.Font>轉譯項目時，<xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A>覆寫使用<xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A>方法，以判斷是否<xref:System.Web.UI.HtmlTextWriterAttribute.Size>所呈現屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-469">If a <xref:System.Web.UI.HtmlTextWriterTag.Font> element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to determine whether a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is being rendered.</span></span> <span data-ttu-id="c6942-470">如果沒有，它會使用<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法用來建立<xref:System.Web.UI.HtmlTextWriterAttribute.Size>屬性，並將其值設定為`20pt`。</span><span class="sxs-lookup"><span data-stu-id="c6942-470">If not, it uses the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to create a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `20pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#4)]
 [!code-vb[MarkupTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c6942-471">如果您繼承自<see cref="T:System.Web.UI.HtmlTextWriter" />類別，您可以覆寫<see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />方法來傳回<see langword="false" />以防止所有或特定的標記語言中轉譯的標記項目。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-471">If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> to prevent a markup element from being rendered at all or for a particular markup language.</span>
            </span>
            <span data-ttu-id="c6942-472">比方說，如果不想讓物件衍生自<see cref="T:System.Web.UI.HtmlTextWriter" />呈現<see langword="&lt;font&gt;" />您可以覆寫項目<see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />方法，以傳回<see langword="false" />要求網頁時，其中包含<see langword="&lt;font&gt;" />項目。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-472">For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="&lt;font&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> when a page is requested that contains a <see langword="&lt;font&gt;" /> element.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="OutputTabs">
      <MemberSignature Language="C#" Value="protected virtual void OutputTabs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTabs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTabs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTabs();" />
      <MemberSignature Language="F#" Value="abstract member OutputTabs : unit -&gt; unit&#xA;override this.OutputTabs : unit -&gt; unit" Usage="htmlTextWriter.OutputTabs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6942-473">寫入一系列的定位字串，表示一行的標記字元的縮排層次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-473">Writes a series of tab strings that represent the indentation level for a line of markup characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-474"><xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A>方法會使用<xref:System.Web.UI.HtmlTextWriter.Indent%2A>屬性來判斷多少撰寫以取得所需的縮排的定位字串。</span><span class="sxs-lookup"><span data-stu-id="c6942-474">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property to determine how many tab strings to write to obtain the desired indentation.</span></span>  
  
 <span data-ttu-id="c6942-475">使用指定的定位點字串<xref:System.Web.UI.HtmlTextWriter.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="c6942-475">The tab string is specified with the <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor.</span></span> <span data-ttu-id="c6942-476">如果未不指定任何索引標籤的字串，則<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>常數 (`\t`) 使用。</span><span class="sxs-lookup"><span data-stu-id="c6942-476">If no tab string is specified, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\t`) is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-477">下列程式碼範例示範如何覆寫<xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A>方法中的類別，衍生自<xref:System.Web.UI.HtmlTextWriter>類別。</span><span class="sxs-lookup"><span data-stu-id="c6942-477">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method in a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c6942-478"><xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A>一律覆寫使用<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>執行縮排的常數。</span><span class="sxs-lookup"><span data-stu-id="c6942-478">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> override always uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant to perform the indentation.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#7)]
 [!code-vb[HtmlTextWriter_Methods#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName="PopEndTag">
      <MemberSignature Language="C#" Value="protected string PopEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string PopEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      <MemberSignature Language="VB.NET" Value="Protected Function PopEndTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ PopEndTag();" />
      <MemberSignature Language="F#" Value="member this.PopEndTag : unit -&gt; string" Usage="htmlTextWriter.PopEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6942-479">從已呈現項目的清單中移除最近儲存的標記項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-479">Removes the most recently saved markup element from the list of rendered elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-480">
            <see cref="T:System.String" />，包含最近呈現的標記項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-480">A <see cref="T:System.String" /> containing the most recently rendered markup element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-481">元素會加入至所呈現的標記項目的清單<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-481">Elements are added to the list of rendered markup elements by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="c6942-482"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法從清單移除的標記項目，藉由呼叫<xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-482">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list by calling the <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c6942-483">已呈現項目的清單是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-483">The list of rendered elements is empty.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PushEndTag">
      <MemberSignature Language="C#" Value="protected void PushEndTag (string endTag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushEndTag(string endTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushEndTag (endTag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushEndTag(System::String ^ endTag);" />
      <MemberSignature Language="F#" Value="member this.PushEndTag : string -&gt; unit" Usage="htmlTextWriter.PushEndTag endTag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endTag">
          <span data-ttu-id="c6942-484">標記項目的結尾標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-484">The closing tag of the markup element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-485">在產生標記項目的結尾標記時，儲存指定的標記項目，方便以後使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-485">Saves the specified markup element for later use when generating the end tag for a markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-486">元素會加入至呈現的標記項目的清單時<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法呼叫<xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-486">Elements are added to the list of rendered markup elements when the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> method.</span></span> <span data-ttu-id="c6942-487"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法的標記項目從清單中移除之後它會呈現項目的結束標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-487">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list after it renders the end tag for the element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAttribute">
      <MemberSignature Language="C#" Value="protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterAttribute(string name, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterAttribute (name As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterAttribute(System::String ^ name, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="static member RegisterAttribute : string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterAttribute (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6942-488">字串，包含要登錄的標記屬性之名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-488">A string containing the name of the markup attribute to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c6942-489">與屬性名稱對應的 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-489">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that corresponds with the attribute name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-490">從原始程式檔登錄標記屬性 (不論是常值或動態產生)，讓屬性可以適當地在提出要求的用戶端呈現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-490">Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-491">藉由呼叫註冊預先定義的屬性的 HTML 標記語言<xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A>方法時的第一個<xref:System.Web.UI.HtmlTextWriter>建立物件。</span><span class="sxs-lookup"><span data-stu-id="c6942-491">The predefined attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="c6942-492">動態屬性可以註冊使用<xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A>在其他時間的方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-492">Dynamic attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method at other times.</span></span>  
  
 <span data-ttu-id="c6942-493">所使用的註冊資料表<xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A>方式`static`，因此註冊的屬性會套用至所有<xref:System.Web.UI.HtmlTextWriter>主機電腦上的物件。</span><span class="sxs-lookup"><span data-stu-id="c6942-493">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterStyle(string name, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterStyle (name As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterStyle(System::String ^ name, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="static member RegisterStyle : string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterStyle (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6942-494">從原始程式檔傳遞來的指定樣式名稱的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-494">The string passed from the source file specifying the style name.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c6942-495">與指定樣式對應的 <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-495">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that corresponds with the specified style.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-496">從原始程式檔登錄標記樣式屬性 (不論是常值或動態產生)，讓屬性可以適當地在提出要求的用戶端呈現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-496">Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-497">藉由呼叫註冊的 HTML 標記語言的預先定義階層式樣式表 (CSS) 屬性<xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A>方法時的第一個<xref:System.Web.UI.HtmlTextWriter>建立物件。</span><span class="sxs-lookup"><span data-stu-id="c6942-497">The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="c6942-498">動態樣式屬性可以註冊使用<xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A>在其他時間的方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-498">Dynamic style attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method at other times.</span></span>  
  
 <span data-ttu-id="c6942-499">所使用的註冊資料表<xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A>方式`static`，因此註冊的屬性會套用至所有<xref:System.Web.UI.HtmlTextWriter>主機電腦上的物件。</span><span class="sxs-lookup"><span data-stu-id="c6942-499">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTag">
      <MemberSignature Language="C#" Value="protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterTag(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterTag (name As String, key As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterTag(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="static member RegisterTag : string * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterTag (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6942-500">包含 HTML 標記的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-500">A string that contains the HTML tag.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c6942-501">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" />，指定要呈現哪一個項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-501">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies which element to render.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-502">從原始程式檔登錄標記 (不論是常值或動態產生)，讓標記可以適當地在要求的用戶端上呈現。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-502">Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-503">藉由呼叫註冊的預先定義的標記的 HTML 語言<xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A>方法時的第一個<xref:System.Web.UI.HtmlTextWriter>建立物件。</span><span class="sxs-lookup"><span data-stu-id="c6942-503">The predefined markup tags of the HTML language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="c6942-504">動態標記可以註冊使用<xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A>在其他時間的方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-504">Dynamic markup tags can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method at other times.</span></span>  
  
 <span data-ttu-id="c6942-505">所使用的註冊資料表<xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A>方式`static`，因此註冊的標記會套用至所有<xref:System.Web.UI.HtmlTextWriter>主機電腦上的物件。</span><span class="sxs-lookup"><span data-stu-id="c6942-505">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method is `static`, so registration of tags applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterContent : unit -&gt; string&#xA;override this.RenderAfterContent : unit -&gt; string" Usage="htmlTextWriter.RenderAfterContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6942-506">將標記項目的內容之後及結尾標記之前出現的任何文字或間距，寫入標記輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-506">Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-507">字串，包含項目的內容之後所要寫入的間距或文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-507">A string that contains the spacing or text to write after the content of the element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-508"><xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>方法就很有用，如果您想要插入在目前的標記項目中的項目子系。</span><span class="sxs-lookup"><span data-stu-id="c6942-508">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method can be useful if you want to insert child elements into the current markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-509">下列程式碼範例示範如何覆寫<xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>之類別中衍生自<xref:System.Web.UI.HtmlTextWriter>類別，以判斷是否`<label>`所呈現項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-509">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to determine whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="c6942-510">如果是的話<xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>覆寫插入結尾標記`<font>`項目的結尾標記之前立即`<label>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-510">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> override inserts the closing tag of a `<font>` element immediately before the closing tag of the `<label>` element.</span></span> <span data-ttu-id="c6942-511">如果項目以外`<label>`轉譯，<xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A>使用基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-511">If an element other than `<label>` is being rendered, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#3)]
 [!code-vb[HtmlTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c6942-512">
              <see cref="T:System.Web.UI.HtmlTextWriter" />類別實作<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />方法會傳回<see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-512">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> method returns <see langword="null" />.</span>
            </span>
            <span data-ttu-id="c6942-513">覆寫<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />如果您想要撰寫文字或間距的項目內容之後，但結尾標記之前。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-513">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> if you want to write text or spacing after the element content but before the closing tag.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterTag : unit -&gt; string&#xA;override this.RenderAfterTag : unit -&gt; string" Usage="htmlTextWriter.RenderAfterTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6942-514">寫入標記項目的結尾標記之後所發生的任何間距或文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-514">Writes any spacing or text that occurs after the closing tag for a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-515">要在項目的結尾標記之後寫入的間距或文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-515">The spacing or text to write after the closing tag of the element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-516"><xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>方法就很有用，如果您想要呈現元素的標籤之後的其他結尾標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-516">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method can be useful if you want to render additional closing tags after the element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-517">下列程式碼範例示範如何覆寫<xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>方法，以判斷類別是否衍生自<xref:System.Web.UI.HtmlTextWriter>呈現類別`<label>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-517">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is rendering a `<label>` element.</span></span> <span data-ttu-id="c6942-518">如果是的話<xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>覆寫插入結尾標記`<font>`項目之後立即`<label>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-518">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> override inserts the closing tag of a `<font>` element immediately after the `<label>` element.</span></span> <span data-ttu-id="c6942-519">如果不是`<label>`項目，<xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A>使用基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-519">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#2)]
 [!code-vb[HtmlTextWriter_Methods4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c6942-520">
              <see cref="T:System.Web.UI.HtmlTextWriter" />類別實作<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />方法會傳回<see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-520">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> method returns <see langword="null" />.</span>
            </span>
            <span data-ttu-id="c6942-521">覆寫<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />如果您想要撰寫文字或項目結尾標記之後的間距。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-521">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> if you want to write text or spacing after the element closing tag.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeContent : unit -&gt; string&#xA;override this.RenderBeforeContent : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6942-522">在標記項目的內容之前及開頭標記之後寫入任何文字或間距。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-522">Writes any text or spacing before the content and after the opening tag of a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-523">要在項目的內容之前寫入的文字或間距。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-523">The text or spacing to write prior to the content of the element.</span>
          </span>
          <span data-ttu-id="c6942-524">如果未覆寫，則 <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> 會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-524">If not overridden, <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-525"><xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>方法就很有用，如果您想要插入在目前的標記項目之前的內部標記中的項目子系。</span><span class="sxs-lookup"><span data-stu-id="c6942-525">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method can be useful if you want to insert child elements into the current markup element before the inner markup.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-526">下列程式碼範例示範如何覆寫<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>方法，以判斷類別是否衍生自<xref:System.Web.UI.HtmlTextWriter>類別即將呈現`<label>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-526">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="c6942-527">如果是的話<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>覆寫插入的開頭標記`<font>`項目的開頭標記的後面`<label>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-527">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> override inserts the opening tag of a `<font>` element immediately after the opening tag of the `<label>` element.</span></span> <span data-ttu-id="c6942-528">如果不是`<label>`項目，<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>使用基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-528">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c6942-529">
              <see cref="T:System.Web.UI.HtmlTextWriter" />類別實作<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />方法會傳回<see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-529">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> method returns <see langword="null" />.</span>
            </span>
            <span data-ttu-id="c6942-530">覆寫<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />如果您想要撰寫文字或間距項目的開頭標記之後，但前面的項目內容。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-530">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> if you want to write text or spacing after the opening tag but ahead of the element content.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeTag : unit -&gt; string&#xA;override this.RenderBeforeTag : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6942-531">寫入標記項目的開頭標記之前所發生的任何文字或間距。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-531">Writes any text or spacing that occurs before the opening tag of a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c6942-532">要在標記項目的開頭標記之前寫入的文字或間距。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-532">The text or spacing to write before the markup element opening tag.</span>
          </span>
          <span data-ttu-id="c6942-533">如果未覆寫，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-533">If not overridden, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-534"><xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>方法就很有用，如果您想要呈現的預期項目開頭標記之前的額外的開頭標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-534">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-535">下列程式碼範例示範如何覆寫<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>方法，以判斷是否衍生自類別<xref:System.Web.UI.HtmlTextWriter>類別即將呈現`<label>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-535">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method to determine whether a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="c6942-536">如果是的話<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>覆寫插入的開頭標記`<font>`項目之前，立即`<label>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-536">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> override inserts the opening tag of a `<font>` element immediately before the `<label>` element.</span></span> <span data-ttu-id="c6942-537">如果它不呈現`<label>`項目，<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>使用基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-537">If it is not rendering a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c6942-538">
              <see cref="T:System.Web.UI.HtmlTextWriter" />類別實作<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />方法會傳回<see langword="null" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-538">The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> method returns <see langword="null" />.</span>
            </span>
            <span data-ttu-id="c6942-539">覆寫<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />如果您想要撰寫文字或項目開頭標記之前的間距。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-539">Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> if you want to write text or spacing ahead of the element opening tag.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginTag">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-540">將標記項目的開頭標記寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-540">Writes the opening tag of a markup element to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : string -&gt; unit&#xA;override this.RenderBeginTag : string -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="c6942-541">字串，包含要轉譯開頭標記之標記項目的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-541">A string containing the name of the markup element for which to render the opening tag.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-542">將指定標記項目的開頭標記寫入到輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-542">Writes the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-543">使用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>覆寫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29>方法，如果在標記項目不是其中一個<xref:System.Web.UI.HtmlTextWriterTag>列舉值。</span><span class="sxs-lookup"><span data-stu-id="c6942-543">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> method, if the markup element is not one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="c6942-544">若要使用產生的標記項目<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法中，第一次呼叫<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>而<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法，如有必要，指定任何項目屬性或項目的開頭標記中出現的樣式屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-544">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="c6942-545">在產生的內部標記之後, 呼叫<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法來產生結尾標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-545">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-546">下列程式碼範例示範如何呼叫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>自訂控制項來呈現非標準的開頭標記中的方法`MyTag`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-546">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a custom control to render the opening tag of a non-standard `MyTag` element.</span></span> <span data-ttu-id="c6942-547">在程式碼範例接著會呼叫<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法以呈現內部標記，然後再呼叫<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法來關閉的項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-547">The code example then calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render inner markup, and then calls the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to close the element.</span></span>  
  
 <span data-ttu-id="c6942-548">此程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-548">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <span data-ttu-id="c6942-549">其中一個 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 值，定義要呈現的標記項目的開頭標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-549">One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> values that defines the opening tag of the markup element to render.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-550">將與指定的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列舉值相關聯的標記項目的開頭標記寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-550">Writes the opening tag of the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-551">使用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>多載<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29>方法的標記項目是否屬於其中一個已知型別的<xref:System.Web.UI.HtmlTextWriterTag>列舉值。</span><span class="sxs-lookup"><span data-stu-id="c6942-551">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> method if the markup element is of a known type that is one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="c6942-552">若要使用產生的標記項目<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法中，第一次呼叫<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>而<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A>方法，如有必要，指定任何項目屬性或項目的開頭標記中出現的樣式屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-552">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="c6942-553">在產生的內部標記之後, 呼叫<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法來產生結尾標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-553">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-554">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法，以輸出的開頭標記`<img>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-554">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to output the opening tag of an `<img>` element.</span></span> <span data-ttu-id="c6942-555">會加入至元素的屬性<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>方法會在開啟`<img>`標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-555">The attributes that are added to the element by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method will be in the opening `<img>` tag.</span></span> <span data-ttu-id="c6942-556"><xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法用來產生結尾標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-556">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is used to generate the closing tag.</span></span>  
  
 <span data-ttu-id="c6942-557">此程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-557">This code example generates the following markup:</span></span>  
  
 `<img alt="Encoding &quot;Required&quot;" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : unit -&gt; unit&#xA;override this.RenderEndTag : unit -&gt; unit" Usage="htmlTextWriter.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6942-558">將標記項目的結尾標記寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-558">Writes the end tag of a markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-559">呼叫<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法之後<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>呼叫多載和已轉譯的開頭和結尾標記 （內部標記） 的項目之間的所有內容之後。</span><span class="sxs-lookup"><span data-stu-id="c6942-559">Call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-560">下列程式碼範例示範如何呼叫<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法之後兩者<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>會產生項目的開頭標記的方法和<xref:System.Web.UI.HtmlTextWriter.Write%2A>呈現的開頭和結尾標記的自訂之間的內部標記方法`MyTag`已經呼叫項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-560">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after both the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that generates the opening tag and the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method that renders the inner markup between the opening and closing tags of the custom `MyTag` element have been called.</span></span>  
  
 <span data-ttu-id="c6942-561">此程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-561">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingChars">
      <MemberSignature Language="C#" Value="public const string SelfClosingChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingChars;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingChars : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-562">表示空格以及標記的自行結尾斜線符號 (/)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-562">Represents a space and the self-closing slash mark (/) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-563"><xref:System.Web.UI.HtmlTextWriter.SelfClosingChars>欄位會在屬於自我封閉的標記項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-563">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> field is used in markup elements that are self-closed.</span></span> <span data-ttu-id="c6942-564">例如: </span><span class="sxs-lookup"><span data-stu-id="c6942-564">For example:</span></span>  
  
 `<input type="submit" value="go"  />`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingTagEnd">
      <MemberSignature Language="C#" Value="public const string SelfClosingTagEnd;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingTagEnd" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingTagEnd As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingTagEnd;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingTagEnd : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-565">表示自我結尾標記項目的結尾斜線符號和右角括弧 (/&gt;)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-565">Represents the closing slash mark and right angle bracket (/&gt;) of a self-closing markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-566"><xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>欄位由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>建構自我結尾的標記項目時的方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-566">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method when constructing self-closing markup elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-567">下列程式碼範例示範如何自訂的值變成`FileName`後面接著一個引號的屬性和所代表的字元<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>欄位。</span><span class="sxs-lookup"><span data-stu-id="c6942-567">The following code example shows how to render the value of a custom `FileName` property followed by a quotation mark and the characters represented by the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field.</span></span> <span data-ttu-id="c6942-568">程式碼範例會呼叫<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法，並傳遞<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>欄位做為參數引數，以關閉項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-568">The code example calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method and passes the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field as the parameter argument to close the element.</span></span>  
  
 <span data-ttu-id="c6942-569">此程式碼範例的轉譯`FileName`屬性值，然後執行下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-569">This code example renders the `FileName` property value, and then the following markup:</span></span>  
  
 `" />`  
  
 [!code-csharp[MarkupTextWriter_Constants#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#11)]
 [!code-vb[MarkupTextWriter_Constants#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SemicolonChar">
      <MemberSignature Language="C#" Value="public const char SemicolonChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SemicolonChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SemicolonChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SemicolonChar;" />
      <MemberSignature Language="F#" Value="val mutable SemicolonChar : char" Usage="System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-570">表示分號 (;)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-570">Represents the semicolon (;).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-571">傳遞<xref:System.Web.UI.HtmlTextWriter.SemicolonChar>欄位做為參數引數中<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法呼叫，當您想要呈現的自訂控制項或配接器從分號。</span><span class="sxs-lookup"><span data-stu-id="c6942-571">Pass the <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field as the parameter argument in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call when you want to render a semicolon from a custom control or adapter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-572">下列程式碼範例示範如何以手動方式呈現一系列的標記項目上的樣式。</span><span class="sxs-lookup"><span data-stu-id="c6942-572">The following code example demonstrates how to manually render a series of styles on a markup element.</span></span> <span data-ttu-id="c6942-573">此程式碼範例會使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法以呈現`font-size`和`border-style`樣式屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-573">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render `font-size` and `border-style` style attributes.</span></span> <span data-ttu-id="c6942-574"><xref:System.Web.UI.HtmlTextWriter.SemicolonChar>欄位做為參數<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法來分隔的值`font-size`屬性從開頭`border-style`屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-574">The <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field is used as a parameter of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to separate the value of the `font-size` attribute from the beginning of the `border-style` attribute.</span></span>  
  
 <span data-ttu-id="c6942-575">此程式碼範例會呈現下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-575">This code example renders the following markup:</span></span>  
  
 `style="font-size:12pt;border-style:ridge"`  
  
 [!code-csharp[MarkupTextWriter_Constants#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simplebutton.cs#7)]
 [!code-vb[MarkupTextWriter_Constants#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simplebutton.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SingleQuoteChar">
      <MemberSignature Language="C#" Value="public const char SingleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SingleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SingleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SingleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable SingleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-576">表示所有格符號 (')。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-576">Represents an apostrophe (').</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-577">使用<xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar>欄位時才轉譯所有格符號。</span><span class="sxs-lookup"><span data-stu-id="c6942-577">Use the <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> field when it is necessary to render an apostrophe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SlashChar">
      <MemberSignature Language="C#" Value="public const char SlashChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SlashChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SlashChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SlashChar;" />
      <MemberSignature Language="F#" Value="val mutable SlashChar : char" Usage="System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-578">表示斜線符號 (/)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-578">Represents the slash mark (/).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-579">使用<xref:System.Web.UI.HtmlTextWriter.SlashChar>呈現斜線的欄位會標示當您撰寫的 URL。</span><span class="sxs-lookup"><span data-stu-id="c6942-579">Use the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field to render the slash marks when you write a URL.</span></span> <span data-ttu-id="c6942-580"><xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法會使用<xref:System.Web.UI.HtmlTextWriter.SlashChar>欄位寫入標記項目的結尾標記時。</span><span class="sxs-lookup"><span data-stu-id="c6942-580">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field when writing the closing tag of a markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-581">下列程式碼範例示範如何以手動方式轉譯`src`屬性的`<img>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-581">The following code example demonstrates how to manually render the `src` attribute of an `<img>` element.</span></span> <span data-ttu-id="c6942-582">此程式碼範例會使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法<xref:System.Web.UI.HtmlTextWriter.SlashChar>做為其參數，來呈現斜線的欄位會標示套用至路徑中`src`屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-582">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field as its parameter to render slash marks in the path that is applied to the `src` attribute.</span></span>  
  
 <span data-ttu-id="c6942-583">此程式碼範例會呈現下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-583">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SpaceChar">
      <MemberSignature Language="C#" Value="public const char SpaceChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SpaceChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SpaceChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SpaceChar;" />
      <MemberSignature Language="F#" Value="val mutable SpaceChar : char" Usage="System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-584">表示空格 ( ) 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-584">Represents a space ( ) character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-585"><xref:System.Web.UI.HtmlTextWriter.SpaceChar>欄位由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>和<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法在撰寫元素與屬性之間的分隔符號。</span><span class="sxs-lookup"><span data-stu-id="c6942-585">The <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods when writing separators between elements and attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-586">本節提供兩個程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="c6942-586">This section provides two code examples.</span></span> <span data-ttu-id="c6942-587">第一個示範如何建立字元陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-587">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="c6942-588">第二個示範如何使用陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-588">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="c6942-589">這些程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-589">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="c6942-590">下列程式碼範例示範如何建立<xref:System.Char>陣列，其中包含<xref:System.Web.UI.HtmlTextWriter.SpaceChar>欄位。</span><span class="sxs-lookup"><span data-stu-id="c6942-590">The following code example shows how to create a <xref:System.Char> array that contains the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="c6942-591">下列程式碼範例示範如何使用陣列時所建立在上述範例中，程式碼做為參數呼叫<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-591">The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StyleEqualsChar">
      <MemberSignature Language="C#" Value="public const char StyleEqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char StyleEqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const StyleEqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char StyleEqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable StyleEqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-592">表示樣式等號 (<see langword=":" />) 字元，此字元用來設定樣式屬性等於值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-592">Represents the style equals (<see langword=":" />) character used to set style attributes equal to values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-593"><xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar>欄位由<xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>來分隔樣式名稱和值的方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-593">The <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method to delimit style names and values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-594">下列程式碼範例示範如何轉譯`FontWeight`屬性和值的`bold`項目的開頭標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-594">The following code example demonstrates how to render a `FontWeight` attribute and value of `bold` to the opening tag of an element.</span></span> <span data-ttu-id="c6942-595">此程式碼範例會使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法使用<xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar>欄位做為參數來呈現設定樣式中的每個屬性值的字元。</span><span class="sxs-lookup"><span data-stu-id="c6942-595">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field as the parameter to render the character that sets the value of each style attribute.</span></span>  
  
 <span data-ttu-id="c6942-596">此程式碼範例會呈現下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-596">This code example renders the following markup:</span></span>  
  
 `FontWeight:"bold"`  
  
 [!code-csharp[MarkupTextWriter_Constants#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#5)]
 [!code-vb[MarkupTextWriter_Constants#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); void set(System::Web::UI::HtmlTextWriterTag value); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag with get, set" Usage="System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-597">取得或設定指定標記項目的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-597">Gets or sets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the specified markup element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6942-598">可以呈現開頭標記的標記項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-598">The markup element that is having its opening tag rendered.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-599"><xref:System.Web.UI.HtmlTextWriter.TagKey%2A>屬性只對繼承的類別使用的是<xref:System.Web.UI.HtmlTextWriter>類別。</span><span class="sxs-lookup"><span data-stu-id="c6942-599">The <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c6942-600">您應該讀取或設定<xref:System.Web.UI.HtmlTextWriter.TagKey%2A>屬性只能在呼叫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法; 這是唯一的時間設定為一致的值。</span><span class="sxs-lookup"><span data-stu-id="c6942-600">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property only in a call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-601">下列程式碼範例示範如何覆寫的新版<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A>方法中的類別，衍生自<xref:System.Web.UI.HtmlTextWriter>類別。</span><span class="sxs-lookup"><span data-stu-id="c6942-601">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c6942-602">它會使用值<xref:System.Web.UI.HtmlTextWriter.TagKey%2A>屬性來判斷是否使用自訂伺服器控制項<xref:System.Web.UI.HtmlTextWriter>呈現物件`<label>`標記項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-602">It uses the value of the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property to determine whether a server control using the custom <xref:System.Web.UI.HtmlTextWriter> object is rendering a `<label>` markup element.</span></span> <span data-ttu-id="c6942-603">如果是，`<font>`具有項目`color`屬性設為`red`若要修改的格式傳回`<label>`項目的文字。</span><span class="sxs-lookup"><span data-stu-id="c6942-603">If it is, a `<font>` element with a `color` attribute set to `red` is returned to modify the formatting of the `<label>` element's text.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c6942-604">無法設定這個屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-604">The property value cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagLeftChar">
      <MemberSignature Language="C#" Value="public const char TagLeftChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagLeftChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagLeftChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagLeftChar;" />
      <MemberSignature Language="F#" Value="val mutable TagLeftChar : char" Usage="System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-605">表示標記的開頭角括弧 (&lt;)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-605">Represents the opening angle bracket (&lt;) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-606"><xref:System.Web.UI.HtmlTextWriter.TagLeftChar>欄位由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>， <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>， <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>，和<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>寫入標記時的方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-606">The <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-607">下列程式碼範例會呈現開頭標記中，第一個字元`<table>`具有項目名稱的項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-607">The following code example renders the first character of the opening tag of a `<table>` element with the element name.</span></span> <span data-ttu-id="c6942-608">此程式碼範例會使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法使用<xref:System.Web.UI.HtmlTextWriter.TagLeftChar>欄位做為參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-608">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="c6942-609">此程式碼範例會呈現下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-609">This code example renders the following markup:</span></span>  
  
 `<table`  
  
 [!code-csharp[MarkupTextWriter_Constants#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#9)]
 [!code-vb[MarkupTextWriter_Constants#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string with get, set" Usage="System.Web.UI.HtmlTextWriter.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-610">取得或設定所呈現的標記項目的標記名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-610">Gets or sets the tag name of the markup element being rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c6942-611">所呈現的標記項目的標記名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-611">The tag name of the markup element being rendered.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-612"><xref:System.Web.UI.HtmlTextWriter.TagName%2A>屬性只對繼承的類別使用的是<xref:System.Web.UI.HtmlTextWriter>類別。</span><span class="sxs-lookup"><span data-stu-id="c6942-612">The <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c6942-613">您應該讀取或設定<xref:System.Web.UI.HtmlTextWriter.TagName%2A>屬性只能在<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法呼叫; 這是唯一的時間設定為一致的值。</span><span class="sxs-lookup"><span data-stu-id="c6942-613">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property only in <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-614">下列程式碼範例示範如何覆寫的新版<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>方法中的類別，衍生自<xref:System.Web.UI.HtmlTextWriter>類別。</span><span class="sxs-lookup"><span data-stu-id="c6942-614">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c6942-615">在程式碼範例會檢查是否要呈現的項目`<label>`項目，藉由呼叫<xref:System.String.Compare%2A?displayProperty=nameWithType>方法，然後再將傳遞<xref:System.Web.UI.HtmlTextWriter.TagName%2A>屬性值和字串， `"label"`，做為參數引數。</span><span class="sxs-lookup"><span data-stu-id="c6942-615">The code example checks whether the element to render is a `<label>` element by calling the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and then passing the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property value and a string, `"label"`, as the parameter arguments.</span></span> <span data-ttu-id="c6942-616">如果`<label>`項目是即將呈現的開頭標記`<font>`項目，與`color`屬性設為`red`之前, 轉譯`<label>`之開頭標記的項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-616">If a `<label>` element is about to be rendered, the opening tag of a `<font>` element, with a `color` attribute set to `red`, is rendered before the `<label>` element's opening tag.</span></span> <span data-ttu-id="c6942-617">如果不是要呈現的項目`<label>`元素中，基底類別版本<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-617">If the element to render is not a `<label>` element, the base class's version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method is called.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TagRightChar">
      <MemberSignature Language="C#" Value="public const char TagRightChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagRightChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagRightChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagRightChar;" />
      <MemberSignature Language="F#" Value="val mutable TagRightChar : char" Usage="System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-618">表示標記的結尾角括弧 (&gt;)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-618">Represents the closing angle bracket (&gt;) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-619"><xref:System.Web.UI.HtmlTextWriter.TagRightChar>欄位由<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>， <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>，和<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>寫入標記時的方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-619">The <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-620">下列程式碼範例示範如何呈現目的結尾標記`<table>`藉由呼叫的多載的項目<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-620">The following code example shows how to render the closing tag of a `<table>` element by making calls to overloads of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span> <span data-ttu-id="c6942-621">若要轉譯的最後一個字元的標記，在程式碼範例會使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法使用<xref:System.Web.UI.HtmlTextWriter.TagRightChar>欄位做為參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-621">To render the final character of the tag, the code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="c6942-622">此程式碼範例會呈現下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-622">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-623">將指定資料型別以及任何暫止定位空格寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-623">Writes the specified data type to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(bool value);" />
      <MemberSignature Language="F#" Value="abstract member Write : bool -&gt; unit&#xA;override this.Write : bool -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-624">要寫入輸出資料流中的 <see cref="T:System.Boolean" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-624">The <see cref="T:System.Boolean" /> to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-625">將布林值的文字表示以及任何暫止定位空格寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-625">Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-626"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法會產生任何擱置的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-626">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="abstract member Write : char -&gt; unit&#xA;override this.Write : char -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-627">要寫入輸出資料流中的 Unicode 字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-627">The Unicode character to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-628">將 Unicode 字元的文字表示以及任何暫止定位空格寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-628">Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-629"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法會產生任何擱置的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-629">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-630">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法以結束的開頭標記`<img>`使用的項目<xref:System.Web.UI.HtmlTextWriter.TagRightChar>常數。</span><span class="sxs-lookup"><span data-stu-id="c6942-630">The following code example demonstrates using the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to end the opening tag of an `<img>` element by using the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant.</span></span>  
  
 <span data-ttu-id="c6942-631">此程式碼範例會呈現下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-631">This code example renders the following markup:</span></span>  
  
 `<img alt="A custom image">`  
  
 `</img>`  
  
 [!code-csharp[MarkupTextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#5)]
 [!code-vb[MarkupTextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] -&gt; unit&#xA;override this.Write : char[] -&gt; unit" Usage="htmlTextWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c6942-632">要寫入輸出資料流中的 Unicode 字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-632">The array of Unicode characters to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-633">將 Unicode 字元陣列的文字表示以及任何暫止定位空格寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-633">Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-634"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法會產生任何擱置的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-634">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-635">本節提供兩個程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="c6942-635">This section provides two code examples.</span></span> <span data-ttu-id="c6942-636">第一個示範如何建立字元陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-636">The first one demonstrates how to create an array of characters.</span></span> <span data-ttu-id="c6942-637">第二個示範如何使用陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-637">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="c6942-638">這些程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-638">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="c6942-639">下列程式碼範例示範如何建立拼出的字元陣列`hello world`。</span><span class="sxs-lookup"><span data-stu-id="c6942-639">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="c6942-640">在陣列中包含是<xref:System.Web.UI.HtmlTextWriter.SpaceChar> 欄位中，這會建立兩個字之間的空格。</span><span class="sxs-lookup"><span data-stu-id="c6942-640">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="c6942-641">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法以呈現`hello world`時包含此範例程式碼的控制項包含在頁面建立頁面上，上述程式碼範例中的字元陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-641">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the `hello world` character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(double value);" />
      <MemberSignature Language="F#" Value="abstract member Write : double -&gt; unit&#xA;override this.Write : double -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-642">要寫入輸出資料流中的雙精度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-642">The double-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-643">將雙精度浮點數的文字表示以及任何暫止定位空格寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-643">Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-644"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法會產生任何擱置的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-644">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-645">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法以呈現的值<xref:System.Double.MaxValue?displayProperty=nameWithType>欄位。</span><span class="sxs-lookup"><span data-stu-id="c6942-645">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="c6942-646">此程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-646">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#7)]
 [!code-vb[MarkupTextWriter_Methods1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(int value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int -&gt; unit&#xA;override this.Write : int -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-647">要寫入至輸出資料流的 32 位元組帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-647">The 32-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-648">將 32 位元組帶正負數的整數之文字表示以及任何暫止定位空格寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-648">Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-649"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法會產生任何擱置的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-649">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(long value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int64 -&gt; unit&#xA;override this.Write : int64 -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-650">要寫入至輸出資料流的 64 位元組帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-650">The 64-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-651">將 64 位元組帶正負數的整數之文字表示以及任何暫止定位空格寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-651">Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-652"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法會產生任何擱置的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-652">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj -&gt; unit&#xA;override this.Write : obj -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-653">要寫入輸出資料流中的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-653">The object to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-654">將物件的文字表示以及任何暫止定位空格寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-654">Writes the text representation of an object to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-655"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法會產生任何擱置的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-655">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-656">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法以呈現的值<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-656">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="c6942-657">此程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-657">This code example generates the following markup:</span></span>  
  
 `This is a rendered CultureInfo object.`  
  
 `<bold>`  
  
 <span data-ttu-id="c6942-658">值<xref:System.Globalization.CultureInfo.CurrentCulture%2A>屬性：</span><span class="sxs-lookup"><span data-stu-id="c6942-658">The value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property:</span></span>  
  
 `</bold>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#8)]
 [!code-vb[MarkupTextWriter_Methods1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(float value);" />
      <MemberSignature Language="F#" Value="abstract member Write : single -&gt; unit&#xA;override this.Write : single -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-659">要寫入輸出資料流中的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-659">The single-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-660">將單精確度浮點數的文字表示以及任何暫止定位空格寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-660">Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-661"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法會產生任何擱置的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-661">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-662">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法以呈現的值<xref:System.Single.Epsilon?displayProperty=nameWithType>欄位中，這是最小的可能值的<xref:System.Single>結構。</span><span class="sxs-lookup"><span data-stu-id="c6942-662">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="c6942-663">此程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-663">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#10)]
 [!code-vb[MarkupTextWriter_Methods1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="htmlTextWriter.Write s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="c6942-664">要寫入輸出資料流的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-664">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-665">將指定字串以及任何暫止定位空格寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-665">Writes the specified string to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-666"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法會產生任何擱置的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-666">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-667">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法以呈現的開頭和自訂的標記項目的結尾標記之間的字串。</span><span class="sxs-lookup"><span data-stu-id="c6942-667">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a string between the opening and closing tags of a custom markup element.</span></span>  
  
 <span data-ttu-id="c6942-668">此程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-668">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj -&gt; unit&#xA;override this.Write : string * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="c6942-669">包含零或多個格式項目的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-669">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="c6942-670">要格式化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-670">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-671">將定位字串和已格式化的字串寫入輸出資料流，使用與 <see cref="M:System.String.Format(System.String,System.Object)" /> 方法相同的語意。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-671">Writes a tab string and a formatted string to the output stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-672"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法會產生任何擱置的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-672">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-673">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法以呈現的值的格式化的字串<xref:System.Globalization.CultureInfo.CurrentCulture%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-673">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#5)]
 [!code-vb[MarkupTextWriter_Methods1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj[] -&gt; unit&#xA;override this.Write : string * obj[] -&gt; unit" Usage="htmlTextWriter.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="c6942-674">包含零或多個格式項目的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-674">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="c6942-675">要格式化的物件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-675">An object array to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-676">將格式化字串 (其中包含物件陣列的文字表示) 以及任何暫止定位空格寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-676">Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</span>
          </span>
          <span data-ttu-id="c6942-677">這個方法使用的語意與 <see cref="M:System.String.Format(System.String,System.Object[])" /> 方法相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-677">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-678"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法會產生任何擱置的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-678">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-679">本節包含兩個程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="c6942-679">This section contains two code examples.</span></span> <span data-ttu-id="c6942-680">第一個示範如何轉譯格式化的字串和陣列的內容。</span><span class="sxs-lookup"><span data-stu-id="c6942-680">The first one demonstrates how to render a formatted string and the contents of an array.</span></span> <span data-ttu-id="c6942-681">第二個示範如何宣告陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-681">The second one demonstrates how to declare the array.</span></span>  
  
 <span data-ttu-id="c6942-682">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法來格式化的字串和名為的物件陣列的內容轉譯`curPriceTime`。</span><span class="sxs-lookup"><span data-stu-id="c6942-682">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the contents of an object array, named `curPriceTime`.</span></span> <span data-ttu-id="c6942-683">方法呼叫會轉譯為陣列的第二個成員之前它會呈現第一個成員。</span><span class="sxs-lookup"><span data-stu-id="c6942-683">The method call renders the second member of the array before it renders the first member.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#9)]
 [!code-vb[MarkupTextWriter_Methods2#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#9)]  
  
 <span data-ttu-id="c6942-684">下列程式碼範例示範宣告`curPriceTime`物件陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-684">The following code example demonstrates declaring the `curPriceTime` object array.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#14](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#14)]
 [!code-vb[MarkupTextWriter_Methods2#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] * int * int -&gt; unit&#xA;override this.Write : char[] * int * int -&gt; unit" Usage="htmlTextWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c6942-685">字元陣列，可從中將文字寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-685">The array of characters from which to write text to the output stream.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c6942-686">陣列中開始寫入的索引位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-686">The index location in the array where writing begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c6942-687">要寫入輸出資料流中的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-687">The number of characters to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-688">將 Unicode 字元子陣列的文字表示以及任何暫止定位空格寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-688">Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-689"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法會產生任何擱置的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-689">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-690">本節提供兩個程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="c6942-690">This section provides two code examples.</span></span> <span data-ttu-id="c6942-691">第一個示範如何建立字元陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-691">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="c6942-692">第二個示範如何使用陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-692">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="c6942-693">這些程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-693">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="c6942-694">下列程式碼範例示範如何建立拼出的字元陣列`hello world`。</span><span class="sxs-lookup"><span data-stu-id="c6942-694">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="c6942-695">在陣列中包含是<xref:System.Web.UI.HtmlTextWriter.SpaceChar> 欄位中，這會建立兩個字之間的空格。</span><span class="sxs-lookup"><span data-stu-id="c6942-695">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="c6942-696">下列的部分程式碼範例會使用`index`並`count`參數<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法以呈現在上述範例中所建立的陣列的前五個字元。</span><span class="sxs-lookup"><span data-stu-id="c6942-696">The following portion of the code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the first five characters of the array created in the preceding example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#11)]
 [!code-vb[MarkupTextWriter_Methods2#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj * obj -&gt; unit&#xA;override this.Write : string * obj * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="c6942-697">包含零或多個格式項目的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-697">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="c6942-698">要格式化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-698">An object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="c6942-699">要格式化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-699">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-700">將格式化字串 (其中包含兩個物件的文字表示) 以及任何暫止定位空格寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-700">Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</span>
          </span>
          <span data-ttu-id="c6942-701">這個方法使用的語意與 <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> 方法相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-701">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-702"><xref:System.Web.UI.HtmlTextWriter.Write%2A>方法會產生任何擱置的索引標籤，然後呼叫<xref:System.IO.TextWriter.Write%2A>基底方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-702">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-703">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.Write%2A>方法以呈現的格式化的字串，以及值<xref:System.Globalization.CultureInfo.CurrentCulture%2A>和<xref:System.DateTime.Today%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-703">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.DateTime.Today%2A> properties.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#6)]
 [!code-vb[MarkupTextWriter_Methods1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-704">將標記屬性和屬性值寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-704">Writes a markup attribute and its value to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string -&gt; unit&#xA;override this.WriteAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6942-705">要寫入輸出資料流中的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-705">The attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-706">指派給屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-706">The value assigned to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-707">將指定的標記屬性和值寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-707">Writes the specified markup attribute and value to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-708">使用<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>撰寫標記屬性和其值不含編碼的方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-708">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with no encoding.</span></span> <span data-ttu-id="c6942-709"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法會寫入屬性值括在雙引號 （"）。</span><span class="sxs-lookup"><span data-stu-id="c6942-709">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="c6942-710">如果`value`已`null`，則<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法將寫入的屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="c6942-710">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-711">下列程式碼範例示範如何轉譯`<img>`中的兩個多載的項目<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法時呼叫。</span><span class="sxs-lookup"><span data-stu-id="c6942-711">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="c6942-712">在程式碼範例會使用下列程序：</span><span class="sxs-lookup"><span data-stu-id="c6942-712">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="c6942-713">呼叫<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法，這個方法會呈現項目的開頭字元。</span><span class="sxs-lookup"><span data-stu-id="c6942-713">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="c6942-714">呼叫<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29>多載，哪一個寫入`alt`屬性和其值`<img>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-714">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="c6942-715">呼叫<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>多載來呈現自訂`myattribute`屬性，且值為`No "encoding" required`，然後將`fEncode`到`false`。</span><span class="sxs-lookup"><span data-stu-id="c6942-715">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="c6942-716">關閉項目的開頭標記，然後再撥打<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法以關閉`<img>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-716">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="c6942-717">此程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-717">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c6942-718">在衍生類別中，您可以覆寫<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />方法來定義自訂規則寫入的屬性和其值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-718">In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to define custom rules for writing attributes and their values.</span>
            </span>
            <span data-ttu-id="c6942-719">例如，您可以撰寫程式碼，允許<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />方法來寫入的屬性值是空的。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-719">For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to write an attribute with an empty value.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string * bool -&gt; unit&#xA;override this.WriteAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6942-720">寫入輸出資料流的標記屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-720">The markup attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-721">指派給屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-721">The value assigned to the attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="c6942-722">
            <see langword="true" /> 表示要編碼屬性及其指派的值；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-722">
              <see langword="true" /> to encode the attribute and its assigned value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-723">將指定的標記屬性和值寫入輸出資料流，並在指定時寫入編碼值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-723">Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-724">使用<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法來寫入標記屬性和其包含或不含編碼的值。</span><span class="sxs-lookup"><span data-stu-id="c6942-724">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with or without encoding.</span></span> <span data-ttu-id="c6942-725"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法會使用<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法來執行的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="c6942-725">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method uses the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method to do the encoding.</span></span>  
  
 <span data-ttu-id="c6942-726"><xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法會寫入屬性值括在雙引號 （"）。</span><span class="sxs-lookup"><span data-stu-id="c6942-726">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="c6942-727">如果`value`已`null`，則<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法將寫入的屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="c6942-727">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-728">下列程式碼範例示範如何轉譯`<img>`中的兩個多載的項目<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法時呼叫。</span><span class="sxs-lookup"><span data-stu-id="c6942-728">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="c6942-729">在程式碼範例會使用下列程序：</span><span class="sxs-lookup"><span data-stu-id="c6942-729">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="c6942-730">呼叫<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法，這個方法會呈現項目的開頭字元。</span><span class="sxs-lookup"><span data-stu-id="c6942-730">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="c6942-731">呼叫<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29>多載，哪一個寫入`alt`屬性和其值`<img>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-731">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="c6942-732">呼叫<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>多載來呈現自訂`myattribute`屬性，且值為`No "encoding" required`，然後將`fEncode`到`false`。</span><span class="sxs-lookup"><span data-stu-id="c6942-732">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="c6942-733">關閉項目的開頭標記，然後再撥打<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法以關閉`<img>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-733">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="c6942-734">此程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-734">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c6942-735">在衍生類別中，您可以覆寫<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />方法來定義自訂規則寫入的屬性和其值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-735">In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to define custom rules for writing attributes and their values.</span>
            </span>
            <span data-ttu-id="c6942-736">例如，您可以撰寫程式碼，允許<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />方法來寫入的屬性值是空的。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c6942-736">For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to write an attribute with an empty value.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteBeginTag : string -&gt; unit&#xA;override this.WriteBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="c6942-737">要寫入其開頭標記的標記項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-737">The markup element of which to write the opening tag.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-738">將指定標記項目的任何定位間距和開頭標記，寫入至輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-738">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-739"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法不會寫入標記項目的開頭標記的右角括弧 (>)。</span><span class="sxs-lookup"><span data-stu-id="c6942-739">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method does not write the closing angle bracket (>) of the markup element's opening tag.</span></span> <span data-ttu-id="c6942-740">這可讓撰寫項目的開頭標記的標記屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-740">This allows the writing of markup attributes to the opening tag of the element.</span></span> <span data-ttu-id="c6942-741">使用<xref:System.Web.UI.HtmlTextWriter.TagRightChar>呼叫時，關閉開頭標記中的常數<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-741">Use the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant to close the opening tag when calling the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method.</span></span> <span data-ttu-id="c6942-742">使用<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法使用<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd>常數，當您撰寫自我結尾的標記項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-742">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> constant when you write markup elements that are self-closing.</span></span>  
  
 <span data-ttu-id="c6942-743"><xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法由自訂伺服器控制項使用，不允許標記或屬性的對應並針對每個要求相同的方式呈現的標記項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-743">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-744">下列程式碼範例示範如何轉譯`<img>`中的兩個多載的項目<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法時呼叫。</span><span class="sxs-lookup"><span data-stu-id="c6942-744">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="c6942-745">在程式碼範例會使用下列程序：</span><span class="sxs-lookup"><span data-stu-id="c6942-745">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="c6942-746">呼叫<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法，這個方法會呈現項目的開頭字元。</span><span class="sxs-lookup"><span data-stu-id="c6942-746">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="c6942-747">呼叫<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29>多載，哪一個寫入`alt`屬性和其值`<img>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-747">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="c6942-748">呼叫<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29>多載來呈現自訂`myattribute`屬性，且值為`No "encoding" required`，然後將`fEncode`到`false`。</span><span class="sxs-lookup"><span data-stu-id="c6942-748">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="c6942-749">關閉項目的開頭標記，然後再撥打<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法以關閉`<img>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-749">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="c6942-750">此程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-750">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public virtual void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBreak();" />
      <MemberSignature Language="F#" Value="abstract member WriteBreak : unit -&gt; unit&#xA;override this.WriteBreak : unit -&gt; unit" Usage="htmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6942-751">將 <see langword="&lt;br /&gt;" /> 標記項目寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-751">Writes a <see langword="&lt;br /&gt;" /> markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-752">使用<xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>自訂控制項或配接器的標記中的方法來呈現行中斷。</span><span class="sxs-lookup"><span data-stu-id="c6942-752">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to render line breaks in custom control or adapter markup.</span></span> <span data-ttu-id="c6942-753"><xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>方法會寫入之間的空格`br`和`/`改良 HTML 相容性。</span><span class="sxs-lookup"><span data-stu-id="c6942-753">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes a space between the `br` and `/` for improved HTML compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-754">下列程式碼範例示範如何呼叫<xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>方法來寫入`<br />`項目之後要求的瀏覽器<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>方法會寫入編碼`&lt;custID&gt; &amp; &lt;invoice#&gt;`標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-754">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to write a `<br />` element to the requesting browser after the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method writes the encoded `&lt;custID&gt; &amp; &lt;invoice#&gt;` markup.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedText : string -&gt; unit&#xA;override this.WriteEncodedText : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="c6942-755">要編碼及寫入輸出資料流的文字字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-755">The text string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-756">為要求的裝置編碼指定的文字，然後將其寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-756">Encodes the specified text for the requesting device, and then writes it to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-757">使用<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>方法，當字串包含角括弧 (\<或 >) 或連字號 (&)。</span><span class="sxs-lookup"><span data-stu-id="c6942-757">Use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method when a string contains angle brackets (\< or >) or an ampersand (&).</span></span>  
  
 <span data-ttu-id="c6942-758"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>方法會使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法，以執行的編碼方式，並也將轉換的 Unicode 字元`00A0`至`&nbsp;`。</span><span class="sxs-lookup"><span data-stu-id="c6942-758">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to perform the encoding and also converts Unicode character `00A0` to `&nbsp;`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-759">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>方法來撰寫編碼的標記`&lt;custID&gt; &amp; &lt;invoice#&gt;`輸出資料流。</span><span class="sxs-lookup"><span data-stu-id="c6942-759">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method to write the encoded markup `&lt;custID&gt; &amp; &lt;invoice#&gt;` to the output stream.</span></span> <span data-ttu-id="c6942-760"><xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A>方法寫入`<br />`。</span><span class="sxs-lookup"><span data-stu-id="c6942-760">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes `<br />`.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c6942-761">
            <paramref name="text" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-761">
              <paramref name="text" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrl">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrl (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrl : string -&gt; unit&#xA;override this.WriteEncodedUrl : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="c6942-762">要進行編碼及寫入輸出資料流的 URL 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-762">The URL string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-763">為指定的 URL 編碼，然後將其寫入輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-763">Encodes the specified URL, and then writes it to the output stream.</span>
          </span>
          <span data-ttu-id="c6942-764">URL 可能包含參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-764">The URL might include parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-765"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>方法會將編碼的字串中`url`參數根據 URL 編碼的規格。</span><span class="sxs-lookup"><span data-stu-id="c6942-765">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method encodes the string in the `url` parameter in accordance with the specification for URL encoding.</span></span> <span data-ttu-id="c6942-766">不被編碼之後的問號 （？） 分隔的參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-766">The parameters that follow the question mark (?) delimiter are not encoded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-767">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>方法，以產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="c6942-767">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method, which generates the following output:</span></span>  
  
 `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#3)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrlParameter">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrlParameter (string urlText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrlParameter(string urlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrlParameter (urlText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrlParameter(System::String ^ urlText);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrlParameter : string -&gt; unit&#xA;override this.WriteEncodedUrlParameter : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrlParameter urlText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlText">
          <span data-ttu-id="c6942-768">要編碼及寫入輸出資料流中的 URL 參數字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-768">The URL parameter string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-769">針對要求裝置為指定的 URL 參數編碼，然後將此 URL 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-769">Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-770">URL 參數部分中的空格會被編碼為加號 （+）、 和等號 （=） 會編碼為`%3d`。</span><span class="sxs-lookup"><span data-stu-id="c6942-770">Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as `%3d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-771">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A>方法，以產生下列輸出：</span><span class="sxs-lookup"><span data-stu-id="c6942-771">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> method, which generates the following output:</span></span>  
  
 `ID%3dCity+State`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#4)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEndTag">
      <MemberSignature Language="C#" Value="public virtual void WriteEndTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEndTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEndTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteEndTag : string -&gt; unit&#xA;override this.WriteEndTag : string -&gt; unit" Usage="htmlTextWriter.WriteEndTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="c6942-772">寫入其結尾標記的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-772">The element to write the closing tag for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-773">寫入指定標記項目的任何定位空格和結尾標記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-773">Writes any tab spacing and the closing tag of the specified markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-774">不同於<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>方法，<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法有沒有邏輯可讓符合對應的開頭標記的項目結束標記。</span><span class="sxs-lookup"><span data-stu-id="c6942-774">Unlike the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method, the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method has no logic to make the element end tag match the corresponding opening tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-775">下列程式碼範例示範如何轉譯`<img>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-775">The following code example demonstrates rendering an `<img>` element.</span></span> <span data-ttu-id="c6942-776">在程式碼範例會使用下列程序：</span><span class="sxs-lookup"><span data-stu-id="c6942-776">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="c6942-777">呼叫<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法來呈現項目的開頭字元。</span><span class="sxs-lookup"><span data-stu-id="c6942-777">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method to render the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="c6942-778">呼叫兩個多載<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A>方法來寫入屬性`<img>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-778">Calls the two overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write attributes to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="c6942-779">呼叫<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A>方法以關閉`<img>`項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-779">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteFullBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteFullBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFullBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFullBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteFullBeginTag : string -&gt; unit&#xA;override this.WriteFullBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteFullBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="c6942-780">要寫入輸出資料流中的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-780">The element to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-781">將指定標記項目的任何定位間距和開頭標記，寫入至輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-781">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-782"><xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>方法會自動寫入結尾角括弧 (>) 的項目的開頭標記，不同於<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>方法，它不會寫入右角括號。</span><span class="sxs-lookup"><span data-stu-id="c6942-782">The <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> method automatically writes the closing angle bracket (>) of the opening tag of the element, unlike the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which does not write the closing angle bracket.</span></span> <span data-ttu-id="c6942-783">使用<xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>沒有屬性的標記項目。</span><span class="sxs-lookup"><span data-stu-id="c6942-783">Use <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> for markup elements that have no attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-784">將資料寫入 <see cref="T:System.Web.UI.HtmlTextWriter" /> 輸出資料流 (如多載參數所指定)，後面接著行結束字元字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-784">Writes data to an <see cref="T:System.Web.UI.HtmlTextWriter" /> output stream, as specified by the overloaded parameters, followed by a line terminator string.</span>
          </span>
          <span data-ttu-id="c6942-785">此方法的所有版本會將任何暫止定位空格寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-785">All versions of this method write any pending tab spacing to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-786">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-786">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-787"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-787">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine();" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : unit -&gt; unit&#xA;override this.WriteLine : unit -&gt; unit" Usage="htmlTextWriter.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c6942-788">將行結束字元字串寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-788">Writes a line terminator string to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-789">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-789">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-790">如需詳細資訊，請參閱<xref:System.IO.TextWriter.WriteLine%2A>。</span><span class="sxs-lookup"><span data-stu-id="c6942-790">For more information, see <xref:System.IO.TextWriter.WriteLine%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-791">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法來插入之後的行`<img>`項目會呈現。</span><span class="sxs-lookup"><span data-stu-id="c6942-791">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to insert a line after an `<img>` element is rendered.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : bool -&gt; unit&#xA;override this.WriteLine : bool -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-792">要寫入輸出資料流中的布林。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-792">The Boolean to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-793">將任何暫止定位空格及布林值的文字表示 (後面接著行結束字元字串) 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-793">Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-794">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-794">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-795"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-795">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char -&gt; unit&#xA;override this.WriteLine : char -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-796">要寫入輸出資料流中的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-796">The character to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-797">將任何暫止定位空格及 Unicode 字元 (後面接著行結束字元字串) 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-797">Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-798">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-798">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-799"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-799">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] -&gt; unit&#xA;override this.WriteLine : char[] -&gt; unit" Usage="htmlTextWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c6942-800">要寫入輸出資料流中的字元陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-800">The character array to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-801">將任何暫止定位空格及 Unicode 字元的陣列 (後面接著行結束字元字串) 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-801">Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-802">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-802">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-803"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-803">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-804">本節提供兩個程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="c6942-804">This section provides two code examples.</span></span> <span data-ttu-id="c6942-805">第一個示範如何建立陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-805">The first one demonstrates how to create an array.</span></span> <span data-ttu-id="c6942-806">第二個示範如何使用該陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-806">The second one demonstrates how to use that array.</span></span>  
  
 <span data-ttu-id="c6942-807">這些程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-807">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="c6942-808">下列程式碼範例示範如何建立拼出的字元陣列`hello world`。</span><span class="sxs-lookup"><span data-stu-id="c6942-808">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="c6942-809">在陣列中包含是<xref:System.Web.UI.HtmlTextWriter.SpaceChar> 欄位中，這會建立兩個字之間的空格。</span><span class="sxs-lookup"><span data-stu-id="c6942-809">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="c6942-810">下列程式碼範例呈現`hello world`建立在上述範例中使用的字元陣列<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-810">The following code example renders the `hello world` character array that was created in the preceding example by using the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#5)]
 [!code-vb[MarkupTextWriter_Methods2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : double -&gt; unit&#xA;override this.WriteLine : double -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-811">要寫入輸出資料流中的雙精度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-811">The double-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-812">將任何暫止定位空格及雙精度浮點數的文字表示 (後面接著行結束字元字串) 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-812">Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-813">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-813">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-814"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-814">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-815">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法以呈現的值<xref:System.Double.MaxValue?displayProperty=nameWithType>欄位。</span><span class="sxs-lookup"><span data-stu-id="c6942-815">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="c6942-816">此程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-816">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#3)]
 [!code-vb[MarkupTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int -&gt; unit&#xA;override this.WriteLine : int -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-817">要寫入至輸出資料流的 32 位元組帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-817">The 32-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-818">將任何暫止定位空格及 32 位元組帶正負號整數的文字表示 (後面接著行結束字元字串) 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-818">Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-819">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-819">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-820"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-820">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int64 -&gt; unit&#xA;override this.WriteLine : int64 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-821">要寫入至輸出資料流的 64 位元組帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-821">The 64-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-822">將任何暫止定位空格及 64 位元組帶正負號整數的文字表示 (後面接著行結束字元字串) 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-822">Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-823">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-823">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-824"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-824">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj -&gt; unit&#xA;override this.WriteLine : obj -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-825">要寫入輸出資料流中的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-825">The object to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-826">將任何暫止定位空格及物件的文字表示 (後面接著行結束字元字串) 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-826">Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-827">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-827">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-828"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-828">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-829">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法以呈現的值<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>至控制項的屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-829">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property to a control.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#4)]
 [!code-vb[MarkupTextWriter_Methods1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : single -&gt; unit&#xA;override this.WriteLine : single -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-830">要寫入輸出資料流中的單精確度浮點數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-830">The single-precision floating point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-831">將任何暫止定位空格及單精確度浮點數的文字表示 (後面接著行結束字元字串) 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-831">Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-832">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-832">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-833"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-833">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-834">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法以呈現的值<xref:System.Single.Epsilon?displayProperty=nameWithType>欄位中，這是最小的可能值的<xref:System.Single>結構。</span><span class="sxs-lookup"><span data-stu-id="c6942-834">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="c6942-835">此程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-835">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#9)]
 [!code-vb[MarkupTextWriter_Methods1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit&#xA;override this.WriteLine : string -&gt; unit" Usage="htmlTextWriter.WriteLine s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="c6942-836">要寫入輸出資料流的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-836">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-837">將任何暫止定位空格及文字字串 (後面接著行結束字元字串) 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-837">Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-838">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-838">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-839"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-839">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : uint32 -&gt; unit&#xA;override this.WriteLine : uint32 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c6942-840">要寫入輸出資料流中的 4 位元組、不帶正負號的整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-840">The 4-byte unsigned integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-841">將任何暫止定位空格及 4 位元組、不帶正負號整數的文字表示 (後面接著行結束字元字串) 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-841">Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-842">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-842">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-843"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-843">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj -&gt; unit&#xA;override this.WriteLine : string * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="c6942-844">包含零或多個格式項目的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-844">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="c6942-845">要格式化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-845">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-846">將任何暫止定位空格及包含物件之文字表示的格式化字串 (後面接著行結束字元字串) 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-846">Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-847">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-847">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-848"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法會使用相同的語意<xref:System.String.Format%28System.String%2CSystem.Object%29>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-848">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="c6942-849"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-849">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-850">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法以呈現的值的格式化的字串<xref:System.Globalization.CultureInfo.CurrentCulture%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-850">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#1)]
 [!code-vb[MarkupTextWriter_Methods1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj[] -&gt; unit&#xA;override this.WriteLine : string * obj[] -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="c6942-851">包含零或多個格式項目的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-851">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="c6942-852">要格式化的物件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-852">An object array to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-853">將任何暫止定位空格及包含物件陣列的文字表示之格式化字串  (後面接著行結束字元字串) 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-853">Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-854">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-854">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-855"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法會使用相同的語意<xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-855">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> method.</span></span> <span data-ttu-id="c6942-856"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-856">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-857">本節包含兩個程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="c6942-857">This section contains two code examples.</span></span> <span data-ttu-id="c6942-858">第一個示範如何轉譯的字串，並輸出資料流的陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-858">The first one demonstrates how to render a string and an array to the output stream.</span></span> <span data-ttu-id="c6942-859">第二個示範如何宣告陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-859">The second one shows how to declare the array.</span></span>  
  
 <span data-ttu-id="c6942-860">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法以呈現格式化的字串和輸出資料流物件陣列的內容。</span><span class="sxs-lookup"><span data-stu-id="c6942-860">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the contents of an object array to the output stream.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#2)]
 [!code-vb[MarkupTextWriter_Methods2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#2)]  
  
 <span data-ttu-id="c6942-861">下列程式碼範例示範如何宣告中先前的程式碼範例所呈現的物件陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-861">The following code example shows how to declare the object array that was rendered in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#7)]
 [!code-vb[MarkupTextWriter_Methods2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] * int * int -&gt; unit&#xA;override this.WriteLine : char[] * int * int -&gt; unit" Usage="htmlTextWriter.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c6942-862">字元陣列，可從中將文字寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-862">The character array from which to write text to the output stream.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c6942-863">字元陣列中開始寫入的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-863">The location in the character array where writing begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c6942-864">陣列中要寫入輸出資料流的字元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-864">The number of characters in the array to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-865">將任何暫止定位空格及 Unicode 字元的子陣列 (後面接著行結束字元字串) 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-865">Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-866">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-866">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-867"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-867">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-868">本節包含兩個程式碼範例。</span><span class="sxs-lookup"><span data-stu-id="c6942-868">This section contains two code examples.</span></span> <span data-ttu-id="c6942-869">第一個示範如何建立字元陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-869">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="c6942-870">第二個示範如何使用陣列。</span><span class="sxs-lookup"><span data-stu-id="c6942-870">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="c6942-871">這些程式碼範例會產生下列標記：</span><span class="sxs-lookup"><span data-stu-id="c6942-871">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="c6942-872">下列程式碼範例示範如何建立拼出的字元陣列`hello world`。</span><span class="sxs-lookup"><span data-stu-id="c6942-872">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="c6942-873">在陣列中包含是<xref:System.Web.UI.HtmlTextWriter.SpaceChar> 欄位中，這會建立兩個字之間的空格。</span><span class="sxs-lookup"><span data-stu-id="c6942-873">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="c6942-874">下列程式碼範例會使用`index`並`count`參數<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法以呈現在上述程式碼範例中所建立的陣列的前五個字元。</span><span class="sxs-lookup"><span data-stu-id="c6942-874">The following code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the first five characters of the array created in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#4)]
 [!code-vb[MarkupTextWriter_Methods2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj * obj -&gt; unit&#xA;override this.WriteLine : string * obj * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="c6942-875">包含零或多個格式項目的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-875">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="c6942-876">要格式化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-876">An object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="c6942-877">要格式化的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-877">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-878">將任何暫止定位空格及包含兩個物件的文字表示之格式化字串  (後面接著行結束字元字串) 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-878">Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-879">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-879">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-880"><xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法會使用相同的語意<xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29>方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-880">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="c6942-881"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-881">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c6942-882">下列程式碼範例示範如何使用<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法以呈現的格式化的字串，以及值<xref:System.Globalization.CultureInfo.CurrentCulture%2A>屬性和<xref:System.DateTime.Today%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c6942-882">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property and the <xref:System.DateTime.Today%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#2)]
 [!code-vb[MarkupTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineNoTabs">
      <MemberSignature Language="C#" Value="public void WriteLineNoTabs (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLineNoTabs(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLineNoTabs (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLineNoTabs(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.WriteLineNoTabs : string -&gt; unit" Usage="htmlTextWriter.WriteLineNoTabs s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="c6942-883">要寫入輸出資料流的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-883">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-884">將字串 (後面接著行結束字元字串) 寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-884">Writes a string, followed by a line terminator string, to the output stream.</span>
          </span>
          <span data-ttu-id="c6942-885">這個方法忽略任何指定的定位空格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-885">This method ignores any specified tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-886">使用<xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A>方法而非<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A>方法，當您不想要呈現的轉譯字串前面任何定位間距`s`。</span><span class="sxs-lookup"><span data-stu-id="c6942-886">Use the <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> method rather than the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method when you do not want to render any tab spacing ahead of the rendered string `s`.</span></span>  
  
 <span data-ttu-id="c6942-887">預設行結束字元字串是歸位字元後面接著換行字元 ("\r\n")。</span><span class="sxs-lookup"><span data-stu-id="c6942-887">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c6942-888"><xref:System.IO.TextWriter.WriteLine%2A>基底方法，用來寫入`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-888">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c6942-889">將樣式屬性和屬性值寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-889">Writes a style attribute and its value to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string -&gt; unit&#xA;override this.WriteStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6942-890">要寫入輸出資料流中的樣式屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-890">The style attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-891">指派給樣式屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-891">The value assigned to the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-892">將指定的樣式屬性寫入輸出資料流中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-892">Writes the specified style attribute to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-893"><xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>方法會將之樣式屬性寫入下列形式：</span><span class="sxs-lookup"><span data-stu-id="c6942-893">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="c6942-894">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="c6942-894">`name` `=` `value` `;`</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string * bool -&gt; unit&#xA;override this.WriteStyleAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c6942-895">要寫入輸出資料流中的樣式屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-895">The style attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c6942-896">指派給樣式屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-896">The value assigned to the style attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="c6942-897">如果要為樣式屬性及指派的屬性值編碼則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-897">
              <see langword="true" /> to encode the style attribute and its assigned value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-898">將指定的樣式屬性和屬性值寫入輸出資料流中，並在指定時為該值編碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-898">Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-899"><xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A>方法會將之樣式屬性寫入下列形式：</span><span class="sxs-lookup"><span data-stu-id="c6942-899">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="c6942-900">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="c6942-900">`name` `=` `value` `;`</span></span>  
  
 <span data-ttu-id="c6942-901"><xref:System.Web.HttpUtility.HtmlAttributeEncode%2A>方法用來編碼`value`參數。</span><span class="sxs-lookup"><span data-stu-id="c6942-901">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method is used to encode the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteUrlEncodedString">
      <MemberSignature Language="C#" Value="protected void WriteUrlEncodedString (string text, bool argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteUrlEncodedString(string text, bool argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteUrlEncodedString (text As String, argument As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteUrlEncodedString(System::String ^ text, bool argument);" />
      <MemberSignature Language="F#" Value="member this.WriteUrlEncodedString : string * bool -&gt; unit" Usage="htmlTextWriter.WriteUrlEncodedString (text, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="argument" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="c6942-902">要編碼及寫入輸出資料流中的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-902">The string to encode and write to the output stream.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="c6942-903">如要將此字串編碼為 URL 的一部分參數區段時為 <see langword="true" />，將此字串編碼為 URL 的一部分路徑區段時則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-903">
              <see langword="true" /> to encode the string as a part of the parameter section of the URL; <see langword="false" /> to encode the string as part of the path section of the URL.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c6942-904">寫入指定的字串，並根據 URL 需求來為此字串編碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c6942-904">Writes the specified string, encoding it according to URL requirements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c6942-905"><xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A>方法可能會被視為 URL 分隔符號的字元編碼 (的設定而定`argument`) 成字串格式的`%xx`，如果 ASCII 碼是小於 128，否則`%uxxxx`，其中`x`是十六進位數字。</span><span class="sxs-lookup"><span data-stu-id="c6942-905">The <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method encodes characters that could be considered URL delimiters (dependent on the setting of `argument`) into strings of the form `%xx`, if the ASCII code is less than 128; otherwise, `%uxxxx`, where `x` is a hexadecimal digit.</span></span>  
  
 <span data-ttu-id="c6942-906"><xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A>並<xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A>方法會使用<xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A>方法作為公用程式方法。</span><span class="sxs-lookup"><span data-stu-id="c6942-906">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> methods use the <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method as a utility method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>