<Type Name="ControlValuePropertyAttribute" FullName="System.Web.UI.ControlValuePropertyAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3dced842b31f1f8a562034e49ef91fd5cc4874d0" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37531593" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ControlValuePropertyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ControlValuePropertyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlValuePropertyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ControlValuePropertyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlValuePropertyAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ControlValuePropertyAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定 <see cref="T:System.Web.UI.WebControls.ControlParameter" /> 物件於執行階段所繫結的控制項預設屬性。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 定義時<xref:System.Web.UI.WebControls.ControlParameter>物件，您通常繫結控制項的屬性至參數設定兩者<xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>和<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>屬性。 如果<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>屬性未設定，使用預設屬性。 <xref:System.Web.UI.ControlValuePropertyAttribute>屬性會套用至控制項，以指定其預設屬性，<xref:System.Web.UI.WebControls.ControlParameter>物件繫結至在執行階段。  
  
 如需使用屬性的詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。  
  
 如需 <xref:System.Web.UI.ControlValuePropertyAttribute> 類別之執行個體的初始屬性值清單，請參閱 <xref:System.Web.UI.ControlValuePropertyAttribute.%23ctor%2A> 建構函式。  
  
   
  
## Examples  
 下列程式碼範例示範如何套用<xref:System.Web.UI.ControlValuePropertyAttribute>指定預設屬性和值，以自訂控制項的屬性。  
  
 [!code-csharp[ControlValuePropertyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlValuePropertyAttribute/CS/simplecustomcontrol.cs#1)]
 [!code-vb[ControlValuePropertyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlValuePropertyAttribute/VB/simplecustomcontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="P:System.Web.UI.WebControls.ControlParameter.ControlID" />
    <altmember cref="P:System.Web.UI.WebControls.ControlParameter.PropertyName" />
    <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.Name" />
    <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.DefaultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlValuePropertyAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlValuePropertyAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ControlValuePropertyAttribute : string -&gt; System.Web.UI.ControlValuePropertyAttribute" Usage="new System.Web.UI.ControlValuePropertyAttribute name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">控制項的預設屬性。</param>
        <summary>使用指定的屬性名稱，初始化 <see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式建立的新執行個體<xref:System.Web.UI.ControlValuePropertyAttribute>類別使用指定的屬性名稱。 下表顯示的執行個體的初始屬性值<xref:System.Web.UI.ControlValuePropertyAttribute>類別。  
  
|屬性|Initial value|  
|--------------|-------------------|  
|<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>|`name` 參數的值。|  
  
   
  
## Examples  
 下列程式碼範例示範如何套用<xref:System.Web.UI.ControlValuePropertyAttribute>屬性來指定自訂控制項的預設屬性。 若要建立的 ASP.NET 會由內部呼叫這個建構函式<xref:System.Web.UI.ControlValuePropertyAttribute>表示之屬性的物件。  
  
 [!code-csharp[ControlValuePropertyAttributeCtor1Param#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlValuePropertyAttributeCtor1Param/CS/simplecustomcontrol.cs#1)]
 [!code-vb[ControlValuePropertyAttributeCtor1Param#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlValuePropertyAttributeCtor1Param/VB/simplecustomcontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.Name" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlValuePropertyAttribute (string name, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, defaultValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlValuePropertyAttribute(System::String ^ name, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ControlValuePropertyAttribute : string * obj -&gt; System.Web.UI.ControlValuePropertyAttribute" Usage="new System.Web.UI.ControlValuePropertyAttribute (name, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">控制項的預設屬性。</param>
        <param name="defaultValue">預設屬性的預設值。</param>
        <summary>使用指定的屬性名稱和預設值，初始化 <see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式建立的新執行個體<xref:System.Web.UI.ControlValuePropertyAttribute>類別使用指定的屬性名稱和預設值。 下表所顯示的是 <xref:System.Web.UI.ControlValuePropertyAttribute> 類別之執行個體的初始屬性值。  
  
|屬性|Initial value|  
|--------------|-------------------|  
|<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>|`name` 參數的值。|  
|<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>|`defaultValue` 參數的值。|  
  
   
  
## Examples  
 下列程式碼範例示範如何套用<xref:System.Web.UI.ControlValuePropertyAttribute>指定預設屬性和值，以自訂控制項的屬性。 若要建立的 ASP.NET 會由內部呼叫這個建構函式<xref:System.Web.UI.ControlValuePropertyAttribute>表示之屬性的物件。  
  
 [!code-csharp[ControlValuePropertyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlValuePropertyAttribute/CS/simplecustomcontrol.cs#1)]
 [!code-vb[ControlValuePropertyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlValuePropertyAttribute/VB/simplecustomcontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.Name" />
        <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.DefaultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlValuePropertyAttribute (string name, Type type, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Type type, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlValuePropertyAttribute.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlValuePropertyAttribute(System::String ^ name, Type ^ type, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ControlValuePropertyAttribute : string * Type * string -&gt; System.Web.UI.ControlValuePropertyAttribute" Usage="new System.Web.UI.ControlValuePropertyAttribute (name, type, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">控制項的預設屬性。</param>
        <param name="type">預設值所轉換的目標 <see cref="T:System.Type" />。</param>
        <param name="defaultValue">預設屬性的預設值。</param>
        <summary>使用指定的屬性名稱和預設值，初始化 <see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> 類別的新執行個體。 預設值也會轉換成指定的資料型別。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式建立的新執行個體<xref:System.Web.UI.ControlValuePropertyAttribute>類別使用指定的屬性名稱和預設值。 這個版本的建構函式也會嘗試將預設值轉換成所指定的資料型別`type`參數。 如果無法轉換的預設值，<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>屬性未設定。 下表所顯示的是 <xref:System.Web.UI.ControlValuePropertyAttribute> 類別之執行個體的初始屬性值。  
  
|屬性|Initial value|  
|--------------|-------------------|  
|<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>|`name` 參數的值。|  
|<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>|值`defaultValue`參數，如果值可轉換為所指定的資料型別`type`參數。|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.Name" />
        <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.DefaultValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlValuePropertyAttribute.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : obj" Usage="System.Web.UI.ControlValuePropertyAttribute.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得控制項預設屬性的預設值。</summary>
        <value>控制項預設屬性的預設值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當指定的屬性<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>屬性未設定，請使用<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>屬性來判斷屬性的預設值。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>屬性，藉由套用<xref:System.Web.UI.ControlValuePropertyAttribute>屬性加入自訂控制項。  
  
 [!code-csharp[ControlValuePropertyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlValuePropertyAttribute/CS/simplecustomcontrol.cs#1)]
 [!code-vb[ControlValuePropertyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlValuePropertyAttribute/VB/simplecustomcontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
        <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.Name" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlValuePropertyAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="controlValuePropertyAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要與此執行個體相比較的 <see cref="T:System.Object" />。</param>
        <summary>判斷 <see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> 物件目前的執行個體是否等於指定的物件。</summary>
        <returns>如果 <paramref name="obj" /> 參數中包含的物件等於 <see cref="T:System.Web.UI.ControlValuePropertyAttribute" /> 目前的執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.ControlValuePropertyAttribute.Equals%2A>方法，以判斷是否目前的執行個體<xref:System.Web.UI.ControlValuePropertyAttribute>物件是否等於指定的物件。 相等的物件，它們必須符合下列準則：  
  
1.  中包含的物件`obj`參數必須是<xref:System.Web.UI.ControlValuePropertyAttribute>物件。  
  
2.  <xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>和<xref:System.Web.UI.ControlValuePropertyAttribute.DefaultValue%2A>這兩個物件的屬性必須相等。  
  
> [!NOTE]
>  這個方法主要由控制項開發人員使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Attribute.Equals(System.Object)" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlValuePropertyAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="controlValuePropertyAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回這個執行個體的雜湊碼。</summary>
        <returns>32 位元帶正負號的整數雜湊碼。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Attribute.GetHashCode" />
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlValuePropertyAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.ControlValuePropertyAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得控制項的預設屬性。</summary>
        <value>控制項的預設屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.WebControls.ControlParameter>物件定義而不需要其<xref:System.Web.UI.WebControls.ControlParameter.PropertyName%2A>屬性集，請使用<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>屬性，以判斷預設屬性繫結至<xref:System.Web.UI.WebControls.ControlParameter>在執行階段的物件。  
  
   
  
## Examples  
 下列程式碼範例示範如何設定<xref:System.Web.UI.ControlValuePropertyAttribute.Name%2A>屬性，藉由套用<xref:System.Web.UI.ControlValuePropertyAttribute>屬性加入自訂控制項。  
  
 [!code-csharp[ControlValuePropertyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlValuePropertyAttribute/CS/simplecustomcontrol.cs#1)]
 [!code-vb[ControlValuePropertyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlValuePropertyAttribute/VB/simplecustomcontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
        <altmember cref="P:System.Web.UI.ControlValuePropertyAttribute.DefaultValue" />
      </Docs>
    </Member>
  </Members>
</Type>