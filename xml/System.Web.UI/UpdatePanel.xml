<Type Name="UpdatePanel" FullName="System.Web.UI.UpdatePanel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="408ee6868cabe5710de38771644ba2d12c62470d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30610812" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UpdatePanel : System.Web.UI.Control, System.Web.UI.IAttributeAccessor, System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdatePanel extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor, class System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdatePanel" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdatePanel&#xA;Inherits Control&#xA;Implements IAttributeAccessor, IUpdatePanel" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdatePanel : System::Web::UI::Control, System::Web::UI::IAttributeAccessor, System::Web::UI::IUpdatePanel" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IUpdatePanel</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Triggers")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.UpdatePanel.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>讓頁面區段部分呈現且不需回傳。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 本主題內容：  
  
-   [簡介](#introduction)  
  
-   [正在重新整理 UpdatePanel 的內容](#refreshing_updatepanel_content)  
  
-   [UpdatePanel Usage](#updatepanel_usage)  
  
-   [套用樣式](#applying_styles)  
  
-   [宣告式語法](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>簡介  
 <xref:System.Web.UI.UpdatePanel> 控制項是中央在 ASP.NET AJAX 功能的一部分。 這些認證用於<xref:System.Web.UI.ScriptManager>啟用局部網頁呈現的控制項。 局部網頁呈現可在該頁面只有一部分更新時，減少需要同步回傳和完整網頁更新。 在局部網頁呈現可改善使用者經驗，因為它可以減少螢幕閃爍整頁回傳期間發生，加強網頁互動。  
  
<a name="refreshing_updatepanel_content"></a>   
## <a name="refreshing-updatepanel-content"></a>正在重新整理 UpdatePanel 的內容  
 啟用局部網頁呈現時，控制可以執行更新整個頁面的回傳或更新的一個或多個內容在非同步回傳<xref:System.Web.UI.UpdatePanel>控制項。 控制項是否會導致在非同步回傳和更新<xref:System.Web.UI.UpdatePanel>控制項取決於下列：  
  
-   如果<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>屬性<xref:System.Web.UI.UpdatePanel>控制設為  <xref:System.Web.UI.UpdatePanelUpdateMode.Always>、<xref:System.Web.UI.UpdatePanel>控制項的內容會在每次回傳來自網頁的更新。 這包括從控制項內其他的非同步回傳<xref:System.Web.UI.UpdatePanel>控制項並不是內部的控制項的回傳<xref:System.Web.UI.UpdatePanel>控制項。  
  
-   如果<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>屬性設定為<xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>、<xref:System.Web.UI.UpdatePanel>控制項的內容會在下列情況下更新：  
  
    -   當您呼叫<xref:System.Web.UI.UpdatePanel.Update%2A>方法<xref:System.Web.UI.UpdatePanel>明確控制。  
  
    -   當<xref:System.Web.UI.UpdatePanel>控制項內的另一個巢狀<xref:System.Web.UI.UpdatePanel>控制項，而且父面板會更新。  
  
    -   當回傳的起因是使用定義的觸發程序的控制項`Triggers`屬性<xref:System.Web.UI.UpdatePanel>控制項。 在此案例中，控制項明確觸發面板內容的更新。 控制項可以是內部或外部<xref:System.Web.UI.UpdatePanel>觸發程序相關聯的控制項。  
  
    -   當<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>屬性設定為`true`和子控制項的<xref:System.Web.UI.UpdatePanel>控制項造成回傳。 子控制項的巢狀<xref:System.Web.UI.UpdatePanel>控制項不會使外部更新<xref:System.Web.UI.UpdatePanel>控制除非明確定義為觸發程序。  
  
 設定的組合<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>屬性`false`和<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>屬性<xref:System.Web.UI.UpdatePanelUpdateMode.Always>不允許，且將會擲回例外狀況。  
  
 當<xref:System.Web.UI.UpdatePanel>控制項執行的非同步 post 時，它會新增自訂 HTTP 標頭。 某些 proxy 移除此自訂 HTTP 標頭。 如果發生這種情況，伺服器會當做一般的回傳，導致用戶端錯誤處理的要求。 若要解決此問題，當您執行非同步的文章來插入自訂表單欄位。 請檢查標頭或伺服器程式碼中的自訂欄位。  
  
<a name="updatepanel_usage"></a>   
## <a name="updatepanel-usage"></a>UpdatePanel 使用量  
 您可以使用多個<xref:System.Web.UI.UpdatePanel>更新不同的控制項獨立頁面區域。 當包含一或多個的頁面<xref:System.Web.UI.UpdatePanel>控制項先轉譯時，所有的所有內容<xref:System.Web.UI.UpdatePanel>都呈現與傳送到瀏覽器控制項。 在後續非同步回傳時，每個內容<xref:System.Web.UI.UpdatePanel>控制項可能不會更新，根據控制台設定值，並在用戶端或伺服器的邏輯，個別的面板。  
  
 您也可以使用<xref:System.Web.UI.UpdatePanel>控制項在下列案例：  
  
-   在使用者控制項。  
  
-   在主版頁面和內容頁面。  
  
-   巢狀方式置於其他<xref:System.Web.UI.UpdatePanel>控制項。  
  
-   內部樣板化控制項，例如<xref:System.Web.UI.WebControls.GridView>或<xref:System.Web.UI.WebControls.Repeater>控制項。  
  
 <xref:System.Web.UI.UpdatePanel> 以宣告方式或以程式設計方式，可以加入控制項。  
  
 您可以加入<xref:System.Web.UI.UpdatePanel>控制項以程式設計的方式，但是您無法以程式設計方式加入觸發程序。 若要建立觸發程序類似的行為，您可以註冊為非同步回傳控制項的頁面上的控制項。 您可以呼叫<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>方法<xref:System.Web.UI.ScriptManager>控制項。 然後，您可以建立事件處理常式，以回應非同步回傳時，可以和中執行的處理常式，呼叫<xref:System.Web.UI.UpdatePanel.Update%2A>方法<xref:System.Web.UI.UpdatePanel>控制項。  
  
<a name="applying_styles"></a>   
## <a name="applying-styles"></a>套用樣式  
 <xref:System.Web.UI.UpdatePanel>控制項接受 expando 屬性。 這可讓您設定控制項的呈現 HTMLelements CSS 類別。 例如，您可能會建立下列範例所示的標記：  
  
```  
<asp:UpdatePanel runat="server" class="myStyle">  
</asp:UpdatePanel>   
```  
  
 在上述範例中的標記會轉譯 HTML 類似下面的網頁執行時：  
  
```  
<div id="ctl00_MainContent_UpdatePanel1" class="MyStyle">  
</div>  
```  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣告式語法  
  
```  
<asp:UpdatePanel  
    ChildrenAsTriggers="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    RenderMode="Block|Inline"  
    runat="server"  
    SkinID="string"  
    UpdateMode="Always|Conditional"  
    Visible="True|False"  
>  
    <ContentTemplate>  
        <!-- child controls -->  
    </ContentTemplate>  
    <Triggers>  
        <asp:AsyncPostBackTrigger   
            ControlID="string"  
            EventName="string"  
        />  
        <asp:PostBackTrigger   
            ControlID="string"  
        />  
    </Triggers>  
</asp:UpdatePanel>  
```  
  
   
  
## Examples  
 下列範例會顯示不同用法<xref:System.Web.UI.UpdatePanel>控制項。  
  
 **UpdatePanel 控制項內部的控制項**  
  
 下列範例示範如何將內部的控制項放<xref:System.Web.UI.UpdatePanel>控制項，以減少螢幕閃爍，當您張貼至伺服器。 在此範例中，<xref:System.Web.UI.WebControls.Calendar>和<xref:System.Web.UI.WebControls.DropDownList>控制項位於<xref:System.Web.UI.UpdatePanel>控制項。 根據預設，<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>屬性是<xref:System.Web.UI.UpdatePanelUpdateMode.Always>和<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>屬性是`true`。 因此，子控制項的面板會導致在非同步回傳。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  
  
 **UpdatePanel 控制項的主要/詳細資料案例**  
  
 在下列範例中，<xref:System.Web.UI.UpdatePanel>控制項用在顯示訂單及訂單詳細資料，從 Northwind 資料庫的主要/詳細資料案例。 一個<xref:System.Web.UI.UpdatePanel>控制項包含<xref:System.Web.UI.WebControls.GridView>顯示訂單清單的控制項。 第二個<xref:System.Web.UI.UpdatePanel>控制項包含<xref:System.Web.UI.WebControls.DetailsView>顯示一個訂單的詳細資料的控制項。 當您選取訂單的第一個表格時，第二個資料表會顯示該訂單詳細資料。 第二個資料表會更新以非同步方式依據第一個資料表中的選取範圍。 訂單摘要資料表中的排序和分頁作業也會導致部分更新。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample2CS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample2VB.aspx#2)]  
  
 如果您將<xref:System.Web.UI.WebControls.GridView>內控制<xref:System.Web.UI.UpdatePanel>控制，設定<xref:System.Web.UI.WebControls.GridView>控制項的<xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A>屬性`true`不支援。 不過，因為<xref:System.Web.UI.UpdatePanel>控制項支援非同步回傳，變更任何回傳<xref:System.Web.UI.WebControls.GridView>內控制<xref:System.Web.UI.UpdatePanel>控制會造成相同的排序和分頁回呼行為。  
  
 **在範本中使用 UpdatePanel 控制項**  
  
 在下列範例中，<xref:System.Web.UI.UpdatePanel>控制使用的項目範本的<xref:System.Web.UI.WebControls.GridView>控制項。 <xref:System.Web.UI.UpdatePanel> 每個資料列中的控制項時自動產生。 每個資料列<xref:System.Web.UI.UpdatePanel>控制項包含<xref:System.Web.UI.WebControls.Label>控制項來顯示該資料列中的項目的數量和<xref:System.Web.UI.WebControls.Button>控制項來降低，並增加的數量。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample3CS.aspx#3)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample3VB.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdatePanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UpdatePanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.UpdatePanel" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個建構函式初始化的新執行個體<xref:System.Web.UI.UpdatePanel>類別。 若要以動態方式加入<xref:System.Web.UI.UpdatePanel>控制項的頁面，建立新<xref:System.Web.UI.UpdatePanel>執行個體，並將子控制項新增到的執行個體由控制項物件<xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>屬性。  
  
   
  
## Examples  
 下列範例示範如何動態建立<xref:System.Web.UI.UpdatePanel>控制，並將它加入至頁面。 當您按一下按鈕在內<xref:System.Web.UI.UpdatePanel>控制項，訊息會重新整理的日期和時間。 使用新增的子控制項<xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>屬性。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("WebControl_Attributes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項的階層式樣式表 (CSS) 屬性集合。</summary>
        <value>屬性集合中之 CSS 樣式規則的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Attributes%2A>屬性包含可以用於封入的 CSS 樣式屬性的集合`div`元素<xref:System.Web.UI.UpdatePanel>控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsTriggers">
      <MemberSignature Language="C#" Value="public bool ChildrenAsTriggers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsTriggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildrenAsTriggers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChildrenAsTriggers { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示來自 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項之下層子控制項的回傳是否會更新面板內容。</summary>
        <value>
          如果來自 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項之下層子控制項的回傳會更新面板內容，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>屬性`true`如果您想從直屬子控制項的回傳<xref:System.Web.UI.UpdatePanel>控制項，讓更新的面板的內容。 子控制項的巢狀<xref:System.Web.UI.UpdatePanel>控制項不會造成的父代更新<xref:System.Web.UI.UpdatePanel>控制項的內容，除非您呼叫<xref:System.Web.UI.UpdatePanel.Update%2A>方法明確定義成觸發程序在子控制項。  
  
> [!NOTE]
>  當<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>屬性設定為<xref:System.Web.UI.UpdatePanelUpdateMode.Always>和<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>屬性設定為`false`、<xref:System.InvalidOperationException>期間擲回例外狀況<xref:System.Web.UI.UpdatePanel.OnPreRender%2A>方法。 此屬性的組合不允許<xref:System.Web.UI.UpdatePanel>控制項。  
  
 案例中，您可能會在其中設定<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>至`false`時，您有兩個<xref:System.Web.UI.UpdatePanel>控制項，而且您想從第一個更新第二個面板的內容，但不更新本身的內容面板回傳。 例如，第一個面板可能購買的產品清單，而且第二個面板可能購物車。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ ContentTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用於定義 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項內容的範本。</summary>
        <value>定義 <see cref="T:System.Web.UI.ITemplate" /> 控制項之內容的 <see cref="T:System.Web.UI.UpdatePanel" /> 執行個體。 預設值為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>屬性包含的內容，會出現在<xref:System.Web.UI.UpdatePanel>控制呈現時。 以宣告方式或以程式設計方式，您可以建立範本的內容。 內容範本<xref:System.Web.UI.UpdatePanel>控制項是單一執行個體範本。 因此，它包含的控制項的內容不能存取直接在網頁上使用<xref:System.Web.UI.Page.FindControl%2A>方法。 如需詳細資訊，請參閱<xref:System.Web.UI.TemplateInstanceAttribute>類別概觀。  
  
 若要加入項目到<xref:System.Web.UI.UpdatePanel>控制項以宣告方式，加入`<ContentTemplate>`開頭和結尾標記之間的項目<xref:System.Web.UI.UpdatePanel>控制項。 內部`<ContentTemplate>`項目標記，宣告其他控制項和 HTML 項目。  
  
 若要加入項目到<xref:System.Web.UI.UpdatePanel>以動態方式控制，請使用<xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>屬性，可讓您新增的子控制項，而不需要建立實作的自訂範本<xref:System.Web.UI.ITemplate>介面。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">建立樣板的執行個體或建立內容樣板容器之後，會設定 <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> 控制項的 <see cref="T:System.Web.UI.UpdatePanel" /> 屬性。</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="T:System.Web.UI.TemplateInstanceAttribute" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ContentTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ContentTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTemplateContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ContentTemplateContainer { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得的控制項物件可讓您以程式設計方式加入子控制項。</summary>
        <value>定義 <see cref="T:System.Web.UI.Control" /> 控制項之內容的 <see cref="T:System.Web.UI.UpdatePanel" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>屬性可讓您以程式設計方式加入至子控制項<xref:System.Web.UI.UpdatePanel>控制項，而不必定義自訂的範本繼承自<xref:System.Web.UI.ITemplate>介面。 如果您要新增內容至<xref:System.Web.UI.UpdatePanel>控制以宣告方式或透過設計工具中，您應該將內容加入到<xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>屬性使用`<ContentTemplate>`項目。  
  
   
  
## Examples  
 下列範例示範如何以程式設計方式指定<xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>屬性<xref:System.Web.UI.UpdatePanel>控制項。 <xref:System.Web.UI.WebControls.Label.Text%2A>屬性<xref:System.Web.UI.WebControls.Label>控制項時，會設定`Button1`按下。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override sealed System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.ControlCollection" /> 物件，其中包含 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項的子控制項。</summary>
        <value>
          <see cref="T:System.Web.UI.UpdatePanel" /> 控制項的子控制項集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Controls%2A>屬性會覆寫基底<xref:System.Web.UI.Control>類別，並密封，以避免額外的衍生。 若要將控制項加入<xref:System.Web.UI.UpdatePanel>控制項以宣告方式，建立`<ContentTemplate>`元素內<xref:System.Web.UI.UpdatePanel>控制項標記。 若要將控制項加入<xref:System.Web.UI.UpdatePanel>以程式設計方式控制，請使用<xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">已呼叫 <see cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" /> 類別的 <see cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />、<see cref="M:System.Web.UI.ControlCollection.Clear" />、<see cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />、<see cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" /> 或 <see cref="T:System.Web.UI.ControlCollection" /> 方法。 如果要變更 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項的內容，請修改 <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> 屬性的子控制項。</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="CreateContentTemplateContainer">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateContentTemplateContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateContentTemplateContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentTemplateContainer () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateContentTemplateContainer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Web.UI.Control" /> 物件，該物件是做為定義 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項內容之子控制項的容器。</summary>
        <returns>
          <see cref="T:System.Web.UI.Control" /> 控制項內容的 <see cref="T:System.Web.UI.UpdatePanel" /> 容器。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法僅供使用的控制項開發人員想要擴充<xref:System.Web.UI.UpdatePanel>控制項。 例如，在衍生類別中，您可以提供不同的根控制項，做為容器您<xref:System.Web.UI.UpdatePanel>控制項的內容。 預設實作會傳回<xref:System.Web.UI.Control>物件。  
  
   
  
## Examples  
 下列範例示範如何覆寫<xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A>中自訂方法<xref:System.Web.UI.UpdatePanel>要呈現控制項`<fieldset>`和`<legend>`面板的內容項目。 自訂<xref:System.Web.UI.UpdatePanel>控制項定義的公用屬性，名為`GroupingText`也就是字串常值內`<legend>`項目。  
  
 自訂<xref:System.Web.UI.UpdatePanel>控制項，名為`CustomUpdatePanel`衍生自<xref:System.Web.UI.UpdatePanel>和覆寫<xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A>方法。 Put`CustomUpdatePanel`類別來源網站的 App_Code 資料夾中的程式碼。  
  
 [!code-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/App_Code/CustomUpdatePanel.cs#2)]
 [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/App_Code/CustomUpdatePanel.vb#2)]  
  
 自訂<xref:System.Web.UI.UpdatePanel>控制項用在頁面上就像<xref:System.Web.UI.UpdatePanel>控制項。 下列範例顯示包含自訂的頁面<xref:System.Web.UI.UpdatePanel>控制項。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/UpdatePanelCreateContentTemplateContainerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/UpdatePanelCreateContentTemplateContainerVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回包含於 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項之所有控制項的集合。</summary>
        <returns>由定義 <see cref="T:System.Web.UI.ControlCollection" /> 控制項之內容的所有控制項組成的 <see cref="T:System.Web.UI.UpdatePanel" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.CreateControlCollection%2A>方法由控制項開發人員。  
  
 這個方法會受到保護，而且密封的因為它是繼承的類別為可見<xref:System.Web.UI.UpdatePanel>類別，但它不能覆寫。 這個方法會覆寫基底實作以傳回特殊<xref:System.Web.UI.ControlCollection>物件，就會擲回<xref:System.InvalidOperationException>時<xref:System.Web.UI.ControlCollection.Add%2A>， <xref:System.Web.UI.ControlCollection.AddAt%2A>， <xref:System.Web.UI.ControlCollection.Clear%2A>， <xref:System.Web.UI.ControlCollection.Remove%2A>，或<xref:System.Web.UI.ControlCollection.RemoveAt%2A>方法<xref:System.Web.UI.ControlCollection>類別會叫用。 如果要變更 <xref:System.Web.UI.UpdatePanel> 控制項的內容，請修改 <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> 屬性的子控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果已啟用部分網頁呈現，則初始化 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項觸發程序集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果未啟用局部網頁呈現中, 所定義的觸發程序<xref:System.Web.UI.UpdatePanel.Triggers%2A>屬性不會初始化，因為它們沒有任何作用。 <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>屬性<xref:System.Web.UI.ScriptManager>控制項取得或設定值，指出是否啟用局部網頁呈現。 <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>屬性<xref:System.Web.UI.ScriptManager>控制項取得或設定值，指出是否支援局部網頁呈現。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當您覆寫<see cref="M:System.Web.UI.UpdatePanel.Initialize" />方法，請務必呼叫基底類別，因此如果有啟用局部網頁呈現，註冊觸發程序。</para>
        </block>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
        <altmember cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="IsInPartialRendering">
      <MemberSignature Language="C#" Value="public bool IsInPartialRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInPartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInPartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInPartialRendering { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示非同步回傳是否會導致更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項。</summary>
        <value>
          如果目前的 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項會因為非同步回傳而更新，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.IsInPartialRendering%2A>屬性適用於由控制項開發人員想要知道何時<xref:System.Web.UI.UpdatePanel>控制項是否正在更新非同步回傳的結果。 在網頁開發案例，使用<xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>屬性來判斷頁面是否正在處理非同步回傳的結果。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" /> 物件。</param>
        <summary>引發 <see cref="E:System.Web.UI.Control.Init" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel>控制項的<xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>屬性具現化期間<xref:System.Web.UI.UpdatePanel.OnInit%2A>方法。  
  
 <xref:System.Web.UI.UpdatePanel.OnInit%2A>方法由控制項開發人員用來擴充功能<xref:System.Web.UI.UpdatePanel>控制項。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">定義 <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> 屬性時，已經建立了 <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> 屬性。</exception>
        <block subset="none" type="overrides">
          <para>當您覆寫<see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />方法在衍生類別中，請務必呼叫<see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />方法的基底類別，使已註冊的委派可接收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" /> 物件。</param>
        <summary>在未啟用部分網頁呈現的情況下，引發 <see cref="E:System.Web.UI.Control.Load" /> 控制項的 <see cref="T:System.Web.UI.UpdatePanel" /> 事件，並叫用 <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> 方法。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>如果您覆寫<see cref="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" />方法，請務必呼叫基底類別，讓<see cref="E:System.Web.UI.Control.Load" />會引發事件。</para>
        </block>
        <altmember cref="M:System.Web.UI.UpdatePanel.Initialize" />
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" /> 物件。</param>
        <summary>引發 <see cref="E:System.Web.UI.Control.PreRender" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.OnPreRender%2A>方法由控制項開發人員用來擴充功能<xref:System.Web.UI.UpdatePanel>控制項。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" /> 屬性會設為 <see langword="false" />，且 <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> 屬性會設為 <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />。</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> 物件，包含事件資料。</param>
        <summary>引發基底 <see cref="E:System.Web.UI.Control.Unload" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.OnUnload%2A>方法由控制項開發人員用來擴充功能<xref:System.Web.UI.UpdatePanel>控制項  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件，表示要呈現 HTML 內容的輸出資料流。</param>
        <summary>引發 <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Render%2A>方法由控制項開發人員用來擴充功能<xref:System.Web.UI.UpdatePanel>控制項。  
  
 <xref:System.Web.UI.UpdatePanel.Render%2A>方法會寫入目的呈現的內容<xref:System.Web.UI.UpdatePanel>瀏覽器使用所提供的控制項<xref:System.Web.UI.HtmlTextWriter>物件。 當您覆寫<xref:System.Web.UI.UpdatePanel.Render%2A>方法在衍生類別中，請務必呼叫<xref:System.Web.UI.UpdatePanel.Render%2A>方法的基底類別，使子控制項的<xref:System.Web.UI.UpdatePanel>呈現控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件，表示要呈現 HTML 內容的輸出資料流。</param>
        <summary>引發 <see cref="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.RenderChildren%2A>方法由控制項開發人員用來擴充功能<xref:System.Web.UI.UpdatePanel>控制項。  
  
 <xref:System.Web.UI.UpdatePanel.RenderChildren%2A>方法會寫入目的呈現的內容<xref:System.Web.UI.UpdatePanel>瀏覽器使用所提供的控制項<xref:System.Web.UI.HtmlTextWriter>物件。 當您覆寫<xref:System.Web.UI.UpdatePanel.RenderChildren%2A>方法在衍生類別中，請務必呼叫<xref:System.Web.UI.UpdatePanel.RenderChildren%2A>方法的基底類別，使子控制項的<xref:System.Web.UI.UpdatePanel>呈現控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelRenderMode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelRenderMode RenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderMode As UpdatePanelRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelRenderMode RenderMode { System::Web::UI::UpdatePanelRenderMode get(); void set(System::Web::UI::UpdatePanelRenderMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定的值表示 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項的內容是否包含在 HTML <see langword="&lt;div&gt;" /> 或 <see langword="&lt;span&gt;" /> 項目中。</summary>
        <value>其中一個 <see cref="T:System.Web.UI.UpdatePanelRenderMode" /> 值。 預設值為 <see cref="F:System.Web.UI.UpdatePanelRenderMode.Block" />，這表示面板的內容是包含在 HTML <see langword="&lt;div&gt;" /> 項目中。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.UpdatePanel.RenderMode%2A>屬性設定為<xref:System.Web.UI.UpdatePanelRenderMode.Inline>、 內容的<xref:System.Web.UI.UpdatePanel>內 HTML 呈現控制項`<span>`項目。 如果<xref:System.Web.UI.UpdatePanel.RenderMode%2A>屬性設定為<xref:System.Web.UI.UpdatePanelRenderMode.Block>，呈現在 HTML 內`<div>`項目。  
  
   
  
## Examples  
 下列範例示範如何設定<xref:System.Web.UI.UpdatePanel.RenderMode%2A>屬性以宣告方式。 <xref:System.Web.UI.UpdatePanel>控制項，名為`UpdatePanel1`會以 HTML 轉譯`<span>`項目。 如果<xref:System.Web.UI.UpdatePanel.RenderMode%2A>屬性已設定為<xref:System.Web.UI.UpdatePanelRenderMode.Block>，因為的方式，在產生的一段會出現脫離 HTML`<div>`項目會呈現。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/CS/UpdatePanelRenderModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/VB/UpdatePanelRenderModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="RequiresUpdate">
      <MemberSignature Language="C#" Value="protected internal virtual bool RequiresUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property RequiresUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool RequiresUpdate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示是否會更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項的內容。</summary>
        <value>
          如果會更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項的內容，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，<xref:System.Web.UI.UpdatePanel.RequiresUpdate%2A>屬性會傳回`true`如果<xref:System.Web.UI.UpdatePanel.Update%2A>明確地呼叫方法或者<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>屬性設定為<xref:System.Web.UI.UpdatePanelUpdateMode.Always>。  
  
 這個屬性僅供使用的控制項開發人員想要擴充<xref:System.Web.UI.UpdatePanel>控制項。 例如，在衍生類別中，您可能會提供額外的邏輯，以判斷是否<xref:System.Web.UI.UpdatePanel>應該更新控制項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (key As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ key) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">屬性的名稱。</param>
        <summary>使用指定的名稱，傳回 Web 控制項的屬性。</summary>
        <returns>屬性的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.UpdatePanel> 執行個體轉換成 <xref:System.Web.UI.IAttributeAccessor> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (key As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ key, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要設定的屬性名稱。</param>
        <param name="value">要設定的屬性值。</param>
        <summary>設定指定之控制項屬性的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.UpdatePanel> 執行個體轉換成 <xref:System.Web.UI.IAttributeAccessor> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelTriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.UpdatePanelTriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As UpdatePanelTriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelTriggerCollection ^ Triggers { System::Web::UI::UpdatePanelTriggerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelTriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> 物件，這個物件包含 <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> 和 <see cref="T:System.Web.UI.PostBackTrigger" /> 物件 (針對 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項以宣告方式註冊)。</summary>
        <value>型別為 <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> 和 <see cref="T:System.Web.UI.PostBackTrigger" /> 之物件的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Triggers%2A>屬性會取得所有的觸發程序已定義的集合<xref:System.Web.UI.UpdatePanel>控制項。 (您可以使用，以宣告方式定義觸發程序**UpdatePanelTrigger 集合編輯器**對話方塊設計工具中，或使用`<Triggers>`元素<xref:System.Web.UI.UpdatePanel>控制項。)集合包含<xref:System.Web.UI.AsyncPostBackTrigger>和<xref:System.Web.UI.PostBackTrigger>物件。  
  
 宣告式觸發程序中所定義的<xref:System.Web.UI.UpdatePanel.Triggers%2A>集合不會追蹤在檢視狀態中。  
  
 命名的容器控制項的觸發程序使用時，其所有子控制項造成回傳的觸發程序都行為。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelTriggerCollection" />
        <altmember cref="T:System.Web.UI.UpdatePanelTrigger" />
        <altmember cref="T:System.Web.UI.AsyncPostBackTrigger" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>導致更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項的內容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果當您叫用 [] 頁面上已啟用局部網頁呈現<xref:System.Web.UI.UpdatePanel.Update%2A>方法，<xref:System.Web.UI.UpdatePanel>瀏覽器中更新控制項的內容。 呼叫<xref:System.Web.UI.UpdatePanel.Update%2A>方法，如果您判斷所必須執行的伺服器程式碼是否<xref:System.Web.UI.UpdatePanel>應該更新控制項。 如果您打算使用<xref:System.Web.UI.UpdatePanel.Update%2A>方法，設定<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>屬性<xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>。 如果您想要更新邏輯伺服器中的面板決策，請確定<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>屬性是`false`並沒有明確的觸發程序所定義的面板。  
  
 在典型網頁開發案例中，如果您定義觸發程序，或如果<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>屬性是`true`如<xref:System.Web.UI.UpdatePanel>控制項，<xref:System.Web.UI.UpdatePanel.Update%2A>頁面生命週期期間，會自動呼叫方法。  
  
 如果<xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>屬性未定義<xref:System.Web.UI.UpdatePanel>控制，將會執行任何面板的更新。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Web.UI.UpdatePanel.Update%2A>方法，以更新的內容<xref:System.Web.UI.UpdatePanel>控制當自上次更新後經過時間超過五秒。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> 屬性設定為 <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />。  
  
 \- 或 –  
  
 處理網頁的 <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> 事件時或處理完成之後，系統會呼叫 <see cref="M:System.Web.UI.UpdatePanel.Update" /> 方法。</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelUpdateMode UpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelUpdateMode UpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMode As UpdatePanelUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelUpdateMode UpdateMode { System::Web::UI::UpdatePanelUpdateMode get(); void set(System::Web::UI::UpdatePanelUpdateMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示何時更新 <see cref="T:System.Web.UI.UpdatePanel" /> 控制項的內容。</summary>
        <value>其中一個 <see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> 值。 預設值為 <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.UpdatePanel>控制項內的另一個不是<xref:System.Web.UI.UpdatePanel>控制項面板會根據設定來更新<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>和<xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>屬性，以及觸發程序的集合。 當<xref:System.Web.UI.UpdatePanel>控制項內的另一個是<xref:System.Web.UI.UpdatePanel>父面板更新時，會自動更新控制，子面板。  
  
 內容<xref:System.Web.UI.UpdatePanel>控制項在下列情況下更新：  
  
-   如果<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>屬性設定為<xref:System.Web.UI.UpdatePanelUpdateMode.Always>、<xref:System.Web.UI.UpdatePanel>控制項的內容會更新在頁面任何位置是來自每次回傳。 這包括從控制項內其他的非同步回傳<xref:System.Web.UI.UpdatePanel>控制項並不是內部的控制項的回傳<xref:System.Web.UI.UpdatePanel>控制項。  
  
-   如果<xref:System.Web.UI.UpdatePanel>控制項內的另一個巢狀<xref:System.Web.UI.UpdatePanel>控制項，而且父更新面板會更新。  
  
-   如果<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>屬性設定為<xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>，並會發生下列狀況：  
  
    -   您呼叫<xref:System.Web.UI.UpdatePanel.Update%2A>方法<xref:System.Web.UI.UpdatePanel>明確控制。  
  
    -   由控制項所使用的觸發程序定義，所以回傳<xref:System.Web.UI.UpdatePanel.Triggers%2A>屬性<xref:System.Web.UI.UpdatePanel>控制項。 在此案例中，控制項明確觸發面板內容的更新。 控制項可以是內部或外部<xref:System.Web.UI.UpdatePanel>定義觸發程序的控制項。  
  
    -   <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>屬性設定為`true`和子控制項的<xref:System.Web.UI.UpdatePanel>控制項造成回傳。 巢狀的子控制項<xref:System.Web.UI.UpdatePanel>控制項不會導致外部更新<xref:System.Web.UI.UpdatePanel>控制除非明確定義的觸發程序。  
  
   
  
## Examples  
 下列範例將示範如何使用 <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> 屬性。 此範例會宣告兩個<xref:System.Web.UI.UpdatePanel>控制項。 在第一個面板中，<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>屬性設定為<xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>。 在第二個面板中，<xref:System.Web.UI.UpdatePanel.UpdateMode%2A>設<xref:System.Web.UI.UpdatePanelUpdateMode.Always>。 外部兩個面板按鈕時，會註冊為非同步回傳控制項上，藉由呼叫<xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>方法<xref:System.Web.UI.ScriptManager>控制項。 在按鈕的`Click`事件處理常式，<xref:System.Web.UI.UpdatePanel.Update%2A>如果自其上次更新後經過時間超過五秒會呼叫方法的第一個面板。 在此案例中，最後一個面板重新整理已五秒以上才會更新面板的內容。 第二個面板的內容會自動更新。  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的類型不是其中一個 <see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> 值。</exception>
        <altmember cref="T:System.Web.UI.UpdatePanelUpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.Update" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      </Docs>
    </Member>
  </Members>
</Type>