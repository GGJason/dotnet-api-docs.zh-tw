<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ViewStateException.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a96557c46b0c067684a9680f548bb1037bc62c76.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a96557c46b0c067684a9680f548bb1037bc62c76</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ViewStateException">
          <source>Represents the exception that is thrown when the view state cannot be loaded or validated.</source>
          <target state="translated">表示當檢視狀態無法載入或驗證時所擲回的例外狀況。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ViewStateException">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If an exception occurs when the page loads the view-state information, the page creates a <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object and passes it as an inner exception within an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception.</source>
          <target state="translated">頁面載入檢視狀態資訊的頁面時，就會發生的例外狀況，建立<ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>物件，並將它當做內部例外狀況中傳遞<ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph>例外狀況。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception is re-thrown to be handled by the application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph>是重新擲回至應用程式處理的例外狀況。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> class stores information about the exception in the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>類別中的例外狀況的相關資訊會儲存<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If the request has permission to access the <ph id="ph1">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property, then the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property contains the values returned from the <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, and <ph id="ph8">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> properties; otherwise, the <ph id="ph9">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property contains a generic view-state error message.</source>
          <target state="translated">如果要求具備存取權限<ph id="ph1">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph>屬性，則<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph>屬性包含從傳回的值<ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>， <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>， <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>，和<ph id="ph8">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph>屬性。否則，<ph id="ph9">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph>屬性包含檢視狀態的一般錯誤訊息。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>A view-state exception can be the result of a Message Authentication Codes (MAC) validation error.</source>
          <target state="translated">檢視狀態例外狀況可以是訊息驗證碼 (MAC) 驗證錯誤的結果。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If the page attribute <ph id="ph1">`enableViewStateMac`</ph> is set to <ph id="ph2">`true`</ph>, view-state information is encoded with a MAC identifier.</source>
          <target state="translated">如果頁面屬性<ph id="ph1">`enableViewStateMac`</ph>設<ph id="ph2">`true`</ph>，檢視狀態資訊編碼與 MAC 的識別項。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>When the view-state information is posted back to the server, the page verifies the encoding to ensure that it has not been altered by the user.</source>
          <target state="translated">當檢視狀態資訊回傳至伺服器時，頁面會驗證以確保，它未被改變由使用者編碼方式。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If the page cannot validate the MAC encoding on the view-state information, it will throw an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception with the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated">如果頁面無法驗證檢視狀態資訊的 MAC 編碼，則會擲回<ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph>例外狀況，並<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>物件做為內部的例外狀況。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>For MAC validation to succeed, the view-state information must be hashed by the same key when it is sent and received.</source>
          <target state="translated">MAC 驗證成功，如檢視狀態資訊必須是雜湊依相同的索引鍵時傳送和接收。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>Within a Web farm, the machine key on each server should be set to a common key.</source>
          <target state="translated">Web 伺服陣列中每部伺服器上的電腦金鑰應該設定為 共同索引鍵。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">下列程式碼範例示範如何實作的方法，將 base64 編碼的字串還原序列化，並傳回<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>屬性設定的集合。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph>方法可以擲回<ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph>包含例外狀況<ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>物件做為內部的例外狀況。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">此範例示範如何攔截<ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph>例外狀況，並擷取從屬性<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">存放序列物件資料的物件。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">關於來源或目的端的內容資訊。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">使用序列化資料，初始化 <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>Gets a value indicating whether the client is currently connected to the server.</source>
          <target state="translated">取得值，指出用戶端目前是否與伺服器連接著。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client is still connected to the server; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果用戶端仍然與伺服器連接著，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>This property returns the same value as calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> property.</source>
          <target state="translated">這個屬性會傳回相同的值與呼叫<ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">下列程式碼範例示範如何實作的方法，將 base64 編碼的字串還原序列化，並傳回<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>屬性設定的集合。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph>方法可以擲回<ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph>包含例外狀況<ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>物件做為內部的例外狀況。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">此範例示範如何攔截<ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph>例外狀況，並擷取從屬性<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.Message">
          <source>Gets debugging information about the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">取得造成檢視狀態例外狀況之 HTTP 要求的偵錯資訊。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Message">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the formatted message with information about the exception.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，包含例外狀況資訊的格式化訊息。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Message">
          <source>If the request does not have permission to access the server variables, then this property returns a generic view-state error message.</source>
          <target state="translated">如果要求不包含伺服器變數的存取權限，這個屬性會傳回一般的檢視狀態錯誤訊息。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Message">
          <source>If the request does have permission to access server variables, the <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property contains the values returned from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> properties.</source>
          <target state="translated">如果要求沒有權限可以存取伺服器變數<ph id="ph1">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph>屬性包含從傳回的值<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>， <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>， <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>， <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>， <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>，和<ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.Path">
          <source>Gets the path of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">取得造成檢視狀態例外狀況之 HTTP 要求的路徑。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the path from the request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，包含要求的路徑。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>This property returns the same value as the <ph id="ph1">`PATH_INFO`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">這個屬性會傳回相同的值<ph id="ph1">`PATH_INFO`</ph>變數中<ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>It returns the portion of the path after the host name.</source>
          <target state="translated">主機名稱之後，它就會傳回路徑的一部分。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>For example, in the URL <ph id="ph1">http://www.contoso.com/virdir/page.html</ph>, <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> would return /virdir/page.html.</source>
          <target state="translated">例如，在 URL 中<ph id="ph1">http://www.contoso.com/virdir/page.html</ph>， <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> /virdir/page.html/會傳回。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">下列程式碼範例示範如何實作的方法，將 base64 編碼的字串還原序列化，並傳回<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>屬性設定的集合。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph>方法可以擲回<ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph>包含例外狀況<ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>物件做為內部的例外狀況。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">此範例示範如何攔截<ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph>例外狀況，並擷取從屬性<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.PersistedState">
          <source>Gets the contents of the view-state string that, when read, caused the view-state exception.</source>
          <target state="translated">取得當讀取時造成檢視狀態例外狀況之檢視狀態字串的內容。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.PersistedState">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the view-state values that caused the view-state exception.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，包含造成檢視狀態例外狀況的檢視狀態值。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>Gets the URL of the page that linked to the page where the view-state exception occurred.</source>
          <target state="translated">取得頁面的 URL，這個頁面連結到發生檢視狀態例外狀況的頁面。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the HTTP referrer.</source>
          <target state="translated">包含 HTTP 參考項的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>This property returns the same value as the <ph id="ph1">`HTTP_REFERER`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">這個屬性會傳回相同的值<ph id="ph1">`HTTP_REFERER`</ph>變數中<ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The value is an empty string ("") if no previous request linked to the page.</source>
          <target state="translated">值為空字串 ("") 如果沒有上一個要求連結至分頁。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">下列程式碼範例示範如何實作的方法，將 base64 編碼的字串還原序列化，並傳回<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>屬性設定的集合。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph>方法可以擲回<ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph>包含例外狀況<ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>物件做為內部的例外狀況。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">此範例示範如何攔截<ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph>例外狀況，並擷取從屬性<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.RemoteAddress">
          <source>Gets the IP address of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">取得造成檢視狀態例外狀況之 HTTP 要求的 IP 位址。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemoteAddress">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the remote IP address of the client.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，包含用戶端的遠端 IP 位址。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemoteAddress">
          <source>This property returns the same value as the <ph id="ph1">`REMOTE_ADDR`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">這個屬性會傳回相同的值<ph id="ph1">`REMOTE_ADDR`</ph>變數中<ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.RemotePort">
          <source>Gets the port number of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">取得造成檢視狀態例外狀況之 HTTP 要求的通訊埠編號。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemotePort">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the remote port number.</source>
          <target state="translated">包含遠端通訊埠編號的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemotePort">
          <source>This property returns the same value as the <ph id="ph1">`REMOTE_PORT`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">這個屬性會傳回相同的值<ph id="ph1">`REMOTE_PORT`</ph>變數中<ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>Gets the browser type of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">取得造成檢視狀態例外狀況之 HTTP 要求的瀏覽器類型。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the user agent, which is typically the browser type.</source>
          <target state="translated">包含使用者代理 (通常是瀏覽器類型) 的 <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>This property returns the same value as the <ph id="ph1">`HTTP_USER_AGENT`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">這個屬性會傳回相同的值<ph id="ph1">`HTTP_USER_AGENT`</ph>變數中<ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">下列程式碼範例示範如何實作的方法，將 base64 編碼的字串還原序列化，並傳回<ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph>屬性設定的集合。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph>方法可以擲回<ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph>包含例外狀況<ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>物件做為內部的例外狀況。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">此範例示範如何攔截<ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph>例外狀況，並擷取從屬性<ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph>物件。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>