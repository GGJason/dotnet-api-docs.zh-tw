<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f2497c33eaf27f68789628a3955254edac82843" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37588598" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <TypeSignature Language="F#" Value="type ICallbackEventHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>用來表示控制項可以做為伺服器上回呼事件的目標。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作<xref:System.Web.UI.ICallbackEventHandler>需要接收回呼事件的任何自訂控制項的介面。 如需詳細資訊，請參閱 <<c0> [ 實作用戶端回呼而不需要回傳](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)。  
  
 實作的控制項範例<xref:System.Web.UI.ICallbackEventHandler>介面包含<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>，和<xref:System.Web.UI.WebControls.TreeView>控制項。 當回呼事件以控制項為目標可實作<xref:System.Web.UI.ICallbackEventHandler>介面，<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>呼叫方法來處理事件，做為參數傳遞的事件引數和<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>方法會傳回回呼的結果。  
  
 在回呼期間，從資料來源控制項擷取資料的控制項可以這麼做以同步或非同步。 ASP.NET 控制項，例如<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>，和<xref:System.Web.UI.WebControls.TreeView>以同步方式實作。 同步的回呼不會防止使用者使用瀏覽器中。 在同步模式中，可以執行一次只有一個回呼，最後的回呼會優先使用。 支援非同步行為實作的 Web 控制項時，可以同時引發多個回呼。 如需非同步程式設計的詳細資訊，請參閱[事件架構非同步模式 (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md)。  
  
 您可以指定來自使用者介面的回呼事件是否要呈現控制項，實作<xref:System.Web.UI.ICallbackEventHandler>介面會進行驗證。 事件驗證是很好的安全性作法。 不過，基於效能考量您可以停用它。 若要控制是否事件上執行驗證回呼事件，請將`enableEventValidation`的屬性[@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)指示詞或`enableEventValidation`屬性[pages 項目 （ASP.NET 設定結構描述）](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) Web.config 檔案。 如果您設定<xref:System.Web.UI.Page.EnableEventValidation%2A>屬性中的程式碼，將它設定`Page_Init`頁面處理階段。 如需有關如何平衡其效能成本與事件驗證的安全性優點的詳細資訊，請參閱 < [ASP.NET 效能概觀](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b)。  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string" Usage="iCallbackEventHandler.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回以控制項為目標之回呼事件的結果。</summary>
        <returns>回呼的結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 擲回例外狀況<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>不會阻止<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>從被呼叫，並傳回結果。 若要避免<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>從傳回的結果，設定擲回例外狀況時的旗標<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>，並傳回空字串從<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit" Usage="iCallbackEventHandler.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">表示傳遞至事件處理常式之事件引數的字串。</param>
        <summary>處理以控制項為目標的回呼事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當`null`用做為事件引數參數中，字串會序列化為 「 null 」，然後再傳送的回傳給伺服器。 因為沒有任何方法來區別`null`和"null"，您應該避免使用`null`具有回呼的引數參數。  
  
 擲回例外狀況<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>不會阻止<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>從被呼叫，並傳回結果。 若要避免<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>從傳回的結果，設定擲回例外狀況時的旗標<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>，並傳回空字串從<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>