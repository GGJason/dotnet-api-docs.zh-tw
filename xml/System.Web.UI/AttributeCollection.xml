<Type Name="AttributeCollection" FullName="System.Web.UI.AttributeCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="93fcc98fd2f0a24386661ebddbcde6f70e324d14" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39785404" /></Metadata><TypeSignature Language="C#" Value="public sealed class AttributeCollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AttributeCollection extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.AttributeCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttributeCollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeCollection sealed" />
  <TypeSignature Language="F#" Value="type AttributeCollection = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供物件模型 (Object Model) 的存取權給 ASP.NET 伺服器控制項項目的開頭標記中宣告的所有屬性。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 集合中的個別項目傳回<xref:System.String>做為其值的物件。 如果沒有屬性中沒有項目集合，集合傳回`null`。  
  
 HTML 伺服器控制項上的屬性都是以程式設計方式透過<xref:System.Web.UI.HtmlControls.HtmlControl.Attributes%2A>該層會繼承的所有 HTML 伺服器控制項的屬性。 ASP.NET 會為這些控制項的屬性公開 HTML 伺服器控制項的屬性。  
  
 您可以將屬性加入至 Web 伺服器控制項透過<xref:System.Web.UI.WebControls.WebControl.Attributes%2A>該層會繼承的所有 Web 伺服器控制項的屬性。 Web 伺服器控制項的屬性集合中的屬性一定是未對應到該控制項的控制項的強型別屬性。  
  
   
  
## Examples  
 下列範例會建立新<xref:System.Web.UI.AttributeCollection>物件，名為`myAttributeCollection`，然後檢查 [頁面是否已張貼上一步]。 如果沒有，程式碼會將兩個屬性加入集合中。 接著，取得集合中的屬性數目並逐一查看集合中，寫入至頁面的每個屬性的索引鍵。 如果頁面回傳，程式碼會取得新的屬性數目，並逐一查看集合的索引鍵和每個屬性的值寫入頁面。  
  
 [!code-csharp[AttributeCollection_AttributeCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/CS/attributecollection_attributecollection.cs.aspx#1)]
 [!code-vb[AttributeCollection_AttributeCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/VB/attributecollection_attributecollection.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeCollection (System.Web.UI.StateBag bag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.StateBag bag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.#ctor(System.Web.UI.StateBag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bag As StateBag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeCollection(System::Web::UI::StateBag ^ bag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.AttributeCollection : System.Web.UI.StateBag -&gt; System.Web.UI.AttributeCollection" Usage="new System.Web.UI.AttributeCollection bag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="bag" Type="System.Web.UI.StateBag" />
      </Parameters>
      <Docs>
        <param name="bag">物件，包含伺服器控制項之開頭標記中的屬性索引鍵和其值。</param>
        <summary>初始化 <see cref="T:System.Web.UI.AttributeCollection" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.AttributeCollection>建立類別的執行個體建構函式將它命名為`myAttributeCollection`。 程式碼會將控制項傳遞<xref:System.Web.UI.Control.ViewState%2A>做為參數引數的屬性。  
  
 [!code-csharp[AttributeCollection_AttributeCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/CS/attributecollection_attributecollection.cs.aspx#2)]
 [!code-vb[AttributeCollection_AttributeCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/VB/attributecollection_attributecollection.vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; unit" Usage="attributeCollection.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">屬性名稱。</param>
        <param name="value">屬性值。</param>
        <summary>將屬性加入至伺服器控制項的 <see cref="T:System.Web.UI.AttributeCollection" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果在字串`value`參數包含連字號 (&) 字元自動進行編碼。 所產生的 HTML 表示法是 「&amp;"。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.AttributeCollection.Add%2A>方法以程式設計方式將屬性新增至 ASP.NET 伺服器控制項<xref:System.Web.UI.AttributeCollection>物件。  
  
 [!code-aspx-csharp[Classic AttributeCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Add Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Add Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public void AddAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.AddAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.AddAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="attributeCollection.AddAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> 執行個體，會將屬性寫入 ASP.NET 伺服器控制項的開頭標記中。</param>
        <summary>將屬性從 <see cref="T:System.Web.UI.AttributeCollection" /> 類別加入負責將屬性當做標記呈現的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會複製所有伺服器控制項的屬性<xref:System.Web.UI.HtmlTextWriter>物件，以便可以呈現的下一個呼叫<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>方法。  
  
 例如包含在其他控制項的控制項<xref:System.Web.UI.WebControls.Calendar>和<xref:System.Web.UI.WebControls.CheckBoxList>，您可能可以藉由直接呈現所包含的控制項來改善效能。 直接呈現會較快，因為容器控制項需要您將所有子控制項屬性都複製到容器控制項，並複製之後將它們轉譯，轉譯透過容器控制項。  
  
   
  
## Examples  
 下列範例示範如何加入新的屬性，<xref:System.Web.UI.WebControls.Button>名為的伺服器控制項`myButton`並<xref:System.Web.UI.WebControls.TextBox>伺服器控制項，名為`myTextBox`。 然後將這些屬性新增至自訂<xref:System.Web.UI.HtmlTextWriter>物件會寫入輸出資料流的那些屬性的每個這些控制項。  
  
 [!code-csharp[AttributeCollection_Item#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_Item/CS/attributecollection_item.cs.aspx#1)]
 [!code-vb[AttributeCollection_Item#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_Item/VB/attributecollection_item.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="attributeCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從伺服器控制項的 <see cref="T:System.Web.UI.AttributeCollection" /> 物件中移除所有屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何以程式設計方式移除 HTML 伺服器控制項中的所有屬性<xref:System.Web.UI.AttributeCollection>物件。  
  
 [!code-aspx-csharp[Classic AttributeCollection.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Clear Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Clear Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.AttributeCollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.AttributeCollection" /> 物件中的屬性數目。</summary>
        <value>集合中的項目數目</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何使用<xref:System.Web.UI.AttributeCollection.Count%2A>屬性來包含頁面控制項上寫入屬性的數目。  
  
 [!code-csharp[AttributeCollection_AttributeCollection#4](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/CS/attributecollection_attributecollection.cs.aspx#4)]
 [!code-vb[AttributeCollection_AttributeCollection#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_AttributeCollection/VB/attributecollection_attributecollection.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="CssStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.CssStyleCollection CssStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CssStyleCollection CssStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.CssStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CssStyle As CssStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CssStyleCollection ^ CssStyle { System::Web::UI::CssStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CssStyle : System.Web.UI.CssStyleCollection" Usage="System.Web.UI.AttributeCollection.CssStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.CssStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前 <see cref="T:System.Web.UI.AttributeCollection" /> 物件所屬的 ASP.NET 伺服器控制項樣式的集合。</summary>
        <value>集合，包含目前伺服器控制項的樣式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 任何樣式宣告特定的 HTML 伺服器控制項加入至<xref:System.Web.UI.CssStyleCollection>剖析包含 ASP.NET Web 網頁時的物件。 您可以使用這個屬性來新增、 移除及逐一查看宣告伺服器控制項的樣式。  
  
   
  
## Examples  
 下列範例示範如何以程式設計方式將 CSS 樣式值，加入伺服器控制項的<xref:System.Web.UI.AttributeCollection>物件。 當按下按鈕的背景色彩<xref:System.Web.UI.WebControls.TextBox>名為的伺服器控制項`TextBox1`設定為在選取的項目<xref:System.Web.UI.WebControls.DropDownList>伺服器控制項，名為`DropDownList1`。  
  
 [!code-csharp[AttributeCollection_CssStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection_CssStyle/CS/attributecollection_cssstyle.cs.aspx#1)]
 [!code-vb[AttributeCollection_CssStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection_CssStyle/VB/attributecollection_cssstyle.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="attributeCollection.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">要與這個執行個體比較的物件執行個體。</param>
        <summary>判斷 <see cref="T:System.Web.UI.AttributeCollection" /> 物件目前的執行個體是否等於指定的物件。</summary>
        <returns>如果 <paramref name="o" /> 參數中包含的物件等於 <see cref="T:System.Web.UI.AttributeCollection" /> 物件目前的執行個體則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 相等比較的物件，它們必須符合下列準則：  
  
-   中包含的物件`o`參數必須是<xref:System.Web.UI.AttributeCollection>物件。  
  
-   這兩個集合必須包含相同數目的項目。  
  
-   這兩個集合中每個項目的索引鍵的值必須符合。  
  
    > [!NOTE]
    >  這個方法主要由控制項開發人員使用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="attributeCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回這個執行個體的雜湊碼。</summary>
        <returns>32 位元帶正負號的整數雜湊碼。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.AttributeCollection.GetHashCode%2A>方法，以判斷雜湊程式碼，這個<xref:System.Web.UI.AttributeCollection>物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string with get, set" Usage="System.Web.UI.AttributeCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">屬性在集合中的位置。</param>
        <summary>取得或設定伺服器控制項的指定屬性值。</summary>
        <value>屬性值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以將屬性新增至或擷取從 ASP.NET 伺服器控制項使用這個屬性。  
  
   
  
## Examples  
 下列範例示範如何設定動態 HTML`onblur`屬性來執行的 ECMAScript (JavaScript) 命令<xref:System.Web.UI.WebControls.TextBox>Web 伺服器控制項失去焦點。  
  
 [!code-aspx-csharp[Classic AttributeCollection Example 2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection Example 2/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection Example 2/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AttributeCollection.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Web.UI.AttributeCollection.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得伺服器控制項的 <see cref="T:System.Web.UI.AttributeCollection" /> 物件中的所有屬性的索引鍵集合。</summary>
        <value>索引鍵的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性包含中的所有索引鍵<xref:System.Web.UI.AttributeCollection>ASP.NET 伺服器控制項，是否您已加入它們以程式設計方式用<xref:System.Web.UI.AttributeCollection.Add%2A>方法，或以宣告方式。  
  
   
  
## Examples  
 下列範例示範如何逐一查看<xref:System.Web.UI.AttributeCollection.Keys%2A>的屬性<xref:System.Web.UI.AttributeCollection>物件<xref:System.Web.UI.HtmlControls.HtmlSelect>伺服器控制項。  
  
 [!code-aspx-csharp[Classic AttributeCollection.Keys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Keys Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Keys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Keys Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="attributeCollection.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要移除的屬性名稱。</param>
        <summary>從伺服器控制項的 <see cref="T:System.Web.UI.AttributeCollection" /> 物件移除屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.UI.AttributeCollection>物件不包含具有指定屬性`key`，集合會保持不變。 不會有例外狀況擲回。  
  
   
  
## Examples  
 下列範例示範如何以程式設計方式移除 HTML 伺服器控制項的顯示屬性<xref:System.Web.UI.AttributeCollection>物件。  
  
 [!code-aspx-csharp[Classic AttributeCollection.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic AttributeCollection.Remove Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic AttributeCollection.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic AttributeCollection.Remove Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AttributeCollection.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="attributeCollection.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter" /> 執行個體，會將屬性集合寫入目前的輸出資料流。</param>
        <summary>將屬性集合寫入為集合所屬控制項所指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 輸出資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何繼承自<xref:System.Web.UI.WebControls.WebControl>類別來建立名為自訂控制項`AttribRender`會覆寫<xref:System.Web.UI.AttributeCollection.Render%2A>方法。 第二個程式碼範例示範如何在 ASP.NET 網頁中使用自訂控制項。  
  
 下列範例示範如何建立名為自訂控制項`AttribRender`會覆寫<xref:System.Web.UI.WebControls.WebControl.Render%2A>方法<xref:System.Web.UI.WebControls.WebControl>類別，而不需呼叫<xref:System.Web.UI.WebControls.WebControl.Render%2A>基底類別的方法。 相反地，`AttribRender`叫用<xref:System.Web.UI.AttributeCollection.Render%2A>方法。  
  
 [!code-csharp[AttributeCollection.Render_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/CS/attributecollection_render.cs#1)]
 [!code-vb[AttributeCollection.Render_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/VB/attributecollection_render.vb#1)]  
  
 下列範例示範如何使用`AttribRender`在網頁中的自訂控制項。 它假設自訂控制項的程式碼檔案是應用程式的 App_Code 資料夾中。  
  
 [!code-aspx-csharp[AttributeCollection.Render_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/CS/attributecollection_rendercs.aspx#2)]
 [!code-aspx-vb[AttributeCollection.Render_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/AttributeCollection.Render_Sample1/VB/attributecollection_rendervb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.Attributes" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
  </Members>
</Type>