<Type Name="ChtmlTextWriter" FullName="System.Web.UI.ChtmlTextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34742187faa27ac641e9f0767654cb7c439dd1fc" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52249071" /></Metadata><TypeSignature Language="C#" Value="public class ChtmlTextWriter : System.Web.UI.Html32TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChtmlTextWriter extends System.Web.UI.Html32TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ChtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class ChtmlTextWriter&#xA;Inherits Html32TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChtmlTextWriter : System::Web::UI::Html32TextWriter" />
  <TypeSignature Language="F#" Value="type ChtmlTextWriter = class&#xA;    inherit Html32TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Html32TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>將一系列 cHTML 特定字元和文字寫入 ASP.NET 伺服器控制項的輸出資料流。 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 類別提供格式化功能，當 ASP.NET 伺服器控制項向用戶端呈現 cHTML 內容時會使用這些格式化功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Compact HTML 或 cHTML 是 HTML 2.0、 HTML 3.2 和 HTML 4.0 的子集，而且設計來呈現具有有限的記憶體與 CPU 能力，以及有限的格式化功能，以及有限的輸入選項 （例如行動電話的小型顯示螢幕的裝置觸控板）。 因此，cHTML 不支援下列：  
  
-   JPEG 影像。  
  
-   資料表。  
  
-   影像對應。  
  
-   多個字元的字型和樣式。  
  
-   背景色彩與影像。  
  
-   畫面格。  
  
-   樣式表。  
  
 <xref:System.Web.UI.ChtmlTextWriter>類別衍生自<xref:System.Web.UI.Html32TextWriter>類別和其功能的大部分由提供<xref:System.Web.UI.Html32TextWriter>和基底類別之所有標記的文字寫入器，也就是<xref:System.Web.UI.HtmlTextWriter>類別。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立一個名為類別`CustomChtmlTextWriter`衍生自<xref:System.Web.UI.ChtmlTextWriter>類別。 它會建立兩個建構函式，並會覆寫<xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A>方法，即可避免`bgcolor`寫入至輸出資料流的樣式屬性<xref:System.Web.UI.ChtmlTextWriter>物件。 它也會建立一個名為類別`ChtmlCustomPageAdapter`定義一個方法， `CreateCustomChtmlTextWriter`，這會建立並傳回的執行個體`CustomChtmlTextWriter`類別。 `CustomChtmlTextWriter`然後呈現 cHTML 內容頁面，即可搭配使用的 cHTML 標記的瀏覽器的裝置。  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ChtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.ChtmlTextWriter" Usage="new System.Web.UI.ChtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">呈現標記內容的 <see cref="T:System.IO.TextWriter" />。</param>
        <summary>使用縮排行的 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 常數，初始化 <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ChtmlTextWriter>類別具有兩個建構函式，這是標準的所有直接或間接衍生自的類別<xref:System.Web.UI.HtmlTextWriter>類別。  
  
 <xref:System.Web.UI.ChtmlTextWriter.%23ctor%2A>的執行個體的建構函式<xref:System.IO.TextWriter>類別做為參數，會呼叫第二個建構函式，並將它傳遞兩個參數值：  
  
-   <xref:System.IO.TextWriter>。  
  
-   中指定的字串值<xref:System.Web.UI.HtmlTextWriter.DefaultTabString>欄位，定義定位間距所使用的 XHTML 文字寫入器。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立一個名為類別`ChtmlCustomPageAdapter`定義一個方法，並`CreateCustomChtmlTextWriter`，這會建立並傳回的執行個體`CustomChtmlTextWriter`類別。 `CustomChtmlTextWriter`然後呈現 cHTML 內容頁來搭配使用的 cHTML 標記的瀏覽器的裝置。  
  
 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.UI.ChtmlTextWriter>類別。  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ChtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.ChtmlTextWriter" Usage="new System.Web.UI.ChtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">呈現標記內容的 <see cref="T:System.IO.TextWriter" />。</param>
        <param name="tabString"><see cref="P:System.Web.UI.HtmlTextWriter.Indent" /> 中定義的空格數目。</param>
        <summary>使用指定的行縮排，初始化 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ChtmlTextWriter.%23ctor%2A>的這兩個執行個體的建構函式<xref:System.IO.TextWriter>類別和字串做為參數，呼叫<xref:System.Web.UI.Html32TextWriter>建立的執行個體時，使用相同的參數建構函式<xref:System.Web.UI.ChtmlTextWriter>類別。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立名為的自訂類別`CustomChtmlTextWriter`衍生自<xref:System.Web.UI.ChtmlTextWriter>類別。 它會建立兩個建構函式，可用來建立自訂類別的執行個體使用相同的模式做為所有的類別衍生，直接或間接從<xref:System.Web.UI.HtmlTextWriter>類別。  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="abstract member AddRecognizedAttribute : string * string -&gt; unit&#xA;override this.AddRecognizedAttribute : string * string -&gt; unit" Usage="chtmlTextWriter.AddRecognizedAttribute (elementName, attributeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">要加入屬性的 cHTML 項目。</param>
        <param name="attributeName">要加入至 <paramref name="elementName" /> 的屬性。</param>
        <summary>將屬性加入至 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 物件的 cHTML 項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute%2A>方法會將屬性加入至 cHTML 項目。 可辨識的屬性會儲存在可辨認的屬性<xref:System.Collections.Hashtable>的集合<xref:System.Web.UI.ChtmlTextWriter>所參考的物件<xref:System.Web.UI.ChtmlTextWriter.RecognizedAttributes%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="GlobalSuppressedAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable GlobalSuppressedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable GlobalSuppressedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property GlobalSuppressedAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ GlobalSuppressedAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalSuppressedAttributes : System.Collections.Hashtable" Usage="System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得無法呈現在 cHTML 項目上、全域隱藏屬性的 <see cref="T:System.Collections.Hashtable" /> 物件。</summary>
        <value>全域隱藏 cHTML 屬性的 <see cref="T:System.Collections.Hashtable" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下列清單顯示時的新執行個體所設定的全域隱藏的屬性<xref:System.Web.UI.ChtmlTextWriter>建立類別。  
  
|||  
|-|-|  
|`onclick`|`onmousemove`|  
|`ondblclick`|`onmouseout`|  
|`onmousedown`|`onkeypress`|  
|`onmouseup`|`onkeydown`|  
|`onmouseover`|`onkeyup`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="chtmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">要呈現的 cHTML 屬性。</param>
        <param name="value">要指派至 <paramref name="name" /> 的值。</param>
        <param name="key">與 <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 相關聯的 <paramref name="name" />。</param>
        <summary>判斷指定的 cHTML 屬性和其值是否在提出要求的網頁上呈現。 您可以從 <see cref="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> 類別衍生的類別中覆寫 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 方法，篩選出不要在支援 cHTML 之裝置上呈現的屬性。</summary>
        <returns><see langword="true" /> 表示將屬性及其值寫入 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 輸出資料流，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，<xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A>方法會讓全域隱藏的屬性中所列<xref:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes%2A>屬性和項目專用、 隱藏的屬性中所列<xref:System.Web.UI.ChtmlTextWriter.SuppressedAttributes%2A>屬性寫入至輸出資料流。 您可以覆寫行為<xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A>衍生自的類別中的方法<xref:System.Web.UI.ChtmlTextWriter>類別。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用自訂的類別會覆寫<xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A>方法，即可避免`bgcolor`寫入 cHTML 輸出資料流的屬性。 然後它會呼叫基底所提供的功能<xref:System.Web.UI.ChtmlTextWriter.OnAttributeRender%2A>方法從<xref:System.Web.UI.ChtmlTextWriter>類別，以確保使用其預設行為，太。  
  
 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.UI.ChtmlTextWriter>類別。  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/cs/chtmltextwriter.cs#2)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample4/vb/chtmltextwriter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="chtmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">字串，包含要呈現的樣式屬性名稱。</param>
        <param name="value">字串，包含要指派給 <paramref name="name" /> 的值。</param>
        <param name="key">與 <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 相關聯的 <paramref name="name" />。</param>
        <summary>判斷指定的 cHTML 標記樣式屬性及其值是否可以在目前的標記項目中呈現。</summary>
        <returns>如果可以呈現樣式，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ChtmlTextWriter.OnStyleAttributeRender%2A>方法會傳回`false`當`key`等於<xref:System.Web.UI.HtmlTextWriterStyle.TextDecoration>欄位，而且值是`"line-through"`。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected override bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="chtmlTextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">字串，包含要呈現的 cHTML 項目名稱。</param>
        <param name="key">與 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 相關聯的 <paramref name="name" />。</param>
        <summary>判斷指定的 cHTML 標記項目是否在提出要求的網頁上呈現。</summary>
        <returns>如果可以呈現指定的 cHTML 標記項目，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 CHTML 項目是否`span`項目，<xref:System.Web.UI.ChtmlTextWriter.OnTagRender%2A>方法會傳回`false`。 針對所有其他標記，它會傳回`true`。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      </Docs>
    </Member>
    <Member MemberName="RecognizedAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable RecognizedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable RecognizedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RecognizedAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ RecognizedAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RecognizedAttributes : System.Collections.Hashtable" Usage="System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得可呈現在 cHTML 項目上、已辨識屬性的 <see cref="T:System.Collections.Hashtable" /> 物件。</summary>
        <value>已辨識 cHTML 屬性的 <see cref="T:System.Collections.Hashtable" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute%2A>方法來加入已辨識屬性的可辨識的屬性集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveRecognizedAttribute : string * string -&gt; unit&#xA;override this.RemoveRecognizedAttribute : string * string -&gt; unit" Usage="chtmlTextWriter.RemoveRecognizedAttribute (elementName, attributeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">要移除屬性的 cHTML 項目。</param>
        <param name="attributeName">要從 <paramref name="elementName" /> 移除的屬性。</param>
        <summary>移除 <see cref="T:System.Web.UI.ChtmlTextWriter" /> 物件之 cHTML 項目的屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute%2A>方法會移除的 cHTML 項目中的屬性。 可辨識的屬性會從已辨識的屬性中移除<xref:System.Collections.Hashtable>的集合<xref:System.Web.UI.ChtmlTextWriter>所參考的物件<xref:System.Web.UI.ChtmlTextWriter.RecognizedAttributes%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SuppressedAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable SuppressedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable SuppressedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SuppressedAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ SuppressedAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SuppressedAttributes : System.Collections.Hashtable" Usage="System.Web.UI.ChtmlTextWriter.SuppressedAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得未呈現在 cHTML 項目上、使用者定義之全域隱藏屬性的 <see cref="T:System.Collections.Hashtable" /> 物件。</summary>
        <value>隱藏 cHTML 屬性的 <see cref="T:System.Collections.Hashtable" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute%2A>方法，將屬性加入至隱藏的屬性集合。  
  
 下列清單顯示已為隱藏的預設屬性`div`項目時的新執行個體<xref:System.Web.UI.ChtmlTextWriter>建立類別。  
  
|||  
|-|-|  
|`accesskey`|`gridlines`|  
|`cellspacing`|`rules`|  
|`cellpadding`||  
  
 下列清單顯示已為隱藏的預設屬性`span`項目時的新執行個體<xref:System.Web.UI.ChtmlTextWriter>建立類別。  
  
|||  
|-|-|  
|`cellspacing`|`gridlines`|  
|`cellpadding`|`rules`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.GlobalSuppressedAttributes" />
        <altmember cref="P:System.Web.UI.ChtmlTextWriter.RecognizedAttributes" />
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public override void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBreak();" />
      <MemberSignature Language="F#" Value="override this.WriteBreak : unit -&gt; unit" Usage="chtmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see langword="br" /> 項目寫入 cHTML 輸出資料流中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.ChtmlTextWriter.WriteBreak%2A>cHMTL 之資料流的方法來插入行中斷。  
  
   
  
## Examples  
 本節包含兩個程式碼範例。 第一個程式碼範例示範如何建立 cHTML 類別和自訂屬性。 第二個程式碼範例示範如何在網頁上使用的自訂類別。  
  
 若要使用自訂`ChtmlSimplelabelAdapter`配接器，將下列程式碼加入其中一個適當全機器的檔案的子目錄中的.NET Framework 組態目錄或自訂的瀏覽器檔案 App_Browsers 底下目錄中的 Web 瀏覽器應用程式的根目錄。  
  
```  
<controlAdapters>  
   <adapter controlType="AspNet.Samples.SimpleLabel"  
   adapterType="AspNet.Samples.ChtmlSimpleLabelAdapter" />  
</controlAdapters>  
```  
  
 下列程式碼範例示範如何建立名為 cHTML 配接器類別`ChtmlSimpleLabelAdapter`類別，名為`SimpleLabel`。 它會建立自訂`Control`屬性，可讓`ChtmlSimpleLabelAdapter`類別來存取的成員`SimpleLabel`類別，然後按一下 覆寫<xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A>方法。 在 覆寫時，會發生下列動作：  
  
-   它會建立參照<xref:System.Web.UI.ChtmlTextWriter>名為的物件`w`，其係衍生自<xref:System.Web.UI.HtmlTextWriter>物件，傳遞做為`writer`參數<xref:System.Web.UI.WebControls.Adapters.WebControlAdapter.Render%2A>方法。  
  
-   它會建立字串，並將它設定為等於`SimpleLabel.Text`值。  
  
-   它會呼叫<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A>方法，以套用所定義的樣式<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>屬性寫入 cHTML 標籤的輸出資料流。  
  
-   它會寫入`Text`屬性值的資料流和關閉的樣式區塊，藉由呼叫<xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A>方法。  
  
-   它會呼叫<xref:System.Web.UI.ChtmlTextWriter.WriteBreak%2A>方法以呈現`br`之後的文字和樣式轉譯的輸出資料流的項目。  
  
 [!code-csharp[System.Web.UI.ChtmlTextWriter_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/cs/chtmltestlabel.cs#2)]
 [!code-vb[System.Web.UI.ChtmlTextWriter_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/VB/chtmltestlabel.vb#2)]  
  
 下列範例示範如何使用`SimpleLabel`在網頁中的類別。  
  
 [!code-aspx-csharp[System.Web.UI.ChtmlTextWriter_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/cs/chtmltestlabel.aspx#3)]
 [!code-aspx-vb[System.Web.UI.ChtmlTextWriter_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ChtmlTextWriter_Sample1/VB/chtmltestlabel.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public override void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ChtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEncodedText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteEncodedText : string -&gt; unit" Usage="chtmlTextWriter.WriteEncodedText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">要編碼及寫入輸出資料流的文字字串。</param>
        <summary>為要求的裝置編碼指定的文字，然後將其寫入輸出資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果文字參數傳遞至<xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A>方法是`null`或長度為零，則不寫入任何字串。  
  
 使用<xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A>方法，當字串包含角括弧 (\<或 >) 或連字號 (&) 和您想要確保它們會正確呈現在提出要求的裝置。  
  
 <xref:System.Web.UI.ChtmlTextWriter.WriteEncodedText%2A>方法會使用基底類別的<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ChtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
  </Members>
</Type>