<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IHierarchyData.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54401bd445a98e07a176f0bdd5128240d058c8310.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4401bd445a98e07a176f0bdd5128240d058c8310</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.IHierarchyData">
          <source>Exposes a node of a hierarchical data structure, including the node object and some properties that describe characteristics of the node.</source>
          <target state="translated">公開階層式資料結構的節點，包括節點物件和描述節點特性的部分屬性。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.IHierarchyData">
          <source>Objects that implement the <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> interface can be contained in <ph id="ph2">&lt;see cref="T:System.Web.UI.IHierarchicalEnumerable" /&gt;</ph> collections, and are used by ASP.NET site navigation and data source controls.</source>
          <target state="translated">實作 <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> 介面的物件可以包含在 <ph id="ph2">&lt;see cref="T:System.Web.UI.IHierarchicalEnumerable" /&gt;</ph> 集合中，供 ASP.NET 網站巡覽和資料來源控制項使用。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface is implemented by classes that represent nodes of a hierarchical structure, and track the hierarchical relationships to their parent and child nodes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>介面由代表節點的階層式結構，並將追蹤到其父和子節點的階層式關聯性類別實作。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>Classes that implement the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface can be contained in collections that implement the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> interface.</source>
          <target state="translated">類別可實作<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>介面實作的集合中可包含<ph id="ph2">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface with a class that wraps a <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> object.</source>
          <target state="translated">下列程式碼範例示範如何實作<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>包裝的類別與介面<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph> class is a good example of a hierarchical data node, which the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface represents for ASP.NET hierarchical data source controls.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.FileSystemInfo&gt;</ph>類別是不錯的範例的階層式資料節點，其中<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>介面表示 ASP.NET 階層式資料來源控制項。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.IHierarchyData">
          <source>The following code example demonstrates how to recursively iterate through an <ph id="ph1">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> collection, extract the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> item from the enumerator using the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A&gt;</ph> method, and perform basic work with the data item.</source>
          <target state="translated">下列程式碼範例示範如何以遞迴方式逐一查看<ph id="ph1">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph>集合中，擷取<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>來自使用列舉值的項目<ph id="ph3">&lt;xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A&gt;</ph>方法，並執行基本工作，與資料的項目。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IHierarchyData.GetChildren">
          <source>Gets an enumeration object that represents all the child nodes of the current hierarchical node.</source>
          <target state="translated">取得列舉物件，表示目前階層式節點的所有子節點。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IHierarchyData.GetChildren">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchicalEnumerable" /&gt;</ph> collection of child nodes of the current hierarchical node.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchicalEnumerable" /&gt;</ph> 集合，包含目前階層式節點的子節點。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetChildren">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> property to determine whether the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> node has child nodes.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph>屬性來判斷是否<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>節點有子節點。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetChildren">
          <source>The following code example demonstrates how to check the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> property to determine whether the current hierarchical data node has child nodes, and retrieve them using the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範如何檢查<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph>屬性來判斷目前的階層式資料節點是否具有子節點，並將其擷取使用<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetChildren">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>Gets an <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> object that represents the parent node of the current hierarchical node.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> 物件，表示目前階層式節點的父節點。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> object that represents the parent node of the current hierarchical node.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> 物件，表示目前階層式節點的父節點。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface does not define a HasParent convenience property, so callers must check the return value of the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph> method for <ph id="ph3">`null`</ph> to determine whether the current <ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> node is the root node of the hierarchical data structure to which the node belongs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>介面不會定義 HasParent 方便的屬性，因此呼叫端必須檢查傳回值<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph>方法<ph id="ph3">`null`</ph>來判斷是否目前<ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>節點是根節點的階層式資料節點所屬的結構。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph> method in a class that implements the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface.</source>
          <target state="translated">下列程式碼範例示範如何實作<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph>方法中實作的類別<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>The <ph id="ph1">`FileSystemHierarchyData`</ph> class wraps a <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> object, and the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph> method implementation checks the type of the <ph id="ph4">&lt;xref:System.IO.FileSystemInfo&gt;</ph> object, and returns the appropriate parent object based on the type.</source>
          <target state="translated"><ph id="ph1">`FileSystemHierarchyData`</ph>類別會包裝<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>物件，而<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.GetParent%2A&gt;</ph>方法實作會檢查的類型<ph id="ph4">&lt;xref:System.IO.FileSystemInfo&gt;</ph>物件，並傳回適當的父物件類型為基礎。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.IHierarchyData.GetParent">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>介面和<ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>Indicates whether the hierarchical data node that the <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> object represents has any child nodes.</source>
          <target state="translated">指出 <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> 物件所表示的階層式資料節點是否有任何子節點。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current node has child nodes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果目前節點有子節點，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> property is a convenience property that enables callers to avoid checking the return value of the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph> method for <ph id="ph3">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph>屬性是方便的屬性，可讓呼叫端若要避免檢查傳回的值<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph>方法<ph id="ph3">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> property returns <ph id="ph2">`true`</ph>, call the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph> method to retrieve an <ph id="ph4">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> collection of child nodes.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph>屬性會傳回<ph id="ph2">`true`</ph>，呼叫<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.GetChildren%2A&gt;</ph>方法來擷取<ph id="ph4">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph>子節點的集合。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>The following code example demonstrates how an ASP.NET hierarchical data-bound control uses an <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object in a recursive data-binding method.</source>
          <target state="translated">下列程式碼範例示範如何使用 ASP.NET 階層式資料繫結控制項<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>遞迴資料繫結方法中的物件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>The items in an <ph id="ph1">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph> collection are enumerated, and for each an <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object is retrieved using the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A&gt;</ph> method.</source>
          <target state="translated">中的項目<ph id="ph1">&lt;xref:System.Web.UI.IHierarchicalEnumerable&gt;</ph>集合會列舉，以及對於每個<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>使用擷取物件<ph id="ph3">&lt;xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph> property is checked to determine whether to recurse.</source>
          <target state="translated">最後，<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.HasChildren%2A&gt;</ph>屬性就會檢查以判斷是否遞迴。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.HasChildren">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.HierarchicalDataBoundControl&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Web.UI.WebControls.HierarchicalDataBoundControl&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>Gets the hierarchical data node that the <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> object represents.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> 物件所表示的階層式資料節點。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> hierarchical data node object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 階層式資料節點物件。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>While many classes that represent hierarchical data nodes, such as the <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph> class, implement the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface directly, other classes only act as a wrapper for a class that does not implement the interface.</source>
          <target state="translated">雖然許多類別，代表階層式資料節點，例如<ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph>類別，實作<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>介面直接、 其他類別只做為類別未實作介面的包裝函式。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Item%2A&gt;</ph> property is provided for these design situations, when business objects are functionally equivalent to an <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object but cannot be redesigned easily.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Item%2A&gt;</ph>功能上相當於商務物件時，這些設計情況下，提供屬性<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>物件，但無法輕易地重新設計。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>The following code example demonstrates how to access <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> properties, check the type of an <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object using the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph> property, and cast the object to perform more type-specific operations.</source>
          <target state="translated">下列程式碼範例示範如何存取<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>屬性，請檢查類型<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>物件使用<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph>屬性，並轉換的物件執行更多特定類型的作業。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Item">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>Gets the hierarchical path of the node.</source>
          <target state="translated">取得節點的階層式路徑。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that identifies the hierarchical path relative to the current node.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>，識別相對於目前節點的階層式路徑。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph> property can be passed to the <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A&gt;</ph> method to retrieve the <ph id="ph3">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph> object that corresponds to the node identified by <ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>屬性可以傳遞至<ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A&gt;</ph>方法來擷取<ph id="ph3">&lt;xref:System.Web.UI.HierarchicalDataSourceView&gt;</ph>物件對應於所識別的節點<ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph> property should not contain any sensitive information about the host environment, because it might be rendered to the client in a data-bound control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>屬性應該包含主機環境中，任何機密資訊，因為它可能會在資料繫結控制項中的用戶端轉譯。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>The following code example demonstrates how to implement the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph> property in a class that implements the <ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface.</source>
          <target state="translated">下列程式碼範例示範如何實作<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>中實作的類別屬性<ph id="ph2">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>The <ph id="ph1">`FileSystemHierarchyData`</ph> class wraps a <ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph> object, and the <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph> property implementation returns its file system path.</source>
          <target state="translated"><ph id="ph1">`FileSystemHierarchyData`</ph>類別會包裝<ph id="ph2">&lt;xref:System.IO.FileSystemInfo&gt;</ph>物件，而<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData.Path%2A&gt;</ph>屬性實作會傳回其檔案系統路徑。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Path">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>介面和<ph id="ph2">&lt;xref:System.Web.UI.HierarchicalDataSourceControl&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>Gets the name of the type of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> contained in the <ph id="ph2">&lt;see cref="P:System.Web.UI.IHierarchyData.Item" /&gt;</ph> property.</source>
          <target state="translated">取得包含在 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 屬性中 <ph id="ph2">&lt;see cref="P:System.Web.UI.IHierarchyData.Item" /&gt;</ph> 的型別。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>The name of the type of object that the <ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> object represents.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.IHierarchyData" /&gt;</ph> 物件所表示之物件的型別名稱。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph> property does not return the <ph id="ph2">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph> of the object represented in an <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph>屬性不會傳回<ph id="ph2">&lt;xref:System.Type?displayProperty=nameWithType&gt;</ph>中表示之物件<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>It returns a name used by data-bound controls to differentiate between items in a hierarchy that have different bindable properties.</source>
          <target state="translated">它會傳回資料繫結控制項用於區別階層中有不同的繫結屬性的項目之間的名稱。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>The following code example demonstrates how to write the basic <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> properties to an <ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph> stream, then check the type of an <ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> object using the <ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph> property and cast the object to perform more type-specific operations.</source>
          <target state="translated">下列程式碼範例示範如何撰寫基本<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph>串流處理，然後檢查的類型<ph id="ph3">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>物件使用<ph id="ph4">&lt;xref:System.Web.UI.IHierarchyData.Type%2A&gt;</ph>屬性和物件以執行作業的詳細型別而異的轉換。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.IHierarchyData.Type">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph> interface.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Web.UI.IHierarchyData&gt;</ph>介面。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>