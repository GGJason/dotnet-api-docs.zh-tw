<Type Name="ConflictOptions" FullName="System.Web.UI.ConflictOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dff7dbbe50196456c8014e8d0eee632fceedaa6b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37588923" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ConflictOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConflictOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ConflictOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConflictOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConflictOptions" />
  <TypeSignature Language="F#" Value="type ConflictOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="35017-101">決定 ASP.NET 資料來源控制項更新或刪除資料時，應以何種方式處理資料衝突。</span>
      <span class="sxs-lookup">
        <span data-stu-id="35017-101">Determines how ASP.NET data source controls handle data conflicts when updating or deleting data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="35017-102">並行存取控制是一種技術，來控制如何讀取及多個用戶端存取和管理相同的資料時，存放區中變更資料的資料存放區使用。</span><span class="sxs-lookup"><span data-stu-id="35017-102">Concurrency control is a technique that data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</span></span> <span data-ttu-id="35017-103">例如，一個用戶端讀取資料，並提供給使用者，而另一個用戶端讀取相同的資料，並提供給不同的使用者。</span><span class="sxs-lookup"><span data-stu-id="35017-103">For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user.</span></span> <span data-ttu-id="35017-104">如果兩個使用者更新的資料，並將它提交至資料存放區，可能會發生一些未預期的結果，因為用戶端可能會更新為相同的資料不同的值。</span><span class="sxs-lookup"><span data-stu-id="35017-104">If both users update the data and submit it to the data storage, some unexpected result might occur, because the clients might update different values for the same data.</span></span> <span data-ttu-id="35017-105">這會視為衝突。</span><span class="sxs-lookup"><span data-stu-id="35017-105">This is considered a conflict.</span></span>  
  
 <span data-ttu-id="35017-106">`ConflictDetection` ASP.NET 資料來源控制項所定義的屬性用來判斷當基礎資料儲存區使用開放式並行存取和刪除或更新作業已控制處理基礎資料儲存區中的資料衝突的方式執行。</span><span class="sxs-lookup"><span data-stu-id="35017-106">The `ConflictDetection` property that is defined for ASP.NET data source controls is used to determine how a control handles data conflicts in the underlying data storage when the underlying data storage is using optimistic concurrency and a delete or update operation is performed.</span></span>  
  
 <span data-ttu-id="35017-107">根據預設，`ConflictDetection`屬性設定為 OverwriteChanges，這表示資料來源控制項將會覆寫資料來源控制項第一次讀取的資料列和資料列更新的時間之間的資料列所做的變更。</span><span class="sxs-lookup"><span data-stu-id="35017-107">By default, the `ConflictDetection` property is set to OverwriteChanges, which means the data source control will overwrite any changes made to a data row between the time the data source control first read data from the row and the time that the row is updated.</span></span> <span data-ttu-id="35017-108">主索引鍵用來尋找資料列被更新或刪除，但會執行任何其他比較的資料。</span><span class="sxs-lookup"><span data-stu-id="35017-108">The primary key is used for locating the data row that will be updated or deleted, but no other comparison of the data is performed.</span></span> <span data-ttu-id="35017-109">如果資料來源控制項設定為使用 CompareAllValues 選項，不過，控制權會傳遞中的原始資料`oldValues`的集合`Update`和`Delete`方法，讓您可以撰寫邏輯，以更新或刪除資料，只有當這些值符合目前在資料存放區中的值。</span><span class="sxs-lookup"><span data-stu-id="35017-109">If the data source control is configured to use the CompareAllValues option, however, the control passes the original data in the `oldValues` collections of the `Update` and `Delete` methods so that you can write logic to update or delete data only if these values match the values currently in the data storage.</span></span> <span data-ttu-id="35017-110">相符的值會指出資料，其讀取的時間之後並未變更。</span><span class="sxs-lookup"><span data-stu-id="35017-110">The matching values indicate that the data has not changed since the time it was read.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
  </Docs>
  <Members>
    <Member MemberName="CompareAllValues">
      <MemberSignature Language="C#" Value="CompareAllValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions CompareAllValues = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberSignature Language="VB.NET" Value="CompareAllValues" />
      <MemberSignature Language="C++ CLI" Value="CompareAllValues" />
      <MemberSignature Language="F#" Value="CompareAllValues = 1" Usage="System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="35017-111">資料來源控制項會使用 <see langword="Update" /> 和 <see langword="Delete" /> 方法的 <paramref name="oldValues" /> 集合，判斷資料是否已被其他程序變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35017-111">A data source control uses the <paramref name="oldValues" /> collection of the <see langword="Update" /> and <see langword="Delete" /> methods to determine whether the data has been changed by another process.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions OverwriteChanges = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberSignature Language="F#" Value="OverwriteChanges = 0" Usage="System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="35017-112">資料來源控制項會將資料列中的所有值覆寫成自己給此資料列的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="35017-112">A data source control overwrites all values in a data row with its own values for the row.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>