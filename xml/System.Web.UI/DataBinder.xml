<Type Name="DataBinder" FullName="System.Web.UI.DataBinder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b377786fb7b19c08a73b9c0d28446deab3dc520" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52224749" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBinder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBinder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataBinder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBinder sealed" />
  <TypeSignature Language="F#" Value="type DataBinder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>支援快速應用程式開發 (RAD) 設計工具產生和剖析資料繫結運算式語法。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用多載的靜態<xref:System.Web.UI.DataBinder.Eval%2A>ASP.NET 網頁中的資料繫結語法中的這個類別的方法。 這提供您更輕鬆的語法，來處理與標準資料繫結。 不過，因為`DataBinder.Eval`提供自動類型轉換可能會導致效能變慢。  
  
 如需 ASP.NET 資料繫結、 運算式和語法的詳細資訊，請參閱[繫結至資料庫](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)並[資料繫結運算式概觀](https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)。  
  
 從.NET Framework 4.5 開始，您可以使用模型繫結來簡化一些您已透過資料繫結在舊版本中執行的工作。 使用具有 Web Form 模型繫結的教學課程系列，請參閱 <<c0> [ 模型繫結和 Web Form](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。  
  
   
  
## Examples  
 下列範例會使用靜態<xref:System.Web.UI.DataBinder.GetPropertyValue%2A>方法來填入的欄位<xref:System.Web.UI.WebControls.Repeater>使用控制<xref:System.Collections.ArrayList>的`Product`物件。 <xref:System.Web.UI.DataBinder.Eval%2A>方法可以套用相同的語法，但它會執行的速度一樣快。  
  
 這個範例會使用自訂`Product`類別會公開字串`Model`屬性和數值`UnitPrice`屬性。  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.DataBinder/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.DataBinder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.DataBinder/VB/Default.aspx#1)]  
  
 下列程式碼是自訂`Product`類別。 此程式碼應該包含在個別的類別檔案在 App_Code 目錄中，例如 Product.cs 或 Product.vb。  
  
 [!code-csharp[System.Web.UI.DataBinder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.DataBinder/CS/App_Code/Product.cs#2)]
 [!code-vb[System.Web.UI.DataBinder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.DataBinder/VB/App_Code/Product.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.XPathBinder" />
    <altmember cref="T:System.Web.UI.IBindableTemplate" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBinder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.DataBinder" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public static bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinder.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.DataBinder.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值指出是否在執行階段啟用資料快取。</summary>
        <value>如果啟用 <see cref="T:System.Web.UI.DataBinder" /> 類別的快取則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Eval">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>使用反映在 Run Time 時針對物件剖析並評估資料繫結運算式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 從.NET Framework 4.5 開始，您可以使用模型繫結來簡化一些您已透過資料繫結在舊版本中執行的工作。 使用具有 Web Form 模型繫結的教學課程系列，請參閱 <<c0> [ 模型繫結和 Web Form](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static object Eval (object container, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Eval(object container, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.Eval(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, expression As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eval(System::Object ^ container, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.Eval (container, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">運算式所據以評估的物件參考。 這在網頁的指定語言中必須是有效的物件識別項。</param>
        <param name="expression">巡覽路徑，從 <paramref name="container" /> 物件到要放置在繫結控制項屬性中的公用屬性值。 它必須是以句號分隔的屬性或欄位名稱的字串，例如 C# 中的 <c>Tables[0].DefaultView.[0].Price</c> 或 Visual Basic 中的 <c>Tables(0).DefaultView.(0).Price</c>。</param>
        <summary>在執行階段評估資料繫結運算式。</summary>
        <returns>
          <see cref="T:System.Object" /> 執行個體，從資料繫結運算式的評估產生。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值`expression`參數必須評估為公用屬性。  
  
 快速應用程式開發 (RAD) 設計工具，例如 Visual Studio 中建立資料繫結時，會自動呼叫這個方法。 您可以也使用它以宣告方式簡化轉換為文字字串。 若要這樣做，您使用`<%#  %>`運算式語法，因為標準的 ASP.NET 資料繫結中使用。  
  
 資料繫結到樣板化的清單中的控制項時，這個方法會特別有用。  
  
> [!NOTE]
>  因為這個方法會執行晚期繫結評估，使用反映在執行階段，它可能會造成效能顯著降低相較於標準的 ASP.NET 資料繫結語法。  
  
 清單的任何 Web 控制項，例如<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>， <xref:System.Web.UI.WebControls.DataList>，或<xref:System.Web.UI.WebControls.Repeater>，`container`應該`Container.DataItem`。 如果您要繫結 頁面上，針對`container`應該是`Page`。  
  
 從.NET Framework 4.5 開始，您可以使用模型繫結來簡化一些您已透過資料繫結在舊版本中執行的工作。 使用具有 Web Form 模型繫結的教學課程系列，請參閱 <<c0> [ 模型繫結和 Web Form](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。  
  
   
  
## Examples  
 下列範例示範如何使用`Eval`方法來繫結資料<xref:System.Web.UI.WebControls.Repeater>控制項。 它需要名為 Product 的資料類別。  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/product.cs#1)]
 [!code-vb[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/product.vb#1)]  
  
 程式碼後置檔案載入測試資料，並以該資料繫結<xref:System.Web.UI.WebControls.Repeater>控制項。  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts.aspx.cs#2)]
 [!code-vb[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts.aspx.vb#2)]  
  
 中的宣告式語法<xref:System.Web.UI.WebControls.Repeater>控制項，您使用<xref:System.Web.UI.DataBinder.Eval%2A>方法`Container.DataItem`如`container`參數。  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts3.aspx#3)]  
  
 或者，您可以呼叫`Eval`函式，並不包含`container`參數。  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts4.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" /> 為 <see langword="null" />，或在修剪後為空字串。</exception>
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="T:System.Web.UI.DataBinding" />
        <altmember cref="T:System.Web.UI.XPathBinder" />
        <altmember cref="T:System.Web.UI.IBindableTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static string Eval (object container, string expression, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Eval(object container, string expression, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, expression As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Eval(System::Object ^ container, System::String ^ expression, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.Eval (container, expression, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">運算式所據以評估的物件參考。 這在網頁的指定語言中必須是有效的物件識別項。</param>
        <param name="expression">巡覽路徑，從 <paramref name="container" /> 物件到要放置在繫結控制項屬性中的公用屬性值。 它必須是以句號分隔的屬性或欄位名稱的字串，例如 C# 中的 <c>Tables[0].DefaultView.[0].Price</c> 或 Visual Basic 中的 <c>Tables(0).DefaultView.(0).Price</c>。</param>
        <param name="format">.NET Framework 格式字串 (如同 <see cref="M:System.String.Format(System.String,System.Object)" /> 所使用的字串)，會將資料繫結運算式傳回的 <see cref="T:System.Object" /> 執行個體轉換成 <see cref="T:System.String" /> 物件。</param>
        <summary>在執行階段評估資料繫結運算式，並將結果格式化為字串。</summary>
        <returns>
          <see cref="T:System.String" /> 物件，是評估資料繫結運算式並將它轉換成字串類型的結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值`expression`必須評估為公用屬性。  
  
 如需.NET Framework 中的格式字串的詳細資訊，請參閱[格式化型別](~/docs/standard/base-types/formatting-types.md)。  
  
 快速應用程式開發 (RAD) 設計工具，例如 Visual Studio 中建立資料繫結時，會自動呼叫這個方法。 您也可以使用它以宣告方式來轉換<xref:System.Object>所產生的資料繫結運算式<xref:System.String>。  若要以宣告方式使用方法時，使用`<%#   %>`運算式語法，因為標準的 ASP.NET 資料繫結中使用。  
  
 資料繫結到樣板化的清單中的控制項時，這個方法會特別有用。  
  
> [!NOTE]
>  因為這個方法會執行晚期繫結評估，使用反映在執行階段，它可能會造成效能顯著降低相較於標準的 ASP.NET 資料繫結語法。 請謹慎，使用這個方法，特別是當格式化字串就不需要。  
  
 清單的任何 Web 控制項，例如<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>， <xref:System.Web.UI.WebControls.DataList>，或<xref:System.Web.UI.WebControls.Repeater>，`container`應該`Container.DataItem`。 如果您要繫結 頁面上，針對`container`應該是`Page`。  
  
 從.NET Framework 4.5 開始，您可以使用模型繫結來簡化一些您已透過資料繫結在舊版本中執行的工作。 使用具有 Web Form 模型繫結的教學課程系列，請參閱 <<c0> [ 模型繫結和 Web Form](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)。  
  
   
  
## Examples  
 下列範例示範如何使用`Eval`方法來繫結資料<xref:System.Web.UI.WebControls.Repeater>控制項。 它需要名為 Product 的資料類別。  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/product.cs#1)]
 [!code-vb[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/product.vb#1)]  
  
 程式碼後置檔案載入測試資料，並以該資料繫結<xref:System.Web.UI.WebControls.Repeater>控制項。  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts.aspx.cs#2)]
 [!code-vb[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts.aspx.vb#2)]  
  
 中的宣告式語法<xref:System.Web.UI.WebControls.Repeater>控制項，您使用<xref:System.Web.UI.DataBinder.Eval%2A>方法`Container.DataItem`如`container`參數。  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts3.aspx#3)]  
  
 或者，您可以呼叫`Eval`函式，並不包含`container`參數。  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts4.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.XPathBinder" />
        <altmember cref="T:System.Web.UI.IBindableTemplate" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">在 .NET 中將類型格式化</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取物件的已宣告資料項目。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public static object GetDataItem (object container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDataItem(object container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetDataItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataItem (container As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetDataItem(System::Object ^ container);" />
      <MemberSignature Language="F#" Value="static member GetDataItem : obj -&gt; obj" Usage="System.Web.UI.DataBinder.GetDataItem container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container">運算式所據以評估的物件參考。 這在網頁的指定語言中必須是有效的物件識別項。</param>
        <summary>擷取物件的已宣告資料項目。</summary>
        <returns>物件，表示容器的已宣告資料項目。 如果找不到任何資料項目或容器評估成 <see langword="null" />，則傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29>方法，並忽略其`foundDataItem`參數時傳回的結果。  
  
 在下列其中一種識別物件的資料項目。 如果容器物件實作<xref:System.Web.UI.IDataItemContainer>介面，<xref:System.Web.UI.IDataItemContainer.DataItem%2A>屬性會識別資料的項目，並傳回其值。 否則，方法會嘗試解析，並傳回一個名為"DataItem"的容器屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public static object GetDataItem (object container, out bool foundDataItem);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDataItem(object container, [out] bool&amp; foundDataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataItem (container As Object, ByRef foundDataItem As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetDataItem(System::Object ^ container, [Runtime::InteropServices::Out] bool % foundDataItem);" />
      <MemberSignature Language="F#" Value="static member GetDataItem : obj *  -&gt; obj" Usage="System.Web.UI.DataBinder.GetDataItem (container, foundDataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="foundDataItem" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="container">運算式所據以評估的物件參考。 這在網頁的指定語言中必須是有效的物件識別項。</param>
        <param name="foundDataItem">布林值，指出資料項目是否成功解析並傳回。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>擷取物件的已宣告資料項目，指出其為成功或失敗。</summary>
        <returns>物件，表示容器的已宣告資料項目。 如果找不到任何資料項目或容器評估成 <see langword="null" />，則傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 物件的資料的項目會識別兩種方式。 如果容器物件實作<xref:System.Web.UI.IDataItemContainer>介面，<xref:System.Web.UI.IDataItemContainer.DataItem%2A>屬性識別的資料項目，而且會傳回。 否則，方法會嘗試解析，並傳回一個名為"DataItem"的容器屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIndexedPropertyValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取索引屬性的值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIndexedPropertyValue">
      <MemberSignature Language="C#" Value="public static object GetIndexedPropertyValue (object container, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetIndexedPropertyValue(object container, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIndexedPropertyValue (container As Object, expr As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetIndexedPropertyValue(System::Object ^ container, System::String ^ expr);" />
      <MemberSignature Language="F#" Value="static member GetIndexedPropertyValue : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.GetIndexedPropertyValue (container, expr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">
          <paramref name="expr" /> 所據以評估的物件參考。 這在網頁的指定語言中必須是有效的物件識別項。</param>
        <param name="expr">巡覽路徑，從 <paramref name="container" /> 物件到要放置在繫結控制項屬性中的公用屬性值。 它必須是以句號分隔的屬性或欄位名稱的字串，例如 C# 中的 <c>Tables[0].DefaultView.[0].Price</c> 或 Visual Basic 中的 <c>Tables(0).DefaultView.(0).Price</c>。</param>
        <summary>擷取指定之容器和巡覽路徑的屬性值。</summary>
        <returns>從資料繫結運算式的評估產生的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值`expr`必須評估為公用屬性。  
  
 清單的任何 Web 控制項，例如<xref:System.Web.UI.WebControls.GridView>， <xref:System.Web.UI.WebControls.DetailsView>， <xref:System.Web.UI.WebControls.DataList>，或<xref:System.Web.UI.WebControls.Repeater>，`container`應該`Container.DataItem`。 如果您要繫結 頁面上，針對`container`應該是`Page`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> 為 <see langword="null" />。  
  
\-或- 
 <paramref name="expr" /> 為 <see langword="null" /> 或空字串 ("")。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="expr" /> 不是有效的索引運算式。  
  
\-或- 
 <paramref name="expr" /> 不允許索引存取。</exception>
        <altmember cref="Overload:System.Web.UI.DataBinder.GetPropertyValue" />
      </Docs>
    </Member>
    <Member MemberName="GetIndexedPropertyValue">
      <MemberSignature Language="C#" Value="public static string GetIndexedPropertyValue (object container, string propName, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetIndexedPropertyValue(object container, string propName, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIndexedPropertyValue (container As Object, propName As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetIndexedPropertyValue(System::Object ^ container, System::String ^ propName, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetIndexedPropertyValue : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.GetIndexedPropertyValue (container, propName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">運算式所據以評估的物件參考。 這在網頁的指定語言中必須是有效的物件識別項。</param>
        <param name="propName">包含要擷取值的屬性名稱。</param>
        <param name="format">指定結果顯示格式的字串。</param>
        <summary>擷取指定之容器的指定屬性值，然後格式化結果。</summary>
        <returns>具有由 <paramref name="format" /> 所指定格式的指定屬性值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>方法會叫用<xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>方法，然後再使用<xref:System.String.Format%2A?displayProperty=nameWithType>方法，以將結果格式化為指定的`format`參數。 .NET Framework 格式字串 (例如所使用的<xref:System.String.Format%2A?displayProperty=nameWithType>) 轉換<xref:System.Object>執行個體所要的資料繫結運算式傳回<xref:System.String>物件。  
  
 會擲回的例外狀況<xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>方法套用至<xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>以及方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A>方法以宣告方式繫結至索引的值。  
  
 [!code-aspx-csharp[Classic DataBinder.Eval Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataBinder.Eval Example/CS/sourcecs.aspx#2)]
 [!code-aspx-vb[Classic DataBinder.Eval Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataBinder.Eval Example/VB/sourcevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.DataBinder.GetPropertyValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertyValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取屬性值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public static object GetPropertyValue (object container, string propName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetPropertyValue(object container, string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValue (container As Object, propName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetPropertyValue(System::Object ^ container, System::String ^ propName);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValue : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.GetPropertyValue (container, propName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">包含屬性的物件。</param>
        <param name="propName">包含要擷取值的屬性名稱。</param>
        <summary>擷取指定物件的指定屬性值。</summary>
        <returns>指定之屬性的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataBinder.GetPropertyValue%2A>方法用來擷取物件中屬性的值。  
  
   
  
## Examples  
 範例<xref:System.Web.UI.DataBinder>示範如何使用這個方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="propName" /> 為 <see langword="null" /> 或空字串 ("")。</exception>
        <exception cref="T:System.Web.HttpException">
          <paramref name="container" /> 中的物件沒有 <paramref name="propName" /> 所指定的屬性。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public static string GetPropertyValue (object container, string propName, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValue(object container, string propName, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValue (container As Object, propName As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValue(System::Object ^ container, System::String ^ propName, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValue : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.GetPropertyValue (container, propName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">包含屬性的物件。</param>
        <param name="propName">包含要擷取值的屬性名稱。</param>
        <param name="format">指定結果顯示格式的字串。</param>
        <summary>擷取指定之物件的指定屬性值，然後格式化結果。</summary>
        <returns>具有由 <paramref name="format" /> 所指定格式的指定屬性值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個版本的<xref:System.Web.UI.DataBinder.GetPropertyValue%2A>方法用來擷取和格式化的物件中的屬性值。  
  
   
  
## Examples  
 範例<xref:System.Web.UI.DataBinder>示範如何使用這個方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> 為 <see langword="null" />。  
  
\-或- 
 <paramref name="propName" /> 為 <see langword="null" /> 或空字串 ("")。</exception>
        <exception cref="T:System.Web.HttpException">
          <paramref name="container" /> 中的物件沒有 <paramref name="propName" /> 所指定的屬性。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public static bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member IsBindableType : Type -&gt; bool" Usage="System.Web.UI.DataBinder.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" />，表示要測試的資料類型。</param>
        <summary>判斷是否可以繫結指定的資料類型。</summary>
        <returns>如果是可以在控制項中自動資料繫結的類型，則為 <see langword="true" />，否則為<see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>