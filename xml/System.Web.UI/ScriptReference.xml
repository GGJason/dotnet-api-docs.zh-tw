<Type Name="ScriptReference" FullName="System.Web.UI.ScriptReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1bce24e8f28bea4725192edcc9a1bc958908e7f1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55315685" /></Metadata><TypeSignature Language="C#" Value="public class ScriptReference : System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptReference extends System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptReference" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptReference&#xA;Inherits ScriptReferenceBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptReference : System::Web::UI::ScriptReferenceBase" />
  <TypeSignature Language="F#" Value="type ScriptReference = class&#xA;    inherit ScriptReferenceBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ScriptReferenceBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>註冊 ECMAScript (JavaScript) 檔案以用於 ASP.NET 網頁。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以包含 ASP.NET 網頁上的 JavaScript 檔案，來註冊它透過<xref:System.Web.UI.ScriptReference>物件。 您可以註冊網站上的.js 檔案 （靜態指令碼檔案） 所在的指令碼檔案。 您也可以註冊指令碼檔案內嵌為組件中的資源。 在註冊之後的指令碼檔案，您可以使用其用戶端指令碼中的函式在網頁上。  
  
 若要註冊靜態指令碼檔案，設定<xref:System.Web.UI.ScriptReferenceBase.Path%2A>屬性<xref:System.Web.UI.ScriptReference>物件之檔案的相對位置。  
  
 若要註冊指令碼檔案內嵌為組件中的資源，設定<xref:System.Web.UI.ScriptReference.Assembly%2A>屬性包含檔案的組件的名稱。 然後設定<xref:System.Web.UI.ScriptReference.Name%2A>屬性設為內嵌在組件中的.js 檔案的名稱。 在此情況下，指令碼檔案必須為內嵌，並未連結。  
  
 您設定<xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A>屬性以指出是否要使用偵錯或發行指令碼的版本。  
  
 <xref:System.Web.UI.ScriptMode.Auto>值產生不同的結果，取決於它參考到獨立的指令碼檔案或組件中內嵌為資源的指令碼檔案。 獨立的指令碼檔案以定義<xref:System.Web.UI.ScriptReferenceBase.Path%2A>屬性。 必須透過存取組件參考<xref:System.Web.UI.ScriptReference.Name%2A>和<xref:System.Web.UI.ScriptReference.Assembly%2A>屬性。 結果<xref:System.Web.UI.ScriptMode.Auto>值如下所示：  
  
-   套用至獨立的指令碼檔案時，<xref:System.Web.UI.ScriptReferenceBase.Path%2A>指定屬性，則<xref:System.Web.UI.ScriptMode.Auto>值相當於<xref:System.Web.UI.ScriptMode.Release>。  
  
-   當它套用至組件中的指令碼參考<xref:System.Web.UI.ScriptMode.Auto>相當於<xref:System.Web.UI.ScriptMode.Inherit>。 當只有<xref:System.Web.UI.ScriptReference.Name%2A>指定，它用來參考指令碼。 當<xref:System.Web.UI.ScriptReference.Name%2A>而<xref:System.Web.UI.ScriptReferenceBase.Path%2A>兩者都指定了屬性，<xref:System.Web.UI.ScriptReferenceBase.Path%2A>而不是使用屬性<xref:System.Web.UI.ScriptReference.Name%2A>，但<xref:System.Web.UI.ScriptMode.Auto>值就仍然相當於<xref:System.Web.UI.ScriptMode.Inherit>。  
  
   
  
## Examples  
 下列範例示範如何參考自訂控制項，並在控制項組件中內嵌的 JavaScript 檔案。 組件會假設為網站的 [Bin] 資料夾中。 自訂控制項繪製<xref:System.Web.UI.UpdatePanel>控制項。 做為內嵌資源，稱為 SampleControl.UpdatePanelAnimation.js 編譯 JavaScript 檔案。 使用註冊內嵌的 JavaScript 檔案<xref:System.Web.UI.ScriptReference.Assembly%2A>和<xref:System.Web.UI.ScriptReference.Name%2A>屬性。  
  
 若要使用此範例中，編譯 JavaScript 檔案中所顯示的範例做為內嵌資源，以自訂控制項。 將產生的組件放入網站的 Bin 資料夾中。 如需如何將 JavaScript 檔案內嵌為組件中的範例，請參閱[逐步解說：組件中內嵌為資源的 JavaScript 檔案](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)。  
  
 下列範例顯示使用自訂控制項的頁面。  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 下列範例顯示自訂控制項類別定義。  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 下列範例會示範支援的 JavaScript 檔案。  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 下列範例會顯示您必須將其加入包含自訂控制項的專案的 AssemblyInfo 檔案和 JavaScript 檔案的程式碼。  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.ScriptReference" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.ScriptReference" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">相對於網頁的用戶端指令碼檔路徑。</param>
        <summary>使用指定的路徑來初始化 <see cref="T:System.Web.UI.ScriptReference" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string name, string assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, assembly As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ name, System::String ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string * string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference (name, assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assembly" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">內嵌於組件中的指令碼檔名稱。</param>
        <param name="assembly">組件的名稱，這個組件包含用戶端指令碼檔做為內嵌資源。</param>
        <summary>使用指定的名稱和組件來初始化 <see cref="T:System.Web.UI.ScriptReference" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public string Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Assembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : string with get, set" Usage="System.Web.UI.ScriptReference.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定組件的名稱，這個組件包含用戶端指令碼檔做為內嵌資源。</summary>
        <value>組件的完整或不完整名稱，其中包含做為內嵌資源的用戶端指令碼檔。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您設定<xref:System.Web.UI.ScriptReference.Assembly%2A>屬性，當您參考包含做為內嵌資源的組件中的用戶端指令碼檔案。 設定<xref:System.Web.UI.ScriptReference.Assembly%2A>完整或部分限定的組件名稱。 完整組件名稱包括名稱、 文化特性、 公開金鑰和版本號碼。 部分限定的組件的名稱只包含名稱。  
  
 當您指定的值<xref:System.Web.UI.ScriptReference.Assembly%2A>，您也必須指定名稱中的內嵌資源<xref:System.Web.UI.ScriptReference.Name%2A>屬性。 否則，<xref:System.InvalidOperationException>就會擲回。  
  
 所參考的組件必須位於網站的 Bin 資料夾或全域組件快取中。  
  
   
  
## Examples  
 下列範例示範如何參考自訂控制項，並在控制項組件中內嵌的 JavaScript 檔案。 組件會假設為網站的 [Bin] 資料夾中。 自訂控制項繪製<xref:System.Web.UI.UpdatePanel>控制項。 做為內嵌資源，稱為 SampleControl.UpdatePanelAnimation.js 編譯 JavaScript 檔案。 使用註冊內嵌的 JavaScript 檔案<xref:System.Web.UI.ScriptReference.Assembly%2A>和<xref:System.Web.UI.ScriptReference.Name%2A>屬性。  
  
 若要使用此範例中，編譯 JavaScript 檔案中所顯示的範例做為內嵌資源，以自訂控制項。 將產生的組件放入網站的 Bin 資料夾中。 如需如何將 JavaScript 檔案內嵌為組件中的範例，請參閱[逐步解說：組件中內嵌為資源的 JavaScript 檔案](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)。  
  
 下列範例顯示使用自訂控制項的頁面。  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 下列範例顯示自訂控制項類別定義。  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 下列範例會示範支援的 JavaScript 檔案。  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 下列範例會顯示您必須將其加入包含自訂控制項的專案的 AssemblyInfo 檔案和 JavaScript 檔案的程式碼。  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrl">
      <MemberSignature Language="C#" Value="protected internal override string GetUrl (System.Web.UI.ScriptManager scriptManager, bool zip);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetUrl(class System.Web.UI.ScriptManager scriptManager, bool zip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetUrl(System::Web::UI::ScriptManager ^ scriptManager, bool zip);" />
      <MemberSignature Language="F#" Value="override this.GetUrl : System.Web.UI.ScriptManager * bool -&gt; string" Usage="scriptReference.GetUrl (scriptManager, zip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="zip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scriptManager">目標網頁上的 <see langword="ScriptManager" /> 控制項。</param>
        <param name="zip">如果指令碼應進行壓縮，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>擷取會轉譯成 <see langword="src" /> 項目之 <see langword="script" /> 屬性值的 URL。</summary>
        <returns>字串，包含會轉譯成 <see langword="src" /> 項目之 <see langword="script" /> 屬性值的 URL。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreScriptPath">
      <MemberSignature Language="C#" Value="public bool IgnoreScriptPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreScriptPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreScriptPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreScriptPath { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreScriptPath : bool with get, set" Usage="System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is obsolete. Instead of using ScriptManager.ScriptPath, set the Path property on each individual ScriptReference.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值指出當您註冊資源中的用戶端指令碼檔時，<see cref="P:System.Web.UI.ScriptManager.ScriptPath" /> 屬性是否包含在 URL 中。</summary>
        <value>如果您在註冊用戶端指令碼時未使用指令碼路徑，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您設定<xref:System.Web.UI.ScriptReference.IgnoreScriptPath%2A>要`true`當您想要註冊的用戶端指令碼檔案，但不包括<xref:System.Web.UI.ScriptManager.ScriptPath%2A>指令碼檔案的 URL 中的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAjaxFrameworkScript">
      <MemberSignature Language="C#" Value="protected internal override bool IsAjaxFrameworkScript (System.Web.UI.ScriptManager scriptManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsAjaxFrameworkScript(class System.Web.UI.ScriptManager scriptManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsAjaxFrameworkScript(System::Web::UI::ScriptManager ^ scriptManager);" />
      <MemberSignature Language="F#" Value="override this.IsAjaxFrameworkScript : System.Web.UI.ScriptManager -&gt; bool" Usage="scriptReference.IsAjaxFrameworkScript scriptManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
      </Parameters>
      <Docs>
        <param name="scriptManager"><see cref="T:System.Web.UI.ScriptManager" /> 物件。</param>
        <summary>判斷指令碼參考是否為 AJAX 指令碼。</summary>
        <returns>如果指令碼參考是 AJAX 指令碼則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFromSystemWebExtensions">
      <MemberSignature Language="C#" Value="protected internal override bool IsFromSystemWebExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsFromSystemWebExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsFromSystemWebExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsFromSystemWebExtensions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsFromSystemWebExtensions();" />
      <MemberSignature Language="F#" Value="override this.IsFromSystemWebExtensions : unit -&gt; bool" Usage="scriptReference.IsFromSystemWebExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete. Use IsAjaxFrameworkScript(ScriptManager) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指出複合指令碼是否要包含對 ASP.NET AJAX 架構指令碼的參考。</summary>
        <returns>如果複合指令碼包含對 ASP.NET AJAX 架構指令碼的參考，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.ScriptReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定內嵌資源的名稱，這個資源包含用戶端指令碼檔。</summary>
        <value>用戶端指令碼檔的名稱，這個會檔案內嵌在組件中做為資源。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您設定<xref:System.Web.UI.ScriptReference.Name%2A>屬性來參考組件中內嵌為資源的用戶端指令碼檔案。  
  
 如果您同時定義值<xref:System.Web.UI.ScriptReferenceBase.Path%2A>並<xref:System.Web.UI.ScriptReference.Name%2A>屬性，在相同的指令碼參考中，<xref:System.Web.UI.ScriptReferenceBase.Path%2A>屬性會優先。  
  
   
  
## Examples  
 下列範例示範如何參考自訂控制項，並在控制項組件中內嵌的 JavaScript 檔案。 組件會假設為網站的 [Bin] 資料夾中。 自訂控制項繪製<xref:System.Web.UI.UpdatePanel>控制項。 做為內嵌資源，稱為 SampleControl.UpdatePanelAnimation.js 編譯 JavaScript 檔案。 使用註冊內嵌的 JavaScript 檔案<xref:System.Web.UI.ScriptReference.Assembly%2A>和<xref:System.Web.UI.ScriptReference.Name%2A>屬性。  
  
 若要使用此範例中，編譯 JavaScript 檔案中所顯示的範例做為內嵌資源，以自訂控制項。 將產生的組件放入網站的 Bin 資料夾中。 如需如何將 JavaScript 檔案內嵌為組件中的範例，請參閱[逐步解說：組件中內嵌為資源的 JavaScript 檔案](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)。  
  
 下列範例顯示使用自訂控制項的頁面。  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 下列範例顯示自訂控制項類別定義。  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 下列範例會示範支援的 JavaScript 檔案。  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 下列範例會顯示您必須將其加入包含自訂控制項的專案的 AssemblyInfo 檔案和 JavaScript 檔案的程式碼。  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="scriptReference.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回字串，表示 <see cref="P:System.Web.UI.ScriptReference.Name" /> 屬性、<see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> 屬性或型別名稱的值。</summary>
        <returns>如果已定義 <see cref="P:System.Web.UI.ScriptReference.Name" /> 屬性，便會傳回其值，或者，如果已定義 <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> 屬性，便會傳回其值，否則，會傳回 <see cref="P:System.Reflection.MemberInfo.Name" /> 屬性的值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>