<Type Name="DataBinding" FullName="System.Web.UI.DataBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e915345435b8c5e768afcc088fce8f6170747f8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBinding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBinding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBinding sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2f291-101">包含有關 ASP.NET 伺服器控制項中的單一資料繫結運算式的資訊，可讓 Microsoft Visual Studio 之類的快速應用程式開發 (RAD) 設計工具在設計階段建立資料繫結運算式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2f291-101">Contains information about a single data-binding expression in an ASP.NET server control, which allows rapid-application development (RAD) designers, such as Microsoft Visual Studio, to create data-binding expressions at design time.</span>
      </span>
      <span data-ttu-id="2f291-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2f291-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f291-103">每個伺服器控制項中的資料繫結運算式由在設計階段的執行個體<xref:System.Web.UI.DataBinding>類別。</span><span class="sxs-lookup"><span data-stu-id="2f291-103">Each data-binding expression in a server control is represented at design time by an instance of the <xref:System.Web.UI.DataBinding> class.</span></span> <span data-ttu-id="2f291-104">包含一或多個資料繫結運算式的任何伺服器控制項有<xref:System.Web.UI.DataBindingCollection>物件，其中包含<xref:System.Web.UI.DataBinding>物件。</span><span class="sxs-lookup"><span data-stu-id="2f291-104">Any server control that contains one or more data-binding expressions has a <xref:System.Web.UI.DataBindingCollection> object that contains the <xref:System.Web.UI.DataBinding> objects.</span></span> <span data-ttu-id="2f291-105">這個集合是可透過存取<xref:System.Web.UI.Control>類別實作<xref:System.Web.UI.IDataBindingsAccessor>介面。</span><span class="sxs-lookup"><span data-stu-id="2f291-105">This collection is accessible through the <xref:System.Web.UI.Control> class implementing the <xref:System.Web.UI.IDataBindingsAccessor> interface.</span></span> <span data-ttu-id="2f291-106">當您建立自訂的 RAD 設計工具時，請使用這個實作來存取集合。</span><span class="sxs-lookup"><span data-stu-id="2f291-106">When you create a custom RAD designer, use that implementation to access the collection.</span></span> <span data-ttu-id="2f291-107">任何<xref:System.Web.UI.DataBinding>或<xref:System.Web.UI.DataBindingCollection>只能在設計階段的伺服器控制項相關聯的物件存在。</span><span class="sxs-lookup"><span data-stu-id="2f291-107">Any <xref:System.Web.UI.DataBinding> or <xref:System.Web.UI.DataBindingCollection> objects associated with a server control exist only at design time.</span></span> <span data-ttu-id="2f291-108">它們在執行階段不存在而且，因此，無法存取在執行階段。</span><span class="sxs-lookup"><span data-stu-id="2f291-108">They do not exist at run time and, therefore, are not accessible during run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2f291-109">下列程式碼範例會建立<xref:System.Web.UI.DataBinding>物件，然後設定它等於控制項的現有物件<xref:System.Web.UI.DataBindingCollection>集合，其中具有`propertyName`參數值是`Text`。</span><span class="sxs-lookup"><span data-stu-id="2f291-109">The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`.</span></span> <span data-ttu-id="2f291-110">如果集合包含<xref:System.Web.UI.DataBinding>物件`propertyName`值`Text`，此程式碼會傳回物件的值<xref:System.Web.UI.DataBinding.Expression%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="2f291-110">If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property.</span></span> <span data-ttu-id="2f291-111">如果沒有這類物件，它會傳回空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="2f291-111">If there is no such object, it returns an empty string ("").</span></span>  
  
 [!code-csharp[DataBinding_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#2)]
 [!code-vb[DataBinding_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataBinder" />
    <altmember cref="T:System.Web.UI.DataBindingCollection" />
    <altmember cref="T:System.Web.UI.IDataBindingsAccessor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBinding (string propertyName, Type propertyType, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, class System.Type propertyType, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, propertyType As Type, expression As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBinding(System::String ^ propertyName, Type ^ propertyType, System::String ^ expression);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="2f291-112">資料要繫結至的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f291-112">The property to bind data to.</span>
          </span>
        </param>
        <param name="propertyType">
          <span data-ttu-id="2f291-113">資料要繫結至的 .NET Framework 屬性型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f291-113">The .NET Framework type of the property to bind data to.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="2f291-114">要評估的資料繫結運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f291-114">The data-binding expression to be evaluated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f291-115">初始化 <see cref="T:System.Web.UI.DataBinding" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f291-115">Initializes a new instance of the <see cref="T:System.Web.UI.DataBinding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f291-116">下列程式碼範例會建立<xref:System.Web.UI.DataBinding>物件，然後設定它等於控制項的現有物件<xref:System.Web.UI.DataBindingCollection>集合，其中具有`propertyName`參數值是`Text`。</span><span class="sxs-lookup"><span data-stu-id="2f291-116">The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`.</span></span> <span data-ttu-id="2f291-117">如果集合包含<xref:System.Web.UI.DataBinding>物件`propertyName`值`Text`，此程式碼會傳回物件的值<xref:System.Web.UI.DataBinding.Expression%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="2f291-117">If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property.</span></span> <span data-ttu-id="2f291-118">如果沒有這類物件，它會傳回空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="2f291-118">If there is no such object, it returns an empty string ("").</span></span>  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataBinder" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="2f291-119">要與目前 <see cref="T:System.Web.UI.DataBinding" /> 比較的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f291-119">The object to compare against the current <see cref="T:System.Web.UI.DataBinding" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2f291-120">判斷指定物件是否為做為目前物件的 <see cref="T:System.Web.UI.DataBinding" /> 類別的相同執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f291-120">Determines whether the specified object is the same instance of the <see cref="T:System.Web.UI.DataBinding" /> class as the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f291-121">如果資料繫結屬性名稱相符，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f291-121">
              <see langword="true" /> if the data-binding property names match; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataBinding.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f291-122">取得或設定要評估的資料繫結運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f291-122">Gets or sets the data-binding expression to be evaluated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f291-123">要評估的資料繫結運算式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f291-123">The data-binding expression to be evaluated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f291-124">下列程式碼範例會建立<xref:System.Web.UI.DataBinding>物件，然後設定它等於控制項的現有物件<xref:System.Web.UI.DataBindingCollection>集合，其中具有`propertyName`參數值是`Text`。</span><span class="sxs-lookup"><span data-stu-id="2f291-124">The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`.</span></span> <span data-ttu-id="2f291-125">如果集合包含<xref:System.Web.UI.DataBinding>物件`propertyName`值`Text`，此程式碼會傳回物件的值<xref:System.Web.UI.DataBinding.Expression%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="2f291-125">If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property.</span></span> <span data-ttu-id="2f291-126">如果沒有這類物件，它會傳回空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="2f291-126">If there is no such object, it returns an empty string ("").</span></span>  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2f291-127">為 <see cref="T:System.Web.UI.DataBinding" /> 物件的執行個體擷取雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f291-127">Retrieves the hash code for an instance of the <see cref="T:System.Web.UI.DataBinding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2f291-128">32 位元帶正負號的整數雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f291-128">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f291-129"><xref:System.Web.UI.DataBinding> 物件放置在<xref:System.Web.UI.DataBindingCollection>物件，只能在設計階段存取。</span><span class="sxs-lookup"><span data-stu-id="2f291-129"><xref:System.Web.UI.DataBinding> objects are placed in a <xref:System.Web.UI.DataBindingCollection> object, accessible only at design time.</span></span> <span data-ttu-id="2f291-130">這個集合是表示在控制項上的繫結的雜湊資料表。</span><span class="sxs-lookup"><span data-stu-id="2f291-130">The collection is a hash table that represents the bindings on a control.</span></span> <span data-ttu-id="2f291-131">只能有一個繫結每個屬性，因此雜湊程式碼計算符合<xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=nameWithType>實作和只會採用屬性名稱的考量。</span><span class="sxs-lookup"><span data-stu-id="2f291-131">There can only be one binding per property, so the hash code computation matches the <xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=nameWithType> implementation and only takes the property name into account.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f291-132">取得要對它繫結資料的 ASP.NET 伺服器控制項屬性名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f291-132">Gets the name of the ASP.NET server control property to bind data to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f291-133">資料要繫結至的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f291-133">The property to bind data to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f291-134">下列程式碼範例會宣告三個變數， `dataBindingOutput1`， `dataBindingOutput2`，和`dataBindingOutput3`，存取的屬性不同<xref:System.Web.UI.DataBinding>物件`myDataBinding2`。</span><span class="sxs-lookup"><span data-stu-id="2f291-134">The following code example declares three variables, `dataBindingOutput1`, `dataBindingOutput2`, and `dataBindingOutput3`, which access the different properties of a <xref:System.Web.UI.DataBinding> object, `myDataBinding2`.</span></span> <span data-ttu-id="2f291-135">然後，指派的值<xref:System.Web.UI.DataBinding.PropertyName%2A>屬性`dataBindingOutput1`，串連它與字串 「 屬性名稱 」，並將值寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="2f291-135">It then assigns the value of the <xref:System.Web.UI.DataBinding.PropertyName%2A> property to `dataBindingOutput1`, concatenates it with the string "The property name is ", and writes the value to a file.</span></span>  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2f291-136">取得資料繫結 ASP.NET 伺服器控制項屬性的 NET Framework 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f291-136">Gets the .NET Framework type of the data-bound ASP.NET server control property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2f291-137">資料繫結屬性的 .NET Framework 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2f291-137">The .NET Framework type of the data-bound property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2f291-138">下列程式碼範例會宣告三個變數， `dataBindingOutput1`， `dataBindingOutput2`，和`dataBindingOutput3`，存取的屬性不同<xref:System.Web.UI.DataBinding>物件`myDataBinding2`。</span><span class="sxs-lookup"><span data-stu-id="2f291-138">The following code example declares three variables, `dataBindingOutput1`, `dataBindingOutput2`, and `dataBindingOutput3`, which access the different properties of a <xref:System.Web.UI.DataBinding> object, `myDataBinding2`.</span></span> <span data-ttu-id="2f291-139"><xref:System.Web.UI.DataBinding.PropertyType%2A>屬性值指派給`dataBindingOutput2`和與字串串連 」 屬性類型是"，並將值寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="2f291-139">The <xref:System.Web.UI.DataBinding.PropertyType%2A> property value is assigned to `dataBindingOutput2` and concatenated with the string "The property type is ", and writes the value to a file.</span></span>  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>