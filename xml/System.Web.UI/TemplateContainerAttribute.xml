<Type Name="TemplateContainerAttribute" FullName="System.Web.UI.TemplateContainerAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c86a6277ba1dc27c82e3e24217755dd60519d08" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30608372" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TemplateContainerAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TemplateContainerAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.TemplateContainerAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TemplateContainerAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateContainerAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>屬性 (Property) 傳回 <see cref="T:System.Web.UI.ITemplate" /> 介面並使用 <see cref="T:System.Web.UI.TemplateContainerAttribute" /> 屬性 (Attribute) 標記，宣告其容器控制項的基底型別。 具有 <see cref="T:System.Web.UI.ITemplate" /> 屬性的控制項必須實作 <see cref="T:System.Web.UI.INamingContainer" /> 介面。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Type>物件，當做參數傳入<xref:System.Web.UI.TemplateContainerAttribute>剖析器會使用物件的型別<xref:System.ComponentModel.Container>用於資料繫結運算式的物件。 其屬性會傳回的控制項<xref:System.Web.UI.ITemplate>介面，並且標記為<xref:System.Web.UI.TemplateContainerAttribute>，必須實作<xref:System.Web.UI.INamingContainer>介面。  
  
 如需屬性用法的詳細資訊，請參閱[屬性](~/docs/standard/attributes/index.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立樣板化控制項，名為`TemplatedFirstControl`並將它與名為的容器關聯`FirstTemplateContainer`。 指定範本時，這樣會顯示當未指定範本的伺服器時間的自訂控制項和範本的內容建立。  
  
 [!code-csharp[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/CS/templatecontainerattribute.cs#1)]
 [!code-vb[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/VB/templatecontainerattribute.vb#1)]  
  
 下列 Web 表單會示範如何使用先前的程式碼範例中建立的自訂控制項。 兩個執行個體`TemplatedFirstControl`放置在網頁上：  
  
-   第一個執行個體包含範本`<FirstTemplate>`。  
  
-   第二個執行個體不包含`<FirstTemplate>`; 因此，它會顯示只的時間。  
  
 [!code-aspx-csharp[SystemWebUI_TemplateContainerAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/CS/templatecontainerattribute.aspx#2)]
 [!code-aspx-vb[SystemWebUI_TemplateContainerAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/VB/templatecontainerattribute.aspx#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.TemplateContainerAttribute" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateContainerAttribute (Type containerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type containerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.TemplateContainerAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (containerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateContainerAttribute(Type ^ containerType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="containerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="containerType">容器控制項的 <see cref="T:System.Type" />。</param>
        <summary>使用指定的容器型別，初始化 <see cref="T:System.Web.UI.TemplateContainerAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何建立樣板化控制項，名為`TemplatedFirstControl`並將它與名為的容器關聯`FirstTemplateContainer`。 指定範本時，這樣會顯示當未指定範本的伺服器時間的自訂控制項和範本的內容建立。 <xref:System.Web.UI.TemplateContainerAttribute>類別用於`FirstTemplate`屬性。  
  
 [!code-csharp[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/CS/templatecontainerattribute.cs#1)]
 [!code-vb[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/VB/templatecontainerattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="P:System.Web.UI.TemplateContainerAttribute.ContainerType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateContainerAttribute (Type containerType, System.ComponentModel.BindingDirection bindingDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type containerType, valuetype System.ComponentModel.BindingDirection bindingDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.TemplateContainerAttribute.#ctor(System.Type,System.ComponentModel.BindingDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateContainerAttribute(Type ^ containerType, System::ComponentModel::BindingDirection bindingDirection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="containerType" Type="System.Type" />
        <Parameter Name="bindingDirection" Type="System.ComponentModel.BindingDirection" />
      </Parameters>
      <Docs>
        <param name="containerType">容器控制項的 <see cref="T:System.Type" />。</param>
        <param name="bindingDirection">容器控制項的 <see cref="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" />。</param>
        <summary>使用指定的容器型別和 <see cref="T:System.Web.UI.TemplateContainerAttribute" /> 屬性，初始化 <see cref="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" />
      </Docs>
    </Member>
    <Member MemberName="BindingDirection">
      <MemberSignature Language="C#" Value="public System.ComponentModel.BindingDirection BindingDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.BindingDirection BindingDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingDirection As BindingDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::BindingDirection BindingDirection { System::ComponentModel::BindingDirection get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.BindingDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得容器控制項的繫結方向。</summary>
        <value>
          <see cref="T:System.ComponentModel.BindingDirection" />，表示容器控制項的繫結方向。 預設值為 <see cref="F:System.ComponentModel.BindingDirection.OneWay" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.TemplateContainerAttribute.BindingDirection%2A>屬性可以是<xref:System.ComponentModel.BindingDirection.OneWay>欄位，其中樣板可以僅接受屬性值或<xref:System.ComponentModel.BindingDirection.TwoWay> 欄位中，範本可以接受和公開的屬性值的位置。 在後者的情況下，資料繫結控制項自動可以使用更新、 刪除和插入作業的資料來源使用`Bind`資料繫結語法。  
  
 如需資料繫結的詳細資訊，請參閱[繫結至資料庫](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)和[資料繫結運算式概觀](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a)。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立樣板化控制項，名為`TemplatedFirstControl`並將它與名為的容器關聯`FirstTemplateContainer`。 這可讓顯示當未指定範本的伺服器時間的自訂控制項建立和此範本的內容時有指定 template。 <xref:System.Attribute.GetCustomAttribute%2A>方法會判斷<xref:System.Web.UI.TemplateContainerAttribute.BindingDirection%2A>屬性`FirstTemplate`屬性`TemplateFirstControl`。  
  
 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.UI.TemplateContainerAttribute>類別。  
  
 [!code-csharp[SystemWebUI_TemplateContainerAttribute#3](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/CS/templatecontainerattribute.aspx#3)]
 [!code-vb[SystemWebUI_TemplateContainerAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/VB/templatecontainerattribute.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.TemplateContainerAttribute.ContainerType" />
        <altmember cref="T:System.ComponentModel.BindingDirection" />
        <altmember cref="Overload:System.Attribute.GetCustomAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ContainerType">
      <MemberSignature Language="C#" Value="public Type ContainerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContainerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.TemplateContainerAttribute.ContainerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContainerType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得容器控制項型別。</summary>
        <value>容器控制項 <see cref="T:System.Type" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼範例示範如何建立樣板化控制項，名為`TemplatedFirstControl`並將它與名為的容器關聯`FirstTemplateContainer`。 指定範本時，這樣會顯示當未指定範本的伺服器時間的自訂控制項和範本的內容建立。 <xref:System.Web.UI.TemplateContainerAttribute>類別用於`FirstTemplate`屬性以及指定<xref:System.Web.UI.TemplateContainerAttribute.ContainerType%2A>屬性做為`FirstTemplateContainer`。  
  
 [!code-csharp[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/CS/templatecontainerattribute.cs#1)]
 [!code-vb[SystemWebUI_TemplateContainerAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TemplateContainerAttribute/VB/templatecontainerattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.TemplateContainerAttribute.BindingDirection" />
      </Docs>
    </Member>
  </Members>
</Type>