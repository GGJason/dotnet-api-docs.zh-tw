<Type Name="ObjectStateFormatter" FullName="System.Web.UI.ObjectStateFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b569a57903aa176344ecca35e9ee0e2b657d3065" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36576239" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ObjectStateFormatter : System.Runtime.Serialization.IFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ObjectStateFormatter extends System.Object implements class System.Runtime.Serialization.IFormatter, class System.Web.UI.IStateFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ObjectStateFormatter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ObjectStateFormatter&#xA;Implements IFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectStateFormatter sealed : System::Runtime::Serialization::IFormatter" />
  <TypeSignature Language="F#" Value="type ObjectStateFormatter = class&#xA;    interface IStateFormatter&#xA;    interface IFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IFormatter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>將代表物件狀態的物件圖形序列化和還原序列化。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ObjectStateFormatter>類別序列化和還原序列化的物件狀態圖形，以精簡的格式。  
  
 <xref:System.Web.UI.ObjectStateFormatter> 正由<xref:System.Web.UI.PageStatePersister>類別和類別，衍生自以序列化檢視狀態，並控制狀態。 它也會使用<xref:System.Web.UI.LosFormatter>類別，以提供 ASP.NET 基礎結構的各種組件的格式設定的物件狀態圖形。  
  
 <xref:System.Web.UI.ObjectStateFormatter>類別已最佳化來序列化，並格式化許多一般.NET Framework 參考型別，以及常數。 下表列出適合的型別。  
  
|||||  
|-|-|-|-|  
|<xref:System.Array>|<xref:System.DateTime>|<xref:System.Int16>|<xref:System.String>|  
|<xref:System.Collections.ArrayList>|<xref:System.Double>|<xref:System.Int32>|String]|  
|<xref:System.Boolean>|<xref:System.Enum>|null (`Nothing`)|<xref:System.String.Empty?displayProperty=nameWithType>|  
|<xref:System.Byte>|<xref:System.Collections.Hashtable>|<xref:System.Web.UI.Pair>|<xref:System.Web.UI.Triplet>|  
|<xref:System.Char>|<xref:System.Collections.Specialized.HybridDictionary>|<xref:System.Single>|<xref:System.Type>|  
|<xref:System.Drawing.Color>|<xref:System.Collections.IDictionary>|||  
  
 此外，雖然傳統字串型別和字串陣列寫入和序列化二進位寫入器不變，與從某些字串會最佳化藉由建立內部字串資料表中。 字串會使用這些資料表相關聯的字串中有最佳化<xref:System.ComponentModel.TypeConverter>物件或字串是否實際的執行個體<xref:System.Web.UI.IndexedString>類別。  
  
 以上未列出其他類型是二進位序列化使用<xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>物件如果這些物件實作<xref:System.Runtime.Serialization.ISerializable>介面，或是使用裝飾<xref:System.SerializableAttribute>屬性。 <xref:System.Web.UI.ObjectStateFormatter>類別並未針對任何一種可序列化的類型進行最佳化。  
  
 如果<xref:System.Web.UI.ObjectStateFormatter>類別遇到不是可序列化，類型<xref:System.ArgumentException>擲回例外狀況。  
  
   
  
## Examples  
 下列程式碼範例示範如何從衍生的類別<xref:System.Web.UI.PageStatePersister>類別存取<xref:System.Web.UI.PageStatePersister.StateFormatter%2A>屬性，以擷取<xref:System.Web.UI.ObjectStateFormatter>序列化檢視狀態，以及控制項狀態的資料流的執行個體。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.UI.PageStatePersister>類別。  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectStateFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectStateFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.ObjectStateFormatter" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將序列化形式的物件狀態圖還原序列化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  呼叫此方法不受信任的資料時，會造成安全性風險。 呼叫這個方法僅使用信任的資料。 如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ObjectStateFormatter.Serialize" />
        <altmember cref="Overload:System.Web.UI.LosFormatter.Deserialize" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (System.IO.Stream inputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(class System.IO.Stream inputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (inputStream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::IO::Stream ^ inputStream);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : System.IO.Stream -&gt; obj" Usage="objectStateFormatter.Deserialize inputStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputStream">
          <see cref="T:System.IO.Stream" />，<see cref="T:System.Web.UI.ObjectStateFormatter" /> 將其還原序列化為初始化的 <see langword="object" />。</param>
        <summary>將包含在指定之 <see cref="T:System.IO.Stream" /> 物件的二進位序列化形式的物件狀態圖還原序列化。</summary>
        <returns>物件，表示還原序列化的物件狀態圖。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 序列化的任何物件狀態圖形<xref:System.Web.UI.ObjectStateFormatter.Serialize%2A>方法可以還原序列化具有<xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A>方法。 <xref:System.Web.UI.ObjectStateFormatter.Deserialize%28System.IO.Stream%29>方法用來還原儲存在物件狀態圖形<xref:System.IO.Stream>，例如<xref:System.IO.FileStream>。  
  
> [!IMPORTANT]
>  呼叫此方法不受信任的資料時，會造成安全性風險。 呼叫這個方法僅使用信任的資料。 如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。  
  
   
  
## Examples  
 下列程式碼範例示範如何從衍生的類別<xref:System.Web.UI.PageStatePersister>類別初始化<xref:System.Web.UI.PageStatePersister.ViewState%2A>集合。 在此範例中，<xref:System.Web.UI.PageStatePersister.ViewState%2A>集合已指派給<xref:System.Web.UI.Pair.First>欄位<xref:System.Web.UI.Pair>物件，並序列化為檔案，使用<xref:System.Web.UI.ObjectStateFormatter>類別。 當<xref:System.Web.UI.PageStatePersister.Load%2A>呼叫方法時，<xref:System.Web.UI.LosFormatter.Deserialize%28System.IO.Stream%29>方法用來還原序列化檔案，從檢視狀態和<xref:System.Web.UI.PageStatePersister.ViewState%2A>屬性會初始化。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.UI.PageStatePersister>類別。  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="inputStream" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">還原序列化 <see cref="T:System.IO.Stream" /> 期間，發生例外狀況。 例外狀況訊息會附加至 <see cref="T:System.ArgumentException" /> 的訊息。</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string inputString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string inputString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (inputString As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ inputString);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; obj" Usage="objectStateFormatter.Deserialize inputString" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateFormatter.Deserialize(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputString">
          <see cref="T:System.Web.UI.ObjectStateFormatter" /> 還原序列化為初始化物件的字串。</param>
        <summary>將序列化 Base64 編碼字串形式的物件狀態圖還原序列化。</summary>
        <returns>物件，表示還原序列化的物件狀態圖。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 序列化的任何物件狀態圖形<xref:System.Web.UI.ObjectStateFormatter.Serialize%2A>方法可以還原序列化具有<xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A>方法。 <xref:System.Web.UI.ObjectStateFormatter.Deserialize%28System.String%29>方法用來還原 base64 編碼字串的格式儲存物件狀態圖形。  
  
> [!IMPORTANT]
>  呼叫此方法不受信任的資料時，會造成安全性風險。 呼叫這個方法僅使用信任的資料。 如需詳細資訊，請參閱[資料驗證](https://www.owasp.org/index.php/Data_Validation)。  
  
   
  
## Examples  
 下列程式碼範例示範如何實作的方法，將 base64 編碼的字串還原序列化，並傳回<xref:System.Collections.ICollection>屬性設定的集合。 這個程式碼範例是依賴具有使用已序列化的屬性設定<xref:System.Web.UI.ObjectStateFormatter>類別，如中所示<xref:System.Web.UI.ObjectStateFormatter.Serialize%28System.Object%29>方法。  
  
 [!code-csharp[System.Web.UI.ObjectStateFormatter_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ObjectStateFormatter_1/CS/objectstateformattertest.cs#2)]
 [!code-vb[System.Web.UI.ObjectStateFormatter_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ObjectStateFormatter_1/VB/objectstateformattertest.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="inputString" /> 為 <see langword="null" /> 或其 <see cref="P:System.String.Length" /> 為 0。</exception>
        <exception cref="T:System.ArgumentException">序列化資料無效。</exception>
        <exception cref="T:System.Web.HttpException">在還原序列化檢視狀態時，執行機器驗證碼 (MAC) 驗證檢查失敗。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>序列化物件狀態圖。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object stateGraph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object stateGraph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (stateGraph As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ stateGraph);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="objectStateFormatter.Serialize stateGraph" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateFormatter.Serialize(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGraph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stateGraph">要序列化的物件。</param>
        <summary>將物件狀態圖序列化為 Base64 編碼字串。</summary>
        <returns>Base-64 編碼字串，表示 <paramref name="stateGraph" /> 參數的序列化物件狀態。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 序列化的任何物件圖形<xref:System.Web.UI.ObjectStateFormatter.Serialize%2A>方法可以還原序列化具有<xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A>方法。 <xref:System.Web.UI.ObjectStateFormatter.Serialize%28System.Object%29>方法用來序列化成 base64 編碼字串格式的物件狀態圖。  
  
   
  
## Examples  
 下列程式碼範例示範如何將 base64 編碼字串，使用的控制項屬性的一組值<xref:System.Web.UI.ObjectStateFormatter.Serialize%28System.Object%29>方法。 可在稍後使用還原序列化字串<xref:System.Web.UI.ObjectStateFormatter.Deserialize%28System.String%29>方法。  
  
 [!code-csharp[System.Web.UI.ObjectStateFormatter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ObjectStateFormatter_1/CS/objectstateformattertest.cs#1)]
 [!code-vb[System.Web.UI.ObjectStateFormatter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ObjectStateFormatter_1/VB/objectstateformattertest.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (System.IO.Stream outputStream, object stateGraph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(class System.IO.Stream outputStream, object stateGraph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (outputStream As Stream, stateGraph As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::IO::Stream ^ outputStream, System::Object ^ stateGraph);" />
      <MemberSignature Language="F#" Value="member this.Serialize : System.IO.Stream * obj -&gt; unit" Usage="objectStateFormatter.Serialize (outputStream, stateGraph)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputStream" Type="System.IO.Stream" />
        <Parameter Name="stateGraph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="outputStream">
          <see cref="T:System.IO.Stream" />，<see cref="T:System.Web.UI.ObjectStateFormatter" /> 序列化指定之物件狀態的目標。</param>
        <param name="stateGraph">要序列化的物件。</param>
        <summary>將物件狀態圖序列化為指定的 <see cref="T:System.IO.Stream" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 序列化的任何物件狀態圖形<xref:System.Web.UI.ObjectStateFormatter.Serialize%2A>方法可以還原序列化具有<xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A>方法。 <xref:System.Web.UI.ObjectStateFormatter.Serialize%28System.IO.Stream%2CSystem.Object%29>方法用來序列化物件的狀態圖形二進位檔<xref:System.IO.Stream>物件。  
  
   
  
## Examples  
 下列程式碼範例示範如何擷取類別<xref:System.Web.UI.ObjectStateFormatter>序列化檢視狀態和資料流使用的控制項狀態的執行個體<xref:System.Web.UI.ObjectStateFormatter.Serialize%28System.IO.Stream%2CSystem.Object%29>方法。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Web.UI.PageStatePersister>類別。  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="inputStream" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IFormatter.Binder">
      <MemberSignature Language="C#" Value="System.Runtime.Serialization.SerializationBinder System.Runtime.Serialization.IFormatter.Binder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.SerializationBinder System.Runtime.Serialization.IFormatter.Binder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Binder" />
      <MemberSignature Language="VB.NET" Value=" Property Binder As SerializationBinder Implements IFormatter.Binder" />
      <MemberSignature Language="C++ CLI" Value="property System::Runtime::Serialization::SerializationBinder ^ System.Runtime.Serialization.IFormatter.Binder { System::Runtime::Serialization::SerializationBinder ^ get(); void set(System::Runtime::Serialization::SerializationBinder ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.ObjectStateFormatter.System.Runtime.Serialization.IFormatter.Binder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.SerializationBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="P:System.Runtime.Serialization.Formatter.Binder" />。</summary>
        <value>
          <see cref="T:System.Runtime.Serialization.SerializationBinder" />，在序列化期間執行型別查閱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.ObjectStateFormatter> 執行個體轉換成 <xref:System.Runtime.Serialization.IFormatter> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IFormatter.Context">
      <MemberSignature Language="C#" Value="System.Runtime.Serialization.StreamingContext System.Runtime.Serialization.IFormatter.Context { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Serialization.StreamingContext System.Runtime.Serialization.IFormatter.Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Context" />
      <MemberSignature Language="VB.NET" Value=" Property Context As StreamingContext Implements IFormatter.Context" />
      <MemberSignature Language="C++ CLI" Value="property System::Runtime::Serialization::StreamingContext System.Runtime.Serialization.IFormatter.Context { System::Runtime::Serialization::StreamingContext get(); void set(System::Runtime::Serialization::StreamingContext value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.ObjectStateFormatter.System.Runtime.Serialization.IFormatter.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.StreamingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="P:System.Runtime.Serialization.IFormatter.Context" />。</summary>
        <value>
          <see cref="T:System.Runtime.Serialization.StreamingContext" />，用於序列化和還原序列化。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.ObjectStateFormatter> 執行個體轉換成 <xref:System.Runtime.Serialization.IFormatter> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IFormatter.Deserialize">
      <MemberSignature Language="C#" Value="object IFormatter.Deserialize (System.IO.Stream serializationStream);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Runtime.Serialization.IFormatter.Deserialize(class System.IO.Stream serializationStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Deserialize(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Function Deserialize (serializationStream As Stream) As Object Implements IFormatter.Deserialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Runtime.Serialization.IFormatter.Deserialize(System::IO::Stream ^ serializationStream) = System::Runtime::Serialization::IFormatter::Deserialize;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="serializationStream">資料流，包含要還原序列化的資料。</param>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.IO.Stream)" />。</summary>
        <returns>還原序列化 Graph 的最上層物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.ObjectStateFormatter> 執行個體轉換成 <xref:System.Runtime.Serialization.IFormatter> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IFormatter.Serialize">
      <MemberSignature Language="C#" Value="void IFormatter.Serialize (System.IO.Stream serializationStream, object stateGraph);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IFormatter.Serialize(class System.IO.Stream serializationStream, object stateGraph) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#Serialize(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Serialize (serializationStream As Stream, stateGraph As Object) Implements IFormatter.Serialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IFormatter.Serialize(System::IO::Stream ^ serializationStream, System::Object ^ stateGraph) = System::Runtime::Serialization::IFormatter::Serialize;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationStream" Type="System.IO.Stream" />
        <Parameter Name="stateGraph" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationStream">格式子置放已序列化資料的所在資料流。 這個資料流可以參考多種支援存放區 (例如檔案、網路、記憶體等等)。</param>
        <param name="stateGraph">要序列化的物件或物件 Graph 的根。 這個根物件的所有子物件都會自動序列化。</param>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.Web.UI.ObjectStateFormatter.Serialize(System.IO.Stream,System.Object)" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.ObjectStateFormatter> 執行個體轉換成 <xref:System.Runtime.Serialization.IFormatter> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IFormatter.SurrogateSelector">
      <MemberSignature Language="C#" Value="System.Runtime.Serialization.ISurrogateSelector System.Runtime.Serialization.IFormatter.SurrogateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ISurrogateSelector System.Runtime.Serialization.IFormatter.SurrogateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ObjectStateFormatter.System#Runtime#Serialization#IFormatter#SurrogateSelector" />
      <MemberSignature Language="VB.NET" Value=" Property SurrogateSelector As ISurrogateSelector Implements IFormatter.SurrogateSelector" />
      <MemberSignature Language="C++ CLI" Value="property System::Runtime::Serialization::ISurrogateSelector ^ System.Runtime.Serialization.IFormatter.SurrogateSelector { System::Runtime::Serialization::ISurrogateSelector ^ get(); void set(System::Runtime::Serialization::ISurrogateSelector ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.ObjectStateFormatter.System.Runtime.Serialization.IFormatter.SurrogateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ISurrogateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="T:System.Runtime.Serialization.SurrogateSelector" />。</summary>
        <value>
          <see cref="T:System.Runtime.Serialization.SurrogateSelector" />，由這個格式子所使用。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.ObjectStateFormatter> 執行個體轉換成 <xref:System.Runtime.Serialization.IFormatter> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateFormatter.Deserialize">
      <MemberSignature Language="C#" Value="object IStateFormatter.Deserialize (string serializedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateFormatter.Deserialize(string serializedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.System#Web#UI#IStateFormatter#Deserialize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function Deserialize (serializedState As String) As Object Implements IStateFormatter.Deserialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateFormatter.Deserialize(System::String ^ serializedState) = System::Web::UI::IStateFormatter::Deserialize;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateFormatter.Deserialize(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializedState" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serializedState">
          <see cref="T:System.Web.UI.IStateFormatter" /> 還原序列化為初始化物件的字串。</param>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.Web.UI.ObjectStateFormatter.Deserialize(System.String)" />。</summary>
        <returns>代表 ASP.NET 伺服器控制項狀態的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.ObjectStateFormatter> 執行個體轉換成 <xref:System.Web.UI.IStateFormatter> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateFormatter.Serialize">
      <MemberSignature Language="C#" Value="string IStateFormatter.Serialize (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IStateFormatter.Serialize(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ObjectStateFormatter.System#Web#UI#IStateFormatter#Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Serialize (state As Object) As String Implements IStateFormatter.Serialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IStateFormatter.Serialize(System::Object ^ state) = System::Web::UI::IStateFormatter::Serialize;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateFormatter.Serialize(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">代表要序列化成字串形式之 Web 伺服器控制項檢視狀態的物件。</param>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.Web.UI.ObjectStateFormatter.Serialize(System.Object)" />。</summary>
        <returns>代表 Web 伺服器控制項檢視狀態的字串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.ObjectStateFormatter> 執行個體轉換成 <xref:System.Web.UI.IStateFormatter> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>