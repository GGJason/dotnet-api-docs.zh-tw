<Type Name="IStateFormatter" FullName="System.Web.UI.IStateFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="039d7661aace642f92f262d465c2e2160db3b96c" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51865720" /></Metadata><TypeSignature Language="C#" Value="public interface IStateFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStateFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IStateFormatter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStateFormatter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStateFormatter" />
  <TypeSignature Language="F#" Value="type IStateFormatter = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定義型別為了將物件 Graph 序列化與還原序列化所實作的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IStateFormatter>介面會定義型別可實作來序列化和還原序列化的 ASP.NET Web 伺服器控制項中維護狀態的方法及其<xref:System.Web.UI.Control.ViewState%2A>屬性。 此基礎結構由衍生自類別<xref:System.Web.UI.PageStatePersister>類別，來維護 ASP.NET 頁面的要求之間的狀態。 根據預設，ASP.NET 網頁狀態是序列化和還原序列化的執行個體所<xref:System.Web.UI.ObjectStateFormatter>類別; 不過，站台和配接器開發人員可以實作<xref:System.Web.UI.IStateFormatter>上自己的類型，若要執行這項工作的介面。  
  
 如需有關 Web 伺服器控制項狀態管理和檢視狀態的詳細資訊，請參閱 < [ASP.NET 狀態管理概觀](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))並[動態的 Web 伺服器控制項和檢視狀態](https://msdn.microsoft.com/library/c1ea6a66-3307-4c98-8187-cad462e1c027)。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立<xref:System.Web.UI.PageStatePersister>將檢視和控制項的狀態儲存至資料流中，Web 伺服器的物件。 `StreamPageStatePersister`類別會示範如何覆寫<xref:System.Web.UI.PageStatePersister.Load%2A>和<xref:System.Web.UI.PageStatePersister.Save%2A>方法來擷取並儲存頁面狀態資訊。 這些方法會使用<xref:System.Web.UI.IStateFormatter>介面繼承自<xref:System.Web.UI.PageStatePersister>類別來序列化和還原序列化檢視狀態。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.UI.PageStatePersister>類別。  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/CS/textfilepagestatepersister.cs#1)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/VB/textfilepagestatepersister.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.PageStatePersister" />
    <altmember cref="T:System.Web.UI.LosFormatter" />
    <altmember cref="T:System.Web.UI.ObjectStateFormatter" />
  </Docs>
  <Members>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string serializedState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(string serializedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStateFormatter.Deserialize(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (serializedState As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ serializedState);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : string -&gt; obj" Usage="iStateFormatter.Deserialize serializedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializedState" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serializedState"><see cref="T:System.Web.UI.IStateFormatter" /> 還原序列化為初始化物件的字串。</param>
        <summary>將已序列化成字串形式的物件狀態圖還原序列化。</summary>
        <returns>代表 ASP.NET 伺服器控制項狀態的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.IStateFormatter.Deserialize%2A>方法，以重新構成 ASP.NET 頁面或伺服器控制項使用已序列化的狀態物件<xref:System.Web.UI.IStateFormatter.Serialize%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何<xref:System.Web.UI.IStateFormatter.Deserialize%2A>方法載入檢視狀態資訊。 <xref:System.Web.UI.PageStatePersister.Load%2A>方法`StreamPageStatePersister`類別會使用<xref:System.Web.UI.IStateFormatter>介面繼承自<xref:System.Web.UI.PageStatePersister>類別，以還原序列化檢視狀態。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.UI.IStateFormatter>介面。  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Serialize(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStateFormatter.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (state As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj -&gt; string" Usage="iStateFormatter.Serialize state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">代表要序列化成字串形式之 Web 伺服器控制項檢視狀態的物件。</param>
        <summary>將 ASP.NET Web 伺服器控制項狀態序列化成字串的形式。</summary>
        <returns>代表 Web 伺服器控制項檢視狀態的字串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Web.UI.IStateFormatter.Serialize%2A>方法，轉換成字串格式的物件狀態圖。 重新建構所需的狀態物件，從字串使用<xref:System.Web.UI.IStateFormatter.Deserialize%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何<xref:System.Web.UI.IStateFormatter.Serialize%2A>方法保存至檔案的檢視狀態資訊。 <xref:System.Web.UI.PageStatePersister.Save%2A>方法`StreamPageStatePersister`類別會使用<xref:System.Web.UI.IStateFormatter>介面繼承自<xref:System.Web.UI.PageStatePersister>類別來序列化檢視狀態。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.UI.IStateFormatter>介面。  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_2/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>