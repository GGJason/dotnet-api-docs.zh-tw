<Type Name="DataSourceView" FullName="System.Web.UI.DataSourceView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b0bb36d6451fc3a897f0e4cfe339c15f827342c9" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39768397" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceView abstract" />
  <TypeSignature Language="F#" Value="type DataSourceView = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>當做所有資料來源檢視類別的基底類別，這些類別會定義資料來源控制項的功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 支援資料繫結架構，可讓 Web 伺服器控制項繫結至資料以一致的方式。 繫結至資料的 web 伺服器控制項被指資料繫結控制項，以及協助繫結，會呼叫資料來源控制項的類別。 資料來源控制項可以代表任何資料來源： 關聯式資料庫、 檔案、 資料流、 商務物件等等。 資料來源控制項資料繫結控制項，不論來源或基礎資料的格式一致的方式呈現資料。  
  
 您所提供的資料來源控制項使用 ASP.NET，包括<xref:System.Web.UI.WebControls.SqlDataSource>， <xref:System.Web.UI.WebControls.AccessDataSource>，和<xref:System.Web.UI.WebControls.XmlDataSource>，若要執行大部分的 Web 開發工作。 使用基底<xref:System.Web.UI.DataSourceControl>和<xref:System.Web.UI.DataSourceView>類別，當您想要實作您自己自訂的資料來源控制項。  
  
 您可以將資料來源控制項的組合視為<xref:System.Web.UI.IDataSource>物件和其相關聯的資料清單，稱為資料來源檢視。 每個清單中的資料由<xref:System.Web.UI.DataSourceView>物件。 <xref:System.Web.UI.DataSourceView>類別是基底類別的所有資料來源檢視或清單資料來源控制項相關聯的資料。 資料來源檢視定義資料來源控制項的功能。 因為基礎資料儲存區包含一或多個清單的資料，資料來源控制項一律是與一個或多個具名的資料來源檢視相關聯。 使用資料來源控制項<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>方法來列舉資料來源目前與資料來源控制項相關聯的檢視和<xref:System.Web.UI.DataSourceControl.GetView%2A>依名稱擷取特定資料來源檢視執行個體的方法。  
  
 所有<xref:System.Web.UI.DataSourceView>物件支援從基礎資料來源使用的資料擷取<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法。 所有檢視選擇性地都支援一組基本的作業，包括作業，例如<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>， <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>，和<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>。 資料繫結控制項可以探索資料來源控制項擷取相關聯的資料來源的功能可讓您檢視使用<xref:System.Web.UI.DataSourceControl.GetView%2A>和<xref:System.Web.UI.DataSourceControl.GetViewNames%2A>方法，並在設計階段或執行的階段查詢檢視。  
  
   
  
## Examples  
 下列程式碼範例示範如何擴充<xref:System.Web.UI.DataSourceView>類別來建立資料來源控制項的強型別的檢視類別。 `CsVDataSourceView`類別定義的功能`CsvDataSource`資料來源控制項，並提供資料繫結控制項，以使用以逗號分隔值 (.csv) 檔案中儲存資料的實作。 如需詳細資訊`CsvDataSource`資料來源控制項，請參閱<xref:System.Web.UI.DataSourceControl>類別。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.IDataSource owner, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IDataSource, viewName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceView(System::Web::UI::IDataSource ^ owner, System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataSourceView : System.Web.UI.IDataSource * string -&gt; System.Web.UI.DataSourceView" Usage="new System.Web.UI.DataSourceView (owner, viewName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.IDataSource" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">與 <see cref="T:System.Web.UI.DataSourceView" /> 關聯的資料來源控制項。</param>
        <param name="viewName">
          <see cref="T:System.Web.UI.DataSourceView" /> 物件的名稱。</param>
        <summary>初始化 <see cref="T:System.Web.UI.DataSourceView" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="owner" /> 為 <see langword="null" />。  
  
\-或- 
 <paramref name="viewName" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.DataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.DataSourceView" /> 物件關聯的 <see cref="T:System.Web.UI.DataSourceControl" /> 物件是否支援 <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 作業。</summary>
        <value>如果支援該作業則為 <see langword="true" />，否則為 <see langword="false" />。 基底類別實作會傳回 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.CanDelete%2A>屬性反映不僅功能的資料來源控制項，但也是否適合目前執行的作業。 比方說，即使資料來源檢視支援時，才<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>一般而言，如果未設定必要的屬性或一些其他資料，作業<xref:System.Web.UI.DataSourceView.CanDelete%2A>屬性會傳回`false`，因為刪除作業將會失敗。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.DataSourceView.CanDelete%2A>屬性和<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>方法，在該類別可擴充<xref:System.Web.UI.DataSourceView>類別。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.UI.DataSourceView>類別。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public virtual bool CanExecute (string commandName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(string commandName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.CanExecute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanExecute (commandName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExecute(System::String ^ commandName);" />
      <MemberSignature Language="F#" Value="abstract member CanExecute : string -&gt; bool&#xA;override this.CanExecute : string -&gt; bool" Usage="dataSourceView.CanExecute commandName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandName">命令名稱。</param>
        <summary>判斷是否可以執行指定的命令。</summary>
        <returns>如果命令可以執行則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.DataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.DataSourceView" /> 物件關聯的 <see cref="T:System.Web.UI.DataSourceControl" /> 物件是否支援 <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> 作業。</summary>
        <value>如果支援該作業則為 <see langword="true" />，否則為 <see langword="false" />。 基底類別實作會傳回 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.CanInsert%2A>屬性反映不僅功能的資料來源控制項，但也是否適合目前執行的作業。 例如，即使資料來源控制項支援<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>作業，如果必要的 insert 命令，或未設定一些其他資料，則<xref:System.Web.UI.DataSourceView.CanInsert%2A>屬性會傳回`false`，插入作業將會失敗。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.DataSourceView.CanInsert%2A>屬性和<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>方法，在該類別可擴充<xref:System.Web.UI.DataSourceView>類別。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.UI.DataSourceView>類別。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public virtual bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.DataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.DataSourceView" /> 物件關聯的 <see cref="T:System.Web.UI.DataSourceControl" /> 物件是否支援對 <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 方法擷取的資料進行分頁。</summary>
        <value>如果支援該作業則為 <see langword="true" />，否則為 <see langword="false" />。 基底類別實作會傳回 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料繫結控制項可以藉由新增要求分頁<xref:System.Web.UI.DataSourceCapabilities.Page>欄位設為<xref:System.Web.UI.DataSourceSelectArguments>物件傳遞給<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法。 如果資料繫結控制項要求分頁，但<xref:System.Web.UI.DataSourceView.CanPage%2A>屬性會傳回`false`，資料來源檢視就會擲回例外狀況。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public virtual bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.DataSourceView" /> 物件關聯的 <see cref="T:System.Web.UI.DataSourceControl" /> 物件是否支援擷取資料列總數，而非資料。</summary>
        <value>如果支援該作業則為 <see langword="true" />，否則為 <see langword="false" />。 基底類別實作會傳回 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料繫結控制項可以藉由新增要求資料列總數<xref:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount?displayProperty=nameWithType>欄位設為<xref:System.Web.UI.DataSourceSelectArguments?displayProperty=nameWithType>物件傳遞給<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法。 如果資料繫結控制項要求的總計資料列計數，但<xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A>屬性會傳回`false`，資料來源檢視就會擲回例外狀況。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
        <altmember cref="F:System.Web.UI.DataSourceOperation.SelectCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public virtual bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.DataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.DataSourceView" /> 物件關聯的 <see cref="T:System.Web.UI.DataSourceControl" /> 物件是否支援對基礎資料來源的排序檢視。</summary>
        <value>如果支援該作業則為 <see langword="true" />，否則為 <see langword="false" />。 預設實作會傳回 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料繫結控制項可以要求加入排序<xref:System.Web.UI.DataSourceCapabilities.Sort>欄位設為<xref:System.Web.UI.DataSourceSelectArguments>物件傳遞給<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法。 如果資料繫結控制要求排序，但<xref:System.Web.UI.DataSourceView.CanSort%2A>屬性會傳回`false`，資料來源檢視就會擲回例外狀況。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.DataSourceView.CanSort%2A>可擴充的類別中屬性<xref:System.Web.UI.DataSourceView>類別。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.UI.DataSourceView>類別。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.DataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出與目前 <see cref="T:System.Web.UI.DataSourceView" /> 物件關聯的 <see cref="T:System.Web.UI.DataSourceControl" /> 物件是否支援 <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> 作業。</summary>
        <value>如果支援該作業則為 <see langword="true" />，否則為 <see langword="false" />。 預設實作會傳回 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.CanUpdate%2A>屬性反映不僅功能的資料來源控制項，但也是否適合目前執行的作業。 比方說，即使資料繫結控制項支援<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>作業，如果未設定必要的更新命令或一些其他資料，則<xref:System.Web.UI.DataSourceView.CanUpdate%2A>屬性會傳回`false`，因為更新作業將會失敗。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.DataSourceView.CanUpdate%2A>屬性和<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>方法，在該類別可擴充<xref:System.Web.UI.DataSourceView>類別。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.UI.DataSourceView>類別。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceViewChanged;" />
      <MemberSignature Language="F#" Value="member this.DataSourceViewChanged : EventHandler " Usage="member this.DataSourceViewChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當資料來源檢視已變更時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料來源檢視的變更可能是因為變更其屬性，或變更資料，因為資料來源檢視所執行的資料作業的值。  
  
 如需有關如何處理事件的詳細資訊，請參閱 < [NIB： 使用事件](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Delete (keys As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Delete (keys, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">
          <see cref="T:System.Collections.IDictionary" /> 作業將刪除的物件或資料列索引鍵 <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />。</param>
        <param name="oldValues">名稱/值組的 <see cref="T:System.Collections.IDictionary" />，表示資料項目及其原始值。</param>
        <param name="callback">
          <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> 委派，當非同步作業完成時，用來告知資料繫結控制項。</param>
        <summary>在 <see cref="T:System.Web.UI.DataSourceView" /> 物件表示的資料清單上，執行非同步刪除作業。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Delete%2A>方法就是所有的資料來源檢視物件的非同步資料刪除介面。 <xref:System.Web.UI.DataSourceView.Delete%2A>方法呼叫<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>方法使用任何`keys`和`oldValues`提供的參數值。 `callback`參數是委派，在資料繫結控制項傳遞至資料來源檢視，以便用來告知資料繫結控制何時<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>作業已完成。 此方法會使用的參數<xref:System.Web.UI.DataSourceViewOperationCallback>傳回的受影響的記錄和任何數目的委派<xref:System.Exception>所擲回的例外狀況<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">提供的 <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Events : System.ComponentModel.EventHandlerList" Usage="System.Web.UI.DataSourceView.Events" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得資料來源檢視的事件處理常式委派清單。</summary>
        <value>事件處理常式委派的清單。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性的類型是<xref:System.ComponentModel.EventHandlerList>，這會使用線性搜尋演算法來尋找委派的清單中的項目。 使用大量的項目時，效率不佳的線性搜尋演算法。 因此，當您有大型的清單，尋找與這個屬性的項目可能會變慢。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>執行指定命令。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteCommand (commandName, keys, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="commandName">命令名稱。</param>
        <param name="keys">要對其作用的物件索引鍵或資料列索引鍵字典。</param>
        <param name="values">名稱/值組的字典，表示資料項目及其值。</param>
        <summary>執行指定命令。</summary>
        <returns>作業所影響的項目數目。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.ExecuteCommand : string * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.ExecuteCommand (commandName, keys, values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="commandName">命令名稱。</param>
        <param name="keys">要對其作用的物件索引鍵或資料列索引鍵字典。</param>
        <param name="values">名稱/值組的字典，表示資料項目及其值。</param>
        <param name="callback">
          <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> 物件。</param>
        <summary>執行指定命令。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法不會傳回值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">
          <see cref="T:System.Collections.IDictionary" /> 作業將刪除的物件或資料列索引鍵 <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />。</param>
        <param name="oldValues">名稱/值組的 <see cref="T:System.Collections.IDictionary" />，表示資料項目及其原始值。</param>
        <summary>在 <see cref="T:System.Web.UI.DataSourceView" /> 物件表示的資料清單上，執行刪除作業。</summary>
        <returns>從基礎資料儲存區中刪除的項目數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料繫結控制項可以決定是否<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>藉由擷取資料來源控制項所支援作業<xref:System.Web.UI.DataSourceView>物件使用<xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType>方法，並檢查<xref:System.Web.UI.DataSourceView.CanDelete%2A>屬性。  
  
 `keys`參數表示要刪除的資料物件或資料列索引鍵。 代表關聯式資料，例如資料來源<xref:System.Web.UI.WebControls.SqlDataSource>控制項，`keys`參數是資料庫主索引鍵的集合。 在其他情況下，`keys`參數是名稱/值組的集合，以及用來篩選資料的清單。 會刪除任何資料比對的名稱/值組。  
  
> [!NOTE]
>  <xref:System.Web.UI.DataSourceView>類別的預設實作會擲回<xref:System.NotSupportedException>例外狀況。 如果您擴充<xref:System.Web.UI.DataSourceView>類別中覆寫<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>方法，如果您的類別支援基礎資料儲存區中的要刪除。  
  
   
  
## Examples  
 下列程式碼範例示範如何在該類別可擴充<xref:System.Web.UI.DataSourceView>類別可以覆寫<xref:System.Web.UI.DataSourceView.CanDelete%2A>屬性和<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>方法。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.UI.DataSourceView>類別。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> 不支援 <see cref="T:System.Web.UI.DataSourceView" /> 作業。</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanDelete" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteInsert : System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">進行插入作業時使用之名稱/值組的 <see cref="T:System.Collections.IDictionary" />。</param>
        <summary>在 <see cref="T:System.Web.UI.DataSourceView" /> 物件表示的資料清單上，執行插入作業。</summary>
        <returns>插入至基礎資料儲存區的項目數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料繫結控制項可以決定是否<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>藉由擷取資料來源控制項所支援作業<xref:System.Web.UI.DataSourceView>物件使用<xref:System.Web.UI.DataSourceControl.GetView%2A>方法，並檢查<xref:System.Web.UI.DataSourceView.CanInsert%2A>屬性。  
  
 `values`參數是一組名稱/值組，表示資料行或欄位和要插入的對應值。  
  
> [!NOTE]
>  <xref:System.Web.UI.DataSourceView>類別的預設實作會擲回<xref:System.NotSupportedException>例外狀況。 如果您擴充<xref:System.Web.UI.DataSourceView>類別中覆寫<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>方法，如果您的類別支援基礎資料儲存區的插入。  
  
   
  
## Examples  
 下列程式碼範例示範如何在該類別可擴充<xref:System.Web.UI.DataSourceView>類別可以覆寫<xref:System.Web.UI.DataSourceView.CanInsert%2A>屬性和<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>方法。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.UI.DataSourceView>類別。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> 不支援 <see cref="T:System.Web.UI.DataSourceView" /> 作業。</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanInsert" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="dataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <see cref="T:System.Web.UI.DataSourceSelectArguments" />，用於針對資料要求基本資料擷取以外的作業。</param>
        <summary>從基礎資料儲存區取得資料清單。</summary>
        <returns>來自基礎資料儲存區的 <see cref="T:System.Collections.IEnumerable" /> 資料清單。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>會呼叫方法來擷取基礎資料存放區中的資料，並將它做為傳回<xref:System.Collections.IEnumerable>物件。 所有的資料來源控制項支援從其基礎資料儲存區擷取資料，即使不支援其他作業，例如插入和排序。 因為資料繫結控制項可以要求一份資料的任何時候<xref:System.Web.UI.IDataSource.DataSourceChanged>事件或<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>呼叫方法時，必須依需求執行資料擷取。  
  
   
  
## Examples  
 下列程式碼範例示範如何覆寫<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法，在該類別可擴充<xref:System.Web.UI.DataSourceView>類別。 `CsvDataSourceView`開啟的逗號分隔值 (.csv) 檔案、 加以逐行，剖析，並建立<xref:System.Data.DataTable>物件和<xref:System.Data.DataView>資料保留在記憶體中的物件。 如果所提供的其中一個，最後套用的排序運算式<xref:System.Web.UI.DataSourceSelectArguments>物件，而<xref:System.Data.DataView>物件會當做傳回<xref:System.Collections.IEnumerable>執行個體。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.UI.DataSourceView>類別。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int&#xA;override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="dataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">更新作業將更新的物件或資料列索引鍵 <see cref="T:System.Collections.IDictionary" />。</param>
        <param name="values">名稱/值組的 <see cref="T:System.Collections.IDictionary" />，表示資料項目及其新值。</param>
        <param name="oldValues">名稱/值組的 <see cref="T:System.Collections.IDictionary" />，表示資料項目及其原始值。</param>
        <summary>在 <see cref="T:System.Web.UI.DataSourceView" /> 物件表示的資料清單上，執行更新作業。</summary>
        <returns>在基礎資料儲存區中更新的項目數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 資料繫結控制項可以決定是否<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>作業，會使用支援資料來源控制項<xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType>方法來擷取<xref:System.Web.UI.DataSourceView>物件，並檢查值<xref:System.Web.UI.DataSourceView.CanUpdate%2A>屬性。  
  
 `keys`參數表示要更新之資料的物件或資料列索引鍵。 代表關聯式資料，例如資料來源<xref:System.Web.UI.WebControls.SqlDataSource>控制項，`keys`參數是資料庫主索引鍵的集合。 在其他情況下，`keys`參數是名稱/值組的集合，以及用來篩選資料的清單。 比對的名稱/值組的任何資料的中找到的值來更新`values`參數，這是一組名稱/值組，其代表現有的欄位或資料行的新值。  
  
> [!NOTE]
>  <xref:System.Web.UI.DataSourceView>類別的預設實作會擲回<xref:System.NotSupportedException>例外狀況。 如果您擴充<xref:System.Web.UI.DataSourceView>類別中覆寫<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>方法，如果您的類別支援基礎資料儲存區中的資料更新。  
  
   
  
## Examples  
 下列程式碼範例示範如何在該類別可擴充<xref:System.Web.UI.DataSourceView>類別可以覆寫<xref:System.Web.UI.DataSourceView.CanUpdate%2A>屬性和<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>方法。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.UI.DataSourceView>類別。  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> 不支援 <see cref="T:System.Web.UI.DataSourceView" /> 作業。</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanUpdate" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Insert : System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Insert (values, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="values">進行插入作業時使用之名稱/值組的 <see cref="T:System.Collections.IDictionary" />。</param>
        <param name="callback">
          <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> 委派，當非同步作業完成時，用來告知資料繫結控制項。</param>
        <summary>在 <see cref="T:System.Web.UI.DataSourceView" /> 物件表示的資料清單上，執行非同步插入作業。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Insert%2A>方法就是所有的資料來源檢視物件的非同步資料插入介面。 <xref:System.Web.UI.DataSourceView.Insert%2A>方法呼叫<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>方法使用任何`values`提供。 `callback`參數是委派，在資料繫結控制項傳遞至資料來源檢視，以便用來告知資料繫結控制何時<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>作業已完成。 此方法會使用的參數<xref:System.Web.UI.DataSourceViewOperationCallback>傳回的受影響的記錄和任何數目的委派<xref:System.Exception>所擲回的例外狀況<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>方法呼叫。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">提供的 <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.UI.DataSourceView.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得資料來源檢視的名稱。</summary>
        <value>
          <see cref="T:System.Web.UI.DataSourceView" /> 的名稱，如果有的話。 預設值是 <see cref="F:System.String.Empty" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataSourceViewChanged : EventArgs -&gt; unit&#xA;override this.OnDataSourceViewChanged : EventArgs -&gt; unit" Usage="dataSourceView.OnDataSourceViewChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A>基礎資料來源已變更，並應該重新繫結控制項，並執行任何必要的工作，方法會告知資料繫結控制項。 一般而言，<xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A>資料來源檢視的屬性已經變更時呼叫方法。  
  
 引發事件會透過委派叫用此事件處理常式。 如需詳細資訊，請參閱 <<c0> [ 處理和引發事件](~/docs/standard/events/index.md)。  
  
 <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> 方法也允許衍生類別處理事件，而不用附加委派。 這是在衍生類別中處理事件的慣用技巧。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當覆寫<see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />衍生類別時，請務必呼叫基底類別的<see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />方法，讓已註冊的委派收到事件。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="abstract member RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit&#xA;override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="dataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">其中一個 <see cref="T:System.Web.UI.DataSourceCapabilities" /> 值，與檢視支援的功能做比較。</param>
        <summary>由 <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> 方法呼叫，以比較針對 <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 作業要求的功能與檢視支援的功能。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError%2A>方法可由資料來源檢視來檢查每個資料繫結控制項，表示所要求的功能<xref:System.Web.UI.DataSourceSelectArguments>物件傳遞給<xref:System.Web.UI.DataSourceView.Select%2A>方法，並比較它的功能支援的資料原始碼 檢視中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">資料來源檢視不支援指定的資料來源功能。</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(class System.Web.UI.DataSourceSelectArguments arguments, class System.Web.UI.DataSourceViewSelectCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (arguments As DataSourceSelectArguments, callback As DataSourceViewSelectCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Web::UI::DataSourceSelectArguments ^ arguments, System::Web::UI::DataSourceViewSelectCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit&#xA;override this.Select : System.Web.UI.DataSourceSelectArguments * System.Web.UI.DataSourceViewSelectCallback -&gt; unit" Usage="dataSourceView.Select (arguments, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewSelectCallback" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <see cref="T:System.Web.UI.DataSourceSelectArguments" />，用於針對資料要求基本資料擷取以外的作業。</param>
        <param name="callback">
          <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> 委派，當非同步作業完成時，用來告知資料繫結控制項。</param>
        <summary>從基礎資料儲存區非同步取得資料清單。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Select%2A>方法就是所有的資料來源檢視物件的非同步資料擷取介面。 <xref:System.Web.UI.DataSourceView.Select%2A>方法呼叫<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>方法，傳遞任何<xref:System.Web.UI.DataSourceSelectArguments>提供。 `callback`參數是委派，在資料繫結控制項傳遞至資料來源檢視，以便用來告知資料繫結控制何時<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>作業已完成。 所傳回的資料<xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>呼叫的參數中傳回<xref:System.Web.UI.DataSourceViewSelectCallback>委派。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">提供的 <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewSelectCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit&#xA;override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary * System.Web.UI.DataSourceViewOperationCallback -&gt; unit" Usage="dataSourceView.Update (keys, values, oldValues, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">更新作業將更新的物件或資料列索引鍵 <see cref="T:System.Collections.IDictionary" />。</param>
        <param name="values">名稱/值組的 <see cref="T:System.Collections.IDictionary" />，表示資料項目及其新值。</param>
        <param name="oldValues">名稱/值組的 <see cref="T:System.Collections.IDictionary" />，表示資料項目及其原始值。</param>
        <param name="callback">
          <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> 委派，當非同步作業完成時，用來告知資料繫結控制項。</param>
        <summary>在 <see cref="T:System.Web.UI.DataSourceView" /> 物件表示的資料清單上，執行非同步更新作業。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataSourceView.Update%2A>方法就是所有的資料來源檢視物件的非同步資料修改介面。 <xref:System.Web.UI.DataSourceView.Update%2A>方法呼叫<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>方法使用任何`keys`， `values`，和`oldValues`提供的參數值。 `callback`參數是委派，在資料繫結控制項傳遞至資料來源檢視，以便用來告知資料繫結控制何時<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>作業已完成。 此方法會使用的參數<xref:System.Web.UI.DataSourceViewOperationCallback>傳回的受影響的記錄和任何數目的委派<xref:System.Exception>所擲回的例外狀況<xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>呼叫。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">提供的 <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>