<Type Name="PageAsyncTask" FullName="System.Web.UI.PageAsyncTask">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9200f0d5a36d7d9b1c59b031ca32d0e2c5500b69" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36376647" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PageAsyncTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PageAsyncTask extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageAsyncTask" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PageAsyncTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAsyncTask sealed" />
  <TypeSignature Language="F#" Value="type PageAsyncTask = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="aeeaa-101">包含註冊到網頁之非同步工作的資訊。</span>
      <span class="sxs-lookup">
        <span data-stu-id="aeeaa-101">Contains information about an asynchronous task registered to a page.</span>
      </span>
      <span data-ttu-id="aeeaa-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="aeeaa-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeeaa-103">ASP.NET 2.0 版可讓您註冊多個工作的頁面和之前頁面的呈現以非同步方式執行。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-103">ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</span></span> <span data-ttu-id="aeeaa-104">您可以指定是否緩慢的程序，而且不想讓其他處理程序執行時，這會因工作會以非同步方式執行。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-104">You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</span></span> <span data-ttu-id="aeeaa-105">以平行方式或依序執行的非同步工作。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-105">The asynchronous tasks can be executed in parallel or sequentially.</span></span>  
  
 <span data-ttu-id="aeeaa-106">A<xref:System.Web.UI.PageAsyncTask>物件必須透過網頁註冊<xref:System.Web.UI.Page.RegisterAsyncTask%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-106">A <xref:System.Web.UI.PageAsyncTask> object must be registered to the page through the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method.</span></span> <span data-ttu-id="aeeaa-107">若要以非同步方式處理執行非同步工作沒有頁面本身。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-107">The page itself does not have to be processed asynchronously to execute asynchronous tasks.</span></span> <span data-ttu-id="aeeaa-108">您可以設定`Async`屬性設為  `true` （如下列程式碼範例所示） 或`false`頁面上指示詞和非同步工作會仍會以非同步方式處理：</span><span class="sxs-lookup"><span data-stu-id="aeeaa-108">You can set the `Async` attribute to either `true` (as shown in the following code example) or `false` on the page directive and the asynchronous tasks will still be processed asynchronously:</span></span>  
  
 `<%@ Page Async="true" %>`  
  
 <span data-ttu-id="aeeaa-109">當`Async`屬性設為`false`，執行頁面的執行緒會封鎖，直到所有的非同步工作完成為止。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-109">When the `Async` attribute is set to `false`, the thread that executes the page will be blocked until all asynchronous tasks are complete.</span></span>  
  
 <span data-ttu-id="aeeaa-110">註冊任何非同步工作，才能<xref:System.Web.UI.Page.PreRenderComplete>事件將會自動由頁面時執行它們已經尚未執行。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-110">Any asynchronous tasks registered before the <xref:System.Web.UI.Page.PreRenderComplete> event will be executed automatically by the page if they have not already been executed.</span></span> <span data-ttu-id="aeeaa-111">這些非同步工作註冊之後<xref:System.Web.UI.Page.PreRenderComplete>必須明確地透過執行事件<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-111">Those asynchronous tasks registered after the <xref:System.Web.UI.Page.PreRenderComplete> event must be executed explicitly through the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method.</span></span> <span data-ttu-id="aeeaa-112"><xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>方法也可用來啟動工作，再<xref:System.Web.UI.Page.PreRenderComplete>事件。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-112">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method can also be used to start tasks before the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="aeeaa-113"><xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>尚未執行的頁面上執行所有已註冊的非同步工作的方法。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-113">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method executes all the registered asynchronous tasks on the page that have not been executed.</span></span>  
  
 <span data-ttu-id="aeeaa-114">根據預設，非同步工作會逾時如果未在 45 秒內完成。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-114">By default, an asynchronous task will time out if it has not completed within 45 seconds.</span></span> <span data-ttu-id="aeeaa-115">您可以在 Web.config 檔或 page 指示詞中指定不同的逾時值。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-115">You can specify a different time-out value in either the Web.config file or the page directive.</span></span> <span data-ttu-id="aeeaa-116">`<pages>` Web.config 檔案區段包含`asyncTimeout`屬性，如下所示。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-116">The `<pages>` section of the Web.config file contains an `asyncTimeout` attribute, as shown below.</span></span>  
  
 `<system.web>`  
  
 `<pages asyncTimeout="30">`  
  
 `</pages>`  
  
 `</system.web>`  
  
 <span data-ttu-id="aeeaa-117">頁面指示詞包含`AsyncTimeout`屬性。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-117">The page directive contains an `AsyncTimeout` attribute.</span></span>  
  
 `<%@ Page AsyncTimeout="30" %>`  
  
   
  
## Examples  
 <span data-ttu-id="aeeaa-118">下列程式碼範例會註冊至頁面的三個非同步工作，並以平行方式執行。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-118">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="aeeaa-119">每個工作都會呼叫的方法，只會造成執行緒睡眠 5 秒鐘。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-119">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="aeeaa-120">初始化 <see cref="T:System.Web.UI.PageAsyncTask" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-120">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of CancellationToken, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="aeeaa-121">事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-121">An event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aeeaa-122">使用可取消工作的事件處理常式，初始化 <see cref="T:System.Web.UI.PageAsyncTask" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-122">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be canceled.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeeaa-123">這個建構函式會包裝<xref:System.Web.TaskEventHandler>委派以便<xref:System.Web.UI.PageAsyncTask>物件可以整合非同步程式碼 (根據<xref:System.Threading.Tasks.Task>物件) 與現有的 ASP.NET Web Form 非同步頁面功能。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-123">This constructor wraps a <xref:System.Web.TaskEventHandler> delegate so that the <xref:System.Web.UI.PageAsyncTask> object can integrate asynchronous code (based on <xref:System.Threading.Tasks.Task> objects) with the existing ASP.NET Web Forms asynchronous pages feature.</span></span> <span data-ttu-id="aeeaa-124">表示 ASP.NET 將<xref:System.Threading.CancellationToken>傳遞至物件<xref:System.Web.TaskEventHandler>委派有無取消情形根據<xref:System.Web.UI.Page.AsyncTimeout%2A>屬性中設定`@ Page`網頁指示詞。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-124">ASP.NET will signal the <xref:System.Threading.CancellationToken> object that is passed to a <xref:System.Web.TaskEventHandler> delegate for cancellation based on the <xref:System.Web.UI.Page.AsyncTimeout%2A> attribute set in the `@ Page` directive of the Web page.</span></span> <span data-ttu-id="aeeaa-125">當<xref:System.Web.UI.Page.AsyncTimeout%2A>值已達到，<xref:System.Threading.CancellationToken>物件將會收到信號。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-125">When the <xref:System.Web.UI.Page.AsyncTimeout%2A> value has been reached, the <xref:System.Threading.CancellationToken> object will be signaled.</span></span> <span data-ttu-id="aeeaa-126">`CancellationToken`參數必須傳遞至您的實作會呼叫任何非同步 Api<xref:System.Web.TaskEventHandler>類別。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-126">The `CancellationToken` parameter must be passed to any asynchronous APIs that are called by your implementation of the <xref:System.Web.TaskEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="aeeaa-127">事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-127">An event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aeeaa-128">使用可處理工作的事件處理常式，初始化 <see cref="T:System.Web.UI.PageAsyncTask" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-128">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be handled.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="aeeaa-129">當開始非同步工作時要呼叫的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-129">The handler to call when beginning an asynchronous task.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="aeeaa-130">當工作在逾時期限內成功完成時要呼叫的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-130">The handler to call when the task is completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="timeoutHandler">
          <span data-ttu-id="aeeaa-131">當工作未在逾時期限內成功完成時要呼叫的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-131">The handler to call when the task is not completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="aeeaa-132">表示工作狀態的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-132">The object that represents the state of the task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aeeaa-133">使用平行執行的預設值，初始化 <see cref="T:System.Web.UI.PageAsyncTask" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-133">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the default value for executing in parallel.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeeaa-134">這項實作建構函式設定<xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A>屬性`false`以便與頁面上的其他工作平行處理時，非同步工作。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-134">This implementation of the constructor sets the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property to `false` so the asynchronous task is not processed in parallel with other tasks on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aeeaa-135">
            <paramref name="beginHandler" /> 參數或 <paramref name="endHandler" /> 參數未指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-135">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object, executeInParallel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state, bool executeInParallel);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj * bool -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state, executeInParallel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="executeInParallel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="beginHandler">
          <span data-ttu-id="aeeaa-136">當開始非同步工作時要呼叫的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-136">The handler to call when beginning an asynchronous task.</span>
          </span>
        </param>
        <param name="endHandler">
          <span data-ttu-id="aeeaa-137">當工作在逾時期限內成功完成時要呼叫的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-137">The handler to call when the task is completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="timeoutHandler">
          <span data-ttu-id="aeeaa-138">當工作未在逾時期限內成功完成時要呼叫的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-138">The handler to call when the task is not completed successfully within the time-out period.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="aeeaa-139">表示工作狀態的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-139">The object that represents the state of the task.</span>
          </span>
        </param>
        <param name="executeInParallel">
          <span data-ttu-id="aeeaa-140">指出工作是否可以和其他工作平行處理之值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-140">The value that indicates whether the task can be processed in parallel with other tasks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aeeaa-141">使用平行執行之指定的值，初始化 <see cref="T:System.Web.UI.PageAsyncTask" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-141">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the specified value for executing in parallel.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeeaa-142">這個建構函式的實作可讓您設定是否會與頁面上的其他工作平行處理非同步工作。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-142">This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aeeaa-143">下列程式碼範例會建立三個非同步工作會處理以平行方式彼此。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-143">The following code example creates three asynchronous tasks that are processed in parallel to each other.</span></span> <span data-ttu-id="aeeaa-144">這個範例是在中找到之較大範例的一部分<xref:System.Web.UI.PageAsyncTask>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-144">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="aeeaa-145">
            <paramref name="beginHandler" /> 參數或 <paramref name="endHandler" /> 參數未指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-145">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginHandler : System.Web.BeginEventHandler" Usage="System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aeeaa-146">取得當開始非同步工作時所要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-146">Gets the method to call when beginning an asynchronous task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aeeaa-147">
            <see cref="T:System.Web.BeginEventHandler" /> 委派，表示當開始非同步工作時所要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-147">A <see cref="T:System.Web.BeginEventHandler" /> delegate that represents the method to call when beginning the asynchronous task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeeaa-148"><xref:System.Web.UI.PageAsyncTask.BeginHandler%2A>委派設定於建構函式。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-148">The <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aeeaa-149">下列程式碼範例會註冊至頁面的三個非同步工作，並以平行方式執行。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-149">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="aeeaa-150">每個工作都會呼叫的方法，只會造成執行緒睡眠 5 秒鐘。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-150">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="aeeaa-151">A<xref:System.Web.UI.PageAsyncTask.BeginHandler%2A>委派指定的每個工作。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-151">A <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aeeaa-152">取得當工作在逾時期限內成功完成時所要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-152">Gets the method to call when the task completes successfully within the time-out period.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aeeaa-153">
            <see cref="T:System.Web.EndEventHandler" /> 委派，表示當工作在逾時期限內成功完成時所要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-153">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task completes successfully within the time-out period.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeeaa-154"><xref:System.Web.UI.PageAsyncTask.EndHandler%2A>委派設定於建構函式。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-154">The <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aeeaa-155">下列程式碼範例會註冊至頁面的三個非同步工作，並以平行方式執行。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-155">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="aeeaa-156">每個工作都會呼叫的方法，只會造成執行緒睡眠 5 秒鐘。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-156">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="aeeaa-157"><xref:System.Web.UI.PageAsyncTask.EndHandler%2A>委派指定的每個工作。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-157">An <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteInParallel">
      <MemberSignature Language="C#" Value="public bool ExecuteInParallel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExecuteInParallel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecuteInParallel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExecuteInParallel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecuteInParallel : bool" Usage="System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aeeaa-158">取得值，指出工作是否可以和其他工作平行處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-158">Gets a value that indicates whether the task can be processed in parallel with other tasks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aeeaa-159">如果工作應該和其他工作平行處理，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-159">
              <see langword="true" /> if the task should be processed in parallel with other tasks; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeeaa-160"><xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A>屬性設定於建構函式。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-160">The <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set in the constructor.</span></span> <span data-ttu-id="aeeaa-161">當多個工作都登錄在網頁和<xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A>屬性設定為`true`，則會同時處理這些工作。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-161">When multiple tasks are registered in a page and the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `true`, then those tasks are processed concurrently.</span></span> <span data-ttu-id="aeeaa-162">不過，如果<xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A>屬性設定為`false`，則會依序處理這些工作。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-162">However, if the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `false`, then those tasks are processed sequentially.</span></span> <span data-ttu-id="aeeaa-163">例如，如果頁面包含兩個非同步工作，每個花費 5 秒才能完成和<xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A>設為`true`，這兩項工作將在 5 秒內完成。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-163">For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `true`, both tasks will complete in 5 seconds.</span></span> <span data-ttu-id="aeeaa-164">如果<xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A>設`false`這些相同的兩個工作，則第一項工作會在 5 秒內完成，而第二個工作完成第一項工作完成後的 5 秒。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-164">If <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `false` for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aeeaa-165">下列程式碼範例會定義三個非同步工作，每個設定為以平行方式處理。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-165">The following code example defines three asynchronous tasks that are each set to be processed in parallel.</span></span> <span data-ttu-id="aeeaa-166">這個範例是在中找到之較大範例的一部分<xref:System.Web.UI.PageAsyncTask>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-166">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public object State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object State" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ State { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.State : obj" Usage="System.Web.UI.PageAsyncTask.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aeeaa-167">取得會表示工作狀態的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-167">Gets an object that represents the state of the task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aeeaa-168">
            <see cref="T:System.Object" />，表示工作狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-168">An <see cref="T:System.Object" /> that represents the state of the task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeeaa-169"><xref:System.Web.UI.PageAsyncTask.State%2A>屬性設定於建構函式，而且無法修改執行非同步工作的期間。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-169">The <xref:System.Web.UI.PageAsyncTask.State%2A> property is set in the constructor and cannot be modified during execution of the asynchronous task.</span></span> <span data-ttu-id="aeeaa-170">您可以藉由指派到其各自的唯一字串值來區分在網頁中的非同步工作<xref:System.Web.UI.PageAsyncTask.State%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-170">You can differentiate asynchronous tasks in a page by assigning unique string values to their respective <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aeeaa-171">下列程式碼範例會建立三個非同步工作，並提供唯一值及其<xref:System.Web.UI.PageAsyncTask.State%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-171">The following code example creates three asynchronous tasks and gives them unique values for their <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span> <span data-ttu-id="aeeaa-172">這個範例是在中找到之較大範例的一部分<xref:System.Web.UI.PageAsyncTask>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-172">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler TimeoutHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler TimeoutHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ TimeoutHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aeeaa-173">取得當工作未在逾時期限內成功完成時所要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-173">Gets the method to call when the task does not complete successfully within the time-out period.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aeeaa-174">
            <see cref="T:System.Web.EndEventHandler" /> 委派，表示當工作未在逾時期限內成功完成時所要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aeeaa-174">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task does not complete successfully within the time-out period.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aeeaa-175"><xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A>委派設定於建構函式。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-175">The <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aeeaa-176">下列程式碼範例會註冊至頁面的三個非同步工作，並以平行方式執行。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-176">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="aeeaa-177">每個工作都會呼叫的方法，只會造成執行緒睡眠 5 秒鐘。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-177">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="aeeaa-178">A<xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A>委派指定的每個工作。</span><span class="sxs-lookup"><span data-stu-id="aeeaa-178">A <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>