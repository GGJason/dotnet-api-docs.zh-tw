<Type Name="IChannel" FullName="System.ServiceModel.Channels.IChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf048a83a83d9d4dbb1dd852b5ce9805de7794ba" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30504832" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IChannel : System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannel implements class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannel&#xA;Implements ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannel : System::ServiceModel::ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="5fb60-101">定義所有通道物件都必須實作的基本介面。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5fb60-101">Defines the basic interface that all channel objects must implement.</span>
      </span>
      <span data-ttu-id="5fb60-102">它會要求這些物件實作所有通訊物件所共用的狀態機器介面，並要求這些物件實作一個方法來從通道堆疊擷取物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5fb60-102">It requires that they implement the state machine interface shared by all communication objects and that they implement a method to retrieve objects from the channel stack.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fb60-103">通道必須滿足 <xref:System.ServiceModel.ICommunicationObject> 介面所定義之狀態機器的合約。</span><span class="sxs-lookup"><span data-stu-id="5fb60-103">Channels must satisfy the contract of a state machine as defined by the <xref:System.ServiceModel.ICommunicationObject> interface.</span></span>  
  
 <span data-ttu-id="5fb60-104"><xref:System.ServiceModel.Channels.IChannel> 介面會將</span><span class="sxs-lookup"><span data-stu-id="5fb60-104">The <xref:System.ServiceModel.Channels.IChannel> interface adds the</span></span>  
  
 <span data-ttu-id="5fb60-105"><xref:System.ServiceModel.Channels.IChannel.GetProperty%2A> 方法新增至 <xref:System.ServiceModel.ICommunicationObject> 介面中。</span><span class="sxs-lookup"><span data-stu-id="5fb60-105"><xref:System.ServiceModel.Channels.IChannel.GetProperty%2A> method to the <xref:System.ServiceModel.ICommunicationObject> interface.</span></span> <span data-ttu-id="5fb60-106">這個方法會提供從通道堆疊擷取屬性的機制，不管這些屬性位於堆疊中的何處。</span><span class="sxs-lookup"><span data-stu-id="5fb60-106">This method provides a mechanism for retrieving properties from the channel stack regardless of where in the stack those properties live.</span></span> <span data-ttu-id="5fb60-107">方法名稱中的「屬性」一詞指的是屬於堆疊內其中一個通道的資訊片段。</span><span class="sxs-lookup"><span data-stu-id="5fb60-107">The term "property" in the method name refers to a piece of information that belongs to one of the channels in the stack.</span></span> <span data-ttu-id="5fb60-108">該屬性的 CLR 型別是由 `T` 所決定。</span><span class="sxs-lookup"><span data-stu-id="5fb60-108">The CLR type for that property is determined by `T`.</span></span> <span data-ttu-id="5fb60-109">這個擷取方法也會在通道處理站和通道接聽程式上使用。</span><span class="sxs-lookup"><span data-stu-id="5fb60-109">This method of retrieval is also used on channel factories and channel listeners.</span></span>  
  
 <span data-ttu-id="5fb60-110">`IChannel` 會由與基本訊息交換模式相關的每一個通道介面所繼承：</span><span class="sxs-lookup"><span data-stu-id="5fb60-110">`IChannel` is inherited by each of the channel interfaces associated with the basic message-exchange patterns:</span></span>  
  
-   <span data-ttu-id="5fb60-111">用於接收訊息的 <xref:System.ServiceModel.Channels.IInputChannel>。</span><span class="sxs-lookup"><span data-stu-id="5fb60-111"><xref:System.ServiceModel.Channels.IInputChannel> for receiving messages.</span></span>  
  
-   <span data-ttu-id="5fb60-112">用於傳送訊息的 <xref:System.ServiceModel.Channels.IOutputChannel>。</span><span class="sxs-lookup"><span data-stu-id="5fb60-112"><xref:System.ServiceModel.Channels.IOutputChannel> for sending messages.</span></span>  
  
-   <span data-ttu-id="5fb60-113">用於傳送要求的 <xref:System.ServiceModel.Channels.IRequestChannel>。</span><span class="sxs-lookup"><span data-stu-id="5fb60-113"><xref:System.ServiceModel.Channels.IRequestChannel> for sending a request.</span></span>  
  
-   <span data-ttu-id="5fb60-114">用於傳送回覆的 <xref:System.ServiceModel.Channels.IReplyChannel>。</span><span class="sxs-lookup"><span data-stu-id="5fb60-114"><xref:System.ServiceModel.Channels.IReplyChannel> for sending a reply.</span></span>  
  
-   <span data-ttu-id="5fb60-115">用於雙向傳訊的 <xref:System.ServiceModel.Channels.IDuplexChannel>。</span><span class="sxs-lookup"><span data-stu-id="5fb60-115"><xref:System.ServiceModel.Channels.IDuplexChannel> for bi-directional messaging.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannel.GetProperty``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetProperty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="5fb60-116">此方法正在查詢的型別物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fb60-116">The typed object for which the method is querying.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="5fb60-117">從通道堆疊的適當層次中，傳回要求的型別物件 (如果有)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fb60-117">Returns a typed object requested, if present, from the appropriate layer in the channel stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5fb60-118">要求的型別物件 <paramref name="T" /> (如果存在的話)，如果不存在則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5fb60-118">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5fb60-119">使用此方法可要求型別物件，例如，用來從通道堆疊中的適當層次設定屬性或取得狀態的介面。</span><span class="sxs-lookup"><span data-stu-id="5fb60-119">Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.</span></span> <span data-ttu-id="5fb60-120">如果某個層次支援傳回要求的物件，它就會傳回物件。</span><span class="sxs-lookup"><span data-stu-id="5fb60-120">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="5fb60-121">如果不是，則會將呼叫向下委派到堆疊中的下一層。</span><span class="sxs-lookup"><span data-stu-id="5fb60-121">If not, it delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="5fb60-122">如果到達堆疊的底部，而且沒有任何通道層支援要求的物件，則該方法會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="5fb60-122">If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5fb60-123">下列範例會示範如何實作這個屬性，會將呼叫向下堆疊使用委派的通道`InnerChannel`屬性來擷取此通道的內部通道。</span><span class="sxs-lookup"><span data-stu-id="5fb60-123">The following sample shows how this property can be implemented by a channel that delegates the call down the stack using an`InnerChannel` property that retrieves the inner channel for this channel.</span></span>  
  
 [!code-csharp[S_UEIChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueichannel/cs/generatedclient.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>