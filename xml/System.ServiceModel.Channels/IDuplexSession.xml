<Type Name="IDuplexSession" FullName="System.ServiceModel.Channels.IDuplexSession">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7b801b05899f26eebe24bc1705382cc49a5b354" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51303349" /></Metadata><TypeSignature Language="C#" Value="public interface IDuplexSession : System.ServiceModel.Channels.IInputSession, System.ServiceModel.Channels.IOutputSession" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDuplexSession implements class System.ServiceModel.Channels.IInputSession, class System.ServiceModel.Channels.IOutputSession, class System.ServiceModel.Channels.ISession" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IDuplexSession" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDuplexSession&#xA;Implements IInputSession, IOutputSession" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDuplexSession : System::ServiceModel::Channels::IInputSession, System::ServiceModel::Channels::IOutputSession" />
  <TypeSignature Language="F#" Value="type IDuplexSession = interface&#xA;    interface IInputSession&#xA;    interface IOutputSession&#xA;    interface ISession" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IInputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IOutputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.ISession</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="e6d1e-101">針對在傳訊端點之間雙向通訊的每一端上實作的工作階段定義介面。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-101">Defines the interface for the session implemented on each side of a bi-directional communication between messaging endpoints.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d1e-102"><xref:System.ServiceModel.Channels.IDuplexSession> 介面是傳入工作階段 (由 <xref:System.ServiceModel.Channels.IInputSession> 介面所定義) 和傳出工作階段 (由 <xref:System.ServiceModel.Channels.IOutputSession> 介面所定易) 的聯合。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-102">The <xref:System.ServiceModel.Channels.IDuplexSession> interface is the union of the inbound session, defined by the <xref:System.ServiceModel.Channels.IInputSession> interface, and the outbound session, defined by the <xref:System.ServiceModel.Channels.IOutputSession> interface.</span></span> <span data-ttu-id="e6d1e-103">傳入工作階段或傳出工作階段都可以各自獨立結束。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-103">Either the inbound session or outbound session can be terminated independently of the other.</span></span> <span data-ttu-id="e6d1e-104">可以透過同步方式呼叫 <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> 或非同步方式呼叫 <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A> 來結束傳出工作階段。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-104">The outbound session can be terminated synchronously by calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> or asynchronously by calling <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A>.</span></span>  
  
 <span data-ttu-id="e6d1e-105">傳入工作階段可以在遠端結束。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-105">The inbound session can be remotely terminated.</span></span> <span data-ttu-id="e6d1e-106">與傳入工作階段相關聯的 <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> 會在該工作階段關閉時，開始傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-106">The <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> associated with the inbound session starts returning `null` when that session is shutdown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginCloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6d1e-107">開始非同步作業，以便結束傳出工作階段。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-107">Begins an asynchronous operation to terminate the outbound session.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="e6d1e-108"><see cref="T:System.AsyncCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-108">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="e6d1e-109">包含這個要求之狀態資訊的 <see langword="object" />。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-109">An <see langword="object" /> that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="e6d1e-110">開始非同步作業，以便結束傳出工作階段。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-110">Begins an asynchronous operation to terminate the outbound session.</span></span></summary>
        <returns><span data-ttu-id="e6d1e-111">參考非同步傳出工作階段終止的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-111">The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d1e-112">結束傳出工作階段不會影響連入工作階段，因此，對於在與輸入通道相關聯之工作階段上接收訊息的功能，不再加以說明。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-112">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span> <span data-ttu-id="e6d1e-113">這個作業必須在預設的時間間隔內完成。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-113">This operation must complete within a default interval of time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="e6d1e-114">指定作業必須完成之時間間隔的 <see cref="T:System.TimeSpan" /></span><span class="sxs-lookup"><span data-stu-id="e6d1e-114">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</span></span></param>
        <param name="callback"><span data-ttu-id="e6d1e-115"><see cref="T:System.AsyncCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-115">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="e6d1e-116">包含這個要求之狀態資訊的 <see langword="object" />。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-116">An <see langword="object" /> that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="e6d1e-117">開始非同步作業來結束傳出工作階段，且包含此作業必須在限期內完成的指定逾時值。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-117">Begins an asynchronous operation to terminate the outbound session with a specified timeout within which the operation must complete.</span></span></summary>
        <returns><span data-ttu-id="e6d1e-118">參考非同步傳出工作階段終止的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-118">The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d1e-119">結束傳出工作階段不會影響連入工作階段，因此，對於在與輸入通道相關聯之工作階段上接收訊息的功能，不再加以說明。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-119">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e6d1e-120">結束傳出工作階段，表示將不會再從與該工作階段相關聯之通道上的這個端點傳送任何訊息。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-120">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession();" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : unit -&gt; unit" Usage="iDuplexSession.CloseOutputSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e6d1e-121">結束傳出工作階段，表示將不會再從與該工作階段相關聯之通道上的這個端點傳送任何訊息。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-121">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d1e-122">呼叫 <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> 會對工作階段的另一端指示，它應該從任何未處理或後續的 `null` 呼叫傳回 <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-122">Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> signals to the other side of the session that it should return `null` from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span> <span data-ttu-id="e6d1e-123"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> 是等冪的，所以再次呼叫它沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-123"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.</span></span>  
  
 <span data-ttu-id="e6d1e-124">結束傳出工作階段不會影響連入工作階段，因此，對於在與輸入通道相關聯之工作階段上接收訊息的功能，不再加以說明。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-124">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e6d1e-125">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 是可以與擁有此工作階段之 <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> 互動的工作階段方法。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-125">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session.</span></span> <span data-ttu-id="e6d1e-126">特別是，如果您的工作階段存留期 (Lifetime) 與通道存留期放在一起 (就像與 TCP 和可靠的工作階段與安全性一起)：</span><span class="sxs-lookup"><span data-stu-id="e6d1e-126">In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):</span></span> 
<span data-ttu-id="e6d1e-127">-如果<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />之前，會呼叫<see cref="M:System.ServiceModel.ICommunicationObject.Close" />通道上呼叫<see cref="M:System.ServiceModel.ICommunicationObject.Close" />應該等候<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />才能完成。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-127">-   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.</span></span>  
  
<span data-ttu-id="e6d1e-128">-如果通道處於<see cref="F:System.ServiceModel.CommunicationState.Created" />或是<see cref="F:System.ServiceModel.CommunicationState.Opening" />狀態<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />應該擲回<see cref="T:System.InvalidOperationException" />。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-128">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.</span></span>  
  
<span data-ttu-id="e6d1e-129">-如果通道處於<see cref="F:System.ServiceModel.CommunicationState.Faulted" />狀態，<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />應該擲回<see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-129">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span></span>  
  
<span data-ttu-id="e6d1e-130">-通道應該發生錯誤，如果<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />會擲回。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-130">-   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.</span></span>  
  
<span data-ttu-id="e6d1e-131">-實作<see cref="M:System.ServiceModel.ICommunicationObject.Close" />應該呼叫在通道<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />，然後確認<see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" />會傳回<see langword="null" />，這表示<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />已從工作階段的另一端呼叫。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-131">-   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, which indicates that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : TimeSpan -&gt; unit" Usage="iDuplexSession.CloseOutputSession timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="e6d1e-132">指定作業必須完成之時間間隔的 <see cref="T:System.TimeSpan" /></span><span class="sxs-lookup"><span data-stu-id="e6d1e-132">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</span></span></param>
        <summary><span data-ttu-id="e6d1e-133">結束傳出工作階段，表示在指定的時間間隔內，將不會再從與該工作階段相關聯之通道上的這個端點傳送任何訊息。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-133">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session within a specified interval of time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d1e-134">呼叫 <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> 會對工作階段的另一端指示，它應該從任何未處理或後續的 `null` 呼叫傳回 <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-134">Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> signals to the other side of the session that it should return `null` from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span> <span data-ttu-id="e6d1e-135"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> 是等冪的，所以再次呼叫它沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-135"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.</span></span>  
  
 <span data-ttu-id="e6d1e-136">結束傳出工作階段不會影響連入工作階段，因此，對於在與輸入通道相關聯之工作階段上接收訊息的功能，不再加以說明。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-136">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e6d1e-137">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> 是可以與擁有此工作階段之 <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> 互動的工作階段方法。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-137">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session.</span></span> <span data-ttu-id="e6d1e-138">特別是，如果您的工作階段存留期 (Lifetime) 與通道存留期放在一起 (就像與 TCP 和可靠的工作階段與安全性一起)：</span><span class="sxs-lookup"><span data-stu-id="e6d1e-138">In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):</span></span> 
<span data-ttu-id="e6d1e-139">-如果<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />之前，會呼叫<see cref="M:System.ServiceModel.ICommunicationObject.Close" />通道上呼叫<see cref="M:System.ServiceModel.ICommunicationObject.Close" />應該等候<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />才能完成。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-139">-   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.</span></span>  
  
<span data-ttu-id="e6d1e-140">-如果通道處於<see cref="F:System.ServiceModel.CommunicationState.Created" />或是<see cref="F:System.ServiceModel.CommunicationState.Opening" />狀態<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />應該擲回<see cref="T:System.InvalidOperationException" />。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-140">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.</span></span>  
  
<span data-ttu-id="e6d1e-141">-如果通道處於<see cref="F:System.ServiceModel.CommunicationState.Faulted" />狀態，<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />應該擲回<see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-141">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span></span>  
  
<span data-ttu-id="e6d1e-142">-通道應該發生錯誤，如果<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />會擲回。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-142">-   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.</span></span>  
  
<span data-ttu-id="e6d1e-143">-實作<see cref="M:System.ServiceModel.ICommunicationObject.Close" />應該呼叫在通道<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />，然後確認<see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" />會傳回<see langword="null" />，這表示，<see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />已從工作階段的另一端呼叫。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-143">-   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, indicating that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndCloseOutputSession">
      <MemberSignature Language="C#" Value="public void EndCloseOutputSession (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCloseOutputSession(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCloseOutputSession (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCloseOutputSession(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCloseOutputSession : IAsyncResult -&gt; unit" Usage="iDuplexSession.EndCloseOutputSession result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="e6d1e-144"><see cref="T:System.IAsyncResult" />，呼叫其中一種 <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /> 方法時傳回。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-144">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /> methods.</span></span></param>
        <summary><span data-ttu-id="e6d1e-145">完成非同步作業來結束傳出工作階段，表示將不會再從與該工作階段相關聯之通道上的這個端點傳送任何訊息。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-145">Completes an asynchronous operation to terminate the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6d1e-146">結束傳出工作階段不會影響連入工作階段，因此，對於在與輸入通道相關聯之工作階段上接收訊息的功能，不再加以說明。</span><span class="sxs-lookup"><span data-stu-id="e6d1e-146">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>