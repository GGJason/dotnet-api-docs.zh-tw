<Type Name="Message" FullName="System.ServiceModel.Channels.Message">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0847569b1e522fad36bc8880e15b8dc56d50906" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49140256" /></Metadata><TypeSignature Language="C#" Value="public abstract class Message : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Message extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.Message" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Message&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Message abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type Message = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示分散式環境中端點之間的通訊單位。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.Message> 類別提供在網路上傳送者和接收者之間進行任意資訊通訊的方法。 它可以用於轉送資訊、建議或要求動作或要求資料。  
  
 <xref:System.ServiceModel.Channels.Message> 物件的結構表示 SOAP 封套。 它是由兩個不同的部分組成的：訊息的本文和標頭的選擇性集合，由 <xref:System.ServiceModel.Channels.Message.Headers%2A> 類別表示。 訊息內容是從傳送者傳送到接收者的應用程式定義資料。 訊息標頭可讓系統和應用程式擴充性符合多變的需求，因為您可以將程式碼定義成操作及回應特定的標頭。 您還可以定義自己的標頭。 訊息標頭會和訊息的內容一起序列化或還原序列化。  
  
 訊息會使用特定的格式進行接收及傳送。 提供兩種格式的支援：以標準文字為基礎的 XML 格式和以二進位為基礎的 XML 格式。 <xref:System.ServiceModel.Channels.Message> 物件可以用來表示 SOAP 1.1 和 SOAP 1.2 封套。 請注意，<xref:System.ServiceModel.Channels.Message> 的執行個體會在建立時固定，並且繫結至特定的 SOAP 版本。 <xref:System.ServiceModel.Channels.Message.Version%2A> 屬性表示訊息的 SOAP 版本。  
  
 <xref:System.ServiceModel.Channels.Message> 物件可以使用 <xref:System.ServiceModel.Channels.Message.WriteMessage%2A> 方法序列化到外部存放區。 雖然訊息的屬性也可以序列化，但是必須個別進行識別和序列化。 使用 <xref:System.ServiceModel.Channels.Message>，即可還原序列化訊息以建立記憶體中 <xref:System.ServiceModel.Channels.Message.CreateMessage%2A> 物件。 屬性也必須個別進行還原序列化，並手動新增至特定 <xref:System.ServiceModel.Channels.Message> 執行個體的屬性集合。  
  
 <xref:System.ServiceModel.Channels.Message> 物件的大小是由所傳輸的資料大小決定。 每個本文都會模型化成 <xref:System.Xml.XmlReader> 的執行個體，而且對於 <xref:System.Xml.XmlReader> 執行個體正在包裝的資料流大小沒有預先定義的限制。 然而，特定的通道提供者可以對所處理的訊息大小設定限制。  
  
 <xref:System.ServiceModel.Channels.Message> 可加上由已檢查並處理訊息的實體所產生之有用資訊的註解。 這個功能是由 <xref:System.ServiceModel.Channels.Message.Headers%2A> 和 <xref:System.ServiceModel.Channels.Message.Properties%2A> 屬性提供。 <xref:System.ServiceModel.Channels.Message.Headers%2A> 集合表示訊息上的一組 SOAP 標頭。  
  
 <xref:System.ServiceModel.Channels.Message.Properties%2A> 屬性表示訊息上的一組處理等級附註。 由於標頭中的資訊會在網路上傳輸，因此檢查標頭的實體必須支援該標頭所使用通訊協定的基礎版本。 然而，屬性會提供與版本更加無關的方法來註解訊息。  
  
 如果要建立 <xref:System.ServiceModel.Channels.Message> 執行個體，請使用其中一種 <xref:System.ServiceModel.Channels.Message.CreateMessage%2A> 方法。  
  
 建議訊息消費者在完成存取訊息的內容時，一定要呼叫 <xref:System.ServiceModel.Channels.Message.Close%2A>。 這個動作會釋放與訊息存留期有密切關係的有限系統資源 (例如通訊端、具名管道)。  
  
 給衍生自此類別之 Managed C++ 使用者的特別說明：  
  
-   請將您的清除程式碼置於 (On)(Begin)Close (and/or OnAbort)，而不是解構函式。  
  
-   避免使用解構函式，因為它們會導致編譯器自動產生 <xref:System.IDisposable>。  
  
-   避免使用非參考成員，因為它們會導致編譯器自動產生 <xref:System.IDisposable>。  
  
-   避免使用完成項，但如果您要加入完成項，請隱藏建置警告並從 (On)(Begin)Close (和/或 OnAbort) 呼叫 <xref:System.GC.SuppressFinalize%28System.Object%29> 和完成項本身，以模擬原本可能自動產生的 <xref:System.IDisposable> 行為。  
  
   
  
## Examples  
 下列程式碼範例會示範使用通道處理站傳送訊息和讀取回覆的用戶端。  
  
 [!code-csharp[Message#0](~/samples/snippets/csharp/VS_Snippets_CFX/message/cs/client.cs#0)]
 [!code-vb[Message#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/message/vb/client.vb#0)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>當您繼承自 <see cref="T:System.ServiceModel.Channels.Message" /> 時，您必須覆寫下列成員：<see cref="P:System.ServiceModel.Channels.Message.Headers" /> 和 <see cref="P:System.ServiceModel.Channels.Message.Version" />。</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Message ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Message();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.Channels.Message" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteBodyContents">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteBodyContents (System.Xml.XmlDictionaryWriter writer, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWriteBodyContents(class System.Xml.XmlDictionaryWriter writer, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.BeginWriteBodyContents(System.Xml.XmlDictionaryWriter,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteBodyContents (writer As XmlDictionaryWriter, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWriteBodyContents(System::Xml::XmlDictionaryWriter ^ writer, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginWriteBodyContents : System.Xml.XmlDictionaryWriter * AsyncCallback * obj -&gt; IAsyncResult" Usage="message.BeginWriteBodyContents (writer, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">用於序列化訊息主體的寫入器。</param>
        <param name="callback">在作業完成時接收通知的委派方法。</param>
        <param name="state">使用者定義的物件，表示作業的狀態。</param>
        <summary>開始非同步寫入訊息本文的內容。</summary>
        <returns><see cref="T:System.IAsyncResult" /> 物件，表示非同步作業的結果。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteMessage">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteMessage (System.Xml.XmlDictionaryWriter writer, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWriteMessage(class System.Xml.XmlDictionaryWriter writer, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.BeginWriteMessage(System.Xml.XmlDictionaryWriter,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteMessage (writer As XmlDictionaryWriter, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWriteMessage(System::Xml::XmlDictionaryWriter ^ writer, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginWriteMessage : System.Xml.XmlDictionaryWriter * AsyncCallback * obj -&gt; IAsyncResult" Usage="message.BeginWriteMessage (writer, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">用於序列化整個訊息的寫入器。</param>
        <param name="callback">在作業完成時接收通知的委派方法。</param>
        <param name="state">使用者定義的物件，表示作業的狀態。</param>
        <summary>開始非同步寫入整個訊息。</summary>
        <returns><see cref="T:System.IAsyncResult" /> 物件，表示非同步作業的結果。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="message.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>關閉 <see cref="T:System.ServiceModel.Channels.Message" /> 並釋放所有資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.Message> 確實有完成項，它會造成當訊息進行記憶體回收時呼叫 <xref:System.ServiceModel.Channels.Message.Close%2A>。 這並非最佳做法，因為 .NET Framework 的記憶體回收 (GC) 機制不一定會在您用完非記憶體之系統資源的時候執行。 因此，當完成訊息的內容時，您一定要呼叫這個方法。 <xref:System.ServiceModel.Channels.Message.Close%2A> 方法是 <xref:System.IDisposable.Dispose%2A> (<xref:System.ServiceModel.Channels.Message> 也會實作此處置) 的同義資料表 (Synonym)。 在處置此訊息時，此訊息也會處置用於建構本文的物件。  
  
 在關閉之後，如果您呼叫任何方法或存取訊息的任何屬性，便會擲回 <xref:System.ObjectDisposedException>。 在關閉訊息之後，呼叫與訊息有關之其他物件的任何方法或存取其任何屬性 (例如針對本文或標頭所傳回的訊息標頭集合、訊息屬性值或 <xref:System.Xml.XmlReader> 執行個體)，都會出現未定義的行為。  
  
   
  
## Examples  
 下列程式碼範例會示範如何建立訊息、將訊息傳送至服務以及接收回應訊息。 這時會顯示回應訊息內容，然後關閉訊息。  
  
 [!code-csharp[Message#0](~/samples/snippets/csharp/VS_Snippets_CFX/message/cs/client.cs#0)]
 [!code-vb[Message#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/message/vb/client.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBufferedCopy">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageBuffer CreateBufferedCopy (int maxBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.MessageBuffer CreateBufferedCopy(int32 maxBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBufferedCopy (maxBufferSize As Integer) As MessageBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::MessageBuffer ^ CreateBufferedCopy(int maxBufferSize);" />
      <MemberSignature Language="F#" Value="member this.CreateBufferedCopy : int -&gt; System.ServiceModel.Channels.MessageBuffer" Usage="message.CreateBufferedCopy maxBufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxBufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxBufferSize">要建立之緩衝區的大小上限。</param>
        <summary>將整個 <see cref="T:System.ServiceModel.Channels.Message" /> 儲存到記憶體緩衝區中，以供未來存取。</summary>
        <returns>新建立的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.Message> 執行個體的本文只能存取或寫入一次。 如果要存取 <xref:System.ServiceModel.Channels.Message> 執行個體超過一次，您應該使用 <xref:System.ServiceModel.Channels.MessageBuffer> 類別，將整個 <xref:System.ServiceModel.Channels.Message> 執行個體完全儲存到記憶體中。 呼叫 <xref:System.ServiceModel.Channels.MessageBuffer> 執行個體的 <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A>，即可建構 <xref:System.ServiceModel.Channels.Message> 執行個體。  
  
> [!NOTE]
>  如果 <xref:System.ServiceModel.Channels.Message.Version%2A> 相等於 <xref:System.ServiceModel.Channels.MessageVersion.None%2A>，這個方法便只會將訊息的本文 (而非整個訊息) 儲存到記憶體緩衝區中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="maxBufferSize" />小於零。</exception>
        <exception cref="T:System.ObjectDisposedException">已關閉訊息。</exception>
        <exception cref="T:System.InvalidOperationException">已複製、讀取或寫入訊息。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateMessage">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>建立訊息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法是用來建立準備要傳送的新訊息複本。  
  
 當使用 JSON 訊息時，請使用 <xref:System.ServiceModel.Channels.Message.CreateMessage%28System.ServiceModel.Channels.MessageVersion%2CSystem.String%2CSystem.Object%2CSystem.Runtime.Serialization.XmlObjectSerializer%29> 方法，<xref:System.ServiceModel.Channels.Message.CreateMessage%28System.ServiceModel.Channels.MessageVersion%2CSystem.String%2CSystem.Object%29> 方法無法與 JSON 訊息搭配使用。  
  
   
  
## Examples  
 下列程式碼範例會示範使用通道處理站傳送訊息和讀取回覆的用戶端。  
  
 [!code-csharp[Message#0](~/samples/snippets/csharp/VS_Snippets_CFX/message/cs/client.cs#0)]
 [!code-vb[Message#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/message/vb/client.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Message CreateMessage (System.ServiceModel.Channels.MessageVersion version, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Message CreateMessage(class System.ServiceModel.Channels.MessageVersion version, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMessage (version As MessageVersion, action As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::Message ^ CreateMessage(System::ServiceModel::Channels::MessageVersion ^ version, System::String ^ action);" />
      <MemberSignature Language="F#" Value="static member CreateMessage : System.ServiceModel.Channels.MessageVersion * string -&gt; System.ServiceModel.Channels.Message" Usage="System.ServiceModel.Channels.Message.CreateMessage (version, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version"><see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
        <param name="action">應該如何處理此訊息的說明。</param>
        <summary>建立包含版本和動作的訊息。</summary>
        <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個靜態方法是用來建立準備要傳送的新訊息複本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="version" /> 或 <paramref name="action" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Message CreateMessage (System.ServiceModel.Channels.MessageVersion version, System.ServiceModel.Channels.MessageFault fault, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Message CreateMessage(class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.Channels.MessageFault fault, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.MessageFault,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMessage (version As MessageVersion, fault As MessageFault, action As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::Message ^ CreateMessage(System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::Channels::MessageFault ^ fault, System::String ^ action);" />
      <MemberSignature Language="F#" Value="static member CreateMessage : System.ServiceModel.Channels.MessageVersion * System.ServiceModel.Channels.MessageFault * string -&gt; System.ServiceModel.Channels.Message" Usage="System.ServiceModel.Channels.Message.CreateMessage (version, fault, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" />
        <Parameter Name="fault" Type="System.ServiceModel.Channels.MessageFault" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version"><see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
        <param name="fault"><see cref="T:System.ServiceModel.Channels.MessageFault" /> 物件，表示 SOAP 錯誤。</param>
        <param name="action">應該如何處理此訊息的說明。</param>
        <summary>建立包含 SOAP 錯誤、版本和動作的訊息。</summary>
        <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個靜態方法是用來建立準備要傳送的新訊息複本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="Version" />、<paramref name="fault" /> 或 <paramref name="action" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Message CreateMessage (System.ServiceModel.Channels.MessageVersion version, string action, object body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Message CreateMessage(class System.ServiceModel.Channels.MessageVersion version, string action, object body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMessage (version As MessageVersion, action As String, body As Object) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::Message ^ CreateMessage(System::ServiceModel::Channels::MessageVersion ^ version, System::String ^ action, System::Object ^ body);" />
      <MemberSignature Language="F#" Value="static member CreateMessage : System.ServiceModel.Channels.MessageVersion * string * obj -&gt; System.ServiceModel.Channels.Message" Usage="System.ServiceModel.Channels.Message.CreateMessage (version, action, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="body" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="version"><see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
        <param name="action">應該如何處理此訊息的說明。</param>
        <param name="body">訊息的本文。</param>
        <summary>使用指定的版本、動作和本文建立訊息。</summary>
        <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個靜態方法是用來建立準備要傳送的新訊息複本。  
  
 當使用 JSON 訊息時，請使用 <xref:System.ServiceModel.Channels.Message.CreateMessage%28System.ServiceModel.Channels.MessageVersion%2CSystem.String%2CSystem.Object%2CSystem.Runtime.Serialization.XmlObjectSerializer%29> 方法，<xref:System.ServiceModel.Channels.Message.CreateMessage%28System.ServiceModel.Channels.MessageVersion%2CSystem.String%2CSystem.Object%29> 方法無法與 JSON 訊息搭配使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="version" />、<paramref name="action" /> 或 <paramref name="body" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Message CreateMessage (System.ServiceModel.Channels.MessageVersion version, string action, System.ServiceModel.Channels.BodyWriter body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Message CreateMessage(class System.ServiceModel.Channels.MessageVersion version, string action, class System.ServiceModel.Channels.BodyWriter body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.ServiceModel.Channels.BodyWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMessage (version As MessageVersion, action As String, body As BodyWriter) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::Message ^ CreateMessage(System::ServiceModel::Channels::MessageVersion ^ version, System::String ^ action, System::ServiceModel::Channels::BodyWriter ^ body);" />
      <MemberSignature Language="F#" Value="static member CreateMessage : System.ServiceModel.Channels.MessageVersion * string * System.ServiceModel.Channels.BodyWriter -&gt; System.ServiceModel.Channels.Message" Usage="System.ServiceModel.Channels.Message.CreateMessage (version, action, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="body" Type="System.ServiceModel.Channels.BodyWriter" />
      </Parameters>
      <Docs>
        <param name="version"><see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
        <param name="action">應該如何處理此訊息的說明。</param>
        <param name="body">型別為 type 的 <see cref="T:System.ServiceModel.Channels.BodyWriter" />。</param>
        <summary>使用由位元組陣列組成的本文來建立訊息。</summary>
        <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果端點要將不含任何實際內容的警示傳送給另一個端點，這時便可使用空白訊息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="Version" />、<paramref name="action" /> 或 <paramref name="body" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Message CreateMessage (System.ServiceModel.Channels.MessageVersion version, string action, System.Xml.XmlDictionaryReader body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Message CreateMessage(class System.ServiceModel.Channels.MessageVersion version, string action, class System.Xml.XmlDictionaryReader body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMessage (version As MessageVersion, action As String, body As XmlDictionaryReader) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::Message ^ CreateMessage(System::ServiceModel::Channels::MessageVersion ^ version, System::String ^ action, System::Xml::XmlDictionaryReader ^ body);" />
      <MemberSignature Language="F#" Value="static member CreateMessage : System.ServiceModel.Channels.MessageVersion * string * System.Xml.XmlDictionaryReader -&gt; System.ServiceModel.Channels.Message" Usage="System.ServiceModel.Channels.Message.CreateMessage (version, action, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="body" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <param name="version"><see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
        <param name="action">應該如何處理此訊息的說明。</param>
        <param name="body">訊息的本文。</param>
        <summary>使用指定的版本、動作和本文建立訊息。</summary>
        <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個靜態方法是用來建立準備要傳送的新訊息複本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="version" />、<paramref name="action" /> 或 <paramref name="body" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Message CreateMessage (System.ServiceModel.Channels.MessageVersion version, string action, System.Xml.XmlReader body);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Message CreateMessage(class System.ServiceModel.Channels.MessageVersion version, string action, class System.Xml.XmlReader body) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMessage (version As MessageVersion, action As String, body As XmlReader) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::Message ^ CreateMessage(System::ServiceModel::Channels::MessageVersion ^ version, System::String ^ action, System::Xml::XmlReader ^ body);" />
      <MemberSignature Language="F#" Value="static member CreateMessage : System.ServiceModel.Channels.MessageVersion * string * System.Xml.XmlReader -&gt; System.ServiceModel.Channels.Message" Usage="System.ServiceModel.Channels.Message.CreateMessage (version, action, body)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="body" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="version"><see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
        <param name="action">應該如何處理此訊息的說明。</param>
        <param name="body">要用來讀取 SOAP 訊息的 <see cref="T:System.Xml.XmlReader" /> 物件。</param>
        <summary>使用指定的讀取器、動作和版本建立訊息。</summary>
        <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個靜態方法是用來建立準備要傳送的新訊息複本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="version" />、<paramref name="action" /> 或 <paramref name="body" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Message CreateMessage (System.Xml.XmlDictionaryReader envelopeReader, int maxSizeOfHeaders, System.ServiceModel.Channels.MessageVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Message CreateMessage(class System.Xml.XmlDictionaryReader envelopeReader, int32 maxSizeOfHeaders, class System.ServiceModel.Channels.MessageVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlDictionaryReader,System.Int32,System.ServiceModel.Channels.MessageVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMessage (envelopeReader As XmlDictionaryReader, maxSizeOfHeaders As Integer, version As MessageVersion) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::Message ^ CreateMessage(System::Xml::XmlDictionaryReader ^ envelopeReader, int maxSizeOfHeaders, System::ServiceModel::Channels::MessageVersion ^ version);" />
      <MemberSignature Language="F#" Value="static member CreateMessage : System.Xml.XmlDictionaryReader * int * System.ServiceModel.Channels.MessageVersion -&gt; System.ServiceModel.Channels.Message" Usage="System.ServiceModel.Channels.Message.CreateMessage (envelopeReader, maxSizeOfHeaders, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeReader" Type="System.Xml.XmlDictionaryReader" />
        <Parameter Name="maxSizeOfHeaders" Type="System.Int32" />
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" />
      </Parameters>
      <Docs>
        <param name="envelopeReader">要用來讀取 SOAP 訊息的 <see cref="T:System.Xml.XmlDictionaryReader" /> 物件。</param>
        <param name="maxSizeOfHeaders">標頭的大小上限，以位元組為單位。</param>
        <param name="version">有效的 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 值，其指定要用於訊息的 SOAP 版本。</param>
        <summary>使用指定的讀取器、動作和版本建立訊息。</summary>
        <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.Message> 取得 `envelopeReader.` 的擁有權。  
  
 這個方法會讀取封套、將所有標頭緩衝到標頭集合中，以及讀取到 `Body` 開始標記為止 (但不含此標記)，然後傳回該訊息。 如果方法呼叫擲回例外狀況，則會關閉讀取器。  
  
 之後就可以讀取或寫入傳回之訊息的本文。  
  
 您可以針對傳回的訊息使用 <xref:System.ServiceModel.Channels.Message.GetBody%2A> 方法來讀取訊息本文。 傳回的物件會將所有子項目都封裝於 `Body` 項目中。 您可以使用 <xref:System.ServiceModel.Channels.Message.WriteBody%2A> 或 <xref:System.ServiceModel.Channels.Message.WriteMessage%2A> 寫入訊息本文。 一旦寫入後，它就無法讀取。  
  
 如果關閉訊息，便會關閉基礎封套讀取器。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="envelopeReader" /> 或 <paramref name="version" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Message CreateMessage (System.Xml.XmlReader envelopeReader, int maxSizeOfHeaders, System.ServiceModel.Channels.MessageVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Message CreateMessage(class System.Xml.XmlReader envelopeReader, int32 maxSizeOfHeaders, class System.ServiceModel.Channels.MessageVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.CreateMessage(System.Xml.XmlReader,System.Int32,System.ServiceModel.Channels.MessageVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMessage (envelopeReader As XmlReader, maxSizeOfHeaders As Integer, version As MessageVersion) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::Message ^ CreateMessage(System::Xml::XmlReader ^ envelopeReader, int maxSizeOfHeaders, System::ServiceModel::Channels::MessageVersion ^ version);" />
      <MemberSignature Language="F#" Value="static member CreateMessage : System.Xml.XmlReader * int * System.ServiceModel.Channels.MessageVersion -&gt; System.ServiceModel.Channels.Message" Usage="System.ServiceModel.Channels.Message.CreateMessage (envelopeReader, maxSizeOfHeaders, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeReader" Type="System.Xml.XmlReader" />
        <Parameter Name="maxSizeOfHeaders" Type="System.Int32" />
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" />
      </Parameters>
      <Docs>
        <param name="envelopeReader">要用來讀取 SOAP 訊息的 <see cref="T:System.Xml.XmlReader" /> 物件。</param>
        <param name="maxSizeOfHeaders">標頭的大小上限，以位元組為單位。</param>
        <param name="version"><see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
        <summary>使用指定的讀取器、動作和版本建立訊息。</summary>
        <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.Message> 取得 `envelopeReader.` 的擁有權。  
  
 這個方法會讀取封套、將所有標頭緩衝到標頭集合中，以及讀取到 `Body` 開始標記為止 (但不含此標記)，然後傳回該訊息。 如果方法呼叫擲回例外狀況，則會關閉讀取器。  
  
 之後就可以讀取或寫入傳回之訊息的本文。  
  
 您可以針對傳回的訊息使用 <xref:System.ServiceModel.Channels.Message.GetBody%2A> 方法來讀取訊息本文。 傳回的物件會將所有子項目都封裝於 `Body` 項目中。 您可以使用 <xref:System.ServiceModel.Channels.Message.WriteBody%2A> 或 <xref:System.ServiceModel.Channels.Message.WriteMessage%2A> 寫入訊息本文。 一旦寫入後，它就無法讀取。  
  
 如果關閉訊息，便會關閉基礎封套讀取器。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="envelopeReader" /> 或 <paramref name="version" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Message CreateMessage (System.ServiceModel.Channels.MessageVersion version, string action, object body, System.Runtime.Serialization.XmlObjectSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Message CreateMessage(class System.ServiceModel.Channels.MessageVersion version, string action, object body, class System.Runtime.Serialization.XmlObjectSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMessage (version As MessageVersion, action As String, body As Object, serializer As XmlObjectSerializer) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::Message ^ CreateMessage(System::ServiceModel::Channels::MessageVersion ^ version, System::String ^ action, System::Object ^ body, System::Runtime::Serialization::XmlObjectSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="static member CreateMessage : System.ServiceModel.Channels.MessageVersion * string * obj * System.Runtime.Serialization.XmlObjectSerializer -&gt; System.ServiceModel.Channels.Message" Usage="System.ServiceModel.Channels.Message.CreateMessage (version, action, body, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="body" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Runtime.Serialization.XmlObjectSerializer" />
      </Parameters>
      <Docs>
        <param name="version"><see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
        <param name="action">應該如何處理此訊息的說明。</param>
        <param name="body">訊息的本文。</param>
        <param name="serializer">用來序列化訊息的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 物件。</param>
        <summary>使用指定的版本、動作、訊息本文和序列化程式建立訊息。</summary>
        <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個靜態方法是用來建立準備要傳送的新訊息複本。  
  
 當使用 JSON 訊息時，請使用 <xref:System.ServiceModel.Channels.Message.CreateMessage%28System.ServiceModel.Channels.MessageVersion%2CSystem.String%2CSystem.Object%2CSystem.Runtime.Serialization.XmlObjectSerializer%29> 方法，<xref:System.ServiceModel.Channels.Message.CreateMessage%28System.ServiceModel.Channels.MessageVersion%2CSystem.String%2CSystem.Object%29> 方法無法與 JSON 訊息搭配使用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="version" />、<paramref name="fault" /> 或 <paramref name="action" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Message CreateMessage (System.ServiceModel.Channels.MessageVersion version, System.ServiceModel.FaultCode faultCode, string reason, string action);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Message CreateMessage(class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.FaultCode faultCode, string reason, string action) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.ServiceModel.FaultCode,System.String,System.String)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::Message ^ CreateMessage(System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::FaultCode ^ faultCode, System::String ^ reason, System::String ^ action);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Message CreateMessage (System.ServiceModel.Channels.MessageVersion version, System.ServiceModel.FaultCode code, string reason, string action);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Message CreateMessage(class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.FaultCode code, string reason, string action) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMessage (version As MessageVersion, code As FaultCode, reason As String, action As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::Message ^ CreateMessage(System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::FaultCode ^ code, System::String ^ reason, System::String ^ action);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member CreateMessage : System.ServiceModel.Channels.MessageVersion * System.ServiceModel.FaultCode * string * string -&gt; System.ServiceModel.Channels.Message" Usage="System.ServiceModel.Channels.Message.CreateMessage (version, code, reason, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" Index="0" />
        <Parameter Name="faultCode" Type="System.ServiceModel.FaultCode" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="code" Type="System.ServiceModel.FaultCode" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reason" Type="System.String" Index="2" />
        <Parameter Name="action" Type="System.String" Index="3" />
      </Parameters>
      <Docs>
        <param name="version"><see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
        <param name="faultCode"><see cref="T:System.ServiceModel.Channels.MessageFault" /> 物件，表示 SOAP 錯誤。</param>
        <param name="code"><see cref="T:System.ServiceModel.Channels.MessageFault" /> 物件，表示 SOAP 錯誤。</param>
        <param name="reason">SOAP 錯誤的原因。</param>
        <param name="action">應該如何處理此訊息的說明。</param>
        <summary>建立包含 SOAP 錯誤、錯誤的原因、版本和動作的訊息。</summary>
        <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個靜態方法是用來建立準備要傳送的新訊息複本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="version" />、<paramref name="fault" />、<paramref name="action" /> 或 <paramref name="faultCode" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateMessage">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Message CreateMessage (System.ServiceModel.Channels.MessageVersion version, System.ServiceModel.FaultCode faultCode, string reason, object detail, string action);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Message CreateMessage(class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.FaultCode faultCode, string reason, object detail, string action) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.ServiceModel.FaultCode,System.String,System.Object,System.String)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;xamarinandroid-7.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinios-10.8;xamarinmac-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::Message ^ CreateMessage(System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::FaultCode ^ faultCode, System::String ^ reason, System::Object ^ detail, System::String ^ action);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.Message CreateMessage (System.ServiceModel.Channels.MessageVersion version, System.ServiceModel.FaultCode code, string reason, object detail, string action);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.Message CreateMessage(class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.FaultCode code, string reason, object detail, string action) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateMessage (version As MessageVersion, code As FaultCode, reason As String, detail As Object, action As String) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::Message ^ CreateMessage(System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::FaultCode ^ code, System::String ^ reason, System::Object ^ detail, System::String ^ action);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member CreateMessage : System.ServiceModel.Channels.MessageVersion * System.ServiceModel.FaultCode * string * obj * string -&gt; System.ServiceModel.Channels.Message" Usage="System.ServiceModel.Channels.Message.CreateMessage (version, code, reason, detail, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" Index="0" />
        <Parameter Name="faultCode" Type="System.ServiceModel.FaultCode" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="code" Type="System.ServiceModel.FaultCode" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reason" Type="System.String" Index="2" />
        <Parameter Name="detail" Type="System.Object" Index="3" />
        <Parameter Name="action" Type="System.String" Index="4" />
      </Parameters>
      <Docs>
        <param name="version"><see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件，指定要用於該訊息的 SOAP 版本。</param>
        <param name="faultCode"><see cref="T:System.ServiceModel.Channels.MessageFault" /> 物件，表示 SOAP 錯誤。</param>
        <param name="code"><see cref="T:System.ServiceModel.Channels.MessageFault" /> 物件，表示 SOAP 錯誤。</param>
        <param name="reason">SOAP 錯誤的原因。</param>
        <param name="detail">SOAP 錯誤的詳細資料。</param>
        <param name="action">應該如何處理此訊息的說明。</param>
        <summary>建立包含 SOAP 錯誤、錯誤的原因和詳細資料、版本和動作的訊息。</summary>
        <returns>已建立之訊息的 <see cref="T:System.ServiceModel.Channels.Message" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個靜態方法是用來建立準備要傳送的新訊息複本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="version" />、<paramref name="fault" />、<paramref name="action" />、<paramref name="detail" /> 或 <paramref name="faultCode" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndWriteBodyContents">
      <MemberSignature Language="C#" Value="public void EndWriteBodyContents (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndWriteBodyContents(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.EndWriteBodyContents(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndWriteBodyContents (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndWriteBodyContents(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndWriteBodyContents : IAsyncResult -&gt; unit" Usage="message.EndWriteBodyContents result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> 物件，表示非同步作業的結果。</param>
        <summary>結束非同步寫入訊息主體的內容。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWriteMessage">
      <MemberSignature Language="C#" Value="public void EndWriteMessage (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndWriteMessage(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.EndWriteMessage(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndWriteMessage (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndWriteMessage(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndWriteMessage : IAsyncResult -&gt; unit" Usage="message.EndWriteMessage result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> 物件，表示非同步作業的結果。</param>
        <summary>結束非同步寫入整個訊息。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBody&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>擷取這個 <see cref="T:System.ServiceModel.Channels.Message" /> 執行個體的本文。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在建立訊息之後，訊息本文便可以透過在傳回的訊息上使用 <xref:System.ServiceModel.Channels.Message.GetBody%2A> 方法加以讀取。 傳回的物件會將所有子項目都封裝於 `Body` 項目中。 由於訊息的本文是資料流，因此只能寫入或讀取一次。  
  
 當使用 JSON 訊息時，請使用 <xref:System.ServiceModel.Channels.Message.GetBody%60%601%28System.Runtime.Serialization.XmlObjectSerializer%29> 多載，因為 <xref:System.ServiceModel.Channels.Message.GetBody%60%601> 多載不會運作。  
  
   
  
## Examples  
 下列程式碼範例會示範使用通道處理站傳送訊息和讀取回覆的用戶端。  
  
 [!code-csharp[Message#0](~/samples/snippets/csharp/VS_Snippets_CFX/message/cs/client.cs#0)]
 [!code-vb[Message#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/message/vb/client.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBody&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetBody&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetBody&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.GetBody``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBody(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetBody();" />
      <MemberSignature Language="F#" Value="member this.GetBody : unit -&gt; 'T" Usage="message.GetBody " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">訊息的本文。</typeparam>
        <summary>擷取這個 <see cref="T:System.ServiceModel.Channels.Message" /> 執行個體的本文。</summary>
        <returns>型別為 <paramref name="T" /> 的物件，其中包含此訊息的本文。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.Message> 執行個體的本文對應至 SOAP 本文。 您可以呼叫 <xref:System.Xml.XmlDictionaryReader>，將其當做 <xref:System.ServiceModel.Channels.Message.GetReaderAtBodyContents%2A> 來存取。 它最初是直接放置在 `<S:Body>` 項目之後，並且在到達 `EOF` 項目時傳回 `</S:Body>`。 或者，如果您希望本文包含已序列化的物件，可以改為呼叫 <xref:System.ServiceModel.Channels.Message.GetBody%2A>。 請注意，您只能存取一次訊息本文，而且只能寫入一次訊息。 如果您要多次存取 `Body`，請使用 <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> 建立 <xref:System.ServiceModel.Channels.MessageBuffer> 執行個體。  
  
 當使用 JSON 訊息時，請使用 <xref:System.ServiceModel.Channels.Message.GetBody%60%601%28System.Runtime.Serialization.XmlObjectSerializer%29> 多載，因為 <xref:System.ServiceModel.Channels.Message.GetBody%60%601> 多載不會運作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBody&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetBody&lt;T&gt; (System.Runtime.Serialization.XmlObjectSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetBody&lt;T&gt;(class System.Runtime.Serialization.XmlObjectSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBody(Of T) (serializer As XmlObjectSerializer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetBody(System::Runtime::Serialization::XmlObjectSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="member this.GetBody : System.Runtime.Serialization.XmlObjectSerializer -&gt; 'T" Usage="message.GetBody serializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="serializer" Type="System.Runtime.Serialization.XmlObjectSerializer" />
      </Parameters>
      <Docs>
        <typeparam name="T">訊息的本文。</typeparam>
        <param name="serializer">用來讀取訊息內容的 <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> 物件。</param>
        <summary>使用指定的序列化程式來擷取這個 <see cref="T:System.ServiceModel.Channels.Message" /> 的本文。</summary>
        <returns>型別為 <paramref name="T" /> 的物件，其中包含此訊息的本文。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.Message> 執行個體的本文對應至 SOAP 本文。 您可以呼叫 <xref:System.Xml.XmlDictionaryReader>，將其當做 <xref:System.ServiceModel.Channels.Message.GetReaderAtBodyContents%2A> 來存取。 它最初是直接放置在 `<S:Body>` 項目之後，並且在到達 `EOF` 項目時傳回 `</S:Body>`。 或者，如果您希望本文包含已序列化的物件，可以改為呼叫 <xref:System.ServiceModel.Channels.Message.GetBody%2A>。 請注意，您只能存取一次訊息本文，而且只能寫入一次訊息。 如果您要多次存取本文，請使用 <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> 建立 <xref:System.ServiceModel.Channels.MessageBuffer> 執行個體。  
  
 當使用 JSON 訊息時，請使用 <xref:System.ServiceModel.Channels.Message.GetBody%60%601%28System.Runtime.Serialization.XmlObjectSerializer%29> 多載，因為 <xref:System.ServiceModel.Channels.Message.GetBody%60%601> 多載不會運作。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="serializer" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBodyAttribute">
      <MemberSignature Language="C#" Value="public string GetBodyAttribute (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetBodyAttribute(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.GetBodyAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBodyAttribute (localName As String, ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetBodyAttribute(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="member this.GetBodyAttribute : string * string -&gt; string" Usage="message.GetBodyAttribute (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">XML 節點的本機名稱。  
  
對應至這個成員的項目名稱。 這個字串必須是有效的 XML 項目名稱。</param>
        <param name="ns">這個 XML 項目所屬的命名空間。  
  
對應至這個成員的項目命名空間 URI。 系統不會驗證傳輸位址以外的任何 URI。</param>
        <summary>擷取訊息本文的屬性。</summary>
        <returns>訊息本文的屬性。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.Message> 執行個體的本文對應至 SOAP 本文。 您可以呼叫 <xref:System.Xml.XmlDictionaryReader>，將其當做 <xref:System.ServiceModel.Channels.Message.GetReaderAtBodyContents%2A> 來存取。 它最初是直接放置在 `<S:Body>` 項目之後，並且在到達 `EOF` 項目時傳回 `</S:Body>`。 或者，如果您希望本文包含已序列化的物件，可以改為呼叫 <xref:System.ServiceModel.Channels.Message.GetBody%2A>。 請注意，您只能存取一次訊息本文，而且只能寫入一次訊息。 如果您要多次存取本文，請使用 <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> 建立 <xref:System.ServiceModel.Channels.MessageBuffer> 執行個體。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="localName" /> 或 <paramref name="ns" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">已關閉訊息。</exception>
        <exception cref="T:System.InvalidOperationException">已複製、讀取或寫入訊息。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReaderAtBodyContents">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReader GetReaderAtBodyContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlDictionaryReader GetReaderAtBodyContents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.GetReaderAtBodyContents" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReaderAtBodyContents () As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlDictionaryReader ^ GetReaderAtBodyContents();" />
      <MemberSignature Language="F#" Value="member this.GetReaderAtBodyContents : unit -&gt; System.Xml.XmlDictionaryReader" Usage="message.GetReaderAtBodyContents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得會存取此訊息之本文內容的 XML 字典讀取器。</summary>
        <returns>存取此訊息內文內容的 <see cref="T:System.Xml.XmlDictionaryReader" /> 物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.Message> 執行個體的本文對應至 SOAP 本文。 您可以呼叫 <xref:System.Xml.XmlDictionaryReader>，將其當做 <xref:System.ServiceModel.Channels.Message.GetReaderAtBodyContents%2A> 來存取。 它最初是直接放置在 `<S:Body>` 項目之後。 或者，如果您希望本文包含已序列化的物件，可以改為呼叫 <xref:System.ServiceModel.Channels.Message.GetBody%2A>。 請注意，您只能存取一次訊息本文，而且只能寫入一次訊息。 如果您要多次存取本文，請使用 <xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A> 建立 <xref:System.ServiceModel.Channels.MessageBuffer> 執行個體。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">已關閉訊息。</exception>
        <exception cref="T:System.InvalidOperationException">訊息是空白的，或是已複製、讀取或寫入。</exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.MessageHeaders Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageHeaders Headers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Message.Headers" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Headers As MessageHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::MessageHeaders ^ Headers { System::ServiceModel::Channels::MessageHeaders ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.ServiceModel.Channels.MessageHeaders" Usage="System.ServiceModel.Channels.Message.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，會取得訊息的標頭。</summary>
        <value><see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 物件，表示訊息的標頭。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.Message> 可以有零或多個標頭 (當做擴充機制使用)，以便在應用程式特定的訊息中傳遞資訊。 您可以藉由呼叫 <xref:System.ServiceModel.Channels.Message.Headers%2A> 方法，使用 <xref:System.ServiceModel.Channels.MessageHeaders.Add%2A> 將訊息標頭新增至訊息中。  
  
 Windows Communication Foundation (WCF) 會提供許多預先定義的訊息標頭下, 表所示。  
  
|標頭名稱|包含標頭名稱。|  
|-----------------|-------------------------------|  
|以|包含此訊息所針對的角色。|  
|動作|提供應該如何處理此訊息的說明。|  
|FaultTo|包含錯誤應該傳送之目標節點的位址。|  
|從|包含傳送訊息之節點的位址。|  
|要求|指出此訊息是否為要求。|  
|MessageID|包含此訊息的唯一 ID。|  
|RelatesTo|包含與此訊息相關之訊息的 ID。|  
|ReplyTo|包含應該針對要求傳送回覆之目標節點的位址。|  
  
   
  
## Examples  
 下列程式碼範例會示範使用通道處理站傳送訊息和讀取回覆的用戶端。  
  
 [!code-csharp[Message#0](~/samples/snippets/csharp/VS_Snippets_CFX/message/cs/client.cs#0)]
 [!code-vb[Message#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/message/vb/client.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">訊息已經過處置。</exception>
        <block subset="none" type="overrides"><para>在衍生類別中覆寫時，這個方法會為訊息的標頭傳回 <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> 物件。</para></block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Message.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.ServiceModel.Channels.Message.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回值，指出是否已處置 <see cref="T:System.ServiceModel.Channels.Message" />。</summary>
        <value>如果訊息已處置，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Message.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.ServiceModel.Channels.Message.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回值，指出 <see cref="T:System.ServiceModel.Channels.Message" /> 是否為空白。</summary>
        <value>如果訊息是空白的，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">訊息已經過處置。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsFault">
      <MemberSignature Language="C#" Value="public virtual bool IsFault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFault" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Message.IsFault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFault : bool" Usage="System.ServiceModel.Channels.Message.IsFault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出這個訊息是否會產生任何的 SOAP 錯誤。</summary>
        <value>如果這個訊息會產生任何 SOAP 錯誤，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">訊息已經過處置。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnBeginWriteBodyContents">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult OnBeginWriteBodyContents (System.Xml.XmlDictionaryWriter writer, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginWriteBodyContents(class System.Xml.XmlDictionaryWriter writer, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.OnBeginWriteBodyContents(System.Xml.XmlDictionaryWriter,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnBeginWriteBodyContents (writer As XmlDictionaryWriter, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ OnBeginWriteBodyContents(System::Xml::XmlDictionaryWriter ^ writer, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginWriteBodyContents : System.Xml.XmlDictionaryWriter * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.OnBeginWriteBodyContents : System.Xml.XmlDictionaryWriter * AsyncCallback * obj -&gt; IAsyncResult" Usage="message.OnBeginWriteBodyContents (writer, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">用來序列化訊息本文內容的寫入器。</param>
        <param name="callback">在作業完成時接收通知的委派方法。</param>
        <param name="state">使用者定義的物件，表示作業的狀態。</param>
        <summary>訊息開始寫入訊息內容時引發事件。</summary>
        <returns><see cref="T:System.IAsyncResult" /> 物件，表示非同步作業的結果。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginWriteMessage">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult OnBeginWriteMessage (System.Xml.XmlDictionaryWriter writer, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginWriteMessage(class System.Xml.XmlDictionaryWriter writer, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.OnBeginWriteMessage(System.Xml.XmlDictionaryWriter,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnBeginWriteMessage (writer As XmlDictionaryWriter, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ OnBeginWriteMessage(System::Xml::XmlDictionaryWriter ^ writer, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginWriteMessage : System.Xml.XmlDictionaryWriter * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.OnBeginWriteMessage : System.Xml.XmlDictionaryWriter * AsyncCallback * obj -&gt; IAsyncResult" Usage="message.OnBeginWriteMessage (writer, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">用於序列化整個訊息的寫入器。</param>
        <param name="callback">在作業完成時接收通知的委派方法。</param>
        <param name="state">使用者定義的物件，表示作業的狀態。</param>
        <summary>引發開始撰寫整封郵件的事件。</summary>
        <returns><see cref="T:System.IAsyncResult" /> 物件，表示非同步作業的結果。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBodyToString">
      <MemberSignature Language="C#" Value="protected virtual void OnBodyToString (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBodyToString(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.OnBodyToString(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBodyToString (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBodyToString(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member OnBodyToString : System.Xml.XmlDictionaryWriter -&gt; unit&#xA;override this.OnBodyToString : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="message.OnBodyToString writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">用於將訊息本文轉換成字串的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
        <summary>在訊息本文轉換成字串時呼叫。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="protected virtual void OnClose ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.OnClose" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClose ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClose();" />
      <MemberSignature Language="F#" Value="abstract member OnClose : unit -&gt; unit&#xA;override this.OnClose : unit -&gt; unit" Usage="message.OnClose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在訊息關閉時呼叫。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateBufferedCopy">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Channels.MessageBuffer OnCreateBufferedCopy (int maxBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Channels.MessageBuffer OnCreateBufferedCopy(int32 maxBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.OnCreateBufferedCopy(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateBufferedCopy (maxBufferSize As Integer) As MessageBuffer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Channels::MessageBuffer ^ OnCreateBufferedCopy(int maxBufferSize);" />
      <MemberSignature Language="F#" Value="abstract member OnCreateBufferedCopy : int -&gt; System.ServiceModel.Channels.MessageBuffer&#xA;override this.OnCreateBufferedCopy : int -&gt; System.ServiceModel.Channels.MessageBuffer" Usage="message.OnCreateBufferedCopy maxBufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxBufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxBufferSize">要建立之緩衝區的大小上限。</param>
        <summary>在建立訊息緩衝區以儲存此訊息時呼叫。</summary>
        <returns>新建立之訊息複本的 <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> 物件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndWriteBodyContents">
      <MemberSignature Language="C#" Value="protected virtual void OnEndWriteBodyContents (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndWriteBodyContents(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.OnEndWriteBodyContents(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndWriteBodyContents (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndWriteBodyContents(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndWriteBodyContents : IAsyncResult -&gt; unit&#xA;override this.OnEndWriteBodyContents : IAsyncResult -&gt; unit" Usage="message.OnEndWriteBodyContents result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> 物件，表示非同步作業的結果。</param>
        <summary>完成寫入郵件本文內容時引發事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndWriteMessage">
      <MemberSignature Language="C#" Value="protected virtual void OnEndWriteMessage (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndWriteMessage(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.OnEndWriteMessage(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndWriteMessage (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndWriteMessage(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndWriteMessage : IAsyncResult -&gt; unit&#xA;override this.OnEndWriteMessage : IAsyncResult -&gt; unit" Usage="message.OnEndWriteMessage result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> 物件，表示非同步作業的結果。</param>
        <summary>完成寫入整封郵件時引發事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetBody&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected virtual T OnGetBody&lt;T&gt; (System.Xml.XmlDictionaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !!T OnGetBody&lt;T&gt;(class System.Xml.XmlDictionaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.OnGetBody``1(System.Xml.XmlDictionaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGetBody(Of T) (reader As XmlDictionaryReader) As T" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename T&gt;&#xA; virtual T OnGetBody(System::Xml::XmlDictionaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member OnGetBody : System.Xml.XmlDictionaryReader -&gt; 'T&#xA;override this.OnGetBody : System.Xml.XmlDictionaryReader -&gt; 'T" Usage="message.OnGetBody reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlDictionaryReader" />
      </Parameters>
      <Docs>
        <typeparam name="T">訊息主體的類型。</typeparam>
        <param name="reader">用來讀取訊息內容的 <see cref="T:System.Xml.XmlDictionaryReader" /> 物件。</param>
        <summary>在擷取訊息本文時呼叫。</summary>
        <returns><see cref="T:System.ServiceModel.Channels.MessageBuffer" />，表示訊息本文。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetBodyAttribute">
      <MemberSignature Language="C#" Value="protected virtual string OnGetBodyAttribute (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string OnGetBodyAttribute(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.OnGetBodyAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGetBodyAttribute (localName As String, ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ OnGetBodyAttribute(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member OnGetBodyAttribute : string * string -&gt; string&#xA;override this.OnGetBodyAttribute : string * string -&gt; string" Usage="message.OnGetBodyAttribute (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">XML 節點的本機名稱。  
  
對應至這個成員的項目名稱。 這個字串必須是有效的 XML 項目名稱。</param>
        <param name="ns">這個 XML 項目所屬的命名空間。  
  
對應至這個成員的項目命名空間 URI。 系統不會驗證傳輸位址以外的任何 URI。</param>
        <summary>在擷取訊息本文的屬性時呼叫。</summary>
        <returns>訊息本文的屬性。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGetReaderAtBodyContents">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.XmlDictionaryReader OnGetReaderAtBodyContents ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.XmlDictionaryReader OnGetReaderAtBodyContents() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.OnGetReaderAtBodyContents" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGetReaderAtBodyContents () As XmlDictionaryReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::XmlDictionaryReader ^ OnGetReaderAtBodyContents();" />
      <MemberSignature Language="F#" Value="abstract member OnGetReaderAtBodyContents : unit -&gt; System.Xml.XmlDictionaryReader&#xA;override this.OnGetReaderAtBodyContents : unit -&gt; System.Xml.XmlDictionaryReader" Usage="message.OnGetReaderAtBodyContents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在擷取存取此訊息之本文內容的 XML 字典讀取器時呼叫。</summary>
        <returns>存取此訊息內文內容的 <see cref="T:System.Xml.XmlDictionaryReader" /> 物件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWriteBodyContents">
      <MemberSignature Language="C#" Value="protected abstract void OnWriteBodyContents (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteBodyContents(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnWriteBodyContents (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnWriteBodyContents(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member OnWriteBodyContents : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="message.OnWriteBodyContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">用於將此訊息本文寫入至 XML 檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
        <summary>在訊息本文寫入至 XML 檔案時呼叫。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWriteMessage">
      <MemberSignature Language="C#" Value="protected virtual void OnWriteMessage (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteMessage(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.OnWriteMessage(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWriteMessage (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWriteMessage(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member OnWriteMessage : System.Xml.XmlDictionaryWriter -&gt; unit&#xA;override this.OnWriteMessage : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="message.OnWriteMessage writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">用於將此訊息寫入至 XML 檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
        <summary>在整個訊息寫入至 XML 檔案時呼叫。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWriteStartBody">
      <MemberSignature Language="C#" Value="protected virtual void OnWriteStartBody (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteStartBody(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.OnWriteStartBody(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWriteStartBody (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWriteStartBody(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member OnWriteStartBody : System.Xml.XmlDictionaryWriter -&gt; unit&#xA;override this.OnWriteStartBody : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="message.OnWriteStartBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">用於將開始本文寫入至 XML 檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
        <summary>在開始本文寫入至 XML 檔案時呼叫。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWriteStartEnvelope">
      <MemberSignature Language="C#" Value="protected virtual void OnWriteStartEnvelope (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteStartEnvelope(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.OnWriteStartEnvelope(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWriteStartEnvelope (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWriteStartEnvelope(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member OnWriteStartEnvelope : System.Xml.XmlDictionaryWriter -&gt; unit&#xA;override this.OnWriteStartEnvelope : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="message.OnWriteStartEnvelope writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">用於將開始封套寫入至 XML 檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
        <summary>在開始封套寫入至 XML 檔案時呼叫。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWriteStartHeaders">
      <MemberSignature Language="C#" Value="protected virtual void OnWriteStartHeaders (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteStartHeaders(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.OnWriteStartHeaders(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWriteStartHeaders (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWriteStartHeaders(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member OnWriteStartHeaders : System.Xml.XmlDictionaryWriter -&gt; unit&#xA;override this.OnWriteStartHeaders : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="message.OnWriteStartHeaders writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">用於將開始標頭寫入 XML 檔案的 <see cref="T:System.Xml.XmlDictionaryWriter" />。</param>
        <summary>在開始標頭寫入至 XML 檔案時呼叫。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.MessageProperties Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageProperties Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Message.Properties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Properties As MessageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::MessageProperties ^ Properties { System::ServiceModel::Channels::MessageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.ServiceModel.Channels.MessageProperties" Usage="System.ServiceModel.Channels.Message.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，會取得一組訊息的處理層級附註。</summary>
        <value><see cref="T:System.ServiceModel.Channels.MessageProperties" />，包含訊息的一組處理等級附註。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由於標頭中的資訊會在網路上傳輸，因此檢查標頭的實體必須支援該標頭所使用通訊協定的基礎版本。 然而，屬性會提供與版本更加無關的方法來註解訊息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">訊息已經過處置。</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Channels.MessageState State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Message.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As MessageState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageState State { System::ServiceModel::Channels::MessageState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.ServiceModel.Channels.MessageState" Usage="System.ServiceModel.Channels.Message.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得這個 <see cref="T:System.ServiceModel.Channels.Message" /> 的目前狀態。</summary>
        <value><see cref="T:System.ServiceModel.Channels.MessageState" />，包含這個 <see cref="T:System.ServiceModel.Channels.Message" /> 的目前狀態。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為 <xref:System.ServiceModel.Channels.Message> 物件的本文為資料流，所以它只可以讀取或寫入一次。 這可以藉由維護 <xref:System.ServiceModel.Channels.Message> 物件的目前狀態來強制進行。 當 <xref:System.ServiceModel.Channels.Message> 物件處於 <xref:System.ServiceModel.Channels.MessageState.Created> 狀態時，便可以讀取、寫入或複製此物件。 其他的狀態為 <xref:System.ServiceModel.Channels.MessageState.Read>、<xref:System.ServiceModel.Channels.MessageState.Written> 和 <xref:System.ServiceModel.Channels.MessageState.Copied>，表示各自的動作已經執行過一次。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>關閉此訊息使用的所有資源。 這個方法無法被繼承。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您完成使用 <xref:System.ServiceModel.Channels.Message> 後，請呼叫這個方法。 這個方法會將 <xref:System.ServiceModel.Channels.Message> 保留在無法使用的狀態。 之後呼叫這個方法，您必須釋放所有對<xref:System.ServiceModel.Channels.Message>讓記憶體回收行程可以回收記憶體，<xref:System.ServiceModel.Channels.Message>位於。  
  
> [!NOTE]
>  在您釋放最後一個 <xref:System.ServiceModel.Channels.Message> 參考之前，請務必呼叫這個方法。 否則，在記憶體回收行程呼叫 <xref:System.ServiceModel.Channels.Message> 物件的 `Finalize` 方法之前，不會釋放它正在使用的資源。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="message.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回表示目前 <see cref="T:System.ServiceModel.Channels.Message" /> 執行個體的字串。</summary>
        <returns>目前 <see cref="T:System.ServiceModel.Channels.Message" /> 執行個體的字串表示。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.MessageVersion Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion Version" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.Message.Version" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Version As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::MessageVersion ^ Version { System::ServiceModel::Channels::MessageVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : System.ServiceModel.Channels.MessageVersion" Usage="System.ServiceModel.Channels.Message.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，會取得訊息的 SOAP 版本。</summary>
        <value>表示 SOAP 版本的 <see cref="T:System.ServiceModel.Channels.MessageVersion" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個值對訊息是固定不變的。 可能有兩個版本值：<xref:System.ServiceModel.Channels.MessageVersion.Soap11%2A> 和 <xref:System.ServiceModel.Channels.MessageVersion.Soap12%2A>，它們分別對應至 SOAP 1.1 和 SOAP 1.2。  
  
 了解基礎的 SOAP 版本是很重要的，因為 <xref:System.ServiceModel.Channels.Message> 的結構與 SOAP 訊息的結構關係密切。  
  
> [!IMPORTANT]
>  繼承者必須注意，在衍生類別中覆寫時，這個方法會為訊息的 SOAP 版本傳回 <xref:System.ServiceModel.Channels.MessageVersion> 物件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">訊息已經過處置。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteBody">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將本文項目序列化到 XML。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會寫入本文內容，以及項目的開始和結束標記。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteBody">
      <MemberSignature Language="C#" Value="public void WriteBody (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBody(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBody (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBody(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteBody : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="message.WriteBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">要用於寫入本文項目的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
        <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 寫入本文項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會寫入本文內容，以及項目的開始和結束標記。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBody">
      <MemberSignature Language="C#" Value="public void WriteBody (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBody(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.WriteBody(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBody (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBody(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteBody : System.Xml.XmlWriter -&gt; unit" Usage="message.WriteBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">要用於寫入訊息本文的 <see cref="T:System.Xml.XmlWriter" /> 物件。</param>
        <summary>使用指定的 <see cref="T:System.Xml.XmlWriter" /> 序列化訊息本文。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會寫入本文內容，以及項目的開始和結束標記。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">已處置訊息。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBodyContents">
      <MemberSignature Language="C#" Value="public void WriteBodyContents (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBodyContents(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.WriteBodyContents(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBodyContents (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBodyContents(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteBodyContents : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="message.WriteBodyContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">要用於寫入本文項目的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
        <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 序列化本文內容。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">已關閉訊息。</exception>
        <exception cref="T:System.InvalidOperationException">已複製、讀取或寫入訊息。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteMessage">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>序列化整個訊息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會將整個訊息序列化。 一旦寫入訊息，除非該訊息有 <xref:System.ServiceModel.Channels.MessageBuffer>，否則便無法重新寫入。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteMessage">
      <MemberSignature Language="C#" Value="public void WriteMessage (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteMessage(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteMessage (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteMessage(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteMessage : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="message.WriteMessage writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">要用於寫入訊息的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
        <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 序列化整個訊息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會將整個訊息序列化。 一旦寫入訊息，除非該訊息有 <xref:System.ServiceModel.Channels.MessageBuffer> 執行個體，否則便無法重新寫入。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">已關閉訊息。</exception>
        <exception cref="T:System.InvalidOperationException">已複製、讀取或寫入訊息。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteMessage">
      <MemberSignature Language="C#" Value="public void WriteMessage (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteMessage(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.WriteMessage(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteMessage (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteMessage(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteMessage : System.Xml.XmlWriter -&gt; unit" Usage="message.WriteMessage writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">要用於寫入整個訊息的 <see cref="T:System.Xml.XmlWriter" /> 物件。</param>
        <summary>使用指定的 <see cref="T:System.Xml.XmlWriter" /> 序列化整個訊息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會將整個訊息序列化。 一旦寫入訊息，除非該訊息有 <xref:System.ServiceModel.Channels.MessageBuffer>，否則便無法重新寫入。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">已關閉訊息。</exception>
        <exception cref="T:System.InvalidOperationException">已複製、讀取或寫入訊息。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartBody">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>序列化訊息的開始內文。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartBody">
      <MemberSignature Language="C#" Value="public void WriteStartBody (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartBody(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartBody (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartBody(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteStartBody : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="message.WriteStartBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">要用於寫入開始本文的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
        <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 序列化訊息的開始本文。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartBody">
      <MemberSignature Language="C#" Value="public void WriteStartBody (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartBody(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.WriteStartBody(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartBody (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartBody(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteStartBody : System.Xml.XmlWriter -&gt; unit" Usage="message.WriteStartBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">要用於寫入訊息開始本文的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
        <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 序列化訊息的開始本文。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartEnvelope">
      <MemberSignature Language="C#" Value="public void WriteStartEnvelope (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteStartEnvelope(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.Message.WriteStartEnvelope(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteStartEnvelope (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteStartEnvelope(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteStartEnvelope : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="message.WriteStartEnvelope writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">要用於寫入開始封套的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 物件。</param>
        <summary>使用指定的 <see cref="T:System.Xml.XmlDictionaryWriter" /> 序列化開始封套。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>