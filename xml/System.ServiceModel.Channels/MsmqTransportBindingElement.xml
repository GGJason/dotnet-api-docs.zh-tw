<Type Name="MsmqTransportBindingElement" FullName="System.ServiceModel.Channels.MsmqTransportBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd45951351fc2f31bab1a0a8b34353fb56cd801b" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53333699" /></Metadata><TypeSignature Language="C#" Value="public sealed class MsmqTransportBindingElement : System.ServiceModel.Channels.MsmqBindingElementBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MsmqTransportBindingElement extends System.ServiceModel.Channels.MsmqBindingElementBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.MsmqTransportBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MsmqTransportBindingElement&#xA;Inherits MsmqBindingElementBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class MsmqTransportBindingElement sealed : System::ServiceModel::Channels::MsmqBindingElementBase" />
  <TypeSignature Language="F#" Value="type MsmqTransportBindingElement = class&#xA;    inherit MsmqBindingElementBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.MsmqBindingElementBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a86ca-101">表示用來為 Windows Communication Foundation (WCF) 服務指定佇列通訊屬性的繫結項目 (該服務會使用原生 Message Queuing (MSMQ) 通訊協定)。</span><span class="sxs-lookup"><span data-stu-id="a86ca-101">Represents the binding element used to specify the queuing communication properties for a Windows Communication Foundation (WCF) service that uses the native Message Queuing (MSMQ) protocol.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a86ca-102"><xref:System.ServiceModel.Channels.MsmqTransportBindingElement> 可讓使用者設定佇列通訊通道的屬性。</span><span class="sxs-lookup"><span data-stu-id="a86ca-102">The <xref:System.ServiceModel.Channels.MsmqTransportBindingElement> enables the user to set the properties of the queued communication channel.</span></span> <span data-ttu-id="a86ca-103">佇列通訊通道的傳輸中會使用訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="a86ca-103">The queued communication channel uses Message Queuing for its transport.</span></span>  
  
 <span data-ttu-id="a86ca-104">這個繫結項目是訊息佇列標準繫結 (<xref:System.ServiceModel.NetMsmqBinding>) 所使用的預設繫結項目。</span><span class="sxs-lookup"><span data-stu-id="a86ca-104">This binding element is the default binding element used by the Message Queuing standard binding (<xref:System.ServiceModel.NetMsmqBinding>).</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ImperativeNetMsmq#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_imperativenetmsmq/cs/service.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsmqTransportBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MsmqTransportBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MsmqTransportBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a86ca-105">初始化 <see cref="T:System.ServiceModel.Channels.MsmqTransportBindingElement" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a86ca-105">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MsmqTransportBindingElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_ImperativeNetMsmq#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_imperativenetmsmq/cs/service.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="msmqTransportBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a86ca-106"><see cref="T:System.ServiceModel.Channels.IOutputSessionChannel" /> 或 <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> 類別。</span><span class="sxs-lookup"><span data-stu-id="a86ca-106">A <see cref="T:System.ServiceModel.Channels.IOutputSessionChannel" /> or a <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> class.</span></span></typeparam>
        <param name="context"><span data-ttu-id="a86ca-107">用來建置通道處理站的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="a86ca-107">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel factory.</span></span></param>
        <summary><span data-ttu-id="a86ca-108">使用提供的內容建置通道處理站。</span><span class="sxs-lookup"><span data-stu-id="a86ca-108">Builds a channel factory using the context provided.</span></span></summary>
        <returns><span data-ttu-id="a86ca-109">可用來建立通道的訊息佇列 (MSMQ) 通道處理站，以便將訊息傳送到現有的訊息佇列應用程式。</span><span class="sxs-lookup"><span data-stu-id="a86ca-109">A Message Queuing (MSMQ) channel factory that can be used to create channels to send messages to existing Message Queuing applications.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a86ca-110">會建立通道處理站，而且會使用繫結項目中已設定的屬性來加以初始化。</span><span class="sxs-lookup"><span data-stu-id="a86ca-110">A channel factory is created and initialized using the properties that have been set in the binding element.</span></span> <span data-ttu-id="a86ca-111">然後會使用初始化的通道處理站來建立輸出通道，這些通道可用來將訊息傳送到訊息佇列。</span><span class="sxs-lookup"><span data-stu-id="a86ca-111">The initialized channel factory is then used to create output channels that can be used to send messages to a message queue.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ImperativeNetMsmq#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_imperativenetmsmq/cs/snippets.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a86ca-112">內容值為 null。</span><span class="sxs-lookup"><span data-stu-id="a86ca-112">The context value is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a86ca-113">TChannel 不是 IOutputChannel 或 IOutputSessionChannel。</span><span class="sxs-lookup"><span data-stu-id="a86ca-113">The TChannel is not IOutputChannel or IOutputSessionChannel.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a86ca-114">ExactlyOnce 為 true，而 Durable 為 false。</span><span class="sxs-lookup"><span data-stu-id="a86ca-114">ExactlyOnce is true and Durable is false.</span></span>

<span data-ttu-id="a86ca-115">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-115">-or-</span></span>

<span data-ttu-id="a86ca-116">UseActiveDirectory 為 true 而 QueueTransferProtocol 不是 Native。</span><span class="sxs-lookup"><span data-stu-id="a86ca-116">UseActiveDirectory is true and QueueTransferProtocol is not Native.</span></span>

<span data-ttu-id="a86ca-117">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-117">-or-</span></span>

<span data-ttu-id="a86ca-118">CustomDeadLetterQueue 不是 null，而 DeadLetterQueue 不是 Custom。</span><span class="sxs-lookup"><span data-stu-id="a86ca-118">CustomDeadLetterQueue is not null and DeadLetterQueue is not Custom.</span></span>

<span data-ttu-id="a86ca-119">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-119">-or-</span></span>

<span data-ttu-id="a86ca-120">DeadLetterQueue 在 Windows 2003/XP 上設定為 Custom。</span><span class="sxs-lookup"><span data-stu-id="a86ca-120">DeadLetterQueue is set to Custom on Windows 2003/XP.</span></span>

<span data-ttu-id="a86ca-121">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-121">-or-</span></span>

<span data-ttu-id="a86ca-122">ExactlyOnce 為 false，而 DeadLetterQueue 為 Custom。</span><span class="sxs-lookup"><span data-stu-id="a86ca-122">ExactlyOnce is false and DeadLetterQueue is Custom.</span></span>

<span data-ttu-id="a86ca-123">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-123">-or-</span></span>

<span data-ttu-id="a86ca-124">CustomDeadLetterQueue 已設定，且沒有可寫入佇列的寫入權限或是佇列不存在。</span><span class="sxs-lookup"><span data-stu-id="a86ca-124">CustomDeadLetterQueue is set and either there is no write permission to write to the queue, or the queue does not exist.</span></span>

<span data-ttu-id="a86ca-125">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-125">-or-</span></span>

<span data-ttu-id="a86ca-126">CustomDeadLetterQueue 為非交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="a86ca-126">CustomDeadLetterQueue is non-transactional.</span></span>

<span data-ttu-id="a86ca-127">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-127">-or-</span></span>

<span data-ttu-id="a86ca-128">MsmqTransportSecurity.MsmqAuthenticationMode 已設為 WindowsDomain，且未使用 ActiveDirectory 整合安裝 MSMQ。</span><span class="sxs-lookup"><span data-stu-id="a86ca-128">MsmqTransportSecurity.MsmqAuthenticationMode is set to WindowsDomain and MSMQ is installed without ActiveDirectory integration.</span></span>

<span data-ttu-id="a86ca-129">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-129">-or-</span></span>

<span data-ttu-id="a86ca-130">MsmqTransportSecurity.MsmqAuthenticationMode 為 None，而且 MsmqTransportSecurity.MsmqProtectionLevel 不是 None。</span><span class="sxs-lookup"><span data-stu-id="a86ca-130">MsmqTransportSecurity.MsmqAuthenticationMode is None and MsmqTransportSecurity.MsmqProtectionLevel is not None.</span></span>

<span data-ttu-id="a86ca-131">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-131">-or-</span></span>

<span data-ttu-id="a86ca-132">MsmqTransportSecurity.MsmqAuthenticationMode 為 Certificate，或者 WindowsDomain 和 MsmqTransportSecurity.MsmqProtectionLevel 為 None。</span><span class="sxs-lookup"><span data-stu-id="a86ca-132">MsmqTransportSecurity.MsmqAuthenticationMode is Certificate or WindowsDomain and MsmqTransportSecurity.MsmqProtectionLevel is None.</span></span>

<span data-ttu-id="a86ca-133">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-133">-or-</span></span>

<span data-ttu-id="a86ca-134">MsmqTransportSecurity.MsmqProtectionLevel 為 EncryptAndSign 而且 UseActiveDirectory 為 false。</span><span class="sxs-lookup"><span data-stu-id="a86ca-134">MsmqTransportSecurity.MsmqProtectionLevel is EncryptAndSign and UseActiveDirectory is false.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MsmqTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="msmqTransportBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a86ca-135">要用於建置通道接聽程式的通道型別。</span><span class="sxs-lookup"><span data-stu-id="a86ca-135">The channel type to be used to build the channel listener.</span></span> <span data-ttu-id="a86ca-136">允許的通道型別為 <see cref="T:System.ServiceModel.Channels.IInputSessionChannel" /> 或 <see cref="T:System.ServiceModel.Channels.IInputChannel" /> 類別。</span><span class="sxs-lookup"><span data-stu-id="a86ca-136">Permitted channel types are <see cref="T:System.ServiceModel.Channels.IInputSessionChannel" /> or a <see cref="T:System.ServiceModel.Channels.IInputChannel" /> class.</span></span></typeparam>
        <param name="context"><span data-ttu-id="a86ca-137">用來建置通道接聽程式的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="a86ca-137">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel listener.</span></span></param>
        <summary><span data-ttu-id="a86ca-138">使用提供的內容建置通道接聽程式。</span><span class="sxs-lookup"><span data-stu-id="a86ca-138">Builds a channel listener using the context provided.</span></span></summary>
        <returns><span data-ttu-id="a86ca-139">可用來建立通道的訊息佇列 (MSMQ) 通道接聽程式，以便從現有的 MSMQ 應用程式接收訊息。</span><span class="sxs-lookup"><span data-stu-id="a86ca-139">A Message Queuing (MSMQ) channel listener that can be used to create channels to receive messages from existing MSMQ applications.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_ImperativeNetMsmq#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_imperativenetmsmq/cs/snippets.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a86ca-140">內容值為 null。</span><span class="sxs-lookup"><span data-stu-id="a86ca-140">The context value is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a86ca-141">TChannel 不是 IInputChannel 或 IInputSessionChannel。</span><span class="sxs-lookup"><span data-stu-id="a86ca-141">The TChannel is not IInputChannel or IInputSessionChannel.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a86ca-142">ExactlyOnce 為 true，而 Durable 為 false。</span><span class="sxs-lookup"><span data-stu-id="a86ca-142">ExactlyOnce is true and Durable is false.</span></span>

<span data-ttu-id="a86ca-143">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-143">-or-</span></span>

<span data-ttu-id="a86ca-144">無法讀取佇列。</span><span class="sxs-lookup"><span data-stu-id="a86ca-144">Queue not readable.</span></span>

<span data-ttu-id="a86ca-145">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-145">-or-</span></span>

<span data-ttu-id="a86ca-146">ExactlyOnce 為 true，而佇列為非異動式。</span><span class="sxs-lookup"><span data-stu-id="a86ca-146">ExactlyOnce is true and queue is non-transactional.</span></span>

<span data-ttu-id="a86ca-147">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-147">-or-</span></span>

<span data-ttu-id="a86ca-148">ExactlyOnce 為 false，而佇列為非異動式。</span><span class="sxs-lookup"><span data-stu-id="a86ca-148">ExactlyOnce is false and queue is transactional.</span></span>

<span data-ttu-id="a86ca-149">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-149">-or-</span></span>

<span data-ttu-id="a86ca-150">ReceiveErrorHandling 設定為 Move，而 Windows Vista 中的佇列名稱包含 ";"。</span><span class="sxs-lookup"><span data-stu-id="a86ca-150">ReceiveErrorHandling is set to Move and queue name contains a ";" in Windows Vista.</span></span>

<span data-ttu-id="a86ca-151">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-151">-or-</span></span>

<span data-ttu-id="a86ca-152">ExactlyOnce 設定為 true，而且在 Windows Vista 中無法開啟重試子佇列。</span><span class="sxs-lookup"><span data-stu-id="a86ca-152">ExactlyOnce is set to true and cannot open retry sub-queue in Windows Vista.</span></span>

<span data-ttu-id="a86ca-153">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-153">-or-</span></span>

<span data-ttu-id="a86ca-154">ReceiveErrorHandling 設定為 Reject 或 Move，而且平台為 Windows Vista。</span><span class="sxs-lookup"><span data-stu-id="a86ca-154">ReceiveErrorHandling is set to Reject or Move and the platform is Windows Vista.</span></span>

<span data-ttu-id="a86ca-155">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-155">-or-</span></span>

<span data-ttu-id="a86ca-156">MsmqTransportSecurity.MsmqAuthenticationMode 已設為 WindowsDomain，且未使用 ActiveDirectory 整合安裝 MSMQ。</span><span class="sxs-lookup"><span data-stu-id="a86ca-156">MsmqTransportSecurity.MsmqAuthenticationMode is set to WindowsDomain and MSMQ is installed without ActiveDirectory integration.</span></span>

<span data-ttu-id="a86ca-157">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-157">-or-</span></span>

<span data-ttu-id="a86ca-158">MsmqTransportSecurity.MsmqAuthenticationMode 為 None，而且 MsmqTransportSecurity.MsmqProtectionLevel 不是 None。</span><span class="sxs-lookup"><span data-stu-id="a86ca-158">MsmqTransportSecurity.MsmqAuthenticationMode is None and MsmqTransportSecurity.MsmqProtectionLevel is not None.</span></span>

<span data-ttu-id="a86ca-159">-或-</span><span class="sxs-lookup"><span data-stu-id="a86ca-159">-or-</span></span>

<span data-ttu-id="a86ca-160">MsmqTransportSecurity.MsmqAuthenticationMode 為 Certificate，或者 WindowsDomain 和 MsmqTransportSecurity.MsmqProtectionLevel 為 None。</span><span class="sxs-lookup"><span data-stu-id="a86ca-160">MsmqTransportSecurity.MsmqAuthenticationMode is Certificate or WindowsDomain and MsmqTransportSecurity.MsmqProtectionLevel is None.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="msmqTransportBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a86ca-161">要用於建置通道接聽程式的通道型別。</span><span class="sxs-lookup"><span data-stu-id="a86ca-161">The channel type to be used to build the channel listener.</span></span> <span data-ttu-id="a86ca-162">允許的通道型別為 <see cref="T:System.ServiceModel.Channels.IOutputSessionChannel" /> 或 <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> 類別。</span><span class="sxs-lookup"><span data-stu-id="a86ca-162">Permitted channel types are <see cref="T:System.ServiceModel.Channels.IOutputSessionChannel" /> or a <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> class.</span></span></typeparam>
        <param name="context"><span data-ttu-id="a86ca-163">用來建置通道處理站的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="a86ca-163">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel factory.</span></span></param>
        <summary><span data-ttu-id="a86ca-164">傳回布林值，這個值會指出您是否可以使用所提供的內容來建置通道處理站。</span><span class="sxs-lookup"><span data-stu-id="a86ca-164">Returns a Boolean value that indicates whether you can build a channel factory with the context provided.</span></span></summary>
        <returns><span data-ttu-id="a86ca-165">如果可以使用所提供的內容來建置通道處理站，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a86ca-165"><see langword="true" /> if you can build a channel factory with the context provided; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a86ca-166">只有當 <see langword="true" /> 為 <paramref name="TChannel" /> 或 <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> 時，此繫結項目才會傳回 <see cref="T:System.ServiceModel.Channels.IOutputSessionChannel" />。</span><span class="sxs-lookup"><span data-stu-id="a86ca-166">The binding element returns <see langword="true" /> only when <paramref name="TChannel" /> is <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> or <see cref="T:System.ServiceModel.Channels.IOutputSessionChannel" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_ImperativeNetMsmq#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_imperativenetmsmq/cs/snippets.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MsmqTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="msmqTransportBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="a86ca-167">要用於建置通道接聽程式的通道型別。</span><span class="sxs-lookup"><span data-stu-id="a86ca-167">The channel type to be used to build the channel listener.</span></span> <span data-ttu-id="a86ca-168">允許的通道型別為 <see cref="T:System.ServiceModel.Channels.IInputSessionChannel" /> 或 <see cref="T:System.ServiceModel.Channels.IInputChannel" /> 類別。</span><span class="sxs-lookup"><span data-stu-id="a86ca-168">Permitted channel types are <see cref="T:System.ServiceModel.Channels.IInputSessionChannel" /> or a <see cref="T:System.ServiceModel.Channels.IInputChannel" /> class.</span></span></typeparam>
        <param name="context"><span data-ttu-id="a86ca-169">用來建置通道接聽程式的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="a86ca-169">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> with which to build the channel listener.</span></span></param>
        <summary><span data-ttu-id="a86ca-170">傳回布林值，這個值會指出您是否可以使用所提供的內容來建置通道接聽程式。</span><span class="sxs-lookup"><span data-stu-id="a86ca-170">Returns a Boolean value that indicates whether you can build a channel listener with the context provided.</span></span></summary>
        <returns><span data-ttu-id="a86ca-171">如果可以使用所提供的內容來建置通道接聽程式，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a86ca-171"><see langword="true" /> if you can build a channel listener with the context provided; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="a86ca-172">只有當 <see langword="true" /> 為 <paramref name="TChannel" /> 或 <see cref="T:System.ServiceModel.Channels.IInputChannel" /> 時，此繫結才會傳回 <see cref="T:System.ServiceModel.Channels.IInputSessionChannel" />。</span><span class="sxs-lookup"><span data-stu-id="a86ca-172">The binding returns <see langword="true" /> only when <paramref name="TChannel" /> is <see cref="T:System.ServiceModel.Channels.IInputChannel" /> or <see cref="T:System.ServiceModel.Channels.IInputSessionChannel" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_ImperativeNetMsmq#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_imperativenetmsmq/cs/snippets.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MsmqTransportBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="msmqTransportBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a86ca-173">傳回繫結項目的複製品 (Clone)。</span><span class="sxs-lookup"><span data-stu-id="a86ca-173">Returns a clone of the binding element.</span></span></summary>
        <returns><span data-ttu-id="a86ca-174">繫結項目的複製品。</span><span class="sxs-lookup"><span data-stu-id="a86ca-174">A clone of the binding element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_ImperativeNetMsmq#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_imperativenetmsmq/cs/snippets.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPoolSize">
      <MemberSignature Language="C#" Value="public int MaxPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqTransportBindingElement.MaxPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPoolSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPoolSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPoolSize : int with get, set" Usage="System.ServiceModel.Channels.MsmqTransportBindingElement.MaxPoolSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86ca-175">取得或設定整數，這個整數會指定包含內部訊息佇列 (MSMQ) 訊息物件之集區大小的上限。</span><span class="sxs-lookup"><span data-stu-id="a86ca-175">Gets or sets an integer that specifies the maximum size of the pool that contains internal Message Queuing (MSMQ) message objects.</span></span></summary>
        <value><span data-ttu-id="a86ca-176">指定包含內部訊息佇列訊息物件之集區大小上限的整數。</span><span class="sxs-lookup"><span data-stu-id="a86ca-176">An integer that specifies the maximum size of the pool that contains internal Message Queuing message objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a86ca-177">內部訊息佇列訊息物件集區是用來在收送訊息時避免這些物件的配置。</span><span class="sxs-lookup"><span data-stu-id="a86ca-177">The internal Message Queuing message object pool is used to avoid allocations of these objects when sending and receiving messages.</span></span> <span data-ttu-id="a86ca-178">集區大小的上限是效能調整參數。</span><span class="sxs-lookup"><span data-stu-id="a86ca-178">The maximum pool size is a performance-tuning parameter.</span></span> <span data-ttu-id="a86ca-179">預設值為 8。</span><span class="sxs-lookup"><span data-stu-id="a86ca-179">The default value is 8.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ImperativeNetMsmq#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_imperativenetmsmq/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a86ca-180">這個值小於零。</span><span class="sxs-lookup"><span data-stu-id="a86ca-180">The value is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QueueTransferProtocol">
      <MemberSignature Language="C#" Value="public System.ServiceModel.QueueTransferProtocol QueueTransferProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.QueueTransferProtocol QueueTransferProtocol" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqTransportBindingElement.QueueTransferProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property QueueTransferProtocol As QueueTransferProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::QueueTransferProtocol QueueTransferProtocol { System::ServiceModel::QueueTransferProtocol get(); void set(System::ServiceModel::QueueTransferProtocol value); };" />
      <MemberSignature Language="F#" Value="member this.QueueTransferProtocol : System.ServiceModel.QueueTransferProtocol with get, set" Usage="System.ServiceModel.Channels.MsmqTransportBindingElement.QueueTransferProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.QueueTransferProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86ca-181">取得或設定列舉值，這個值表示此繫結所使用的佇列通訊通道傳輸。</span><span class="sxs-lookup"><span data-stu-id="a86ca-181">Gets or sets an enumeration value that indicates the queued communication channel transport that this binding uses.</span></span></summary>
        <value><span data-ttu-id="a86ca-182"><see cref="T:System.ServiceModel.QueueTransferProtocol" /> 列舉值，這個值表示在佇列管理員之間用於訊息傳遞的傳輸。</span><span class="sxs-lookup"><span data-stu-id="a86ca-182">A <see cref="T:System.ServiceModel.QueueTransferProtocol" /> enumeration value that indicates the transport used for message delivery between queue managers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a86ca-183">訊息佇列 (MSMQ) 在使用 SOAP Reliable Messaging Protocol (SRMP) 時不支援 Active Directory 定址，所以當 <xref:System.ServiceModel.Channels.MsmqTransportBindingElement.QueueTransferProtocol%2A> 設定為 <xref:System.ServiceModel.QueueTransferProtocol.Srmp> 時，請勿將 <xref:System.ServiceModel.QueueTransferProtocol.Srmp> 設定為 <xref:System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory%2A> 或 `true`。</span><span class="sxs-lookup"><span data-stu-id="a86ca-183">Message Queuing (MSMQ) does not support Active Directory addressing when using SOAP Reliable Messaging Protocol (SRMP), so do not set <xref:System.ServiceModel.Channels.MsmqTransportBindingElement.QueueTransferProtocol%2A> to <xref:System.ServiceModel.QueueTransferProtocol.Srmp> or <xref:System.ServiceModel.QueueTransferProtocol.Srmp> when <xref:System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory%2A> is set to `true`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ImperativeNetMsmq#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_imperativenetmsmq/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a86ca-184">該值不是其中一個 <see cref="T:System.ServiceModel.QueueTransferProtocol" /> 值。</span><span class="sxs-lookup"><span data-stu-id="a86ca-184">The value is not one of the <see cref="T:System.ServiceModel.QueueTransferProtocol" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqTransportBindingElement.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.Channels.MsmqTransportBindingElement.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86ca-185">傳回 <see cref="T:System.String" />，其中包含這個傳輸繫結項目所使用的定址配置。</span><span class="sxs-lookup"><span data-stu-id="a86ca-185">Returns a <see cref="T:System.String" /> that contains the addressing scheme that is used by this transport binding element.</span></span></summary>
        <value><span data-ttu-id="a86ca-186"><see cref="T:System.String" />，其中包含這個傳輸繫結項目所使用的定址配置。</span><span class="sxs-lookup"><span data-stu-id="a86ca-186">A <see cref="T:System.String" /> that contains the addressing scheme that is used by this transport binding element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a86ca-187"><xref:System.ServiceModel.Channels.MsmqTransportBindingElement.Scheme%2A> 屬性會傳回 "net.msmq" 這個字串。</span><span class="sxs-lookup"><span data-stu-id="a86ca-187">The <xref:System.ServiceModel.Channels.MsmqTransportBindingElement.Scheme%2A> property returns the string "net.msmq".</span></span>  
  
 <span data-ttu-id="a86ca-188">訊息佇列 (MSMQ) 佇列傳輸支援數個定址配置，包括 net.msmq。</span><span class="sxs-lookup"><span data-stu-id="a86ca-188">The Message Queuing (MSMQ) queued transport supports several addressing schemes, including net.msmq.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ImperativeNetMsmq#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_imperativenetmsmq/cs/snippets.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseActiveDirectory">
      <MemberSignature Language="C#" Value="public bool UseActiveDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseActiveDirectory" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property UseActiveDirectory As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseActiveDirectory { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseActiveDirectory : bool with get, set" Usage="System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a86ca-189">傳回布林值，這個值會指出是否應該使用 Active Directory 來轉換佇列位址。</span><span class="sxs-lookup"><span data-stu-id="a86ca-189">Returns a Boolean value that indicates whether queue addresses should be converted using Active Directory.</span></span></summary>
        <value><span data-ttu-id="a86ca-190">如果應該使用 Active Directory 來轉換佇列位址，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a86ca-190"><see langword="true" /> if queue addresses should be converted using Active Directory; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a86ca-191">訊息佇列 (MSMQ) 佇列位址可以由路徑名稱或直接格式名稱所組成。</span><span class="sxs-lookup"><span data-stu-id="a86ca-191">Message Queuing (MSMQ) queue addresses can consist of path names or direct format names.</span></span> <span data-ttu-id="a86ca-192">如為直接格式名稱，MSMQ 會使用 DNS、NetBIOS 或 IP 解析佇列名稱。</span><span class="sxs-lookup"><span data-stu-id="a86ca-192">With a direct format name, MSMQ resolves the queue name using DNS, NetBIOS, or IP.</span></span> <span data-ttu-id="a86ca-193">如為路徑名稱，MSMQ 會使用 Active Directory 解析佇列名稱。</span><span class="sxs-lookup"><span data-stu-id="a86ca-193">With a path name, MSMQ resolves the queue name using Active Directory.</span></span>  
  
 <span data-ttu-id="a86ca-194">根據預設，Windows Communication Foundation (WCF) 佇列傳輸會將轉換成直接格式名稱的訊息佇列的 URI。</span><span class="sxs-lookup"><span data-stu-id="a86ca-194">By default, the Windows Communication Foundation (WCF) queued transport converts the URI of a message queue to a direct format name.</span></span> <span data-ttu-id="a86ca-195">藉由將 <xref:System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory%2A> 屬性設定為 `true`，應用程式可以指定佇列傳輸應使用 Active Directory 來解析電腦名稱，而非使用 DNS、NetBIOS 或 IP 來解析。</span><span class="sxs-lookup"><span data-stu-id="a86ca-195">By setting the <xref:System.ServiceModel.Channels.MsmqTransportBindingElement.UseActiveDirectory%2A> property to `true`, an application can specify that the queued transport should resolve the computer name using Active Directory rather than DNS, NetBIOS, or IP.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ImperativeNetMsmq#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_imperativenetmsmq/cs/snippets.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>