<Type Name="MessageEncoderFactory" FullName="System.ServiceModel.Channels.MessageEncoderFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e36536f29e7017622668214cc40759fc15cd7d81" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36421835" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MessageEncoderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageEncoderFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.MessageEncoderFactory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageEncoderFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageEncoderFactory abstract" />
  <TypeSignature Language="F#" Value="type MessageEncoderFactory = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fe1b4-101">表示用來產生訊息編碼器之處理站的抽象基底類別，該編碼器可從資料流讀取訊息，並將訊息寫入各種訊息編碼類型的資料流中。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe1b4-101">An abstract base class that represents the factory for producing message encoders that can read messages from a stream and write them to a stream for various types of message encoding.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe1b4-102">編碼是將訊息轉換成位元組序列的處理序，</span><span class="sxs-lookup"><span data-stu-id="fe1b4-102">Encoding is the process of transforming a message into a sequence of bytes.</span></span> <span data-ttu-id="fe1b4-103">解碼則是相反的處理序。</span><span class="sxs-lookup"><span data-stu-id="fe1b4-103">Decoding is the reverse process.</span></span>  
  
 <span data-ttu-id="fe1b4-104">如果您想要實作自訂訊息編碼器，請使用這個類別。</span><span class="sxs-lookup"><span data-stu-id="fe1b4-104">Use this class if you want to implement a custom message encoder.</span></span> <span data-ttu-id="fe1b4-105">若要實作您自己的自訂訊息編碼器，您必須提供下列三個抽象基底類別的自訂實作：</span><span class="sxs-lookup"><span data-stu-id="fe1b4-105">To implement your own custom message encoder, you must provide custom implementations of the following three abstract base classes:</span></span>  
  
-   <xref:System.ServiceModel.Channels.MessageEncodingBindingElement>  
  
-   <xref:System.ServiceModel.Channels.MessageEncoderFactory>  
  
-   <xref:System.ServiceModel.Channels.MessageEncoder>  
  
 <span data-ttu-id="fe1b4-106">覆寫 <xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A>，以傳回自訂 <xref:System.ServiceModel.Channels.MessageEncoder> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="fe1b4-106">Override the <xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A> to return an instance of your custom <xref:System.ServiceModel.Channels.MessageEncoder>.</span></span> <span data-ttu-id="fe1b4-107">然後讓自訂 <xref:System.ServiceModel.Channels.MessageEncoderFactory> 連接用來設定服務或用戶端的繫結項目堆疊，其方式是覆寫 <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A> 方法來傳回此處理站的執行個體。</span><span class="sxs-lookup"><span data-stu-id="fe1b4-107">Then wire up your custom <xref:System.ServiceModel.Channels.MessageEncoderFactory> to the binding element stack used to configure the service or client by overriding the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A> method to return an instance of this factory.</span></span> <span data-ttu-id="fe1b4-108">如需有關自訂編碼器的詳細資訊，請參閱[資料傳輸與序列化](~/docs/framework/wcf/feature-details/data-transfer-and-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="fe1b4-108">For more information about custom encoders, see [Data Transfer and Serialization](~/docs/framework/wcf/feature-details/data-transfer-and-serialization.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe1b4-109">下列程式碼會示範如何撰寫衍生自 <xref:System.ServiceModel.Channels.MessageEncoderFactory> 的類別。</span><span class="sxs-lookup"><span data-stu-id="fe1b4-109">The following code shows how to write a class that is derived from <xref:System.ServiceModel.Channels.MessageEncoderFactory>:</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoder.cs#8)]
 [!code-csharp[S_UE_CustomTextMessageEncoder#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoderfactory.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageEncoderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoderFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageEncoderFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe1b4-110">初始化 <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe1b4-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSessionEncoder">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.MessageEncoder CreateSessionEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.MessageEncoder CreateSessionEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoderFactory.CreateSessionEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateSessionEncoder () As MessageEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::MessageEncoder ^ CreateSessionEncoder();" />
      <MemberSignature Language="F#" Value="abstract member CreateSessionEncoder : unit -&gt; System.ServiceModel.Channels.MessageEncoder&#xA;override this.CreateSessionEncoder : unit -&gt; System.ServiceModel.Channels.MessageEncoder" Usage="messageEncoderFactory.CreateSessionEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageEncoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe1b4-111">傳回訊息編碼器，它可用來讓工作階段型交換中的訊息相互關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe1b4-111">Returns a message encoder that can be used to correlate messages in session-based exchanges.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe1b4-112">用於工作階段型訊息交換的 <see cref="T:System.ServiceModel.Channels.MessageEncoder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe1b4-112">The <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> that is used in session-based exchanges of messages.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe1b4-113">工作階段型訊息編碼器可追蹤形成對話之一部分的個別訊息，此對話是由屬於工作階段之一部分的兩個端點之間所交換的所有訊息所組成。</span><span class="sxs-lookup"><span data-stu-id="fe1b4-113">A session-based message encoder can keep track the individual messages that form part of a conversation that consists of all the messages exchanged between two endpoints that are part of a session.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoder">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.MessageEncoder Encoder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageEncoder Encoder" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MessageEncoderFactory.Encoder" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Encoder As MessageEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::MessageEncoder ^ Encoder { System::ServiceModel::Channels::MessageEncoder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoder : System.ServiceModel.Channels.MessageEncoder" Usage="System.ServiceModel.Channels.MessageEncoderFactory.Encoder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe1b4-114">在衍生類別中覆寫時，會取得此處理站產生的訊息編碼器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe1b4-114">When overridden in a derived class, gets the message encoder that is produced by the factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe1b4-115">此處理站使用的 <see cref="T:System.ServiceModel.Channels.MessageEncoder" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe1b4-115">The <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> used by the factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fe1b4-116">下列程式碼說明如何實作 <xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A> 屬性：</span><span class="sxs-lookup"><span data-stu-id="fe1b4-116">The following code illustrates how to implement the <xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A> property:</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoderfactory.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageVersion">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.MessageVersion MessageVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion MessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::MessageVersion ^ MessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageVersion : System.ServiceModel.Channels.MessageVersion" Usage="System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe1b4-117">在衍生類別中覆寫時，會取得此處理站所產生之編碼器所用的訊息版本，以編碼訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe1b4-117">When overridden in a derived class, gets the message version that is used by the encoders produced by the factory to encode messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe1b4-118">此處理站使用的 <see cref="T:System.ServiceModel.Channels.MessageVersion" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe1b4-118">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> used by the factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe1b4-119">訊息版本可以使用 <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A> 屬性來加以設定。</span><span class="sxs-lookup"><span data-stu-id="fe1b4-119">The message version can be set using the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.MessageVersion%2A> property.</span></span> <span data-ttu-id="fe1b4-120"><xref:System.ServiceModel.Channels.MessageVersion> 受限於只能使用 SOAP 和 WS-Addressing 的某些版本，而且無法擴充。</span><span class="sxs-lookup"><span data-stu-id="fe1b4-120"><xref:System.ServiceModel.Channels.MessageVersion> is limited to using certain versions of SOAP and WS-Addressing and is not extensible.</span></span> <span data-ttu-id="fe1b4-121">因此，如果要使用這些版本，應該覆寫這個屬性來傳回 <xref:System.ServiceModel.Channels.MessageVersion.None%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fe1b4-121">So if these versions are not to be used, this property should be overridden to return <xref:System.ServiceModel.Channels.MessageVersion.None%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe1b4-122">下列程式碼說明如何實作 <xref:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion%2A> 屬性：</span><span class="sxs-lookup"><span data-stu-id="fe1b4-122">The following code illustrates how to implement the <xref:System.ServiceModel.Channels.MessageEncoderFactory.MessageVersion%2A> property:</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoderfactory.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>