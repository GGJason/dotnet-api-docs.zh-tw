<Type Name="ChannelListenerBase&lt;TChannel&gt;" FullName="System.ServiceModel.Channels.ChannelListenerBase&lt;TChannel&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6905129f114bd97f0d8d4b11f3a98e19cc1fa753" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36422540" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ChannelListenerBase&lt;TChannel&gt; : System.ServiceModel.Channels.ChannelListenerBase, System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; where TChannel : class, IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelListenerBase`1&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt; extends System.ServiceModel.Channels.ChannelListenerBase implements class System.ServiceModel.Channels.IChannelListener, class System.ServiceModel.Channels.IChannelListener`1&lt;!TChannel&gt;, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.ChannelListenerBase`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelListenerBase(Of TChannel)&#xA;Inherits ChannelListenerBase&#xA;Implements IChannelListener(Of TChannel)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TChannel&gt;&#xA; where TChannel : class, IChannelpublic ref class ChannelListenerBase abstract : System::ServiceModel::Channels::ChannelListenerBase, System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt;" />
  <TypeSignature Language="F#" Value="type ChannelListenerBase&lt;'Channel (requires 'Channel : null and 'Channel :&gt; IChannel)&gt; = class&#xA;    inherit ChannelListenerBase&#xA;    interface IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; IChannel)&gt;&#xA;    interface IChannelListener&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TChannel">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.ChannelListenerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TChannel">
      <span data-ttu-id="e5d20-101">通道接聽程式接受的通道型別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5d20-101">The type of channel the channel listeners accept.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="e5d20-102">提供服務上通道接聽程式的通用基底實作，以接受用戶端處理站所產生的通道。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5d20-102">Provides a common base implementation for channel listeners on a service to accept channels produced by the client factories.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d20-103">服務上的通道接聽程式會等候及接受用戶端上處理站所建立的通道。</span><span class="sxs-lookup"><span data-stu-id="e5d20-103">The channel listeners on a service wait for and then accept the channels created by factories on the client.</span></span> <span data-ttu-id="e5d20-104">一旦用戶端與服務之間建立了通道連線之後，就可以交換訊息來進行通訊。</span><span class="sxs-lookup"><span data-stu-id="e5d20-104">Once the channel connection is established between client and service, they can communicate by exchanging messages</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5d20-105">初始化 <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-105">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d20-106">交換訊息時，預設的 <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor> 建構函式會使用服務模型逾時值來初始化逾時屬性。</span><span class="sxs-lookup"><span data-stu-id="e5d20-106">The default <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor> constructor initializes timeout properties with the service model timeout values when exchanging messages.</span></span> <span data-ttu-id="e5d20-107">若是開啟、傳送和關閉作業，預設值為 1 分鐘；若是接收作業，則為 10 分鐘。</span><span class="sxs-lookup"><span data-stu-id="e5d20-107">The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation.</span></span> <span data-ttu-id="e5d20-108">如果您想要為這些作業逾時指定其他值，請使用 <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>。</span><span class="sxs-lookup"><span data-stu-id="e5d20-108">Use <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelListenerBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelListenerBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5d20-109">初始化 <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d20-110">交換訊息時，預設的建構函式會使用服務模型逾時值來初始化逾時屬性。</span><span class="sxs-lookup"><span data-stu-id="e5d20-110">The default constructor initializes timeout properties with the service model timeout values when exchanging messages.</span></span> <span data-ttu-id="e5d20-111">若是開啟、傳送和關閉作業，預設值為 1 分鐘；若是接收作業，則為 10 分鐘。</span><span class="sxs-lookup"><span data-stu-id="e5d20-111">The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation.</span></span> <span data-ttu-id="e5d20-112">如果您想要為這些作業逾時指定其他值，請使用 <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>。</span><span class="sxs-lookup"><span data-stu-id="e5d20-112">Use <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelListenerBase (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.IDefaultCommunicationTimeouts timeouts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (timeouts As IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelListenerBase(System::ServiceModel::IDefaultCommunicationTimeouts ^ timeouts);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.ChannelListenerBase&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; : System.ServiceModel.IDefaultCommunicationTimeouts -&gt; System.ServiceModel.Channels.ChannelListenerBase&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt;" Usage="new System.ServiceModel.Channels.ChannelListenerBase&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; timeouts" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="timeouts" Type="System.ServiceModel.IDefaultCommunicationTimeouts" />
      </Parameters>
      <Docs>
        <param name="timeouts">
          <span data-ttu-id="e5d20-113">
            <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />，可在交換訊息時針對開啟、傳送、接收和關閉作業指定預設逾時值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-113">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d20-114">使用指定的預設通訊逾時，初始化 <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-114">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" /> class with specified default communication timeouts.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d20-115">如果您想要為開啟、傳送、接收和關閉作業逾時指定自訂值，而不要使用服務模型的預設值，請使用 <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29>，而不要使用預設建構函式。</span><span class="sxs-lookup"><span data-stu-id="e5d20-115">Use <xref:System.ServiceModel.Channels.ChannelListenerBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AcceptChannel">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5d20-116">接受目前通道接聽程式所指定之型別的通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-116">Accepts a channel of the type specified by the current channel listener.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptChannel">
      <MemberSignature Language="C#" Value="public TChannel AcceptChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel AcceptChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptChannel () As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TChannel AcceptChannel();" />
      <MemberSignature Language="F#" Value="abstract member AcceptChannel : unit -&gt; 'Channel&#xA;override this.AcceptChannel : unit -&gt; 'Channel" Usage="channelListenerBase.AcceptChannel " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5d20-117">接受目前通道接聽程式所指定之型別的通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-117">Accepts a channel of the type specified by the current channel listener.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5d20-118">接聽程式接受的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-118">The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted by the listener.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChannel">
      <MemberSignature Language="C#" Value="public TChannel AcceptChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel AcceptChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptChannel (timeout As TimeSpan) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TChannel AcceptChannel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member AcceptChannel : TimeSpan -&gt; 'Channel&#xA;override this.AcceptChannel : TimeSpan -&gt; 'Channel" Usage="channelListenerBase.AcceptChannel timeout" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="e5d20-119">指定必須在逾時前完成接受通道作業之寬限時間的 <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-119">The <see cref="T:System.TimeSpan" /> that specifies how long the accept channel operation has to complete before timing out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d20-120">在指定的時間間隔內，接受目前通道接聽程式所指定之型別的通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-120">Accepts a channel of the type specified by the current channel listener within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5d20-121">接聽程式接受的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-121">The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted by the listener.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAcceptChannel">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5d20-122">開始非同步作業，以便接受目前通道接聽程式所指定之型別的通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-122">Begins an asynchronous operation to accept a channel of the type specified by the current channel listener.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAcceptChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptChannel (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAcceptChannel(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptChannel (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAcceptChannel(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAcceptChannel : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAcceptChannel : AsyncCallback * obj -&gt; IAsyncResult" Usage="channelListenerBase.BeginAcceptChannel (callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="e5d20-123">指定必須在逾時前完成接受通道作業之寬限時間的 <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-123">The <see cref="T:System.TimeSpan" /> that specifies how long the accept channel operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e5d20-124">
            <see cref="T:System.AsyncCallback" /> 委派，它會在非同步接受通道作業完成時，收到通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-124">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept channel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d20-125">開始非同步作業，以便接受目前通道接聽程式所指定之型別的通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-125">Begins an asynchronous operation to accept a channel of the type specified by the current channel listener.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5d20-126">參考非同步接受通道作業的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-126">The <see cref="T:System.IAsyncResult" /> that references the asynchronous accept channel operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAcceptChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAcceptChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAcceptChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAcceptChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="channelListenerBase.BeginAcceptChannel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="e5d20-127">指定必須在逾時前完成接受通道作業之寬限時間的 <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-127">The <see cref="T:System.TimeSpan" /> that specifies how long the accept channel operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="e5d20-128">
            <see cref="T:System.AsyncCallback" /> 委派，它會在非同步接受通道作業完成時，收到通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-128">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept channel operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e5d20-129">應用程式所指定的物件，其中包含與接受通道之非同步作業相關聯的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-129">An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d20-130">在衍生類別 (Derived Class) 內實作時，開始非同步作業，以便在指定的時間間隔內接受目前通道接聽程式所指定之型別的通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-130">When implemented in a derived class, begins an asynchronous operation to accept a channel of the type specified by the current channel listener within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5d20-131">參考非同步接受通道作業的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-131">The <see cref="T:System.IAsyncResult" /> that references the asynchronous accept channel operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptChannel">
      <MemberSignature Language="C#" Value="public TChannel EndAcceptChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel EndAcceptChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase`1.EndAcceptChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptChannel (result As IAsyncResult) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TChannel EndAcceptChannel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndAcceptChannel : IAsyncResult -&gt; 'Channel&#xA;override this.EndAcceptChannel : IAsyncResult -&gt; 'Channel" Usage="channelListenerBase.EndAcceptChannel result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="e5d20-132">由 <see cref="T:System.IAsyncResult" /> 方法的呼叫所傳回的 <see cref="Overload:System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-132">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d20-133">在衍生類別內實作時，完成接受通道的非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-133">When implemented in a derived class, completes an asynchronous operation to accept a channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5d20-134">接聽程式接受的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-134">The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted by the listener.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAcceptChannel">
      <MemberSignature Language="C#" Value="protected abstract TChannel OnAcceptChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TChannel OnAcceptChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnAcceptChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnAcceptChannel (timeout As TimeSpan) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TChannel OnAcceptChannel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member OnAcceptChannel : TimeSpan -&gt; 'Channel" Usage="channelListenerBase.OnAcceptChannel timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="e5d20-135">指定必須在逾時前完成接受通道作業之寬限時間的 <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-135">The <see cref="T:System.TimeSpan" /> that specifies how long the accept channel operation has to complete before timing out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d20-136">在衍生類別內實作時，提供接受通道時的擴充點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-136">When implemented in a derived class, provides an extensibility point when accepting a channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5d20-137">接受的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-137">The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginAcceptChannel">
      <MemberSignature Language="C#" Value="protected abstract IAsyncResult OnBeginAcceptChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginAcceptChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnBeginAcceptChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract IAsyncResult ^ OnBeginAcceptChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginAcceptChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="channelListenerBase.OnBeginAcceptChannel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="e5d20-138">指定必須在逾時前完成接受通道作業之寬限時間的 <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-138">The <see cref="T:System.TimeSpan" /> that specifies how long the accept channel operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="e5d20-139">
            <see cref="T:System.AsyncCallback" /> 委派，它會在非同步接受通道作業完成時，收到通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-139">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept channel operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="e5d20-140">應用程式所指定的物件，其中包含與接受通道之非同步作業相關聯的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-140">An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d20-141">在衍生類別內實作時，提供開始接受通道時的非同步擴充點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-141">When implemented in a derived class, provides an asynchronous extensibility point when beginning to accept a channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5d20-142">參考非同步接受通道作業的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-142">The <see cref="T:System.IAsyncResult" /> that references the asynchronous accept channel operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndAcceptChannel">
      <MemberSignature Language="C#" Value="protected abstract TChannel OnEndAcceptChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance !TChannel OnEndAcceptChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnEndAcceptChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnEndAcceptChannel (result As IAsyncResult) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract TChannel OnEndAcceptChannel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndAcceptChannel : IAsyncResult -&gt; 'Channel" Usage="channelListenerBase.OnEndAcceptChannel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="e5d20-143">由 <see cref="T:System.IAsyncResult" /> 方法的呼叫所傳回的 <see cref="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-143">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5d20-144">在衍生類別內實作時，提供完成接受通道時的非同步擴充點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-144">When implemented in a derived class, provides an asynchronous extensibility point when completing the acceptance a channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5d20-145">接聽程式接受的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5d20-145">The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted by the listener.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>