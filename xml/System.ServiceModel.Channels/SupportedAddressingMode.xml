<Type Name="SupportedAddressingMode" FullName="System.ServiceModel.Channels.SupportedAddressingMode">
  <TypeSignature Language="C#" Value="public enum SupportedAddressingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SupportedAddressingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SupportedAddressingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SupportedAddressingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SupportedAddressingMode" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="03296-101">指定服務是否支援將回應只傳送至匿名位址、只傳送至非匿名位址，或兩者都支援。</span><span class="sxs-lookup"><span data-stu-id="03296-101">Specifies whether a service supports sending responses to anonymous addresses only, to non-anonymous addresses only, or to both.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03296-102">這個列舉會用於指定伺服器的能力，而該功能將形成伺服器加諸至其用戶端上的需求。</span><span class="sxs-lookup"><span data-stu-id="03296-102">This enumeration is used to specify the capability of a server, which, in turn, imposes a requirement on its clients.</span></span>  
  
 [!INCLUDE[indigo1](~/includes/indigo1-md.md)]<span data-ttu-id="03296-103"> 有各種指定訊息送往何處的定址控制方式。</span><span class="sxs-lookup"><span data-stu-id="03296-103"> has a variety of addressing controls for specifying where messages should be sent.</span></span> <span data-ttu-id="03296-104">例如，用於訊息目的地的邏輯 <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> 位址、傳輸所使用和服務接聽所在的實體位址 ("Via") 位址，以及提供用戶端端點位址之端點的 <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> 位址。</span><span class="sxs-lookup"><span data-stu-id="03296-104">For example, there is the logical <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> address for the message destination, the physical ("Via") address, used by the transport, at which a service listens, and the <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> address of the endpoint that provides the address of the client endpoint.</span></span>  
  
 <span data-ttu-id="03296-105">在最基本的情況下，即雙方只在彼此之間交換訊息時，就不必個別指定這些位址。</span><span class="sxs-lookup"><span data-stu-id="03296-105">In the most basic case, when two parties exchange messages between themselves only, it is not necessary to specify these addresses separately.</span></span> <span data-ttu-id="03296-106">但是因為交換可能會包含其他訊息目的地，所以您必須要能夠在需要明確提供位址時指定這些位址。</span><span class="sxs-lookup"><span data-stu-id="03296-106">But because exchanges can involve other message destinations, you must be able to specify when addresses must be explicitly provided.</span></span> <span data-ttu-id="03296-107">即使只在雙方之間進行交換，有時仍然需要這項能力，例如在伺服器必須建立自己的 HTTP 要求的雙重 HTTP 情況下。</span><span class="sxs-lookup"><span data-stu-id="03296-107">Even between just two parties this ability is sometimes required, as with dual HTTP where the server must create its own HTTP request.</span></span> <span data-ttu-id="03296-108">下面的關係類型是由 <xref:System.ServiceModel.Channels.SupportedAddressingMode> 列舉定義用來擷取這些訊息模式：</span><span class="sxs-lookup"><span data-stu-id="03296-108">The following kinds of relationships are defined by the <xref:System.ServiceModel.Channels.SupportedAddressingMode> enumeration to capture these messaging patterns:</span></span>  
  
-   <span data-ttu-id="03296-109">匿名位址是最基本的定址形式。</span><span class="sxs-lookup"><span data-stu-id="03296-109">Anonymous addresses are the most basic form of addressing.</span></span> <span data-ttu-id="03296-110">如果有預設的回應路徑，便會使用匿名定址。</span><span class="sxs-lookup"><span data-stu-id="03296-110">Anonymous addressing is used when there is a default path for a response.</span></span> <span data-ttu-id="03296-111">TCP 是雙向通訊傳輸，而 TCP 訊息的回應可以傳回至傳送原始訊息之通訊端的另一端。</span><span class="sxs-lookup"><span data-stu-id="03296-111">TCP is a bi-directional communication transport and the response to a TCP message can be sent back to the other side of the socket that sent the original message.</span></span> <span data-ttu-id="03296-112">同樣地，HTTP 的要求-回覆模型會透過 HTTP 回覆通道傳送回應。</span><span class="sxs-lookup"><span data-stu-id="03296-112">Similarly, the request-reply model of HTTP sends responses through the HTTP reply channel.</span></span> <span data-ttu-id="03296-113">這些回應都不需要指定回應訊息的目的地。</span><span class="sxs-lookup"><span data-stu-id="03296-113">Neither of these responses requires specifying where the response messages are going.</span></span> <span data-ttu-id="03296-114">當伺服器需要從用戶端的匿名回應時，它會使用匿名的列舉值。</span><span class="sxs-lookup"><span data-stu-id="03296-114">When a server requires anonymous responses from the client, it uses the Anonymous value of the enumeration.</span></span> <span data-ttu-id="03296-115">WCF 系統提供<xref:System.ServiceModel.NetTcpBinding>，<xref:System.ServiceModel.BasicHttpBinding>和<xref:System.ServiceModel.WSHttpBinding>繫結一定會使用匿名位址。</span><span class="sxs-lookup"><span data-stu-id="03296-115">The WCF system-provided <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> and <xref:System.ServiceModel.WSHttpBinding> bindings always use Anonymous addresses.</span></span>  
  
-   <span data-ttu-id="03296-116">傳送回應需要建立新的通道進行通訊時，會使用非匿名位址。</span><span class="sxs-lookup"><span data-stu-id="03296-116">NonAnonymous addresses are used when sending the response requires creating a new channel for communication.</span></span> <span data-ttu-id="03296-117">WCF 系統提供<xref:System.ServiceModel.WSDualHttpBinding>繫結會使用非匿名位址。</span><span class="sxs-lookup"><span data-stu-id="03296-117">The WCF system-provided <xref:System.ServiceModel.WSDualHttpBinding> binding uses a NonAnonymous address.</span></span> <span data-ttu-id="03296-118">當使用雙重 HTTP 時，用戶端會建立 HTTP 要求以傳送訊息，接著伺服器就必須建立自己的 HTTP 要求以傳送回應。</span><span class="sxs-lookup"><span data-stu-id="03296-118">With dual HTTP, the client creates an HTTP request to send a message and then the server must create its own HTTP request to send a response.</span></span> <span data-ttu-id="03296-119">由於伺服器將會初始化該傳送，因此它必須建立特定的端點來建立連線。</span><span class="sxs-lookup"><span data-stu-id="03296-119">Because the server is initiating the send, it must have a specific endpoint to establish the connection.</span></span> <span data-ttu-id="03296-120">您必須為伺服器提供用於回應之端點的位址。</span><span class="sxs-lookup"><span data-stu-id="03296-120">You must provide the server the address of an endpoint for its response.</span></span> <span data-ttu-id="03296-121">同樣地，如果服務必須回應所收到的單向訊息，也需要 NonAnonymous 位址，因為沒有可用的通訊後通道。</span><span class="sxs-lookup"><span data-stu-id="03296-121">Similarly, if a service must respond to a one-way message that it received, it also requires a NonAnonymous address because there is no back channel available for communication.</span></span> <span data-ttu-id="03296-122">如果伺服器傳回訊息，則需要完全不同於在傳送第一個訊息時所使用的作業。</span><span class="sxs-lookup"><span data-stu-id="03296-122">If the server sends a message back, a completely separate operation from that used to send the first message is required.</span></span>  
  
-   <span data-ttu-id="03296-123">混合是第三種定址其結合了匿名和 NonAnonymous 視正在傳送訊息的位址。</span><span class="sxs-lookup"><span data-stu-id="03296-123">Mixed is a third form of addressing which combines Anonymous and NonAnonymous addresses depending on the message that is being sent.</span></span> <span data-ttu-id="03296-124">混合模式定址的常見範例是使用專用電腦來處理錯誤或認可訊息。</span><span class="sxs-lookup"><span data-stu-id="03296-124">A typical example of mixed-mode addressing is the use of a dedicated machine for processing fault or acknowledgment messages.</span></span> <span data-ttu-id="03296-125">如果回覆的標準交換順序是 HTTP 或 TCP，回應便會使用匿名定址，但錯誤會使用非匿名定址。</span><span class="sxs-lookup"><span data-stu-id="03296-125">If the standard exchange sequence for replies is HTTP or TCP, the responses use Anonymous addressing but the faults use non-anonymous addressing.</span></span> <span data-ttu-id="03296-126">雖然 WCF 未提供混合模式定址功能，其中一種的標準繫結，就可以撰寫允許服務在返回通道 （當回應位址為匿名） 直接或不同的通道上傳送回應的通道 （當回應位址為 NonAnonymous）。</span><span class="sxs-lookup"><span data-stu-id="03296-126">While WCF does not provide Mixed addressing functionality in one of its standard bindings, it is possible to write a channel that allows the service to send responses directly on the back-channel (when the response address is Anonymous) or on a separate channel (when the response address is NonAnonymous).</span></span> <span data-ttu-id="03296-127">在這種情況下，通道繫結項目用來設定<xref:System.ServiceModel.Channels.SupportedAddressingMode>為 Mixed。</span><span class="sxs-lookup"><span data-stu-id="03296-127">In such a case, the binding element of the channel is used to set <xref:System.ServiceModel.Channels.SupportedAddressingMode> to Mixed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Anonymous = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="03296-128">伺服器只支援匿名位址，因此用戶端必須提供匿名回應位址。</span><span class="sxs-lookup"><span data-stu-id="03296-128">The server only supports anonymous addresses and clients must provide an anonymous response address.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Mixed">
      <MemberSignature Language="C#" Value="Mixed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Mixed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberSignature Language="VB.NET" Value="Mixed" />
      <MemberSignature Language="C++ CLI" Value="Mixed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="03296-129">伺服器同時支援匿名和非匿名位址，因此用戶端可選擇使用其中一種或兩種。</span><span class="sxs-lookup"><span data-stu-id="03296-129">The server supports both anonymous and non-anonymous addresses and clients may choose to use either or both.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NonAnonymous">
      <MemberSignature Language="C#" Value="NonAnonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode NonAnonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberSignature Language="VB.NET" Value="NonAnonymous" />
      <MemberSignature Language="C++ CLI" Value="NonAnonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="03296-130">伺服器只支援非匿名位址，因此用戶端必須提供非匿名回應位址。</span><span class="sxs-lookup"><span data-stu-id="03296-130">The server only supports non-anonymous addresses and clients must provide a non-anonymous response address.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>