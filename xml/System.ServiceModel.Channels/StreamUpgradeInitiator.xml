<Type Name="StreamUpgradeInitiator" FullName="System.ServiceModel.Channels.StreamUpgradeInitiator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4cb514637ce30300a803c7aea8160ddad049cf09" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51910057" /></Metadata><TypeSignature Language="C#" Value="public abstract class StreamUpgradeInitiator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StreamUpgradeInitiator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.StreamUpgradeInitiator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StreamUpgradeInitiator" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamUpgradeInitiator abstract" />
  <TypeSignature Language="F#" Value="type StreamUpgradeInitiator = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fa783-101">若要實作自訂升級啟動器，請從這個 <see langword="abstract" /> 基底類別 (Base Class) 繼承。</span><span class="sxs-lookup"><span data-stu-id="fa783-101">To implement a custom upgrade initiator, inherit from this <see langword="abstract" /> base class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa783-102">資料流升級的一個範例，就是直接在傳輸資料流的上方建立壓縮資料流。</span><span class="sxs-lookup"><span data-stu-id="fa783-102">An example of a stream upgrade is to build a compression stream directly on top of the transport stream.</span></span> <span data-ttu-id="fa783-103">這個類別會搭配 <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor> 和 <xref:System.ServiceModel.Channels.StreamUpgradeProvider> 使用，以實作自訂資料流升級。</span><span class="sxs-lookup"><span data-stu-id="fa783-103">This class is used with <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor> and <xref:System.ServiceModel.Channels.StreamUpgradeProvider> to implement a custom stream upgrade.</span></span>  
  
 <span data-ttu-id="fa783-104">如需升級程序的詳細說明，請參閱 <xref:System.ServiceModel.Channels.StreamUpgradeProvider>。</span><span class="sxs-lookup"><span data-stu-id="fa783-104">For a detailed description of the upgrade process, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e3da85c8-57f3-4e32-a4cb-50123f30fea6"><span data-ttu-id="fa783-105">自訂資料流升級</span><span class="sxs-lookup"><span data-stu-id="fa783-105">Custom Stream Upgrades</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StreamUpgradeInitiator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StreamUpgradeInitiator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fa783-106">初始化 <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="fa783-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInitiateUpgrade">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginInitiateUpgrade (System.IO.Stream stream, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInitiateUpgrade(class System.IO.Stream stream, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginInitiateUpgrade(System::IO::Stream ^ stream, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginInitiateUpgrade : System.IO.Stream * AsyncCallback * obj -&gt; IAsyncResult" Usage="streamUpgradeInitiator.BeginInitiateUpgrade (stream, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="fa783-107">要升級的資料流。</span><span class="sxs-lookup"><span data-stu-id="fa783-107">The stream to be upgraded.</span></span></param>
        <param name="callback"><span data-ttu-id="fa783-108">當 <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" /> 已經完成時，所要呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="fa783-108">The method to call when the <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" /> has completed.</span></span></param>
        <param name="state"><span data-ttu-id="fa783-109">有關非同步呼叫狀態的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="fa783-109">State information about the status of the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="fa783-110">這個 <see langword="abstract" /> 方法可以實作，以執行可啟始升級的非同步處理。</span><span class="sxs-lookup"><span data-stu-id="fa783-110">This <see langword="abstract" /> method can be implemented to do asynchronous processing that initiates an upgrade.</span></span></summary>
        <returns><span data-ttu-id="fa783-111">傳回要傳入 <see cref="T:System.IAsyncResult" /> 方法中的 <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" />。</span><span class="sxs-lookup"><span data-stu-id="fa783-111">Returns an <see cref="T:System.IAsyncResult" /> to be passed into the <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa783-112">這個方法會呼叫 <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A> 並傳回。</span><span class="sxs-lookup"><span data-stu-id="fa783-112">This method calls <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A> and returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInitiateUpgrade">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream EndInitiateUpgrade (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream EndInitiateUpgrade(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndInitiateUpgrade (result As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ EndInitiateUpgrade(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndInitiateUpgrade : IAsyncResult -&gt; System.IO.Stream" Usage="streamUpgradeInitiator.EndInitiateUpgrade result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="fa783-113">從 <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /> 方法傳回的 <see langword="IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="fa783-113">The <see langword="IAsyncResult" /> returned from the <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="fa783-114">這個方法是非同步的回呼 (Callback) 方法，會在 <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /> 完成之後呼叫。</span><span class="sxs-lookup"><span data-stu-id="fa783-114">This method is the asynchronous callback method that is called after <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /> has completed.</span></span></summary>
        <returns><span data-ttu-id="fa783-115">傳回升級的資料流。</span><span class="sxs-lookup"><span data-stu-id="fa783-115">Returns the upgraded stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa783-116">如需使用此方法的詳細資訊，請參閱 <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A> 中的備註。</span><span class="sxs-lookup"><span data-stu-id="fa783-116">For more information about using this method, see the remarks in <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextUpgrade">
      <MemberSignature Language="C#" Value="public abstract string GetNextUpgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNextUpgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.GetNextUpgrade" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextUpgrade () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetNextUpgrade();" />
      <MemberSignature Language="F#" Value="abstract member GetNextUpgrade : unit -&gt; string" Usage="streamUpgradeInitiator.GetNextUpgrade " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fa783-117">傳回下一次要執行之升級的內容型別。</span><span class="sxs-lookup"><span data-stu-id="fa783-117">Returns the content type of the next upgrade to be performed.</span></span></summary>
        <returns><span data-ttu-id="fa783-118">傳回下一次升級的內容型別。</span><span class="sxs-lookup"><span data-stu-id="fa783-118">Returns the content type of the next upgrade.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa783-119">這個方法會傳回升級提供者所支援的一組升級內容型別 (依據其應該出現的順序)。</span><span class="sxs-lookup"><span data-stu-id="fa783-119">This method returns a set of upgrade content types supported by the upgrade provider in the order in which they are expected.</span></span> <span data-ttu-id="fa783-120">支援單一升級的升級提供者只會傳回單一值。</span><span class="sxs-lookup"><span data-stu-id="fa783-120">Upgrade providers that support a single upgrade return only a single value.</span></span> <span data-ttu-id="fa783-121">支援多重升級的升級提供者會依序傳回值 (例如，壓縮內容型別，後面緊接著安全性內容型別)。</span><span class="sxs-lookup"><span data-stu-id="fa783-121">Upgrade providers that support multiple upgrades return the values in order (for example, compression content type followed by the security content type).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitiateUpgrade">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream InitiateUpgrade (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream InitiateUpgrade(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ InitiateUpgrade(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member InitiateUpgrade : System.IO.Stream -&gt; System.IO.Stream" Usage="streamUpgradeInitiator.InitiateUpgrade stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="fa783-122">要升級的資料流。</span><span class="sxs-lookup"><span data-stu-id="fa783-122">The stream to be upgraded.</span></span></param>
        <summary><span data-ttu-id="fa783-123">啟始資料流的升級，其方式是要求其連線的另一端升級通道傳輸層。</span><span class="sxs-lookup"><span data-stu-id="fa783-123">Initiates the upgrade of the stream by requesting the other end of its connection to upgrade the channel transport layer.</span></span></summary>
        <returns><span data-ttu-id="fa783-124">傳回升級的資料流。</span><span class="sxs-lookup"><span data-stu-id="fa783-124">Returns the upgraded stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa783-125">可以針對升級提供者所支援的每一次升級來多次呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="fa783-125">This method can be called multiple times for each upgrade supported by the upgrade provider.</span></span> <span data-ttu-id="fa783-126">例如，支援壓縮和安全性的升級提供者會呼叫這個方法兩次：第一次是升級預設傳輸資料流進行壓縮，第二次是升級安全性。</span><span class="sxs-lookup"><span data-stu-id="fa783-126">For example, an upgrade provider that supports compression and security would call this method twice: first to upgrade the default transport streaming for compression, and second to upgrade the security.</span></span> <span data-ttu-id="fa783-127">這個方法的後續呼叫應該會傳入來自前一次呼叫的升級資料流。</span><span class="sxs-lookup"><span data-stu-id="fa783-127">Subsequent calls to this method should pass in the upgrade stream from the previous call.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>