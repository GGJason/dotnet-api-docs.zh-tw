<Type Name="RequestContext" FullName="System.ServiceModel.Channels.RequestContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5773037df407e3c79f025297c6995ba238d87183" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37460327" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class RequestContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RequestContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.RequestContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RequestContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestContext abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type RequestContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="54d23-101">提供與傳入要求相互關聯的回覆。</span>
      <span class="sxs-lookup">
        <span data-stu-id="54d23-101">Provides a reply that is correlated to an incoming request.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d23-102">您可以從 <xref:System.ServiceModel.Channels.IReplyChannel> 取得要求內容。</span><span class="sxs-lookup"><span data-stu-id="54d23-102">You get a request context from an <xref:System.ServiceModel.Channels.IReplyChannel>.</span></span> <span data-ttu-id="54d23-103">每個 <xref:System.ServiceModel.Channels.RequestContext> 會封裝回覆要求所需的資訊，因此當等候每個要求訊息接收回覆時就不需要封鎖通道。</span><span class="sxs-lookup"><span data-stu-id="54d23-103">Each <xref:System.ServiceModel.Channels.RequestContext> encapsulates the information required to reply to the request, so that you do not have to block on the channel when waiting for each request message to receive a reply.</span></span>  
  
 <span data-ttu-id="54d23-104">在要求/回覆模型中，<xref:System.ServiceModel.Channels.RequestContext> 物件是傳入要求與傳出回覆之間的連結。當伺服器接收要求時，會提供代表通道要求的 <xref:System.ServiceModel.Channels.RequestContext> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="54d23-104">In the request/reply model, the <xref:System.ServiceModel.Channels.RequestContext> object is the link between the request that comes in and the reply that goes out. When the server receives a request, it provides a <xref:System.ServiceModel.Channels.RequestContext> instance that represents the request to the channel.</span></span> <span data-ttu-id="54d23-105">除了其他有用的屬性以外，要求內容也會包含原始要求訊息。</span><span class="sxs-lookup"><span data-stu-id="54d23-105">The request context contains the original request message among other useful properties.</span></span> <span data-ttu-id="54d23-106">然後這個要求內容就會隱藏在 <xref:System.ServiceModel.OperationContext> 中以便讓服務擷取。</span><span class="sxs-lookup"><span data-stu-id="54d23-106">This request context is then stashed inside the <xref:System.ServiceModel.OperationContext> for retrieval by your service.</span></span> <span data-ttu-id="54d23-107">您通常會使用 <xref:System.ServiceModel.OperationContext.Current%2A> 屬性存取目前作業的要求。</span><span class="sxs-lookup"><span data-stu-id="54d23-107">You typically use the <xref:System.ServiceModel.OperationContext.Current%2A> property to access the request of the current operation.</span></span>  
  
 <span data-ttu-id="54d23-108"><xref:System.ServiceModel.Channels.RequestContext> 的值可以是 `null`。</span><span class="sxs-lookup"><span data-stu-id="54d23-108">The value of the <xref:System.ServiceModel.Channels.RequestContext> can be `null`.</span></span> <span data-ttu-id="54d23-109">因為要求內容的角色是將要求連結至回覆，所以當沒有回覆時就不需要要求內容，因此在此例中內容會設定為 `null`。</span><span class="sxs-lookup"><span data-stu-id="54d23-109">Because the role of the request context is to link requests to replies, it does not make sense to have a request context when you do not have a reply, and so in this case the context is set to `null`.</span></span> <span data-ttu-id="54d23-110">針對要求/回覆模型上方的單向作業，伺服器會接收要求但是不會將回應傳回至用戶端。</span><span class="sxs-lookup"><span data-stu-id="54d23-110">For a one-way operation on top of the request/reply model, the server receives requests but does not send back a response to the client.</span></span> <span data-ttu-id="54d23-111">所以如果 <xref:System.ServiceModel.Channels.RequestContext> 意外成為 `null`，請先檢查作業合約是否為 IsOneWay。</span><span class="sxs-lookup"><span data-stu-id="54d23-111">So if the <xref:System.ServiceModel.Channels.RequestContext> is `null` unexpectedly, check first whether the operation contract is IsOneWay.</span></span>  
  
 <span data-ttu-id="54d23-112">給衍生自此類別之 Managed C++ 使用者的特別說明：</span><span class="sxs-lookup"><span data-stu-id="54d23-112">Special note for Managed C++ users deriving from this class:</span></span>  
  
-   <span data-ttu-id="54d23-113">請將您的清除程式碼置於 (On)(Begin)Close (and/or OnAbort)，而不是解構函式。</span><span class="sxs-lookup"><span data-stu-id="54d23-113">Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</span></span>  
  
-   <span data-ttu-id="54d23-114">避免使用解構函式，因為它們會導致編譯器自動產生 <xref:System.IDisposable>。</span><span class="sxs-lookup"><span data-stu-id="54d23-114">Avoid destructors: they cause the compiler to auto-generate <xref:System.IDisposable>.</span></span>  
  
-   <span data-ttu-id="54d23-115">避免使用非參考成員，因為它們會導致編譯器自動產生 <xref:System.IDisposable>。</span><span class="sxs-lookup"><span data-stu-id="54d23-115">Avoid non-reference members: they can cause the compiler to auto-generate <xref:System.IDisposable>.</span></span>  
  
-   <span data-ttu-id="54d23-116">避免使用完成項，但如果您要加入完成項，則應隱藏建置警告並從 (On)(Begin)Close (和/或 OnAbort) 呼叫 <xref:System.GC.SuppressFinalize%28System.Object%29><xref:System.IDisposable>和完成項本身，以模擬原本可能自動產生的  行為。</span><span class="sxs-lookup"><span data-stu-id="54d23-116">Avoid finalizers; but if you include one, you should suppress the build warning and call <xref:System.GC.SuppressFinalize%28System.Object%29> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <xref:System.IDisposable> behavior.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RequestContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RequestContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54d23-117">初始化 <see cref="T:System.ServiceModel.Channels.RequestContext" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.RequestContext" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public abstract void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Abort" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="requestContext.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54d23-118">在衍生類別中覆寫時，中止處理與內容關聯的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-118">When overridden in a derived class, aborts processing the request associated with the context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReply">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54d23-119">開始非同步作業以回覆與目前內容關聯的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-119">Begins an asynchronous operation to reply to the request associated with the current context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d23-120">不管有沒有明確的逾時，都可以使用非同步的作業。</span><span class="sxs-lookup"><span data-stu-id="54d23-120">The asynchronous operation is available with or without an explicit time-out.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReply">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginReply (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReply(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginReply(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReply : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="requestContext.BeginReply (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="54d23-121">傳入的 <see cref="T:System.ServiceModel.Channels.Message" />，包含該要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-121">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="54d23-122">
            <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步回覆作業完成的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-122">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous reply operation completion.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="54d23-123">應用程式所指定的物件，其中包含與非同步回覆作業相關的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-123">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54d23-124">在衍生類別中覆寫時，開始非同步作業以回覆與目前內容關聯的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-124">When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54d23-125">參考非同步回覆作業的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-125">The <see cref="T:System.IAsyncResult" /> that references the asynchronous reply operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d23-126">當應用程式必須繼續處理而不能等候時，請使用非同步的 <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="54d23-126">Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method when the application processing must continue without waiting.</span></span> <span data-ttu-id="54d23-127">當目前的執行緒可接受進行封鎖並同時回覆要求訊息，或是直到已超過逾時間隔時，請使用其中一種同步的 <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="54d23-127">Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.</span></span>  
  
 <span data-ttu-id="54d23-128">這個方法會透過回呼 (Callback)，接收有關作業之事件處理常式身分識別的通知。</span><span class="sxs-lookup"><span data-stu-id="54d23-128">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="54d23-129">在傳送回覆或發生逾時之後，作業才會完成。</span><span class="sxs-lookup"><span data-stu-id="54d23-129">The operation is not complete until either the reply is sent or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="54d23-130">
            <para>作業會擲回<see cref="T:System.TimeoutException" />如果指定<paramref name="timeout" />超出之前完成。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-130">
              <para>The operation throws a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before it completes.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginReply">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginReply (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginReply(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginReply(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginReply : System.ServiceModel.Channels.Message * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="requestContext.BeginReply (message, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="54d23-131">傳入的 <see cref="T:System.ServiceModel.Channels.Message" />，包含該要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-131">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="54d23-132">
            <see cref="T:System.TimeSpan" />，指定等候回覆可用要求的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-132">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reply to an available request.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="54d23-133">
            <see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步回覆作業完成的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-133">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous reply operation completion.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="54d23-134">應用程式所指定的物件，其中包含與非同步回覆作業相關的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-134">An object, specified by the application, that contains state information associated with the asynchronous reply operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54d23-135">在衍生類別中覆寫時，在指定時間間隔內開始非同步作業以回覆與目前內容關聯的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-135">When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="54d23-136">參考非同步回覆作業的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-136">The <see cref="T:System.IAsyncResult" /> that references the asynchronous reply operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d23-137">使用非同步 <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> 方法以便讓應用程式繼續處理，而不用等候要求完成。</span><span class="sxs-lookup"><span data-stu-id="54d23-137">Use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method to allow the application processing to continue without waiting for the request to complete.</span></span>  
  
 <span data-ttu-id="54d23-138">當目前的執行緒可接受進行封鎖並同時回覆要求訊息，或是直到已超過逾時間隔時，請使用其中一種同步的 <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="54d23-138">Use one of the synchronous <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.</span></span> <span data-ttu-id="54d23-139">這個方法會透過回呼 (Callback)，接收有關作業之事件處理常式身分識別的通知。</span><span class="sxs-lookup"><span data-stu-id="54d23-139">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="54d23-140">在傳送回覆或發生逾時之後，作業才會完成。</span><span class="sxs-lookup"><span data-stu-id="54d23-140">The operation is not complete until either the reply is sent or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="54d23-141">
            <para>作業會擲回<see cref="T:System.TimeoutException" />如果指定<paramref name="timeout" />超出之前完成。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-141">
              <para>The operation throws a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before it completes.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54d23-142">關閉回覆與目前內容關聯之要求內容的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-142">Closes the operation that is replying to the request context associated with the current context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Close" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="requestContext.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54d23-143">在衍生類別中覆寫時，關閉回覆與目前內容關聯之要求內容的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-143">When overridden in a derived class, closes the operation that is replying to the request context associated with the current context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Close : TimeSpan -&gt; unit" Usage="requestContext.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="54d23-144">
            <see cref="T:System.TimeSpan" />，指定與目前內容關聯之回覆作業必須關閉的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-144">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the reply operation associated with the current context must close.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54d23-145">在衍生類別中覆寫時，在指定時間間隔內關閉回覆與目前內容關聯之要求內容的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-145">When overridden in a derived class, closes the operation that is replying to the request context associated with the current context within a specified interval of time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="54d23-146">
            <para>此作業應該擲回<see cref="T:System.TimeoutException" />如果指定<paramref name="timeout" />超出之前完成。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-146">
              <para>The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before it completes.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="requestContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="54d23-147">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-147">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54d23-148">釋放與內容關聯的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-148">Releases resources associated with the context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReply">
      <MemberSignature Language="C#" Value="public abstract void EndReply (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndReply(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndReply (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndReply(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndReply : IAsyncResult -&gt; unit" Usage="requestContext.EndReply result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="54d23-149">
            <see cref="T:System.IAsyncResult" />，呼叫其中一種 <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" /> 方法時傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-149">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54d23-150">在衍生類別中覆寫時，完成非同步作業以回覆要求訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-150">When overridden in a derived class, completes an asynchronous operation to reply to a request message.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reply">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="54d23-151">回覆要求訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-151">Replies to a request message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public abstract void Reply (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reply(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Reply(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Reply : System.ServiceModel.Channels.Message -&gt; unit" Usage="requestContext.Reply message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="54d23-152">傳入的 <see cref="T:System.ServiceModel.Channels.Message" />，包含該要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-152">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54d23-153">在衍生類別中覆寫時，回覆要求訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-153">When overridden in a derived class, replies to a request message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d23-154">當目前的執行緒可接受進行封鎖並同時回覆要求訊息時，請使用 <xref:System.ServiceModel.Channels.RequestContext.Reply%2A>。</span><span class="sxs-lookup"><span data-stu-id="54d23-154">Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message.</span></span> <span data-ttu-id="54d23-155">執行緒會持續封鎖，直到指定的 `timeout` 為止。</span><span class="sxs-lookup"><span data-stu-id="54d23-155">The thread is blocked up to the specified `timeout`.</span></span>  
  
 <span data-ttu-id="54d23-156">如果應用程式必須繼續處理而不要等候回覆完成，請使用非同步 <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="54d23-156">If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method.</span></span> <span data-ttu-id="54d23-157">這個方法會透過回呼 (Callback)，接收有關作業之事件處理常式身分識別的通知。</span><span class="sxs-lookup"><span data-stu-id="54d23-157">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="54d23-158">在訊息可以於通道中使用或發生逾時之後，作業才會完成。</span><span class="sxs-lookup"><span data-stu-id="54d23-158">The operation is not complete until either a message becomes available in the channel or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public abstract void Reply (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reply(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Reply(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Reply : System.ServiceModel.Channels.Message * TimeSpan -&gt; unit" Usage="requestContext.Reply (message, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="54d23-159">傳入的 <see cref="T:System.ServiceModel.Channels.Message" />，包含該要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-159">The incoming <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="54d23-160">
            <see cref="T:System.TimeSpan" />，指定等候回覆要求的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-160">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait for the reply to a request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="54d23-161">在衍生類別中覆寫時，在指定時間間隔內回覆要求訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-161">When overridden in a derived class, replies to a request message within a specified interval of time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54d23-162">當目前的執行緒可接受進行封鎖並同時回覆要求訊息時，請使用 <xref:System.ServiceModel.Channels.RequestContext.Reply%2A>。</span><span class="sxs-lookup"><span data-stu-id="54d23-162">Use <xref:System.ServiceModel.Channels.RequestContext.Reply%2A> when it is acceptable for the current thread to be blocked while it replies to the request message.</span></span> <span data-ttu-id="54d23-163">執行緒會持續封鎖，直到指定的 `timeout` 為止。</span><span class="sxs-lookup"><span data-stu-id="54d23-163">The thread is blocked up to the specified `timeout`.</span></span>  
  
 <span data-ttu-id="54d23-164">如果應用程式必須繼續處理而不要等候回覆完成，請使用非同步 <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="54d23-164">If the application processing must continue without waiting for the reply to complete, use the asynchronous <xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A> method.</span></span> <span data-ttu-id="54d23-165">這個方法會透過回呼 (Callback)，接收有關作業之事件處理常式身分識別的通知。</span><span class="sxs-lookup"><span data-stu-id="54d23-165">This method receives notification, through a callback, of the identity of the event handler for the operation.</span></span> <span data-ttu-id="54d23-166">在訊息可以於通道中使用或發生逾時之後，作業才會完成。</span><span class="sxs-lookup"><span data-stu-id="54d23-166">The operation is not complete until either a message becomes available in the channel or the time-out occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestMessage">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.Message RequestMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Message RequestMessage" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.RequestContext.RequestMessage" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property RequestMessage As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::Message ^ RequestMessage { System::ServiceModel::Channels::Message ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestMessage : System.ServiceModel.Channels.Message" Usage="System.ServiceModel.Channels.RequestContext.RequestMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="54d23-167">在衍生類別 (Derived Class) 中覆寫時，取得包含要求的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-167">When overridden in a derived class, gets the message that contains the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="54d23-168">包含要求的 <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-168">The <see cref="T:System.ServiceModel.Channels.Message" /> that contains the request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="54d23-169">同時釋放與內容關聯的 Managed 和 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="54d23-169">Releases both managed and unmanaged resources associated with the context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>