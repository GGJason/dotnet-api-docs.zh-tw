<Type Name="IRequestChannel" FullName="System.ServiceModel.Channels.IRequestChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="61017340b8e26521f9ecef7455d6b7513422e28e" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58547002" /></Metadata><TypeSignature Language="C#" Value="public interface IRequestChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRequestChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IRequestChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRequestChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRequestChannel : System::ServiceModel::Channels::IChannel" />
  <TypeSignature Language="F#" Value="type IRequestChannel = interface&#xA;    interface IChannel&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="569dd-101">定義通道必須實作的合約，這個合約會出現在傳訊端點之間要求–回覆通訊的要求端上。</span><span class="sxs-lookup"><span data-stu-id="569dd-101">Defines the contract that a channel must implement to be on the requesting side of a request-reply communication between messaging endpoints.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-interface-note](~/includes/untrusted-data-interface-note.md)]

 <span data-ttu-id="569dd-102"><xref:System.ServiceModel.Channels.IRequestChannel> 會定義傳回回應訊息之 <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IRequestChannel%23Request%2A> 方法的同步和非同步 Variant。</span><span class="sxs-lookup"><span data-stu-id="569dd-102">The <xref:System.ServiceModel.Channels.IRequestChannel> defines synchronous and asynchronous variants of a <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IRequestChannel%23Request%2A> method that returns a response message.</span></span> <span data-ttu-id="569dd-103">它也會提供 <xref:System.ServiceModel.Channels.IRequestChannel.RemoteAddress%2A> 和 <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> 屬性來擷取要求訊息傳送的目標端點位址及 URI。</span><span class="sxs-lookup"><span data-stu-id="569dd-103">It also provides a <xref:System.ServiceModel.Channels.IRequestChannel.RemoteAddress%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> properties to retrieve the endpoint address and URI to which the request message is sent.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginRequest">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="569dd-104">開始非同步作業，以便將要求訊息傳輸至要求-回覆訊息交換的回覆端。</span><span class="sxs-lookup"><span data-stu-id="569dd-104">Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRequest(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRequest(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRequest : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRequestChannel.BeginRequest (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="569dd-105">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="569dd-105">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span></span></param>
        <param name="callback"><span data-ttu-id="569dd-106"><see cref="T:System.AsyncCallback" /> 委派 (Delegate)，這個委派會在非同步傳輸要求訊息作業完成時，收到通知。</span><span class="sxs-lookup"><span data-stu-id="569dd-106">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</span></span></param>
        <param name="state"><span data-ttu-id="569dd-107">應用程式所指定的物件，其中包含與非同步傳輸要求訊息作業相關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="569dd-107">An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</span></span></param>
        <summary><span data-ttu-id="569dd-108">開始非同步作業，以便將要求訊息傳輸至要求-回覆訊息交換的回覆端。</span><span class="sxs-lookup"><span data-stu-id="569dd-108">Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange.</span></span></summary>
        <returns><span data-ttu-id="569dd-109">參考非同步訊息傳輸的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="569dd-109">The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569dd-110">如果要求訊息大於要使用之繫結所允許的訊息大小上限，則會擲回 <xref:System.ServiceModel.QuotaExceededException>。</span><span class="sxs-lookup"><span data-stu-id="569dd-110">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="569dd-111">訊息大小上限是由 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> 屬性所設定。</span><span class="sxs-lookup"><span data-stu-id="569dd-111">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="569dd-112">預設值為 65536 個位元組。</span><span class="sxs-lookup"><span data-stu-id="569dd-112">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569dd-113">下列程式碼會示範如何實作這個方法。</span><span class="sxs-lookup"><span data-stu-id="569dd-113">The following code shows how to implement this method.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRequest(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRequest(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRequest : System.ServiceModel.Channels.Message * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRequestChannel.BeginRequest (message, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="569dd-114">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="569dd-114">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span></span></param>
        <param name="timeout"><span data-ttu-id="569dd-115">指定必須收到回應之時間間隔的 <see cref="T:System.TimeSpan" /> </span><span class="sxs-lookup"><span data-stu-id="569dd-115">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which a response must be received.</span></span></param>
        <param name="callback"><span data-ttu-id="569dd-116"><see cref="T:System.AsyncCallback" /> 委派 (Delegate)，這個委派會在非同步傳輸要求訊息作業完成時，收到通知。</span><span class="sxs-lookup"><span data-stu-id="569dd-116">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</span></span></param>
        <param name="state"><span data-ttu-id="569dd-117">應用程式所指定的物件，其中包含與非同步傳輸要求訊息作業相關聯的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="569dd-117">An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</span></span></param>
        <summary><span data-ttu-id="569dd-118">開始非同步作業，以便在指定的時間間隔內，將要求訊息傳輸至要求-回覆訊息交換的回覆端。</span><span class="sxs-lookup"><span data-stu-id="569dd-118">Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="569dd-119">參考非同步訊息傳輸的 <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="569dd-119">The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569dd-120">如果要求訊息大於要使用之繫結所允許的訊息大小上限，則應該擲回 <xref:System.ServiceModel.QuotaExceededException>。</span><span class="sxs-lookup"><span data-stu-id="569dd-120">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> should be thrown.</span></span> <span data-ttu-id="569dd-121">訊息大小上限是由 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> 屬性所設定。</span><span class="sxs-lookup"><span data-stu-id="569dd-121">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="569dd-122">預設值為 65536 個位元組。</span><span class="sxs-lookup"><span data-stu-id="569dd-122">The default value is 65536 bytes.</span></span>  
  
 <span data-ttu-id="569dd-123">如果在呼叫此函式時傳遞 `timeout`，則會使用該值。</span><span class="sxs-lookup"><span data-stu-id="569dd-123">If a `timeout` is passed while calling the function then that value is used.</span></span> <span data-ttu-id="569dd-124">如果在繫結上設定 <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A>，則如果在呼叫此函式時未指定任何 `timeout`，便會使用繫結上的值。</span><span class="sxs-lookup"><span data-stu-id="569dd-124">If the <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> is set on the binding, then the value on the binding is used if no `timeout` is specified while calling the function.</span></span>  
  
 <span data-ttu-id="569dd-125">如果在繫結上或是呼叫此函式時，未指定任何逾時值，則會使用 <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A>。</span><span class="sxs-lookup"><span data-stu-id="569dd-125">The <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> is used if no timeout is specified on either the binding or while calling the function.</span></span> <span data-ttu-id="569dd-126">這個預設值為 1 分鐘。</span><span class="sxs-lookup"><span data-stu-id="569dd-126">This default value is 1 minute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569dd-127">下列程式碼會示範如何實作這個方法：</span><span class="sxs-lookup"><span data-stu-id="569dd-127">The following code shows how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="569dd-128">如果在作業完成之前超出了指定的 <see cref="T:System.TimeoutException" />，此作業應該擲回 <paramref name="timeout" />。</span><span class="sxs-lookup"><span data-stu-id="569dd-128">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndRequest (result As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ EndRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.EndRequest result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="569dd-129">由 <see cref="T:System.IAsyncResult" /> 方法的呼叫所傳回的 <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />。</span><span class="sxs-lookup"><span data-stu-id="569dd-129">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> method.</span></span></param>
        <summary><span data-ttu-id="569dd-130">完成非同步作業，以便傳回傳輸之要求的訊息型回應。</span><span class="sxs-lookup"><span data-stu-id="569dd-130">Completes an asynchronous operation to return a message-based response to a transmitted request.</span></span></summary>
        <returns><span data-ttu-id="569dd-131">回應要求時所收到的 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="569dd-131">The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569dd-132">如果要求訊息大於要使用之繫結所允許的訊息大小上限，則會擲回 <xref:System.ServiceModel.QuotaExceededException>。</span><span class="sxs-lookup"><span data-stu-id="569dd-132">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="569dd-133">訊息大小上限是由 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> 屬性所設定。</span><span class="sxs-lookup"><span data-stu-id="569dd-133">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="569dd-134">預設值為 65536 個位元組。</span><span class="sxs-lookup"><span data-stu-id="569dd-134">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569dd-135">下列程式碼會示範如何實作這個方法。</span><span class="sxs-lookup"><span data-stu-id="569dd-135">The following code shows how to implement this method.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ RemoteAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.IRequestChannel.RemoteAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="569dd-136">取得要求通道傳送訊息的目標遠端位址。</span><span class="sxs-lookup"><span data-stu-id="569dd-136">Gets the remote address to which the request channel sends messages.</span></span></summary>
        <value><span data-ttu-id="569dd-137">要求通道傳送訊息的目標 <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="569dd-137">The <see cref="T:System.ServiceModel.EndpointAddress" /> to which the request channel sends messages.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569dd-138">如果沒有指定 <xref:System.ServiceModel.EndpointAddress>，<xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> 會同時當做最終目的端和實體位址。</span><span class="sxs-lookup"><span data-stu-id="569dd-138">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="569dd-139">如果指定了 <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A>，這就是訊息傳送的實際實體目標位址，而且訊息必須透過這個位址，才能到達目的端。</span><span class="sxs-lookup"><span data-stu-id="569dd-139">If the <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569dd-140">下列程式碼會示範如何實作這個屬性。</span><span class="sxs-lookup"><span data-stu-id="569dd-140">The following code shows how to implement this property.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Request">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="569dd-141">傳送訊息型要求，並傳回相互關聯的訊息型回應。</span><span class="sxs-lookup"><span data-stu-id="569dd-141">Sends a message-based request and returns the correlated message-based response.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Request(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Request(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Request : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.Request message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="569dd-142">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="569dd-142">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span></span></param>
        <summary><span data-ttu-id="569dd-143">傳送訊息型要求，並傳回相互關聯的訊息型回應。</span><span class="sxs-lookup"><span data-stu-id="569dd-143">Sends a message-based request and returns the correlated message-based response.</span></span></summary>
        <returns><span data-ttu-id="569dd-144">回應要求時所收到的 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="569dd-144">The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569dd-145"><xref:System.ServiceModel.Channels.IRequestChannel> 的實作可確保回應訊息與要求訊息之間有相互關聯性。</span><span class="sxs-lookup"><span data-stu-id="569dd-145">Implementations of <xref:System.ServiceModel.Channels.IRequestChannel> ensure that the response message is correlated with the request message.</span></span>  
  
 <span data-ttu-id="569dd-146">一般來說，當 <xref:System.ServiceModel.Channels.IRequestChannel> 的實作收到與未處理的要求不相關的訊息時，會將它捨棄。</span><span class="sxs-lookup"><span data-stu-id="569dd-146">Generally, if an implementation of <xref:System.ServiceModel.Channels.IRequestChannel> receives a message that is not correlated to an outstanding request, it is dropped.</span></span>  
  
 <span data-ttu-id="569dd-147"><xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> 方法可以在多個執行緒上同時呼叫。</span><span class="sxs-lookup"><span data-stu-id="569dd-147">The <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> method can be called concurrently across multiple threads.</span></span>  
  
 <span data-ttu-id="569dd-148">將訊息傳遞給要求通道會造成該訊息遭到存取。</span><span class="sxs-lookup"><span data-stu-id="569dd-148">Passing the message into the request channel causes the message to be accessed.</span></span> <span data-ttu-id="569dd-149">當您呼叫 <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> 之後，便無法再檢查此訊息，或針對此訊息呼叫 <xref:System.ServiceModel.Channels.Message.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="569dd-149">After you call <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
 <span data-ttu-id="569dd-150">如果要求訊息大於要使用之繫結所允許的訊息大小上限，則會擲回 <xref:System.ServiceModel.QuotaExceededException>。</span><span class="sxs-lookup"><span data-stu-id="569dd-150">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="569dd-151">訊息大小上限是由 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> 屬性所設定。</span><span class="sxs-lookup"><span data-stu-id="569dd-151">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="569dd-152">預設值為 65536 個位元組。</span><span class="sxs-lookup"><span data-stu-id="569dd-152">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569dd-153">下列程式碼會示範如何實作這個方法：</span><span class="sxs-lookup"><span data-stu-id="569dd-153">The following code shows how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Request(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Request(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Request : System.ServiceModel.Channels.Message * TimeSpan -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.Request (message, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="569dd-154">要傳輸的要求 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="569dd-154">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span></span></param>
        <param name="timeout"><span data-ttu-id="569dd-155">指定必須收到回應之時間間隔的 <see cref="T:System.TimeSpan" /> </span><span class="sxs-lookup"><span data-stu-id="569dd-155">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which a response must be received.</span></span></param>
        <summary><span data-ttu-id="569dd-156">傳送訊息型要求，並在指定的時間間隔內傳回相互關聯的訊息型回應。</span><span class="sxs-lookup"><span data-stu-id="569dd-156">Sends a message-based request and returns the correlated message-based response within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="569dd-157">回應要求時所收到的 <see cref="T:System.ServiceModel.Channels.Message" />。</span><span class="sxs-lookup"><span data-stu-id="569dd-157">The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569dd-158"><xref:System.ServiceModel.Channels.IRequestChannel> 的實作可確保回應訊息與要求訊息之間有相互關聯性。</span><span class="sxs-lookup"><span data-stu-id="569dd-158">Implementations of <xref:System.ServiceModel.Channels.IRequestChannel> ensure that the response message is correlated with the request message.</span></span>  
  
 <span data-ttu-id="569dd-159">一般來說，當 <xref:System.ServiceModel.Channels.IRequestChannel> 的實作收到與未處理的要求不相關的訊息時，會將它捨棄。</span><span class="sxs-lookup"><span data-stu-id="569dd-159">Generally, if an implementation of <xref:System.ServiceModel.Channels.IRequestChannel> receives a message that is not correlated to an outstanding request, it is dropped.</span></span>  
  
 <span data-ttu-id="569dd-160"><xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> 方法可以在多個執行緒上同時呼叫。</span><span class="sxs-lookup"><span data-stu-id="569dd-160">The <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> method can be called concurrently across multiple threads.</span></span>  
  
 <span data-ttu-id="569dd-161">將訊息傳遞給要求通道會造成該訊息遭到存取。</span><span class="sxs-lookup"><span data-stu-id="569dd-161">Passing the message into the request channel causes the message to be accessed.</span></span> <span data-ttu-id="569dd-162">當您呼叫 <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> 之後，便無法再檢查此訊息，或針對此訊息呼叫 <xref:System.ServiceModel.Channels.Message.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="569dd-162">After you call <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
 <span data-ttu-id="569dd-163">如果要求訊息大於要使用之繫結所允許的訊息大小上限，則會擲回 <xref:System.ServiceModel.QuotaExceededException>。</span><span class="sxs-lookup"><span data-stu-id="569dd-163">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="569dd-164">訊息大小上限是由 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> 屬性所設定。</span><span class="sxs-lookup"><span data-stu-id="569dd-164">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="569dd-165">預設值為 65536 個位元組。</span><span class="sxs-lookup"><span data-stu-id="569dd-165">The default value is 65536 bytes.</span></span>  
  
 <span data-ttu-id="569dd-166">如果在呼叫此函式時傳遞 `timeout`，則會使用該值。</span><span class="sxs-lookup"><span data-stu-id="569dd-166">If a `timeout` is passed while calling the function then that value is used.</span></span> <span data-ttu-id="569dd-167">如果在繫結上設定 <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A>，則如果在呼叫此函式時未指定任何 `timeout`，便會使用繫結上的值。</span><span class="sxs-lookup"><span data-stu-id="569dd-167">If the <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> is set on the binding, then the value on the binding is used if no `timeout` is specified while calling the function.</span></span>  
  
 <span data-ttu-id="569dd-168">如果在繫結上或是呼叫此函式時，未指定任何逾時值，則會使用 <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A>。</span><span class="sxs-lookup"><span data-stu-id="569dd-168">The <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> is used if no timeout is specified on either the binding or while calling the function.</span></span> <span data-ttu-id="569dd-169">這個預設值為 1 分鐘。</span><span class="sxs-lookup"><span data-stu-id="569dd-169">This default value is 1 minute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569dd-170">下列程式碼會示範如何實作這個方法。</span><span class="sxs-lookup"><span data-stu-id="569dd-170">The following code shows how to implement this method.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="569dd-171">如果在作業完成之前超出了指定的 <see cref="T:System.TimeoutException" />，此作業應該擲回 <paramref name="timeout" />。</span><span class="sxs-lookup"><span data-stu-id="569dd-171">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before the operation is completed.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IRequestChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Via : Uri" Usage="System.ServiceModel.Channels.IRequestChannel.Via" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="569dd-172">取得此要求傳送的目標傳輸位址。</span><span class="sxs-lookup"><span data-stu-id="569dd-172">Gets the transport address to which the request is send.</span></span></summary>
        <value><span data-ttu-id="569dd-173">包含訊息傳送之目標傳輸位址的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="569dd-173">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="569dd-174">如果沒有指定 <xref:System.ServiceModel.EndpointAddress>，<xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> 會同時當做最終目的端和實體位址。</span><span class="sxs-lookup"><span data-stu-id="569dd-174">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="569dd-175">如果指定了 <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A>，這就是訊息傳送的實際實體目標位址，而且訊息必須透過這個位址，才能到達目的端。</span><span class="sxs-lookup"><span data-stu-id="569dd-175">If the <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="569dd-176">下列程式碼會示範如何實作這個屬性。</span><span class="sxs-lookup"><span data-stu-id="569dd-176">The following code shows how to implement this property.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>