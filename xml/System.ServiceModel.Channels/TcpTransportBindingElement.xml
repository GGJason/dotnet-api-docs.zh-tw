<Type Name="TcpTransportBindingElement" FullName="System.ServiceModel.Channels.TcpTransportBindingElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4ec85eed53afbd51eb01ad461e2154d6377e815b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36620981" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpTransportBindingElement : System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpTransportBindingElement extends System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.TcpTransportBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpTransportBindingElement&#xA;Inherits ConnectionOrientedTransportBindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpTransportBindingElement : System::ServiceModel::Channels::ConnectionOrientedTransportBindingElement" />
  <TypeSignature Language="F#" Value="type TcpTransportBindingElement = class&#xA;    inherit ConnectionOrientedTransportBindingElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ceb71-101">表示 TCP 傳輸的繫結元素。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ceb71-101">Represents the binding element for the TCP transport.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb71-102">這個傳輸會使用的 Uri"`net.tcp`://`hostname`:`port`/`path`"。</span><span class="sxs-lookup"><span data-stu-id="ceb71-102">This transport uses URIs of the form "`net.tcp`://`hostname`:`port`/`path`".</span></span> <span data-ttu-id="ceb71-103">其他 URI 元件是選擇性的。</span><span class="sxs-lookup"><span data-stu-id="ceb71-103">Other URI components are optional.</span></span>  
  
 <span data-ttu-id="ceb71-104"><xref:System.ServiceModel.Channels.TcpTransportBindingElement> 類別是一個起點，用來建立實作 TCP 傳輸通訊協定的自訂繫結。</span><span class="sxs-lookup"><span data-stu-id="ceb71-104">The <xref:System.ServiceModel.Channels.TcpTransportBindingElement> class is the starting point for creating a custom binding that implements the TCP transport protocol.</span></span> <span data-ttu-id="ceb71-105">這個傳輸已針對 WCF 通訊最佳化。</span><span class="sxs-lookup"><span data-stu-id="ceb71-105">This transport is optimized for WCF communication.</span></span>  
  
 <span data-ttu-id="ceb71-106">WCF 服務模型會使用這個類別建立實作的 factory 物件<xref:System.ServiceModel.Channels.IChannelFactory>和<xref:System.ServiceModel.Channels.IChannelListener>介面。</span><span class="sxs-lookup"><span data-stu-id="ceb71-106">The WCF service model uses this class to create factory objects that implement the <xref:System.ServiceModel.Channels.IChannelFactory> and <xref:System.ServiceModel.Channels.IChannelListener> interfaces.</span></span> <span data-ttu-id="ceb71-107">然後，這些處理站物件會建立並接受使用 TCP 通訊協定傳送 SOAP 訊息的通道。</span><span class="sxs-lookup"><span data-stu-id="ceb71-107">These factory objects, in turn, create and accept the channels that transmit SOAP messages using the TCP protocol.</span></span>  
  
 <span data-ttu-id="ceb71-108">您可以藉由設定這個類別的屬性來設定其所建立的處理站，例如：<xref:System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled%2A> 和 <xref:System.ServiceModel.Channels.TcpConnectionPoolSettings.LeaseTimeout%2A>。</span><span class="sxs-lookup"><span data-stu-id="ceb71-108">You configure the factories that this class creates by setting its properties, such as <xref:System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled%2A> and <xref:System.ServiceModel.Channels.TcpConnectionPoolSettings.LeaseTimeout%2A>.</span></span>  
  
 <span data-ttu-id="ceb71-109">您也能夠設定基底類別 <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement> 的屬性，例如：<xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize%2A>、<xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode%2A>，以及 <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="ceb71-109">You can also set properties on the base class <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement>, such as <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize%2A>, <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.TransferMode%2A>, and <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize%2A>.</span></span> <span data-ttu-id="ceb71-110">如需完整的屬性清單，請參閱 <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement>。</span><span class="sxs-lookup"><span data-stu-id="ceb71-110">For a complete list of properties, see <xref:System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement>.</span></span>  
  
 <span data-ttu-id="ceb71-111">最後，您可以設定基底類別 <xref:System.ServiceModel.Channels.TransportBindingElement> 的屬性，例如 <xref:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing%2A> 和 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="ceb71-111">Finally, you can set properties on the base class <xref:System.ServiceModel.Channels.TransportBindingElement>, such as <xref:System.ServiceModel.Channels.TransportBindingElement.ManualAddressing%2A> and <xref:System.ServiceModel.Channels.TransportBindingElement.MaxBufferPoolSize%2A>.</span></span> <span data-ttu-id="ceb71-112">如需完整的屬性清單，請參閱 <xref:System.ServiceModel.Channels.TransportBindingElement>。</span><span class="sxs-lookup"><span data-stu-id="ceb71-112">For a complete list of properties, see <xref:System.ServiceModel.Channels.TransportBindingElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb71-113">下列範例將示範如何使用這個類別。</span><span class="sxs-lookup"><span data-stu-id="ceb71-113">The following example shows how to use this class.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ceb71-114">初始化 <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-114">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpTransportBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpTransportBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ceb71-115">初始化 <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ceb71-116">下列範例將示範如何建立 <xref:System.ServiceModel.Channels.TcpTransportBindingElement> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="ceb71-116">The following example shows how to create a new instance of the <xref:System.ServiceModel.Channels.TcpTransportBindingElement> class.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TcpTransportBindingElement (System.ServiceModel.Channels.TcpTransportBindingElement elementToBeCloned);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.TcpTransportBindingElement elementToBeCloned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.#ctor(System.ServiceModel.Channels.TcpTransportBindingElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (elementToBeCloned As TcpTransportBindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TcpTransportBindingElement(System::ServiceModel::Channels::TcpTransportBindingElement ^ elementToBeCloned);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.TcpTransportBindingElement : System.ServiceModel.Channels.TcpTransportBindingElement -&gt; System.ServiceModel.Channels.TcpTransportBindingElement" Usage="new System.ServiceModel.Channels.TcpTransportBindingElement elementToBeCloned" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementToBeCloned" Type="System.ServiceModel.Channels.TcpTransportBindingElement" />
      </Parameters>
      <Docs>
        <param name="elementToBeCloned">
          <span data-ttu-id="ceb71-117">
            <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> 類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-117">An instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb71-118">初始化 <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.TcpTransportBindingElement" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb71-119">這個方法是一個用來複製繫結項目的複製建構函式，而且會公開用來讓衍生類別可以實作 <xref:System.ServiceModel.Channels.TcpTransportBindingElement.Clone%2A>。</span><span class="sxs-lookup"><span data-stu-id="ceb71-119">This method is a copy constructor used to clone the binding element, and is exposed so that derived classes can implement <xref:System.ServiceModel.Channels.TcpTransportBindingElement.Clone%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="tcpTransportBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="ceb71-120">通道處理站的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-120">Type of channel factory.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="ceb71-121">
            <see cref="T:System.ServiceModel.Channels.BindingContext" /> 成員，用來描述建立通道處理站時所需的繫結、行為、合約及其他資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-121">
              <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts, and other information required to create the channel factory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb71-122">建立可用來建立通道的通道處理站。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-122">Creates a channel factory that can be used to create a channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb71-123">傳回指定型別的通道處理站。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-123">Returns a channel factory of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb71-124">這個方法可用來根據 TCP 繫結項目的組態，建立傳送訊息的通道處理站。</span><span class="sxs-lookup"><span data-stu-id="ceb71-124">This method can be used to create a channel factory for sending messages based on the configuration of the TCP binding element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb71-125">下列範例將示範如何建立可用來建立通道的通道處理站。</span><span class="sxs-lookup"><span data-stu-id="ceb71-125">The following example shows how to create a channel factory that can be used to create a channel.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceb71-126">
            <paramref name="context" /> 不可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-126">
              <paramref name="context" /> cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ceb71-127">傳遞了無效的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-127">An invalid argument was passed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="tcpTransportBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="ceb71-128">通道接聽程式的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-128">Type of channel listener.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="ceb71-129">
            <see cref="T:System.ServiceModel.Channels.BindingContext" /> 成員，用來描述建立通道處理站時所需的繫結、行為、合約及其他資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-129">
              <see cref="T:System.ServiceModel.Channels.BindingContext" /> members that describe bindings, behaviors, contracts, and other information required to create the channel factory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb71-130">建立指定型別的通道接聽程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-130">Creates a channel listener of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb71-131">傳回特定型別的通道接聽項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-131">Returns a channel listener of the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb71-132">這個方法可用來根據 TCP 繫結項目的組態，建立接收訊息的通道接聽項。</span><span class="sxs-lookup"><span data-stu-id="ceb71-132">This method can be used to create a channel listener for receiving messages based on the configuration of the TCP binding element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb71-133">下列範例將示範如何傳回指定型別的通道接聽程式。</span><span class="sxs-lookup"><span data-stu-id="ceb71-133">The following example shows how to return a channel listener of the specified type.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceb71-134">
            <paramref name="context" /> 不可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-134">
              <paramref name="context" /> cannot be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ceb71-135">傳遞了無效的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-135">An invalid argument was passed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="tcpTransportBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ceb71-136">建立目前繫結項目的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-136">Creates a copy of the current binding element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb71-137">傳回目前繫結項目的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-137">Returns a copy of the current binding element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ceb71-138">下列範例將示範如何建立目前繫結項目的複本。</span><span class="sxs-lookup"><span data-stu-id="ceb71-138">The following example shows how to create a copy of the current binding element.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionPoolSettings">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.TcpConnectionPoolSettings ConnectionPoolSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.TcpConnectionPoolSettings ConnectionPoolSettings" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectionPoolSettings As TcpConnectionPoolSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::TcpConnectionPoolSettings ^ ConnectionPoolSettings { System::ServiceModel::Channels::TcpConnectionPoolSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionPoolSettings : System.ServiceModel.Channels.TcpConnectionPoolSettings" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.ConnectionPoolSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.TcpConnectionPoolSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ceb71-139">取得連線集區設定的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-139">Gets a collection of connection pool settings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ceb71-140">
            <see cref="T:System.ServiceModel.Channels.TcpConnectionPoolSettings" /> 物件，其中包含與連線集區相關的各種屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-140">A <see cref="T:System.ServiceModel.Channels.TcpConnectionPoolSettings" /> object that contains various properties related to connection pooling.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ceb71-141">下列範例將示範如何取得連線集區設定的集合。</span><span class="sxs-lookup"><span data-stu-id="ceb71-141">The following example shows how to get a collection of connection pool settings.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.ExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ ExtendedProtectionPolicy { System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ get(); void set(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionPolicy : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy with get, set" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.ExtendedProtectionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ceb71-142">取得或設定目前延伸保護原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-142">Gets or sets the current extended protection policy.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ceb71-143">延伸保護原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-143">The extended protection policy.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb71-144">延伸保護原則是伺服器用來驗證連入用戶端連線的物件。</span><span class="sxs-lookup"><span data-stu-id="ceb71-144">An extended protection policy is an object used by the server to validate incoming client connections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="tcpTransportBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ceb71-145">要取得的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-145">The object to get.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="ceb71-146">
            <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-146">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb71-147">從 <see cref="T:System.ServiceModel.Channels.BindingContext" />中取得指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-147">Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb71-148">來自 <see cref="T:System.ServiceModel.Channels.BindingContext" /><see langword="null" />的特定物件，如果找不到物件，則為 。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-148">The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />, or <see langword="null" /> if the object is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb71-149">這個方法會從基底類別或其中一個該類別的祖系取得指定的物件。</span><span class="sxs-lookup"><span data-stu-id="ceb71-149">This method gets the specified object from the base class, or from one of that class's ancestors.</span></span> <span data-ttu-id="ceb71-150">傳回的物件通常是屬性的集合，例如實作 <xref:System.ServiceModel.Channels.ISecurityCapabilities> 的物件。</span><span class="sxs-lookup"><span data-stu-id="ceb71-150">The object returned is usually a collection of properties, for example, an object that implements <xref:System.ServiceModel.Channels.ISecurityCapabilities>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb71-151">下列範例將示範如何從 <xref:System.ServiceModel.Channels.BindingContext>取得指定的物件。</span><span class="sxs-lookup"><span data-stu-id="ceb71-151">The following example shows how to get a specified object from the <xref:System.ServiceModel.Channels.BindingContext>.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListenBacklog">
      <MemberSignature Language="C#" Value="public int ListenBacklog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ListenBacklog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog" />
      <MemberSignature Language="VB.NET" Value="Public Property ListenBacklog As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ListenBacklog { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ListenBacklog : int with get, set" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ceb71-152">取得或設定可以擱置之佇列連線要求的最大數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-152">Gets or sets the maximum number of queued connection requests that can be pending.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ceb71-153">傳回可以擱置之佇列連線要求的最大數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-153">Returns the maximum number of queued connection requests that can be pending.</span>
          </span>
          <span data-ttu-id="ceb71-154">預設值為 10。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-154">The default is 10.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb71-155"><xref:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog%2A> 是一個通訊端層級的屬性，用來說明要排入佇列之「暫停接受」要求的數目。</span><span class="sxs-lookup"><span data-stu-id="ceb71-155"><xref:System.ServiceModel.Channels.TcpTransportBindingElement.ListenBacklog%2A> is a socket-level property that describes the number of "pending accept" requests to be queued.</span></span> <span data-ttu-id="ceb71-156">確定並行連線的最大數目未超過基礎通訊端佇列。</span><span class="sxs-lookup"><span data-stu-id="ceb71-156">Ensure that the underlying socket queue is not exceeded by the maximum number of concurrent connections.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb71-157">下列範例將示範如何取得 ListenBacklog 值。</span><span class="sxs-lookup"><span data-stu-id="ceb71-157">The following example shows how to get the ListenBacklog value.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="ceb71-158">這個值不能小於 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-158">The value cannot be less than one.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PortSharingEnabled">
      <MemberSignature Language="C#" Value="public bool PortSharingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PortSharingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PortSharingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PortSharingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PortSharingEnabled : bool with get, set" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.PortSharingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ceb71-159">取得或設定值，指出是否為這個連線啟用 TCP 連接埠共用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-159">Gets or sets a value that indicates whether TCP port sharing is enabled for this connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ceb71-160">如果要啟用 TCP 連接埠共用則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-160">
              <see langword="true" /> if TCP port sharing is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ceb71-161">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-161">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb71-162">使用這個設定必須將啟動類型 改為手動或自動啟用 WCF TCP Port Sharing Service。</span><span class="sxs-lookup"><span data-stu-id="ceb71-162">Using this setting requires enabling the WCF TCP Port Sharing Service by changing its Startup Type to Manual or Automatic.</span></span>  
  
 <span data-ttu-id="ceb71-163">如需 TCP 接聽程式，以及如何啟動它，請參閱[Net.TCP 連接埠共用](~/docs/framework/wcf/feature-details/net-tcp-port-sharing.md)。</span><span class="sxs-lookup"><span data-stu-id="ceb71-163">For information about the TCP Listener and how to start it, see [Net.TCP Port Sharing](~/docs/framework/wcf/feature-details/net-tcp-port-sharing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb71-164">下列範例將示範如何取得指出是否啟用 TCP 連接埠共用的值。</span><span class="sxs-lookup"><span data-stu-id="ceb71-164">The following example shows how to get a value that indicates whether TCP port sharing is enabled.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scheme : string" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.Scheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.NetTcp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ceb71-165">傳回用於傳輸的 URI 配置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-165">Returns the URI scheme for the transport.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ceb71-166">傳回用於傳輸的 URI 配置，即 "net.tcp"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-166">Returns the URI scheme for the transport, which is "net.tcp".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb71-167">提供這個屬性的目的是要針對基底位址驗證繫結。</span><span class="sxs-lookup"><span data-stu-id="ceb71-167">The property is provided for validating bindings against base addresses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb71-168">下列範例將示範如何取得用於傳輸的 URI 配置。</span><span class="sxs-lookup"><span data-stu-id="ceb71-168">The following example shows how to get the URI scheme for the transport.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeExtendedProtectionPolicy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeExtendedProtectionPolicy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeExtendedProtectionPolicy () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeExtendedProtectionPolicy();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeExtendedProtectionPolicy : unit -&gt; bool" Usage="tcpTransportBindingElement.ShouldSerializeExtendedProtectionPolicy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ceb71-169">傳回延伸保護原則不可進行 Xaml 序列化的表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-169">Returns an indication that the extended protection policy is not XAML serializable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb71-170">傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-170">Returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb71-171">延伸保護原則是伺服器用來驗證連入用戶端連線的物件。</span><span class="sxs-lookup"><span data-stu-id="ceb71-171">An extended protection policy is an object used by the server to validate incoming client connections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeListenBacklog">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeListenBacklog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeListenBacklog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.TcpTransportBindingElement.ShouldSerializeListenBacklog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeListenBacklog () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeListenBacklog();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeListenBacklog : unit -&gt; bool" Usage="tcpTransportBindingElement.ShouldSerializeListenBacklog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ceb71-172">指出 TCP 傳輸繫結項目是否應該序列化接聽待處理項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-172">Indicates whether the TCP transport binding element should serialize listen backlog.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb71-173">如果 TCP 傳輸繫結項目應該序列化接聽待處理項目，則為 <see langword="True" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-173">
              <see langword="True" /> if the TCP transport binding element should serialize listen backlog; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TeredoEnabled">
      <MemberSignature Language="C#" Value="public bool TeredoEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TeredoEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.TcpTransportBindingElement.TeredoEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property TeredoEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TeredoEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TeredoEnabled : bool with get, set" Usage="System.ServiceModel.Channels.TcpTransportBindingElement.TeredoEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ceb71-174">取得或設定布林值，這個值會指定是否啟用 Teredo (對防火牆後的用戶端進行定址的技術)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-174">Gets or sets a Boolean that specifies whether Teredo (a technology for addressing clients that are behind firewalls) is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ceb71-175">如果啟用 Teredo，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-175">
              <see langword="true" /> if Teredo is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ceb71-176">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb71-176">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb71-177">這個屬性會針對基礎 TCP 通訊端啟用 Teredo。</span><span class="sxs-lookup"><span data-stu-id="ceb71-177">This property enables Teredo for the underlying TCP socket.</span></span> <span data-ttu-id="ceb71-178">如需詳細資訊，請參閱[Teredo 概觀](http://go.microsoft.com/fwlink/?LinkId=96649)。</span><span class="sxs-lookup"><span data-stu-id="ceb71-178">For more information, see [Teredo Overview](http://go.microsoft.com/fwlink/?LinkId=96649).</span></span>  
  
 <span data-ttu-id="ceb71-179">這個屬性只適用於 [!INCLUDE[wxpsp2](~/includes/wxpsp2-md.md)] 和 [!INCLUDE[ws2003](~/includes/ws2003-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="ceb71-179">This property is applicable only on [!INCLUDE[wxpsp2](~/includes/wxpsp2-md.md)] and [!INCLUDE[ws2003](~/includes/ws2003-md.md)].</span></span> [!INCLUDE[wv](~/includes/wv-md.md)]<span data-ttu-id="ceb71-180"> 具有整部機器的 Teredo 組態選項，所以在執行 [!INCLUDE[wv](~/includes/wv-md.md)] 時，會忽略這個屬性。</span><span class="sxs-lookup"><span data-stu-id="ceb71-180"> has a machine-wide configuration option for Teredo, so when running [!INCLUDE[wv](~/includes/wv-md.md)], this property is ignored.</span></span> <span data-ttu-id="ceb71-181">Teredo 需要用戶端和服務電腦都已安裝 Microsoft IPv6 堆疊並正確設定，才能使用 Teredo。</span><span class="sxs-lookup"><span data-stu-id="ceb71-181">Teredo requires that the client and service machines both have the Microsoft IPv6 stack installed and correctly configured for Teredo usage.</span></span> <span data-ttu-id="ceb71-182">如需設定 Teredo 的詳細資訊，請參閱[Teredo 概觀](http://go.microsoft.com/fwlink/?LinkId=96649)。</span><span class="sxs-lookup"><span data-stu-id="ceb71-182">For more information about configuring Teredo, see [Teredo Overview](http://go.microsoft.com/fwlink/?LinkId=96649).</span></span> <span data-ttu-id="ceb71-183">如需 Microsoft IPv6 堆疊安裝的詳細資訊，請參閱[Windows Server 2003 技術中心](http://go.microsoft.com/fwlink/?LinkId=96650)。</span><span class="sxs-lookup"><span data-stu-id="ceb71-183">For more information about Microsoft IPv6 stack installation, see [Windows Server 2003 Technology Centers](http://go.microsoft.com/fwlink/?LinkId=96650).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb71-184">下列範例將示範如何為基礎 TCP 通訊端啟用 Teredo。</span><span class="sxs-lookup"><span data-stu-id="ceb71-184">The following example shows how to enable Teredo for the underlying TCP socket.</span></span>  
  
 [!code-csharp[S_UETcpTransportBindingElement#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_uetcptransportbindingelement/cs/program.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>