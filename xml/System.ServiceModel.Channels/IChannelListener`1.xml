<Type Name="IChannelListener&lt;TChannel&gt;" FullName="System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3c9c93e7259c88ead4cc012bcaa395a3cc6edd6f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37621555" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IChannelListener&lt;TChannel&gt; : System.ServiceModel.Channels.IChannelListener where TChannel : class, IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelListener`1&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt; implements class System.ServiceModel.Channels.IChannelListener, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannelListener`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelListener(Of TChannel)&#xA;Implements IChannelListener" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TChannel&gt;&#xA; where TChannel : class, IChannelpublic interface class IChannelListener : System::ServiceModel::Channels::IChannelListener" />
  <TypeSignature Language="F#" Value="type IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; IChannel)&gt; = interface&#xA;    interface IChannelListener&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TChannel">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
        <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannelListener</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TChannel">
      <span data-ttu-id="3175b-101">通道接聽程式接受的通道型別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3175b-101">The type of channel that the channel listener accepts.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="3175b-102">定義通道接聽程式必須實作以接受特定型別之通道的介面。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3175b-102">Defines the interface that must be implemented by channel listeners to accept type-specific channels.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3175b-103">實作 <xref:System.ServiceModel.Channels.IChannelListener> 或 <xref:System.ServiceModel.Channels.IChannelListener%601> 介面的接聽程式處理站會提供用來接受用戶端所產生之通道的機制，透過此機制可啟始和啟用與服務之間的通訊。</span><span class="sxs-lookup"><span data-stu-id="3175b-103">Listener factories that implement the <xref:System.ServiceModel.Channels.IChannelListener> or <xref:System.ServiceModel.Channels.IChannelListener%601> interfaces provide services with the mechanisms used to accept the channels produced by clients that initiate and enable communication with a service.</span></span>  
  
 <span data-ttu-id="3175b-104">實作 <xref:System.ServiceModel.Channels.IChannelListener%601> 合約可讓使用者接受特定型別的多個通道，而不需要每次都指定通道型別。</span><span class="sxs-lookup"><span data-stu-id="3175b-104">Implementing the <xref:System.ServiceModel.Channels.IChannelListener%601> contract allows users to accept multiple channels of a given type without having to specify the channel type each time.</span></span> <span data-ttu-id="3175b-105">換句話說，將通道型別定義為 <xref:System.ServiceModel.Channels.IChannelListener%601> 介面的泛型參數也就表示，不需要將此型別傳遞到 <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%2A> 方法中。</span><span class="sxs-lookup"><span data-stu-id="3175b-105">In other words, defining the channel type as a generic parameter for the <xref:System.ServiceModel.Channels.IChannelListener%601> interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%2A> methods.</span></span> <span data-ttu-id="3175b-106">如果使用者想要接受不同的通道型別，他們可以針對每一個所需的通道型別建立其他通道接聽程式。</span><span class="sxs-lookup"><span data-stu-id="3175b-106">If users want to accept different channel types, they can create additional channel listeners for each type of channel required.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AcceptChannel">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3175b-107">接受指定之型別的通道，以便與用戶端進行通訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-107">Accepts a channel of a specified type for communication with a client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3175b-108">建議使用具有明確逾時的 <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> 多載。</span><span class="sxs-lookup"><span data-stu-id="3175b-108">It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> overload with the explicit timeout be used.</span></span> <span data-ttu-id="3175b-109">針對該方法指定的 `timeout` 會覆寫由系統針對服務所設定之所有預設逾時。</span><span class="sxs-lookup"><span data-stu-id="3175b-109">The `timeout` specified for that method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptChannel">
      <MemberSignature Language="C#" Value="public TChannel AcceptChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel AcceptChannel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptChannel () As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel AcceptChannel();" />
      <MemberSignature Language="F#" Value="abstract member AcceptChannel : unit -&gt; 'Channel" Usage="iChannelListener.AcceptChannel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3175b-110">接受指定之型別的通道，以便與用戶端進行通訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-110">Accepts a channel of a specified type for communication with a client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3175b-111">接聽程式接受之 <paramref name="TChannel" /> 型別的通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-111">A channel of type <paramref name="TChannel" /> accepted by the listener.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3175b-112">建議使用具有明確逾時的 <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> 多載。</span><span class="sxs-lookup"><span data-stu-id="3175b-112">It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel%28System.TimeSpan%29> overload with the explicit timeout be used.</span></span> <span data-ttu-id="3175b-113">針對該方法指定的 `timeout` 會覆寫由系統針對服務所設定之所有預設逾時。</span><span class="sxs-lookup"><span data-stu-id="3175b-113">The `timeout` specified for that method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChannel">
      <MemberSignature Language="C#" Value="public TChannel AcceptChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel AcceptChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.AcceptChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptChannel (timeout As TimeSpan) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel AcceptChannel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member AcceptChannel : TimeSpan -&gt; 'Channel" Usage="iChannelListener.AcceptChannel timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="3175b-114">指定在逾時前必須等候通道作業完成之時間的 <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-114">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3175b-115">接受指定之型別的通道，以便在指定的時間間隔內與用戶端進行通訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-115">Accepts a channel of a specified type for communication with a client within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3175b-116">接聽程式接受之 <paramref name="TChannel" /> 型別的通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-116">A channel of type <paramref name="TChannel" /> accepted by the listener.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3175b-117">建議使用具有明確逾時的這個多載，而不是 <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel>。</span><span class="sxs-lookup"><span data-stu-id="3175b-117">It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.AcceptChannel>.</span></span> <span data-ttu-id="3175b-118">針對這個方法指定的 `timeout` 會覆寫由系統針對服務所設定之所有預設逾時。</span><span class="sxs-lookup"><span data-stu-id="3175b-118">The `timeout` specified for this method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAcceptChannel">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3175b-119">開始接受通道的非同步作業，此作業必須在指定或預設的時間間隔內完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-119">Begins an asynchronous operation to accept a channel within a specified or default interval of time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3175b-120">建議使用具有明確逾時的 <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%2A> 多載。</span><span class="sxs-lookup"><span data-stu-id="3175b-120">It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%2A> overload with the explicit timeout be used.</span></span> <span data-ttu-id="3175b-121">針對該方法指定的 `timeout` 會覆寫由系統針對服務所設定之所有預設逾時。</span><span class="sxs-lookup"><span data-stu-id="3175b-121">The `timeout` specified for that method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAcceptChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptChannel (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAcceptChannel(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptChannel (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptChannel(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAcceptChannel : AsyncCallback * obj -&gt; IAsyncResult" Usage="iChannelListener.BeginAcceptChannel (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="3175b-122">
            <see cref="T:System.AsyncCallback" /> 委派，會在非同步接受通道作業完成時收到通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-122">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3175b-123">應用程式所指定的物件，其中包含與接受通道之非同步作業相關聯的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-123">An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3175b-124">開始接受通道的非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-124">Begins an asynchronous operation to accept a channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3175b-125">參考非同步接受通道作業的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-125">The <see cref="T:System.IAsyncResult" /> that references the asynchronous acceptance of a channel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3175b-126">建議使用具有明確逾時的 <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> 多載。</span><span class="sxs-lookup"><span data-stu-id="3175b-126">It is recommended that the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> overload with the explicit timeout be used.</span></span> <span data-ttu-id="3175b-127">針對該方法指定的 `timeout` 會覆寫由系統針對服務所設定之所有預設逾時。</span><span class="sxs-lookup"><span data-stu-id="3175b-127">The `timeout` specified for that method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAcceptChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginAcceptChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iChannelListener.BeginAcceptChannel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="3175b-128">指定在逾時前必須等候通道作業完成之時間的 <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-128">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3175b-129">
            <see cref="T:System.AsyncCallback" /> 委派，會在非同步接受通道作業完成時收到通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-129">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept for a channel operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3175b-130">應用程式所指定的物件，其中包含與接受通道之非同步作業相關聯的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-130">An object, specified by the application, that contains state information associated with the asynchronous accept for a channel operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3175b-131">開始接受通道的非同步作業，此作業必須在指定的時間間隔內完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-131">Begins an asynchronous operation to accept a channel within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3175b-132">參考非同步接受通道作業的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-132">The <see cref="T:System.IAsyncResult" /> that references the asynchronous acceptance of a channel operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3175b-133">建議使用具有明確逾時的這個多載，而不是 <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>。</span><span class="sxs-lookup"><span data-stu-id="3175b-133">It is recommended that this overload with an explicit timeout be used rather than the <xref:System.ServiceModel.Channels.IChannelListener%601.BeginAcceptChannel%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29>.</span></span> <span data-ttu-id="3175b-134">針對這個方法指定的 `timeout` 會覆寫由系統針對服務所設定之所有預設逾時。</span><span class="sxs-lookup"><span data-stu-id="3175b-134">The `timeout` specified for this method overrides any default timeouts set by the system for the service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptChannel">
      <MemberSignature Language="C#" Value="public TChannel EndAcceptChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel EndAcceptChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener`1.EndAcceptChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptChannel (result As IAsyncResult) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel EndAcceptChannel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndAcceptChannel : IAsyncResult -&gt; 'Channel" Usage="iChannelListener.EndAcceptChannel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="3175b-135">由 <see cref="T:System.IAsyncResult" /> 方法的呼叫所傳回的 <see cref="Overload:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-135">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IChannelListener`1.BeginAcceptChannel" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3175b-136">完成接受通道的非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-136">Completes an asynchronous operation to accept a channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3175b-137">接聽程式接受之 <paramref name="TChannel" /> 型別的通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3175b-137">A channel of type <paramref name="TChannel" /> accepted by the listener.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>