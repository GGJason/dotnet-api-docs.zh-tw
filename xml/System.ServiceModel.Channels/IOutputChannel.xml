<Type Name="IOutputChannel" FullName="System.ServiceModel.Channels.IOutputChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="145a200e6aa8978aebd4da6d64bb1d67c5ec9a7d" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51318226" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IOutputChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOutputChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IOutputChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOutputChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOutputChannel : System::ServiceModel::Channels::IChannel" />
  <TypeSignature Language="F#" Value="type IOutputChannel = interface&#xA;    interface IChannel&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="eced3-101">定義通道必須要實作才能傳送訊息的介面。</span>
      <span class="sxs-lookup">
        <span data-stu-id="eced3-101">Defines the interface that a channel must implement to send a message.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-interface-note](~/includes/untrusted-data-interface-note.md)]

 <span data-ttu-id="eced3-102"><xref:System.ServiceModel.Channels.IOutputChannel> 介面會定義 <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IOutputChannel%23Send%2A> 作業的同步和非同步 Variant。</span><span class="sxs-lookup"><span data-stu-id="eced3-102">The <xref:System.ServiceModel.Channels.IOutputChannel> interface defines synchronous and asynchronous variants of the <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IOutputChannel%23Send%2A> operation.</span></span> <span data-ttu-id="eced3-103">它會針對通道上送出之訊息的目的端提供 <xref:System.ServiceModel.Channels.IOutputChannel.RemoteAddress%2A>。</span><span class="sxs-lookup"><span data-stu-id="eced3-103">It provides a <xref:System.ServiceModel.Channels.IOutputChannel.RemoteAddress%2A> for the destination of the messages sent out on the channel.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eced3-104">開始傳送訊息的非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-104">Begins an asynchronous operation to send a message.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginSend(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginSend : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="iOutputChannel.BeginSend (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="eced3-105">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-105">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="eced3-106">
            <see cref="T:System.AsyncCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-106">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="eced3-107">應用程式指定的物件，其中包含與非同步傳送作業有關的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-107">An object, specified by the application, that contains state information associated with the asynchronous send operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eced3-108">開始非同步作業，將訊息傳送到輸出通道的目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-108">Begins an asynchronous operation to transmit a message to the destination of the output channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eced3-109">參考非同步訊息傳輸的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-109">The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eced3-110">在輸出通道上送出之訊息的目的端會在通道建立時指定。</span><span class="sxs-lookup"><span data-stu-id="eced3-110">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="eced3-111"><xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> 方法不保證會將訊息傳送到遠端端點。</span><span class="sxs-lookup"><span data-stu-id="eced3-111">The <xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="eced3-112">如果需要傳遞保證，請使用 <xref:System.ServiceModel.Channels.IOutputSessionChannel>。</span><span class="sxs-lookup"><span data-stu-id="eced3-112">If delivery guarantees are required, use the <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="eced3-113">如果傳送的訊息大於所使用之繫結允許的訊息大小上限，則會擲回 <xref:System.ServiceModel.QuotaExceededException>。</span><span class="sxs-lookup"><span data-stu-id="eced3-113">If the message sent is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="eced3-114">訊息大小上限是由 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> 屬性所設定。</span><span class="sxs-lookup"><span data-stu-id="eced3-114">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="eced3-115">預設值為 65536 個位元組。</span><span class="sxs-lookup"><span data-stu-id="eced3-115">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eced3-116">下列程式碼說明如何實作這個方法：</span><span class="sxs-lookup"><span data-stu-id="eced3-116">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginSend(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.BeginSend(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginSend : System.ServiceModel.Channels.Message * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iOutputChannel.BeginSend (message, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="eced3-117">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-117">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="eced3-118">
            <see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成傳送作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-118">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="eced3-119">
            <see cref="T:System.AsyncCallback" /> 委派，可接收非同步作業傳送完成的通知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-119">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation send completion.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="eced3-120">應用程式指定的物件，其中包含與非同步傳送作業有關的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-120">An object, specified by the application, that contains state information associated with the asynchronous send operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eced3-121">開始非同步作業，於指定的時間間隔內將訊息傳送給輸出通道的目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-121">Begins an asynchronous operation to transmit a message to the destination of the output channel within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eced3-122">參考非同步傳送作業的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-122">The <see cref="T:System.IAsyncResult" /> that references the asynchronous send operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eced3-123">在輸出通道上送出之訊息的目的端會在通道建立時指定。</span><span class="sxs-lookup"><span data-stu-id="eced3-123">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="eced3-124"><xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> 方法不保證會將訊息傳送到遠端端點。</span><span class="sxs-lookup"><span data-stu-id="eced3-124">The <xref:System.ServiceModel.Channels.IOutputChannel.BeginSend%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="eced3-125">如果需要傳遞保證，請使用 <xref:System.ServiceModel.Channels.IOutputSessionChannel>。</span><span class="sxs-lookup"><span data-stu-id="eced3-125">If delivery guarantees are required, use <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="eced3-126">如果傳送的訊息大於所使用之繫結允許的訊息大小上限，則會擲回 <xref:System.ServiceModel.QuotaExceededException>。</span><span class="sxs-lookup"><span data-stu-id="eced3-126">If the message sent is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="eced3-127">訊息大小上限是由 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> 屬性所設定。</span><span class="sxs-lookup"><span data-stu-id="eced3-127">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="eced3-128">預設值為 65536 個位元組。</span><span class="sxs-lookup"><span data-stu-id="eced3-128">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eced3-129">下列程式碼說明如何實作這個方法：</span><span class="sxs-lookup"><span data-stu-id="eced3-129">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="eced3-130">如果超出了指定的 <see cref="T:System.TimeoutException" />，則此作業應該擲回 <paramref name="timeout" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="eced3-130">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public void EndSend (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSend(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSend (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSend(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndSend : IAsyncResult -&gt; unit" Usage="iOutputChannel.EndSend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="eced3-131">由 <see cref="T:System.IAsyncResult" /> 方法的呼叫所傳回的 <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-131">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IOutputChannel.BeginSend" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eced3-132">完成非同步作業，將訊息傳送到輸出通道的目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-132">Completes an asynchronous operation to transmit a message to the destination of the output channel.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eced3-133">如果傳送的訊息大於所使用之繫結允許的訊息大小上限，則會擲回 <xref:System.ServiceModel.QuotaExceededException>。</span><span class="sxs-lookup"><span data-stu-id="eced3-133">If the message sent is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="eced3-134">訊息大小上限是由 <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> 屬性所設定。</span><span class="sxs-lookup"><span data-stu-id="eced3-134">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="eced3-135">預設值為 65536 個位元組。</span><span class="sxs-lookup"><span data-stu-id="eced3-135">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eced3-136">下列程式碼說明如何實作這個方法：</span><span class="sxs-lookup"><span data-stu-id="eced3-136">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IOutputChannel.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ RemoteAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.IOutputChannel.RemoteAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eced3-137">取得輸出通道上訊息傳送之目的服務的目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-137">Gets the destination of the service to which messages are sent out on the output channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eced3-138">輸出通道傳送訊息之目的服務的 <see cref="T:System.ServiceModel.EndpointAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-138">The <see cref="T:System.ServiceModel.EndpointAddress" /> of the service to which the output channel sends messages.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eced3-139">如果沒有指定 <xref:System.ServiceModel.EndpointAddress>，<xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> 會同時當做最終目的端和實體位址。</span><span class="sxs-lookup"><span data-stu-id="eced3-139">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="eced3-140">如果指定了 <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A>，這就是訊息傳送的實際實體目標位址，而且訊息必須透過這個位址，才能到達目的端。</span><span class="sxs-lookup"><span data-stu-id="eced3-140">If the <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eced3-141">下列程式碼說明如何實作這個屬性：</span><span class="sxs-lookup"><span data-stu-id="eced3-141">The following code illustrates how to implement this property:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eced3-142">在目前的輸出通道上傳送訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-142">Sends a message on the current output channel.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Send : System.ServiceModel.Channels.Message -&gt; unit" Usage="iOutputChannel.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="eced3-143">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-143">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eced3-144">將訊息傳送到輸出通道的目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-144">Transmits a message to the destination of the output channel.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eced3-145">在輸出通道上送出之訊息的目的端會在通道建立時指定。</span><span class="sxs-lookup"><span data-stu-id="eced3-145">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="eced3-146"><xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> 方法不保證會將訊息傳送到遠端端點。</span><span class="sxs-lookup"><span data-stu-id="eced3-146">The <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="eced3-147"><xref:System.ServiceModel.Channels.IOutputChannel> 的實作 (Implementation) 能夠以無訊息模式針對各種原因卸除訊息。</span><span class="sxs-lookup"><span data-stu-id="eced3-147">An implementation of <xref:System.ServiceModel.Channels.IOutputChannel> can silently drop messages for a variety of reasons.</span></span> <span data-ttu-id="eced3-148">例如，可能沒有其他緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="eced3-148">There may be no more buffer room, for example.</span></span> <span data-ttu-id="eced3-149">如果需要傳遞保證，請使用 <xref:System.ServiceModel.Channels.IOutputSessionChannel>。</span><span class="sxs-lookup"><span data-stu-id="eced3-149">If delivery guarantees are required, use <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="eced3-150">將訊息傳遞給輸出通道會造成該訊息的取用。</span><span class="sxs-lookup"><span data-stu-id="eced3-150">Passing the message into the output channel causes the message to be consumed.</span></span> <span data-ttu-id="eced3-151">當您呼叫 <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> 之後，便無法再檢查此訊息，或針對此訊息呼叫 <xref:System.ServiceModel.Channels.Message.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="eced3-151">After you call <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eced3-152">下列程式碼說明如何實作這個方法：</span><span class="sxs-lookup"><span data-stu-id="eced3-152">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Send(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IOutputChannel.Send(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Send : System.ServiceModel.Channels.Message * TimeSpan -&gt; unit" Usage="iOutputChannel.Send (message, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="eced3-153">正在輸出通道上傳送的 <see cref="T:System.ServiceModel.Channels.Message" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-153">The <see cref="T:System.ServiceModel.Channels.Message" /> being sent on the output channel.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="eced3-154">
            <see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成傳送作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-154">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eced3-155">於指定的時間間隔內在目前的輸出通道上傳送訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-155">Sends a message on the current output channel within a specified interval of time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eced3-156">在輸出通道上送出之訊息的目的端會在通道建立時指定。</span><span class="sxs-lookup"><span data-stu-id="eced3-156">The destination for messages sent out on an output channel is specified at channel creation time.</span></span>  
  
 <span data-ttu-id="eced3-157"><xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> 方法不保證會將訊息傳送到遠端端點。</span><span class="sxs-lookup"><span data-stu-id="eced3-157">The <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> method does not guarantee the delivery of message to the remote endpoint.</span></span> <span data-ttu-id="eced3-158"><xref:System.ServiceModel.Channels.IOutputChannel> 的實作 (Implementation) 能夠以無訊息模式針對各種原因卸除訊息。</span><span class="sxs-lookup"><span data-stu-id="eced3-158">An implementation of <xref:System.ServiceModel.Channels.IOutputChannel> can silently drop messages for a variety of reasons.</span></span> <span data-ttu-id="eced3-159">例如，可能沒有其他緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="eced3-159">There may be no more buffer room, for example.</span></span> <span data-ttu-id="eced3-160">如果需要傳遞保證，請使用 <xref:System.ServiceModel.Channels.IOutputSessionChannel>。</span><span class="sxs-lookup"><span data-stu-id="eced3-160">If delivery guarantees are required, use <xref:System.ServiceModel.Channels.IOutputSessionChannel>.</span></span>  
  
 <span data-ttu-id="eced3-161">將訊息傳遞給輸出通道會造成該訊息的取用。</span><span class="sxs-lookup"><span data-stu-id="eced3-161">Passing the message into the output channel causes the message to be consumed.</span></span> <span data-ttu-id="eced3-162">當您呼叫 <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A> 之後，便無法再檢查此訊息，或針對此訊息呼叫 <xref:System.ServiceModel.Channels.Message.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="eced3-162">After you call <xref:System.ServiceModel.Channels.IOutputChannel.Send%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eced3-163">下列程式碼說明如何實作這個方法：</span><span class="sxs-lookup"><span data-stu-id="eced3-163">The following code illustrates how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="eced3-164">如果超出了指定的 <see cref="T:System.TimeoutException" />，則此作業應該擲回 <paramref name="timeout" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="eced3-164">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IOutputChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Via : Uri" Usage="System.ServiceModel.Channels.IOutputChannel.Via" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eced3-165">取得包含輸出通道上訊息之目標傳輸位址的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-165">Gets the URI that contains the transport address to which messages are sent on the output channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eced3-166">包含在輸出通道上傳送訊息之目標傳輸位址的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eced3-166">The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the output channel.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eced3-167">如果沒有指定 <xref:System.ServiceModel.EndpointAddress>，<xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> 會同時當做最終目的端和實體位址。</span><span class="sxs-lookup"><span data-stu-id="eced3-167">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="eced3-168">如果指定了 <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A>，這就是訊息傳送的實際實體目標位址，而且訊息必須透過這個位址，才能到達目的端。</span><span class="sxs-lookup"><span data-stu-id="eced3-168">If the <xref:System.ServiceModel.Channels.IOutputChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eced3-169">下列程式碼說明如何實作這個屬性：</span><span class="sxs-lookup"><span data-stu-id="eced3-169">The following code illustrates how to implement this property:</span></span>  
  
 [!code-csharp[S_UE_MessageInterceptor#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_messageinterceptor/cs/interceptingchannellistener.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>