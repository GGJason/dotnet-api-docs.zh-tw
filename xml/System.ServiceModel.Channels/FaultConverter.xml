<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FaultConverter.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51084dafd1132de2ff31f604e3bd086cfa2adfe93.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1084dafd1132de2ff31f604e3bd086cfa2adfe93</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.FaultConverter">
          <source>Converts exceptions thrown by a channel into SOAP fault messages that conform to the channel's protocol.</source>
          <target state="translated">將通道擲回的例外狀況轉換為符合通道通訊協定的 SOAP 錯誤訊息。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.FaultConverter" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.FaultConverter" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
          <source>The message version.</source>
          <target state="translated">訊息版本。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
          <source>Gets the default fault converter.</source>
          <target state="translated">取得預設的錯誤轉換器。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.FaultConverter" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.FaultConverter" /&gt;</ph> 的執行個體。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)">
          <source>Transport channels should delegate to this method to get the default SOAP WS-Addressing fault converter.</source>
          <target state="translated">傳輸通道應該委派到這個方法，以取得預設的 SOAP WS-Addressing 錯誤轉換器。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>The fault message.</source>
          <target state="translated">錯誤訊息。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>The fault.</source>
          <target state="translated">錯誤。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>If conversion is successful, the SOAP exception, returned as an <ph id="ph1">&lt;see langword="out" /&gt;</ph> parameter.</source>
          <target state="translated">如果轉換成功，則是指 SOAP 例外狀況，它會傳回做為 <ph id="ph1">&lt;see langword="out" /&gt;</ph> 參數。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>Tries to create the exception.</source>
          <target state="translated">嘗試建立例外狀況。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if fault was successfully converted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果成功轉換錯誤，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>For a channel layer to implement <ph id="ph1">`GetProperty&lt;FaultConverter&gt;`</ph> to support converting fault messages to SOAP exceptions, override this method to create an exception by doing the following steps:</source>
          <target state="translated">若要讓通道層實作 <ph id="ph1">`GetProperty&lt;FaultConverter&gt;`</ph> 以支援將錯誤訊息轉換為 SOAP 例外狀況，請執行下列步驟覆寫這個方法以建立例外狀況：</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>Inspect the fault message.</source>
          <target state="translated">檢查錯誤訊息。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>If recognized, do the appropriate conversion.</source>
          <target state="translated">如果認出錯誤訊息，請執行適當的轉換。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>If not recognized, convert it by a call to <ph id="ph1">`GetProperty&lt;FaultConverter&gt;`</ph> on the inner channel.</source>
          <target state="translated">如果沒有認出，請針對內部通道呼叫 <ph id="ph1">`GetProperty&lt;FaultConverter&gt;`</ph> 來進行轉換。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>Transport channels should delegate to <ph id="ph1">&lt;xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A&gt;</ph> to get the default SOAP/WS-Addressing fault converter.</source>
          <target state="translated">傳輸通道應該要委派到 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A&gt;</ph>，以取得預設的 SOAP/WS-Addressing 錯誤轉換器。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source>The SOAP exception.</source>
          <target state="translated">SOAP 例外狀況。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source>The fault message returned as an <ph id="ph1">&lt;see langword="out" /&gt;</ph> parameter.</source>
          <target state="translated">錯誤訊息會傳回做為 <ph id="ph1">&lt;see langword="out" /&gt;</ph> 參數。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source>Tries to create the fault message once the fault has been converted to a SOAP exception.</source>
          <target state="translated">在錯誤轉換為 SOAP 例外狀況之後，會嘗試建立錯誤訊息。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if fault message was successfully created; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果成功建立錯誤訊息，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source>Channels that support fault conversion implement <ph id="ph1">`GetProperty&lt;FaultConverter&gt;`</ph> and override this method to do the following.</source>
          <target state="translated">支援錯誤轉換的通道會實作 <ph id="ph1">`GetProperty&lt;FaultConverter&gt;`</ph> 並覆寫這個方法以執行下列動作。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source>If a layer can convert the exception it does; otherwise it calls <ph id="ph1">`GetProperty&lt;FaultConverter&gt;`</ph> on its inner channel.</source>
          <target state="translated">如果通道層可轉換例外狀況就會進行轉換，否則會針對其內部通道呼叫 <ph id="ph1">`GetProperty&lt;FaultConverter&gt;`</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source>Transport channels should delegate to <ph id="ph1">&lt;xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A&gt;</ph> to get the default SOAP/WS-Addressing fault converter.</source>
          <target state="translated">傳輸通道應該要委派到 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A&gt;</ph>，以取得預設的 SOAP/WS-Addressing 錯誤轉換器。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>The fault message.</source>
          <target state="translated">錯誤訊息。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>The fault.</source>
          <target state="translated">錯誤。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>If conversion is successful, the SOAP exception, returned as an <ph id="ph1">&lt;see langword="out" /&gt;</ph> parameter.</source>
          <target state="translated">如果轉換成功，則是指 SOAP 例外狀況，它會傳回做為 <ph id="ph1">&lt;see langword="out" /&gt;</ph> 參數。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>Wraps <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /&gt;</ph> with error checking.</source>
          <target state="translated">使用錯誤檢查包裝 <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if fault was successfully converted; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果成功轉換錯誤，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateException%2A&gt;</ph> is an abstract class that you must implement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateException%2A&gt;</ph> 是您必須實作的抽象類別。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source>The current method wraps several parameter error tests around a call to that method.</source>
          <target state="translated">目前的方法會包裝數個對於該方法之呼叫的參數錯誤測試。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)">
          <source><ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /&gt;</ph> returned <ph id="ph2">&lt;see langword="false" /&gt;</ph> but <ph id="ph3">&lt;paramref name="exception" /&gt;</ph> is not <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /&gt;</ph> 傳回 <ph id="ph2">&lt;see langword="false" /&gt;</ph>，但是 <ph id="ph3">&lt;paramref name="exception" /&gt;</ph> 不是 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source>The SOAP exception.</source>
          <target state="translated">SOAP 例外狀況。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source>The fault message returned as an <ph id="ph1">&lt;see langword="out" /&gt;</ph> parameter.</source>
          <target state="translated">錯誤訊息會傳回做為 <ph id="ph1">&lt;see langword="out" /&gt;</ph> 參數。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source>Wraps <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)" /&gt;</ph> with error checking.</source>
          <target state="translated">使用錯誤檢查包裝 <ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if fault message was successfully created; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果成功建立錯誤訊息，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage%2A&gt;</ph> is an abstract class that you must implement.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage%2A&gt;</ph> 是您必須實作的抽象類別。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source>The current method wraps several error tests around a call to that method.</source>
          <target state="translated">目前的方法會包裝數個對於該方法之呼叫的錯誤測試。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)">
          <source><ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /&gt;</ph> returned <ph id="ph2">&lt;see langword="false" /&gt;</ph> but <ph id="ph3">&lt;paramref name="message" /&gt;</ph> is not <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /&gt;</ph> 傳回 <ph id="ph2">&lt;see langword="false" /&gt;</ph>，但是 <ph id="ph3">&lt;paramref name="message" /&gt;</ph> 不是 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>