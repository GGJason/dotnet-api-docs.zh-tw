<Type Name="CompositeDuplexBindingElement" FullName="System.ServiceModel.Channels.CompositeDuplexBindingElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="989a8c580a9606b2fc40a842982e61fc1d8c9e89" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48739576" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CompositeDuplexBindingElement : System.ServiceModel.Channels.BindingElement, System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompositeDuplexBindingElement extends System.ServiceModel.Channels.BindingElement implements class System.ServiceModel.Description.IPolicyExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompositeDuplexBindingElement&#xA;Inherits BindingElement&#xA;Implements IPolicyExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeDuplexBindingElement sealed : System::ServiceModel::Channels::BindingElement, System::ServiceModel::Description::IPolicyExportExtension" />
  <TypeSignature Language="F#" Value="type CompositeDuplexBindingElement = class&#xA;    inherit BindingElement&#xA;    interface IPolicyExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.BindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d9b57-101">表示繫結項目，這是當用戶端必須公開 (Expose) 服務的端點才能將訊息傳回用戶端時所使用的項目。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d9b57-101">Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9b57-102">這個項目通常都是和本身不允許雙工通訊的傳輸一起使用，例如 HTTP。</span><span class="sxs-lookup"><span data-stu-id="d9b57-102">This is commonly used with transports, such as HTTP, that do not allow duplex communications natively.</span></span> <span data-ttu-id="d9b57-103">相反地，TCP 本身就允許雙工通訊，因此不需要使用這個繫結項目也可讓服務將訊息傳回用戶端。</span><span class="sxs-lookup"><span data-stu-id="d9b57-103">TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.</span></span>  
  
 <span data-ttu-id="d9b57-104">用戶端必須公開服務能夠在該處連絡它以建立從服務至用戶端之連線的位址。</span><span class="sxs-lookup"><span data-stu-id="d9b57-104">The client must expose an address at which the service can contact it to establish a connection from the service to the client.</span></span> <span data-ttu-id="d9b57-105">這個用戶端位址是由 <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> 屬性提供的。</span><span class="sxs-lookup"><span data-stu-id="d9b57-105">This client address is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> property.</span></span> <span data-ttu-id="d9b57-106">請注意，Windows Communication Foundation (WCF) 會自動產生<xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>如果使用者未明確設定。</span><span class="sxs-lookup"><span data-stu-id="d9b57-106">Note that Windows Communication Foundation (WCF) auto-generates a <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> if one is not explicitly set by the user.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositeDuplexBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositeDuplexBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9b57-107">初始化 <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="compositeDuplexBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="d9b57-108">處理站產生的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-108">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the factory produces.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="d9b57-109">
            <see cref="T:System.ServiceModel.Channels.BindingContext" />，其提供建置通道處理站所需的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-109">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel factory.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9b57-110">傳回可以建立複合雙工通道的通道處理站。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-110">Returns a channel factory that can create a composite duplex channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9b57-111">
            <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />，它會建立 <paramref name="TChannel" /> 型別的複合雙工通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-111">A <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> that creates a composite duplex channel of type <paramref name="TChannel" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9b57-112">此建置內容需要 <xref:System.ServiceModel.Channels.IOutputChannel> 來做為 `TChannel`。</span><span class="sxs-lookup"><span data-stu-id="d9b57-112">The build context requires an <xref:System.ServiceModel.Channels.IOutputChannel> for the `TChannel`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9b57-113">
            <paramref name="context" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-113">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9b57-114">
            <paramref name="TChannel" /> 的型別不是 <see cref="T:System.ServiceModel.Channels.IOutputChannel" />，並且不受支援。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-114">The <paramref name="TChannel" /> is not of type <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> and is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="compositeDuplexBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="d9b57-115">接聽程式會接受的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-115">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the listener accepts.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="d9b57-116">
            <see cref="T:System.ServiceModel.Channels.BindingContext" />，其提供建置通道接聽程式所需的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-116">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9b57-117">傳回可以接受複合雙工通道的通道接聽程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-117">Returns a channel listener that can accept a composite duplex channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9b57-118">
            <see cref="T:System.ServiceModel.Channels.IChannelListener`1" />，其會接受 <paramref name="TChannel" /> 型別的複合雙工通道。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-118">An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> that accepts a composite duplex channel of type <paramref name="TChannel" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9b57-119">此建置內容需要 <xref:System.ServiceModel.Channels.IInputChannel> 來做為 `TChannel`。</span><span class="sxs-lookup"><span data-stu-id="d9b57-119">The build context requires an <xref:System.ServiceModel.Channels.IInputChannel> for the `TChannel`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9b57-120">
            <paramref name="context" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-120">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9b57-121">
            <paramref name="TChannel" /> 的型別不是 <see cref="T:System.ServiceModel.Channels.IInputChannel" />，並且不受支援。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-121">The <paramref name="TChannel" /> is not of type <see cref="T:System.ServiceModel.Channels.IInputChannel" /> and is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="compositeDuplexBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="d9b57-122">通道處理站所產生的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-122">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the channel factory produces.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="d9b57-123">
            <see cref="T:System.ServiceModel.Channels.BindingContext" />，其提供建置通道接聽程式所需的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-123">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9b57-124">傳回值，這個值會指出繫結程序是否可以建置通道處理站，以產生符合內容需求的特定通道型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-124">Returns a value that indicates whether the binding can build the channel factory that produces a specific type of channel that satisfies the context requirements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9b57-125">如果繫結能建置通道處理站，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-125">
              <see langword="true" /> if the binding can build the channel factory; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9b57-126">`true` 如果`TChannel`  ==  <xref:System.ServiceModel.Channels.IOutputChannel>而且內部繫結也能夠建置<xref:System.ServiceModel.Channels.IOutputChannel>; 否則`false`。</span><span class="sxs-lookup"><span data-stu-id="d9b57-126">`true` if `TChannel` == <xref:System.ServiceModel.Channels.IOutputChannel> and the inner binding can also build <xref:System.ServiceModel.Channels.IOutputChannel>; otherwise, `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9b57-127">
            <paramref name="context" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-127">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="compositeDuplexBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="d9b57-128">接聽程式會接受的 <see cref="T:System.ServiceModel.Channels.IChannel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-128">The <see cref="T:System.ServiceModel.Channels.IChannel" /> that the listener accepts.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="d9b57-129">
            <see cref="T:System.ServiceModel.Channels.BindingContext" />，其提供建置通道接聽程式所需的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-129">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel listener.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9b57-130">傳回值，這個值會指出繫結程序是否可以建置通道接聽項，以接受符合內容需求的特定通道型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-130">Returns a value that indicates whether the binding can build the channel listener that accepts a specific type of channel that satisfies the context requirements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9b57-131">如果能夠針對接受所指定通道型別所需的建置來建置通道接聽項，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-131">
              <see langword="true" /> if the channel listener can be built for the build required to accept the specified type of channel; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9b57-132">`true` 如果`TChannel`  ==  <xref:System.ServiceModel.Channels.IInputChannel>而且內部繫結也能夠建置<xref:System.ServiceModel.Channels.IInputChannel>; 否則`false`。</span><span class="sxs-lookup"><span data-stu-id="d9b57-132">`true` if `TChannel` == <xref:System.ServiceModel.Channels.IInputChannel> and the inner binding can also build <xref:System.ServiceModel.Channels.IInputChannel>; otherwise, `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9b57-133">
            <paramref name="context" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-133">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClientBaseAddress">
      <MemberSignature Language="C#" Value="public Uri ClientBaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientBaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientBaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientBaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientBaseAddress : Uri with get, set" Usage="System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d9b57-134">取得或設定用戶端的基底位址 (Base Address)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-134">Gets or sets the base address for the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d9b57-135">包含用戶端的基底位址的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-135">A <see cref="T:System.Uri" /> that contains the base address for the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9b57-136">這個屬性會提供服務可在該處聯絡用戶端的位址。</span><span class="sxs-lookup"><span data-stu-id="d9b57-136">This property provides an address at which the service can contact the client.</span></span> <span data-ttu-id="d9b57-137">`null` 值會導致系統自動產生用戶端基底位址。</span><span class="sxs-lookup"><span data-stu-id="d9b57-137">A `null` value causes the system to automatically generate a client base address.</span></span>  
  
 <span data-ttu-id="d9b57-138">這是基底位址，不是絕對位址。</span><span class="sxs-lookup"><span data-stu-id="d9b57-138">This is a base address, not an absolute address.</span></span> <span data-ttu-id="d9b57-139">當從這個繫結產生用戶端端點時，就會將 GUID 附加至基底位址。</span><span class="sxs-lookup"><span data-stu-id="d9b57-139">A GUID is appended to the base address when generating client endpoints from this binding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="compositeDuplexBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d9b57-140">傳回目前繫結項目的深層複製。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-140">Returns a deep clone of the current binding element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9b57-141">
            <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" />，這是目前繫結項目的深層複製。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-141">A <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> that is a deep clone of the current binding element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9b57-142">傳回複製可讓執行階段支援多個自訂繫結共用自訂繫結項目的情況。</span><span class="sxs-lookup"><span data-stu-id="d9b57-142">Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</span></span> <span data-ttu-id="d9b57-143">如果沒有傳回複製，則表示執行階段行為尚未定義。</span><span class="sxs-lookup"><span data-stu-id="d9b57-143">If a clone is not returned, the run-time behavior is undefined.</span></span>  
  
 <span data-ttu-id="d9b57-144">物件的深層複製會建立物件的複本，以及該物件直接或間接參考之每個物件的複本，</span><span class="sxs-lookup"><span data-stu-id="d9b57-144">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="d9b57-145">(這也稱為複製整個物件圖形)。相較之下，物件的淺層複製則只是物件的複本。</span><span class="sxs-lookup"><span data-stu-id="d9b57-145">(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="d9b57-146">如果物件包含其他物件的參考，則淺層複製不會建立所參考之物件的複本，而只會複製原始物件的參考。</span><span class="sxs-lookup"><span data-stu-id="d9b57-146">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span> <span data-ttu-id="d9b57-147">特別之處在於，<xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> 的深層複製會複製 <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="d9b57-147">In particular, a deep copy of <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement> copies over the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="compositeDuplexBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d9b57-148">已測試過其支援的型別物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-148">The typed object whose support is being tested.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="d9b57-149">
            <see cref="T:System.ServiceModel.Channels.BindingContext" />，其提供建置通道所需的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-149">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides the context required to build the channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9b57-150">從其中一個通道堆疊的適當層次傳回要求的型別物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-150">Returns a typed object requested from the appropriate layer in one of the channel stacks.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d9b57-151">要求的型別物件 <paramref name="T" /> (如果支援的話)，如果不支援則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-151">The typed object <paramref name="T" /> requested if it is supported; or <see langword="null" /> if it is not.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9b57-152">使用此方法可要求型別物件，例如，用來從堆疊繫結中的適當層次設定屬性或取得狀態的介面。</span><span class="sxs-lookup"><span data-stu-id="d9b57-152">Use this to request a typed object, such as an interface for setting properties or getting status, from the appropriate layer in the stacked binding.</span></span> <span data-ttu-id="d9b57-153">如果某個層次支援傳回要求的物件，它就會傳回物件。</span><span class="sxs-lookup"><span data-stu-id="d9b57-153">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="d9b57-154">如果不是，則會將呼叫向下委派到堆疊中的下一層。</span><span class="sxs-lookup"><span data-stu-id="d9b57-154">If not, it delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="d9b57-155">如果到達堆疊的底部，而且沒有任何層次支援取得要求的物件，則會將 `null` 值傳回給呼叫者。</span><span class="sxs-lookup"><span data-stu-id="d9b57-155">If it gets to the bottom of the stack and no layer supports getting the requested object then the caller is returned a `null` value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9b57-156">
            <paramref name="context" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-156">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy">
      <MemberSignature Language="C#" Value="void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context) = System::ServiceModel::Description::IPolicyExportExtension::ExportPolicy;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <span data-ttu-id="d9b57-157">
            <see cref="T:System.ServiceModel.Description.MetadataExporter" />，可以用來修改匯出處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-157">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="d9b57-158">您可以用於插入自訂原則判斷提示的 <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-158">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d9b57-159">匯出有關繫結的自訂原則判斷提示，這些判斷提示表示該繫結中存在複合雙工。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-159">Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9b57-160">如需詳細資訊，請參閱<xref:System.ServiceModel.Description.IPolicyExportExtension>。</span><span class="sxs-lookup"><span data-stu-id="d9b57-160">For more information, see <xref:System.ServiceModel.Description.IPolicyExportExtension>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9b57-161">
            <paramref name="context" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d9b57-161">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>