<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CompositeDuplexBindingElement.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f7b263b3dac170461c886d1e930a49f82f6f9ed3d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b263b3dac170461c886d1e930a49f82f6f9ed3d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.</source>
          <target state="translated">表示繫結項目，這是當用戶端必須公開 (Expose) 服務的端點才能將訊息傳回用戶端時所使用的項目。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>This is commonly used with transports, such as HTTP, that do not allow duplex communications natively.</source>
          <target state="translated">這個項目通常都是和本身不允許雙工通訊的傳輸一起使用，例如 HTTP。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.</source>
          <target state="translated">相反地，TCP 本身就允許雙工通訊，因此不需要使用這個繫結項目也可讓服務將訊息傳回用戶端。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>The client must expose an address at which the service can contact it to establish a connection from the service to the client.</source>
          <target state="translated">用戶端必須公開服務能夠在該處連絡它以建立從服務至用戶端之連線的位址。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>This client address is provided by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> property.</source>
          <target state="translated">這個用戶端位址是由 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> 屬性提供的。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>Note that <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> auto-generates a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> if one is not explicitly set by the user.</source>
          <target state="translated">請注意，如果使用者未明確設定位址，<ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 就會自動產生 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the factory produces.</source>
          <target state="translated">處理站產生的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel factory.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>，其提供建置通道處理站所需的內容。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a channel factory that can create a composite duplex channel.</source>
          <target state="translated">傳回可以建立複合雙工通道的通道處理站。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> that creates a composite duplex channel of type <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph>，它會建立 <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph> 型別的複合雙工通道。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The build context requires an <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> for the <ph id="ph2">`TChannel`</ph>.</source>
          <target state="translated">此建置內容需要 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> 來做為 <ph id="ph2">`TChannel`</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> is not of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IOutputChannel" /&gt;</ph> and is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 的型別不是 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IOutputChannel" /&gt;</ph>，並且不受支援。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the listener accepts.</source>
          <target state="translated">接聽程式會接受的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel listener.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>，其提供建置通道接聽程式所需的內容。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a channel listener that can accept a composite duplex channel.</source>
          <target state="translated">傳回可以接受複合雙工通道的通道接聽程式。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> that accepts a composite duplex channel of type <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph>，其會接受 <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph> 型別的複合雙工通道。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The build context requires an <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> for the <ph id="ph2">`TChannel`</ph>.</source>
          <target state="translated">此建置內容需要 <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> 來做為 <ph id="ph2">`TChannel`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> is not of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IInputChannel" /&gt;</ph> and is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> 的型別不是 <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IInputChannel" /&gt;</ph>，並且不受支援。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the channel factory produces.</source>
          <target state="translated">通道處理站所產生的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel listener.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>，其提供建置通道接聽程式所需的內容。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding can build the channel factory that produces a specific type of channel that satisfies the context requirements.</source>
          <target state="translated">傳回值，這個值會指出繫結程序是否可以建置通道處理站，以產生符合內容需求的特定通道型別。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binding can build the channel factory; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果繫結能建置通道處理站，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">`TChannel`</ph><ph id="ph3"> == </ph><ph id="ph4">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> and the inner binding can also build <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>; otherwise, <ph id="ph6">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph> 如果<ph id="ph2">`TChannel`</ph> <ph id="ph3"> == </ph> <ph id="ph4">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>而且內部繫結也能夠建置<ph id="ph5">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>，否則<ph id="ph6">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the listener accepts.</source>
          <target state="translated">接聽程式會接受的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel listener.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>，其提供建置通道接聽程式所需的內容。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding can build the channel listener that accepts a specific type of channel that satisfies the context requirements.</source>
          <target state="translated">傳回值，這個值會指出繫結程序是否可以建置通道接聽項，以接受符合內容需求的特定通道型別。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the channel listener can be built for the build required to accept the specified type of channel; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果能夠針對接受所指定通道型別所需的建置來建置通道接聽項，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">`TChannel`</ph><ph id="ph3"> == </ph><ph id="ph4">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> and the inner binding can also build <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>; otherwise, <ph id="ph6">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph> 如果<ph id="ph2">`TChannel`</ph> <ph id="ph3"> == </ph> <ph id="ph4">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>而且內部繫結也能夠建置<ph id="ph5">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>，否則<ph id="ph6">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>Gets or sets the base address for the client.</source>
          <target state="translated">取得或設定用戶端的基底位址 (Base Address)。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the base address for the client.</source>
          <target state="translated">包含用戶端的基底位址的 <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>This property provides an address at which the service can contact the client.</source>
          <target state="translated">這個屬性會提供服務可在該處聯絡用戶端的位址。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>A <ph id="ph1">`null`</ph> value causes the system to automatically generate a client base address.</source>
          <target state="translated"><ph id="ph1">`null`</ph> 值會導致系統自動產生用戶端基底位址。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>This is a base address, not an absolute address.</source>
          <target state="translated">這是基底位址，不是絕對位址。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>A GUID is appended to the base address when generating client endpoints from this binding.</source>
          <target state="translated">當從這個繫結產生用戶端端點時，就會將 GUID 附加至基底位址。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>Returns a deep clone of the current binding element.</source>
          <target state="translated">傳回目前繫結項目的深層複製。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph> that is a deep clone of the current binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph>，這是目前繫結項目的深層複製。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</source>
          <target state="translated">傳回複製可讓執行階段支援多個自訂繫結共用自訂繫結項目的情況。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>If a clone is not returned, the run-time behavior is undefined.</source>
          <target state="translated">如果沒有傳回複製，則表示執行階段行為尚未定義。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</source>
          <target state="translated">物件的深層複製會建立物件的複本，以及該物件直接或間接參考之每個物件的複本，</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</source>
          <target state="translated">(這也稱為複製整個物件圖形)。相較之下，物件的淺層複製則只是物件的複本。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</source>
          <target state="translated">如果物件包含其他物件的參考，則淺層複製不會建立所參考之物件的複本，而只會複製原始物件的參考。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>In particular, a deep copy of <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement&gt;</ph> copies over the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> value.</source>
          <target state="translated">特別之處在於，<ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement&gt;</ph> 的深層複製會複製 <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object whose support is being tested.</source>
          <target state="translated">已測試過其支援的型別物件。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>，其提供建置通道所需的內容。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a typed object requested from the appropriate layer in one of the channel stacks.</source>
          <target state="translated">從其中一個通道堆疊的適當層次傳回要求的型別物件。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is supported; or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not.</source>
          <target state="translated">要求的型別物件 <ph id="ph1">&lt;paramref name="T" /&gt;</ph> (如果支援的話)，如果不支援則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this to request a typed object, such as an interface for setting properties or getting status, from the appropriate layer in the stacked binding.</source>
          <target state="translated">使用此方法可要求型別物件，例如，用來從堆疊繫結中的適當層次設定屬性或取得狀態的介面。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If a layer supports returning the requested object, it returns it.</source>
          <target state="translated">如果某個層次支援傳回要求的物件，它就會傳回物件。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If not, it delegates the call down to the next layer in the stack.</source>
          <target state="translated">如果不是，則會將呼叫向下委派到堆疊中的下一層。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If it gets to the bottom of the stack and no layer supports getting the requested object then the caller is returned a <ph id="ph1">`null`</ph> value.</source>
          <target state="translated">如果到達堆疊的底部，而且沒有任何層次支援取得要求的物件，則會將 <ph id="ph1">`null`</ph> 值傳回給呼叫者。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph> that you can use to modify the exporting process.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph>，可以用來修改匯出處理序。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph> that you can use to insert your custom policy assertion.</source>
          <target state="translated">您可以用於插入自訂原則判斷提示的 <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.</source>
          <target state="translated">匯出有關繫結的自訂原則判斷提示，這些判斷提示表示該繫結中存在複合雙工。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>