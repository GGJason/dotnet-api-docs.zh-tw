<Type Name="LocalServiceSecuritySettings" FullName="System.ServiceModel.Channels.LocalServiceSecuritySettings">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e68389363e31a73a10fd67dd4f5ae14509ccff60" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39783048" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class LocalServiceSecuritySettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LocalServiceSecuritySettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.LocalServiceSecuritySettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalServiceSecuritySettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalServiceSecuritySettings sealed" />
  <TypeSignature Language="F#" Value="type LocalServiceSecuritySettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供可以設定的本機服務安全性屬性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個類別包含 <xref:System.ServiceModel.Channels.SecurityBindingElement> 用來建立安全性通道的本機安全性設定。 這些是服務的本機設定，而且不會在服務的安全性原則中表示。  
  
   
  
## Examples  
 這個範例會示範如何使用 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings> 類別來變更 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays%2A> 設定。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#17)]
 [!code-vb[S_UELocalServiceSecuritySettings#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#17)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LocalServiceSecuritySettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.LocalServiceSecuritySettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LocalServiceSecuritySettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.Channels.LocalServiceSecuritySettings" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 這個範例會示範如何使用預設建構函式。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#1)]
 [!code-vb[S_UELocalServiceSecuritySettings#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.LocalServiceSecuritySettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.LocalServiceSecuritySettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.LocalServiceSecuritySettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As LocalServiceSecuritySettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::LocalServiceSecuritySettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.ServiceModel.Channels.LocalServiceSecuritySettings" Usage="localServiceSecuritySettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.LocalServiceSecuritySettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從目前的執行個體建立這個類別的新執行個體。</summary>
        <returns>
          <see cref="T:System.ServiceModel.Channels.LocalServiceSecuritySettings" /> 的新執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 這個範例會示範如何從目前的執行個體建立這個類別的新執行個體。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#16)]
 [!code-vb[S_UELocalServiceSecuritySettings#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetectReplays">
      <MemberSignature Language="C#" Value="public bool DetectReplays { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DetectReplays" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays" />
      <MemberSignature Language="VB.NET" Value="Public Property DetectReplays As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DetectReplays { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DetectReplays : bool with get, set" Usage="System.ServiceModel.Channels.LocalServiceSecuritySettings.DetectReplays" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值指出服務上是否啟用重新執行偵測。</summary>
        <value>如果服務上已啟用重新執行偵測，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 這個範例將示範如何取得這個屬性的值。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#2)]
 [!code-vb[S_UELocalServiceSecuritySettings#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InactivityTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan InactivityTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan InactivityTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property InactivityTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan InactivityTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.InactivityTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Channels.LocalServiceSecuritySettings.InactivityTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定通道因為無活動而關閉之前所等待的持續期間。</summary>
        <value>
          <see cref="T:System.TimeSpan" />，表示與用戶端之間的安全性工作階段因為無活動而關閉之前，所等候的持續期間。 預設值為 2 分鐘。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在安全對話工作階段中，請注意這個屬性和繫結上的 `ReceiveTimeout` 屬性都會影響工作階段逾時。 其中時間較短的屬性值會決定逾時發生的時間。  
  
 工作階段設定 (例如這個設定) 適用於下列任何一種狀況：  
  
-   <xref:System.ServiceModel.WSDualHttpBinding> 和 <xref:System.ServiceModel.NetTcpBinding> 的所有用戶端認證類型。  
  
-   如果[ \<reliableSession > 項目](http://msdn.microsoft.com/library/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b)已啟用。  
  
-   如果[ \<reliableSession > 項目](http://msdn.microsoft.com/library/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b)未啟用，在<xref:System.ServiceModel.WSHttpBinding>具有<xref:System.ServiceModel.Description.ClientCredentials.UserName%2A>  =  `true`或是<xref:System.ServiceModel.Description.ClientCredentials.Windows%2A?displayProperty=nameWithType>  =  `true`。  
  
 工作階段設定 (例如這個設定) 不適用於下列任何一種狀況：  
  
-   針對 <xref:System.ServiceModel.BasicHttpBinding>。  
  
-   針對 <xref:System.ServiceModel.NetNamedPipeBinding>。  
  
-   如果[ \<reliableSession > 項目](http://msdn.microsoft.com/library/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b)未啟用，在<xref:System.ServiceModel.WSHttpBinding>具有<xref:System.ServiceModel.Description.ClientCredentials.ClientCertificate%2A>  =  `true`或都未<xref:System.ServiceModel.Description.ClientCredentials>屬性設為`true`。  
  
   
  
## Examples  
 這個範例會示範如何取得 `InactivityTimeout` 值。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#3)]
 [!code-vb[S_UELocalServiceSecuritySettings#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">此屬性設定為小於 0 的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="IssuedCookieLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan IssuedCookieLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan IssuedCookieLifetime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property IssuedCookieLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan IssuedCookieLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.IssuedCookieLifetime : TimeSpan with get, set" Usage="System.ServiceModel.Channels.LocalServiceSecuritySettings.IssuedCookieLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定服務針對用戶端發出之 <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" /> 的存留期 (Lifetime)。</summary>
        <value>表示新安全性 Cookie 存留期的 <see cref="T:System.TimeSpan" />。 預設為 10 小時。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當服務對用戶端發出安全對話 Cookie 權杖時，其有效期間是由這個屬性的值所決定。  
  
   
  
## Examples  
 這個範例會示範如何取得 `IssuedCookieLifetime` 值。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#4)]
 [!code-vb[S_UELocalServiceSecuritySettings#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">此屬性設定為小於 0 的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxCachedCookies">
      <MemberSignature Language="C#" Value="public int MaxCachedCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCachedCookies" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCachedCookies As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxCachedCookies { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCachedCookies : int with get, set" Usage="System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxCachedCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定此服務允許一次快取之 <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" /> 數目的上限。</summary>
        <value>此服務可快取之安全對話 Cookie 數目的上限。 當到達這個限制時，此服務會移除最舊的快取安全對話 Cookie，以騰出空間供新的安全對話 Cookie 使用。 預設值為 1000。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 這個範例會示範如何取得 `MaxCachedCookies` 值。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#5)]
 [!code-vb[S_UELocalServiceSecuritySettings#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">此屬性設定為小於 0 的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxClockSkew">
      <MemberSignature Language="C#" Value="public TimeSpan MaxClockSkew { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MaxClockSkew" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxClockSkew As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MaxClockSkew { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.MaxClockSkew : TimeSpan with get, set" Usage="System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxClockSkew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定通訊雙方系統時鐘之間可允許的最大時間差異。</summary>
        <value>
          <see cref="T:System.TimeSpan" />，表示通訊雙方系統時鐘之間的最大允許時間差異。 預設值是 5 分鐘。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性的預設值為 5 分鐘。  
  
 沒有通過傳送時間測試的訊息會遭到拒絕。  
  
 這個屬性會配合訊息時間戳記驗證和 <xref:System.ServiceModel.Channels.LocalClientSecuritySettings.ReplayWindow%2A> 屬性一起使用。  
  
   
  
## Examples  
 這個範例會示範如何取得 `MaxClockSkew` 值。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#6)]
 [!code-vb[S_UELocalServiceSecuritySettings#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">此屬性設定為小於 0 的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxPendingSessions">
      <MemberSignature Language="C#" Value="public int MaxPendingSessions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPendingSessions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPendingSessions As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPendingSessions { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPendingSessions : int with get, set" Usage="System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxPendingSessions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與伺服器之間建立並行安全性工作階段的數目上限，此伺服器已經針對這些並行安全性工作階段發出工作階段權杖，但未傳送任何應用程式訊息。</summary>
        <value>並行安全性工作階段數目的上限。 預設值為 128。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 這個範例會示範如何取得 `MaxPendingSessions` 值。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#7)]
 [!code-vb[S_UELocalServiceSecuritySettings#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">此屬性設定為小於 0 的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxStatefulNegotiations">
      <MemberSignature Language="C#" Value="public int MaxStatefulNegotiations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxStatefulNegotiations" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxStatefulNegotiations As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxStatefulNegotiations { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxStatefulNegotiations : int with get, set" Usage="System.ServiceModel.Channels.LocalServiceSecuritySettings.MaxStatefulNegotiations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定與用戶端之間的並行安全性交涉 (此服務可參與) 數目的上限。</summary>
        <value>與用戶端之間的並行安全性交涉 (此服務可參與) 數目的上限。 預設值為 128。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 超過這個限制的交涉工作階段會遭到拒絕，並將 SOAP 錯誤傳回用戶端。 用戶端通常必須在稍後重試，好讓服務上的現有交涉有一些時間可以完成。  
  
   
  
## Examples  
 這個範例會示範如何設定 `MaxStatefulNegotiations` 值。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#8)]
 [!code-vb[S_UELocalServiceSecuritySettings#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">此屬性設定為小於 0 的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="NegotiationTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan NegotiationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan NegotiationTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property NegotiationTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan NegotiationTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.NegotiationTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Channels.LocalServiceSecuritySettings.NegotiationTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用戶端與服務之間安全性交涉階段的最長持續期間。</summary>
        <value>
          <see cref="T:System.TimeSpan" />，表示用戶端與服務之間安全性交涉階段的最長持續期間。 與服務之間的任何交涉 (例如，在訊息層級 SPNego 或 SSL 驗證期間) 都必須在這段時間內完成。 預設為 1 分鐘。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果超出這個限制，便會擲回例外狀況。  
  
   
  
## Examples  
 這個範例將示範如何取得這個屬性的值。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#9)]
 [!code-vb[S_UELocalServiceSecuritySettings#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">此屬性設定為小於 0 的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="NonceCache">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.NonceCache NonceCache { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.NonceCache NonceCache" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache" />
      <MemberSignature Language="VB.NET" Value="Public Property NonceCache As NonceCache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::NonceCache ^ NonceCache { System::ServiceModel::Security::NonceCache ^ get(); void set(System::ServiceModel::Security::NonceCache ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NonceCache : System.ServiceModel.Security.NonceCache with get, set" Usage="System.ServiceModel.Channels.LocalServiceSecuritySettings.NonceCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.NonceCache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定本機服務安全性設定的快取。</summary>
        <value>本機服務安全性設定的快取。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReconnectTransportOnFailure">
      <MemberSignature Language="C#" Value="public bool ReconnectTransportOnFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReconnectTransportOnFailure" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure" />
      <MemberSignature Language="VB.NET" Value="Public Property ReconnectTransportOnFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReconnectTransportOnFailure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReconnectTransportOnFailure : bool with get, set" Usage="System.ServiceModel.Channels.LocalServiceSecuritySettings.ReconnectTransportOnFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值會指出安全性工作階段是否會在傳輸失敗之後嘗試重新連線。</summary>
        <value>如果安全性工作階段會在傳輸失敗之後嘗試重新連線，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果這個旗標設定為 `true`，則表示此服務允許用戶端透過多個傳輸連線來傳送對應至單一安全性工作階段的訊息。 這種設定對於安全 WS-ReliableMessaging 而言相當有用，因為用戶端會要求工作階段能夠容忍暫時的傳輸失敗。  
  
   
  
## Examples  
 這個範例將示範如何取得這個屬性的值。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#10)]
 [!code-vb[S_UELocalServiceSecuritySettings#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplayCacheSize">
      <MemberSignature Language="C#" Value="public int ReplayCacheSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReplayCacheSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplayCacheSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReplayCacheSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReplayCacheSize : int with get, set" Usage="System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayCacheSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用於重新執行偵測的 Nonce 快取大小。</summary>
        <value>用於重新執行偵測的 Nonce 快取大小。 預設為 900,000。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nonce 是一次使用的數目。  
  
 如果超過 Nonce 計數，傳入訊息就會遭到拒絕並擲回 <xref:System.ServiceModel.Security.MessageSecurityException>。 舊的 Nonce 會及時移除。  
  
   
  
## Examples  
 這個範例將示範如何取得這個屬性的值。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#11)]
 [!code-vb[S_UELocalServiceSecuritySettings#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplayWindow">
      <MemberSignature Language="C#" Value="public TimeSpan ReplayWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ReplayWindow" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ReplayWindow As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ReplayWindow { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ReplayWindow : TimeSpan with get, set" Usage="System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定服務可接受訊息的時間上限。</summary>
        <value>
          <see cref="T:System.TimeSpan" />，表示服務可接受訊息的時間上限。 預設值是 5 分鐘。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nonce 是一次使用的數目。  
  
 服務會拒絕在過去傳送超過 <xref:System.ServiceModel.Channels.LocalServiceSecuritySettings.ReplayWindow%2A> 持續時間的所有訊息。 到達 `ReplayWindow` 內的訊息會檢查其 Nonce，看看是否是唯一的。  
  
   
  
## Examples  
 這個範例將示範如何取得這個屬性的值。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#12)]
 [!code-vb[S_UELocalServiceSecuritySettings#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">此屬性設定為小於 0 的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionKeyRenewalInterval">
      <MemberSignature Language="C#" Value="public TimeSpan SessionKeyRenewalInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SessionKeyRenewalInterval" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property SessionKeyRenewalInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SessionKeyRenewalInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.SessionKeyRenewalInterval : TimeSpan with get, set" Usage="System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRenewalInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用於安全性工作階段的金鑰存留期。 當這個期限過期時，會自動更新此金鑰。</summary>
        <value>時間範圍，經過這段期間之後服務會要求起始端更新用於安全性工作階段的金鑰。 如果起始端未在這段時間內更新金鑰，此服務會將錯誤傳回給起始端。 預設值為 15 個小時。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 工作階段設定 (例如這個設定) 適用於下列任何一種狀況：  
  
-   <xref:System.ServiceModel.WSDualHttpBinding> 和 <xref:System.ServiceModel.NetTcpBinding> 的所有用戶端認證類型。  
  
-   如果[ \<reliableSession > 項目](http://msdn.microsoft.com/library/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b)已啟用。  
  
-   如果[ \<reliableSession > 項目](http://msdn.microsoft.com/library/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b)未啟用，在<xref:System.ServiceModel.WSHttpBinding>具有<xref:System.ServiceModel.Description.ClientCredentials.UserName%2A>  =  `true`或是<xref:System.ServiceModel.Description.ClientCredentials.Windows%2A?displayProperty=nameWithType>  =  `true`。  
  
 工作階段設定 (例如這個設定) 不適用於下列任何一種狀況：  
  
-   針對 <xref:System.ServiceModel.BasicHttpBinding>。  
  
-   針對 <xref:System.ServiceModel.NetNamedPipeBinding>。  
  
-   如果[ \<reliableSession > 項目](http://msdn.microsoft.com/library/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b)未啟用，在<xref:System.ServiceModel.WSHttpBinding>具有<xref:System.ServiceModel.Description.ClientCredentials.ClientCertificate%2A>  =  `true`或都未<xref:System.ServiceModel.Description.ClientCredentials>屬性設為`true`。  
  
   
  
## Examples  
 這個範例將示範如何取得這個屬性的值。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#13)]
 [!code-vb[S_UELocalServiceSecuritySettings#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">此屬性設定為小於 0 的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionKeyRolloverInterval">
      <MemberSignature Language="C#" Value="public TimeSpan SessionKeyRolloverInterval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan SessionKeyRolloverInterval" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval" />
      <MemberSignature Language="VB.NET" Value="Public Property SessionKeyRolloverInterval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan SessionKeyRolloverInterval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.SessionKeyRolloverInterval : TimeSpan with get, set" Usage="System.ServiceModel.Channels.LocalServiceSecuritySettings.SessionKeyRolloverInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定前一個工作階段金鑰在金鑰更新期間對傳入訊息屬有效的時間間隔。</summary>
        <value>在金鑰更新之後，傳入訊息上前一個工作階段金鑰有效的時間間隔。 預設值是 5 分鐘。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在金鑰更新之後，用戶端和伺服器都必須使用最新的可用金鑰來傳送訊息。 雙方都會接受由前一個工作階段金鑰保護的傳入訊息，直到變換時間逾期。  
  
 工作階段設定 (例如這個設定) 適用於下列任何一種狀況：  
  
-   <xref:System.ServiceModel.WSDualHttpBinding> 和 <xref:System.ServiceModel.NetTcpBinding> 的所有用戶端認證類型。  
  
-   如果[ \<reliableSession > 項目](http://msdn.microsoft.com/library/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b)已啟用。  
  
-   如果[ \<reliableSession > 項目](http://msdn.microsoft.com/library/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b)未啟用，在<xref:System.ServiceModel.WSHttpBinding>具有<xref:System.ServiceModel.Description.ClientCredentials.UserName%2A>  =  `true`或是<xref:System.ServiceModel.Description.ClientCredentials.Windows%2A?displayProperty=nameWithType>  =  `true`。  
  
 工作階段設定 (例如這個設定) 不適用於下列任何一種狀況：  
  
-   針對 <xref:System.ServiceModel.BasicHttpBinding>。  
  
-   針對 <xref:System.ServiceModel.NetNamedPipeBinding>。  
  
-   如果[ \<reliableSession > 項目](http://msdn.microsoft.com/library/9c93818a-7dfa-43d5-b3a1-1aafccf3a00b)未啟用，在<xref:System.ServiceModel.WSHttpBinding>具有<xref:System.ServiceModel.Description.ClientCredentials.ClientCertificate%2A>  =  `true`或都未<xref:System.ServiceModel.Description.ClientCredentials>屬性設為`true`。  
  
   
  
## Examples  
 這個範例會示範如何取得 `SessionKeyRolloverInterval` 值。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#14)]
 [!code-vb[S_UELocalServiceSecuritySettings#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">此屬性設定為小於 0 的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="TimestampValidityDuration">
      <MemberSignature Language="C#" Value="public TimeSpan TimestampValidityDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimestampValidityDuration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property TimestampValidityDuration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimestampValidityDuration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.TimestampValidityDuration : TimeSpan with get, set" Usage="System.ServiceModel.Channels.LocalServiceSecuritySettings.TimestampValidityDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定服務所傳送之訊息有效的最長持續時間。 如果用戶端在這段期間之後收到服務的訊息，它會捨棄該訊息。</summary>
        <value>服務所傳送之訊息有效的最長持續時間。 預設值是 5 分鐘。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 這個範例會示範如何取得 `TimestampValidityDuration` 值。  
  
 [!code-csharp[S_UELocalServiceSecuritySettings#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_uelocalservicesecuritysettings/cs/program.cs#15)]
 [!code-vb[S_UELocalServiceSecuritySettings#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uelocalservicesecuritysettings/vb/program.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">此屬性設定為小於 0 的值。</exception>
      </Docs>
    </Member>
  </Members>
</Type>