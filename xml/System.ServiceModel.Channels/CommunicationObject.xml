<Type Name="CommunicationObject" FullName="System.ServiceModel.Channels.CommunicationObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5030663e919685bf92c363127fe48fe7699b5a7d" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56775101" /></Metadata><TypeSignature Language="C#" Value="public abstract class CommunicationObject : System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CommunicationObject extends System.Object implements class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CommunicationObject&#xA;Implements ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommunicationObject abstract : System::ServiceModel::ICommunicationObject" />
  <TypeSignature Language="F#" Value="type CommunicationObject = class&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>提供對系統中所有通訊導向物件而言常用的基本狀態機器基底實作，這些物件包括通道、接聽程式，以及通道與接聽程式處理站。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.CommunicationObject>類別會實作<xref:System.ServiceModel.ICommunicationObject>所有通訊物件在 Windows Communication Foundation (WCF) 的介面。 方法實作會處理參數驗證、引發會通知發生狀態轉換的事件、提供與這些狀態轉換相關之其他處理的方法，以及確定這類狀態變更會經過協調。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CommunicationObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CommunicationObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CommunicationObject (object mutex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(object mutex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (mutex As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CommunicationObject(System::Object ^ mutex);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.CommunicationObject : obj -&gt; System.ServiceModel.Channels.CommunicationObject" Usage="new System.ServiceModel.Channels.CommunicationObject mutex" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mutex" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="mutex">會在狀態轉換期間保護類別執行個體的互斥鎖定。</param>
        <summary>使用可保護指定狀態轉換的互斥鎖定，初始化 <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit&#xA;override this.Abort : unit -&gt; unit" Usage="communicationObject.Abort " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.ICommunicationObject.Abort</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>導致通訊物件立即從目前的狀態轉換為關閉狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法表示應該忽略任何未完成的工作，或在傳回前強制終止。 您可以使用 <xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A> 方法來取消任何未處理的作業，包括未處理的 <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A> 呼叫。  
  
 若要將 <xref:System.ServiceModel.Channels.CommunicationObject> 從任何 <xref:System.ServiceModel.CommunicationState.Closed> 以外的狀態順利轉換為 <xref:System.ServiceModel.CommunicationState.Closed> 狀態，請呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A> 或是其中一個非同步版本：<xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginClose">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>開始非同步作業以關閉通訊物件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginClose(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginClose : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginClose : AsyncCallback * obj -&gt; IAsyncResult" Usage="communicationObject.BeginClose (callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步關閉作業的通知。</param>
        <param name="state">應用程式所指定的物件，其中包含與非同步關閉作業關聯的狀態資訊。</param>
        <summary>開始非同步作業以關閉通訊物件。</summary>
        <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可以在預設時間間隔內，將 <xref:System.ServiceModel.Channels.CommunicationObject> 從 <xref:System.ServiceModel.CommunicationState.Closed> 狀態以外的任何狀態順利轉換至 <xref:System.ServiceModel.CommunicationState.Closed> 狀態。 <xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A> 方法可讓任何未完成的工作在傳回前完成  (例如，完成傳送任何經過緩衝處理的訊息)。 如果通訊物件一開始處於 <xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> 狀態，這個方法就會呼叫 <xref:System.ServiceModel.CommunicationState.Opened>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="communicationObject.BeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成關閉作業。</param>
        <param name="callback"><see cref="T:System.AsyncCallback" /> 委派，這個委派會接收完成非同步關閉作業的通知。</param>
        <param name="state">應用程式所指定的物件，其中包含與非同步關閉作業關聯的狀態資訊。</param>
        <summary>開始非同步作業，關閉有已指定逾時的通訊物件。</summary>
        <returns>參考非同步關閉作業的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可以在指定的時間間隔內，將 <xref:System.ServiceModel.Channels.CommunicationObject> 從 <xref:System.ServiceModel.CommunicationState.Closed> 狀態以外的任何狀態順利轉換至 <xref:System.ServiceModel.CommunicationState.Closed> 狀態。  <xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A> 方法可讓任何未完成的工作在傳回前完成  (例如，完成傳送任何經過緩衝處理的訊息)。 如果通訊物件一開始處於 <xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> 狀態，這個方法就會呼叫 <xref:System.ServiceModel.CommunicationState.Opened>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginOpen">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>開始非同步作業以開啟通訊物件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginOpen(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOpen : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginOpen : AsyncCallback * obj -&gt; IAsyncResult" Usage="communicationObject.BeginOpen (callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步開啟作業完成的通知。</param>
        <param name="state">應用程式所指定的物件，其中包含與非同步開啟作業相關聯的狀態資訊。</param>
        <summary>開始非同步作業以開啟通訊物件。</summary>
        <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果通訊物件一開始處於 <xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> 狀態，<xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A> 方法就會呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> 和 <xref:System.ServiceModel.CommunicationState.Created>。  
  
 若要在通訊物件因為叫用同步 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 作業而轉換至關閉狀態後插入處理，請使用 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="communicationObject.BeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成傳送作業。</param>
        <param name="callback"><see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步開啟作業完成的通知。</param>
        <param name="state">應用程式所指定的物件，其中包含與非同步開啟作業相關聯的狀態資訊。</param>
        <summary>開始非同步作業，開啟有已指定時間間隔的通訊物件。</summary>
        <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果通訊物件一開始處於 <xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> 狀態，<xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A> 方法就會呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> 和 <xref:System.ServiceModel.CommunicationState.Created>。  
  
 若要在通訊物件因為叫用同步 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 作業而轉換至關閉狀態後插入處理，請使用 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>導致通訊物件從目前的狀態轉換為已關閉狀態。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="communicationObject.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.ICommunicationObject.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>導致通訊物件從目前的狀態轉換為已關閉狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會讓 <xref:System.ServiceModel.Channels.CommunicationObject> 從 <xref:System.ServiceModel.CommunicationState.Closed> 狀態以外的任何狀態順利轉換至 <xref:System.ServiceModel.CommunicationState.Closed> 狀態。 <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A> 方法可讓任何未完成的工作在傳回前完成  (例如，完成傳送任何經過緩衝處理的訊息)。  
  
 在呼叫 <xref:System.ServiceModel.Channels.CommunicationObject> 方法後，<xref:System.ServiceModel.CommunicationState.Closing> 會進入並維持 <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A> 狀態，直到轉換至 <xref:System.ServiceModel.CommunicationState.Closed> 狀態完成為止。 轉換包含對於 <xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A>、<xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29> 和 <xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A> 進行後續呼叫。  
  
 也有非同步的方式可用於關閉方法，亦即藉由呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A> 啟始。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Close : TimeSpan -&gt; unit&#xA;override this.Close : TimeSpan -&gt; unit" Usage="communicationObject.Close timeout" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成關閉作業。</param>
        <summary>在指定時間間隔內，讓通訊物件從目前的狀態轉換為已關閉狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可在指定時間間隔內，將 <xref:System.ServiceModel.Channels.CommunicationObject> 從 <xref:System.ServiceModel.CommunicationState.Closed> 狀態以外的任何狀態順利轉換至 <xref:System.ServiceModel.CommunicationState.Closed> 狀態。 <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A> 方法可讓任何未完成的工作在傳回前完成  (例如，完成傳送任何經過緩衝處理的訊息)。  
  
 在呼叫 <xref:System.ServiceModel.Channels.CommunicationObject> 方法後，<xref:System.ServiceModel.CommunicationState.Closing> 會進入並維持 <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A> 狀態，直到轉換至 <xref:System.ServiceModel.CommunicationState.Closed> 狀態完成為止。 轉換包含對於 <xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A>、<xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29> 和 <xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A> 進行後續呼叫。  
  
 也有非同步的方式可用於關閉方法，亦即藉由呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A> 啟始。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ServiceModel.ICommunicationObject.Closed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當通訊物件轉換至已關閉狀態時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.CommunicationObject.Closed> 事件會由 <xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A> 方法引發，而此方法是由 <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A> 和 <xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A> 方法所呼叫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="public event EventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : EventHandler " Usage="member this.Closing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ServiceModel.ICommunicationObject.Closing</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當通訊物件轉換至關閉狀態時就會發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.CommunicationObject.Closing> 事件會由 <xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A> 方法引發，而此方法是由 <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A> 和 <xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A> 方法所呼叫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected internal abstract TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCloseTimeout : TimeSpan" Usage="System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得提供用來讓關閉作業完成的預設時間間隔。</summary>
        <value>預設 <see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成關閉作業。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected internal abstract TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOpenTimeout : TimeSpan" Usage="System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得提供用來讓開啟作業完成的預設時間間隔。</summary>
        <value>預設 <see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成開啟作業。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndClose">
      <MemberSignature Language="C#" Value="public void EndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndClose : IAsyncResult -&gt; unit&#xA;override this.EndClose : IAsyncResult -&gt; unit" Usage="communicationObject.EndClose result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />，在呼叫 <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> 方法時所傳回。</param>
        <summary>完成非同步作業以關閉通訊物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A> 方法會提供這個方法的同步版本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndOpen">
      <MemberSignature Language="C#" Value="public void EndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOpen : IAsyncResult -&gt; unit&#xA;override this.EndOpen : IAsyncResult -&gt; unit" Usage="communicationObject.EndOpen result" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />，在呼叫 <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> 方法時所傳回。</param>
        <summary>完成非同步作業以開啟通訊物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 方法會提供這個方法的同步版本。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
      </Docs>
    </Member>
    <Member MemberName="Fault">
      <MemberSignature Language="C#" Value="protected void Fault ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Fault() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Fault ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Fault();" />
      <MemberSignature Language="F#" Value="member this.Fault : unit -&gt; unit" Usage="communicationObject.Fault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>導致通訊物件從目前的狀態轉換為錯誤狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.CommunicationObject.Faulted> 會由 <xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A> 方法引發，而此方法是由 <xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A> 方法所呼叫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Faulted">
      <MemberSignature Language="C#" Value="public event EventHandler Faulted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Faulted" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Faulted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Faulted;" />
      <MemberSignature Language="F#" Value="member this.Faulted : EventHandler " Usage="member this.Faulted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ServiceModel.ICommunicationObject.Faulted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當通訊物件轉換至錯誤狀態時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.CommunicationObject.Faulted> 會由 <xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A> 方法引發，而此方法是由 <xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A> 方法所呼叫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommunicationObjectType">
      <MemberSignature Language="C#" Value="protected virtual Type GetCommunicationObjectType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetCommunicationObjectType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCommunicationObjectType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetCommunicationObjectType();" />
      <MemberSignature Language="F#" Value="abstract member GetCommunicationObjectType : unit -&gt; Type&#xA;override this.GetCommunicationObjectType : unit -&gt; Type" Usage="communicationObject.GetCommunicationObjectType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得通訊物件的型別。</summary>
        <returns>通訊物件的型別。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="protected bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示是否已經處置通訊物件。</summary>
        <value>如果通訊物件處於已關閉狀態，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當發生 <xref:System.ServiceModel.Channels.CommunicationObject.Closed> 事件時，就會將物件視為已處置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAbort">
      <MemberSignature Language="C#" Value="protected abstract void OnAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.OnAbort" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnAbort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnAbort();" />
      <MemberSignature Language="F#" Value="abstract member OnAbort : unit -&gt; unit" Usage="communicationObject.OnAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在通訊物件上插入處理 (當它因為叫用同步中止作業而轉換到關閉狀態之後)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果通訊物件尚未處於 <xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A> 狀態，<xref:System.ServiceModel.Channels.CommunicationObject.OnAbort%2A> 方法就會呼叫 <xref:System.ServiceModel.CommunicationState.Closed>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginClose">
      <MemberSignature Language="C#" Value="protected abstract IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnBeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract IAsyncResult ^ OnBeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="communicationObject.OnBeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">指定必須在逾時前完成關閉作業之寬限時間的 <see cref="T:System.TimeSpan" />。</param>
        <param name="callback"><see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步關閉作業完成的通知。</param>
        <param name="state">應用程式所指定的物件，其中包含與非同步關閉作業相關的狀態資訊。</param>
        <summary>在通訊物件因為叫用非同步關閉作業而轉換到關閉狀態後，插入處理。</summary>
        <returns><see cref="T:System.IAsyncResult" />，參考非同步關閉作業。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果通訊物件一開始處於 <xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A> 狀態，<xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A> 方法就會呼叫 <xref:System.ServiceModel.CommunicationState.Opened>。  
  
 若要在通訊物件因為叫用同步 <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A> 作業而轉換至關閉狀態後插入處理，請使用 <xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnBeginOpen">
      <MemberSignature Language="C#" Value="protected abstract IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnBeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract IAsyncResult ^ OnBeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="communicationObject.OnBeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成開啟作業。</param>
        <param name="callback"><see cref="T:System.AsyncCallback" /> 委派，這個委派會接收非同步開啟作業完成的通知。</param>
        <param name="state">應用程式所指定的物件，其中包含與非同步開啟作業相關的狀態資訊。</param>
        <summary>在通訊物件上插入處理 (當它因為叫用非同步開啟作業而轉換到開啟狀態之後)。</summary>
        <returns>參考非同步開啟作業的 <see cref="T:System.IAsyncResult" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要在通訊物件因為叫用同步 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 作業而轉換至開啟狀態後插入處理，請使用 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="protected abstract void OnClose (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClose(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnClose (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnClose(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member OnClose : TimeSpan -&gt; unit" Usage="communicationObject.OnClose timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">指定必須在逾時前完成關閉作業之寬限時間的 <see cref="T:System.TimeSpan" />。</param>
        <summary>在通訊物件上插入處理 (當它因為叫用同步關閉作業而轉換到關閉狀態之後)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果通訊物件一開始處於 <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A> 狀態，<xref:System.ServiceModel.Channels.CommunicationObject.OnClose%2A> 方法就會呼叫 <xref:System.ServiceModel.CommunicationState.Opened>。  
  
 若要在通訊物件因為叫用非同步 <xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A> 作業而轉換至關閉狀態後插入處理，請使用 <xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">已針對處於 <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> 狀態中的物件呼叫 <see cref="F:System.ServiceModel.CommunicationState.Faulted" />。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
        <exception cref="T:System.ServiceModel.CommunicationException">關閉物件時發生通訊錯誤。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed();" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : unit -&gt; unit&#xA;override this.OnClosed : unit -&gt; unit" Usage="communicationObject.OnClosed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在將通訊物件轉換為關閉狀態期間會叫用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果通訊物件一開始處於 <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A> 狀態，<xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A> 方法就會呼叫 <xref:System.ServiceModel.CommunicationState.Opened>。  
  
 如果通訊物件尚未處於 <xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A> 狀態，<xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A> 方法就會呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29> (和 <xref:System.ServiceModel.CommunicationState.Closed>)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnClosing ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosing() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosing ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosing();" />
      <MemberSignature Language="F#" Value="abstract member OnClosing : unit -&gt; unit&#xA;override this.OnClosing : unit -&gt; unit" Usage="communicationObject.OnClosing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在將通訊物件轉換為關閉狀態期間會叫用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果通訊物件一開始處於 <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A> 狀態，<xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A> 方法就會呼叫 <xref:System.ServiceModel.CommunicationState.Opened>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndClose">
      <MemberSignature Language="C#" Value="protected abstract void OnEndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnEndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnEndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndClose : IAsyncResult -&gt; unit" Usage="communicationObject.OnEndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /> 方法時所傳回。</param>
        <summary>在關閉通訊物件時完成非同步作業。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果通訊物件尚未處於 <xref:System.ServiceModel.Channels.CommunicationObject.EndClose%28System.IAsyncResult%29> 狀態，<xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29> 方法就會呼叫 <xref:System.ServiceModel.CommunicationState.Closed>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnEndOpen">
      <MemberSignature Language="C#" Value="protected abstract void OnEndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnEndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnEndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndOpen : IAsyncResult -&gt; unit" Usage="communicationObject.OnEndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" />，在呼叫 <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /> 方法時所傳回。</param>
        <summary>在開啟通訊物件時完成非同步作業。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A> 方法會呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.OnEndOpen%2A> (和 <xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A>)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnFaulted">
      <MemberSignature Language="C#" Value="protected virtual void OnFaulted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFaulted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFaulted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFaulted();" />
      <MemberSignature Language="F#" Value="abstract member OnFaulted : unit -&gt; unit&#xA;override this.OnFaulted : unit -&gt; unit" Usage="communicationObject.OnFaulted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在通訊物件上插入處理 (當它因為叫用同步錯誤作業而轉換到錯誤狀態之後)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.CommunicationObject.Faulted> 會由 <xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A> 方法引發，而此方法是由 <xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A> 方法所呼叫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpen">
      <MemberSignature Language="C#" Value="protected abstract void OnOpen (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpen(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnOpen (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnOpen(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member OnOpen : TimeSpan -&gt; unit" Usage="communicationObject.OnOpen timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成開啟作業。</param>
        <summary>在通訊物件上插入處理 (當它轉換到開啟狀態之後)，此作業必須在指定的時間間隔內完成。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果通訊物件一開始處於 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 狀態，<xref:System.ServiceModel.Channels.CommunicationObject.OnOpen%28System.TimeSpan%29> 方法就會呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A> (在呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A> 之後，並且在呼叫 <xref:System.ServiceModel.CommunicationState.Created> 之前)。  
  
 若要在通訊物件因為叫用非同步 <xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> 作業而轉換至開啟狀態時插入處理，請使用 <xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnOpened ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpened() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.OnOpened" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpened ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpened();" />
      <MemberSignature Language="F#" Value="abstract member OnOpened : unit -&gt; unit&#xA;override this.OnOpened : unit -&gt; unit" Usage="communicationObject.OnOpened " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在將通訊物件轉換至已開啟狀態期間會叫用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這提供了一種方式，可以在 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 和 <xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A> 方法呼叫處理時新增處理。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpening">
      <MemberSignature Language="C#" Value="protected virtual void OnOpening ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpening ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpening();" />
      <MemberSignature Language="F#" Value="abstract member OnOpening : unit -&gt; unit&#xA;override this.OnOpening : unit -&gt; unit" Usage="communicationObject.OnOpening " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在將通訊物件轉換至開啟狀態期間會叫用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這提供了一種方式，可以在 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 和 <xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A> 方法呼叫處理時新增處理。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>導致通訊物件從已建立狀態轉換為已開啟狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 方法時，這個方法會使 <xref:System.ServiceModel.Channels.CommunicationObject> 進入 <xref:System.ServiceModel.CommunicationState.Opening> 狀態並呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A>、<xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 和 <xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A>。  <xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A> 方法會將物件的狀態設定為 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 狀態，藉此完成 <xref:System.ServiceModel.CommunicationState.Opened> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit&#xA;override this.Open : unit -&gt; unit" Usage="communicationObject.Open " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.ICommunicationObject.Open</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>導致通訊物件從已建立狀態轉換為已開啟狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當具現化 <xref:System.ServiceModel.Channels.CommunicationObject> 時，它一開始會處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態。 在 <xref:System.ServiceModel.CommunicationState.Created> 狀態下，可以設定物件 (例如可以設定屬性或註冊事件)，但是仍無法傳送或接收訊息。 呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 方法時，這個方法會使 <xref:System.ServiceModel.Channels.CommunicationObject> 進入 <xref:System.ServiceModel.CommunicationState.Opening> 狀態並呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A>、<xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 和 <xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A>。 <xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A> 方法會將物件的狀態設定為 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 狀態，藉此完成 <xref:System.ServiceModel.CommunicationState.Opened> 方法。  
  
 在  
  
 <xref:System.ServiceModel.CommunicationState.Opened> 狀態下，<xref:System.ServiceModel.Channels.CommunicationObject> 可供使用 (例如可以接受訊息)，但是無法再進行設定。  
  
 也有非同步的方式可用於開啟方法，亦即藉由呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> 啟始，呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A> 完成。  
  
### <a name="credentials-capture-with-windows-authentication"></a>Windows 驗證的憑證擷取  
 當使用 Windows 驗證時，服務會根據目前的內容執行緒使用認證。 當呼叫 `Open` 方法時會取得認證。  
  
> [!NOTE]
>  如果是非同步呼叫，當叫用 <xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A> 時會擷取認證。 然而，這無法保證是實際的認證。 也就是說，呼叫者的認證可能會切換為其他身分識別。 如需詳細資訊，請參閱 < [Windows 用戶端訊息安全性](~/docs/framework/wcf/feature-details/message-security-with-a-windows-client.md)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
        <altmember cref="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
        <related type="Article" href="https://msdn.microsoft.com/library/01e7d0b8-10f9-45c3-a4c5-53d44dc61eb8">Windows 用戶端的訊息安全性</related>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Open(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Open : TimeSpan -&gt; unit&#xA;override this.Open : TimeSpan -&gt; unit" Usage="communicationObject.Open timeout" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" />，指定必須在逾時前多久完成開啟作業。</param>
        <summary>在指定時間間隔內，讓通訊物件從已建立狀態轉換為已開啟狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當具現化 <xref:System.ServiceModel.Channels.CommunicationObject> 時，它一開始會處於 <xref:System.ServiceModel.CommunicationState.Created> 狀態。 在 <xref:System.ServiceModel.CommunicationState.Created> 狀態下，可以設定物件 (例如可以設定屬性或註冊事件)，但是仍無法傳送或接收訊息。 呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 方法時，這個方法會使 <xref:System.ServiceModel.Channels.CommunicationObject> 進入 <xref:System.ServiceModel.CommunicationState.Opening> 狀態並呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A>、<xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 和 <xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A>。  <xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A> 方法會將物件的狀態設定為 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 狀態，藉此完成 <xref:System.ServiceModel.CommunicationState.Opened> 方法。  
  
 在  
  
 <xref:System.ServiceModel.CommunicationState.Opened> 狀態下，<xref:System.ServiceModel.Channels.CommunicationObject> 可供使用 (例如可以接受訊息)，但是無法再進行設定。  
  
 也有非同步的方式可用於開啟方法，亦即藉由呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A> 啟始，呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A> 完成。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件並非處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
        <exception cref="T:System.TimeoutException">已超過為作業分配的預設時間間隔，該作業未完成。</exception>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="public event EventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Opened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : EventHandler " Usage="member this.Opened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ServiceModel.ICommunicationObject.Opened</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當通訊物件轉換至已開啟狀態時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.CommunicationObject.Opened> 事件會由 <xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A> 方法引發，而此方法是由 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 和 <xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A> 方法所呼叫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Opening">
      <MemberSignature Language="C#" Value="public event EventHandler Opening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opening" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Opening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Opening;" />
      <MemberSignature Language="F#" Value="member this.Opening : EventHandler " Usage="member this.Opening : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ServiceModel.ICommunicationObject.Opening</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當通訊物件轉換至開啟狀態時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.CommunicationObject.Opening> 事件會由 <xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A> 方法引發，而此方法是由 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 和 <xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29> 方法所呼叫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.ServiceModel.CommunicationState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.CommunicationState State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CommunicationObject.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As CommunicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::CommunicationState State { System::ServiceModel::CommunicationState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.ServiceModel.CommunicationState" Usage="System.ServiceModel.Channels.CommunicationObject.State" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.ICommunicationObject.State</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.CommunicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示通訊物件目前的狀態。</summary>
        <value><see cref="T:System.ServiceModel.CommunicationState" /> 列舉中的值，表示物件目前的狀態。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThisLock">
      <MemberSignature Language="C#" Value="protected object ThisLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ThisLock" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ThisLock As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ ThisLock { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThisLock : obj" Usage="System.ServiceModel.Channels.CommunicationObject.ThisLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得會在狀態轉換期間保護類別執行個體的互斥鎖定。</summary>
        <value>會在狀態轉換期間保護類別執行個體的互斥鎖定。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfDisposed">
      <MemberSignature Language="C#" Value="protected void ThrowIfDisposed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ThrowIfDisposed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ThrowIfDisposed ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ThrowIfDisposed();" />
      <MemberSignature Language="F#" Value="member this.ThrowIfDisposed : unit -&gt; unit" Usage="communicationObject.ThrowIfDisposed " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果已處置通訊物件，則會擲回例外狀況。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果通訊物件處於 <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening> 或 <xref:System.ServiceModel.CommunicationState.Opened> 狀態，則不會擲回例外狀況。 一旦針對通訊物件呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.Close%2A>，就會處置該物件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfDisposedOrImmutable">
      <MemberSignature Language="C#" Value="protected void ThrowIfDisposedOrImmutable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ThrowIfDisposedOrImmutable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ThrowIfDisposedOrImmutable ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ThrowIfDisposedOrImmutable();" />
      <MemberSignature Language="F#" Value="member this.ThrowIfDisposedOrImmutable : unit -&gt; unit" Usage="communicationObject.ThrowIfDisposedOrImmutable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果通訊物件的 <see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /> 屬性並未設定為 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 狀態，就會擲回例外狀況。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因為針對物件呼叫 <xref:System.ServiceModel.Channels.CommunicationObject.Open%2A> 後，物件就無法變更，所以同時為可變動與未處置的唯一狀態是 <xref:System.ServiceModel.CommunicationState.Created> 狀態。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態中。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態中。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態中。</exception>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfDisposedOrNotOpen">
      <MemberSignature Language="C#" Value="protected void ThrowIfDisposedOrNotOpen ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ThrowIfDisposedOrNotOpen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ThrowIfDisposedOrNotOpen ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ThrowIfDisposedOrNotOpen();" />
      <MemberSignature Language="F#" Value="member this.ThrowIfDisposedOrNotOpen : unit -&gt; unit" Usage="communicationObject.ThrowIfDisposedOrNotOpen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如果通訊物件不是處於 <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 狀態，就會擲回例外狀況。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">通訊物件不是處於 <see cref="F:System.ServiceModel.CommunicationState.Created" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 狀態，無法使用。</exception>
        <exception cref="T:System.ObjectDisposedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Closing" /> 或 <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 狀態，無法修改。</exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">通訊物件處於 <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 狀態，無法修改。</exception>
      </Docs>
    </Member>
  </Members>
</Type>