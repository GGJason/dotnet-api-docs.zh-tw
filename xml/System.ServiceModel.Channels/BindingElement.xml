<Type Name="BindingElement" FullName="System.ServiceModel.Channels.BindingElement">
  <TypeSignature Language="C#" Value="public abstract class BindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BindingElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.BindingElement" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingElement abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c52e9-101">繫結的項目，這些繫結可以建置各種通道型別的通道處理站和通道接聽程式，以用來處理傳出和傳入的訊息。</span><span class="sxs-lookup"><span data-stu-id="c52e9-101">The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52e9-102">由繼承自這個抽象基底類別之已排序繫結項目集合所組成的繫結。</span><span class="sxs-lookup"><span data-stu-id="c52e9-102">A binding consists of an ordered set of binding elements that inherit from this abstract base class.</span></span>  <span data-ttu-id="c52e9-103"><xref:System.ServiceModel.Channels.TransportBindingElement> 類別繼承自 <xref:System.ServiceModel.Channels.BindingElement> 類別。</span><span class="sxs-lookup"><span data-stu-id="c52e9-103">The <xref:System.ServiceModel.Channels.TransportBindingElement> class inherits from the <xref:System.ServiceModel.Channels.BindingElement> class.</span></span>  
  
 <span data-ttu-id="c52e9-104">如果您只要使用通道模型，則可選擇性地為您的傳輸建立繫結和繫結項目。</span><span class="sxs-lookup"><span data-stu-id="c52e9-104">Creating a binding and binding element for your transport is optional if you are just using the channel model.</span></span> <span data-ttu-id="c52e9-105">只要通道處理站和接聽程式是公開的，您就可以透過它們來執行各種工作。</span><span class="sxs-lookup"><span data-stu-id="c52e9-105">It is possible to do everything you need through the channel factory and listener as long as they are made public.</span></span>  
  
 <span data-ttu-id="c52e9-106">[!INCLUDE[indigo1](~/includes/indigo1-md.md)] 服務模型會使用處理站模式，其中繫結會用來建立通道堆疊。</span><span class="sxs-lookup"><span data-stu-id="c52e9-106">The [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service model uses a factory pattern where the binding is used to create the channel stack.</span></span> <span data-ttu-id="c52e9-107">如果您想要使用 WCF 服務模型，則需要使用傳輸繫結項目。</span><span class="sxs-lookup"><span data-stu-id="c52e9-107">If you want to use the WCF service model, then using a transport binding element is required.</span></span> <span data-ttu-id="c52e9-108">將此繫結程序項目放入繫結程序是最好的做法，因為這樣使用者就不需要為您的傳輸建立自己的自訂繫結程序。</span><span class="sxs-lookup"><span data-stu-id="c52e9-108">Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport.</span></span> <span data-ttu-id="c52e9-109">最好同時建立繫結和繫結項目，並將通道處理站和接聽程式隱藏在組件中。</span><span class="sxs-lookup"><span data-stu-id="c52e9-109">It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.</span></span>  
  
 <span data-ttu-id="c52e9-110">在傳送端，繫結會用來建置 <xref:System.ServiceModel.Channels.IChannelFactory>，而此處理站會接著建置通道堆疊，並傳回在堆疊中頂端通道的參考。</span><span class="sxs-lookup"><span data-stu-id="c52e9-110">On the sending side, a binding is used to build a <xref:System.ServiceModel.Channels.IChannelFactory>, which in turn builds a channel stack and returns a reference to the top channel in the stack.</span></span> <span data-ttu-id="c52e9-111">應用程式可以接著使用這個通道來傳送訊息。</span><span class="sxs-lookup"><span data-stu-id="c52e9-111">The application can then use this channel to send messages.</span></span>  
  
 <span data-ttu-id="c52e9-112">同樣地，在接收端，繫結會用來建置 <xref:System.ServiceModel.Channels.IChannelListener>，而此接聽程式會接聽傳入訊息。</span><span class="sxs-lookup"><span data-stu-id="c52e9-112">Similarly, on the receiving side a binding is used to build a <xref:System.ServiceModel.Channels.IChannelListener>, which listens for incoming messages.</span></span> <span data-ttu-id="c52e9-113"><xref:System.ServiceModel.Channels.IChannelListener> 會透過建立通道堆疊並將應用程式參考傳遞至頂端通道的方式，來提供訊息給接聽應用程式。</span><span class="sxs-lookup"><span data-stu-id="c52e9-113">The <xref:System.ServiceModel.Channels.IChannelListener> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.</span></span> <span data-ttu-id="c52e9-114">應用程式可以接著使用這個通道來接收傳入訊息。</span><span class="sxs-lookup"><span data-stu-id="c52e9-114">The application then uses this channel to receive incoming messages.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c52e9-115">如果您要將加密的訊息標頭必須是您必須傳回<xref:System.ServiceModel.Security.ChannelProtectionRequirements>的執行個體與您的需求，從<xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29>方法要求時<xref:System.ServiceModel.Security.ChannelProtectionRequirements>。</span><span class="sxs-lookup"><span data-stu-id="c52e9-115">If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from the <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c52e9-116">下列範例顯示如何新增傳輸繫結項目至自訂繫結，並接著建置可以接收傳入訊息的通道接聽程式。</span><span class="sxs-lookup"><span data-stu-id="c52e9-116">The following example shows how to add a transport binding element to a custom binding and then build a channel listener that can accept incoming messages.</span></span>  
  
 [!code-csharp[S_UEChannels#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#1)]
 [!code-vb[S_UEChannels#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uechannels/vb/servicesnippets.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c52e9-117">初始化 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="c52e9-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c52e9-118">初始化 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="c52e9-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BindingElement (System.ServiceModel.Channels.BindingElement elementToBeCloned);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.BindingElement elementToBeCloned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (elementToBeCloned As BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BindingElement(System::ServiceModel::Channels::BindingElement ^ elementToBeCloned);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementToBeCloned" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="elementToBeCloned"><span data-ttu-id="c52e9-119">要複製的 <see cref="T:System.ServiceModel.Channels.BindingElement" />。</span><span class="sxs-lookup"><span data-stu-id="c52e9-119">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be cloned.</span></span></param>
        <summary><span data-ttu-id="c52e9-120">從指定的繫結項目初始化 <see cref="T:System.ServiceModel.Channels.BindingElement" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="c52e9-120">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class from a specified binding element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="c52e9-121">處理站建置之通道的型別。</span><span class="sxs-lookup"><span data-stu-id="c52e9-121">The type of channel the factory builds.</span></span></typeparam>
        <param name="context"><span data-ttu-id="c52e9-122"><see cref="T:System.ServiceModel.Channels.BindingContext" />，其中提供繫結項目的內容。</span><span class="sxs-lookup"><span data-stu-id="c52e9-122">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="c52e9-123">初始化通道處理站，以便從繫結內容產生指定型別的通道。</span><span class="sxs-lookup"><span data-stu-id="c52e9-123">Initializes a channel factory for producing channels of a specified type from the binding context.</span></span></summary>
        <returns><span data-ttu-id="c52e9-124"><see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> 型別的 <paramref name="TChannel" />，是從 <paramref name="context" />初始化的。</span><span class="sxs-lookup"><span data-stu-id="c52e9-124">The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> initialized from the <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c52e9-125"><paramref name="context" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c52e9-125"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="c52e9-126">已建置接聽程式要接受的通道型別。</span><span class="sxs-lookup"><span data-stu-id="c52e9-126">The type of channel the listener is built to accept.</span></span></typeparam>
        <param name="context"><span data-ttu-id="c52e9-127"><see cref="T:System.ServiceModel.Channels.BindingContext" />，其中提供繫結項目的內容。</span><span class="sxs-lookup"><span data-stu-id="c52e9-127">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="c52e9-128">初始化通道接聽程式，以便從繫結內容接受指定之型別的通道。</span><span class="sxs-lookup"><span data-stu-id="c52e9-128">Initializes a channel listener to accept channels of a specified type from the binding context.</span></span></summary>
        <returns><span data-ttu-id="c52e9-129"><see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 型別的 <see cref="T:System.ServiceModel.Channels.IChannel" />，是從 <paramref name="context" />初始化的。</span><span class="sxs-lookup"><span data-stu-id="c52e9-129">The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c52e9-130"><paramref name="context" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c52e9-130"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="c52e9-131">通道處理站所產生之通道的型別。</span><span class="sxs-lookup"><span data-stu-id="c52e9-131">The type of channel the channel factory produces.</span></span></typeparam>
        <param name="context"><span data-ttu-id="c52e9-132"><see cref="T:System.ServiceModel.Channels.BindingContext" />，其中提供繫結項目的內容。</span><span class="sxs-lookup"><span data-stu-id="c52e9-132">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="c52e9-133">傳回值，指出繫結項目是否可以建置特定通道型別的通道處理站。</span><span class="sxs-lookup"><span data-stu-id="c52e9-133">Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</span></span></summary>
        <returns>
          <span data-ttu-id="c52e9-134">如果繫結項目可以建置 <paramref name="TChannel" /> 型別的 <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c52e9-134"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52e9-135">如果您要在嘗試建置處理站之前，先檢查是否可以針對提供的 `TChannel` 建置 `context` 型別之通道的通道處理站，請使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="c52e9-135">Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the `context` provided before attempting to build the factory.</span></span> <span data-ttu-id="c52e9-136">或者，請呼叫 <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> 來建置通道處理站並攔截產生的例外狀況 (如果無法建置的話)。</span><span class="sxs-lookup"><span data-stu-id="c52e9-136">Alternatively, build the channel factory by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> and catch the exception generated if it cannot be built.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c52e9-137"><paramref name="context" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c52e9-137"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="c52e9-138">接聽程式接受的通道型別。</span><span class="sxs-lookup"><span data-stu-id="c52e9-138">The type of channel the listener accepts.</span></span></typeparam>
        <param name="context"><span data-ttu-id="c52e9-139"><see cref="T:System.ServiceModel.Channels.BindingContext" />，其中提供繫結項目的內容。</span><span class="sxs-lookup"><span data-stu-id="c52e9-139">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="c52e9-140">傳回值，指出繫結項目是否可以建置特定通道型別的通道接聽程式。</span><span class="sxs-lookup"><span data-stu-id="c52e9-140">Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</span></span></summary>
        <returns>
          <span data-ttu-id="c52e9-141">如果繫結項目可以建置 <see cref="T:System.ServiceModel.Channels.IChannel" /> 型別的 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c52e9-141"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52e9-142">如果您要在嘗試建置接聽項之前，先檢查是否可以針對提供的 `TChannel` 建置 `context` 型別之通道的通道接聽項，請使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="c52e9-142">Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the `context` provided before attempting to build the listener.</span></span> <span data-ttu-id="c52e9-143">或者，請呼叫 <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> 來建置通道接聽程式並攔截產生的例外狀況 (如果無法建置的話)。</span><span class="sxs-lookup"><span data-stu-id="c52e9-143">Alternatively, build the channel listener by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> and catch the exception generated if it cannot be built.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c52e9-144"><paramref name="context" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c52e9-144"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c52e9-145">在衍生類別中覆寫時，傳回繫結項目物件的複本。</span><span class="sxs-lookup"><span data-stu-id="c52e9-145">When overridden in a derived class, returns a copy of the binding element object.</span></span></summary>
        <returns><span data-ttu-id="c52e9-146"><see cref="T:System.ServiceModel.Channels.BindingElement" /> 物件，其為原始物件的深層複製。</span><span class="sxs-lookup"><span data-stu-id="c52e9-146">A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object that is a deep clone of the original.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52e9-147">實作 <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> 方法，以傳回繫結項目的深層複製。</span><span class="sxs-lookup"><span data-stu-id="c52e9-147">Implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> method to return a deep clone of your binding element.</span></span> <span data-ttu-id="c52e9-148">傳回複製可讓執行階段支援多個自訂繫結共用自訂繫結項目的情況。</span><span class="sxs-lookup"><span data-stu-id="c52e9-148">Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</span></span> <span data-ttu-id="c52e9-149">如果沒有傳回複製，則表示執行階段行為尚未定義。</span><span class="sxs-lookup"><span data-stu-id="c52e9-149">If a clone is not returned, the run-time behavior is undefined.</span></span>  
  
 <span data-ttu-id="c52e9-150">物件的深層複製會建立物件的複本，以及該物件直接或間接參考之每個物件的複本，</span><span class="sxs-lookup"><span data-stu-id="c52e9-150">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="c52e9-151">(這也稱為複製整個物件圖形)。相較之下，物件的淺層複製則只是物件的複本。</span><span class="sxs-lookup"><span data-stu-id="c52e9-151">(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="c52e9-152">如果物件包含其他物件的參考，則淺層複製不會建立所參考之物件的複本，而只會複製原始物件的參考。</span><span class="sxs-lookup"><span data-stu-id="c52e9-152">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class abstract T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="c52e9-153">此方法所查詢的型別物件。</span><span class="sxs-lookup"><span data-stu-id="c52e9-153">The typed object for which the method is querying.</span></span></typeparam>
        <param name="context"><span data-ttu-id="c52e9-154">繫結項目的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span><span class="sxs-lookup"><span data-stu-id="c52e9-154">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</span></span></param>
        <summary><span data-ttu-id="c52e9-155">在衍生類別中覆寫時，從繫結堆疊的適當層次中，傳回要求的型別物件 (如果有的話)。</span><span class="sxs-lookup"><span data-stu-id="c52e9-155">When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</span></span></summary>
        <returns><span data-ttu-id="c52e9-156">要求的型別物件 <paramref name="T" /> (如果存在的話)，如果不存在則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c52e9-156">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not present.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c52e9-157">請用它從繫結程序項目堆疊擷取功能、需求和參數。</span><span class="sxs-lookup"><span data-stu-id="c52e9-157">Use this to retrieve capabilities, requirements and parameters from the binding element stack.</span></span> <span data-ttu-id="c52e9-158">如果某個繫結項目支援傳回要求的物件，它就會傳回物件。</span><span class="sxs-lookup"><span data-stu-id="c52e9-158">If a binding element supports returning the requested object, it returns it.</span></span> <span data-ttu-id="c52e9-159">如果不支援，則會將該呼叫向下委派到堆疊中的下一個繫結項目。</span><span class="sxs-lookup"><span data-stu-id="c52e9-159">If not, it delegates the call down to the next binding element in the stack.</span></span> <span data-ttu-id="c52e9-160">如果到達堆疊的底部，而且沒有任何繫結項目支援要求的物件，則該方法會傳回 `null`。</span><span class="sxs-lookup"><span data-stu-id="c52e9-160">If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c52e9-161">如果要加入必須加密的訊息標頭，您必須在要求 <xref:System.ServiceModel.Security.ChannelProtectionRequirements> 時從這個方法傳回符合您要求的 <xref:System.ServiceModel.Security.ChannelProtectionRequirements> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="c52e9-161">If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from this method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>