<Type Name="MsmqBindingElementBase" FullName="System.ServiceModel.Channels.MsmqBindingElementBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="41f9f7bdede709a78741d0975de72ca8544e28a3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MsmqBindingElementBase : System.ServiceModel.Channels.TransportBindingElement, System.ServiceModel.Channels.ITransactedBindingElement, System.ServiceModel.Description.IPolicyExportExtension, System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MsmqBindingElementBase extends System.ServiceModel.Channels.TransportBindingElement implements class System.ServiceModel.Channels.ITransactedBindingElement, class System.ServiceModel.Description.IPolicyExportExtension, class System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.MsmqBindingElementBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MsmqBindingElementBase&#xA;Inherits TransportBindingElement&#xA;Implements IPolicyExportExtension, ITransactedBindingElement, IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MsmqBindingElementBase abstract : System::ServiceModel::Channels::TransportBindingElement, System::ServiceModel::Channels::ITransactedBindingElement, System::ServiceModel::Description::IPolicyExportExtension, System::ServiceModel::Description::IWsdlExportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.TransportBindingElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.ITransactedBindingElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IPolicyExportExtension</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IWsdlExportExtension</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="3c59b-101">
        <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement" /> 與 <see cref="T:System.ServiceModel.Channels.MsmqTransportBindingElement" /> 的基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3c59b-101">The base class for <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBindingElement" /> and <see cref="T:System.ServiceModel.Channels.MsmqTransportBindingElement" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CustomDeadLetterQueue">
      <MemberSignature Language="C#" Value="public Uri CustomDeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CustomDeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqBindingElementBase.CustomDeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomDeadLetterQueue As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CustomDeadLetterQueue { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c59b-102">取得或設定 <see cref="T:System.Uri" />，這個項目會識別自訂的寄不出信件佇列，其中將會傳送無法傳遞的逾期訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-102">Gets or sets a <see cref="T:System.Uri" /> that identifies a custom dead-letter queue where expired messages or messages that failed to be delivered are sent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c59b-103">自訂寄不出的信件佇列的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-103">The URI of the custom dead-letter queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c59b-104">寄不出的信件佇列是由傳送應用程式的佇列管理員來管理的佇列，這個佇列會儲存無法傳遞或逾期的訊息。</span><span class="sxs-lookup"><span data-stu-id="3c59b-104">A dead-letter queue is a queue managed by the sending application's queue manager that stores messages that have failed to be delivered or have expired.</span></span> <span data-ttu-id="3c59b-105"><xref:System.ServiceModel.Channels.MsmqBindingElementBase.CustomDeadLetterQueue%2A> 屬性可讓您指定自訂的寄不出信件佇列，而非使用整個系統的預設寄不出信件佇列。</span><span class="sxs-lookup"><span data-stu-id="3c59b-105">The <xref:System.ServiceModel.Channels.MsmqBindingElementBase.CustomDeadLetterQueue%2A> property allows you to specify a custom dead-letter queue rather than using the default system-wide dead-letter queue.</span></span>  
  
 <span data-ttu-id="3c59b-106">由 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.CustomDeadLetterQueue%2A> 指定的 URI 必須使用 `net.msmq scheme`。</span><span class="sxs-lookup"><span data-stu-id="3c59b-106">The URI that is specified by <xref:System.ServiceModel.Channels.MsmqBindingElementBase.CustomDeadLetterQueue%2A> must use the `net.msmq scheme`.</span></span>  
  
 <span data-ttu-id="3c59b-107">如果 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.DeadLetterQueue%2A> 設定為 <xref:System.ServiceModel.DeadLetterQueue.None> 或 <xref:System.ServiceModel.DeadLetterQueue.System>，則 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.CustomDeadLetterQueue%2A> 必須設定為 `null`。</span><span class="sxs-lookup"><span data-stu-id="3c59b-107">If <xref:System.ServiceModel.Channels.MsmqBindingElementBase.DeadLetterQueue%2A> is set to <xref:System.ServiceModel.DeadLetterQueue.None> or <xref:System.ServiceModel.DeadLetterQueue.System>, then <xref:System.ServiceModel.Channels.MsmqBindingElementBase.CustomDeadLetterQueue%2A> must be set to `null`.</span></span> <span data-ttu-id="3c59b-108">如果 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.CustomDeadLetterQueue%2A> 不是 `null`，則 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.DeadLetterQueue%2A> 必須設定為 <xref:System.ServiceModel.DeadLetterQueue.Custom>。</span><span class="sxs-lookup"><span data-stu-id="3c59b-108">If <xref:System.ServiceModel.Channels.MsmqBindingElementBase.CustomDeadLetterQueue%2A> is not `null`, then <xref:System.ServiceModel.Channels.MsmqBindingElementBase.DeadLetterQueue%2A> must be set to <xref:System.ServiceModel.DeadLetterQueue.Custom>.</span></span>  
  
 <span data-ttu-id="3c59b-109">從 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.CustomDeadLetterQueue%2A> 之後的作業系統上才能設定 [!INCLUDE[wv](~/includes/wv-md.md)] 屬性。</span><span class="sxs-lookup"><span data-stu-id="3c59b-109">The <xref:System.ServiceModel.Channels.MsmqBindingElementBase.CustomDeadLetterQueue%2A> property can be set only on operating systems starting with [!INCLUDE[wv](~/includes/wv-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeadLetterQueue">
      <MemberSignature Language="C#" Value="public System.ServiceModel.DeadLetterQueue DeadLetterQueue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.DeadLetterQueue DeadLetterQueue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqBindingElementBase.DeadLetterQueue" />
      <MemberSignature Language="VB.NET" Value="Public Property DeadLetterQueue As DeadLetterQueue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::DeadLetterQueue DeadLetterQueue { System::ServiceModel::DeadLetterQueue get(); void set(System::ServiceModel::DeadLetterQueue value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.DeadLetterQueue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c59b-110">取得或設定這個繫結的 <see cref="T:System.ServiceModel.DeadLetterQueue" /> 設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-110">Gets or sets the <see cref="T:System.ServiceModel.DeadLetterQueue" /> setting for this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c59b-111">要使用的寄不出的信件佇列型別 (如果有的話)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-111">The type of dead-letter queue to use, if any.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c59b-112">寄不出的信件佇列是由傳送應用程式的佇列管理員來管理的佇列，這個佇列會儲存無法傳遞或逾期的訊息。</span><span class="sxs-lookup"><span data-stu-id="3c59b-112">The dead-letter queue is a queue managed by the sending application's queue manager that stores messages that have failed to be delivered or have expired.</span></span> <span data-ttu-id="3c59b-113">訊息可能會因為下列任何一個原因而無法到達接收應用程式：</span><span class="sxs-lookup"><span data-stu-id="3c59b-113">The reasons that a message can fail to reach the receiving application include:</span></span>  
  
-   <span data-ttu-id="3c59b-114">異動式訊息已傳送至非異動式佇列。</span><span class="sxs-lookup"><span data-stu-id="3c59b-114">A transactional message is sent to a non-transactional queue.</span></span>  
  
-   <span data-ttu-id="3c59b-115">非交易式訊息已傳送至交易式佇列。</span><span class="sxs-lookup"><span data-stu-id="3c59b-115">A non-transactional message is sent to a transactional queue.</span></span>  
  
-   <span data-ttu-id="3c59b-116">未經驗證的訊息已傳送至僅接受經過驗證之訊息的佇列。</span><span class="sxs-lookup"><span data-stu-id="3c59b-116">An unauthenticated message is sent to a queue that accepts only authenticated messages.</span></span>  
  
-   <span data-ttu-id="3c59b-117">未經加密的訊息已傳送至僅接受經過加密之訊息的佇列。</span><span class="sxs-lookup"><span data-stu-id="3c59b-117">An unencrypted message is sent to a queue that accepts only encrypted messages.</span></span>  
  
-   <span data-ttu-id="3c59b-118">訊息在傳送給接收者之前就已逾期。</span><span class="sxs-lookup"><span data-stu-id="3c59b-118">The message expires before the message is delivered to a receiver.</span></span>  
  
-   <span data-ttu-id="3c59b-119">已超出目標電腦的訊息儲存配額或是目的佇列的儲存配額，或者是當訊息送達時，目標電腦上沒有可用的儲存空間。</span><span class="sxs-lookup"><span data-stu-id="3c59b-119">The message storage quota of the target computer or the storage quota of the destination queue is exceeded, or there is no available storage space on the target computer when the message arrives.</span></span>  
  
-   <span data-ttu-id="3c59b-120">寄件者沒有[存取權限](http://go.microsoft.com/fwlink/?LinkId=96167)才能將訊息放在目的端佇列。</span><span class="sxs-lookup"><span data-stu-id="3c59b-120">The sender does not have the [access rights](http://go.microsoft.com/fwlink/?LinkId=96167) required to place the message in the destination queue.</span></span>  
  
-   <span data-ttu-id="3c59b-121">附加到訊息的數位簽章無效。</span><span class="sxs-lookup"><span data-stu-id="3c59b-121">The digital signature attached to the message is not valid.</span></span>  
  
-   <span data-ttu-id="3c59b-122">加密的訊息無法由目的佇列管理員進行解密。</span><span class="sxs-lookup"><span data-stu-id="3c59b-122">An encrypted message cannot be decrypted by the destination queue manager.</span></span>  
  
-   <span data-ttu-id="3c59b-123">擷取訊息前，會清除或刪除目的佇列。</span><span class="sxs-lookup"><span data-stu-id="3c59b-123">The destination queue is purged or deleted before the message is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c59b-124">這個值不在 <see cref="T:System.ServiceModel.DeadLetterQueue" /> 定義的值範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-124">The value is not within the range of values defined in <see cref="T:System.ServiceModel.DeadLetterQueue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Durable">
      <MemberSignature Language="C#" Value="public bool Durable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Durable" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqBindingElementBase.Durable" />
      <MemberSignature Language="VB.NET" Value="Public Property Durable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Durable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c59b-125">取得或設定值，這個值會指定使用這個繫結傳送的訊息是否具有永久性或變動性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-125">Gets or sets a value that specifies whether messages sent with this binding are durable or volatile.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c59b-126">如果這個繫結處理的訊息是永久性的，則為 <see langword="true" />，如果為變動性的則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-126">
              <see langword="true" /> if the messages processed by this binding are durable; <see langword="false" /> if they are volatile.</span>
          </span>
          <span data-ttu-id="3c59b-127">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-127">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c59b-128">如果這個屬性設定為 `true`，訊息會是永久性的，否則會是變動性的。</span><span class="sxs-lookup"><span data-stu-id="3c59b-128">If this property is set to `true`, messages are durable; otherwise, messages are volatile.</span></span> <span data-ttu-id="3c59b-129">如果佇列管理員毀損，永久性訊息不會遺失。</span><span class="sxs-lookup"><span data-stu-id="3c59b-129">Durable messages are not lost if the queue manager crashes.</span></span> <span data-ttu-id="3c59b-130">這個屬性的預設值為 `true`。</span><span class="sxs-lookup"><span data-stu-id="3c59b-130">The default value for this property is `true`.</span></span> <span data-ttu-id="3c59b-131">如果需要正好一次的保證 (<xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A> 設定為 `true`)，這個屬性必須設定為 `true`。</span><span class="sxs-lookup"><span data-stu-id="3c59b-131">When exactly once assurances are required (<xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A> is set to `true`), this property must be set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExactlyOnce">
      <MemberSignature Language="C#" Value="public bool ExactlyOnce { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExactlyOnce" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce" />
      <MemberSignature Language="VB.NET" Value="Public Property ExactlyOnce As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExactlyOnce { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c59b-132">取得或設定值，這個值會指定使用這個繫結傳送的訊息是否將具有正好一次的保證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-132">Gets or sets a value that specifies whether messages sent with this binding have exactly once assurances.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c59b-133">如果與此繫結一起傳送的訊息有「正好一次」的保證，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-133">
              <see langword="true" /> if messages sent with this binding have exactly once assurances; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c59b-134">當 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A> 設定為 `true` 時，表示訊息佇列 (MSMQ) 將確保傳送的訊息只會傳遞到接收訊息佇列一次，如果傳遞失敗，訊息會根據 `DeadLetterQueue` 屬性設定傳送到寄不出的信件佇列。</span><span class="sxs-lookup"><span data-stu-id="3c59b-134"><xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A>, when set to `true`, indicates that Message Queuing (MSMQ) ensures that a sent message is delivered to the receiving message queue once and only once, and, if delivery fails, the message is sent to the dead-letter queue, depending on the `DeadLetterQueue` property setting.</span></span> <span data-ttu-id="3c59b-135">將 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A> 設定為 `true` 需要交易式的佇列。</span><span class="sxs-lookup"><span data-stu-id="3c59b-135">Setting <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A> to `true` requires the queue to be transactional.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MsmqBindingElementBase.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="3c59b-136">屬性的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-136">The type of property.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="3c59b-137">繫結項目的 <see cref="T:System.ServiceModel.Channels.BindingContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-137">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c59b-138">在衍生類別中覆寫時，為提供的繫結內容擷取指定型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-138">When overridden in a derived class, retrieves a specified type of object for the binding context provided.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3c59b-139">
            <paramref name="T" /> 型別的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-139">The object of type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c59b-140">提供從項目擷取能力和保護需求的功能。</span><span class="sxs-lookup"><span data-stu-id="3c59b-140">Provides the functionality to retrieve capabilities and protection requirements from the element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3c59b-141">內容為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-141">The context is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxRetryCycles">
      <MemberSignature Language="C#" Value="public int MaxRetryCycles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxRetryCycles" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRetryCycles As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxRetryCycles { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c59b-142">取得或設定嘗試傳遞訊息至接收應用程式的重試循環次數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-142">Gets or sets the maximum number of retry cycles to attempt delivery of messages to the receiving application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c59b-143">指定在傳送訊息至有害訊息佇列之前要嘗試之重試循環次數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-143">A value that specifies the number of retry cycles to attempt prior to transferring a message to the poison-message queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c59b-144">「重試循環」(Retry Cycle) 是指訊息從重試佇列傳送至應用程式佇列以嘗試傳遞至應用程式的時間。</span><span class="sxs-lookup"><span data-stu-id="3c59b-144">A retry cycle is when a message is transferred from the retry queue to the application queue to attempt delivery to the application.</span></span> <span data-ttu-id="3c59b-145">在立即重試達到 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveRetryCount%2A> 的指定次數後，就會將訊息置於重試佇列。</span><span class="sxs-lookup"><span data-stu-id="3c59b-145">Messages are placed in the retry queue after failing a number of immediate retries as specified by <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.ReceiveRetryCount%2A>.</span></span> <span data-ttu-id="3c59b-146">`MaxRetryCycles` 會指定重試循環次數，且不會包含最初的傳送訊息嘗試。</span><span class="sxs-lookup"><span data-stu-id="3c59b-146">`MaxRetryCycles` specifies the number of retry cycles and does not include the initial attempt to send the message.</span></span> <span data-ttu-id="3c59b-147">嘗試傳遞訊息的次數上限為 (1 + MaxRetryCycles) \* (ReceiveRetryCount + 1) 次。</span><span class="sxs-lookup"><span data-stu-id="3c59b-147">An attempt to deliver a message is made a maximum of (1 + MaxRetryCycles) \* (ReceiveRetryCount + 1) times.</span></span> <span data-ttu-id="3c59b-148">例如，如果 ReceiveRetryCount = 0 且 MaxRetryCycles 為 1，則嘗試傳遞訊息的次數上限為 2。</span><span class="sxs-lookup"><span data-stu-id="3c59b-148">For example, if ReceiveRetryCount = 0 and MaxRetryCycles is 1, there is a maximum of two attempts to deliver the message.</span></span> <span data-ttu-id="3c59b-149">從 [!INCLUDE[wv](~/includes/wv-md.md)] 之後的作業系統上才能使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="3c59b-149">This property is used only on operating systems starting with [!INCLUDE[wv](~/includes/wv-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c59b-150">這個值小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-150">The value is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MsmqTransportSecurity">
      <MemberSignature Language="C#" Value="public System.ServiceModel.MsmqTransportSecurity MsmqTransportSecurity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.MsmqTransportSecurity MsmqTransportSecurity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqBindingElementBase.MsmqTransportSecurity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MsmqTransportSecurity As MsmqTransportSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::MsmqTransportSecurity ^ MsmqTransportSecurity { System::ServiceModel::MsmqTransportSecurity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.MsmqTransportSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c59b-151">取得與此繫結項目相關聯的 <see cref="T:System.ServiceModel.MsmqTransportSecurity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-151">Gets the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> that is associated with this binding element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c59b-152">與這個繫結項目關聯的 <see cref="T:System.ServiceModel.MsmqTransportSecurity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-152">The <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> that is associated with this binding element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c59b-153"><xref:System.ServiceModel.MsmqTransportSecurity> 會封裝 MSMQ 整合傳輸的安全性設定。</span><span class="sxs-lookup"><span data-stu-id="3c59b-153"><xref:System.ServiceModel.MsmqTransportSecurity> encapsulates the security settings for the MSMQ integration transport.</span></span> <span data-ttu-id="3c59b-154">這些設定對 MSMQ 整合和已佇列傳輸都是相同的。</span><span class="sxs-lookup"><span data-stu-id="3c59b-154">The settings are the same for both the MSMQ integration and queued transports.</span></span> <span data-ttu-id="3c59b-155"><xref:System.ServiceModel.MsmqTransportSecurity> 可讓您設定驗證模式、加密演算法、安全的雜湊演算法和保護層級。</span><span class="sxs-lookup"><span data-stu-id="3c59b-155"><xref:System.ServiceModel.MsmqTransportSecurity> allows you to set the authentication mode, encryption algorithm, secure hash algorithm, and protection level.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveContextEnabled">
      <MemberSignature Language="C#" Value="public bool ReceiveContextEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveContextEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveContextEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveContextEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveContextEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c59b-156">取得或設定值，這個值表示是否已要求接收內容行為。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-156">Gets or sets a value that indicates whether the receive context behavior is requested.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c59b-157">如果繫結支援接收內容行為，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-157">
              <see langword="true" /> if the binding supports receive contextbehavior ; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveErrorHandling">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ReceiveErrorHandling ReceiveErrorHandling" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveErrorHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveErrorHandling As ReceiveErrorHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReceiveErrorHandling ReceiveErrorHandling { System::ServiceModel::ReceiveErrorHandling get(); void set(System::ServiceModel::ReceiveErrorHandling value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReceiveErrorHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c59b-158">取得或設定列舉值，這個值會指定如何處理有害和其他不可分派的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-158">Gets or sets an enumeration value that specifies how poison and other messages that cannot be dispatched are handled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c59b-159">
            <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> 值，指定如何處理有害和其他不可分派的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-159">A <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> value that specifies how poison and other messages that cannot be dispatched are handled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c59b-160">當這個屬性設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Fault> 時，通道接聽程式會發生錯誤，並且會追蹤和擲回 <xref:System.ServiceModel.ProtocolException> (內含一個 <xref:System.ServiceModel.MsmqPoisonMessageException>)。</span><span class="sxs-lookup"><span data-stu-id="3c59b-160">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Fault>, the channel listener is faulted and a <xref:System.ServiceModel.ProtocolException> (wrapping a <xref:System.ServiceModel.MsmqPoisonMessageException>) is traced and thrown.</span></span> <span data-ttu-id="3c59b-161">訊息會留在佇列中，並且必須由某種手動方法來移除。</span><span class="sxs-lookup"><span data-stu-id="3c59b-161">The message is left in the queue and must be removed by some manual method.</span></span> <span data-ttu-id="3c59b-162"><xref:System.ServiceModel.MsmqPoisonMessageException> 包含 <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A>，後者可用於從有害訊息佇列中識別並手動移除有問題的訊息。</span><span class="sxs-lookup"><span data-stu-id="3c59b-162">The <xref:System.ServiceModel.MsmqPoisonMessageException> contains a <xref:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId%2A> that can be used to identify and manually remove the offending message from the poison-message queue.</span></span>  
  
 <span data-ttu-id="3c59b-163">當這個屬性設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Drop> 時，即會捨棄訊息。</span><span class="sxs-lookup"><span data-stu-id="3c59b-163">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Drop>, the message is dropped.</span></span>  
  
 <span data-ttu-id="3c59b-164">當這個屬性設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Reject> 時，負認可會傳送至用戶端，並從有害訊息佇列中移除訊息。</span><span class="sxs-lookup"><span data-stu-id="3c59b-164">When this property is set to <xref:System.ServiceModel.ReceiveErrorHandling.Reject>, a negative acknowledgment is sent to the client and the message is removed from the poison-message queue.</span></span> <span data-ttu-id="3c59b-165">只有在 Message Queuing 4.0 上才能使用這個選項。</span><span class="sxs-lookup"><span data-stu-id="3c59b-165">This option is available only on Message Queuing 4.0.</span></span>  
  
 <span data-ttu-id="3c59b-166">當設定為 <xref:System.ServiceModel.ReceiveErrorHandling.Move> 時，訊息會移到最後一個有害子佇列。</span><span class="sxs-lookup"><span data-stu-id="3c59b-166">When set to <xref:System.ServiceModel.ReceiveErrorHandling.Move>, the message is moved to the final poison sub-queue.</span></span> <span data-ttu-id="3c59b-167">只有在 Message Queuing 4.0 上才能使用這個選項。</span><span class="sxs-lookup"><span data-stu-id="3c59b-167">This option is available only on Message Queuing 4.0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c59b-168">這個值不在 <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> 定義的值範圍內。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-168">The value is not within the range of values defined in <see cref="T:System.ServiceModel.ReceiveErrorHandling" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveRetryCount">
      <MemberSignature Language="C#" Value="public int ReceiveRetryCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveRetryCount" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveRetryCount" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveRetryCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveRetryCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c59b-169">取得或設定佇列管理員在傳送訊息至重試佇列之前，應嘗試傳送的次數上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-169">Gets or sets the maximum number of times the queue manager should attempt to send a message before transferring it to the retry queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c59b-170">指定佇列管理員在傳送訊息至重試佇列之前，應嘗試傳送之次數上限的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-170">A value that specifies the maximum number of times the queue manager should attempt to send a message before transferring it to the retry queue.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c59b-171">如果達到傳遞嘗試的次數上限，且應用程式未存取訊息，訊息便會傳送到重試佇列，以便日後再次傳遞。</span><span class="sxs-lookup"><span data-stu-id="3c59b-171">If the maximum number of delivery attempts is reached and the message is not accessed by the application, then the message is sent to a retry queue for redelivery at some later point in time.</span></span> <span data-ttu-id="3c59b-172">在訊息傳回傳送佇列之前的時間長度是由 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A> 控制。</span><span class="sxs-lookup"><span data-stu-id="3c59b-172">The amount of time before the message is transferred back to the sending queue is controlled by <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>.</span></span> <span data-ttu-id="3c59b-173">如果重試循環達到 MaxRetryCycles 值，便會根據 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveErrorHandling%2A> 屬性值而分派訊息。</span><span class="sxs-lookup"><span data-stu-id="3c59b-173">If retry cycles reach the MaxRetryCycles value, then the message is dispatched based on the value of the <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ReceiveErrorHandling%2A> property.</span></span>  
  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="3c59b-174"> <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> 和<xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>。</span><span class="sxs-lookup"><span data-stu-id="3c59b-174"> <xref:System.ServiceModel.Channels.MsmqBindingElementBase.MaxRetryCycles%2A> and <xref:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c59b-175">這個值小於零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-175">The value is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RetryCycleDelay">
      <MemberSignature Language="C#" Value="public TimeSpan RetryCycleDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RetryCycleDelay" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqBindingElementBase.RetryCycleDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property RetryCycleDelay As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RetryCycleDelay { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c59b-176">取得或設定值，這個值會指定當嘗試傳遞無法傳遞的訊息時，在嘗試另一次重試循環之前要等待的時間長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-176">Gets or sets a value that specifies how long to wait before attempting another retry cycle when attempting to deliver a message that could not be delivered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c59b-177">
            <see cref="T:System.TimeSpan" />，指定開始下一輪嘗試傳遞至接收應用程式的循環前，要等候的時間間隔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-177">The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait before starting the next cycle of delivery attempts to the receiving application.</span>
          </span>
          <span data-ttu-id="3c59b-178">預設值為 30 (分鐘)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-178">The default value is 30 (minutes).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c59b-179">單一重試循環會重複嘗試將訊息傳遞至接收應用程式 (由 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxRetryCycles%2A> 屬性指定)。</span><span class="sxs-lookup"><span data-stu-id="3c59b-179">A single retry cycle makes repeated attempts to deliver a message to the receiving application (specified by the <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.MaxRetryCycles%2A> property).</span></span> <span data-ttu-id="3c59b-180">如果所有嘗試都失敗，便會將訊息放回重試佇列中。</span><span class="sxs-lookup"><span data-stu-id="3c59b-180">If all attempts fail, the message is placed back in the retry queue.</span></span> <span data-ttu-id="3c59b-181">這個屬性會指定訊息在傳輸至應用程式佇列以進行另一次重試循環之前，要保留在重試佇列中的時間長度。</span><span class="sxs-lookup"><span data-stu-id="3c59b-181">This property specifies how long the message remains in the retry queue before it is transferred to the application queue for another retry cycle.</span></span> <span data-ttu-id="3c59b-182">從 [!INCLUDE[wv](~/includes/wv-md.md)] 之後的作業系統上才能使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="3c59b-182">This property can only be used on operating systems starting with [!INCLUDE[wv](~/includes/wv-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c59b-183">這個值不是無限的，而且會大於 Int32.MaxValue 毫秒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-183">The value is not infinite and larger than Int32.MaxValue milliseconds.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy">
      <MemberSignature Language="C#" Value="void IPolicyExportExtension.ExportPolicy (System.ServiceModel.Description.MetadataExporter exporter, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(class System.ServiceModel.Description.MetadataExporter exporter, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MsmqBindingElementBase.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportPolicy (exporter As MetadataExporter, context As PolicyConversionContext) Implements IPolicyExportExtension.ExportPolicy" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System::ServiceModel::Description::MetadataExporter ^ exporter, System::ServiceModel::Description::PolicyConversionContext ^ context) = System::ServiceModel::Description::IPolicyExportExtension::ExportPolicy;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IPolicyExportExtension.ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.MetadataExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <span data-ttu-id="3c59b-184">您可以用來修改匯出程序的 <see cref="T:System.ServiceModel.Description.MetadataExporter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-184">A <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3c59b-185">您可以用來插入自訂原則判斷提示的 <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-185">A <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert a custom policy assertion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c59b-186">匯出關於繫結的自訂原則判斷提示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-186">Exports custom policy assertions about bindings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="3c59b-187"> <xref:System.ServiceModel.Description.IPolicyExportExtension>。</span><span class="sxs-lookup"><span data-stu-id="3c59b-187"> <xref:System.ServiceModel.Description.IPolicyExportExtension>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IWsdlExportExtension.ExportContract">
      <MemberSignature Language="C#" Value="void IWsdlExportExtension.ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IWsdlExportExtension.ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MsmqBindingElementBase.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext) Implements IWsdlExportExtension.ExportContract" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context) = System::ServiceModel::Description::IWsdlExportExtension::ExportContract;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <span data-ttu-id="3c59b-188">
            <see cref="T:System.ServiceModel.Description.WsdlExporter" />，可匯出合約資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-188">A <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="3c59b-189">提供從匯出的 WSDL 項目到合約描述之間的對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-189">Provides mappings from exported WSDL elements to the contract description.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c59b-190">將自訂的 Web 服務描述語言 (WSDL) 項目寫入為合約產生的 WSDL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-190">Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for a contract.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="3c59b-191"> <xref:System.ServiceModel.Description.IWsdlExportExtension>。</span><span class="sxs-lookup"><span data-stu-id="3c59b-191"> <xref:System.ServiceModel.Description.IWsdlExportExtension>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint">
      <MemberSignature Language="C#" Value="void IWsdlExportExtension.ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext endpointContext);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext endpointContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MsmqBindingElementBase.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ExportEndpoint (exporter As WsdlExporter, endpointContext As WsdlEndpointConversionContext) Implements IWsdlExportExtension.ExportEndpoint" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ endpointContext) = System::ServiceModel::Description::IWsdlExportExtension::ExportEndpoint;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="endpointContext" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <span data-ttu-id="3c59b-192">
            <see cref="T:System.ServiceModel.Description.WsdlExporter" />，可匯出端點資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-192">A <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the endpoint information.</span>
          </span>
        </param>
        <param name="endpointContext">
          <span data-ttu-id="3c59b-193">提供從匯出的 WSDL 項目到端點描述之間的對應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-193">Provides mappings from exported WSDL elements to the endpoint description.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3c59b-194">將自訂的 Web 服務描述語言 (WSDL) 項目寫入為端點產生的 WSDL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-194">Writes custom Web Services Description Language (WSDL) elements into the generated WSDL for an endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="3c59b-195"> <xref:System.ServiceModel.Description.IWsdlExportExtension>。</span><span class="sxs-lookup"><span data-stu-id="3c59b-195"> <xref:System.ServiceModel.Description.IWsdlExportExtension>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeToLive">
      <MemberSignature Language="C#" Value="public TimeSpan TimeToLive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TimeToLive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqBindingElementBase.TimeToLive" />
      <MemberSignature Language="VB.NET" Value="Public Property TimeToLive As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TimeToLive { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c59b-196">取得或設定指定訊息有效時間長度的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-196">Gets or sets a value that specifies how long messages are valid.</span>
          </span>
          <span data-ttu-id="3c59b-197">經過這個時間之後，訊息就會根據 <see langword="DeadLetterQueue" /> 設定放在寄不出的信件佇列中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-197">When this time has elapsed the message is placed in a dead-letter queue depending on the <see langword="DeadLetterQueue" /> setting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c59b-198">指定訊息有效時間長度的 <see cref="T:System.TimeSpan" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-198">A <see cref="T:System.TimeSpan" /> value that specifies how long messages are valid.</span>
          </span>
          <span data-ttu-id="3c59b-199">預設值為 24 小時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-199">The default value is 24 hours.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c59b-200">佇列應用程式是以中斷連線的方式運作，</span><span class="sxs-lookup"><span data-stu-id="3c59b-200">Queued applications work in a disconnected manner.</span></span> <span data-ttu-id="3c59b-201">這表示傳送和接收應用程式可能不會同時執行；因此，由傳送應用程式傳送的訊息可能不會由接收應用程式立即處理。</span><span class="sxs-lookup"><span data-stu-id="3c59b-201">This means that the sending and receiving applications may not be running at the same time; therefore, a message sent by the sending application may not be processed immediately by the receiving application.</span></span> <span data-ttu-id="3c59b-202">有些訊息包含的資訊只在特定期間內有效。</span><span class="sxs-lookup"><span data-stu-id="3c59b-202">Some messages contain information that is valid only for a certain period of time.</span></span> <span data-ttu-id="3c59b-203">如果這類訊息沒有在該期間內傳遞，就不再包含有用的資訊且會被捨棄。</span><span class="sxs-lookup"><span data-stu-id="3c59b-203">If such a message is not delivered within that period of time, it no longer contains useful information and should be dropped.</span></span> <span data-ttu-id="3c59b-204">這個屬性可讓您指定訊息在傳遞至應用程式佇列之前要保留的時限。</span><span class="sxs-lookup"><span data-stu-id="3c59b-204">This property enables you to specify a time limit for how long a message is kept prior to delivery to the application queue.</span></span> <span data-ttu-id="3c59b-205">如果在將訊息傳遞至應用程式佇列之前就超過這個時間限制，而且有寄不出的信件佇列可用，則會將訊息放在其中 (由 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue%2A> 屬性判斷)；否則，就會捨棄訊息。</span><span class="sxs-lookup"><span data-stu-id="3c59b-205">If this time limit elapses prior to the message being delivered to the application queue, the message is placed in the dead-letter queue if one is available (determined by the <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.DeadLetterQueue%2A> property); otherwise, the message is dropped.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c59b-206">這個值不是無限的，而且會大於 Int32.MaxValue 毫秒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-206">The value is not infinite and larger than Int32.MaxValue milliseconds.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransactedReceiveEnabled">
      <MemberSignature Language="C#" Value="public bool TransactedReceiveEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactedReceiveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqBindingElementBase.TransactedReceiveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransactedReceiveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactedReceiveEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.ITransactedBindingElement.TransactedReceiveEnabled</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c59b-207">取得值，這個值指定這個繫結程序是否需要異動來接收訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-207">Gets a value that specifies whether a transaction is required to receive messages with this binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c59b-208">如果繫結需要接收作業的交易則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-208">
              <see langword="true" /> if the binding requires a transaction for a receive operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c59b-209">發送器會存取這個屬性，以判斷接收作業是否需要交易。</span><span class="sxs-lookup"><span data-stu-id="3c59b-209">The dispatcher accesses this property to determine whether a transaction is required for a receive operation.</span></span>  
  
 <span data-ttu-id="3c59b-210">[!INCLUDE[indigo2](~/includes/indigo2-md.md)] 中的佇列傳輸只有在 `true` 設定為 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A> 時，才會為這個屬性傳回 `true`。</span><span class="sxs-lookup"><span data-stu-id="3c59b-210">The queued transport in [!INCLUDE[indigo2](~/includes/indigo2-md.md)] returns `true` for this property if, and only if, <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ExactlyOnce%2A> is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseMsmqTracing">
      <MemberSignature Language="C#" Value="public bool UseMsmqTracing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseMsmqTracing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqBindingElementBase.UseMsmqTracing" />
      <MemberSignature Language="VB.NET" Value="Public Property UseMsmqTracing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseMsmqTracing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c59b-211">取得或設定值，這個值會啟用或停用訊息佇列 (MSMQ) 內建訊息追蹤工具。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-211">Gets or sets a value that enables or disables the Message Queuing (MSMQ) built-in message tracing facility.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c59b-212">如果應啟用訊息佇列 (MSMQ) 內建訊息追蹤則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-212">
              <see langword="true" /> if Message Queuing (MSMQ) built-in message tracing should be enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c59b-213">當 <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.UseMsmqTracing%2A> 設定為 `true` 時，佇列通道會使用訊息佇列內建訊息追蹤工具。</span><span class="sxs-lookup"><span data-stu-id="3c59b-213">When <xref:System.ServiceModel.Configuration.MsmqBindingElementBase.UseMsmqTracing%2A> is set to `true`, the queued channel uses the Message Queuing built-in message tracing facility.</span></span> <span data-ttu-id="3c59b-214">透過這項工具，每次訊息進入及離開佇列管理員時，都會傳送報告訊息至指定的報告佇列。</span><span class="sxs-lookup"><span data-stu-id="3c59b-214">Through this facility a report message is sent to a specified report queue each time a message enters and leaves a queue manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSourceJournal">
      <MemberSignature Language="C#" Value="public bool UseSourceJournal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSourceJournal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqBindingElementBase.UseSourceJournal" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSourceJournal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSourceJournal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c59b-215">取得或設定值，此值會指出是否要將此繫結處理之訊息的複本儲存在來源日誌佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-215">Gets or sets a value that indicates whether copies of messages processed by this binding should be stored in the source journal queue.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c59b-216">如果要將此繫結處理的訊息複製到來源日誌佇列，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-216">
              <see langword="true" /> if messages processed by this binding are copied to the source journal queue; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3c59b-217">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-217">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c59b-218">要記錄已離開來源電腦輸出佇列之訊息的佇列應用程式可以將訊息複製到日誌佇列。</span><span class="sxs-lookup"><span data-stu-id="3c59b-218">Queued applications that keep a record of messages that have left the source computer's outgoing queue can have the messages copied to a journal queue.</span></span> <span data-ttu-id="3c59b-219">訊息一離開輸出佇列之後，而且收到目的端電腦已收到訊息的認可，訊息的複本就會保留在傳送端電腦的系統日誌佇列中。</span><span class="sxs-lookup"><span data-stu-id="3c59b-219">After a message leaves the outgoing queue and an acknowledgment is received that the message was received on the destination computer, a copy of the message is kept in the sending computer's system journal queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidityDuration">
      <MemberSignature Language="C#" Value="public TimeSpan ValidityDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ValidityDuration" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MsmqBindingElementBase.ValidityDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidityDuration As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ValidityDuration { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3c59b-220">取得或設定值，這個值會指定接收內容功能鎖定訊息的持續期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-220">Gets or sets a value that specifies the duration a message will be locked by the receive context feature.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3c59b-221">接收內容功能鎖定訊息的持續期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-221">The duration a message will be locked by the receive context feature.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3c59b-222">預設值是 5 分鐘。</span><span class="sxs-lookup"><span data-stu-id="3c59b-222">The default value is 5 minutes.</span></span> <span data-ttu-id="3c59b-223">接收內容會鎖定訊息以進行檢查，直到此訊息已使用或釋回佇列為止。</span><span class="sxs-lookup"><span data-stu-id="3c59b-223">Receive context locks the message for inspection until it is either consumed or released back onto the queue.</span></span> <span data-ttu-id="3c59b-224">有效持續期間屬性會指定訊息在自動釋回佇列之前，要由接收內容保持鎖定的時間長度。</span><span class="sxs-lookup"><span data-stu-id="3c59b-224">The validity duration property specifies how long the message will remain locked by receive context before it is automatically released back onto the queue.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="3c59b-225">如果訊息的 <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ValidityDuration%2A> 過期，任何可用於處理訊息的交易都將中止，而且如果過期是在交易期間發生，工作流程執行個體也會一併中止。</span><span class="sxs-lookup"><span data-stu-id="3c59b-225">If <xref:System.ServiceModel.Channels.MsmqBindingElementBase.ValidityDuration%2A> expires for a message, any transaction that may be used for its processing will be aborted along with the workflow instance if the expiration occurs during the transaction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3c59b-226">值小於零或大於 Int32.MaxValue。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3c59b-226">The value is less than zero or is larger than Int32.MaxValue.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>