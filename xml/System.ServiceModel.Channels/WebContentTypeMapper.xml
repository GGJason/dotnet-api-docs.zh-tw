<Type Name="WebContentTypeMapper" FullName="System.ServiceModel.Channels.WebContentTypeMapper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9dbe80e713937b44727f975b2a04851279151694" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36525120" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WebContentTypeMapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebContentTypeMapper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.WebContentTypeMapper" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebContentTypeMapper" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebContentTypeMapper abstract" />
  <TypeSignature Language="F#" Value="type WebContentTypeMapper = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>指定傳入訊息之內容型別要對應的格式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這是程式設計模型中的擴充點，Web 訊息編碼器會用這個模型來覆寫內容型別對應至格式的方式。 若要實作此類別，請覆寫 <xref:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType%28System.String%29> 方法。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebContentTypeMapper ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.WebContentTypeMapper.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebContentTypeMapper();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.Channels.WebContentTypeMapper" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMessageFormatForContentType">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.WebContentFormat GetMessageFormatForContentType (string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.ServiceModel.Channels.WebContentFormat GetMessageFormatForContentType(string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.WebContentTypeMapper.GetMessageFormatForContentType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetMessageFormatForContentType (contentType As String) As WebContentFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::WebContentFormat GetMessageFormatForContentType(System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="abstract member GetMessageFormatForContentType : string -&gt; System.ServiceModel.Channels.WebContentFormat" Usage="webContentTypeMapper.GetMessageFormatForContentType contentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.WebContentFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">內容型別，表示要解譯之資料的 MIME 類型。</param>
        <summary>在衍生類別中覆寫時，傳回指定內容型別所使用的訊息格式。</summary>
        <returns>
          <see cref="T:System.ServiceModel.Channels.WebContentFormat" />，指定訊息內容型別要對應的格式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這是預計的擴充性機制，可用來覆寫內容型別對應至 Web 內容格式的方式。 例如，如果所有傳入訊息處理不進行任何 XML 或 JSON 剖析為 「 未經處理二進位資料 」，您可以實作<xref:System.ServiceModel.Channels.WebContentTypeMapper>一律傳回<xref:System.ServiceModel.Channels.WebContentFormat.Raw>不論傳入的內容類型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>