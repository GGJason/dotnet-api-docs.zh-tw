<Type Name="HttpRequest" FullName="System.Web.HttpRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f5e927b6dd4443feead33b37497ab93ccb239d7a" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53393723" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="118e2-101">允許 ASP.NET 在 Web 要求期間讀取用戶端送出的 HTTP 值。</span><span class="sxs-lookup"><span data-stu-id="118e2-101">Enables ASP.NET to read the HTTP values sent by a client during a Web request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-102">方法和屬性<xref:System.Web.HttpRequest>類別會透過公開`Request`的屬性<xref:System.Web.HttpApplication>， <xref:System.Web.HttpContext>， <xref:System.Web.UI.Page>，和<xref:System.Web.UI.UserControl>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-102">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` properties of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 <span data-ttu-id="118e2-103">從存取資料<xref:System.Web.HttpRequest.QueryString%2A>， <xref:System.Web.HttpRequest.Form%2A>， <xref:System.Web.HttpRequest.Cookies%2A>，或<xref:System.Web.HttpRequest.ServerVariables%2A>集合，您可以撰寫`Request["key"]`的範例所示，<xref:System.Web.HttpRequest.QueryString%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-103">To access data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections, you can write `Request["key"]`, as shown in the example for the <xref:System.Web.HttpRequest.QueryString%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="118e2-104">Unicode 支援<xref:System.Web.HttpRequest>類別成員需要 IIS 6.0 或更新版本。</span><span class="sxs-lookup"><span data-stu-id="118e2-104">Unicode support for <xref:System.Web.HttpRequest> class members requires IIS version 6.0 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-105">下列範例存取<xref:System.Web.HttpRequest>使用目前要求的執行個體<xref:System.Web.UI.Page.Request%2A>屬性<xref:System.Web.UI.Page>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-105">The following examples access the <xref:System.Web.HttpRequest> instance for the current request by using the <xref:System.Web.UI.Page.Request%2A> property of the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="118e2-106">您可以使用簡化的語法來存取資料，從<xref:System.Web.HttpRequest.QueryString%2A>， <xref:System.Web.HttpRequest.Form%2A>， <xref:System.Web.HttpRequest.Cookies%2A>，或<xref:System.Web.HttpRequest.ServerVariables%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="118e2-106">You can use simplified syntax for accessing data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections.</span></span> <span data-ttu-id="118e2-107">您可以撰寫`Request["key"]`。</span><span class="sxs-lookup"><span data-stu-id="118e2-107">You can write `Request["key"]`.</span></span>  
  
 <span data-ttu-id="118e2-108">第一個範例示範如何擷取查詢字串值，載入頁面。</span><span class="sxs-lookup"><span data-stu-id="118e2-108">The first example shows how to retrieve a query string value when loading a page.</span></span>  
  
```csharp  
public partial class AddToCart : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        string rawId = Request["ProductID"];  
        int productId;  
        if (!String.IsNullOrEmpty(rawId) && int.TryParse(rawId, out productId))  
        {  
            using (ShoppingCartActions usersShoppingCart = new ShoppingCartActions())  
            {  
                usersShoppingCart.AddToCart(productId);  
            }  
        }  
        else  
        {  
            throw new Exception("Tried to call AddToCart.aspx without setting a ProductId.");  
        }  
        Response.Redirect("ShoppingCart.aspx");  
    }  
}  
```  
  
```vb  
Public Class AddToCart  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        Dim rawId = Request("ProductID")  
        Dim productId As Integer  
        If Not String.IsNullOrEmpty(rawId) And Integer.TryParse(rawId, productId) Then  
            Using usersShoppingCart As New ShoppingCartActions()  
                usersShoppingCart.AddToCart(productId)  
            End Using  
  
        Else  
            Throw New Exception("Tried to call AddToCart.aspx without setting a ProductId.")  
        End If  
        Response.Redirect("ShoppingCart.aspx")  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="118e2-109">下一個範例示範如何檢查會驗證要求並擷取原始的 URL。</span><span class="sxs-lookup"><span data-stu-id="118e2-109">The next example shows how to check if the request is authenticated and retrieve the raw URL.</span></span>  
  
```csharp  
public partial class RestrictedPage : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        if (!Request.IsAuthenticated)  
        {  
            var rawUrl = Request.RawUrl;  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl));  
        }  
    }  
}  
```  
  
```vb  
Public Class RestrictedPage  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        If Not Request.IsAuthenticated Then  
            Dim rawUrl = Request.RawUrl  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl))  
        End If  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="118e2-110">含有原始程式碼的 Visual Studio Web site 專案位於本主題隨附了：[下載](https://go.microsoft.com/fwlink/?LinkID=191455)。</span><span class="sxs-lookup"><span data-stu-id="118e2-110">A Visual Studio Web site project with source code is available to accompany this topic: [Download](https://go.microsoft.com/fwlink/?LinkID=191455).</span></span>  
  
 <span data-ttu-id="118e2-111">這個範例會使用<xref:System.IO.StreamWriter>類別來寫入數個值<xref:System.Web.HttpRequest>類別檔案的內容。</span><span class="sxs-lookup"><span data-stu-id="118e2-111">This example uses the <xref:System.IO.StreamWriter> class to write the values of several <xref:System.Web.HttpRequest> class properties to a file.</span></span> <span data-ttu-id="118e2-112">型別字串的屬性，這些值會以 HTML 編碼會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="118e2-112">For properties that are of type string, the values are HTML encoded as they are written to the file.</span></span> <span data-ttu-id="118e2-113">屬性代表集合的迴圈，並包含每個索引鍵/值組會寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="118e2-113">Properties that represent a collection are looped through, and each key/value pair that they contain is written to the file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="118e2-114">這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。</span><span class="sxs-lookup"><span data-stu-id="118e2-114">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="118e2-115">根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。</span><span class="sxs-lookup"><span data-stu-id="118e2-115">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="118e2-116">如需詳細資訊，請參閱 [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。</span><span class="sxs-lookup"><span data-stu-id="118e2-116">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequest (string filename, string url, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string url, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, url As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequest(System::String ^ filename, System::String ^ url, System::String ^ queryString);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequest : string * string * string -&gt; System.Web.HttpRequest" Usage="new System.Web.HttpRequest (filename, url, queryString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="118e2-117">與要求關聯的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="118e2-117">The name of the file associated with the request.</span></span></param>
        <param name="url"><span data-ttu-id="118e2-118">目前要求 URL 的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="118e2-118">The information regarding the URL of the current request.</span></span></param>
        <param name="queryString"><span data-ttu-id="118e2-119">利用要求所傳送的整個查詢字串 (<c>'?'</c> 之後的所有內容)。</span><span class="sxs-lookup"><span data-stu-id="118e2-119">The entire query string sent with the request (everything after the <c>'?'</c>).</span></span></param>
        <summary><span data-ttu-id="118e2-120">初始化 <see cref="T:System.Web.HttpRequest" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-120">Initializes an <see cref="T:System.Web.HttpRequest" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-121">您不需要建立您自己的執行個體<xref:System.Web.HttpRequest>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-121">You do not need to create your own instance of the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="118e2-122">方法和屬性<xref:System.Web.HttpRequest>類別會透過公開`Request`屬性<xref:System.Web.HttpApplication>， <xref:System.Web.HttpContext>， <xref:System.Web.UI.Page>，和<xref:System.Web.UI.UserControl>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-122">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="118e2-123">強制終止造成任何待處理 I/O 失敗的基礎 TCP 連線。</span><span class="sxs-lookup"><span data-stu-id="118e2-123">Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</span></span> <span data-ttu-id="118e2-124">您可以使用此方法，以回應惡意 HTTP 用戶端攻擊。</span><span class="sxs-lookup"><span data-stu-id="118e2-124">You might use this method in response to an attack by a malicious HTTP client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-125">這個方法是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="118e2-125">This method is thread-safe.</span></span> <span data-ttu-id="118e2-126">任何執行緒可以隨時呼叫它。</span><span class="sxs-lookup"><span data-stu-id="118e2-126">Any thread may call it at any time.</span></span>  
  
 <span data-ttu-id="118e2-127">這個方法僅能在整合模式下使用。</span><span class="sxs-lookup"><span data-stu-id="118e2-127">This method can only be used in integrated mode.</span></span> <span data-ttu-id="118e2-128">如果您叫用它在傳統模式中，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="118e2-128">If you invoke it in classic mode, an exception is thrown.</span></span> <span data-ttu-id="118e2-129">若要判斷管線模式，請使用<xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>。</span><span class="sxs-lookup"><span data-stu-id="118e2-129">To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Web.HttpRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-130">取得用戶端支援的 MIME 接受 (Accept) 類型的字串陣列。</span><span class="sxs-lookup"><span data-stu-id="118e2-130">Gets a string array of client-supported MIME accept types.</span></span></summary>
        <value><span data-ttu-id="118e2-131">用戶端支援的 MIME 接受類型的字串陣列。</span><span class="sxs-lookup"><span data-stu-id="118e2-131">A string array of client-supported MIME accept types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-132">下列程式碼範例會擷取所傳回的多個值<xref:System.Web.HttpRequest.AcceptTypes%2A>屬性插入的物件變數，並將編號及名稱的每個值若要寫入 HTTP 輸出的一行。</span><span class="sxs-lookup"><span data-stu-id="118e2-132">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.AcceptTypes%2A> property into an object variable and writes the number and name of each valueto a separate line of HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousID">
      <MemberSignature Language="C#" Value="public string AnonymousID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousID" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AnonymousID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnonymousID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AnonymousID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousID : string" Usage="System.Web.HttpRequest.AnonymousID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-133">取得使用者的匿名識別項 (如果有)。</span><span class="sxs-lookup"><span data-stu-id="118e2-133">Gets the anonymous identifier for the user, if present.</span></span></summary>
        <value><span data-ttu-id="118e2-134">表示目前匿名使用者識別項的字串。</span><span class="sxs-lookup"><span data-stu-id="118e2-134">A string representing the current anonymous user identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-135"><xref:System.Web.HttpRequest.AnonymousID%2A>屬性會將長時間執行的唯一識別碼指派給未驗證的使用者，這可用來追蹤使用者或指派給該使用者的設定檔屬性，而不需要資料儲存於`Session`物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-135">The <xref:System.Web.HttpRequest.AnonymousID%2A> property assigns a long-lived unique identifier to a non-authenticated user, which can be used to track the user or assign profile properties to that user without storing data in a `Session` object.</span></span> <span data-ttu-id="118e2-136">根據預設，<xref:System.Web.HttpRequest.AnonymousID%2A>屬性會追蹤使用 cookie，但它可以設定為使用 URI 時<xref:System.Web.Configuration.SessionStateSection.Cookieless%2A>匿名識別的 [設定] 區段中的屬性會設為<xref:System.Web.HttpCookieMode.UseUri>， <xref:System.Web.HttpCookieMode.UseDeviceProfile>，或<xref:System.Web.HttpCookieMode.AutoDetect>值。</span><span class="sxs-lookup"><span data-stu-id="118e2-136">By default, the <xref:System.Web.HttpRequest.AnonymousID%2A> property is tracked using a cookie, but it can be set to use the URI when the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> attribute in the anonymous identification configuration section is set to either the <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, or <xref:System.Web.HttpCookieMode.AutoDetect> value.</span></span> <span data-ttu-id="118e2-137">如果您不再想要可供使用，例如當匿名使用者通過驗證，您必須明確地清除 cookie。</span><span class="sxs-lookup"><span data-stu-id="118e2-137">You must explicitly clear the cookie if you no longer want it available, for example when an anonymous user is authenticated.</span></span>  
  
 <span data-ttu-id="118e2-138">需要識別未經過驗證的實體時，需要授權時，會使用匿名識別。</span><span class="sxs-lookup"><span data-stu-id="118e2-138">Anonymous identification is used when there is a need to identify entities that are not authenticated and when authorization is required.</span></span> <span data-ttu-id="118e2-139">如需詳細資訊，請參閱[anonymousIdentification 項目 （ASP.NET 設定結構描述）](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v=vs.100))</span><span class="sxs-lookup"><span data-stu-id="118e2-139">For more information, see [anonymousIdentification Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v=vs.100))</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-140">下列範例示範如何使用<xref:System.Web.HttpRequest.AnonymousID%2A>屬性來處理<xref:System.Web.Security.AnonymousIdentificationModule.Creating>Global.asax 檔案中的事件。</span><span class="sxs-lookup"><span data-stu-id="118e2-140">The following example shows how to use the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="118e2-141">此範例中有兩個部分：</span><span class="sxs-lookup"><span data-stu-id="118e2-141">This example has two parts:</span></span>  
  
-   <span data-ttu-id="118e2-142">處理 Global.asax 檔案中的方法<xref:System.Web.Security.AnonymousIdentificationModule.Creating>事件。</span><span class="sxs-lookup"><span data-stu-id="118e2-142">A method in the Global.asax file that handles the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event.</span></span>  
  
-   <span data-ttu-id="118e2-143">Web Form 網頁。</span><span class="sxs-lookup"><span data-stu-id="118e2-143">A Web Forms page.</span></span>  
  
 <span data-ttu-id="118e2-144">在程式碼範例的第一個部分示範如何設定<xref:System.Web.HttpRequest.AnonymousID%2A>屬性來處理<xref:System.Web.Security.AnonymousIdentificationModule.Creating>Global.asax 檔案中的事件。</span><span class="sxs-lookup"><span data-stu-id="118e2-144">The first part of the code example shows how to set the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="118e2-145">方法，稱為`AnonymousIdentification_Creating`設定<xref:System.Web.HttpRequest.AnonymousID%2A>匿名的識別碼建立時的屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-145">The method that is named `AnonymousIdentification_Creating` sets the <xref:System.Web.HttpRequest.AnonymousID%2A> property when an anonymous ID is created.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/global_asax.cs#2)]
 [!code-vb[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/global_asax.vb#2)]  
  
 <span data-ttu-id="118e2-146">第二個部分的程式碼範例示範如何顯示的新<xref:System.Web.HttpRequest.AnonymousID%2A>，它由`AnonymousIdentification_Creating`在上述範例中的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="118e2-146">The second part of the code example shows how to display the new <xref:System.Web.HttpRequest.AnonymousID%2A> that is created by the `AnonymousIdentification_Creating` event handler in the preceding example.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/anonid_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/anonid_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.IsAuthenticated" />
        <altmember cref="E:System.Web.Security.AnonymousIdentificationModule.Creating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v=vs.100)"><span data-ttu-id="118e2-147">anonymousIdentification 項目 (ASP.NET 設定結構描述)</span><span class="sxs-lookup"><span data-stu-id="118e2-147">anonymousIdentification Element (ASP.NET Settings Schema)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string" Usage="System.Web.HttpRequest.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-148">取得 ASP.NET 應用程式在伺服器上的虛擬應用程式根路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-148">Gets the ASP.NET application's virtual application root path on the server.</span></span></summary>
        <value><span data-ttu-id="118e2-149">目前應用程式的虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-149">The virtual path of the current application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-150">您可以使用這個屬性來建構從頁面或 Web 使用者控制項不在根目錄中的應用程式根目錄的相對 URL。</span><span class="sxs-lookup"><span data-stu-id="118e2-150">Use this property to construct a URL relative to the application root from a page or Web user control that is not in the root directory.</span></span> <span data-ttu-id="118e2-151">這可讓網頁及共用存在於不同的目錄結構來使用相同的程式碼連結至應用程式中的固定位置的資源層級的控制項。</span><span class="sxs-lookup"><span data-stu-id="118e2-151">This allows pages and shared controls that exist at different levels of a directory structure to use the same code to link to resources at fixed locations in the application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-152">下列範例會使用<xref:System.IO.StreamWriter.Write%2A>方法，以 HTML 編碼，然後撰寫的值<xref:System.Web.HttpRequest.ApplicationPath%2A>文字檔案的屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-152">The following example uses the <xref:System.IO.StreamWriter.Write%2A> method to HTML-encode and then write the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to a text file.</span></span> <span data-ttu-id="118e2-153">此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.HttpRequest>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-153">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="118e2-154">它假設存在<xref:System.IO.StreamWriter>名為物件`sw`。</span><span class="sxs-lookup"><span data-stu-id="118e2-154">It assumes the existence of a <xref:System.IO.StreamWriter> object named `sw`.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 <span data-ttu-id="118e2-155">下列範例會使用<xref:System.Web.HttpRequest.ApplicationPath%2A>來以程式設計方式建構應用程式中的固定位置中的資源路徑的屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-155">The following example uses the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to programmatically construct a path to a resource that is in a fixed location in the application.</span></span> <span data-ttu-id="118e2-156">必須位於相同的目錄，做為資源沒有參考之資源的網頁。</span><span class="sxs-lookup"><span data-stu-id="118e2-156">The page that references the resource does not have to be located in the same directory as the resource.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/ApplicationPath.aspx#2)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/ApplicationPath.aspx#2)]  
  
 <span data-ttu-id="118e2-157">如果您執行此範例中名為 WebSite1，Web 應用程式`/WebSite1`將會顯示的值為<xref:System.Web.HttpRequest.ApplicationPath%2A>屬性和`/WebSite1/images/Image1.gif`將會顯示為映像的完整路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-157">If you run this example in a Web application that is named WebSite1,  `/WebSite1` will be displayed as the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property and `/WebSite1/images/Image1.gif` will be displayed as the complete path of the image.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeCurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string AppRelativeCurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppRelativeCurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppRelativeCurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppRelativeCurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-158">取得應用程式根目錄的虛擬路徑，並對應用程式根目錄使用波狀符號 (\~) 標記法，讓此路徑變成相對路徑 (就像是 "\~/page.aspx")。</span><span class="sxs-lookup"><span data-stu-id="118e2-158">Gets the virtual path of the application root and makes it relative by using the tilde (\~) notation for the application root (as in "\~/page.aspx").</span></span></summary>
        <value><span data-ttu-id="118e2-159">目前要求的應用程式根目錄之虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-159">The virtual path of the application root for the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-160">使用這個屬性來提供將保持不變即使應用程式變更位置的 URL 資訊。</span><span class="sxs-lookup"><span data-stu-id="118e2-160">Use this property to provide URL information that will stay the same even if the application changes location.</span></span> <span data-ttu-id="118e2-161">這可讓相同 URL 對應程式碼以用於測試環境中，並在最後一個部署環境中，或使用不同網域中的 Web 應用程式的複本。</span><span class="sxs-lookup"><span data-stu-id="118e2-161">This allows the same URL-mapping code to be used in a test environment and in the final deployment environment, or to be used by copies of Web applications in different domains.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-162">下列範例會使用<xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A>屬性來設定的 URL<xref:System.Web.UI.WebControls.Image>頁面相同目錄中之影像的控制項。</span><span class="sxs-lookup"><span data-stu-id="118e2-162">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to set the URL of an <xref:System.Web.UI.WebControls.Image> control to an image in the same directory as the page.</span></span> <span data-ttu-id="118e2-163">若要查看產生的目錄結構的不同層級執行此頁面<xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A>屬性值。</span><span class="sxs-lookup"><span data-stu-id="118e2-163">Run this page at different levels of a directory structure to see the resulting <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property values.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/CS/AppRelativeCurrentExecutionPathCS.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/VB/AppRelativeCurrentExecutionPathVB.aspx#1)]  
  
 <span data-ttu-id="118e2-164">下列範例會使用<xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A>目前頁面的路徑為基礎的屬性設為資源，以程式設計方式設定的路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-164">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to programmatically set the path to a resource, based on the current path of the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/apprelativecurrentexecutionfilepath.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/apprelativecurrentexecutionfilepath.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinaryRead">
      <MemberSignature Language="C#" Value="public byte[] BinaryRead (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] BinaryRead(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.BinaryRead(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinaryRead (count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ BinaryRead(int count);" />
      <MemberSignature Language="F#" Value="member this.BinaryRead : int -&gt; byte[]" Usage="httpRequest.BinaryRead count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="118e2-165">要讀取的位元組數。</span><span class="sxs-lookup"><span data-stu-id="118e2-165">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="118e2-166">在目前輸入資料流執行指定位元組數的二進位讀取。</span><span class="sxs-lookup"><span data-stu-id="118e2-166">Performs a binary read of a specified number of bytes from the current input stream.</span></span></summary>
        <returns><span data-ttu-id="118e2-167">位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="118e2-167">A byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-168"><xref:System.Web.HttpRequest.BinaryRead%2A>方法提供與 ASP 的相容性。</span><span class="sxs-lookup"><span data-stu-id="118e2-168">The <xref:System.Web.HttpRequest.BinaryRead%2A> method is provided for compatibility with ASP.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="118e2-169"><paramref name="count" /> 為 0。</span><span class="sxs-lookup"><span data-stu-id="118e2-169"><paramref name="count" /> is 0.</span></span>  
  
<span data-ttu-id="118e2-170">-或-</span><span class="sxs-lookup"><span data-stu-id="118e2-170">-or-</span></span> 
 <span data-ttu-id="118e2-171"><paramref name="count" /> 大於可用位元組數。</span><span class="sxs-lookup"><span data-stu-id="118e2-171"><paramref name="count" /> is greater than the number of bytes available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public System.Web.HttpBrowserCapabilities Browser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpBrowserCapabilities Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Browser" />
      <MemberSignature Language="VB.NET" Value="Public Property Browser As HttpBrowserCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpBrowserCapabilities ^ Browser { System::Web::HttpBrowserCapabilities ^ get(); void set(System::Web::HttpBrowserCapabilities ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Browser : System.Web.HttpBrowserCapabilities with get, set" Usage="System.Web.HttpRequest.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpBrowserCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-172">取得或設定關於要求的用戶端瀏覽器功能的資訊。</span><span class="sxs-lookup"><span data-stu-id="118e2-172">Gets or sets information about the requesting client's browser capabilities.</span></span></summary>
        <value><span data-ttu-id="118e2-173"><see cref="T:System.Web.HttpBrowserCapabilities" /> 物件，列出用戶端瀏覽器的功能。</span><span class="sxs-lookup"><span data-stu-id="118e2-173">An <see cref="T:System.Web.HttpBrowserCapabilities" /> object listing the capabilities of the client's browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-174">下列程式碼範例會傳回給用戶端 HTML 網頁中傳送一份瀏覽器的功能。</span><span class="sxs-lookup"><span data-stu-id="118e2-174">The following code example sends a list of the browser's capabilities back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Browser Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Browser Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.UserAgent" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f"><span data-ttu-id="118e2-175">ASP.NET 伺服器控制項和瀏覽器功能</span><span class="sxs-lookup"><span data-stu-id="118e2-175">ASP.NET Server Controls and Browser Capabilities</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Web.HttpClientCertificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpClientCertificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As HttpClientCertificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpClientCertificate ^ ClientCertificate { System::Web::HttpClientCertificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificate : System.Web.HttpClientCertificate" Usage="System.Web.HttpRequest.ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpClientCertificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-176">取得目前要求的用戶端安全憑證。</span><span class="sxs-lookup"><span data-stu-id="118e2-176">Gets the current request's client security certificate.</span></span></summary>
        <value><span data-ttu-id="118e2-177"><see cref="T:System.Web.HttpClientCertificate" /> 物件，包含用戶端安全性憑證設定的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="118e2-177">An <see cref="T:System.Web.HttpClientCertificate" /> object containing information about the client's security certificate settings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-178">下列程式碼範例會將用戶端的憑證設定傳送回用戶端 HTML 網頁中。</span><span class="sxs-lookup"><span data-stu-id="118e2-178">The following code example sends the client's certificate settings back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding with get, set" Usage="System.Web.HttpRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-179">取得實體 (Entity) 主體的字元集 (Character Set)。</span><span class="sxs-lookup"><span data-stu-id="118e2-179">Gets or sets the character set of the entity-body.</span></span></summary>
        <value><span data-ttu-id="118e2-180"><see cref="T:System.Text.Encoding" /> 物件，代表用戶端的字元集。</span><span class="sxs-lookup"><span data-stu-id="118e2-180">An <see cref="T:System.Text.Encoding" /> object representing the client's character set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-181">中指定預設內容編碼[globalization 項目 （ASP.NET 設定結構描述）](https://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)組態檔。</span><span class="sxs-lookup"><span data-stu-id="118e2-181">Default content encoding can be specified in the [globalization Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) of a configuration file.</span></span> <span data-ttu-id="118e2-182">如果同時指定用戶端的內容編碼方式，會覆寫預設的組態設定。</span><span class="sxs-lookup"><span data-stu-id="118e2-182">If content encoding is also specified by the client, the default configuration settings are overridden.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-183">下列程式碼範例會指派值，表示目前 HTTP 編碼的字串變數的描述。</span><span class="sxs-lookup"><span data-stu-id="118e2-183">The following code example assigns a value representing the description of the current HTTP encoding to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int" Usage="System.Web.HttpRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-184">指定用戶端送出的內容長度，以位元組為單位。</span><span class="sxs-lookup"><span data-stu-id="118e2-184">Specifies the length, in bytes, of content sent by the client.</span></span></summary>
        <value><span data-ttu-id="118e2-185">用戶端所送出的內容長度 (以位元組為單位)。</span><span class="sxs-lookup"><span data-stu-id="118e2-185">The length, in bytes, of content sent by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-186">下列程式碼範例會指派給整數變數代表連入要求的內容長度的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-186">The following code example assigns the value representing the content length of the incoming request to an integer variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.HttpRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-187">取得或設定連入要求的 MIME 內容類型。</span><span class="sxs-lookup"><span data-stu-id="118e2-187">Gets or sets the MIME content type of the incoming request.</span></span></summary>
        <value><span data-ttu-id="118e2-188">字串，表示收到的要求之 MIME 內容類型，例如 "text/html"。</span><span class="sxs-lookup"><span data-stu-id="118e2-188">A string representing the MIME content type of the incoming request, for example, "text/html".</span></span> <span data-ttu-id="118e2-189">其他通用 MIME 類型包括 "audio.wav"、"image/gif" 和 "application/pdf"。</span><span class="sxs-lookup"><span data-stu-id="118e2-189">Additional common MIME types include "audio.wav", "image/gif", and "application/pdf".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-190">下列程式碼範例會指派給 string 變數代表連入要求的內容類型的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-190">The following code example assigns the value representing the content type of the incoming request to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/VB/source.vb#1)]  
  
 <span data-ttu-id="118e2-191">下列範例顯示可能會產生此程式碼的輸出。</span><span class="sxs-lookup"><span data-stu-id="118e2-191">The following example shows output that might be produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Web.HttpCookieCollection" Usage="System.Web.HttpRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-192">取得用戶端送出的 Cookie 的集合。</span><span class="sxs-lookup"><span data-stu-id="118e2-192">Gets a collection of cookies sent by the client.</span></span></summary>
        <value><span data-ttu-id="118e2-193"><see cref="T:System.Web.HttpCookieCollection" /> 物件，代表用戶端的 Cookie 變數。</span><span class="sxs-lookup"><span data-stu-id="118e2-193">An <see cref="T:System.Web.HttpCookieCollection" /> object representing the client's cookie variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-194">ASP.NET 包含兩個內建 cookie 集合。</span><span class="sxs-lookup"><span data-stu-id="118e2-194">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="118e2-195">透過存取的集合<xref:System.Web.HttpRequest.Cookies%2A>的集合<xref:System.Web.HttpRequest>包含傳輸中的伺服器的用戶端的 cookie`Cookie`標頭。</span><span class="sxs-lookup"><span data-stu-id="118e2-195">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="118e2-196">透過存取的集合<xref:System.Web.HttpResponse.Cookies%2A>的集合<xref:System.Web.HttpResponse>包含在伺服器上建立並傳輸至用戶端中的新 cookie`Set-Cookie`標頭。</span><span class="sxs-lookup"><span data-stu-id="118e2-196">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="118e2-197">使用新增 cookie 之後<xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType>集合中，cookie 可立即用於<xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType>集合，即使尚未傳送回應給用戶端。</span><span class="sxs-lookup"><span data-stu-id="118e2-197">After you add a cookie by using the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection, even if the response has not been sent to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-198">下列程式碼範例用戶端傳送的所有 cookie 執行都迴圈，並將名稱、 到期日，安全性參數和值的每個 cookie 傳送至 HTTP 輸出。</span><span class="sxs-lookup"><span data-stu-id="118e2-198">The following code example loops through all cookies sent by the client and sends the name, expiration date, security parameter, and values of each cookie to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-199">取得目前要求的虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-199">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="118e2-200">目前要求的虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-200">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-201"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> 目前正在執行的頁面處理常式傳回的檔案路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-201"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> returns the file path to the currently executing page handler.</span></span> <span data-ttu-id="118e2-202">使用重新導向案例<xref:System.Web.HttpServerUtility.Execute%2A>並<xref:System.Web.HttpServerUtility.Transfer%2A>方法，這表示<xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A>屬性傳回的路徑重新導向至 （子頁面） 頁面。</span><span class="sxs-lookup"><span data-stu-id="118e2-202">For redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A> methods this means that the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property returns the path to the page redirected to (child page).</span></span> <span data-ttu-id="118e2-203">不過，當用戶端重新導向至另一個頁面上，<xref:System.Web.HttpRequest.FilePath%2A>屬性傳回的原始頁面的路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-203">However, when the client is redirected to another page, the <xref:System.Web.HttpRequest.FilePath%2A> property returns the path to the original page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-204">下列程式碼範例會使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法，以 HTML 編碼的值<xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A>屬性和<xref:System.IO.TextWriter.WriteLine%2A>方法來寫入檔案的編碼的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-204">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="118e2-205">此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.HttpRequest>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-205">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="M:System.Web.HttpServerUtility.Execute(System.String)" />
        <altmember cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePathExtension">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePathExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePathExtension" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePathExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePathExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePathExtension : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-206">取得 <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> 屬性中指定之檔案名稱的副檔名。</span><span class="sxs-lookup"><span data-stu-id="118e2-206">Gets the extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span></span></summary>
        <value><span data-ttu-id="118e2-207"><see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> 屬性中指定之檔案名稱的副檔名。</span><span class="sxs-lookup"><span data-stu-id="118e2-207">The extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="System.Web.HttpRequest.FilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-208">取得目前要求的虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-208">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="118e2-209">目前要求的虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-209">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-210"><xref:System.Web.HttpRequest.FilePath%2A>屬性不包含<xref:System.Web.HttpRequest.PathInfo%2A>結尾。</span><span class="sxs-lookup"><span data-stu-id="118e2-210">The <xref:System.Web.HttpRequest.FilePath%2A> property does not include the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="118e2-211">例如，對於 URL http://www.contoso.com/virdir/page.html/tail，則<xref:System.Web.HttpRequest.FilePath%2A>值是 /virdir/page.html。</span><span class="sxs-lookup"><span data-stu-id="118e2-211">For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.FilePath%2A> value is /virdir/page.html.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-212">下列程式碼範例會使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法，以 HTML 編碼的值<xref:System.Web.HttpRequest.FilePath%2A>屬性和<xref:System.IO.TextWriter.WriteLine%2A>方法來寫入檔案的編碼的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-212">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.FilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="118e2-213">此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.HttpRequest>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-213">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public System.Web.HttpFileCollection Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpFileCollection Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Files" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Files As HttpFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpFileCollection ^ Files { System::Web::HttpFileCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Files : System.Web.HttpFileCollection" Usage="System.Web.HttpRequest.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-214">取得用戶端所上傳的檔案集合，其格式為多重 MIME。</span><span class="sxs-lookup"><span data-stu-id="118e2-214">Gets the collection of files uploaded by the client, in multipart MIME format.</span></span></summary>
        <value><span data-ttu-id="118e2-215"><see cref="T:System.Web.HttpFileCollection" /> 物件，代表用戶端上傳的檔案集合。</span><span class="sxs-lookup"><span data-stu-id="118e2-215">An <see cref="T:System.Web.HttpFileCollection" /> object representing a collection of files uploaded by the client.</span></span> <span data-ttu-id="118e2-216"><see cref="T:System.Web.HttpFileCollection" /> 物件的項目為 <see cref="T:System.Web.HttpPostedFile" /> 類型。</span><span class="sxs-lookup"><span data-stu-id="118e2-216">The items of the <see cref="T:System.Web.HttpFileCollection" /> object are of type <see cref="T:System.Web.HttpPostedFile" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-217">只會填入檔案集合在 HTTP 要求的`Content-Type`值是"multipart/表單資料的 」。</span><span class="sxs-lookup"><span data-stu-id="118e2-217">The file collection is populated only when the HTTP request `Content-Type` value is "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-218">下列程式碼範例顯示中的所有檔案的名稱<xref:System.Web.HttpRequest.Files%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="118e2-218">The following code example displays the names of all files in the <xref:System.Web.HttpRequest.Files%2A> collection.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Files Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Files Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Files Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Files Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.IO.Stream with get, set" Usage="System.Web.HttpRequest.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-219">在讀取目前輸入資料流時取得或設定要使用的篩選條件。</span><span class="sxs-lookup"><span data-stu-id="118e2-219">Gets or sets the filter to use when reading the current input stream.</span></span></summary>
        <value><span data-ttu-id="118e2-220">要當做篩選條件的 <see cref="T:System.IO.Stream" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-220">A <see cref="T:System.IO.Stream" /> object to be used as the filter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-221">下列程式碼範例會建立兩個新的類別，`QQQ1`並`QQQ2`該篩選<xref:System.Web.HttpRequest.InputStream%2A>。</span><span class="sxs-lookup"><span data-stu-id="118e2-221">The following code example creates two new classes, `QQQ1` and `QQQ2` that filter the <xref:System.Web.HttpRequest.InputStream%2A>.</span></span> <span data-ttu-id="118e2-222">這樣會篩選所有的 ASP.NET Web pages 應用程式中的所有輸入，請將類別放入 ASP.NET 應用程式的目錄中的 Global.asax 檔中。</span><span class="sxs-lookup"><span data-stu-id="118e2-222">Put the classes into the Global.asax file in an ASP.NET application's directory so that all input for all ASP.NET Web pages in the application will be filtered.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Filter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/CS/systemwebhttprequestfilter.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Filter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/VB/systemwebhttprequestfilter.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="118e2-223">指定的 <see cref="T:System.IO.Stream" /> 無效。</span><span class="sxs-lookup"><span data-stu-id="118e2-223">The specified <see cref="T:System.IO.Stream" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Form { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-224">取得表單變數的集合。</span><span class="sxs-lookup"><span data-stu-id="118e2-224">Gets a collection of form variables.</span></span></summary>
        <value><span data-ttu-id="118e2-225"><see cref="T:System.Collections.Specialized.NameValueCollection" />，代表表單變數的集合。</span><span class="sxs-lookup"><span data-stu-id="118e2-225">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> representing a collection of form variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-226"><xref:System.Web.HttpRequest.Form%2A>屬性會填入在 HTTP 要求的`Content-Type`值為"application/x-www-表單-urlencoded"或"multipart/表單資料的 」。</span><span class="sxs-lookup"><span data-stu-id="118e2-226">The <xref:System.Web.HttpRequest.Form%2A> property is populated when the HTTP request `Content-Type` value is either "application/x-www-form-urlencoded" or "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-227">下列範例示範如何讀取從瀏覽器張貼的表單集合中的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-227">The following example shows how to read the values in the form collection posted from a browser.</span></span> <span data-ttu-id="118e2-228">集合中的每個名稱/值組表示在表單和其值的控制項。</span><span class="sxs-lookup"><span data-stu-id="118e2-228">Each name/value pair in the collection represents a control in the form and its value.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Form Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Form Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferedInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferedInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferedInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferedInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferedInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferedInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferedInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferedInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="118e2-229">取得可用來讀取傳入 HTTP 實體內容的 <see cref="T:System.IO.Stream" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-229">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
        <returns><span data-ttu-id="118e2-230"><see cref="T:System.IO.Stream" /> 物件，可用來讀取傳入 HTTP 實體內容。</span><span class="sxs-lookup"><span data-stu-id="118e2-230">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-231">這個方法相當於<xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>不同之處在於它也會將讀取的位元組複製到內部儲存體，供 ASP.NET 用來填入<xref:System.Web.HttpRequest.Form%2A>， <xref:System.Web.HttpRequest.Files%2A>，和<xref:System.Web.HttpRequest.InputStream%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-231">This method is identical to <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> except that it also copies the bytes that are read to the internal storage that is used by ASP.NET to populate the <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, and <xref:System.Web.HttpRequest.InputStream%2A> properties.</span></span> <span data-ttu-id="118e2-232">由於保留了這項資訊，ASP.NET Web Form 網頁 (.aspx 檔) 等下游程式碼將會成功執行。</span><span class="sxs-lookup"><span data-stu-id="118e2-232">Because this information is preserved, downstream code such as ASP.NET Web Forms pages (.aspx files) will run successfully.</span></span> <span data-ttu-id="118e2-233">這不是使用 <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> 方法的情況。</span><span class="sxs-lookup"><span data-stu-id="118e2-233">This is not the case with the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="118e2-234">已載入並剖析要求的實體主體。</span><span class="sxs-lookup"><span data-stu-id="118e2-234">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="118e2-235">造成載入及剖析實體主體的屬性包含下列範例：</span><span class="sxs-lookup"><span data-stu-id="118e2-235">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span> 
<span data-ttu-id="118e2-236">-   <see cref="P:System.Web.HttpRequest.Form" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-236">-   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span></span>  
  
<span data-ttu-id="118e2-237">-   <see cref="P:System.Web.HttpRequest.Files" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-237">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span></span>  
  
<span data-ttu-id="118e2-238">-   <see cref="P:System.Web.HttpRequest.InputStream" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-238">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span></span>  
  
<span data-ttu-id="118e2-239">-   <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="118e2-239">-   The <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> method.</span></span>  
  
<span data-ttu-id="118e2-240">若要避免此例外狀況，首先呼叫<see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" />方法。</span><span class="sxs-lookup"><span data-stu-id="118e2-240">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="118e2-241">如果在讀取實體主題時中斷連接用戶端，也會擲回這個例外狀況。</span><span class="sxs-lookup"><span data-stu-id="118e2-241">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBufferlessInputStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="118e2-242">取得可用來讀取傳入 HTTP 實體內容的 <see cref="T:System.IO.Stream" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-242">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="118e2-243">取得可用來讀取傳入 HTTP 實體內容的 <see cref="T:System.IO.Stream" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-243">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
        <returns><span data-ttu-id="118e2-244"><see cref="T:System.IO.Stream" /> 物件，可用來讀取傳入 HTTP 實體內容。</span><span class="sxs-lookup"><span data-stu-id="118e2-244">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-245">這個方法會提供替代使用<xref:System.Web.HttpRequest.InputStream%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-245">This method provides an alternative to using the <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span> <span data-ttu-id="118e2-246"><xref:System.Web.HttpRequest.InputStream%2A>屬性會等到它傳回之前已收到整個要求<xref:System.IO.Stream>物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-246">The <xref:System.Web.HttpRequest.InputStream%2A> property waits until the whole request has been received before it returns a <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="118e2-247">相反地，<xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>方法會傳回<xref:System.IO.Stream>立即物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-247">In contrast, the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method returns the <xref:System.IO.Stream> object immediately.</span></span> <span data-ttu-id="118e2-248">您可以使用此方法以開始處理之後才完成本文的內容已接收到的實體。</span><span class="sxs-lookup"><span data-stu-id="118e2-248">You can use the method to begin processing the entity body before the complete contents of the body have been received.</span></span>  
  
 <span data-ttu-id="118e2-249">實體 （或盡可能為您的要求，且已收到） 只有在您使用的物件時，才會傳回透過呼叫方法，例如讀取資料流，這個方法所傳回<xref:System.IO.Stream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="118e2-249">The entity body (or as much of it as you request and has been received) is returned only when you use the object that is returned by this method to read the stream, by calling methods such as the <xref:System.IO.Stream.Read%2A> method.</span></span> <span data-ttu-id="118e2-250">您使用的參數<xref:System.IO.Stream.Read%2A>方法，以指定要讀取實體主體中有多少。</span><span class="sxs-lookup"><span data-stu-id="118e2-250">You use parameters of the <xref:System.IO.Stream.Read%2A> method to specify how much of the entity body to read.</span></span>  
  
 <span data-ttu-id="118e2-251"><xref:System.IO.Stream>從這個方法由 ASP.NET 所傳回的物件支援同步和非同步讀取的方法。</span><span class="sxs-lookup"><span data-stu-id="118e2-251">The <xref:System.IO.Stream> object returned by ASP.NET from this method supports both synchronous and asynchronous read methods.</span></span> <span data-ttu-id="118e2-252"><xref:System.IO.Stream>物件會實作<xref:System.IO.Stream.BeginRead%2A>和<xref:System.IO.Stream.EndRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="118e2-252">The <xref:System.IO.Stream> object implements both the <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> methods.</span></span> <span data-ttu-id="118e2-253">非同步方法可讓您以非同步方式讀取要求實體中的區塊，而 ASP.NET 會釋放目前執行緒的非同步讀取迴圈的每個反覆項目之間。</span><span class="sxs-lookup"><span data-stu-id="118e2-253">The asynchronous methods let you asynchronously read the request entity in chunks, while ASP.NET releases the current thread in between each iteration of an asynchronous read loop.</span></span>  
  
 <span data-ttu-id="118e2-254">如果要求上傳大型檔案，而且您想要開始存取檔案內容之前上傳完成，則這個方法就很有用。</span><span class="sxs-lookup"><span data-stu-id="118e2-254">This method can be useful if the request is uploading a large file and you want to begin accessing the file contents before the upload is finished.</span></span> <span data-ttu-id="118e2-255">不過，您應該只使用這個方法的情況下您要接管的實體主體的所有處理。</span><span class="sxs-lookup"><span data-stu-id="118e2-255">However, you should only use this method for scenarios where you want to take over all processing of the entity body.</span></span> <span data-ttu-id="118e2-256">這表示您無法使用這個方法從.aspx 頁面，因為.aspx 頁面執行時，實體已讀取。</span><span class="sxs-lookup"><span data-stu-id="118e2-256">This means that you cannot use this method from an .aspx page, because by the time an .aspx page runs, the entity body has already been read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="118e2-257">已載入並剖析要求的實體主體。</span><span class="sxs-lookup"><span data-stu-id="118e2-257">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="118e2-258">造成載入及剖析實體主體的屬性包含下列範例：</span><span class="sxs-lookup"><span data-stu-id="118e2-258">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span> 
-   <see cref="P:System.Web.HttpRequest.Form" />  
  
-   <see cref="P:System.Web.HttpRequest.InputStream" />  
  
-   <see cref="P:System.Web.HttpRequest.Files" />  
  
-   <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" />  
  
<span data-ttu-id="118e2-259">若要避免此例外狀況，首先呼叫<see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" />方法。</span><span class="sxs-lookup"><span data-stu-id="118e2-259">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="118e2-260">如果在讀取實體主題時中斷連接用戶端，也會擲回這個例外狀況。</span><span class="sxs-lookup"><span data-stu-id="118e2-260">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream(bool disableMaxRequestLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream (disableMaxRequestLength As Boolean) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream(bool disableMaxRequestLength);" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : bool -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream disableMaxRequestLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disableMaxRequestLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disableMaxRequestLength"><span data-ttu-id="118e2-261"><see langword="true" /> 表示要停用要求長度限制；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="118e2-261"><see langword="true" /> to disable the request-length limit; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="118e2-262">取得 <see cref="T:System.IO.Stream" /> 物件，這個物件可用來讀取傳入 HTTP 實體內容，並選擇性地停用 <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> 屬性中所設定的要求長度限制。</span><span class="sxs-lookup"><span data-stu-id="118e2-262">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span></span></summary>
        <returns><span data-ttu-id="118e2-263"><see cref="T:System.IO.Stream" /> 物件，可用來讀取傳入 HTTP 實體內容。</span><span class="sxs-lookup"><span data-stu-id="118e2-263">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-264">如需有關這個方法的詳細資訊，請參閱<xref:System.Web.HttpRequest.GetBufferlessInputStream>多載。</span><span class="sxs-lookup"><span data-stu-id="118e2-264">For more information about this method, see the <xref:System.Web.HttpRequest.GetBufferlessInputStream> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="118e2-265">已載入並剖析要求的實體主體。</span><span class="sxs-lookup"><span data-stu-id="118e2-265">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="118e2-266">造成載入及剖析實體主體的屬性包含下列範例：</span><span class="sxs-lookup"><span data-stu-id="118e2-266">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span> 
<span data-ttu-id="118e2-267">-   <see cref="P:System.Web.HttpRequest.Form" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-267">-   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span></span>  
  
<span data-ttu-id="118e2-268">-   <see cref="P:System.Web.HttpRequest.Files" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-268">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span></span>  
  
<span data-ttu-id="118e2-269">-   <see cref="P:System.Web.HttpRequest.InputStream" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-269">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span></span>  
  
<span data-ttu-id="118e2-270">-   <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="118e2-270">-   The <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /> method.</span></span>  
  
<span data-ttu-id="118e2-271">若要避免此例外狀況，首先呼叫<see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" />方法。</span><span class="sxs-lookup"><span data-stu-id="118e2-271">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="118e2-272">如果在讀取實體主題時中斷連接用戶端，也會擲回這個例外狀況。</span><span class="sxs-lookup"><span data-stu-id="118e2-272">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-273">取得 HTTP 標頭的集合。</span><span class="sxs-lookup"><span data-stu-id="118e2-273">Gets a collection of HTTP headers.</span></span></summary>
        <value><span data-ttu-id="118e2-274">標頭的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="118e2-274">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of headers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-275">如需所有可能的標頭的清單，請參閱 <<c0> [ 要求標頭欄位](https://go.microsoft.com/fwlink/?LinkId=73147)W3C 網站上。</span><span class="sxs-lookup"><span data-stu-id="118e2-275">For a listing of all possible headers, see [Request Header Fields](https://go.microsoft.com/fwlink/?LinkId=73147) on the W3C Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-276">下列程式碼範例會顯示 HTTP 要求中的名稱和值的所有標頭。</span><span class="sxs-lookup"><span data-stu-id="118e2-276">The following code example displays the names and values of all headers in the HTTP request.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Headers Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Headers Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpChannelBinding">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpChannelBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpChannelBinding As ChannelBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ChannelBinding ^ HttpChannelBinding { System::Security::Authentication::ExtendedProtection::ChannelBinding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpChannelBinding : System.Security.Authentication.ExtendedProtection.ChannelBinding" Usage="System.Web.HttpRequest.HttpChannelBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ChannelBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-277">取得目前 <see cref="T:System.Web.HttpWorkerRequest" /> 執行個體的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-277">Gets the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span></span></summary>
        <value><span data-ttu-id="118e2-278">目前 <see cref="T:System.Web.HttpWorkerRequest" /> 執行個體的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-278">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="118e2-279">目前的 <see cref="T:System.Web.HttpWorkerRequest" /> 物件不是 <see langword="System.Web.Hosting.IIS7WorkerRequest" /> 物件或 <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-279">The current <see cref="T:System.Web.HttpWorkerRequest" /> object is not a <see langword="System.Web.Hosting.IIS7WorkerRequest" /> object or a <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Web.HttpRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-280">取得用戶端使用的 HTTP 資料傳輸方法 (例如 <see langword="GET" />、<see langword="POST" /> 或 <see langword="HEAD" />)。</span><span class="sxs-lookup"><span data-stu-id="118e2-280">Gets the HTTP data transfer method (such as <see langword="GET" />, <see langword="POST" />, or <see langword="HEAD" />) used by the client.</span></span></summary>
        <value><span data-ttu-id="118e2-281">用戶端使用的 HTTP 資料傳輸方法。</span><span class="sxs-lookup"><span data-stu-id="118e2-281">The HTTP data transfer method used by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-282">下列程式碼範例會使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法，以 HTML 編碼的值<xref:System.Web.HttpRequest.HttpMethod%2A>屬性和<xref:System.IO.TextWriter.WriteLine%2A>方法來寫入檔案的編碼的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-282">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.HttpMethod%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="118e2-283">此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.HttpRequest>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-283">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 <span data-ttu-id="118e2-284">下列範例會顯示這段程式碼所產生的輸出。</span><span class="sxs-lookup"><span data-stu-id="118e2-284">The following example shows output that is produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Web.HttpRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-285">取得連入 HTTP 實體主體的內容。</span><span class="sxs-lookup"><span data-stu-id="118e2-285">Gets the contents of the incoming HTTP entity body.</span></span></summary>
        <value><span data-ttu-id="118e2-286"><see cref="T:System.IO.Stream" /> 物件，代表傳入 HTTP 內容主體的內容。</span><span class="sxs-lookup"><span data-stu-id="118e2-286">A <see cref="T:System.IO.Stream" /> object representing the contents of the incoming HTTP content body.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-287">下列程式碼範例的內容複製<xref:System.Web.HttpRequest.InputStream%2A>轉換為字串。</span><span class="sxs-lookup"><span data-stu-id="118e2-287">The following code example copies the contents of an <xref:System.Web.HttpRequest.InputStream%2A> into a string.</span></span>  
  
 [!code-csharp[Classic HttpRequest.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/cs/source.aspx#1)]
 [!code-vb[Classic HttpRequest.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="118e2-288">提供 IIS 方法的 Managed 包裝函式，這個方法會將 HTTP 要求實體本文插入記憶體中。</span><span class="sxs-lookup"><span data-stu-id="118e2-288">Provides a managed wrapper for the IIS method that inserts an HTTP request entity body into memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-289"><xref:System.Web.HttpRequest.InsertEntityBody%2A>方法多載會提供受管理的存取權給 IIS 7`IHttpRequest::InsertEntityBody`方法。</span><span class="sxs-lookup"><span data-stu-id="118e2-289">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads provide managed access to the IIS 7 `IHttpRequest::InsertEntityBody` method.</span></span> <span data-ttu-id="118e2-290">IIS 方法會插入記憶體中的 HTTP 要求實體主體 （用戶端所張貼的資料）。</span><span class="sxs-lookup"><span data-stu-id="118e2-290">The IIS method inserts an HTTP request entity body (the data that is posted by a client) into memory.</span></span> <span data-ttu-id="118e2-291">這是實體的很有用，因為 IIS 不會維護一份要求之後已讀取。</span><span class="sxs-lookup"><span data-stu-id="118e2-291">This is useful because IIS does not maintain a copy of the request entity after it has been read.</span></span> <span data-ttu-id="118e2-292"><xref:System.Web.HttpRequest.InsertEntityBody%2A>方法建立的 HTTP 要求實體資料複本，並將它提供給 IIS 的其他自訂處理。</span><span class="sxs-lookup"><span data-stu-id="118e2-292">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> methods create a copy of the HTTP request entity data and make it available to IIS for additional custom handling.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="118e2-293"><xref:System.Web.HttpRequest.InsertEntityBody%2A>方法多載工作只在 IIS 7.0 或更新版本，因為`IHttpRequest::InsertEntityBody`方法在 IIS 7.0 中所加入。</span><span class="sxs-lookup"><span data-stu-id="118e2-293">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads work only on IIS 7.0 or later, because the `IHttpRequest::InsertEntityBody` method was added in IIS 7.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody();" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : unit -&gt; unit" Usage="httpRequest.InsertEntityBody " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="118e2-294">將 HTTP 要求實體本文的複本提供給 IIS。</span><span class="sxs-lookup"><span data-stu-id="118e2-294">Provides IIS with a copy of the HTTP request entity body.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-295">已讀取之後，IIS 就不會維護要求的複本。</span><span class="sxs-lookup"><span data-stu-id="118e2-295">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="118e2-296">因此，建議只針對 HTTP 要求處理常式應該讀取要求的實體。</span><span class="sxs-lookup"><span data-stu-id="118e2-296">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="118e2-297"><xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType>方法多載以一份要求的實體提供 IIS 先前讀取 asp.net。</span><span class="sxs-lookup"><span data-stu-id="118e2-297">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload provides IIS with a copy of the request entity if it was previously read by ASP.NET.</span></span> <span data-ttu-id="118e2-298">這個方法多載可用於 ASP.NET 具有讀取實體的要求，而且您想要重複使用現有的要求資料。</span><span class="sxs-lookup"><span data-stu-id="118e2-298">This method overload is useful for cases where ASP.NET has read the entity request and you want to reuse the existing request data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="118e2-299">已在比 IIS 7.0 版舊的 IIS 上叫用此方法。</span><span class="sxs-lookup"><span data-stu-id="118e2-299">The method was invoked on a version of IIS earlier than IIS 7.0.</span></span></exception>
        <permission cref="T:System.Web.AspNetHostingPermission"><span data-ttu-id="118e2-300">在主控環境中運作。</span><span class="sxs-lookup"><span data-stu-id="118e2-300">For operating in a hosted environment.</span></span> <span data-ttu-id="118e2-301">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="118e2-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="118e2-302">相關聯的列舉型別： <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span><span class="sxs-lookup"><span data-stu-id="118e2-302">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : byte[] * int * int -&gt; unit" Usage="httpRequest.InsertEntityBody (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="118e2-303">包含要求實體資料的陣列。</span><span class="sxs-lookup"><span data-stu-id="118e2-303">An array that contains the request entity data.</span></span></param>
        <param name="offset"><span data-ttu-id="118e2-304">在 <paramref name="buffer" /> 中要開始儲存該要求實體資料的位置 (以零為起始)。</span><span class="sxs-lookup"><span data-stu-id="118e2-304">The zero-based position in <paramref name="buffer" /> at which to begin storing the request entity data.</span></span></param>
        <param name="count"><span data-ttu-id="118e2-305">要讀入 <paramref name="buffer" /> 陣列的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="118e2-305">The number of bytes to read into the <paramref name="buffer" /> array.</span></span></param>
        <summary><span data-ttu-id="118e2-306">將 HTTP 要求實體本文的複本及該要求實體物件的相關資訊提供給 IIS。</span><span class="sxs-lookup"><span data-stu-id="118e2-306">Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-307">已讀取之後，IIS 就不會維護要求的複本。</span><span class="sxs-lookup"><span data-stu-id="118e2-307">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="118e2-308">因此，建議只針對 HTTP 要求處理常式應該讀取要求的實體。</span><span class="sxs-lookup"><span data-stu-id="118e2-308">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="118e2-309"><xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType>方法多載是很有用，當您想要執行自訂處理，例如不同的實體本文插入記憶體。</span><span class="sxs-lookup"><span data-stu-id="118e2-309">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload is useful when you want to perform custom processing, such as inserting a different entity body into memory.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="118e2-310">已在比 IIS 7.0 版舊的 IIS 上叫用此方法。</span><span class="sxs-lookup"><span data-stu-id="118e2-310">The method was invoked on a version of IIS earlier than IIS 7.0.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="118e2-311"><paramref name="buffer" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="118e2-311"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="118e2-312"><paramref name="offset" /> 或 <paramref name="count" /> 為負值。</span><span class="sxs-lookup"><span data-stu-id="118e2-312"><paramref name="offset" /> or <paramref name="count" /> is a negative value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="118e2-313">在指定 <paramref name="count" /> 值的情況下，<paramref name="buffer" /> 中的項目數大於 <paramref name="offset" /> 的可用空間。</span><span class="sxs-lookup"><span data-stu-id="118e2-313">The number of items in <paramref name="count" /> is larger than the available space in <paramref name="buffer" />, given the <paramref name="offset" /> value.</span></span></exception>
        <permission cref="T:System.Web.AspNetHostingPermission"><span data-ttu-id="118e2-314">用於裝載環境中的作業。</span><span class="sxs-lookup"><span data-stu-id="118e2-314">for operating in a hosted environment.</span></span> <span data-ttu-id="118e2-315">安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="118e2-315">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="118e2-316">相關聯的列舉型別： <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span><span class="sxs-lookup"><span data-stu-id="118e2-316">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.HttpRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-317">取得值，表示要求是否已經驗證過。</span><span class="sxs-lookup"><span data-stu-id="118e2-317">Gets a value indicating whether the request has been authenticated.</span></span></summary>
        <value><span data-ttu-id="118e2-318">如果已經驗證要求，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="118e2-318"><see langword="true" /> if the request is authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-319">下列程式碼範例使用<xref:System.Web.HttpRequest.IsAuthenticated%2A>屬性來判斷目前的要求是否已經過驗證。</span><span class="sxs-lookup"><span data-stu-id="118e2-319">The following code example uses the <xref:System.Web.HttpRequest.IsAuthenticated%2A> property to determine whether the current request has been authenticated.</span></span> <span data-ttu-id="118e2-320">如果尚未驗證，可讓使用者輸入其認證至 Web 應用程式的另一個頁面重新導向要求。</span><span class="sxs-lookup"><span data-stu-id="118e2-320">If it has not been authenticated, the request is redirected to another page where users can enter their credentials into the Web application.</span></span> <span data-ttu-id="118e2-321">這是常用的技巧的預設頁面應用程式。</span><span class="sxs-lookup"><span data-stu-id="118e2-321">This is a common technique used in the default page for an application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/CS/isauthenticatedcs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/VB/isauthenticatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Web.HttpRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-322">取得值，表示要求是否來自本機電腦。</span><span class="sxs-lookup"><span data-stu-id="118e2-322">Gets a value indicating whether the request is from the local computer.</span></span></summary>
        <value><span data-ttu-id="118e2-323">如果要求來自本機電腦，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="118e2-323"><see langword="true" /> if the request is from the local computer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-324"><xref:System.Web.HttpRequest.IsLocal%2A>屬性會傳回`true`如果要求的建立者的 IP 位址 127.0.0.1，或要求的 IP 位址是伺服器的 IP 位址相同。</span><span class="sxs-lookup"><span data-stu-id="118e2-324">The <xref:System.Web.HttpRequest.IsLocal%2A> property returns `true` if the IP address of the request originator is 127.0.0.1 or if the IP address of the request is the same as the server's IP address.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Web.HttpRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-325">取得值，這個執會指示 HTTP 連接是否使用安全通訊 (也就是，HTTPS)。</span><span class="sxs-lookup"><span data-stu-id="118e2-325">Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</span></span></summary>
        <value><span data-ttu-id="118e2-326">如果連接為 SSL 連接，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="118e2-326"><see langword="true" /> if the connection is an SSL connection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-327">下列程式碼範例會判斷是否<xref:System.Web.HttpRequest.IsSecureConnection%2A>屬性設定為 false。</span><span class="sxs-lookup"><span data-stu-id="118e2-327">The following code example determines whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false.</span></span> <span data-ttu-id="118e2-328">如果是，<xref:System.Web.HttpResponse.SuppressContent%2A>屬性設定為 true，以停止傳送回應。</span><span class="sxs-lookup"><span data-stu-id="118e2-328">If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsesuppresscontentcs.aspx#3)]
 [!code-vb[System.Web.HttpResponse_Sample5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsesuppresscontentvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.HttpRequest.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="118e2-329">要取得之集合成員的名稱。</span><span class="sxs-lookup"><span data-stu-id="118e2-329">The name of the collection member to get.</span></span></param>
        <summary><span data-ttu-id="118e2-330">從 <see cref="P:System.Web.HttpRequest.QueryString" />、<see cref="P:System.Web.HttpRequest.Form" />、<see cref="P:System.Web.HttpRequest.Cookies" /> 或 <see cref="P:System.Web.HttpRequest.ServerVariables" /> 集合取得指定的物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-330">Gets the specified object from the <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collections.</span></span></summary>
        <value><span data-ttu-id="118e2-331">在 <paramref name="key" /> 參數中指定的 <see cref="P:System.Web.HttpRequest.QueryString" />、<see cref="P:System.Web.HttpRequest.Form" />、<see cref="P:System.Web.HttpRequest.Cookies" /> 或 <see cref="P:System.Web.HttpRequest.ServerVariables" /> 集合成員。</span><span class="sxs-lookup"><span data-stu-id="118e2-331">The <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collection member specified in the <paramref name="key" /> parameter.</span></span> <span data-ttu-id="118e2-332">如果找不到指定的 <paramref name="key" />，則會傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="118e2-332">If the specified <paramref name="key" /> is not found, then <see langword="null" /> is returned.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogonUserIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity LogonUserIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.LogonUserIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogonUserIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::WindowsIdentity ^ LogonUserIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogonUserIdentity : System.Security.Principal.WindowsIdentity" Usage="System.Web.HttpRequest.LogonUserIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-333">取得目前使用者的 <see cref="T:System.Security.Principal.WindowsIdentity" /> 類型。</span><span class="sxs-lookup"><span data-stu-id="118e2-333">Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</span></span></summary>
        <value><span data-ttu-id="118e2-334">目前 Microsoft Internet Information Services (IIS) 驗證設定的 <see cref="T:System.Security.Principal.WindowsIdentity" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-334">A <see cref="T:System.Security.Principal.WindowsIdentity" /> object for the current Microsoft Internet Information Services (IIS) authentication settings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-335"><xref:System.Web.HttpRequest.LogonUserIdentity%2A>屬性會公開的屬性和方法<xref:System.Security.Principal.WindowsIdentity>目前連接的使用者以 Microsoft 網際網路資訊服務 (IIS) 的物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-335">The <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property exposes the properties and methods of the <xref:System.Security.Principal.WindowsIdentity> object for the currently connected user to Microsoft Internet Information Services (IIS).</span></span> <span data-ttu-id="118e2-336">執行個體<xref:System.Security.Principal.WindowsIdentity>類別所公開<xref:System.Web.HttpRequest.LogonUserIdentity%2A>追蹤 IIS 要求語彙基元，並可輕鬆存取此語彙基元在 ASP.NET 內正在處理目前的 HTTP 要求。</span><span class="sxs-lookup"><span data-stu-id="118e2-336">The instance of the <xref:System.Security.Principal.WindowsIdentity> class that is exposed by <xref:System.Web.HttpRequest.LogonUserIdentity%2A> tracks the IIS request token and provides easy access to this token for the current HTTP request being processed inside of ASP.NET.</span></span> <span data-ttu-id="118e2-337">執行個體<xref:System.Security.Principal.WindowsIdentity>類別會自動建立，因此不需要為建構，以便存取其方法和屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-337">An instance of the <xref:System.Security.Principal.WindowsIdentity> class is automatically created so it does not need to be constructed to in order to gain access to its methods and properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-338">下列程式碼範例示範如何擷取<xref:System.Web.HttpRequest.LogonUserIdentity%2A>屬性寫出的文字檔案中的每個項目值與目前的使用者。</span><span class="sxs-lookup"><span data-stu-id="118e2-338">The following code example shows how to retrieve the <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property for the current user and write out the values of each item in a text file.</span></span> <span data-ttu-id="118e2-339">此程式碼置於表單的參考的 ASP.NET 頁面`ACTION`屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-339">Place this code on the ASP.NET page referenced by the form's `ACTION` attribute.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/CS/logonuseridentity_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/VB/logonuseridentity_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="118e2-340">Web 應用程式是在 IIS 7 整合模式中執行，而且尚未引發 <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="118e2-340">The Web application is running in IIS 7 integrated mode and the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event has not yet been raised.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapImageCoordinates">
      <MemberSignature Language="C#" Value="public int[] MapImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] MapImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapImageCoordinates (imageFieldName As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ MapImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapImageCoordinates : string -&gt; int[]" Usage="httpRequest.MapImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName"><span data-ttu-id="118e2-341">表單影像地圖的名稱。</span><span class="sxs-lookup"><span data-stu-id="118e2-341">The name of the form image map.</span></span></param>
        <summary><span data-ttu-id="118e2-342">將收到的影像欄的表單參數對應至適當的 X 座標和 Y 座標值。</span><span class="sxs-lookup"><span data-stu-id="118e2-342">Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</span></span></summary>
        <returns><span data-ttu-id="118e2-343">整數的二維陣列。</span><span class="sxs-lookup"><span data-stu-id="118e2-343">A two-dimensional array of integers.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="118e2-344">將用戶端目前要求之 URL 的虛擬路徑對應至伺服器上的實體路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-344">Maps the virtual path in the requested URL to a physical path on the server for the current request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string -&gt; string" Usage="httpRequest.MapPath virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="118e2-345">目前要求的虛擬路徑 (絕對或相對的)。</span><span class="sxs-lookup"><span data-stu-id="118e2-345">The virtual path (absolute or relative) for the current request.</span></span></param>
        <summary><span data-ttu-id="118e2-346">將指定的虛擬路徑對應至實體路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-346">Maps the specified virtual path to a physical path.</span></span></summary>
        <returns><span data-ttu-id="118e2-347">伺服器上的實體路徑，由 <paramref name="virtualPath" /> 所指定。</span><span class="sxs-lookup"><span data-stu-id="118e2-347">The physical path on the server specified by <paramref name="virtualPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="118e2-348"><xref:System.Web.HttpRequest.MapPath%2A>屬性可能包含裝載環境的機密資訊。</span><span class="sxs-lookup"><span data-stu-id="118e2-348">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="118e2-349">傳回的值不應該向使用者顯示。</span><span class="sxs-lookup"><span data-stu-id="118e2-349">The return value should not be displayed to users.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-350">下列程式碼範例使用<xref:System.Web.HttpRequest.MapPath%2A>方法，以將虛擬路徑轉換成在伺服器上的完整實體路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-350">The following code example uses the <xref:System.Web.HttpRequest.MapPath%2A> method to convert a virtual path to a fully qualified physical path on the server.</span></span> <span data-ttu-id="118e2-351">此範例中有兩個部分：</span><span class="sxs-lookup"><span data-stu-id="118e2-351">This example has two parts:</span></span>  
  
-   <span data-ttu-id="118e2-352">.Aspx 頁面的路徑對應、 讀取檔案，並會顯示讀取作業的結果。</span><span class="sxs-lookup"><span data-stu-id="118e2-352">An .aspx page maps the path, reads the file, and displays results of the read operation.</span></span>  
  
-   <span data-ttu-id="118e2-353">一種類別， `UpperCaseFilterStream`，變更為大寫通過的所有字元。</span><span class="sxs-lookup"><span data-stu-id="118e2-353">A class, `UpperCaseFilterStream`, that changes all characters passed through it to uppercase.</span></span>  
  
 <span data-ttu-id="118e2-354">此範例的第一個部分示範如何將虛擬路徑轉換成完整的實體路徑，使用<xref:System.Web.HttpRequest.MapPath%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="118e2-354">The first part of the example shows how to convert a virtual path to a fully qualified physical path using the <xref:System.Web.HttpRequest.MapPath%2A> method.</span></span> <span data-ttu-id="118e2-355">此實體的路徑會傳遞至<xref:System.IO.StreamReader>物件，它會取得檔案的內容。</span><span class="sxs-lookup"><span data-stu-id="118e2-355">This physical path is then passed to a <xref:System.IO.StreamReader> object, which obtains the contents of the file.</span></span> <span data-ttu-id="118e2-356"><xref:System.Web.HttpResponse.Write%2A>方法接著會呼叫顯示在頁面上的檔案內容。</span><span class="sxs-lookup"><span data-stu-id="118e2-356">The <xref:System.Web.HttpResponse.Write%2A> method is then called to display the content of the file on the page.</span></span> <span data-ttu-id="118e2-357"><xref:System.Web.HttpResponse.Filter%2A>屬性用來將篩選附加至回應資料流，讓 [全部大寫] 頁面上所顯示的文字。</span><span class="sxs-lookup"><span data-stu-id="118e2-357">The <xref:System.Web.HttpResponse.Filter%2A> property is used to attach a filter to the response stream that makes the text displayed to the page all uppercase.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Samples2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/requestsamples2cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Samples2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/requestsamples2vb.aspx#1)]  
  
 <span data-ttu-id="118e2-358">此範例的第二部分顯示的類別，繼承自<xref:System.IO.Stream>並將資料流中的所有字元都轉換成大寫。</span><span class="sxs-lookup"><span data-stu-id="118e2-358">The second part of the example shows a class that inherits from <xref:System.IO.Stream> and converts all characters in a stream to uppercase.</span></span> <span data-ttu-id="118e2-359">將此程式碼放入`App_Code`應用程式資料夾。</span><span class="sxs-lookup"><span data-stu-id="118e2-359">Put this code in the `App_Code` folder for your application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Samples2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/responsefilter.cs#2)]
 [!code-vb[System.Web.HttpRequest_Samples2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/responsefilter.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="118e2-360">未定義要求的 <see cref="T:System.Web.HttpContext" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-360">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath, string baseVirtualDir, bool allowCrossAppMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String, baseVirtualDir As String, allowCrossAppMapping As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath, System::String ^ baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string * string * bool -&gt; string" Usage="httpRequest.MapPath (virtualPath, baseVirtualDir, allowCrossAppMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="baseVirtualDir" Type="System.String" />
        <Parameter Name="allowCrossAppMapping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="118e2-361">目前要求的虛擬路徑 (絕對或相對的)。</span><span class="sxs-lookup"><span data-stu-id="118e2-361">The virtual path (absolute or relative) for the current request.</span></span></param>
        <param name="baseVirtualDir"><span data-ttu-id="118e2-362">用於相對解析的虛擬基底目錄路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-362">The virtual base directory path used for relative resolution.</span></span></param>
        <param name="allowCrossAppMapping"><span data-ttu-id="118e2-363"><see langword="true" /> 表示 <paramref name="virtualPath" /> 可能屬於另一個應用程式；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="118e2-363"><see langword="true" /> to indicate that <paramref name="virtualPath" /> may belong to another application; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="118e2-364">將指定的虛擬路徑對應至實體路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-364">Maps the specified virtual path to a physical path.</span></span></summary>
        <returns><span data-ttu-id="118e2-365">伺服器的實體路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-365">The physical path on the server.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="118e2-366"><xref:System.Web.HttpRequest.MapPath%2A>屬性可能包含裝載環境的機密資訊。</span><span class="sxs-lookup"><span data-stu-id="118e2-366">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="118e2-367">傳回的值不應該向使用者顯示。</span><span class="sxs-lookup"><span data-stu-id="118e2-367">The return value should not be displayed to users.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="118e2-368"><paramref name="allowCrossMapping" /> 是 <see langword="false" />，而且 <paramref name="virtualPath" /> 屬於另一個應用程式。</span><span class="sxs-lookup"><span data-stu-id="118e2-368"><paramref name="allowCrossMapping" /> is <see langword="false" /> and <paramref name="virtualPath" /> belongs to another application.</span></span>

<span data-ttu-id="118e2-369">-或-</span><span class="sxs-lookup"><span data-stu-id="118e2-369">-or-</span></span> 
<span data-ttu-id="118e2-370">未定義要求的 <see cref="T:System.Web.HttpContext" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-370">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapRawImageCoordinates">
      <MemberSignature Language="C#" Value="public double[] MapRawImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] MapRawImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapRawImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapRawImageCoordinates (imageFieldName As String) As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ MapRawImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapRawImageCoordinates : string -&gt; double[]" Usage="httpRequest.MapRawImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName"><span data-ttu-id="118e2-371">影像欄位的名稱。</span><span class="sxs-lookup"><span data-stu-id="118e2-371">The name of the image field.</span></span></param>
        <summary><span data-ttu-id="118e2-372">將收到的影像欄的表單參數對應至適當的 X 和 Y 座標值。</span><span class="sxs-lookup"><span data-stu-id="118e2-372">Maps an incoming image field form parameter into appropriate x and y coordinate values.</span></span></summary>
        <returns><span data-ttu-id="118e2-373">X 和 Y 座標值。</span><span class="sxs-lookup"><span data-stu-id="118e2-373">The x and y coordinate values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Params">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Params { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Params" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Params" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Params As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Params { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Params : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Params" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-374">取得 <see cref="P:System.Web.HttpRequest.QueryString" />、<see cref="P:System.Web.HttpRequest.Form" />、<see cref="P:System.Web.HttpRequest.Cookies" /> 和 <see cref="P:System.Web.HttpRequest.ServerVariables" /> 項目的組合集合。</span><span class="sxs-lookup"><span data-stu-id="118e2-374">Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, and <see cref="P:System.Web.HttpRequest.ServerVariables" /> items.</span></span></summary>
        <value><span data-ttu-id="118e2-375"><see cref="T:System.Collections.Specialized.NameValueCollection" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-375">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-376">名稱 / 值組會加入至集合中以下列順序：</span><span class="sxs-lookup"><span data-stu-id="118e2-376">Name-value pairs are added to the collection in the following order:</span></span>  
  
1.  <span data-ttu-id="118e2-377">查詢字串參數。</span><span class="sxs-lookup"><span data-stu-id="118e2-377">Query-string parameters.</span></span>  
  
2.  <span data-ttu-id="118e2-378">表單欄位。</span><span class="sxs-lookup"><span data-stu-id="118e2-378">Form fields.</span></span>  
  
3.  <span data-ttu-id="118e2-379">Cookie。</span><span class="sxs-lookup"><span data-stu-id="118e2-379">Cookies.</span></span>  
  
4.  <span data-ttu-id="118e2-380">伺服器變數。</span><span class="sxs-lookup"><span data-stu-id="118e2-380">Server variables.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-381">下列程式碼範例示範如何執行迴圈<xref:System.Web.HttpRequest.Params%2A>屬性頁面，以及如何顯示每個索引鍵/值組。</span><span class="sxs-lookup"><span data-stu-id="118e2-381">The following code example shows how to loop through the <xref:System.Web.HttpRequest.Params%2A> property for a page and how to display each key/value pair.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Params#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Params/CS/requestparamscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Params#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Params/VB/requestparamsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.HttpRequest.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-382">取得目前要求的虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-382">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="118e2-383">目前要求的虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-383">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-384"><xref:System.Web.HttpRequest.Path%2A>串連<xref:System.Web.HttpRequest.FilePath%2A>而<xref:System.Web.HttpRequest.PathInfo%2A>結尾。</span><span class="sxs-lookup"><span data-stu-id="118e2-384">The <xref:System.Web.HttpRequest.Path%2A> is the concatenation of the <xref:System.Web.HttpRequest.FilePath%2A> and the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="118e2-385">例如，對於 URL http://www.contoso.com/virdir/page.html/tail，則<xref:System.Web.HttpRequest.Path%2A>是 /virdir/page.html/tail。</span><span class="sxs-lookup"><span data-stu-id="118e2-385">For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.Path%2A> is /virdir/page.html/tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-386">下列程式碼範例會使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法，以 HTML 編碼的值<xref:System.Web.HttpRequest.Path%2A>屬性和<xref:System.IO.TextWriter.WriteLine%2A>方法來寫入檔案的編碼的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-386">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.Path%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="118e2-387">此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.HttpRequest>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-387">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
      </Docs>
    </Member>
    <Member MemberName="PathInfo">
      <MemberSignature Language="C#" Value="public string PathInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PathInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathInfo { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathInfo : string" Usage="System.Web.HttpRequest.PathInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-388">取得具有 URL 副檔名之資源的其他路徑資訊。</span><span class="sxs-lookup"><span data-stu-id="118e2-388">Gets the additional path information for a resource with a URL extension.</span></span></summary>
        <value><span data-ttu-id="118e2-389">資源的其他路徑資訊。</span><span class="sxs-lookup"><span data-stu-id="118e2-389">The additional path information for a resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-390">Url Http://www.contoso.com/virdir/page.html/tail，則<xref:System.Web.HttpRequest.PathInfo%2A>值是 /tail。</span><span class="sxs-lookup"><span data-stu-id="118e2-390">For the URL Http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.PathInfo%2A> value is /tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-391">下列程式碼範例會判斷是否<xref:System.Web.HttpRequest.PathInfo%2A>屬性包含空字串。</span><span class="sxs-lookup"><span data-stu-id="118e2-391">The following code example determines whether the <xref:System.Web.HttpRequest.PathInfo%2A> property contains an empty string.</span></span> <span data-ttu-id="118e2-392">若是如此，<xref:System.IO.StreamWriter.Write%2A>方法寫入字串，表示這個檔案。</span><span class="sxs-lookup"><span data-stu-id="118e2-392">If it does, the <xref:System.IO.StreamWriter.Write%2A> method writes a string indicating this to a file.</span></span> <span data-ttu-id="118e2-393">如果沒有出現，請<xref:System.Web.HttpUtility.HtmlEncode%2A>方法將值以 HTML 編碼<xref:System.Web.HttpRequest.PathInfo%2A>屬性和<xref:System.IO.TextWriter.WriteLine%2A>方法寫入檔案的編碼的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-393">If it does not, the <xref:System.Web.HttpUtility.HtmlEncode%2A> method HTML-encodes the value of the <xref:System.Web.HttpRequest.PathInfo%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method writes the encoded value to the file.</span></span> <span data-ttu-id="118e2-394">此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.HttpRequest>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-394">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#4)]
 [!code-vb[System.Web.HttpRequest_Sample1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
      </Docs>
    </Member>
    <Member MemberName="PhysicalApplicationPath">
      <MemberSignature Language="C#" Value="public string PhysicalApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalApplicationPath : string" Usage="System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-395">取得目前正在執行的伺服器應用程式的根目錄之實體檔案系統路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-395">Gets the physical file system path of the currently executing server application's root directory.</span></span></summary>
        <value><span data-ttu-id="118e2-396">目前應用程式的根目錄之檔案系統路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-396">The file system path of the current application's root directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-397">下列程式碼範例會使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法，以 HTML 編碼的值<xref:System.Web.HttpRequest.PhysicalApplicationPath%2A>屬性和<xref:System.IO.TextWriter.WriteLine%2A>方法來寫入檔案的編碼的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-397">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="118e2-398">此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.HttpRequest>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-398">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalPath">
      <MemberSignature Language="C#" Value="public string PhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalPath : string" Usage="System.Web.HttpRequest.PhysicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-399">取得對應到要求的 URL 之實體檔案系統路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-399">Gets the physical file system path corresponding to the requested URL.</span></span></summary>
        <value><span data-ttu-id="118e2-400">目前要求的檔案系統路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-400">The file system path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-401">中使用的重新導向情節<xref:System.Web.HttpServerUtility.Execute%2A>並<xref:System.Web.HttpServerUtility.Transfer%2A>，則<xref:System.Web.HttpRequest.PhysicalPath%2A>屬性傳回的原始頁面的路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-401">In redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A>, the <xref:System.Web.HttpRequest.PhysicalPath%2A> property returns the path to the original page.</span></span> <span data-ttu-id="118e2-402">若要尋找目前正在執行的頁面使用的實體路徑<xref:System.Web.HttpRequest.MapPath%2A>方法的輸入引數設定為<xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-402">To find the physical path of the currently executing page use the <xref:System.Web.HttpRequest.MapPath%2A> method with the input argument set as the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-403">下列程式碼範例會使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法，以 HTML 編碼的值<xref:System.Web.HttpRequest.PhysicalPath%2A>屬性和<xref:System.IO.TextWriter.WriteLine%2A>方法來寫入檔案的編碼的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-403">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="118e2-404">此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.HttpRequest>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-404">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.MapPath(System.String)" />
        <altmember cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-405">取得 HTTP 查詢字串變數的集合。</span><span class="sxs-lookup"><span data-stu-id="118e2-405">Gets the collection of HTTP query string variables.</span></span></summary>
        <value><span data-ttu-id="118e2-406">用戶端送出的查詢字串變數。</span><span class="sxs-lookup"><span data-stu-id="118e2-406">The query string variables sent by the client.</span></span> <span data-ttu-id="118e2-407">索引鍵和值已做 URL 解碼。</span><span class="sxs-lookup"><span data-stu-id="118e2-407">Keys and values are URL-decoded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-408">下列程式碼範例示範兩種方式可取得名為 「 fullname 」 的查詢字串變數的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-408">The following code example shows two ways to get the value of a query string variable named "fullname".</span></span> <span data-ttu-id="118e2-409">在每個案例中，如果 URL `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`，則傳回的值是"Fadi Fakhouri"，因為`%20`是 URL 解碼成的空格字元。</span><span class="sxs-lookup"><span data-stu-id="118e2-409">In each case, if the URL is `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, then the value returned is "Fadi Fakhouri" because the `%20` is URL-decoded into a space character.</span></span> <span data-ttu-id="118e2-410">如果 URL 不一定`fullname`查詢字串 ID，傳回的值會是`null`。</span><span class="sxs-lookup"><span data-stu-id="118e2-410">If the URL doesn't have a `fullname` query string ID, the returned value would be `null`.</span></span>  
  
 <span data-ttu-id="118e2-411">第一行程式碼會尋找 「 fullname 」 只能在查詢字串中; 中的索引鍵第二行會尋找 「 fullname 」 中的所有 HTTP 要求集合的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="118e2-411">The first line of code looks for the key "fullname" only in the query string; the second line looks for the key "fullname" in all of the HTTP request collections.</span></span> <span data-ttu-id="118e2-412">如需有關第二行的詳細資訊，請參閱<xref:System.Web.HttpRequest.Item%2A>。</span><span class="sxs-lookup"><span data-stu-id="118e2-412">For more information about the second line, see <xref:System.Web.HttpRequest.Item%2A>.</span></span>  
  
```csharp  
string fullname1 = Request.QueryString["fullname"];  
string fullname2 = Request["fullname"];  
  
```  
  
```vb  
Dim fullname1 As String = Request.QueryString("fullname")  
Dim fullname2 As String = Request("fullname")  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Web.HttpRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-413">取得目前要求的原始 URL。</span><span class="sxs-lookup"><span data-stu-id="118e2-413">Gets the raw URL of the current request.</span></span></summary>
        <value><span data-ttu-id="118e2-414">目前要求的原始 URL。</span><span class="sxs-lookup"><span data-stu-id="118e2-414">The raw URL of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-415">原始的 URL 被定義為下列網域資訊的 URL 的一部分。</span><span class="sxs-lookup"><span data-stu-id="118e2-415">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="118e2-416">URL 字串中http://www.contoso.com/articles/recent.aspx，原始的 URL 是 /articles/recent.aspx。</span><span class="sxs-lookup"><span data-stu-id="118e2-416">In the URL string http://www.contoso.com/articles/recent.aspx, the raw URL is /articles/recent.aspx.</span></span> <span data-ttu-id="118e2-417">如果有的話，原始的 URL 會包含查詢字串。</span><span class="sxs-lookup"><span data-stu-id="118e2-417">The raw URL includes the query string, if present.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-418">下列程式碼範例會使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法，以 HTML 編碼的值<xref:System.Web.HttpRequest.RawUrl%2A>屬性和<xref:System.IO.TextWriter.WriteLine%2A>方法來寫入檔案的編碼的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-418">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RawUrl%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="118e2-419">此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.HttpRequest>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-419">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityBodyMode">
      <MemberSignature Language="C#" Value="public System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.ReadEntityBodyMode ReadEntityBodyMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadEntityBodyMode As ReadEntityBodyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ReadEntityBodyMode ReadEntityBodyMode { System::Web::ReadEntityBodyMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadEntityBodyMode : System.Web.ReadEntityBodyMode" Usage="System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ReadEntityBodyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-420">取得值，指出是否已讀取要求實體主體，而且如果是，如何讀取。</span><span class="sxs-lookup"><span data-stu-id="118e2-420">Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</span></span></summary>
        <value><span data-ttu-id="118e2-421">指出要求實體內容的讀取方式 (或尚未讀取) 的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-421">The value that indicates how the request entity body was read, or that it has not been read.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-422">這個方法用來避免如果已經讀取實體主體，而且嘗試使用不相容的方法來讀取它，就會擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="118e2-422">This method is used to avoid the exception that is thrown if the entity body has already been read and an attempt is made to read it by using an incompatible method.</span></span> <span data-ttu-id="118e2-423">讀取實體主體的方法和屬性包括：</span><span class="sxs-lookup"><span data-stu-id="118e2-423">Methods and properties that read the entity body include the following:</span></span>  
  
-   <span data-ttu-id="118e2-424"><xref:System.Web.HttpRequest.Form%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-424">The <xref:System.Web.HttpRequest.Form%2A> property.</span></span>  
  
-   <span data-ttu-id="118e2-425"><xref:System.Web.HttpRequest.Files%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-425">The <xref:System.Web.HttpRequest.Files%2A> property.</span></span>  
  
-   <span data-ttu-id="118e2-426"><xref:System.Web.HttpRequest.InputStream%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-426">The <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span>  
  
-   <span data-ttu-id="118e2-427"><xref:System.Web.HttpRequest.GetBufferedInputStream%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="118e2-427">The <xref:System.Web.HttpRequest.GetBufferedInputStream%2A> method.</span></span>  
  
-   <span data-ttu-id="118e2-428"><xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="118e2-428">The <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RequestContext RequestContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestContext As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RequestContext ^ RequestContext { System::Web::Routing::RequestContext ^ get(); void set(System::Web::Routing::RequestContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestContext : System.Web.Routing.RequestContext with get, set" Usage="System.Web.HttpRequest.RequestContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-429">取得目前要求的 <see cref="T:System.Web.Routing.RequestContext" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="118e2-429">Gets the <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span></span></summary>
        <value><span data-ttu-id="118e2-430">目前要求的 <see cref="T:System.Web.Routing.RequestContext" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="118e2-430">The <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span></span> <span data-ttu-id="118e2-431">若為非路由的要求，則傳回的 <see cref="T:System.Web.Routing.RequestContext" /> 是空物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-431">For non-routed requests, the <see cref="T:System.Web.Routing.RequestContext" /> object that is returned is empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-432">此屬性可存取<xref:System.Web.Routing.RouteData>目前要求的物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-432">This property provides access to the <xref:System.Web.Routing.RouteData> object for the current request.</span></span> <span data-ttu-id="118e2-433">如需有關 ASP.NET 路由的詳細資訊，請參閱。[ASP.NET 路由](https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)。</span><span class="sxs-lookup"><span data-stu-id="118e2-433">For more information about ASP.NET routing, see.[ASP.NET Routing](https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c"><span data-ttu-id="118e2-434">逐步解說：使用 ASP.NET Web Forms 應用程式中的路由</span><span class="sxs-lookup"><span data-stu-id="118e2-434">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/dc88e6ba-470c-4b20-b644-35874cfd781d"><span data-ttu-id="118e2-435">HOW TO：路由頁面中的存取 URL 參數</span><span class="sxs-lookup"><span data-stu-id="118e2-435">How to: Access URL Parameters in a Routed Page</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RequestType">
      <MemberSignature Language="C#" Value="public string RequestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestType" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestType : string with get, set" Usage="System.Web.HttpRequest.RequestType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-436">取得或設定用戶端使用的 HTTP 資料傳輸方法 (<see langword="GET" /> 或 <see langword="POST" />)。</span><span class="sxs-lookup"><span data-stu-id="118e2-436">Gets or sets the HTTP data transfer method (<see langword="GET" /> or <see langword="POST" />) used by the client.</span></span></summary>
        <value><span data-ttu-id="118e2-437">字串，代表用戶端送出的 HTTP 叫用類型。</span><span class="sxs-lookup"><span data-stu-id="118e2-437">A string representing the HTTP invocation type sent by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-438">下列程式碼範例會使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法，以 HTML 編碼的值<xref:System.Web.HttpRequest.RequestType%2A>屬性和<xref:System.IO.TextWriter.WriteLine%2A>方法來寫入檔案的編碼的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-438">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RequestType%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="118e2-439">此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.HttpRequest>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-439">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename, bool includeHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename, bool includeHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String, includeHeaders As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename, bool includeHeaders);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string * bool -&gt; unit" Usage="httpRequest.SaveAs (filename, includeHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="includeHeaders" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="118e2-440">實體磁碟機路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-440">The physical drive path.</span></span></param>
        <param name="includeHeaders"><span data-ttu-id="118e2-441">布林值，指定 HTTP 標頭是否應該儲存至磁碟。</span><span class="sxs-lookup"><span data-stu-id="118e2-441">A Boolean value specifying whether an HTTP header should be saved to disk.</span></span></param>
        <summary><span data-ttu-id="118e2-442">將 HTTP 要求儲存至磁碟。</span><span class="sxs-lookup"><span data-stu-id="118e2-442">Saves an HTTP request to disk.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-443">儲存至磁碟的要求內容可以是適用於偵錯。</span><span class="sxs-lookup"><span data-stu-id="118e2-443">Saving the request context to disk can be useful in debugging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-444">下列程式碼範例會呼叫<xref:System.Web.HttpRequest.SaveAs%2A>方法載入頁面時。</span><span class="sxs-lookup"><span data-stu-id="118e2-444">The following code example calls the <xref:System.Web.HttpRequest.SaveAs%2A> method when a page is loaded.</span></span> <span data-ttu-id="118e2-445">呼叫指定的要求會儲存為文字檔案的目錄中，其中 ASP.NET 處理序身分識別已授與寫入權限，並在檔案中包含任何要求中所包含的標頭資訊。</span><span class="sxs-lookup"><span data-stu-id="118e2-445">The call specifies that the request be saved as a text file in a directory where the ASP.NET process identity has been granted write permissions, and that any header information included in the request is included in the file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/cs/requestsample6cs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/vb/requestsample6vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="118e2-446"><see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> 的 <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> 屬性設為 <see langword="true" />，但是 <paramref name="filename" /> 並非絕對路徑。</span><span class="sxs-lookup"><span data-stu-id="118e2-446">The <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> property of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> is set to <see langword="true" /> but <paramref name="filename" /> is not an absolute path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection ServerVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ServerVariables" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ServerVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerVariables As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ ServerVariables { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVariables : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.ServerVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-447">取得 Web 伺服器變數的集合。</span><span class="sxs-lookup"><span data-stu-id="118e2-447">Gets a collection of Web server variables.</span></span></summary>
        <value><span data-ttu-id="118e2-448">伺服器變數的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="118e2-448">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of server variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-449">如需支援的 IIS 伺服器變數的清單，請參閱 < [IIS 伺服器變數](https://go.microsoft.com/fwlink/?LinkId=52471)。</span><span class="sxs-lookup"><span data-stu-id="118e2-449">For a list of server variables supported by IIS, see [IIS Server Variables](https://go.microsoft.com/fwlink/?LinkId=52471).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="118e2-450">下列程式碼範例顯示的名稱和命名的伺服器的所有變數的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-450">The following code example displays the names and values of all named server variables.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedOutToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken TimedOutToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken TimedOutToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TimedOutToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimedOutToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken TimedOutToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.TimedOutToken : System.Threading.CancellationToken" Usage="System.Web.HttpRequest.TimedOutToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-451">取得要求逾時所觸發的 <see cref="T:System.Threading.CancellationToken" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-451">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when a request times out.</span></span></summary>
        <value><span data-ttu-id="118e2-452">取消語彙基元。</span><span class="sxs-lookup"><span data-stu-id="118e2-452">The cancellation token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-453">可以在 Web.config 檔案中指定的逾時期限 (請參閱<xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) 或以程式設計方式 (請參閱<xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="118e2-453">The timeout period can be specified in the Web.config file (see <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) or programmatically (see <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span></span> <span data-ttu-id="118e2-454">在逾時期限是從要求傳入時開始計算。</span><span class="sxs-lookup"><span data-stu-id="118e2-454">The timeout period is measured from the time the request comes in.</span></span> <span data-ttu-id="118e2-455">110 秒的預設逾時作用中時，如果將不得早於 110 秒的要求處理開始之後觸動的取消語彙基元。</span><span class="sxs-lookup"><span data-stu-id="118e2-455">If the default timeout of 110 seconds is in effect, the cancellation token will be tripped no earlier than 110 seconds after request processing begins.</span></span> <span data-ttu-id="118e2-456">您可以變更<xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>屬性值，因為尚未尚未觸動長這個語彙基元，會遵守這項新的逾時值。</span><span class="sxs-lookup"><span data-stu-id="118e2-456">You can change the <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> property value, and as long this token hasn't tripped yet, the new timeout value will be respected.</span></span>  
  
 <span data-ttu-id="118e2-457">目前語彙基元，只提供 15 的第二個資料粒度，這表示如果逾時值為 110 秒，權杖會再要求處理開始之後的 110 和 125 秒之間的一段時間。</span><span class="sxs-lookup"><span data-stu-id="118e2-457">Currently the token only provides 15 second granularity, which means that if the timeout value is 110 seconds, the token will be tripped sometime between 110 and 125 seconds after request processing begins.</span></span> <span data-ttu-id="118e2-458">資料粒度可能會在未來變更。</span><span class="sxs-lookup"><span data-stu-id="118e2-458">The granularity may change in the future.</span></span>  
  
 <span data-ttu-id="118e2-459">雖然這個屬性是安全執行緒，有其用途限制。</span><span class="sxs-lookup"><span data-stu-id="118e2-459">Even though this property is thread-safe, there are restrictions on its use.</span></span> <span data-ttu-id="118e2-460">如需詳細資訊，請參閱<xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="118e2-460">For more information, see <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="118e2-461">這個屬性就沒有意義，如果 Websocket 要求處理已開始。</span><span class="sxs-lookup"><span data-stu-id="118e2-461">This property is meaningless if WebSockets request processing has started.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TlsTokenBindingInfo">
      <MemberSignature Language="C#" Value="public System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TlsTokenBindingInfo As ITlsTokenBindingInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ITlsTokenBindingInfo ^ TlsTokenBindingInfo { System::Web::ITlsTokenBindingInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TlsTokenBindingInfo : System.Web.ITlsTokenBindingInfo" Usage="System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ITlsTokenBindingInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-462">取得 TLS 語彙基元繫結資訊。</span><span class="sxs-lookup"><span data-stu-id="118e2-462">Gets the TLS token binding information.</span></span> <span data-ttu-id="118e2-463">此屬性可讓應用程從內送 HTTP 要求擷取語彙基元資訊，以執行增強式驗證。</span><span class="sxs-lookup"><span data-stu-id="118e2-463">The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</span></span></summary>
        <value><span data-ttu-id="118e2-464">目前連接的繫結語彙基元。</span><span class="sxs-lookup"><span data-stu-id="118e2-464">The binding token for the current connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-465">這個屬性會傳回`null`在非 windows 10 平台上。</span><span class="sxs-lookup"><span data-stu-id="118e2-465">This property returns `null` on non-windows10 platforms.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalBytes">
      <MemberSignature Language="C#" Value="public int TotalBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TotalBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalBytes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalBytes { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalBytes : int" Usage="System.Web.HttpRequest.TotalBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-466">取得目前輸入資料流的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="118e2-466">Gets the number of bytes in the current input stream.</span></span></summary>
        <value><span data-ttu-id="118e2-467">在輸入資料流的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="118e2-467">The number of bytes in the input stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-468">下列程式碼範例會判斷是否<xref:System.Web.HttpRequest.TotalBytes%2A>屬性值大於 1000 個位元組，並將該資訊寫入至檔案。</span><span class="sxs-lookup"><span data-stu-id="118e2-468">The following code example determines whether the <xref:System.Web.HttpRequest.TotalBytes%2A> property value is greater than 1000 bytes and writes that information to a file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#6)]
 [!code-vb[System.Web.HttpRequest_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unvalidated">
      <MemberSignature Language="C#" Value="public System.Web.UnvalidatedRequestValues Unvalidated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UnvalidatedRequestValues Unvalidated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Unvalidated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Unvalidated As UnvalidatedRequestValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UnvalidatedRequestValues ^ Unvalidated { System::Web::UnvalidatedRequestValues ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Unvalidated : System.Web.UnvalidatedRequestValues" Usage="System.Web.HttpRequest.Unvalidated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UnvalidatedRequestValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-469">取得 HTTP 要求值，而不觸發要求驗證。</span><span class="sxs-lookup"><span data-stu-id="118e2-469">Gets the HTTP request values without triggering request validation.</span></span></summary>
        <value><span data-ttu-id="118e2-470">尚未使用要求驗證檢查的 HTTP 要求值。</span><span class="sxs-lookup"><span data-stu-id="118e2-470">The HTTP request values that have not been checked using request validation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-471">要求驗證檢查 HTML 標記和指令碼，可能表示有潛在的跨網站指令碼的攻擊。</span><span class="sxs-lookup"><span data-stu-id="118e2-471">Request validation checks for HTML markup and script that might indicate a potential cross-site scripting attack.</span></span> <span data-ttu-id="118e2-472">根據預設，所有的值會檢查使用要求驗證，而且如果任何值會包含標記或指令碼，ASP.NET 會擲回<xref:System.Web.HttpRequestValidationException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="118e2-472">By default, all values are checked using request validation and if any values contain markup or script, ASP.NET throws an <xref:System.Web.HttpRequestValidationException> exception.</span></span> <span data-ttu-id="118e2-473">使用這個方法，如果您預期的要求將會包含標記 （例如，您允許使用者張貼內容，其中包含標記） 和您想要取得要求的原始值。</span><span class="sxs-lookup"><span data-stu-id="118e2-473">Use this method if you anticipate that the request will contain markup (for example, you are allowing users to post content that contains markup) and you want to get the raw value of a request.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="118e2-474">如果您使用這個屬性時，您必須手動檢查潛在的跨網站指令碼攻擊的資料。</span><span class="sxs-lookup"><span data-stu-id="118e2-474">If you use this property, you must manually check the data for potential cross-site scripting attacks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Web.HttpRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-475">取得關於目前要求的 URL 資訊。</span><span class="sxs-lookup"><span data-stu-id="118e2-475">Gets information about the URL of the current request.</span></span></summary>
        <value><span data-ttu-id="118e2-476"><see cref="T:System.Uri" /> 物件，包含目前要求的 URL。</span><span class="sxs-lookup"><span data-stu-id="118e2-476">A <see cref="T:System.Uri" /> object that contains the URL of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-477">下列程式碼範例會指派<xref:System.Uri>目前要求的物件變數，並顯示 URL 的兩個屬性的值物件至 HTTP 輸出的物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-477">The following code example assigns the <xref:System.Uri> object of the current request to an object variable and displays the value of two properties of the URL object to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Url Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Url Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Url Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
        <altmember cref="P:System.Web.HttpRequest.RawUrl" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Web.HttpRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-478">取得有關用戶端的先前要求之 URL (連結至目前 URL) 的資訊。</span><span class="sxs-lookup"><span data-stu-id="118e2-478">Gets information about the URL of the client's previous request that linked to the current URL.</span></span></summary>
        <value><span data-ttu-id="118e2-479"><see cref="T:System.Uri" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-479">A <see cref="T:System.Uri" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-480">下列程式碼範例顯示的 URL，用來參考目前應用程式的用戶端的兩個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-480">The following code example displays the value of two properties of the URL that referred the client to the current application.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="118e2-481">HTTP <see langword="Referer" /> 要求標頭的格式不正確，無法轉換成 <see cref="T:System.Uri" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="118e2-481">The HTTP <see langword="Referer" /> request header is malformed and cannot be converted to a <see cref="T:System.Uri" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Web.HttpRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-482">取得已提供的用戶端瀏覽器原始使用者代理程式字串。</span><span class="sxs-lookup"><span data-stu-id="118e2-482">Gets the raw user agent string of the client browser that has been provided.</span></span> <span data-ttu-id="118e2-483">請注意，它可以是 null。</span><span class="sxs-lookup"><span data-stu-id="118e2-483">Please note it may be null.</span></span></summary>
        <value><span data-ttu-id="118e2-484">用戶端瀏覽器的原始使用者代理字串。</span><span class="sxs-lookup"><span data-stu-id="118e2-484">The raw user agent string of the client browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-485">下列程式碼範例會將要求的瀏覽器的型別識別指派給字串變數。</span><span class="sxs-lookup"><span data-stu-id="118e2-485">The following code example assigns the type identification of the requesting browser to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.Browser" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f"><span data-ttu-id="118e2-486">ASP.NET 伺服器控制項和瀏覽器功能</span><span class="sxs-lookup"><span data-stu-id="118e2-486">ASP.NET Server Controls and Browser Capabilities</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Web.HttpRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-487">取得遠端用戶端的 IP 主機位址。</span><span class="sxs-lookup"><span data-stu-id="118e2-487">Gets the IP host address of the remote client.</span></span></summary>
        <value><span data-ttu-id="118e2-488">遠端用戶端的 IP 位址。</span><span class="sxs-lookup"><span data-stu-id="118e2-488">The IP address of the remote client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-489">下列程式碼範例會使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法，以 HTML 編碼的值<xref:System.Web.HttpRequest.UserHostAddress%2A>屬性和<xref:System.IO.TextWriter.WriteLine%2A>方法來寫入檔案的編碼的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-489">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostAddress%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="118e2-490">此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.HttpRequest>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-490">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Web.HttpRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-491">取得遠端用戶端的 DNS 名稱。</span><span class="sxs-lookup"><span data-stu-id="118e2-491">Gets the DNS name of the remote client.</span></span></summary>
        <value><span data-ttu-id="118e2-492">遠端用戶端的 DNS 名稱。</span><span class="sxs-lookup"><span data-stu-id="118e2-492">The DNS name of the remote client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-493">下列程式碼範例會使用<xref:System.Web.HttpUtility.HtmlEncode%2A>方法，以 HTML 編碼的值<xref:System.Web.HttpRequest.UserHostName%2A>屬性和<xref:System.IO.TextWriter.WriteLine%2A>方法來寫入檔案的編碼的值。</span><span class="sxs-lookup"><span data-stu-id="118e2-493">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostName%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="118e2-494">此程式碼範例是針對提供之較大範例的一部分<xref:System.Web.HttpRequest>類別。</span><span class="sxs-lookup"><span data-stu-id="118e2-494">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Web.HttpRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="118e2-495">取得用戶端語言喜好設定的已排序的字串陣列。</span><span class="sxs-lookup"><span data-stu-id="118e2-495">Gets a sorted string array of client language preferences.</span></span></summary>
        <value><span data-ttu-id="118e2-496">用戶端語言喜好設定的已排序字串陣列；如果是空的，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="118e2-496">A sorted string array of client language preferences, or <see langword="null" /> if empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="118e2-497">下列程式碼範例會擷取所傳回的多個值<xref:System.Web.HttpRequest.UserLanguages%2A>屬性插入字串陣列，並寫入至 HTTP 輸出的個別行的每一種語言名稱。</span><span class="sxs-lookup"><span data-stu-id="118e2-497">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.UserLanguages%2A> property into a string array and writes each language name to a separate line of HTTP output.</span></span>  
  
 <span data-ttu-id="118e2-498">瀏覽器中，所提供的語言名稱，並沒有明確的所有可能的程式碼清單。</span><span class="sxs-lookup"><span data-stu-id="118e2-498">The language names are provided by the browser, and there is no definitive list of all possible codes.</span></span>  <span data-ttu-id="118e2-499">通常包括二字元代碼的語言、 連字號和兩個字元的代碼，文化特性，例如 「 en-us-我們 「 適用於美國英文和"fr-ca"加拿大法文。</span><span class="sxs-lookup"><span data-stu-id="118e2-499">Typically these consist of a two-character codes for the language, a hyphen, and a two-character code for the culture, such as "en-us" for U.S. English and "fr-ca" for Canadian French.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public void ValidateInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateInput();" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : unit -&gt; unit" Usage="httpRequest.ValidateInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="118e2-500">會對透過 <see cref="P:System.Web.HttpRequest.Cookies" />、<see cref="P:System.Web.HttpRequest.Form" /> 和 <see cref="P:System.Web.HttpRequest.QueryString" /> 屬性存取的集合進行驗證。</span><span class="sxs-lookup"><span data-stu-id="118e2-500">Causes validation to occur for the collections accessed through the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, and <see cref="P:System.Web.HttpRequest.QueryString" /> properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="118e2-501"><xref:System.Web.HttpRequest>類別來追蹤是否執行驗證，透過存取要求集合上使用的輸入的驗證旗標<xref:System.Web.HttpRequest.Cookies%2A>， <xref:System.Web.HttpRequest.Form%2A>，和<xref:System.Web.HttpRequest.QueryString%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="118e2-501">The <xref:System.Web.HttpRequest> class uses input validation flags to track whether to perform validation on the request collections accessed through the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, and <xref:System.Web.HttpRequest.QueryString%2A> properties.</span></span> <span data-ttu-id="118e2-502"><xref:System.Web.HttpRequest.ValidateInput%2A>方法會設定這些旗標，當的 get 存取子<xref:System.Web.HttpRequest.Cookies%2A>， <xref:System.Web.HttpRequest.Form%2A>，或<xref:System.Web.HttpRequest.QueryString%2A>叫用屬性，會執行輸入的驗證。</span><span class="sxs-lookup"><span data-stu-id="118e2-502">The <xref:System.Web.HttpRequest.ValidateInput%2A> method sets these flags so that when the get accessors for the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, or <xref:System.Web.HttpRequest.QueryString%2A> property are invoked, input validation is performed.</span></span> <span data-ttu-id="118e2-503">驗證的運作方式是檢查所有的輸入的資料，針對硬式編碼有潛在危險的資料清單。</span><span class="sxs-lookup"><span data-stu-id="118e2-503">Validation works by checking all input data against a hard-coded list of potentially dangerous data.</span></span>  
  
 <span data-ttu-id="118e2-504">如果頁面指示詞或組態來啟用驗證功能，在頁面的期間呼叫這個方法`ProcessRequest`處理階段。</span><span class="sxs-lookup"><span data-stu-id="118e2-504">If the validation feature is enabled by page directive or configuration, this method is called during the page's `ProcessRequest` processing phase.</span></span> <span data-ttu-id="118e2-505"><xref:System.Web.HttpRequest.ValidateInput%2A>可以由您的程式碼呼叫方法，如果未啟用驗證功能。</span><span class="sxs-lookup"><span data-stu-id="118e2-505">The <xref:System.Web.HttpRequest.ValidateInput%2A> method can be called by your code if the validation feature is not enabled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpRequestValidationException"><span data-ttu-id="118e2-506">連入用戶端的可能有危險的資料。</span><span class="sxs-lookup"><span data-stu-id="118e2-506">Potentially dangerous data was received from the client.</span></span></exception>
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
  </Members>
</Type>