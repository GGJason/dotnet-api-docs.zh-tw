<Type Name="HttpServerUtility" FullName="System.Web.HttpServerUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="af79683dbebba2bc232c66a7a70dd0748a5935a9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpServerUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpServerUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpServerUtility" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpServerUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpServerUtility sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a8773-101">提供 Helper 方法以處理 Web 要求。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a8773-101">Provides helper methods for processing Web requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-102">方法和屬性<xref:System.Web.HttpServerUtility>類別會公開透過內建<xref:System.Web.HttpContext.Server%2A>ASP.NET 所提供的物件。</span><span class="sxs-lookup"><span data-stu-id="a8773-102">The methods and properties of the <xref:System.Web.HttpServerUtility> class are exposed through the intrinsic <xref:System.Web.HttpContext.Server%2A> object provided by ASP.NET.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8773-103">本主題隨附了含有原始程式碼的 Visual Studio Web 站台專案：[下載](http://go.microsoft.com/fwlink/?LinkId=192870)。</span><span class="sxs-lookup"><span data-stu-id="a8773-103">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192870).</span></span>  
  
 <span data-ttu-id="a8773-104">下列範例示範如何使用<xref:System.Web.HttpServerUtility.HtmlEncode%2A>方法和<xref:System.Web.HttpServerUtility.UrlEncode%2A>方法<xref:System.Web.HttpServerUtility>類別。</span><span class="sxs-lookup"><span data-stu-id="a8773-104">The following example demonstrates how to use the <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method and the <xref:System.Web.HttpServerUtility.UrlEncode%2A> method of the <xref:System.Web.HttpServerUtility> class.</span></span> <span data-ttu-id="a8773-105"><xref:System.Web.HttpServerUtility.HtmlEncode%2A>方法可協助確保將會轉譯為靜態文字，而不是可執行的指令碼或 HTML 元素的瀏覽器中輸入任何使用者提供的字串。</span><span class="sxs-lookup"><span data-stu-id="a8773-105">The <xref:System.Web.HttpServerUtility.HtmlEncode%2A> method helps ensure that any user-supplied string input will be rendered as static text in browsers instead of executable script or HTML elements.</span></span> <span data-ttu-id="a8773-106"><xref:System.Web.HttpServerUtility.UrlEncode%2A>方法編碼的 Url，以便正確地傳送 HTTP 資料流中。</span><span class="sxs-lookup"><span data-stu-id="a8773-106">The <xref:System.Web.HttpServerUtility.UrlEncode%2A> method encodes URLs so that they are correctly transmitted in the HTTP stream.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpServerUtility1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpServerUtility1/cs/HttpServerUtilityCS.aspx#1)]
 [!code-aspx-vb[System.Web.HttpServerUtility1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpServerUtility1/vb/HttpServerUtilityVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpContext" />
  </Docs>
  <Members>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public void ClearError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.ClearError" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearError ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearError();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8773-107">清除先前的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-107">Clears the previous exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8773-108">下列範例會清除上次擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a8773-108">The following example clears the last exception that was thrown.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.ClearError Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.ClearError Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.ClearError Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.ClearError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpServerUtility.GetLastError" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8773-109">建立 COM 物件的伺服器執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-109">Creates a server instance of a COM object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public object CreateObject (string progID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateObject(string progID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObject (progID As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObject(System::String ^ progID);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progID">
          <span data-ttu-id="a8773-110">要建立執行個體的類別或物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-110">The class or type of object to create an instance of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-111">建立物件程式設計識別項 (ProgID) 所識別之 COM 物件的伺服器執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-111">Creates a server instance of a COM object identified by the object's programmatic identifier (ProgID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8773-112">新物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-112">The new object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8773-113">下列範例會使用物件的 ProgID 來建立物件。</span><span class="sxs-lookup"><span data-stu-id="a8773-113">The following example creates an object by using the object's ProgID.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.CreateObject Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObject Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.CreateObject Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObject Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="a8773-114">無法建立物件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-114">An instance of the object could not be created.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public object CreateObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.CreateObject(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObject(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a8773-115">
            <see cref="T:System.Type" />，表示要建立的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-115">A <see cref="T:System.Type" /> representing the object to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-116">建立以物件類型識別的 COM 物件的伺服器執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-116">Creates a server instance of a COM object identified by the object's type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8773-117">新物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-117">The new object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateObjectFromClsid">
      <MemberSignature Language="C#" Value="public object CreateObjectFromClsid (string clsid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateObjectFromClsid(string clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.CreateObjectFromClsid(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateObjectFromClsid (clsid As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateObjectFromClsid(System::String ^ clsid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clsid">
          <span data-ttu-id="a8773-118">要建立執行個體之物件的類別識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-118">The class identifier of the object to create an instance of.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-119">建立以物件的類別識別項 (CLSID) 識別的 COM 物件的伺服器執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-119">Creates a server instance of a COM object identified by the object's class identifier (CLSID).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8773-120">新物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-120">The new object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8773-121">下列範例示範如何使用<xref:System.Web.HttpServerUtility.CreateObjectFromClsid%2A>方法來建立 COM 物件的伺服器執行個體。</span><span class="sxs-lookup"><span data-stu-id="a8773-121">The following example demonstrates how to use the <xref:System.Web.HttpServerUtility.CreateObjectFromClsid%2A> method to create a server instance of a COM object.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObjectFromClsid Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.CreateObjectFromClsid Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.CreateObjectFromClsid Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="a8773-122">無法建立物件的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-122">An instance of the object could not be created.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpServerUtility.CreateObject(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Execute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8773-123">在目前要求的內容中執行指定資源的處理常式，並將執行傳回叫用它的網頁。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-123">Executes the handler for a specified resource in the context of the current request and returns execution to the page that invoked it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="a8773-124">要執行的 URL 路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-124">The URL path to execute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-125">在目前要求的內容中，執行指定虛擬路徑的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-125">Executes the handler for the specified virtual path in the context of the current request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-126"><xref:System.Web.HttpServerUtility.Execute%2A>方法會在新網頁的執行完成之後繼續執行原始頁面。</span><span class="sxs-lookup"><span data-stu-id="a8773-126">The <xref:System.Web.HttpServerUtility.Execute%2A> method continues execution of the original page after execution of the new page is completed.</span></span> <span data-ttu-id="a8773-127"><xref:System.Web.HttpServerUtility.Transfer%2A>方法無條件地將執行轉移至另一個處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8773-127">The <xref:System.Web.HttpServerUtility.Transfer%2A> method unconditionally transfers execution to another handler.</span></span>  
  
 <span data-ttu-id="a8773-128">ASP.NET 不會驗證目前使用者是否獲得授權檢視所傳遞的資源<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-128">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="a8773-129">雖然 ASP.NET 授權和驗證邏輯會在呼叫原始資源的處理常式之前，ASP.NET 會直接呼叫所指定的處理常式<xref:System.Web.HttpServerUtility.Execute%2A>方法並不會重新執行驗證和授權邏輯新的資源。</span><span class="sxs-lookup"><span data-stu-id="a8773-129">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="a8773-130">如果您的應用程式安全性原則需要有適當的權限可存取資源的用戶端，應用程式應該強制重新授權，或提供自訂的存取控制機制。</span><span class="sxs-lookup"><span data-stu-id="a8773-130">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="a8773-131">您可以使用強制重新授權<xref:System.Web.HttpResponse.Redirect%2A>方法，而非<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-131">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="a8773-132"><xref:System.Web.HttpResponse.Redirect%2A> 執行用戶端重新導向瀏覽器要求新的資源。</span><span class="sxs-lookup"><span data-stu-id="a8773-132"><xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="a8773-133">因為這個重新導向時輸入系統的新要求，所以必須網際網路資訊服務 (IIS) 和 ASP.NET 的安全性原則的所有驗證和授權邏輯。</span><span class="sxs-lookup"><span data-stu-id="a8773-133">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="a8773-134">您可以驗證使用者已透過加入自訂授權使用的方法，檢視資源的權限<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法之前執行的應用程式呼叫<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-134">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8773-135">下列範例會顯示.aspx 網頁 」 Updateinfo.aspx"在目前的目錄。</span><span class="sxs-lookup"><span data-stu-id="a8773-135">The following example displays the .aspx page "Updateinfo.aspx" in the current directory.</span></span> <span data-ttu-id="a8773-136">執行程式返回到起始頁 Updateinfo.aspx 頁面隨即顯示。</span><span class="sxs-lookup"><span data-stu-id="a8773-136">Program execution returns to the starting page after the Updateinfo.aspx page is displayed.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.Execute Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.Execute Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.Execute Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.Execute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="a8773-137">目前的 <see cref="T:System.Web.HttpContext" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-137">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a8773-138">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-138">\- or -</span>
          </span>
          <span data-ttu-id="a8773-139">執行 <paramref name="path" /> 指定的處理常式時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-139">An error occurred while executing the handler specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8773-140">
            <paramref name="path" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-140">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a8773-141">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-141">\- or -</span>
          </span>
          <span data-ttu-id="a8773-142">
            <paramref name="path" /> 不是虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-142">
              <paramref name="path" /> is not a virtual path.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path, bool preserveForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="a8773-143">要執行的 URL 路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-143">The URL path to execute.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="a8773-144">
            <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-144">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-145">在目前要求的內容中，執行指定虛擬路徑的處理常式，並指定是否清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-145">Executes the handler for the specified virtual path in the context of the current request and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8773-146">下列範例示範如何執行.aspx 頁面`Updateinfo.aspx`在目前要求和保留<xref:System.Web.HttpRequest.QueryString%2A>和<xref:System.Web.HttpRequest.Form%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="a8773-146">The following example shows how to execute the .aspx page `Updateinfo.aspx` in the current request and preserve the <xref:System.Web.HttpRequest.QueryString%2A> and <xref:System.Web.HttpRequest.Form%2A> collections.</span></span> <span data-ttu-id="a8773-147">程式執行到起始頁之後會傳回`Updateinfo.aspx`隨即出現。</span><span class="sxs-lookup"><span data-stu-id="a8773-147">Program execution returns to the starting page after `Updateinfo.aspx` is displayed.</span></span>  
  
 [!code-csharp[HttpServerUtility.Execute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpServerUtility.Execute/CS/httpserverutility.execute_cs.aspx#1)]
 [!code-vb[HttpServerUtility.Execute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpServerUtility.Execute/VB/httpserverutility.execute_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="a8773-148">目前的 <see cref="T:System.Web.HttpContext" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-148">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a8773-149">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-149">\- or -</span>
          </span>
          <span data-ttu-id="a8773-150">執行 <paramref name="path" /> 指定的處理常式時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-150">An error occurred while executing the handler specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8773-151">
            <paramref name="path" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-151">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a8773-152">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-152">\- or -</span>
          </span>
          <span data-ttu-id="a8773-153">
            <paramref name="path" /> 不是虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-153">
              <paramref name="path" /> is not a virtual path.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path, System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path, class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String, writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path, System::IO::TextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="a8773-154">要執行的 URL 路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-154">The URL path to execute.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="a8773-155">要擷取輸出的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-155">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-156">在目前要求的內容中，執行指定虛擬路徑的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-156">Executes the handler for the specified virtual path in the context of the current request.</span>
          </span>
          <span data-ttu-id="a8773-157">
            <see cref="T:System.IO.TextWriter" /> 會擷取已執行處理常式的輸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-157">A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-158"><xref:System.Web.HttpServerUtility.Execute%2A>方法會執行指定的虛擬路徑完成之後，繼續執行原始要求。</span><span class="sxs-lookup"><span data-stu-id="a8773-158">The <xref:System.Web.HttpServerUtility.Execute%2A> method continues execution of the original request after execution of the virtual path specified is completed.</span></span> <span data-ttu-id="a8773-159"><xref:System.Web.HttpServerUtility.Transfer%2A>方法無條件地將執行轉移至另一個處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8773-159">The <xref:System.Web.HttpServerUtility.Transfer%2A> method unconditionally transfers execution to another handler.</span></span>  
  
 <span data-ttu-id="a8773-160">ASP.NET 不會驗證目前使用者是否獲得授權檢視所傳遞的資源<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-160">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="a8773-161">雖然 ASP.NET 授權和驗證邏輯會在呼叫原始資源的處理常式之前，ASP.NET 會直接呼叫所指定的處理常式<xref:System.Web.HttpServerUtility.Execute%2A>方法並不會重新執行驗證和授權邏輯新的資源。</span><span class="sxs-lookup"><span data-stu-id="a8773-161">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="a8773-162">如果您的應用程式安全性原則需要有適當的權限可存取資源的用戶端，應用程式應該強制重新授權，或提供自訂的存取控制機制。</span><span class="sxs-lookup"><span data-stu-id="a8773-162">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="a8773-163">您可以使用強制重新授權<xref:System.Web.HttpResponse.Redirect%2A>方法，而非<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-163">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="a8773-164"><xref:System.Web.HttpResponse.Redirect%2A> 執行用戶端重新導向瀏覽器要求新的資源。</span><span class="sxs-lookup"><span data-stu-id="a8773-164"><xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="a8773-165">因為這個重新導向時輸入系統的新要求，所以必須網際網路資訊服務 (IIS) 和 ASP.NET 的安全性原則的所有驗證和授權邏輯。</span><span class="sxs-lookup"><span data-stu-id="a8773-165">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="a8773-166">您可以驗證使用者已透過加入自訂授權使用的方法，檢視資源的權限<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法之前執行的應用程式呼叫<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-166">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8773-167">下列範例會執行`Login.aspx`在目前的目錄中的伺服器上，從透過頁面接收輸出<xref:System.IO.StringWriter>物件`writer`。</span><span class="sxs-lookup"><span data-stu-id="a8773-167">The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`.</span></span> <span data-ttu-id="a8773-168">它會將收到來自 HTML 資料流`writer`至 HTTP 輸出資料流。</span><span class="sxs-lookup"><span data-stu-id="a8773-168">It writes the HTML stream received from `writer` to the HTTP output stream.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.Execute1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.Execute1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.Execute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.Execute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="a8773-169">目前的 <see cref="T:System.Web.HttpContext" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-169">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a8773-170">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-170">\- or -</span>
          </span>
          <span data-ttu-id="a8773-171">執行 <paramref name="path" /> 指定的處理常式時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-171">An error occurred while executing the handler specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8773-172">
            <paramref name="path" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-172">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a8773-173">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-173">\- or -</span>
          </span>
          <span data-ttu-id="a8773-174">
            <paramref name="path" /> 不是虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-174">
              <paramref name="path" /> is not a virtual path.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (string path, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(string path, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.String,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (path As String, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::String ^ path, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="a8773-175">要執行的 URL 路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-175">The URL path to execute.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="a8773-176">要擷取輸出的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-176">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="a8773-177">
            <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-177">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-178">在目前要求的內容中，執行指定虛擬路徑的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-178">Executes the handler for the specified virtual path in the context of the current request.</span>
          </span>
          <span data-ttu-id="a8773-179">
            <see cref="T:System.IO.TextWriter" /> 會擷取網頁的輸出，並且布林參數會指定是否要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-179">A <see cref="T:System.IO.TextWriter" /> captures output from the page and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-180"><xref:System.Web.HttpServerUtility.Execute%2A>方法指定的虛擬路徑的執行完成之後會繼續執行原始的要求。</span><span class="sxs-lookup"><span data-stu-id="a8773-180">The <xref:System.Web.HttpServerUtility.Execute%2A> method continues execution of the original request after execution of the specified virtual path is completed.</span></span> <span data-ttu-id="a8773-181"><xref:System.Web.HttpServerUtility.Transfer%2A>方法無條件地將執行轉移至另一個處理常式。</span><span class="sxs-lookup"><span data-stu-id="a8773-181">The <xref:System.Web.HttpServerUtility.Transfer%2A> method unconditionally transfers execution to another handler.</span></span>  
  
 <span data-ttu-id="a8773-182">ASP.NET 不會驗證目前使用者是否獲得授權檢視所傳遞的資源<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-182">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="a8773-183">雖然 ASP.NET 授權和驗證邏輯會在呼叫原始資源的處理常式之前，ASP.NET 會直接呼叫所指定的處理常式<xref:System.Web.HttpServerUtility.Execute%2A>方法並不會重新執行驗證和授權邏輯新的資源。</span><span class="sxs-lookup"><span data-stu-id="a8773-183">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="a8773-184">如果您的應用程式安全性原則需要有適當的權限可存取資源的用戶端，應用程式應該強制重新授權，或提供自訂的存取控制機制。</span><span class="sxs-lookup"><span data-stu-id="a8773-184">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="a8773-185">您可以使用強制重新授權<xref:System.Web.HttpResponse.Redirect%2A>方法，而非<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-185">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="a8773-186"><xref:System.Web.HttpResponse.Redirect%2A> 執行用戶端重新導向瀏覽器要求新的資源。</span><span class="sxs-lookup"><span data-stu-id="a8773-186"><xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="a8773-187">因為這個重新導向時輸入系統的新要求，所以必須網際網路資訊服務 (IIS) 和 ASP.NET 的安全性原則的所有驗證和授權邏輯。</span><span class="sxs-lookup"><span data-stu-id="a8773-187">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="a8773-188">您可以驗證使用者已透過加入自訂授權使用的方法，檢視資源的權限<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法之前執行的應用程式呼叫<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-188">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8773-189">下列範例會執行`Login.aspx`在目前的目錄中的伺服器上，從透過頁面接收輸出<xref:System.IO.StringWriter>物件`writer`。</span><span class="sxs-lookup"><span data-stu-id="a8773-189">The following example executes the `Login.aspx` page on the server in the current directory and receives the output from the page through the <xref:System.IO.StringWriter> object `writer`.</span></span> <span data-ttu-id="a8773-190">它會將收到來自 HTML 資料流`writer`至 HTTP 輸出資料流。</span><span class="sxs-lookup"><span data-stu-id="a8773-190">It writes the HTML stream received from `writer` to the HTTP output stream.</span></span> <span data-ttu-id="a8773-191">內容<xref:System.Web.HttpRequest.Form%2A>和<xref:System.Web.HttpRequest.QueryString%2A>集合都會保留下來。</span><span class="sxs-lookup"><span data-stu-id="a8773-191">The contents of the <xref:System.Web.HttpRequest.Form%2A> and <xref:System.Web.HttpRequest.QueryString%2A> collections are preserved.</span></span>  
  
 [!code-csharp[HttpServerUtility.Execute02#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpServerUtility.Execute02/CS/httpserverutility.execute02_cs.aspx#1)]
 [!code-vb[HttpServerUtility.Execute02#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpServerUtility.Execute02/VB/httpserverutility.execute02_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="a8773-192">目前 <see cref="T:System.Web.HttpContext" /> 是 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-192">The current <see cref="T:System.Web.HttpContext" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
          <span data-ttu-id="a8773-193">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-193">\- or -</span>
          </span>
          <span data-ttu-id="a8773-194">
            <paramref name="path" /> 結束於句點 (.)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-194">
              <paramref name="path" /> ends with a period (.).</span>
          </span>
          <span data-ttu-id="a8773-195">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-195">\- or -</span>
          </span>
          <span data-ttu-id="a8773-196">執行 <paramref name="path" /> 指定的處理常式時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-196">An error occurred while executing the handler specified by <paramref name="path" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8773-197">
            <paramref name="path" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-197">
              <paramref name="path" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a8773-198">
            <paramref name="path" /> 不是虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-198">
              <paramref name="path" /> is not a virtual path.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (System.Web.IHttpHandler handler, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Execute(class System.Web.IHttpHandler handler, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (handler As IHttpHandler, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Execute(System::Web::IHttpHandler ^ handler, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="a8773-199">HTTP 處理常式，實作 <see cref="T:System.Web.IHttpHandler" />，以傳輸目前要求至此。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-199">The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.</span>
          </span>
        </param>
        <param name="writer">
          <span data-ttu-id="a8773-200">要擷取輸出的 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-200">The <see cref="T:System.IO.TextWriter" /> to capture the output.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="a8773-201">
            <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-201">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-202">在目前要求的內容中，執行指定虛擬路徑的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-202">Executes the handler for the specified virtual path in the context of the current request.</span>
          </span>
          <span data-ttu-id="a8773-203">
            <see cref="T:System.IO.TextWriter" /> 會擷取已執行處理常式的輸出，並且布林參數會指定是否要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-203">A <see cref="T:System.IO.TextWriter" /> captures output from the executed handler and a Boolean parameter specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-204">您可以撰寫自訂 HTTP 處理常式來處理 HTTP 要求中任何以 Common Language Specification (CLS) 相容的語言特定的預先定義的類型。</span><span class="sxs-lookup"><span data-stu-id="a8773-204">You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</span></span> <span data-ttu-id="a8773-205">定義 HTTP 處理常式類別，而不是傳統 ASP (也稱為傳統 ASP) 網頁或 ASP.NET 網頁中的可執行程式碼回應這些特定的要求。</span><span class="sxs-lookup"><span data-stu-id="a8773-205">Executable code that is defined in the HTTP handler classes instead of  conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</span></span> <span data-ttu-id="a8773-206">進行互動的低層級的要求和回應服務的 Web 伺服器正在執行網際網路資訊服務 (IIS) 允許 HTTP 處理常式，並且會提供類似功能的 ISAPI 擴充程式但更簡單的程式設計模型。</span><span class="sxs-lookup"><span data-stu-id="a8773-206">HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</span></span>  
  
 <span data-ttu-id="a8773-207">ASP.NET 不會驗證目前使用者是否獲得授權檢視資源前所交付<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-207">ASP.NET does not verify that the current user is authorized to view the resource that is delivered by the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="a8773-208">雖然 ASP.NET 授權和驗證邏輯會在呼叫原始資源的處理常式之前，ASP.NET 會直接呼叫處理常式所指定之<xref:System.Web.HttpServerUtility.Execute%2A>方法並不會重新執行驗證和授權邏輯新的資源。</span><span class="sxs-lookup"><span data-stu-id="a8773-208">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler that is indicated by the <xref:System.Web.HttpServerUtility.Execute%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="a8773-209">如果您的應用程式的安全性原則需要用戶端具有適當的授權，才能存取資源，應用程式應該強制重新授權，或提供的自訂存取控制機制。</span><span class="sxs-lookup"><span data-stu-id="a8773-209">If the security policy for your application requires clients to have appropriate authorization to gain access to the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="a8773-210">您可以使用強制重新授權<xref:System.Web.HttpResponse.Redirect%2A>方法，而非<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-210">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span> <span data-ttu-id="a8773-211"><xref:System.Web.HttpResponse.Redirect%2A>用戶端重新導向瀏覽器要求新的資源。</span><span class="sxs-lookup"><span data-stu-id="a8773-211">The <xref:System.Web.HttpResponse.Redirect%2A> performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="a8773-212">這個重新導向時輸入系統的新要求，因為它必須同時 IIS 和 ASP.NET 的安全性原則的所有驗證和授權邏輯。</span><span class="sxs-lookup"><span data-stu-id="a8773-212">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="a8773-213">您可以驗證使用者已透過加入自訂授權使用的方法，檢視資源的權限<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法之前執行的應用程式呼叫<xref:System.Web.HttpServerUtility.Execute%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-213">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Execute%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="a8773-214">執行 <paramref name="handler" /> 指定的處理常式時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-214">An error occurred while executing the handler specified by <paramref name="handler" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8773-215">
            <paramref name="handler" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-215">The <paramref name="handler" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Web.HttpServerUtility.Transfer" />
      </Docs>
    </Member>
    <Member MemberName="GetLastError">
      <MemberSignature Language="C#" Value="public Exception GetLastError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Exception GetLastError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.GetLastError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastError () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetLastError();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a8773-216">傳回先前的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-216">Returns the previous exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8773-217">被擲回的先前例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-217">The previous exception that was thrown.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8773-218">下列範例會列印至 HTTP 輸出資料流的應用程式的最後一個錯誤的描述。</span><span class="sxs-lookup"><span data-stu-id="a8773-218">The following example prints a description of the application's last error to the HTTP output stream.</span></span> <span data-ttu-id="a8773-219">如果不發生任何錯誤，它會顯示 「 沒有錯誤 」。</span><span class="sxs-lookup"><span data-stu-id="a8773-219">It prints "No Errors" if no errors have been encountered.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.GetLastError Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.GetLastError Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.GetLastError Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.GetLastError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpServerUtility.ClearError" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8773-220">將已經編碼排除無效 HTML 字元的字串解碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-220">Decodes a string that has been encoded to eliminate invalid HTML characters.</span>
          </span>
          <span data-ttu-id="a8773-221">若要編碼或解碼 Web 應用程式之外的值，請使用 <see cref="T:System.Net.WebUtility" /> 類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-221">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public string HtmlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string HtmlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HtmlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ HtmlDecode(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="a8773-222">要解碼的 HTML 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-222">The HTML string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-223">將 HTML 編碼字串解碼，並傳回解碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-223">Decodes an HTML-encoded string and returns the decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8773-224">解碼的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-224">The decoded text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-225">HTML 編碼確保文字會正確顯示在瀏覽器並不會解譯為 HTML 瀏覽器。</span><span class="sxs-lookup"><span data-stu-id="a8773-225">HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</span></span> <span data-ttu-id="a8773-226">例如，如果文字字串包含小於符號 (\<) 或大於符號 (>)，瀏覽器會將這些字元解譯為左或右括號的 HTML 標記。</span><span class="sxs-lookup"><span data-stu-id="a8773-226">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="a8773-227">當字元會以 HTML 編碼時，公告會轉換成字串`&lt;`和`&gt;`，因而導致瀏覽器顯示小於符號和大於號正確。</span><span class="sxs-lookup"><span data-stu-id="a8773-227">When the characters are HTML encoded, they are converted to the strings `&lt;` and `&gt;`, which causes the browser to display the less than sign and greater than sign correctly.</span></span> <span data-ttu-id="a8773-228"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> 將解碼已被傳送到伺服器的文字。</span><span class="sxs-lookup"><span data-stu-id="a8773-228"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> decodes text that has been transmitted to the server.</span></span>  
  
 <span data-ttu-id="a8773-229">這個方法是便利的方式來存取<xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType>方法在執行階段從 ASP.NET 應用程式。</span><span class="sxs-lookup"><span data-stu-id="a8773-229">This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="a8773-230">就內部而言，這個方法會使用<xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType>来解碼的字串。</span><span class="sxs-lookup"><span data-stu-id="a8773-230">Internally, this method uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="a8773-231">在 ASP.NET web 網頁的程式碼後置檔案中，存取的執行個體<xref:System.Web.HttpServerUtility>類別透過`Server`屬性。</span><span class="sxs-lookup"><span data-stu-id="a8773-231">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="a8773-232">在程式碼後置檔案中沒有類別中，使用`HttpContext.Current.Server`存取的執行個體<xref:System.Web.HttpServerUtility>類別。</span><span class="sxs-lookup"><span data-stu-id="a8773-232">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="a8773-233">Web 應用程式之外使用<xref:System.Net.WebUtility>類別來編碼或解碼的值。</span><span class="sxs-lookup"><span data-stu-id="a8773-233">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8773-234">下列範例包含函式`LoadDecodedFile`，這將檔案中的資料解碼，並將它複製到一個字串。</span><span class="sxs-lookup"><span data-stu-id="a8773-234">The following example contains the function `LoadDecodedFile`, which decodes the data from a file and copies it into one string.</span></span>  
  
 [!code-aspx-csharp[Classic HttpServerUtility.HtmlDecode Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpServerUtility.HtmlDecode Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public void HtmlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void HtmlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HtmlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void HtmlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="a8773-235">要解碼的 HTML 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-235">The HTML string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="a8773-236">包含已解碼字串的 <see cref="T:System.IO.TextWriter" /> 輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-236">The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-237">將 HTML 編碼字串解碼，並送出結果輸出至 <see cref="T:System.IO.TextWriter" /> 輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-237">Decodes an HTML-encoded string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-238">HTML 編碼確保文字會正確顯示在瀏覽器並不會解譯為 HTML 瀏覽器。</span><span class="sxs-lookup"><span data-stu-id="a8773-238">HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</span></span> <span data-ttu-id="a8773-239">例如，如果文字字串包含小於符號 (\<) 或大於符號 (>)，瀏覽器會將這些字元解譯為左或右括號的 HTML 標記。</span><span class="sxs-lookup"><span data-stu-id="a8773-239">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="a8773-240">當字元會以 HTML 編碼時，公告會轉換成字串`&lt;`和`&gt;`，因而導致瀏覽器顯示小於符號和大於號正確。</span><span class="sxs-lookup"><span data-stu-id="a8773-240">When the characters are HTML encoded, they are converted to the strings `&lt;` and `&gt;`, which causes the browser to display the less than sign and greater than sign correctly.</span></span>  
  
 <span data-ttu-id="a8773-241"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> 將解碼已被傳送到伺服器的文字。</span><span class="sxs-lookup"><span data-stu-id="a8773-241"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> decodes text that has been transmitted to the server.</span></span>  
  
 <span data-ttu-id="a8773-242"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> 是方便的方式來存取<xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType>方法在執行階段從 ASP.NET 應用程式。</span><span class="sxs-lookup"><span data-stu-id="a8773-242"><xref:System.Web.HttpServerUtility.HtmlDecode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="a8773-243">就內部而言，<xref:System.Web.HttpServerUtility.HtmlDecode%2A>使用<xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType>来解碼的字串。</span><span class="sxs-lookup"><span data-stu-id="a8773-243">Internally, <xref:System.Web.HttpServerUtility.HtmlDecode%2A> uses <xref:System.Web.HttpUtility.HtmlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="a8773-244">若要編碼或解碼 Web 應用程式之外的值，請使用 <xref:System.Net.WebUtility> 類別。</span><span class="sxs-lookup"><span data-stu-id="a8773-244">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8773-245">下列範例會將已傳輸的 HTML 編碼透過 HTTP 的字串解碼。</span><span class="sxs-lookup"><span data-stu-id="a8773-245">The following example decodes a string that has been HTML-encoded for transmission over HTTP.</span></span> <span data-ttu-id="a8773-246">它提供將字串解碼，名為`EncodedString`其中包含文字"這是&lt;測試字串&gt;。 」，並將它複製到名為字串`DecodedString`做為 「 這是\<測試字串 >。 」。</span><span class="sxs-lookup"><span data-stu-id="a8773-246">It decodes the supplied string named `EncodedString` which contains the text "This is a &lt;Test String&gt;.", and copies it into the string named `DecodedString` as "This is a \<Test String>.".</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.HtmlDecode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.HtmlDecode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlDecode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8773-247">將字串編碼以顯示於瀏覽器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-247">Encodes a string to be displayed in a browser.</span>
          </span>
          <span data-ttu-id="a8773-248">若要編碼或解碼 Web 應用程式之外的值，請使用 <see cref="T:System.Net.WebUtility" /> 類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-248">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public string HtmlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string HtmlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HtmlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ HtmlEncode(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="a8773-249">要編碼的文字字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-249">The text string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-250">將字串作 HTML 編碼，並傳回編碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-250">HTML-encodes a string and returns the encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8773-251">HTML 編碼的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-251">The HTML-encoded text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-252">HTML 編碼確保文字會正確顯示在瀏覽器並不會解譯為 HTML 瀏覽器。</span><span class="sxs-lookup"><span data-stu-id="a8773-252">HTML encoding makes sure that text is displayed correctly in the browser and not interpreted by the browser as HTML.</span></span> <span data-ttu-id="a8773-253">例如，如果文字字串包含小於符號 (\<) 或大於符號 (>)，瀏覽器會將這些字元解譯為左或右括號的 HTML 標記。</span><span class="sxs-lookup"><span data-stu-id="a8773-253">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as the opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="a8773-254">當字元會以 HTML 編碼時，公告會轉換成字串`&lt;`和`&gt;`，因而導致瀏覽器顯示小於符號和大於號正確。</span><span class="sxs-lookup"><span data-stu-id="a8773-254">When the characters are HTML encoded, they are converted to the strings `&lt;` and `&gt;`, which causes the browser to display the less than sign and greater than sign correctly.</span></span>  
  
 <span data-ttu-id="a8773-255">這個方法是便利的方式來存取<xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType>方法在執行階段從 ASP.NET 應用程式。</span><span class="sxs-lookup"><span data-stu-id="a8773-255">This method is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="a8773-256">就內部而言，這個方法會使用<xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType>編碼字串。</span><span class="sxs-lookup"><span data-stu-id="a8773-256">Internally, this method uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="a8773-257">在 ASP.NET web 網頁的程式碼後置檔案中，存取的執行個體<xref:System.Web.HttpServerUtility>類別透過`Server`屬性。</span><span class="sxs-lookup"><span data-stu-id="a8773-257">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="a8773-258">在程式碼後置檔案中沒有類別中，使用`HttpContext.Current.Server`存取的執行個體<xref:System.Web.HttpServerUtility>類別。</span><span class="sxs-lookup"><span data-stu-id="a8773-258">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="a8773-259">Web 應用程式之外使用<xref:System.Net.WebUtility>類別來編碼或解碼的值。</span><span class="sxs-lookup"><span data-stu-id="a8773-259">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8773-260">下列範例會示範如何以 HTML 編碼的值，可能代碼 unsafe 程式碼。</span><span class="sxs-lookup"><span data-stu-id="a8773-260">The following example shows how to HTML-encode a value that potentially codes unsafe code.</span></span> <span data-ttu-id="a8773-261">程式碼位於 web 網頁的程式碼後置檔案中。</span><span class="sxs-lookup"><span data-stu-id="a8773-261">The code resides in the code-behind file for a web page.</span></span> <span data-ttu-id="a8773-262">要編碼的值是硬式編碼在此範例僅供簡化範例，顯示值的型別，您可能會進行 HTML 編碼。</span><span class="sxs-lookup"><span data-stu-id="a8773-262">The value to encode is hard-coded in this example only to simplify the example and show the type of value you might HTML-encode.</span></span> <span data-ttu-id="a8773-263">一般而言，您就是進行 HTML 編碼所收到使用者或要求的值。</span><span class="sxs-lookup"><span data-stu-id="a8773-263">Typically, you would HTML-encode a value that you received from the user or the request.</span></span> <span data-ttu-id="a8773-264">`Result` 是指`Literal`控制項。</span><span class="sxs-lookup"><span data-stu-id="a8773-264">`Result` refers to a `Literal` control.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.HtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.HtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="a8773-265">下一個範例是類似於先前的範例，但它會顯示如何以 HTML 編碼類別內的值不在程式碼後置檔案。</span><span class="sxs-lookup"><span data-stu-id="a8773-265">The next example is similar to the previous example except it shows how to HTML-encode a value from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.HtmlEncode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.HtmlEncode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.htmlencode/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public void HtmlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void HtmlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HtmlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void HtmlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="a8773-266">要編碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-266">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="a8773-267">包含已編碼字串的 <see cref="T:System.IO.TextWriter" /> 輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-267">The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-268">將字串作 HTML 編碼，並送出結果輸出至 <see cref="T:System.IO.TextWriter" /> 輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-268">HTML-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-269">HTML 編碼，可確保文字將會正確顯示瀏覽器中，不會解譯為 HTML 瀏覽器中。</span><span class="sxs-lookup"><span data-stu-id="a8773-269">HTML encoding ensures that text will be correctly displayed in the browser, not interpreted by the browser as HTML.</span></span> <span data-ttu-id="a8773-270">例如，如果文字字串包含小於符號 (\<) 或大於符號 (>)，瀏覽器會將這些字元解譯為左或右括號的 HTML 標記。</span><span class="sxs-lookup"><span data-stu-id="a8773-270">For example, if a text string contains a less than sign (\<) or greater than sign (>), the browser would interpret these characters as an opening or closing bracket of an HTML tag.</span></span> <span data-ttu-id="a8773-271">這兩個字元的 HTML 編碼方式是`&lt;`和`&gt;`分別，因而導致瀏覽器顯示小於符號和大於號正確。</span><span class="sxs-lookup"><span data-stu-id="a8773-271">The HTML encoding of these two characters is `&lt;` and `&gt;`, respectively, which causes the browser to display the less than sign and greater than sign correctly.</span></span>  
  
 <span data-ttu-id="a8773-272"><xref:System.Web.HttpServerUtility.HtmlEncode%2A> 是方便的方式來存取<xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType>方法在執行階段從 ASP.NET 應用程式。</span><span class="sxs-lookup"><span data-stu-id="a8773-272"><xref:System.Web.HttpServerUtility.HtmlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="a8773-273">就內部而言，<xref:System.Web.HttpServerUtility.HtmlEncode%2A>使用<xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType>編碼字串。</span><span class="sxs-lookup"><span data-stu-id="a8773-273">Internally, <xref:System.Web.HttpServerUtility.HtmlEncode%2A> uses <xref:System.Web.HttpUtility.HtmlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="a8773-274">若要編碼或解碼 Web 應用程式之外的值，請使用 <xref:System.Net.WebUtility> 類別。</span><span class="sxs-lookup"><span data-stu-id="a8773-274">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8773-275">下列範例將字串編碼以進行 HTTP 傳輸。</span><span class="sxs-lookup"><span data-stu-id="a8773-275">The following example encodes a string for transmission by HTTP.</span></span> <span data-ttu-id="a8773-276">它將名為的字串編碼`TestString`，其中包含文字"這是\<測試字串 >。 」，並將它複製到名為字串`EncodedString`做為 「 這是&lt;測試字串&gt;。"。</span><span class="sxs-lookup"><span data-stu-id="a8773-276">It encodes the string named `TestString`, which contains the text "This is a \<Test String>.", and copies it into the string named `EncodedString` as "This is a &lt;Test String&gt;.".</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.HtmlEncode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlEncode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.HtmlEncode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.HtmlEncode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtility.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8773-277">取得伺服器的電腦名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-277">Gets the server's computer name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8773-278">本機電腦的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-278">The name of the local computer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a8773-279">下列範例會將伺服器的電腦名稱儲存為字串變數。</span><span class="sxs-lookup"><span data-stu-id="a8773-279">The following example stores the server's computer name as a string variable.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.MachineName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.MachineName Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.MachineName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.MachineName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="a8773-280">找不到電腦名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-280">The computer name cannot be found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="a8773-281">Web 應用程式中的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-281">The virtual path in the Web application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-282">傳回對應於指定虛擬路徑的實體檔案路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-282">Returns the physical file path that corresponds to the specified virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8773-283">網頁伺服器上對應至 <paramref name="path" /> 的實體檔案路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-283">The physical file path on the Web server that corresponds to <paramref name="path" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-284">如果`path`是`null`、<xref:System.Web.HttpServerUtility.MapPath%2A>方法會傳回包含目前要求路徑之目錄的完整實體路徑。</span><span class="sxs-lookup"><span data-stu-id="a8773-284">If `path` is `null`, the <xref:System.Web.HttpServerUtility.MapPath%2A> method returns the full physical path of the directory that contains the current request for the path.</span></span> <span data-ttu-id="a8773-285">相對路徑不會不需要指定現有的檔案或資料夾，此方法傳回的值。</span><span class="sxs-lookup"><span data-stu-id="a8773-285">The relative path does not need to specify an existing file or folder for this method to return a value.</span></span> <span data-ttu-id="a8773-286">不過，您無法指定 Web 應用程式之外的路徑。</span><span class="sxs-lookup"><span data-stu-id="a8773-286">However, you cannot specify a path outside of the Web application.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a8773-287"><xref:System.Web.HttpServerUtility.MapPath%2A>方法可能包含機密資訊的裝載環境。</span><span class="sxs-lookup"><span data-stu-id="a8773-287">The <xref:System.Web.HttpServerUtility.MapPath%2A> method potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="a8773-288">傳回值不應該顯示給使用者。</span><span class="sxs-lookup"><span data-stu-id="a8773-288">The return value should not be displayed to users.</span></span>  
  
 <span data-ttu-id="a8773-289">Web 應用程式位於`C:\ExampleSites\TestMapPath`就會傳回下列結果：</span><span class="sxs-lookup"><span data-stu-id="a8773-289">A Web application that resides at `C:\ExampleSites\TestMapPath` would return the following results:</span></span>  
  
|<span data-ttu-id="a8773-290">從要求</span><span class="sxs-lookup"><span data-stu-id="a8773-290">Request from</span></span>|`path`|<span data-ttu-id="a8773-291">傳回值</span><span class="sxs-lookup"><span data-stu-id="a8773-291">Returned value</span></span>|  
|------------------|------------|--------------------|  
|<span data-ttu-id="a8773-292">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="a8773-292">RootLevelPage.aspx</span></span>|`null`|<span data-ttu-id="a8773-293">C:\ExampleSites\TestMapPath</span><span class="sxs-lookup"><span data-stu-id="a8773-293">C:\ExampleSites\TestMapPath</span></span>|  
|<span data-ttu-id="a8773-294">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="a8773-294">RootLevelPage.aspx</span></span>|<span data-ttu-id="a8773-295">"/DownOneLevel/DownLevelPage.aspx"</span><span class="sxs-lookup"><span data-stu-id="a8773-295">"/DownOneLevel/DownLevelPage.aspx"</span></span>|<span data-ttu-id="a8773-296">C:\ExampleSites\TestMapPath\DownOneLevel\DownLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="a8773-296">C:\ExampleSites\TestMapPath\DownOneLevel\DownLevelPage.aspx</span></span>|  
|<span data-ttu-id="a8773-297">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="a8773-297">RootLevelPage.aspx</span></span>|<span data-ttu-id="a8773-298">"/NotRealFolder"</span><span class="sxs-lookup"><span data-stu-id="a8773-298">"/NotRealFolder"</span></span>|<span data-ttu-id="a8773-299">C:\ExampleSites\TestMapPath\NotRealFolder</span><span class="sxs-lookup"><span data-stu-id="a8773-299">C:\ExampleSites\TestMapPath\NotRealFolder</span></span>|  
|<span data-ttu-id="a8773-300">RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="a8773-300">RootLevelPage.aspx</span></span>|<span data-ttu-id="a8773-301">"../OutsideApplication"</span><span class="sxs-lookup"><span data-stu-id="a8773-301">"../OutsideApplication"</span></span>|<xref:System.Web.HttpException>|  
|<span data-ttu-id="a8773-302">/DownOneLevel/DownLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="a8773-302">/DownOneLevel/DownLevelPage.aspx</span></span>|`null`|<span data-ttu-id="a8773-303">C:\ExampleSites\TestMapPath\DownOneLevel</span><span class="sxs-lookup"><span data-stu-id="a8773-303">C:\ExampleSites\TestMapPath\DownOneLevel</span></span>|  
|<span data-ttu-id="a8773-304">/DownOneLevel/DownLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="a8773-304">/DownOneLevel/DownLevelPage.aspx</span></span>|<span data-ttu-id="a8773-305">"../RootLevelPage.aspx"</span><span class="sxs-lookup"><span data-stu-id="a8773-305">"../RootLevelPage.aspx"</span></span>|<span data-ttu-id="a8773-306">C:\ExampleSites\TestMapPath\RootLevelPage.aspx</span><span class="sxs-lookup"><span data-stu-id="a8773-306">C:\ExampleSites\TestMapPath\RootLevelPage.aspx</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a8773-307">下列範例會示範如何擷取實體檔案的相對虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="a8773-307">The following example shows how to retrieve the physical file of a relative virtual path.</span></span> <span data-ttu-id="a8773-308">此程式碼位於 web 網頁的程式碼後置檔案，並會利用預設`Server`物件。</span><span class="sxs-lookup"><span data-stu-id="a8773-308">The code resides in the code-behind file for a web page and utilizes the default `Server` object.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.MapPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.mappath/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.MapPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.mappath/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="a8773-309">下一個範例是類似於先前的範例，但它會顯示如何擷取的程式碼後置檔案中沒有類別中的實體路徑。</span><span class="sxs-lookup"><span data-stu-id="a8773-309">The next example is similar to the previous example except it shows how to retrieve a physical path from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.MapPath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.mappath/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.MapPath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.mappath/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="a8773-310">目前的 <see cref="T:System.Web.HttpContext" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-310">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a8773-311">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-311">-or-</span>
          </span>
          <span data-ttu-id="a8773-312">
            <paramref name="path" /> 是實體路徑，但必須使用虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-312">
              <paramref name="path" /> is a physical path, but a virtual path was expected.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptTimeout">
      <MemberSignature Language="C#" Value="public int ScriptTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScriptTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtility.ScriptTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScriptTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a8773-313">取得和設定要求的逾時值 (以秒為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-313">Gets and sets the request time-out value in seconds.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a8773-314">要求的逾時值設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-314">The time-out value setting for requests.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-315"><xref:System.Web.HttpServerUtility.ScriptTimeout%2A>可以在 Web.config 檔案中設定屬性，藉由設定`executionTimeout`項目的屬性。</span><span class="sxs-lookup"><span data-stu-id="a8773-315">The <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> property can be set in the Web.config file by setting the `executionTimeout` attribute of the  element.</span></span> <span data-ttu-id="a8773-316">設定逾時以程式設計方式使用<xref:System.Web.HttpServerUtility.ScriptTimeout%2A>屬性會優先於 Web.config 設定。</span><span class="sxs-lookup"><span data-stu-id="a8773-316">Setting the time-out programmatically with the <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> property takes precedence over the Web.config setting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8773-317">如果您設定`debug`至項目的屬性`true`在 Web.config 檔案中，值<xref:System.Web.HttpServerUtility.ScriptTimeout%2A>會被忽略。</span><span class="sxs-lookup"><span data-stu-id="a8773-317">If you set the `debug` attribute of the  element to `true` in the Web.config file, the value of <xref:System.Web.HttpServerUtility.ScriptTimeout%2A> will be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8773-318">下列範例會設定要求逾時期限為 60 秒。</span><span class="sxs-lookup"><span data-stu-id="a8773-318">The following example sets the request time-out period to 60 seconds.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.ScriptTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.ScriptTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.ScriptTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.ScriptTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="a8773-319">目前的 <see cref="T:System.Web.HttpContext" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-319">The current <see cref="T:System.Web.HttpContext" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a8773-320">逾時期間為 <see langword="null" />，否則不能被設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-320">The time-out period is <see langword="null" /> or otherwise could not be set.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transfer">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8773-321">結束目前網頁的執行，開始針對目前的要求執行新網頁。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-321">Terminates execution of the current page and starts execution of a new page for the current request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Transfer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transfer (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transfer(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="a8773-322">要在伺服器上執行之新網頁的 URL 路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-322">The URL path of the new page on the server to execute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-323">針對目前的要求結束目前網頁的執行，並使用指定的網頁 URL 路徑開始執行新網頁。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-323">For the current request, terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-324">傳送到網頁應該是另一個.aspx 網頁。</span><span class="sxs-lookup"><span data-stu-id="a8773-324">The page transferred to should be another .aspx page.</span></span> <span data-ttu-id="a8773-325">比方說，傳輸至.asp 或.asmx 頁面不正確。</span><span class="sxs-lookup"><span data-stu-id="a8773-325">For instance, a transfer to an .asp or .asmx page is not valid.</span></span> <span data-ttu-id="a8773-326"><xref:System.Web.HttpServerUtility.Transfer%2A>方法可保留<xref:System.Web.HttpRequest.QueryString%2A>和<xref:System.Web.HttpRequest.Form%2A>集合。</span><span class="sxs-lookup"><span data-stu-id="a8773-326">The <xref:System.Web.HttpServerUtility.Transfer%2A> method preserves the <xref:System.Web.HttpRequest.QueryString%2A> and <xref:System.Web.HttpRequest.Form%2A> collections.</span></span>  
  
 <span data-ttu-id="a8773-327"><xref:System.Web.HttpServerUtility.Transfer%2A> 呼叫<xref:System.Web.HttpResponse.End%2A>，哪些則會擲回<xref:System.Threading.ThreadAbortException>完成時的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a8773-327"><xref:System.Web.HttpServerUtility.Transfer%2A> calls <xref:System.Web.HttpResponse.End%2A>, which throws a <xref:System.Threading.ThreadAbortException> exception upon completion.</span></span>  
  
 <span data-ttu-id="a8773-328">ASP.NET 不會驗證目前使用者是否獲得授權檢視所傳遞的資源<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-328">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="a8773-329">雖然 ASP.NET 授權和驗證邏輯會在呼叫原始資源的處理常式之前，ASP.NET 會直接呼叫所指定的處理常式<xref:System.Web.HttpServerUtility.Transfer%2A>方法並不會重新執行驗證和授權邏輯新的資源。</span><span class="sxs-lookup"><span data-stu-id="a8773-329">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Transfer%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="a8773-330">如果您的應用程式安全性原則需要有適當的權限可存取資源的用戶端，應用程式應該強制重新授權，或提供自訂的存取控制機制。</span><span class="sxs-lookup"><span data-stu-id="a8773-330">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="a8773-331">您可以使用強制重新授權<xref:System.Web.HttpResponse.Redirect%2A>方法，而非<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-331">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="a8773-332"><xref:System.Web.HttpResponse.Redirect%2A>方法會執行用戶端重新導向瀏覽器要求新的資源。</span><span class="sxs-lookup"><span data-stu-id="a8773-332">The <xref:System.Web.HttpResponse.Redirect%2A> method performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="a8773-333">因為這個重新導向時輸入系統的新要求，所以必須網際網路資訊服務 (IIS) 和 ASP.NET 的安全性原則的所有驗證和授權邏輯。</span><span class="sxs-lookup"><span data-stu-id="a8773-333">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="a8773-334">您可以驗證使用者已透過加入自訂授權使用的方法，檢視資源的權限<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法之前執行的應用程式呼叫<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-334">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transfer (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transfer(System::String ^ path, bool preserveForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="a8773-335">要在伺服器上執行之新網頁的 URL 路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-335">The URL path of the new page on the server to execute.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="a8773-336">
            <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-336">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-337">結束目前網頁的執行，並使用指定的網頁 URL 路徑開始執行新網頁。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-337">Terminates execution of the current page and starts execution of a new page by using the specified URL path of the page.</span>
          </span>
          <span data-ttu-id="a8773-338">指定是否要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-338">Specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-339">傳送到網頁應該是另一個.aspx 網頁。</span><span class="sxs-lookup"><span data-stu-id="a8773-339">The page transferred to should be another .aspx page.</span></span> <span data-ttu-id="a8773-340">比方說，傳輸至.asp 或.asmx 頁面不正確。</span><span class="sxs-lookup"><span data-stu-id="a8773-340">For instance, a transfer to an .asp or .asmx page is not valid.</span></span>  
  
 <span data-ttu-id="a8773-341"><xref:System.Web.HttpServerUtility.Transfer%2A> 呼叫<xref:System.Web.HttpResponse.End%2A>，哪些則會擲回<xref:System.Threading.ThreadAbortException>完成時的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a8773-341"><xref:System.Web.HttpServerUtility.Transfer%2A> calls <xref:System.Web.HttpResponse.End%2A>, which throws a <xref:System.Threading.ThreadAbortException> exception upon completion.</span></span>  
  
 <span data-ttu-id="a8773-342">如果您設定`preserveForm`參數`true`，[目標] 頁面將能夠透過存取前一頁的檢視狀態<xref:System.Web.UI.Page.PreviousPage%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a8773-342">If you set the `preserveForm` parameter to `true`, the target page will be able to access the view state of the previous page by using the <xref:System.Web.UI.Page.PreviousPage%2A> property.</span></span>  
  
 <span data-ttu-id="a8773-343">基於安全性目的，您應該保留`enableViewStateMac`屬性設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a8773-343">For security purposes, you should keep the `enableViewStateMac` attribute set to `true`.</span></span> <span data-ttu-id="a8773-344">ASP.NET 不會驗證目前使用者是否獲得授權檢視所傳遞的資源<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-344">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="a8773-345">雖然 ASP.NET 授權和驗證邏輯會在呼叫原始資源的處理常式之前，ASP.NET 會直接呼叫所指定的處理常式<xref:System.Web.HttpServerUtility.Transfer%2A>方法並不會重新執行驗證和授權邏輯新的資源。</span><span class="sxs-lookup"><span data-stu-id="a8773-345">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Transfer%2A> method and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="a8773-346">如果您的應用程式安全性原則需要有適當的權限可存取資源的用戶端，應用程式應該強制重新授權，或提供自訂的存取控制機制。</span><span class="sxs-lookup"><span data-stu-id="a8773-346">If your application's security policy requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="a8773-347">您可以使用強制重新授權<xref:System.Web.HttpResponse.Redirect%2A>方法，而非<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-347">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="a8773-348"><xref:System.Web.HttpResponse.Redirect%2A>方法會執行用戶端重新導向瀏覽器要求新的資源。</span><span class="sxs-lookup"><span data-stu-id="a8773-348">The <xref:System.Web.HttpResponse.Redirect%2A> method performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="a8773-349">因為這個重新導向時輸入系統的新要求，所以必須網際網路資訊服務 (IIS) 和 ASP.NET 的安全性原則的所有驗證和授權邏輯。</span><span class="sxs-lookup"><span data-stu-id="a8773-349">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both Internet Information Services (IIS) and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="a8773-350">您可以驗證使用者已透過加入自訂授權使用的方法，檢視資源的權限<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法之前執行的應用程式呼叫<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-350">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8773-351">下列範例會執行目前的頁面相同目錄中新的頁面。</span><span class="sxs-lookup"><span data-stu-id="a8773-351">The following example executes a new page in the same directory as the current page.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.Transfer Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.Transfer Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.Transfer Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.Transfer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="a8773-352">目前的網頁要求為回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-352">The current page request is a callback.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public void Transfer (System.Web.IHttpHandler handler, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transfer(class System.Web.IHttpHandler handler, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.Transfer(System.Web.IHttpHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transfer (handler As IHttpHandler, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transfer(System::Web::IHttpHandler ^ handler, bool preserveForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="a8773-353">HTTP 處理常式，實作 <see cref="T:System.Web.IHttpHandler" />，以傳輸目前要求至此。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-353">The HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> to transfer the current request to.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="a8773-354">
            <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-354">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-355">結束目前網頁的執行，並使用實作 <see cref="T:System.Web.IHttpHandler" /> 介面的自訂 HTTP 處理常式開始執行新要求，以及指定是否要清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-355">Terminates execution of the current page and starts execution of a new request by using a custom HTTP handler that implements the <see cref="T:System.Web.IHttpHandler" /> interface and specifies whether to clear the <see cref="P:System.Web.HttpRequest.QueryString" /> and <see cref="P:System.Web.HttpRequest.Form" /> collections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-356">您可以撰寫自訂 HTTP 處理常式來處理 HTTP 要求中任何以 Common Language Specification (CLS) 相容的語言特定的預先定義的類型。</span><span class="sxs-lookup"><span data-stu-id="a8773-356">You can write custom HTTP handlers to process specific, predefined types of HTTP requests in any language that is compliant with the Common Language Specification (CLS).</span></span> <span data-ttu-id="a8773-357">定義 HTTP 處理常式類別，而不是傳統 ASP (也稱為傳統 ASP) 網頁或 ASP.NET 網頁中的可執行程式碼回應這些特定的要求。</span><span class="sxs-lookup"><span data-stu-id="a8773-357">Executable code that is defined in the HTTP handler classes instead of conventional ASP (also known as classic ASP) pages or ASP.NET pages responds to these specific requests.</span></span> <span data-ttu-id="a8773-358">進行互動的低層級的要求和回應服務的 Web 伺服器正在執行網際網路資訊服務 (IIS) 允許 HTTP 處理常式，並且會提供類似功能的 ISAPI 擴充程式但更簡單的程式設計模型。</span><span class="sxs-lookup"><span data-stu-id="a8773-358">HTTP handlers allow for interacting with the low-level request and response services of a Web server that is running Internet Information Services (IIS), and they provide functionality that is similar to ISAPI extensions but with a simpler programming model.</span></span>  
  
 <span data-ttu-id="a8773-359">如果您設定`preserveForm`參數`true`，[目標] 頁面將能夠透過存取前一頁的檢視狀態<xref:System.Web.UI.Page.PreviousPage%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="a8773-359">If you set the `preserveForm` parameter to `true`, the target page will be able to access the view state of the previous page by using the <xref:System.Web.UI.Page.PreviousPage%2A> property.</span></span>  
  
 <span data-ttu-id="a8773-360">基於安全性目的，您應該保留`enableViewStateMac`屬性設為`true`。</span><span class="sxs-lookup"><span data-stu-id="a8773-360">For security purposes, you should keep the `enableViewStateMac` attribute set to `true`.</span></span> <span data-ttu-id="a8773-361">ASP.NET 不會驗證目前使用者是否獲得授權檢視所傳遞的資源<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-361">ASP.NET does not verify that the current user is authorized to view the resource delivered by the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="a8773-362">雖然 ASP.NET 授權和驗證邏輯會在呼叫原始資源的處理常式之前，ASP.NET 會直接呼叫所指定的處理常式<xref:System.Web.HttpServerUtility.Transfer%2A>方法，並針對新的作用不會重新執行驗證和授權邏輯資源。</span><span class="sxs-lookup"><span data-stu-id="a8773-362">Although the ASP.NET authorization and authentication logic runs before the original resource handler is called, ASP.NET directly calls the handler indicated by the <xref:System.Web.HttpServerUtility.Transfer%2A> method, and does not rerun authentication and authorization logic for the new resource.</span></span> <span data-ttu-id="a8773-363">如果您的應用程式的安全性原則需要有適當的權限可存取資源的用戶端，應該強制重新授權應用程式，或提供的自訂存取控制機制。</span><span class="sxs-lookup"><span data-stu-id="a8773-363">If the security policy for your application requires clients to have appropriate authorization to access the resource, the application should force reauthorization or provide a custom access-control mechanism.</span></span>  
  
 <span data-ttu-id="a8773-364">您可以使用強制重新授權<xref:System.Web.HttpResponse.Redirect%2A>方法，而非<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-364">You can force reauthorization by using the <xref:System.Web.HttpResponse.Redirect%2A> method instead of the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span> <span data-ttu-id="a8773-365"><xref:System.Web.HttpResponse.Redirect%2A>方法會執行用戶端重新導向瀏覽器要求新的資源。</span><span class="sxs-lookup"><span data-stu-id="a8773-365">The <xref:System.Web.HttpResponse.Redirect%2A> method performs a client-side redirect in which the browser requests the new resource.</span></span> <span data-ttu-id="a8773-366">這個重新導向時輸入系統的新要求，因為它必須同時 IIS 和 ASP.NET 的安全性原則的所有驗證和授權邏輯。</span><span class="sxs-lookup"><span data-stu-id="a8773-366">Because this redirect is a new request entering the system, it is subjected to all the authentication and authorization logic of both the IIS and ASP.NET security policy.</span></span>  
  
 <span data-ttu-id="a8773-367">您可以驗證使用者已透過加入自訂授權使用的方法，檢視資源的權限<xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>方法之前執行的應用程式呼叫<xref:System.Web.HttpServerUtility.Transfer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-367">You can verify that the user has permission to view the resource by incorporating a custom authorization method that uses the <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> method before the application calls the <xref:System.Web.HttpServerUtility.Transfer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ApplicationException">
          <span data-ttu-id="a8773-368">目前的網頁要求為回呼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-368">The current page request is a callback.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransferRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8773-369">執行所指定 URL 的非同步執行工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-369">Performs an asynchronous execution of the specified URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-370"><xref:System.Web.HttpServerUtility.TransferRequest%2A> .NET Framework 3.5 版中引進了。</span><span class="sxs-lookup"><span data-stu-id="a8773-370"><xref:System.Web.HttpServerUtility.TransferRequest%2A> was introduced in the .NET Framework version 3.5.</span></span> <span data-ttu-id="a8773-371">摘要.NET Framework 的詳細資訊，請參閱[版本和相依性](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="a8773-371">For summary information about the .NET Framework, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="a8773-372">要在伺服器上執行之新網頁的 URL 路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-372">The URL path of the new page on the server to execute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-373">執行所指定 URL 的非同步執行工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-373">Performs an asynchronous execution of the specified URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-374">這個方法多載會呼叫<xref:System.Web.HttpServerUtility.TransferRequest%2A>多載`preserveForm`參數設定為`false`、`method`參數設定為`null`、`headers`參數設定為`null`，而`preserveUser`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="a8773-374">This method overload calls the <xref:System.Web.HttpServerUtility.TransferRequest%2A> overload with the `preserveForm` parameter set to `false`, the `method` parameter set to `null`, the `headers` parameter set to `null`, and the `preserveUser` parameter set to `true`.</span></span> <span data-ttu-id="a8773-375">如需詳細資訊，請參閱 < 備註 > 一節<xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>多載。</span><span class="sxs-lookup"><span data-stu-id="a8773-375">For more information, see the "Remarks" section in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="a8773-376">此要求需要 [!INCLUDE[iisver](~/includes/iisver-md.md)] 的 Integrated 管線模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-376">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="a8773-377">伺服器無法用來處理要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-377">The server is not available to handle the request.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8773-378">
            <paramref name="path" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-378">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a8773-379">
            <paramref name="path" /> 參數是無效的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-379">The <paramref name="path" /> parameter is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path, bool preserveForm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="a8773-380">要在伺服器上執行之新網頁的 URL 路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-380">The URL path of the new page on the server to execute.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="a8773-381">
            <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.Form" /> 集合，<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-381">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-382">執行所指定 URL 的非同步執行工作，並保留查詢字串參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-382">Performs an asynchronous execution of the specified URL and preserves query string parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-383">這個多載呼叫<xref:System.Web.HttpServerUtility.TransferRequest%2A>多載`preserveForm`參數設定中，傳遞的值為`method`參數設定為`null`、`headers`參數設定為`null`，而`preserveUser`參數集若要`true`。</span><span class="sxs-lookup"><span data-stu-id="a8773-383">This overload calls the <xref:System.Web.HttpServerUtility.TransferRequest%2A> overload with the `preserveForm` parameter set to the value passed in, the `method` parameter set to `null`, the `headers` parameter set to `null`, and the `preserveUser` parameter set to `true`.</span></span> <span data-ttu-id="a8773-384">如需詳細資訊，請參閱 < 備註 > 一節<xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>。</span><span class="sxs-lookup"><span data-stu-id="a8773-384">For more information, see the "Remarks" section in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</span></span>  
  
 <span data-ttu-id="a8773-385"><xref:System.Web.HttpServerUtility.TransferRequest%2A> .NET Framework 3.5 版中引進。</span><span class="sxs-lookup"><span data-stu-id="a8773-385"><xref:System.Web.HttpServerUtility.TransferRequest%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="a8773-386">如需詳細資訊，請參閱[版本和相依性](~/docs/framework/migration-guide/versions-and-dependencies.md)。</span><span class="sxs-lookup"><span data-stu-id="a8773-386">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="a8773-387">此要求需要 [!INCLUDE[iisver](~/includes/iisver-md.md)] 的 Integrated 管線模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-387">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="a8773-388">伺服器無法用來處理要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-388">The server is not available to handle the request.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8773-389">
            <paramref name="path" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-389">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a8773-390">
            <paramref name="path" /> 參數是無效的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-390">The <paramref name="path" /> parameter is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="a8773-391">要在伺服器上執行之新網頁的 URL 路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-391">The URL path of the new page on the server to execute.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="a8773-392">
            <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.Form" /> 集合，<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-392">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="a8773-393">用於執行新要求的 HTTP 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-393">The HTTP method to use in the execution of the new request.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="a8773-394">新要求之要求標頭的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-394">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of request headers for the new request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-395">使用指定的 HTTP 方法與標頭執行所指定 URL 的非同步執行工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-395">Performs an asynchronous execution of the specified URL using the specified HTTP method and headers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-396">使用的整合式的管線模式中執行時，這個方法用[!INCLUDE[iisver](~/includes/iisver-md.md)]允許從一個資源類型到另一個傳送執行正確的要求內容的目標要求時的要求處理。</span><span class="sxs-lookup"><span data-stu-id="a8773-396">This method is used when running with the integrated pipeline mode in [!INCLUDE[iisver](~/includes/iisver-md.md)] to allow request processing to be transferred from one resource type to another while executing the target request with the correct request context.</span></span> <span data-ttu-id="a8773-397">例如，您可以使用<xref:System.Web.HttpServerUtility.TransferRequest%2A>方法來傳輸要求 XML 頁面的 ASPX 頁面的要求。</span><span class="sxs-lookup"><span data-stu-id="a8773-397">For example, you can use the <xref:System.Web.HttpServerUtility.TransferRequest%2A> method to transfer a request for an ASPX page to a request for an XML page.</span></span>  
  
 <span data-ttu-id="a8773-398"><xref:System.Web.HttpServerUtility.TransferRequest%2A>方法執行非同步的子系執行所指定的 url，使用以下條件：</span><span class="sxs-lookup"><span data-stu-id="a8773-398">The <xref:System.Web.HttpServerUtility.TransferRequest%2A> method performs an asynchronous child execution of the specified URL with the following conditions:</span></span>  
  
-   <span data-ttu-id="a8773-399">如果`path`參數指定的查詢字串，它會當做新的查詢字串。</span><span class="sxs-lookup"><span data-stu-id="a8773-399">If the `path` parameter specifies a query string, it will be used as the new query string.</span></span> <span data-ttu-id="a8773-400">如果包含任何查詢字串，不則要求的查詢字串將會重複使用。</span><span class="sxs-lookup"><span data-stu-id="a8773-400">If no query string is included, the query string of the request will be re-used.</span></span>  
  
-   <span data-ttu-id="a8773-401">如果`method`參數指定，則會使用它。</span><span class="sxs-lookup"><span data-stu-id="a8773-401">If the `method` parameter is specified, it will be used.</span></span> <span data-ttu-id="a8773-402">如果是`null`，將會使用原始要求的 HTTP 方法。</span><span class="sxs-lookup"><span data-stu-id="a8773-402">If it is `null`, the HTTP method of the original request will be used.</span></span>  
  
-   <span data-ttu-id="a8773-403">如果`preserveForm`參數是`true`，目前實體的要求將提供給目標要求。</span><span class="sxs-lookup"><span data-stu-id="a8773-403">If the `preserveForm` parameter is `true`, the current entity body of the request will be available to the target request.</span></span> <span data-ttu-id="a8773-404">這可讓表單張貼，並上傳至傳輸。</span><span class="sxs-lookup"><span data-stu-id="a8773-404">This allows form posts and uploads to be transferred.</span></span>  
  
-   <span data-ttu-id="a8773-405">如果目前的原始要求上設定的使用者身分識別，身分識別將轉移到新的要求。</span><span class="sxs-lookup"><span data-stu-id="a8773-405">If the user identity is currently set on the original request, the identity will be transferred to the new request.</span></span> <span data-ttu-id="a8773-406">這可讓已驗證的要求，重複使用的新要求的驗證結果。</span><span class="sxs-lookup"><span data-stu-id="a8773-406">This allows authenticated requests to re-use the result of the authentication for the new request.</span></span> <span data-ttu-id="a8773-407">如果您不想要傳送的使用者，將使用者設定為`null`之前在原始要求。</span><span class="sxs-lookup"><span data-stu-id="a8773-407">If you do not want the user to be transferred, set the user to `null` on the original request before transferring.</span></span>  
  
-   <span data-ttu-id="a8773-408">如果`headers`參數指定，則新的要求將使用指定的標頭來執行。</span><span class="sxs-lookup"><span data-stu-id="a8773-408">If the `headers` parameter is specified, the new request will execute with the specified headers.</span></span> <span data-ttu-id="a8773-409">這可以用來修改要求標頭和新的要求，cookie，或加入特殊的標頭，指定已在接收到原始要求。</span><span class="sxs-lookup"><span data-stu-id="a8773-409">This can be used to modify the request headers and cookies for the new request, or add a special header that specifies where the original request was received.</span></span>  
  
     <span data-ttu-id="a8773-410">這個方法會呼叫<xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29>方法多載`preserveUser`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="a8773-410">This method calls the <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%2CSystem.Boolean%29> method overload with the `preserveUser` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="a8773-411">此要求需要 [!INCLUDE[iisver](~/includes/iisver-md.md)] 以 Integrated 模式執行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-411">The request requires [!INCLUDE[iisver](~/includes/iisver-md.md)] running in integrated mode.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="a8773-412">伺服器無法用來處理要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-412">The server is not available to handle the request.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8773-413">
            <paramref name="path" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-413">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a8773-414">
            <paramref name="path" /> 參數是無效的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-414">The <paramref name="path" /> parameter is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers, bool preserveUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers, bool preserveUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection, preserveUser As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers, bool preserveUser);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="preserveUser" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="a8773-415">路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-415">The path.</span>
          </span>
        </param>
        <param name="preserveForm">
          <span data-ttu-id="a8773-416">
            <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.Form" /> 集合，<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-416">
              <see langword="true" /> to preserve the <see cref="P:System.Web.HttpRequest.Form" /> collection; <see langword="false" /> to clear the <see cref="P:System.Web.HttpRequest.Form" /> collection.</span>
          </span>
        </param>
        <param name="method">
          <span data-ttu-id="a8773-417">用於新要求的 HTTP 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-417">The HTTP method to use in the new request.</span>
          </span>
        </param>
        <param name="headers">
          <span data-ttu-id="a8773-418">包含新要求之要求標頭的 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-418">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains request headers for the new request.</span>
          </span>
        </param>
        <param name="preserveUser">
          <span data-ttu-id="a8773-419">
            <see langword="true" /> 表示要保留使用者識別，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-419">
              <see langword="true" /> to preserve the user identity; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="a8773-420">這個方法的其他方法多載會呼叫這個多載（在此參數設定為<see langword="true" />的情況下）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-420">The other method overloads of this method call this overload with this parameter set to <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-421">使用指定的 HTTP 方法、標頭和路徑，並選擇性地保留表單值和使用者識別，執行所指定 URL 的非同步執行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-421">Performs an asynchronous execution of the specified URL using the specified HTTP method, headers, and path, and optionally preserves form values and the user identity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-422">如需詳細資訊，請參閱 < 備註 > 一節<xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>。</span><span class="sxs-lookup"><span data-stu-id="a8773-422">For more information, see the "Remarks" section in <xref:System.Web.HttpServerUtility.TransferRequest%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Collections.Specialized.NameValueCollection%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="a8773-423">此要求需要 [!INCLUDE[iisver](~/includes/iisver-md.md)] 的 Integrated 管線模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-423">The request requires the integrated pipeline mode of [!INCLUDE[iisver](~/includes/iisver-md.md)].</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="a8773-424">伺服器無法用來處理要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-424">The server is not available to handle the request.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8773-425">
            <paramref name="path" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-425">The <paramref name="path" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a8773-426">
            <paramref name="path" /> 參數是無效的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-426">The <paramref name="path" /> parameter is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8773-427">將編碼為 HTTP 傳輸的字串解碼，並以 URL 送至伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-427">Decodes a string that was encoded for HTTP transmission and then sent to the server in a URL.</span>
          </span>
          <span data-ttu-id="a8773-428">若要編碼或解碼 Web 應用程式之外的值，請使用 <see cref="T:System.Net.WebUtility" /> 類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-428">To encode or decode values outside of a web application, use the <see cref="T:System.Net.WebUtility" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public string UrlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UrlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UrlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UrlDecode(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="a8773-429">要解碼的文字字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-429">The text string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-430">將字串作 URL 解碼，並傳回解碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-430">URL-decodes a string and returns the decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8773-431">解碼的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-431">The decoded text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-432">URL 編碼，可確保所有瀏覽器將會正確傳輸 URL 字串中的文字。</span><span class="sxs-lookup"><span data-stu-id="a8773-432">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="a8773-433">字元，例如問題標記 （？）、 連字號 (&)、 斜線符號 （/），和空格可能會被截斷或某些瀏覽器損毀。</span><span class="sxs-lookup"><span data-stu-id="a8773-433">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="a8773-434">如此一來，這些字元必須編碼在`<a>`標記，或在查詢字串的字串可以所要求之字串中的瀏覽器重新傳送。</span><span class="sxs-lookup"><span data-stu-id="a8773-434">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="a8773-435">這個方法是便利的方式來存取<xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType>方法在執行階段從 ASP.NET 應用程式。</span><span class="sxs-lookup"><span data-stu-id="a8773-435">This method is a convenient way to access the <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="a8773-436">就內部而言，這個方法會使用<xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType>来解碼的字串。</span><span class="sxs-lookup"><span data-stu-id="a8773-436">Internally, this method uses <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="a8773-437">在 ASP.NET web 網頁的程式碼後置檔案中，存取的執行個體<xref:System.Web.HttpServerUtility>類別透過`Server`屬性。</span><span class="sxs-lookup"><span data-stu-id="a8773-437">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="a8773-438">在程式碼後置檔案中沒有類別中，使用`HttpContext.Current.Server`存取的執行個體<xref:System.Web.HttpServerUtility>類別。</span><span class="sxs-lookup"><span data-stu-id="a8773-438">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="a8773-439">Web 應用程式之外使用<xref:System.Net.WebUtility>類別來編碼或解碼的值。</span><span class="sxs-lookup"><span data-stu-id="a8773-439">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8773-440">下列範例顯示如何進行 URL 解碼值是從所擷取的查詢字串。</span><span class="sxs-lookup"><span data-stu-id="a8773-440">The following example shows how to URL-decode a value that is retrieved from the query string.</span></span> <span data-ttu-id="a8773-441">程式碼位於 web 網頁的程式碼後置檔案中。</span><span class="sxs-lookup"><span data-stu-id="a8773-441">The code resides in the code-behind file for a web page.</span></span> <span data-ttu-id="a8773-442">`ReturnPage` 是指`HyperLink`控制項。</span><span class="sxs-lookup"><span data-stu-id="a8773-442">`ReturnPage` refers to a `HyperLink` control.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlDecode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.UrlDecode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="a8773-443">下一個範例是類似於先前的範例，但它會顯示如何進行 URL 解碼值從類別內，不是程式碼後置檔案中。</span><span class="sxs-lookup"><span data-stu-id="a8773-443">The next example is similar to the previous example except it shows how to URL-decode a value from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlDecode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.UrlDecode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urldecode/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public void UrlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UrlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UrlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UrlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="a8773-444">要解碼的 HTML 字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-444">The HTML string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="a8773-445">包含已解碼字串的 <see cref="T:System.IO.TextWriter" /> 輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-445">The <see cref="T:System.IO.TextWriter" /> output stream that contains the decoded string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-446">將 URL 中收到的 HTML 字串解碼，並送出結果輸出至 <see cref="T:System.IO.TextWriter" /> 輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-446">Decodes an HTML string received in a URL and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-447">URL 編碼，可確保所有瀏覽器將會正確傳輸 URL 字串中的文字。</span><span class="sxs-lookup"><span data-stu-id="a8773-447">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="a8773-448">字元，例如問題標記 （？）、 連字號 (&)、 斜線符號 （/），和空格可能會被截斷或某些瀏覽器損毀。</span><span class="sxs-lookup"><span data-stu-id="a8773-448">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="a8773-449">如此一來，這些字元必須編碼在`<a>`標記，或在查詢字串的字串可以所要求之字串中的瀏覽器重新傳送。</span><span class="sxs-lookup"><span data-stu-id="a8773-449">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="a8773-450"><xref:System.Web.HttpServerUtility.UrlDecode%2A> 是方便的方式來存取<xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType>方法在執行階段從 ASP.NET 應用程式。</span><span class="sxs-lookup"><span data-stu-id="a8773-450"><xref:System.Web.HttpServerUtility.UrlDecode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="a8773-451">就內部而言，<xref:System.Web.HttpServerUtility.UrlDecode%2A>使用<xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType>来解碼的字串。</span><span class="sxs-lookup"><span data-stu-id="a8773-451">Internally, <xref:System.Web.HttpServerUtility.UrlDecode%2A> uses <xref:System.Web.HttpUtility.UrlDecode%2A?displayProperty=nameWithType> to decode strings.</span></span>  
  
 <span data-ttu-id="a8773-452">若要編碼或解碼 Web 應用程式之外的值，請使用 <xref:System.Net.WebUtility> 類別。</span><span class="sxs-lookup"><span data-stu-id="a8773-452">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8773-453">下列範例會將名為字串`EncodedString`（在 URL 中接收） 到名為字串`DecodedString`。</span><span class="sxs-lookup"><span data-stu-id="a8773-453">The following example decodes the string named `EncodedString` (received in a URL) into the string named `DecodedString`.</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.UrlDecode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.UrlDecode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.UrlDecode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.UrlDecode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a8773-454">經由 URL 將字串編碼，以進行從 Web 伺服器至用戶端的可靠 HTTP 傳輸。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-454">Encodes a string for reliable HTTP transmission from the Web server to a client through the URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-455"><xref:System.Web.HttpServerUtility.UrlEncode%2A> 是方便的方式來存取<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>方法在執行階段從 ASP.NET 應用程式。</span><span class="sxs-lookup"><span data-stu-id="a8773-455"><xref:System.Web.HttpServerUtility.UrlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="a8773-456">就內部而言，<xref:System.Web.HttpServerUtility.UrlEncode%2A>使用<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>編碼字串。</span><span class="sxs-lookup"><span data-stu-id="a8773-456">Internally, <xref:System.Web.HttpServerUtility.UrlEncode%2A> uses <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="a8773-457">若要編碼或解碼 Web 應用程式之外的值，請使用 <xref:System.Net.WebUtility> 類別。</span><span class="sxs-lookup"><span data-stu-id="a8773-457">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public string UrlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UrlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UrlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UrlEncode(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="a8773-458">要作 URL 編碼的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-458">The text to URL-encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-459">將字串作 URL 編碼，並傳回編碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-459">URL-encodes a string and returns the encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8773-460">URL 編碼的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-460">The URL-encoded text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-461">URL 編碼，可確保所有瀏覽器將會正確傳輸 URL 字串中的文字。</span><span class="sxs-lookup"><span data-stu-id="a8773-461">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="a8773-462">字元，例如問題標記 （？）、 連字號 (&)、 斜線符號 （/），和空格可能會被截斷或某些瀏覽器損毀。</span><span class="sxs-lookup"><span data-stu-id="a8773-462">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="a8773-463">如此一來，這些字元必須編碼在`<a>`標記，或在查詢字串的字串可以所要求之字串中的瀏覽器重新傳送。</span><span class="sxs-lookup"><span data-stu-id="a8773-463">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="a8773-464">這個方法是便利的方式來存取<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>方法在執行階段從 ASP.NET 應用程式。</span><span class="sxs-lookup"><span data-stu-id="a8773-464">This method is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="a8773-465">就內部而言，這個方法會使用<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>編碼字串。</span><span class="sxs-lookup"><span data-stu-id="a8773-465">Internally, this method uses <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="a8773-466">在 ASP.NET web 網頁的程式碼後置檔案中，存取的執行個體<xref:System.Web.HttpServerUtility>類別透過`Server`屬性。</span><span class="sxs-lookup"><span data-stu-id="a8773-466">In the code-behind file for an ASP.NET web page, access an instance of the <xref:System.Web.HttpServerUtility> class through the `Server` property.</span></span> <span data-ttu-id="a8773-467">在程式碼後置檔案中沒有類別中，使用`HttpContext.Current.Server`存取的執行個體<xref:System.Web.HttpServerUtility>類別。</span><span class="sxs-lookup"><span data-stu-id="a8773-467">In a class that is not in a code-behind file, use `HttpContext.Current.Server` to access an instance of the <xref:System.Web.HttpServerUtility> class.</span></span>  
  
 <span data-ttu-id="a8773-468">Web 應用程式之外使用<xref:System.Net.WebUtility>類別來編碼或解碼的值。</span><span class="sxs-lookup"><span data-stu-id="a8773-468">Outside of a web application, use the <xref:System.Net.WebUtility> class to encode or decode values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8773-469">下列範例顯示如何要作 URL 編碼的值，可做為超連結的查詢字串值。</span><span class="sxs-lookup"><span data-stu-id="a8773-469">The following example shows how to URL-encode a value that is used as a query string value of a hyperlink.</span></span> <span data-ttu-id="a8773-470">程式碼位於 web 網頁的程式碼後置檔案中。</span><span class="sxs-lookup"><span data-stu-id="a8773-470">The code resides in the code-behind file for a web page.</span></span> <span data-ttu-id="a8773-471">要編碼的值是硬式編碼在此範例僅供簡化範例，顯示值的型別，您可能要作 URL 編碼。</span><span class="sxs-lookup"><span data-stu-id="a8773-471">The value to encode is hard-coded in this example only to simplify the example and show the type of value you might URL-encode.</span></span> <span data-ttu-id="a8773-472">一般而言，您就是要作 URL 編碼值，您有來自使用者或要求。</span><span class="sxs-lookup"><span data-stu-id="a8773-472">Typically, you would URL-encode a value that you received from the user or the request.</span></span> <span data-ttu-id="a8773-473">`NextPage` 是指`HyperLink`控制項。</span><span class="sxs-lookup"><span data-stu-id="a8773-473">`NextPage` refers to a `HyperLink` control.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.HttpServerUtility.UrlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/vb/default.aspx.vb#1)]  
  
 <span data-ttu-id="a8773-474">下一個範例是類似於先前的範例，但它會顯示如何要作 URL 編碼類別內的值不在程式碼後置檔案。</span><span class="sxs-lookup"><span data-stu-id="a8773-474">The next example is similar to the previous example except it shows how to URL-encode a value from within a class that is not in the code-behind file.</span></span>  
  
 [!code-csharp[System.Web.HttpServerUtility.UrlEncode#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/cs/sampleclass.cs#2)]
 [!code-vb[System.Web.HttpServerUtility.UrlEncode#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.httpserverutility.urlencode/vb/sampleclass.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public void UrlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UrlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UrlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UrlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="a8773-475">要編碼的文字字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-475">The text string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="a8773-476">包含已編碼字串的 <see cref="T:System.IO.TextWriter" /> 輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-476">The <see cref="T:System.IO.TextWriter" /> output stream that contains the encoded string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-477">將字串作 URL 編碼，並送出結果輸出至 <see cref="T:System.IO.TextWriter" /> 輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-477">URL-encodes a string and sends the resulting output to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-478">URL 編碼，可確保所有瀏覽器將會正確傳輸 URL 字串中的文字。</span><span class="sxs-lookup"><span data-stu-id="a8773-478">URL encoding ensures that all browsers will correctly transmit text in URL strings.</span></span> <span data-ttu-id="a8773-479">字元，例如問題標記 （？）、 連字號 (&)、 斜線符號 （/），和空格可能會被截斷或某些瀏覽器損毀。</span><span class="sxs-lookup"><span data-stu-id="a8773-479">Characters such as a question mark (?), ampersand (&), slash mark (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="a8773-480">如此一來，這些字元必須編碼在`<a>`標記，或在查詢字串的字串可以所要求之字串中的瀏覽器重新傳送。</span><span class="sxs-lookup"><span data-stu-id="a8773-480">As a result, these characters must be encoded in `<a>` tags or in query strings where the strings can be re-sent by a browser in a request string.</span></span>  
  
 <span data-ttu-id="a8773-481"><xref:System.Web.HttpServerUtility.UrlEncode%2A> 是方便的方式來存取<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>方法在執行階段從 ASP.NET 應用程式。</span><span class="sxs-lookup"><span data-stu-id="a8773-481"><xref:System.Web.HttpServerUtility.UrlEncode%2A> is a convenient way to access the <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> method at run time from an ASP.NET application.</span></span> <span data-ttu-id="a8773-482">就內部而言，<xref:System.Web.HttpServerUtility.UrlEncode%2A>使用<xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType>編碼字串。</span><span class="sxs-lookup"><span data-stu-id="a8773-482">Internally, <xref:System.Web.HttpServerUtility.UrlEncode%2A> uses <xref:System.Web.HttpUtility.UrlEncode%2A?displayProperty=nameWithType> to encode strings.</span></span>  
  
 <span data-ttu-id="a8773-483">若要編碼或解碼 Web 應用程式之外的值，請使用 <xref:System.Net.WebUtility> 類別。</span><span class="sxs-lookup"><span data-stu-id="a8773-483">To encode or decode values outside of a web application, use the <xref:System.Net.WebUtility> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8773-484">下列範例將字串編碼以進行 HTTP 傳輸。</span><span class="sxs-lookup"><span data-stu-id="a8773-484">The following example encodes a string for transmission by HTTP.</span></span> <span data-ttu-id="a8773-485">它將名為的字串編碼`TestString`，其中包含文字"這是\<測試字串 >。 」，並將它複製到名為字串`EncodedString`做為"這個 + 是 + a + %3ctest + 字串 %3e。 」。</span><span class="sxs-lookup"><span data-stu-id="a8773-485">It encodes the string named `TestString`, which contains the text "This is a \<Test String>.", and copies it into the string named `EncodedString` as "This+is+a+%3cTest+String%3e.".</span></span>  
  
 [!code-csharp[Classic HttpServerUtility.UrlEncode1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpServerUtility.UrlEncode1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpServerUtility.UrlEncode1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpServerUtility.UrlEncode1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="public string UrlPathEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UrlPathEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function UrlPathEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UrlPathEncode(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="a8773-486">要作 URL 編碼的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-486">The text to URL-encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-487">請勿使用，只在需要瀏覽器相容性時使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-487">Do not use; intended only for browser compatibility.</span>
          </span>
          <span data-ttu-id="a8773-488">使用 <see cref="M:System.Web.HttpServerUtility.UrlEncode(System.String)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-488">Use <see cref="M:System.Web.HttpServerUtility.UrlEncode(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8773-489">URL 編碼的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-489">The URL encoded text.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlTokenDecode">
      <MemberSignature Language="C#" Value="public static byte[] UrlTokenDecode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlTokenDecode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlTokenDecode (input As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlTokenDecode(System::String ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="a8773-490">要解碼的 URL 字串語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-490">The URL string token to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-491">使用 Base 64 數字，將 URL 字串語彙基元解碼成其對應的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-491">Decodes a URL string token to its equivalent byte array using base 64 digits.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8773-492">包含已解碼 URL 字串語彙基元的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-492">The byte array containing the decoded URL string token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-493"><xref:System.Web.HttpServerUtility.UrlTokenDecode%2A>方法會將 URL 字串語彙基元，二進位資料編碼為 base 64 數字，轉換為其對應的位元組陣列表示。</span><span class="sxs-lookup"><span data-stu-id="a8773-493">The <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> method converts a URL string token, which encodes binary data as base 64 digits, to its equivalent byte array representation.</span></span> <span data-ttu-id="a8773-494">使用<xref:System.Web.HttpServerUtility.UrlTokenDecode%2A>方法來解碼語彙基元在 URL 上傳輸和編碼使用<xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>。</span><span class="sxs-lookup"><span data-stu-id="a8773-494">Use the <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> method to decode tokens transmitted on the URL and encoded by using the <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>.</span></span>  
  
 <span data-ttu-id="a8773-495"><xref:System.Web.HttpServerUtility.UrlTokenDecode%2A>方法會傳回空的位元組陣列，如果`input`參數的長度小於 1。</span><span class="sxs-lookup"><span data-stu-id="a8773-495">The <xref:System.Web.HttpServerUtility.UrlTokenDecode%2A> method will return an empty byte array if the `input` parameter has a length of less than one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8773-496">
            <paramref name="input" /> 參數的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-496">The value of the <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="UrlTokenEncode">
      <MemberSignature Language="C#" Value="public static string UrlTokenEncode (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlTokenEncode(unsigned int8[] input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtility.UrlTokenEncode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlTokenEncode (input As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlTokenEncode(cli::array &lt;System::Byte&gt; ^ input);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="a8773-497">要編碼的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-497">The byte array to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a8773-498">將位元組陣列編碼成其對等的字串表示，該字串使用 Base 64 數字且可在 URL 上傳輸。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-498">Encodes a byte array into its equivalent string representation using base 64 digits, which is usable for transmission on the URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a8773-499">如果位元組陣列 *length* 大於一，則為包含已編碼語彙基元的字串；否則為空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-499">The string containing the encoded token if the byte array *length* is greater than one; otherwise, an empty string ("").</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8773-500"><xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>方法將位元組陣列轉換成以 base 64 數字編碼的相等字串表示。</span><span class="sxs-lookup"><span data-stu-id="a8773-500">The <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A> method converts a byte array into an equivalent string representation encoded with base 64 digits.</span></span> <span data-ttu-id="a8773-501">可以在 URL 上傳輸產生的字串語彙基元。</span><span class="sxs-lookup"><span data-stu-id="a8773-501">The resulting string token can be transmitted on the URL.</span></span>  
  
 <span data-ttu-id="a8773-502"><xref:System.Web.HttpServerUtility.UrlTokenEncode%2A>會傳回空字串，如果`input`參數的長度小於 1。</span><span class="sxs-lookup"><span data-stu-id="a8773-502">The <xref:System.Web.HttpServerUtility.UrlTokenEncode%2A> will return an empty string if the `input` parameter has a length of less than one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a8773-503">
            <paramref name="input" /> 參數的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a8773-503">The value of the <paramref name="input" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Convert.ToBase64String(System.Byte[])" />
        <altmember cref="M:System.Web.HttpServerUtility.UrlTokenDecode(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>