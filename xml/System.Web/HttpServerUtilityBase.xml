<Type Name="HttpServerUtilityBase" FullName="System.Web.HttpServerUtilityBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e6af76587615dca7fc7e51cbe5f1821016ef1a1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36574244" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpServerUtilityBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpServerUtilityBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpServerUtilityBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpServerUtilityBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpServerUtilityBase abstract" />
  <TypeSignature Language="F#" Value="type HttpServerUtilityBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>作為提供 Helper 方法以處理 Web 要求之類別的基底類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpServerUtilityBase>類別是抽象類別，其中包含相同的成員<xref:System.Web.HttpServerUtility>類別。 <xref:System.Web.HttpServerUtilityBase>類別可讓您建立衍生的類別，它就像是<xref:System.Web.HttpServerUtility>類別，但您可以自訂，且該工作外的 ASP.NET 管線。 當您執行單元測試時，您通常會使用衍生的類別來實作自訂行為符合您要測試的案例中的成員。  
  
 <xref:System.Web.HttpServerUtilityWrapper> 類別衍生自 <xref:System.Web.HttpServerUtilityBase> 類別。 <xref:System.Web.HttpServerUtilityWrapper>類別可做為包裝函式<xref:System.Web.HttpServerUtility>類別。 在執行階段，您通常使用的執行個體<xref:System.Web.HttpServerUtilityWrapper>類別來呼叫的成員<xref:System.Web.HttpServerUtility>物件。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpServerUtilityBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpServerUtilityBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化這個類別，以供繼承的類別執行個體使用。 這個建構函式只能由繼承的類別呼叫。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public virtual void ClearError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.ClearError" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearError ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearError();" />
      <MemberSignature Language="F#" Value="abstract member ClearError : unit -&gt; unit&#xA;override this.ClearError : unit -&gt; unit" Usage="httpServerUtilityBase.ClearError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，清除最新的例外狀況。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在衍生類別中覆寫時，建立 COM 物件的伺服器執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public virtual object CreateObject (string progID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateObject(string progID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.CreateObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateObject (progID As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateObject(System::String ^ progID);" />
      <MemberSignature Language="F#" Value="abstract member CreateObject : string -&gt; obj&#xA;override this.CreateObject : string -&gt; obj" Usage="httpServerUtilityBase.CreateObject progID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="progID" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="progID">要建立執行個體的類別或物件類型。</param>
        <summary>在衍生類別中覆寫時，建立以物件的程式設計識別碼 (ProgID) 識別之 COM 物件的伺服器執行個體。</summary>
        <returns>新物件。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public virtual object CreateObject (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateObject(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.CreateObject(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateObject(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member CreateObject : Type -&gt; obj&#xA;override this.CreateObject : Type -&gt; obj" Usage="httpServerUtilityBase.CreateObject type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">表示要建立之物件的類型。</param>
        <summary>在衍生類別中覆寫時，建立以物件類型識別之 COM 物件的伺服器執行個體。</summary>
        <returns>新物件。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateObjectFromClsid">
      <MemberSignature Language="C#" Value="public virtual object CreateObjectFromClsid (string clsid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateObjectFromClsid(string clsid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.CreateObjectFromClsid(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateObjectFromClsid (clsid As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateObjectFromClsid(System::String ^ clsid);" />
      <MemberSignature Language="F#" Value="abstract member CreateObjectFromClsid : string -&gt; obj&#xA;override this.CreateObjectFromClsid : string -&gt; obj" Usage="httpServerUtilityBase.CreateObjectFromClsid clsid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsid" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="clsid">要建立執行個體之物件的類別識別項。</param>
        <summary>在衍生類別中覆寫時，建立以物件類別識別項 (CLSID) 識別之 COM 物件的伺服器執行個體。</summary>
        <returns>新物件。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Execute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在衍生類別中覆寫時，執行目前要求內容中指定之資源的處理常式，並將執行傳回叫用它的處理序。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Execute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Execute (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Execute(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member Execute : string -&gt; unit&#xA;override this.Execute : string -&gt; unit" Usage="httpServerUtilityBase.Execute path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">要執行的處理常式 URL。</param>
        <summary>在衍生類別中覆寫時，於目前處理序的內容中，執行所指定虛擬路徑的處理常式。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Execute(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Execute (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Execute(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="abstract member Execute : string * bool -&gt; unit&#xA;override this.Execute : string * bool -&gt; unit" Usage="httpServerUtilityBase.Execute (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">要執行的處理常式 URL。</param>
        <param name="preserveForm">
          <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</param>
        <summary>在衍生類別中被覆寫時，在目前處理序的內容中，執行指定虛擬路徑的處理常式，並指定是否清除 <see cref="P:System.Web.HttpRequestBase.QueryString" /> 和 <see cref="P:System.Web.HttpRequestBase.Form" /> 集合。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (string path, System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(string path, class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Execute(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Execute (path As String, writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Execute(System::String ^ path, System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Execute : string * System.IO.TextWriter -&gt; unit&#xA;override this.Execute : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtilityBase.Execute (path, writer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="path">要執行的處理常式 URL。</param>
        <param name="writer">要擷取輸出的物件。</param>
        <summary>在衍生類別中覆寫時，在目前處理序的內容中，執行指定虛擬路徑的處理常式，並使用 <see cref="T:System.IO.TextWriter" /> 執行個體從執行的處理常式中擷取輸出。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `writer`參數會以傳址方式傳遞<xref:System.Web.HttpServerUtilityBase.Execute%2A>方法。 若要在方法完成之後，請從處理常式擷取輸出，您使用的屬性和方法的`writer`物件。 如需範例，請參閱 <xref:System.Web.HttpServerUtility.Execute%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (string path, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(string path, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Execute(System.String,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Execute (path As String, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Execute(System::String ^ path, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberSignature Language="F#" Value="abstract member Execute : string * System.IO.TextWriter * bool -&gt; unit&#xA;override this.Execute : string * System.IO.TextWriter * bool -&gt; unit" Usage="httpServerUtilityBase.Execute (path, writer, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">要執行的處理常式 URL。</param>
        <param name="writer">要擷取輸出的物件。</param>
        <param name="preserveForm">
          <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</param>
        <summary>在衍生類別中覆寫時，執行目前要求內容中指定虛擬路徑的處理常式，並使用 <see cref="T:System.IO.TextWriter" /> 執行個體從此頁面擷取輸出，以及指定是否清除 <see cref="P:System.Web.HttpRequestBase.QueryString" /> 和 <see cref="P:System.Web.HttpRequestBase.Form" /> 集合的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `writer`參數會以傳址方式傳遞<xref:System.Web.HttpServerUtilityBase.Execute%2A>方法。 若要在方法完成之後，請從處理常式擷取輸出，您使用的屬性和方法的`writer`物件。 如需範例，請參閱 <xref:System.Web.HttpServerUtility.Execute%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public virtual void Execute (System.Web.IHttpHandler handler, System.IO.TextWriter writer, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(class System.Web.IHttpHandler handler, class System.IO.TextWriter writer, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Execute(System.Web.IHttpHandler,System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Execute (handler As IHttpHandler, writer As TextWriter, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Execute(System::Web::IHttpHandler ^ handler, System::IO::TextWriter ^ writer, bool preserveForm);" />
      <MemberSignature Language="F#" Value="abstract member Execute : System.Web.IHttpHandler * System.IO.TextWriter * bool -&gt; unit&#xA;override this.Execute : System.Web.IHttpHandler * System.IO.TextWriter * bool -&gt; unit" Usage="httpServerUtilityBase.Execute (handler, writer, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler">HTTP 處理常式，實作要將目前要求傳輸至其中的介面。</param>
        <param name="writer">要擷取輸出的物件。</param>
        <param name="preserveForm">
          <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</param>
        <summary>在衍生類別中覆寫時，執行目前處理序內容中的指定處理常式，並使用 <see cref="T:System.IO.TextWriter" /> 執行個體從執行的處理常式擷取輸出，以及指定是否清除 <see cref="P:System.Web.HttpRequestBase.QueryString" /> 和 <see cref="P:System.Web.HttpRequestBase.Form" /> 集合的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `writer`參數會以傳址方式傳遞<xref:System.Web.HttpServerUtilityBase.Execute%2A>方法。 若要在方法完成之後，請從處理常式擷取輸出，您使用的屬性和方法的`writer`物件。 如需範例，請參閱 <xref:System.Web.HttpServerUtility.Execute%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLastError">
      <MemberSignature Language="C#" Value="public virtual Exception GetLastError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Exception GetLastError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.GetLastError" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLastError () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Exception ^ GetLastError();" />
      <MemberSignature Language="F#" Value="abstract member GetLastError : unit -&gt; Exception&#xA;override this.GetLastError : unit -&gt; Exception" Usage="httpServerUtilityBase.GetLastError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，傳回最新的例外狀況。</summary>
        <returns>已擲回的最新例外狀況。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在衍生類別中覆寫時，將 HTML 編碼字串解碼。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public virtual string HtmlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string HtmlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HtmlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ HtmlDecode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member HtmlDecode : string -&gt; string&#xA;override this.HtmlDecode : string -&gt; string" Usage="httpServerUtilityBase.HtmlDecode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">要解碼的 HTML 字串。</param>
        <summary>在衍生類別中覆寫時，將經過 HTML 編碼的字串進行解碼，並傳回解碼的字串。</summary>
        <returns>解碼的文字。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public virtual void HtmlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HtmlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HtmlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HtmlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlDecode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtilityBase.HtmlDecode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">要解碼的 HTML 字串。</param>
        <param name="output">包含解碼字串的資料流。</param>
        <summary>在衍生類別中覆寫時，將經過 HTML 編碼的字串進行解碼，並以資料流形式傳回結果。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `output`參數會以傳址方式傳遞<xref:System.Web.HttpServerUtilityBase.HtmlDecode%2A>方法。 若要在方法完成之後，請從處理常式擷取輸出，您使用的屬性和方法的`output`物件。 如需範例，請參閱 <xref:System.Web.HttpServerUtility.HtmlDecode%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在衍生類別中覆寫時，將字串作 HTML 編碼。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual string HtmlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string HtmlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HtmlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ HtmlEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member HtmlEncode : string -&gt; string&#xA;override this.HtmlEncode : string -&gt; string" Usage="httpServerUtilityBase.HtmlEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">要編碼的字串。</param>
        <summary>在衍生類別中覆寫時，將字串進行 HTML 編碼，並傳回編碼字串。</summary>
        <returns>HTML 編碼的文字。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual void HtmlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HtmlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HtmlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HtmlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtilityBase.HtmlEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">要編碼的字串。</param>
        <param name="output">要包含編碼字串的資料流。</param>
        <summary>在衍生類別中覆寫時，以 HTML 編碼字串，並將產生的輸出傳送至輸出資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `output`參數會以傳址方式傳遞<xref:System.Web.HttpServerUtilityBase.HtmlEncode%2A>方法。 若要在方法完成之後，請從處理常式擷取輸出，您使用的屬性和方法的`output`物件。 如需範例，請參閱 <xref:System.Web.HttpServerUtility.HtmlEncode%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="MachineName">
      <MemberSignature Language="C#" Value="public virtual string MachineName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MachineName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtilityBase.MachineName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MachineName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MachineName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MachineName : string" Usage="System.Web.HttpServerUtilityBase.MachineName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得伺服器的電腦名稱。</summary>
        <value>伺服器電腦的名稱。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public virtual string MapPath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string MapPath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MapPath (path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ MapPath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member MapPath : string -&gt; string&#xA;override this.MapPath : string -&gt; string" Usage="httpServerUtilityBase.MapPath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">用於取得實體路徑的虛擬路徑。</param>
        <summary>在衍生的類別中覆寫時，傳回對應到 Web 伺服器上所指定虛擬路徑的實體檔案路徑。</summary>
        <returns>對應至 <paramref name="path" /> 的實體檔案路徑。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptTimeout">
      <MemberSignature Language="C#" Value="public virtual int ScriptTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScriptTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpServerUtilityBase.ScriptTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ScriptTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScriptTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptTimeout : int with get, set" Usage="System.Web.HttpServerUtilityBase.ScriptTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在衍生類別中覆寫時，取得或設定要求的逾時值 (以秒為單位)。</summary>
        <value>要求的逾時值。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transfer">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在衍生類別中覆寫時，結束執行目前的處理序，並且開始對目前的要求執行不同的處理序。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public virtual void Transfer (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transfer(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Transfer(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Transfer (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Transfer(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member Transfer : string -&gt; unit&#xA;override this.Transfer : string -&gt; unit" Usage="httpServerUtilityBase.Transfer path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">要執行的網頁 URL 或處理常式。</param>
        <summary>在衍生類別中覆寫時，會終止執行目前的處理序，並開始執行以 URL 指定的頁面或處理常式。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public virtual void Transfer (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transfer(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Transfer(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Transfer (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Transfer(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="abstract member Transfer : string * bool -&gt; unit&#xA;override this.Transfer : string * bool -&gt; unit" Usage="httpServerUtilityBase.Transfer (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">要執行的網頁 URL 或處理常式。</param>
        <param name="preserveForm">
          <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</param>
        <summary>在衍生類別中覆寫時，結束執行目前的網頁，使用指定的 URL 開始執行不同的網頁或處理常式並指定值，這個值表示是否清除 <see cref="P:System.Web.HttpRequestBase.QueryString" /> 和 <see cref="P:System.Web.HttpRequestBase.Form" /> 集合。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="Transfer">
      <MemberSignature Language="C#" Value="public virtual void Transfer (System.Web.IHttpHandler handler, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Transfer(class System.Web.IHttpHandler handler, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.Transfer(System.Web.IHttpHandler,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Transfer (handler As IHttpHandler, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Transfer(System::Web::IHttpHandler ^ handler, bool preserveForm);" />
      <MemberSignature Language="F#" Value="abstract member Transfer : System.Web.IHttpHandler * bool -&gt; unit&#xA;override this.Transfer : System.Web.IHttpHandler * bool -&gt; unit" Usage="httpServerUtilityBase.Transfer (handler, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="handler">要對其傳輸目前要求的 HTTP 處理常式。</param>
        <param name="preserveForm">
          <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</param>
        <summary>在衍生類別中覆寫時，結束執行目前的處理序，並且開始執行新的要求，使用自訂的 HTTP 處理常式並指定值，這個值表示是否清除 <see cref="P:System.Web.HttpRequestBase.QueryString" /> 和 <see cref="P:System.Web.HttpRequestBase.Form" /> 集合。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransferRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在衍生類別中覆寫時，以非同步方式執行位於指定 URL 的結束點。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public virtual void TransferRequest (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferRequest(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.TransferRequest(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransferRequest (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransferRequest(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member TransferRequest : string -&gt; unit&#xA;override this.TransferRequest : string -&gt; unit" Usage="httpServerUtilityBase.TransferRequest path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">要執行的網頁 URL 或處理常式。</param>
        <summary>在衍生類別中覆寫時，以非同步方式執行位於指定 URL 的結束點。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public virtual void TransferRequest (string path, bool preserveForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferRequest(string path, bool preserveForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.TransferRequest(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransferRequest (path As String, preserveForm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransferRequest(System::String ^ path, bool preserveForm);" />
      <MemberSignature Language="F#" Value="abstract member TransferRequest : string * bool -&gt; unit&#xA;override this.TransferRequest : string * bool -&gt; unit" Usage="httpServerUtilityBase.TransferRequest (path, preserveForm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">要執行的網頁 URL 或處理常式。</param>
        <param name="preserveForm">
          <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</param>
        <summary>在衍生類別中覆寫時，以非同步方式執行指定之 URL 的端點，並指定是否清除 <see cref="P:System.Web.HttpRequestBase.QueryString" /> 和 <see cref="P:System.Web.HttpRequestBase.Form" /> 集合。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public virtual void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection -&gt; unit&#xA;override this.TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="httpServerUtilityBase.TransferRequest (path, preserveForm, method, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="path">要執行的網頁 URL 或處理常式。</param>
        <param name="preserveForm">
          <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</param>
        <param name="method">用於新要求的 HTTP 方法 (<see langword="GET" />、<see langword="POST" /> 等)。 如果為 <see langword="null" />，則會使用原始要求的 HTTP 方法。</param>
        <param name="headers">新要求之要求標頭的集合。</param>
        <summary>在衍生類別中覆寫時，使用指定的 HTTP 方法和標頭，以非同步方式在指定的 URL 執行端點。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="TransferRequest">
      <MemberSignature Language="C#" Value="public virtual void TransferRequest (string path, bool preserveForm, string method, System.Collections.Specialized.NameValueCollection headers, bool preserveUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferRequest(string path, bool preserveForm, string method, class System.Collections.Specialized.NameValueCollection headers, bool preserveUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.TransferRequest(System.String,System.Boolean,System.String,System.Collections.Specialized.NameValueCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransferRequest (path As String, preserveForm As Boolean, method As String, headers As NameValueCollection, preserveUser As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransferRequest(System::String ^ path, bool preserveForm, System::String ^ method, System::Collections::Specialized::NameValueCollection ^ headers, bool preserveUser);" />
      <MemberSignature Language="F#" Value="abstract member TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection * bool -&gt; unit&#xA;override this.TransferRequest : string * bool * string * System.Collections.Specialized.NameValueCollection * bool -&gt; unit" Usage="httpServerUtilityBase.TransferRequest (path, preserveForm, method, headers, preserveUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="preserveForm" Type="System.Boolean" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Specialized.NameValueCollection" />
        <Parameter Name="preserveUser" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">路徑。</param>
        <param name="preserveForm">
          <see langword="true" /> 表示保留 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合；<see langword="false" /> 表示清除 <see cref="P:System.Web.HttpRequest.QueryString" /> 和 <see cref="P:System.Web.HttpRequest.Form" /> 集合。</param>
        <param name="method">用於新要求的 HTTP 方法。</param>
        <param name="headers">包含新要求之要求標頭的 <see cref="T:System.Collections.Specialized.NameValueCollection" /> 物件。</param>
        <param name="preserveUser">
          <see langword="true" /> 表示要保留使用者識別，否則為 <see langword="false" />。 這個方法的其他多載會在 <c>preserveUser</c> 參數設定為 <see langword="true" /> 的情況下，呼叫這個方法多載。</param>
        <summary>在衍生類別中實作時，使用指定的 HTTP 方法、標頭、路徑，以及保留表單值和保留使用者識別的選項，以非同步方式執行位於指定的 URL 上的結束點。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在衍生類別中覆寫時，解碼已編碼的字串，以便僅在 URL 中加入有效的字元。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public virtual string UrlDecode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UrlDecode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UrlDecode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UrlDecode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member UrlDecode : string -&gt; string&#xA;override this.UrlDecode : string -&gt; string" Usage="httpServerUtilityBase.UrlDecode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">要解碼的字串。</param>
        <summary>在衍生類別中覆寫時，將經過 URL 編碼的字串進行解碼，並傳回解碼的字串。</summary>
        <returns>解碼的文字。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public virtual void UrlDecode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UrlDecode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UrlDecode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UrlDecode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member UrlDecode : string * System.IO.TextWriter -&gt; unit&#xA;override this.UrlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtilityBase.UrlDecode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">要解碼的字串。</param>
        <param name="output">包含解碼字串的資料流。</param>
        <summary>在衍生類別中覆寫時，將 URL 編碼字串解碼，並將產生的輸出傳送至資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `output`參數會以傳址方式傳遞<xref:System.Web.HttpServerUtilityBase.UrlDecode%2A>方法。 若要在方法完成之後，請從處理常式擷取輸出，您使用的屬性和方法的`output`物件。 如需範例，請參閱 <xref:System.Web.HttpServerUtility.HtmlDecode%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="UrlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在衍生類別中覆寫時，編碼字串以便僅在 URL 中加入有效的字元。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public virtual string UrlEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UrlEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UrlEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UrlEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member UrlEncode : string -&gt; string&#xA;override this.UrlEncode : string -&gt; string" Usage="httpServerUtilityBase.UrlEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">要作 URL 編碼的文字。</param>
        <summary>在衍生類別中覆寫時，將字串進行 URL 編碼，並傳回編碼字串。</summary>
        <returns>URL 編碼的文字。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public virtual void UrlEncode (string s, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UrlEncode(string s, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UrlEncode (s As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UrlEncode(System::String ^ s, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member UrlEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.UrlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpServerUtilityBase.UrlEncode (s, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="s">要編碼的字串。</param>
        <param name="output">要包含編碼字串的資料流。</param>
        <summary>在衍生類別中覆寫時，以 URL 編碼字串，並將產生的輸出傳送至資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `output`參數會以傳址方式傳遞<xref:System.Web.HttpServerUtilityBase.UrlEncode%2A>方法。 若要在方法完成之後，請從處理常式擷取輸出，您使用的屬性和方法的`output`物件。 如需範例，請參閱 <xref:System.Web.HttpServerUtility.UrlEncode%2A>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="public virtual string UrlPathEncode (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UrlPathEncode(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UrlPathEncode (s As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UrlPathEncode(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member UrlPathEncode : string -&gt; string&#xA;override this.UrlPathEncode : string -&gt; string" Usage="httpServerUtilityBase.UrlPathEncode s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">要進行 URL 編碼的字串。</param>
        <summary>在衍生類別中覆寫時，對 URL 字串的路徑區段進行 URL 編碼。</summary>
        <returns>URL 編碼的文字。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="UrlTokenDecode">
      <MemberSignature Language="C#" Value="public virtual byte[] UrlTokenDecode (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] UrlTokenDecode(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlTokenDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UrlTokenDecode (input As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ UrlTokenDecode(System::String ^ input);" />
      <MemberSignature Language="F#" Value="abstract member UrlTokenDecode : string -&gt; byte[]&#xA;override this.UrlTokenDecode : string -&gt; byte[]" Usage="httpServerUtilityBase.UrlTokenDecode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">要解碼的 URL 字串語彙基元。</param>
        <summary>在衍生類別中受到覆寫時，使用 base64 編碼的數字將 URL 字串語彙基元解碼成對應的位元組陣列。</summary>
        <returns>包含已解碼 URL 語彙基元的位元組陣列。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
    <Member MemberName="UrlTokenEncode">
      <MemberSignature Language="C#" Value="public virtual string UrlTokenEncode (byte[] input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string UrlTokenEncode(unsigned int8[] input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpServerUtilityBase.UrlTokenEncode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UrlTokenEncode (input As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ UrlTokenEncode(cli::array &lt;System::Byte&gt; ^ input);" />
      <MemberSignature Language="F#" Value="abstract member UrlTokenEncode : byte[] -&gt; string&#xA;override this.UrlTokenEncode : byte[] -&gt; string" Usage="httpServerUtilityBase.UrlTokenEncode input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="input">要編碼的位元組陣列。</param>
        <summary>在衍生類別中覆寫時，使用 base64 數字，將位元組陣列編碼成對等的字串表示，使其可在 URL 上傳輸。</summary>
        <returns>如果 <paramref name="input" /> 的長度大於 1，則為包含已編碼陣列的字串，否則為空字串 ("")。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">永遠。</exception>
      </Docs>
    </Member>
  </Members>
</Type>