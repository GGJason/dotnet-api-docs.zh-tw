<Type Name="HttpApplicationState" FullName="System.Web.HttpApplicationState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="64d5e8546f604e8cb9575861f944212b31639bf3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36374941" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpApplicationState : System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpApplicationState extends System.Collections.Specialized.NameObjectCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpApplicationState" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpApplicationState&#xA;Inherits NameObjectCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpApplicationState sealed : System::Collections::Specialized::NameObjectCollectionBase" />
  <TypeSignature Language="F#" Value="type HttpApplicationState = class&#xA;    inherit NameObjectCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="487fa-101">允許跨 ASP.NET 應用程式中的多個工作階段和要求共用全域資訊。</span>
      <span class="sxs-lookup">
        <span data-stu-id="487fa-101">Enables sharing of global information across multiple sessions and requests within an ASP.NET application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="487fa-102">ASP.NET 應用程式是所有檔案、 頁面、 處理常式、 模組和虛擬目錄和子目錄單一的 Web 伺服器上的範圍內的程式碼的總和。</span><span class="sxs-lookup"><span data-stu-id="487fa-102">An ASP.NET application is the sum of all files, pages, handlers, modules, and code within the scope of a virtual directory and its subdirectories on a single Web server.</span></span>  
  
 <span data-ttu-id="487fa-103">單一執行個體<xref:System.Web.HttpApplicationState>類別建立用戶端要求來自任何 URL 資源特定 ASP.NET 應用程式虛擬目錄中的第一次。</span><span class="sxs-lookup"><span data-stu-id="487fa-103">A single instance of an <xref:System.Web.HttpApplicationState> class is created the first time a client requests any URL resource from within a particular ASP.NET application virtual directory.</span></span> <span data-ttu-id="487fa-104">為每個 Web 伺服器上的 ASP.NET 應用程式建立個別的單一執行個體。</span><span class="sxs-lookup"><span data-stu-id="487fa-104">A separate single instance is created for each ASP.NET application on a Web server.</span></span> <span data-ttu-id="487fa-105">每個執行個體的參考，則透過內建函式公開<xref:System.Web.HttpContext.Application%2A>物件。</span><span class="sxs-lookup"><span data-stu-id="487fa-105">A reference to each instance is then exposed via the intrinsic <xref:System.Web.HttpContext.Application%2A> object.</span></span>  
  
 <span data-ttu-id="487fa-106">應用程式狀態不會跨 Web 伺服陣列 （在其中應用程式會在多部伺服器裝載） 或 （在其中應用程式裝載在同一部電腦上的多個處理序） 的網頁處理序共用。</span><span class="sxs-lookup"><span data-stu-id="487fa-106">Application state is not shared across either a Web farm (in which an application is hosted across multiple servers) or a Web garden (in which an application is hosted across multiple processes on the same computer).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="487fa-107">此型別具備執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="487fa-107">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Web.HttpContext" />
    <altmember cref="T:System.Web.HttpApplication" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj -&gt; unit" Usage="httpApplicationState.Add (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="487fa-108">加入至集合的物件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-108">The name of the object to be added to the collection.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="487fa-109">物件的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-109">The value of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="487fa-110">將新物件加入 <see cref="T:System.Web.HttpApplicationState" /> 集合中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-110">Adds a new object to the <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="487fa-111">下列範例會將兩個名為 MyAppVar1 和 MyAppVar2 到應用程式集合的應用程式變數。</span><span class="sxs-lookup"><span data-stu-id="487fa-111">The following example adds two application variables named MyAppVar1 and MyAppVar2 to the Application collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Add Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Add Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.AllKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllKeys As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AllKeys { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllKeys : string[]" Usage="System.Web.HttpApplicationState.AllKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="487fa-112">取得 <see cref="T:System.Web.HttpApplicationState" /> 集合中的便捷鍵 (Access Key)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-112">Gets the access keys in the <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="487fa-113">
            <see cref="T:System.Web.HttpApplicationState" /> 物件名稱的字串陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-113">A string array of <see cref="T:System.Web.HttpApplicationState" /> object names.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="487fa-114">下列範例會填入應用程式狀態集合中的所有物件名稱的字串陣列。</span><span class="sxs-lookup"><span data-stu-id="487fa-114">The following example fills a string array with all the object names in the application state collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.AllKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.AllKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.AllKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.AllKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="httpApplicationState.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="487fa-115">從 <see cref="T:System.Web.HttpApplicationState" /> 集合移除所有物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-115">Removes all objects from an <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="487fa-116">下列範例會移除所有<xref:System.Web.HttpApplicationState>集合中的變數。</span><span class="sxs-lookup"><span data-stu-id="487fa-116">The following example removes all <xref:System.Web.HttpApplicationState> variables from the collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Contents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contents As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Contents { System::Web::HttpApplicationState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contents : System.Web.HttpApplicationState" Usage="System.Web.HttpApplicationState.Contents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="487fa-117">取得 <see cref="T:System.Web.HttpApplicationState" /> 物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-117">Gets a reference to the <see cref="T:System.Web.HttpApplicationState" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="487fa-118">
            <see cref="T:System.Web.HttpApplicationState" /> 物件的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-118">A reference to the <see cref="T:System.Web.HttpApplicationState" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="487fa-119">這個屬性會提供與 ASP 的舊版本相容性。</span><span class="sxs-lookup"><span data-stu-id="487fa-119">This property provides compatibility with earlier versions of ASP.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="487fa-120">下列範例會建立新<xref:System.Web.HttpApplicationState>用來存取應用程式狀態集合中的物件名稱的物件。</span><span class="sxs-lookup"><span data-stu-id="487fa-120">The following example creates a new <xref:System.Web.HttpApplicationState> object that is used to access the object names in the application state collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Contents Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Contents Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Contents Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Contents Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.HttpApplicationState.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="487fa-121">取得 <see cref="T:System.Web.HttpApplicationState" /> 集合中的物件數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-121">Gets the number of objects in the <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="487fa-122">集合中項目物件的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-122">The number of item objects in the collection.</span>
          </span>
          <span data-ttu-id="487fa-123">預設值為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-123">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="487fa-124">下列範例會在集合中的物件數目超過五個時，才執行。</span><span class="sxs-lookup"><span data-stu-id="487fa-124">The following example executes only if the number of objects in the collection exceeds five.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Count Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Count Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Count Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Count Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="487fa-125">以名稱或索引取得 <see cref="T:System.Web.HttpApplicationState" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-125">Gets an <see cref="T:System.Web.HttpApplicationState" /> object by name or index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(int index);" />
      <MemberSignature Language="F#" Value="member this.Get : int -&gt; obj" Usage="httpApplicationState.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="487fa-126">應用程式狀態物件的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-126">The index of the application state object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="487fa-127">以數值索引取得 <see cref="T:System.Web.HttpApplicationState" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-127">Gets an <see cref="T:System.Web.HttpApplicationState" /> object by numerical index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="487fa-128">
            <paramref name="index" /> 參考的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-128">The object referenced by <paramref name="index" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="487fa-129">下列範例會傳回第一個物件 (索引 = 0) 從<xref:System.Web.HttpApplicationState>內建函式的集合<xref:System.Web.HttpContext.Application%2A>物件，並將它複製到新的物件變數。</span><span class="sxs-lookup"><span data-stu-id="487fa-129">The following example returns the first object (index = 0) from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Get1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Get1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Get1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Get1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public object Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Get(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Get : string -&gt; obj" Usage="httpApplicationState.Get name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="487fa-130">物件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-130">The name of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="487fa-131">以名稱取得 <see cref="T:System.Web.HttpApplicationState" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-131">Gets an <see cref="T:System.Web.HttpApplicationState" /> object by name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="487fa-132">
            <paramref name="name" /> 參考的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-132">The object referenced by <paramref name="name" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="487fa-133">下列範例會傳回物件名稱從 MyAppVar1<xref:System.Web.HttpApplicationState>內建函式的集合<xref:System.Web.HttpContext.Application%2A>物件，並將它複製到新的物件變數。</span><span class="sxs-lookup"><span data-stu-id="487fa-133">The following example returns an object named MyAppVar1 from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
```vb  
Dim MyObject As Object  
MyObject = Application.Get("MyAppVar1")  
```  
  
```csharp  
Object MyObject;  
MyObject = Application.Get("MyAppVar1");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetKey(int index);" />
      <MemberSignature Language="F#" Value="member this.GetKey : int -&gt; string" Usage="httpApplicationState.GetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="487fa-134">應用程式狀態物件的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-134">The index of the application state object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="487fa-135">以索引取得 <see cref="T:System.Web.HttpApplicationState" /> 物件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-135">Gets an <see cref="T:System.Web.HttpApplicationState" /> object name by index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="487fa-136">儲存應用程式狀態物件所用的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-136">The name under which the application state object was saved.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="487fa-137">下列範例傳回應用程式狀態集合中所有物件的名稱，並將字串陣列中儲存的名稱。</span><span class="sxs-lookup"><span data-stu-id="487fa-137">The following example returns the names of all the objects in the application state collection and stores the names in a string array.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.GetKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.GetKey Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.GetKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.GetKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="487fa-138">存取 <see cref="T:System.Web.HttpApplicationState" /> 集合中的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-138">Gets access to an object in an <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
          <span data-ttu-id="487fa-139">這個屬性被多載，以允許用名稱或數值索引來存取物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-139">This property is overloaded to allow access to an object by name or numerical index.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Web.HttpApplicationState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="487fa-140">集合中物件的數值索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-140">The numerical index of the object in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="487fa-141">以索引取得單一 <see cref="T:System.Web.HttpApplicationState" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-141">Gets a single <see cref="T:System.Web.HttpApplicationState" /> object by index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="487fa-142">
            <paramref name="index" /> 參考的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-142">The object referenced by <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="487fa-143">下列範例會傳回第一個物件 (索引 = 0) 從<xref:System.Web.HttpApplicationState>內建函式的集合<xref:System.Web.HttpContext.Application%2A>物件，並將它複製到新的物件變數。</span><span class="sxs-lookup"><span data-stu-id="487fa-143">The following example returns the first object (index = 0) from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.HttpApplicationState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="487fa-144">集合中的物件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-144">The name of the object in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="487fa-145">以名稱取得單一 <see cref="T:System.Web.HttpApplicationState" /> 物件的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-145">Gets the value of a single <see cref="T:System.Web.HttpApplicationState" /> object by name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="487fa-146">
            <paramref name="name" /> 參考的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-146">The object referenced by <paramref name="name" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="487fa-147">下列範例會傳回名為物件`MyAppVar1`從<xref:System.Web.HttpApplicationState>內建函式的集合<xref:System.Web.HttpContext.Application%2A>物件，並將它複製到新的物件變數。</span><span class="sxs-lookup"><span data-stu-id="487fa-147">The following example returns an object named `MyAppVar1` from the <xref:System.Web.HttpApplicationState> collection of the intrinsic <xref:System.Web.HttpContext.Application%2A> object and copies it to a new object variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.this Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.this Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Lock();" />
      <MemberSignature Language="F#" Value="member this.Lock : unit -&gt; unit" Usage="httpApplicationState.Lock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="487fa-148">鎖定對 <see cref="T:System.Web.HttpApplicationState" /> 變數的存取，以加速存取的同步處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-148">Locks access to an <see cref="T:System.Web.HttpApplicationState" /> variable to facilitate access synchronization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="487fa-149"><xref:System.Web.HttpApplicationState>類別執行自動鎖定和解除鎖定與<xref:System.Web.HttpApplicationState.AllKeys%2A>和<xref:System.Web.HttpApplicationState.Count%2A>屬性和<xref:System.Web.HttpApplicationState.Add%2A>， <xref:System.Web.HttpApplicationState.Clear%2A>， <xref:System.Web.HttpApplicationState.Get%2A>， <xref:System.Web.HttpApplicationState.GetKey%2A>， <xref:System.Web.HttpApplicationState.Remove%2A>，<xref:System.Web.HttpApplicationState.RemoveAt%2A>和<xref:System.Web.HttpApplicationState.Set%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="487fa-149">The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods.</span></span> <span data-ttu-id="487fa-150">不過，使用明確<xref:System.Web.HttpApplicationState.Lock%2A>和<xref:System.Web.HttpApplicationState.UnLock%2A>方法，當您有一系列的作業可能會比較有效率。</span><span class="sxs-lookup"><span data-stu-id="487fa-150">However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="487fa-151">下列範例會使用<xref:System.Web.HttpApplicationState.Lock%2A>方法和<xref:System.Web.HttpApplicationState.UnLock%2A>方法，以防止其他工作階段變更它們在本機工作階段後，變更之前的兩個應用程式變數的值。</span><span class="sxs-lookup"><span data-stu-id="487fa-151">The following example uses the <xref:System.Web.HttpApplicationState.Lock%2A> method and <xref:System.Web.HttpApplicationState.UnLock%2A> method to prevent other sessions from changing the value of two application variables until after the local session has changed them.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpApplicationState.UnLock" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="httpApplicationState.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="487fa-152">要從集合中移除的物件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-152">The name of the object to be removed from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="487fa-153">從 <see cref="T:System.Web.HttpApplicationState" /> 集合移除指名的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-153">Removes the named object from an <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="487fa-154">下列範例會從集合移除一個應用程式狀態變數。</span><span class="sxs-lookup"><span data-stu-id="487fa-154">The following example removes one application state variable from the collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : unit -&gt; unit" Usage="httpApplicationState.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="487fa-155">從 <see cref="T:System.Web.HttpApplicationState" /> 集合移除所有物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-155">Removes all objects from an <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="487fa-156"><xref:System.Web.HttpApplicationState.RemoveAll%2A> 是內部呼叫<xref:System.Web.HttpApplicationState.Clear%2A>。</span><span class="sxs-lookup"><span data-stu-id="487fa-156"><xref:System.Web.HttpApplicationState.RemoveAll%2A> is an internal call to <xref:System.Web.HttpApplicationState.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="487fa-157">下列範例會移除所有<xref:System.Web.HttpApplicationState>集合中的變數。</span><span class="sxs-lookup"><span data-stu-id="487fa-157">The following example removes all <xref:System.Web.HttpApplicationState> variables from the collection.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.RemoveAll Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.RemoveAll Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.RemoveAll Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.RemoveAll Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="httpApplicationState.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="487fa-158">要移除項目在集合中的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-158">The position in the collection of the item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="487fa-159">根據索引從集合移除 <see cref="T:System.Web.HttpApplicationState" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-159">Removes an <see cref="T:System.Web.HttpApplicationState" /> object from a collection by index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="487fa-160">下列程式碼範例示範如何插入到集合中，兩個應用程式變數，然後使用<xref:System.Web.HttpApplicationState.RemoveAt%2A>方法來移除第一個變數中自訂<xref:System.Web.HttpApplicationState>物件。</span><span class="sxs-lookup"><span data-stu-id="487fa-160">The following code example demonstrates how to insert two application variables into the collection, and then use the <xref:System.Web.HttpApplicationState.RemoveAt%2A> method to remove the first variable in a custom <xref:System.Web.HttpApplicationState> object.</span></span>  
  
 [!code-aspx-csharp[HttpApplicationStateRemoveAt#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpApplicationStateRemoveAt/CS/httpapplicationstate_removeatcs.aspx#1)]
 [!code-aspx-vb[HttpApplicationStateRemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpApplicationStateRemoveAt/VB/httpapplicationstate_removeatvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.Set(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Set (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Set : string * obj -&gt; unit" Usage="httpApplicationState.Set (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="487fa-161">更新的物件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-161">The name of the object to be updated.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="487fa-162">物件的更新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-162">The updated value of the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="487fa-163">更新在 <see cref="T:System.Web.HttpApplicationState" /> 集合中的物件值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-163">Updates the value of an object in an <see cref="T:System.Web.HttpApplicationState" /> collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="487fa-164">下列範例會更新現有的應用程式狀態變數的值。</span><span class="sxs-lookup"><span data-stu-id="487fa-164">The following example updates the value of an existing application state variable.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Set Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Set Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Set Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Set Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public System.Web.HttpStaticObjectsCollection StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollection StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationState.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticObjects As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpStaticObjectsCollection ^ StaticObjects { System::Web::HttpStaticObjectsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticObjects : System.Web.HttpStaticObjectsCollection" Usage="System.Web.HttpApplicationState.StaticObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="487fa-165">取得 <see langword="&lt;object&gt;" /> 標記宣告的所有物件，該標記的範圍設定為 ASP.NET 應用程式內的 "Application"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-165">Gets all objects declared by an <see langword="&lt;object&gt;" /> tag where the scope is set to "Application" within the ASP.NET application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="487fa-166">網頁上物件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-166">A collection of objects on the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="487fa-167">應用程式物件定義於 Global.asax 檔案內`<object runat="server" scope="Application"> </object>`標記。</span><span class="sxs-lookup"><span data-stu-id="487fa-167">Application objects are defined in the Global.asax file inside the `<object runat="server" scope="Application"> </object>` tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="487fa-168">下列範例會取得所有的應用程式物件至<xref:System.Web.HttpStaticObjectsCollection>變數和物件的數目大於 0 時，才會執行常式。</span><span class="sxs-lookup"><span data-stu-id="487fa-168">The following example gets all application objects into a <xref:System.Web.HttpStaticObjectsCollection> variable and executes a routine only if the number of objects is greater than 0.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.StaticObjects Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.StaticObjects Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.StaticObjects Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.StaticObjects Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnLock">
      <MemberSignature Language="C#" Value="public void UnLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationState.UnLock" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnLock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnLock();" />
      <MemberSignature Language="F#" Value="member this.UnLock : unit -&gt; unit" Usage="httpApplicationState.UnLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="487fa-169">解除對 <see cref="T:System.Web.HttpApplicationState" /> 變數存取的鎖定，以加速存取的同步處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="487fa-169">Unlocks access to an <see cref="T:System.Web.HttpApplicationState" /> variable to facilitate access synchronization.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="487fa-170"><xref:System.Web.HttpApplicationState>類別執行自動鎖定和解除鎖定與<xref:System.Web.HttpApplicationState.AllKeys%2A>和<xref:System.Web.HttpApplicationState.Count%2A>屬性和<xref:System.Web.HttpApplicationState.Add%2A>， <xref:System.Web.HttpApplicationState.Clear%2A>， <xref:System.Web.HttpApplicationState.Get%2A>， <xref:System.Web.HttpApplicationState.GetKey%2A>， <xref:System.Web.HttpApplicationState.Remove%2A>，<xref:System.Web.HttpApplicationState.RemoveAt%2A>和<xref:System.Web.HttpApplicationState.Set%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="487fa-170">The <xref:System.Web.HttpApplicationState> class performs automatic locking and unlocking with the <xref:System.Web.HttpApplicationState.AllKeys%2A> and <xref:System.Web.HttpApplicationState.Count%2A> properties and the <xref:System.Web.HttpApplicationState.Add%2A>, <xref:System.Web.HttpApplicationState.Clear%2A>, <xref:System.Web.HttpApplicationState.Get%2A>, <xref:System.Web.HttpApplicationState.GetKey%2A>, <xref:System.Web.HttpApplicationState.Remove%2A>, <xref:System.Web.HttpApplicationState.RemoveAt%2A> and <xref:System.Web.HttpApplicationState.Set%2A> methods.</span></span> <span data-ttu-id="487fa-171">不過，使用明確<xref:System.Web.HttpApplicationState.Lock%2A>和<xref:System.Web.HttpApplicationState.UnLock%2A>方法，當您有一系列的作業可能會比較有效率。</span><span class="sxs-lookup"><span data-stu-id="487fa-171">However, explicitly using the <xref:System.Web.HttpApplicationState.Lock%2A> and <xref:System.Web.HttpApplicationState.UnLock%2A> methods when you have a series of operations may be more efficient.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="487fa-172">下列範例會使用<xref:System.Web.HttpApplicationState.Lock%2A>方法和<xref:System.Web.HttpApplicationState.UnLock%2A>方法，以防止其他工作階段變更它們在本機工作階段後，變更之前的兩個應用程式變數的值。</span><span class="sxs-lookup"><span data-stu-id="487fa-172">The following example uses the <xref:System.Web.HttpApplicationState.Lock%2A> method and <xref:System.Web.HttpApplicationState.UnLock%2A> method to prevent other sessions from changing the value of two application variables until after the local session has changed them.</span></span>  
  
 [!code-csharp[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/CS/source.cs#1)]
 [!code-vb[Classic HttpApplicationState.Lock Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpApplicationState.Lock Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpApplicationState.Lock" />
      </Docs>
    </Member>
  </Members>
</Type>