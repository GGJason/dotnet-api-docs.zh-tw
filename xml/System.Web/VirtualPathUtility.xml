<Type Name="VirtualPathUtility" FullName="System.Web.VirtualPathUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da53f4d1224ce310eb35fb0871d28c64a80ec367" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53395548" /></Metadata><TypeSignature Language="C#" Value="public static class VirtualPathUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit VirtualPathUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.VirtualPathUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class VirtualPathUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class VirtualPathUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type VirtualPathUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供虛擬路徑一般作業的公用程式方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.VirtualPathUtility>類別會提供公用程式方法，涉及虛擬路徑的一般作業。 如需 ASP.NET 伺服器控制項和伺服器程式碼，使用 Web 應用程式根目錄運算子的虛擬路徑波狀符號 （~），常用而不是相對與絕對路徑。 如需詳細資訊，請參閱 < [ASP.NET Web 專案路徑](https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd)。  
  
 使用<xref:System.Web.VirtualPathUtility>類別，在您需要將應用程式的相對路徑轉換成絕對虛擬路徑，因為可能會在開發自訂的 Web 服務處理常式。  
  
 絕對虛擬路徑的開頭常值斜線符號 （/）。 相對虛擬路徑是相對於應用程式根目錄中，如果是只波狀符號 (\~) 或開頭為波狀符號以及雙反斜線 (\~\\\\) 或波狀符號和斜線符號 (\~/)。 進行相對虛擬路徑可讓獨立應用程式的路徑。  
  
 虛擬目錄的應用程式可從此<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>和<xref:System.Web.HttpRequest.ApplicationPath%2A>屬性。  
  
> [!NOTE]
>  <xref:System.Web.VirtualPathUtility>類別並不適合進行安全性或標準化。 如需有關 Web 應用程式安全性的詳細資訊，請參閱[概觀的 Web 應用程式的安全性威脅](https://msdn.microsoft.com/library/88d61678-f84e-4622-ae80-53128821855a)。 如需泛型的 URL 處理功能，請參閱<xref:System.Uri>。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.VirtualPathUtility>類別和它的一些方法。 首先，<xref:System.Web.HttpRequest.FilePath%2A>屬性會產生網頁的虛擬路徑。 <xref:System.Web.VirtualPathUtility.GetFileName%2A>， <xref:System.Web.VirtualPathUtility.GetExtension%2A>，和<xref:System.Web.VirtualPathUtility.GetDirectory%2A>方法會傳回虛擬路徑的相關資訊。 下一步<xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A>屬性會產生目前的要求可能會從不同的虛擬路徑<xref:System.Web.HttpRequest.FilePath%2A>屬性，如果<xref:System.Web.HttpResponse.Redirect%2A>呼叫方法。 <xref:System.Web.VirtualPathUtility.IsAbsolute%2A>， <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>，和<xref:System.Web.VirtualPathUtility.ToAppRelative%2A>方法會傳回虛擬路徑的相關資訊。  
  
 [!code-aspx-csharp[System.Web.VirtualPathUtility#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#1)]
 [!code-aspx-vb[System.Web.VirtualPathUtility#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpRequest" />
    <related type="Article" href="https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd">ASP.NET 網站路徑</related>
  </Docs>
  <Members>
    <Member MemberName="AppendTrailingSlash">
      <MemberSignature Language="C#" Value="public static string AppendTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AppendTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AppendTrailingSlash (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ AppendTrailingSlash(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member AppendTrailingSlash : string -&gt; string" Usage="System.Web.VirtualPathUtility.AppendTrailingSlash virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要附加斜線符號的虛擬路徑。</param>
        <summary>將常值斜線符號 (/) 附加至虛擬路徑結尾 (如果沒有的話)。</summary>
        <returns>已修改的虛擬路徑。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果常值斜線符號 （/） 存在於虛擬路徑的結尾，就不會修改的虛擬路徑。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static string Combine (string basePath, string relativePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Combine(string basePath, string relativePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.Combine(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (basePath As String, relativePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Combine(System::String ^ basePath, System::String ^ relativePath);" />
      <MemberSignature Language="F#" Value="static member Combine : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.Combine (basePath, relativePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basePath" Type="System.String" />
        <Parameter Name="relativePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="basePath">基底路徑。</param>
        <param name="relativePath">相對路徑。</param>
        <summary>結合基底路徑和相對路徑。</summary>
        <returns>結合的 <paramref name="basePath" /> 和 <paramref name="relativePath" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.VirtualPathUtility.Combine%2A>方法會傳回值<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>的相對路徑是否完全波狀符號 （~） 的屬性。  
  
 <xref:System.Web.VirtualPathUtility.Combine%2A>方法會使用<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>屬性值而不是基底路徑，如果相對路徑開頭為波狀符號和斜線符號 (~ /)，否則<xref:System.Web.VirtualPathUtility.Combine%2A>方法會使用基底路徑。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="relativePath" /> 是實體路徑。  
  
-或- 
 <paramref name="relativePath" /> 包含一或多個冒號。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relativePath" /> 為 <see langword="null" /> 或空字串。  
  
-或- 
 <paramref name="basePath" /> 為 <see langword="null" /> 或空字串。</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
        <altmember cref="M:System.Web.Hosting.VirtualPathProvider.CombineVirtualPaths(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDirectory">
      <MemberSignature Language="C#" Value="public static string GetDirectory (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDirectory(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectory (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetDirectory(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetDirectory : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetDirectory virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">虛擬路徑。</param>
        <summary>傳回虛擬路徑的目錄部分。</summary>
        <returns>虛擬路徑中參考的目錄。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`virtualPath`不根目錄，亦即，不等於根目錄運算子 (波狀符號 [\~])，不是以波狀符號開頭 (\~)，例如波狀符號和斜線符號 (\~/) 或波狀符號以及雙反斜線 (\~/ /)，或不能以斜線 （/）、 開頭<xref:System.ArgumentException>擲回例外狀況。  
  
 如果傳入的虛擬路徑<xref:System.Web.VirtualPathUtility.GetDirectory%2A>方式`"/images/image1.gif"`，傳回的目錄是`"/images"`。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.VirtualPathUtility.GetFileName%2A>， <xref:System.Web.VirtualPathUtility.GetExtension%2A>，和<xref:System.Web.VirtualPathUtility.GetDirectory%2A>方法。  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> 不是根目錄。  
  
-或- 
 <paramref name="virtualPath" /> 為 <see langword="null" /> 或空字串。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetExtension">
      <MemberSignature Language="C#" Value="public static string GetExtension (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExtension(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExtension (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetExtension(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetExtension : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetExtension virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">虛擬路徑。</param>
        <summary>擷取虛擬路徑中參考的副檔名。</summary>
        <returns>副檔名字串常值 (String Literal)，包含句號 (.)、<see langword="null" /> 或空字串 ("")。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果傳入的虛擬路徑<xref:System.Web.VirtualPathUtility.GetExtension%2A>方式`"/images/image1.gif"`，傳回的延伸模組是`".gif"`。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.VirtualPathUtility.GetFileName%2A>， <xref:System.Web.VirtualPathUtility.GetExtension%2A>，和<xref:System.Web.VirtualPathUtility.GetDirectory%2A>方法。  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> 包含一或多個無效字元，如 <see cref="F:System.IO.Path.InvalidPathChars" /> 中所定義。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
        <altmember cref="M:System.IO.Path.GetExtension(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetFileName">
      <MemberSignature Language="C#" Value="public static string GetFileName (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFileName(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.GetFileName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFileName (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFileName(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member GetFileName : string -&gt; string" Usage="System.Web.VirtualPathUtility.GetFileName virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">虛擬路徑。</param>
        <summary>擷取虛擬路徑中參考的檔案名稱。</summary>
        <returns><paramref name="virtualPath" /> 中最後一個目錄字元之後的檔案名稱常值，如果 <paramref name="virtualPath" /> 的最後一個字元是目錄或磁碟機分隔符號，則為最後一個目錄名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果傳入的虛擬路徑<xref:System.Web.VirtualPathUtility.GetFileName%2A>方式`"/images/image1.gif"`，傳回的檔名是`"image1.gif"`。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.VirtualPathUtility.GetFileName%2A>， <xref:System.Web.VirtualPathUtility.GetExtension%2A>，和<xref:System.Web.VirtualPathUtility.GetDirectory%2A>方法。  
  
 [!code-csharp[System.Web.VirtualPathUtility#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#2)]
 [!code-vb[System.Web.VirtualPathUtility#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> 包含一或多個無效字元，如 <see cref="F:System.IO.Path.InvalidPathChars" /> 中所定義。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.GetExtension(System.String)" />
        <altmember cref="M:System.Web.VirtualPathUtility.GetDirectory(System.String)" />
        <altmember cref="M:System.IO.Path.GetFileName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAbsolute">
      <MemberSignature Language="C#" Value="public static bool IsAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAbsolute (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAbsolute(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member IsAbsolute : string -&gt; bool" Usage="System.Web.VirtualPathUtility.IsAbsolute virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要檢查的虛擬路徑。</param>
        <summary>傳回布林值，指出所指定的虛擬路徑是否為絕對，亦即，以常值斜線符號 (/) 開頭。</summary>
        <returns>如果 <paramref name="virtualPath" /> 是絕對路徑並且不是 <see langword="true" /> 或空字串 ("")，則為 <see langword="null" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 虛擬路徑是絕對如果它是以常值斜線符號 （/） 開頭。 比方說，<xref:System.Web.HttpRequest.Path%2A>屬性會傳回絕對虛擬路徑。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.VirtualPathUtility.IsAbsolute%2A>， <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>，和<xref:System.Web.VirtualPathUtility.ToAppRelative%2A>方法。  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> 為 <see langword="null" />。</exception>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsAppRelative">
      <MemberSignature Language="C#" Value="public static bool IsAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.IsAppRelative(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAppRelative (virtualPath As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAppRelative(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member IsAppRelative : string -&gt; bool" Usage="System.Web.VirtualPathUtility.IsAppRelative virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要檢查的虛擬路徑。</param>
        <summary>傳回布林值，指出所指定的虛擬路徑是否相對於應用程式。</summary>
        <returns>如果 <paramref name="virtualPath" /> 相對於應用程式，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 虛擬路徑可以是只根目錄運算子 （波狀符號 [~]），或其開頭根目錄運算子。 如果`virtualPath`已`null`、<xref:System.ArgumentNullException>引發的例外狀況。 如果`virtualPath`為空字串 ("")，則<xref:System.Web.VirtualPathUtility.IsAppRelative%2A>方法會傳回`false`。  
  
> [!NOTE]
>  `"~` `filename` `"` 不是有效的虛擬路徑，並傳回`false`針對<xref:System.Web.VirtualPathUtility.IsAppRelative%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.VirtualPathUtility.IsAbsolute%2A>， <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>，和<xref:System.Web.VirtualPathUtility.ToAppRelative%2A>方法。  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="virtualPath" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.IsAbsolute(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="MakeRelative">
      <MemberSignature Language="C#" Value="public static string MakeRelative (string fromPath, string toPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string MakeRelative(string fromPath, string toPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.MakeRelative(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeRelative (fromPath As String, toPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MakeRelative(System::String ^ fromPath, System::String ^ toPath);" />
      <MemberSignature Language="F#" Value="static member MakeRelative : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.MakeRelative (fromPath, toPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromPath" Type="System.String" />
        <Parameter Name="toPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fromPath">傳回相對虛擬路徑的起始虛擬路徑。</param>
        <param name="toPath">傳回相對虛擬路徑的結束虛擬路徑。</param>
        <summary>傳回從某個包含根目錄運算子 (波狀符號 [~]) 之虛擬路徑到另一個虛擬路徑的相對虛擬路徑。</summary>
        <returns>從 <paramref name="fromPath" /> 到 <paramref name="toPath" /> 的相對虛擬路徑。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`fromPath`並`toPath`參數不根目錄，亦即，它們不等於根目錄運算子 (波狀符號 [\~])，不會啟動以波狀符號 (\~)，例如波狀符號和斜線符號 (\~/) 或波狀符號和雙精度浮點數反斜線 (\~/ /)，或使用斜線 （/），無法啟動<xref:System.ArgumentException>擲回例外狀況。  
  
 查詢字串參數和 URI 中所使用的 HTML 錨點不會用於決定的相對路徑。  
  
 如果`fromPath`已`"/directory1/file1.aspx"`並`toPath`是`"/directory2/file2.aspx"`，則<xref:System.Web.VirtualPathUtility.MakeRelative%2A>方法會傳回`"../directory2/file2.aspx"`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="fromPath" /> 不是根目錄。  
  
-或- 
 <paramref name="toPath" /> 不是根目錄。</exception>
        <altmember cref="M:System.Uri.MakeRelative(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveTrailingSlash">
      <MemberSignature Language="C#" Value="public static string RemoveTrailingSlash (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string RemoveTrailingSlash(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.RemoveTrailingSlash(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveTrailingSlash (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ RemoveTrailingSlash(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member RemoveTrailingSlash : string -&gt; string" Usage="System.Web.VirtualPathUtility.RemoveTrailingSlash virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要移除任何尾端斜線符號的虛擬路徑。</param>
        <summary>從虛擬路徑移除尾端斜線符號 (/)。</summary>
        <returns>如果虛擬路徑不是根目錄 ("/")，則為不含尾端斜線符號的虛擬路徑，否則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A>方法會從虛擬路徑的結尾移除斜線 （/）。 如果虛擬路徑的根目錄 (`"/"`)，會採取任何動作。 如果虛擬路徑`null`或空字串 ("")，則<xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A>方法會傳回`null`。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.AppendTrailingSlash(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToAbsolute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將虛擬路徑轉換成應用程式絕對路徑。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAbsolute (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAbsolute(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member ToAbsolute : string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAbsolute virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要轉換成相對應用程式路徑的虛擬路徑。</param>
        <summary>將虛擬路徑轉換成應用程式絕對路徑。</summary>
        <returns>指定之虛擬路徑的絕對路徑表示。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式絕對路徑是其中使用的應用程式路徑，而非根目錄運算子 （波狀符號 [~]）。  
  
 如果`virtualPath`是：  
  
-   絕對的<xref:System.Web.VirtualPathUtility.ToAbsolute%2A>方法會傳回虛擬路徑不變。  
  
-   應用程式相對<xref:System.Web.VirtualPathUtility.ToAbsolute%2A>方法會附加目前的應用程式虛擬目錄路徑的開頭`virtualPath`。 例如，存取目前的應用程式虛擬目錄路徑，從<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>屬性。  
  
-   不進行 root 破解<xref:System.Web.VirtualPathUtility.ToAbsolute%2A>方法會引發<xref:System.ArgumentOutOfRangeException>例外狀況。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="virtualPath" /> 不是根目錄。</exception>
        <exception cref="T:System.Web.HttpException">使用前置雙重句號 (..) 回到上層目錄。</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAbsolute">
      <MemberSignature Language="C#" Value="public static string ToAbsolute (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAbsolute(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAbsolute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAbsolute (virtualPath As String, applicationPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAbsolute(System::String ^ virtualPath, System::String ^ applicationPath);" />
      <MemberSignature Language="F#" Value="static member ToAbsolute : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAbsolute (virtualPath, applicationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要轉換成相對應用程式路徑的虛擬路徑。</param>
        <param name="applicationPath">用來轉換 <paramref name="virtualPath" /> 成為相對路徑的應用程式路徑。</param>
        <summary>使用指定的應用程式路徑，將虛擬路徑轉換成應用程式絕對路徑。</summary>
        <returns><paramref name="virtualPath" /> 的絕對虛擬路徑表示。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.VirtualPathUtility.ToAbsolute%2A>多載<xref:System.Web.VirtualPathUtility.ToAbsolute%2A>方法會使用提供的應用程式路徑，而不是目前的應用程式路徑。  
  
 如果`virtualPath`是：  
  
-   絕對的<xref:System.Web.VirtualPathUtility.ToAbsolute%2A>方法會傳回虛擬路徑，而不需變更。  
  
-   應用程式相對<xref:System.Web.VirtualPathUtility.ToAbsolute%2A>方法會將`applicationPath`虛擬路徑的開頭。  
  
-   不進行 root 破解<xref:System.Web.VirtualPathUtility.ToAbsolute%2A>方法會引發<xref:System.ArgumentOutOfRangeException>例外狀況。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="applicationPath" /> 不是根目錄。</exception>
        <exception cref="T:System.Web.HttpException">在應用程式路徑中，使用前置雙重句號 (..) 回到上層目錄。</exception>
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToAppRelative">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將虛擬路徑轉換成相對應用程式路徑。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAppRelative (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAppRelative(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="static member ToAppRelative : string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAppRelative virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要轉換成相對應用程式路徑的虛擬路徑。</param>
        <summary>使用 <see cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" /> 屬性中的應用程式虛擬路徑，將虛擬路徑轉換成相對應用程式路徑。</summary>
        <returns><paramref name="virtualPath" /> 的相對應用程式路徑表示。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式的虛擬路徑是否`"myapp"`和虛擬路徑`"/myApp/sub/default.asp"`傳入<xref:System.Web.VirtualPathUtility.ToAppRelative%2A>方法，產生的應用程式相對路徑是`"~/sub/default.aspx"`。  
  
 如果`virtualPath`不是以目前的應用程式路徑，開頭<xref:System.Web.VirtualPathUtility.ToAppRelative%2A>方法會傳回虛擬路徑不變。  
  
 如果`virtualPath`等同於應用程式路徑，根目錄運算子 （波狀符號 [~]），則會傳回。 例如，存取目前的應用程式虛擬目錄路徑，從<xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.VirtualPathUtility.IsAbsolute%2A>， <xref:System.Web.VirtualPathUtility.IsAppRelative%2A>，和<xref:System.Web.VirtualPathUtility.ToAppRelative%2A>方法。  
  
 [!code-csharp[System.Web.VirtualPathUtility#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.VirtualPathUtility/cs/virtualpathutilitycs.aspx#3)]
 [!code-vb[System.Web.VirtualPathUtility#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.VirtualPathUtility/vb/virtualpathutilityvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="virtualPath" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
        <altmember cref="P:System.Web.HttpRuntime.AppDomainAppVirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="ToAppRelative">
      <MemberSignature Language="C#" Value="public static string ToAppRelative (string virtualPath, string applicationPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToAppRelative(string virtualPath, string applicationPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.VirtualPathUtility.ToAppRelative(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToAppRelative (virtualPath As String, applicationPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToAppRelative(System::String ^ virtualPath, System::String ^ applicationPath);" />
      <MemberSignature Language="F#" Value="static member ToAppRelative : string * string -&gt; string" Usage="System.Web.VirtualPathUtility.ToAppRelative (virtualPath, applicationPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="applicationPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">要轉換成相對應用程式路徑的虛擬路徑。</param>
        <param name="applicationPath">用來轉換 <paramref name="virtualPath" /> 成為相對路徑的應用程式路徑。</param>
        <summary>使用指定的應用程式路徑，將虛擬路徑轉換成相對應用程式路徑。</summary>
        <returns><paramref name="virtualPath" /> 的相對應用程式路徑表示。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.VirtualPathUtility.ToAppRelative%2A>多載<xref:System.Web.VirtualPathUtility.ToAppRelative%2A>方法會使用`applicationPath`而不是目前的應用程式路徑。 如果`virtualPath`不是以開頭`applicationPath`，則<xref:System.Web.VirtualPathUtility.ToAppRelative%2A>方法會傳回虛擬路徑不變。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.VirtualPathUtility.ToAppRelative(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>