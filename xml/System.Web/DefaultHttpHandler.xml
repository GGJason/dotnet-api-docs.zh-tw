<Type Name="DefaultHttpHandler" FullName="System.Web.DefaultHttpHandler">
  <TypeSignature Language="C#" Value="public class DefaultHttpHandler : System.Web.IHttpAsyncHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultHttpHandler extends System.Object implements class System.Web.IHttpAsyncHandler, class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.DefaultHttpHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultHttpHandler&#xA;Implements IHttpAsyncHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultHttpHandler : System::Web::IHttpAsyncHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpAsyncHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="81bb8-101">表示預設 HTTP 處理常式的屬性和方法。</span><span class="sxs-lookup"><span data-stu-id="81bb8-101">Represents the properties and methods of a default HTTP handler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bb8-102">A<xref:System.Web.DefaultHttpHandler>設定要求攔截透過網際網路資訊服務 (IIS) 6.0 和明確繫結不會套用到要求的擴充功能時，物件會攔截 HTTP 管線中的內送要求。</span><span class="sxs-lookup"><span data-stu-id="81bb8-102">A <xref:System.Web.DefaultHttpHandler> object intercepts incoming requests in the HTTP pipeline when both request interception has been configured through Internet Information Services (IIS) 6.0 and no explicit  bindings apply to the requested extension.</span></span>  
  
 <span data-ttu-id="81bb8-103">要求攔截可以設定透過導入了 IIS 6.0 中的萬用字元應用程式對應功能。</span><span class="sxs-lookup"><span data-stu-id="81bb8-103">Request interception can be set up through the wildcard application mapping feature introduced in IIS 6.0.</span></span> <span data-ttu-id="81bb8-104">如需詳細資訊，請搜尋[MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118)重新對應 URL 中使用萬用字元應用程式對應相關資訊。</span><span class="sxs-lookup"><span data-stu-id="81bb8-104">For more information, search the [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118) for information about using wildcard application maps to remap a URL.</span></span>  
  
 <span data-ttu-id="81bb8-105"><xref:System.Web.DefaultHttpHandler>類別會實作<xref:System.Web.IHttpAsyncHandler>介面，以提供非同步要求處理。</span><span class="sxs-lookup"><span data-stu-id="81bb8-105">The <xref:System.Web.DefaultHttpHandler> class implements the <xref:System.Web.IHttpAsyncHandler> interface to provide asynchronous request processing.</span></span> <span data-ttu-id="81bb8-106">一般 HTTP 處理常式的詳細資訊，請參閱[HTTP 處理常式和 HTTP 模組概觀](http://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b)。</span><span class="sxs-lookup"><span data-stu-id="81bb8-106">For general information about HTTP handlers, see [HTTP Handlers and HTTP Modules Overview](http://msdn.microsoft.com/library/f540bdeb-d22e-4e1d-ba8a-fe6c9926283b).</span></span> <span data-ttu-id="81bb8-107">此外，如需詳細資訊，請參閱下列：</span><span class="sxs-lookup"><span data-stu-id="81bb8-107">Additionally, for more information see the following:</span></span>  
  
-   <span data-ttu-id="81bb8-108">如何建立非同步的 HTTP 處理常式，請參閱[逐步解說： 建立非同步的 HTTP 處理常式](http://msdn.microsoft.com/library/1b5c4a27-599b-44d0-8a06-72edc6765aa9)。</span><span class="sxs-lookup"><span data-stu-id="81bb8-108">About creating asynchronous HTTP handlers, see [Walkthrough: Creating an Asynchronous HTTP Handler](http://msdn.microsoft.com/library/1b5c4a27-599b-44d0-8a06-72edc6765aa9).</span></span>  
  
-   <span data-ttu-id="81bb8-109">有關註冊 HTTP 處理常式，請參閱[如何： 註冊 HTTP 處理常式](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)。</span><span class="sxs-lookup"><span data-stu-id="81bb8-109">About registering HTTP handlers, see [How to: Register HTTP Handlers](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60).</span></span>  
  
 <span data-ttu-id="81bb8-110">可以從衍生類別<xref:System.Web.DefaultHttpHandler>類別，以提供自訂的要求處理。</span><span class="sxs-lookup"><span data-stu-id="81bb8-110">Classes can derive from the <xref:System.Web.DefaultHttpHandler> class to provide customized handling of requests.</span></span> <span data-ttu-id="81bb8-111">衍生自的非同步 HTTP 處理常式<xref:System.Web.DefaultHttpHandler>無法覆寫<xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>方法，以變更要求的處理方式。</span><span class="sxs-lookup"><span data-stu-id="81bb8-111">An asynchronous HTTP handler that is derived from the <xref:System.Web.DefaultHttpHandler> could override the <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> method to change how requests are processed.</span></span>  
  
 <span data-ttu-id="81bb8-112">A<xref:System.Web.DefaultHttpHandler>不會使用 ASP.NET 錯誤。</span><span class="sxs-lookup"><span data-stu-id="81bb8-112">A <xref:System.Web.DefaultHttpHandler> does not use ASP.NET errors.</span></span> <span data-ttu-id="81bb8-113">現有的內容時，使用 IIS 錯誤，或是還有專利 ISAPI 自訂錯誤機制會維持相同的運作。</span><span class="sxs-lookup"><span data-stu-id="81bb8-113">Existing content that uses IIS errors or a propriety ISAPI custom error mechanism would work unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81bb8-114">下列程式碼範例示範如何實作自訂的 HTTP 處理常式，藉由衍生自<xref:System.Web.DefaultHttpHandler>類別。</span><span class="sxs-lookup"><span data-stu-id="81bb8-114">The following code example demonstrates how to implement a customized HTTP handler by deriving from the <xref:System.Web.DefaultHttpHandler> class.</span></span>  
  
 [!code-csharp[System.Web.DefaultHttpHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DefaultHttpHandler/CS/source.cs#1)]
 [!code-vb[System.Web.DefaultHttpHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DefaultHttpHandler/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultHttpHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DefaultHttpHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81bb8-115">初始化 <see cref="T:System.Web.DefaultHttpHandler" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="81bb8-115">Initializes a new instance of the <see cref="T:System.Web.DefaultHttpHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginProcessRequest">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginProcessRequest (context As HttpContext, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="81bb8-116">提供對內建伺服器物件 (用於服務 HTTP 要求) 參考的物件。</span><span class="sxs-lookup"><span data-stu-id="81bb8-116">An object that provides references to intrinsic server objects that are used to service HTTP requests.</span></span></param>
        <param name="callback"><span data-ttu-id="81bb8-117">要在非同步方法呼叫完成時呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="81bb8-117">The method to call when the asynchronous method call is complete.</span></span> <span data-ttu-id="81bb8-118">如果 <c>callback</c> 為 <see langword="null" />，則不呼叫委派。</span><span class="sxs-lookup"><span data-stu-id="81bb8-118">If <c>callback</c> is <see langword="null" />, the delegate is not called.</span></span></param>
        <param name="state"><span data-ttu-id="81bb8-119">處理要求時所需的任何狀態資料。</span><span class="sxs-lookup"><span data-stu-id="81bb8-119">Any state data that is needed to process the request.</span></span></param>
        <summary><span data-ttu-id="81bb8-120">啟始對 HTTP 處理常式的非同步呼叫 (Asynchronous Call)。</span><span class="sxs-lookup"><span data-stu-id="81bb8-120">Initiates an asynchronous call to the HTTP handler.</span></span></summary>
        <returns><span data-ttu-id="81bb8-121"><see cref="T:System.IAsyncResult" />，包含處理序狀態的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="81bb8-121">An <see cref="T:System.IAsyncResult" /> that contains information about the status of the process.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bb8-122">當建立非同步使用的 HTTP 處理常式，您的處理常式必須實作非同步<xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>和<xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>由 ASP.NET 以非同步方式呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="81bb8-122">When creating an HTTP handler for asynchronous use, your handler must implement the asynchronous <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A> and <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> methods that are called asynchronously by ASP.NET.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="81bb8-123">處理要求的先決條件失敗，並且所要求的檔案有副檔名 .asp 或要求透過 POST 傳送。</span><span class="sxs-lookup"><span data-stu-id="81bb8-123">The preconditions for processing a request fail and either the requested file has the suffix .asp or the request was sent through POST.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected System.Web.HttpContext Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.Context" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Context As HttpContext" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81bb8-124">取得與目前 <see cref="T:System.Web.DefaultHttpHandler" /> 物件關聯的內容。</span><span class="sxs-lookup"><span data-stu-id="81bb8-124">Gets the context that is associated with the current <see cref="T:System.Web.DefaultHttpHandler" /> object.</span></span></summary>
        <value><span data-ttu-id="81bb8-125">包含目前內容的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="81bb8-125">An <see cref="T:System.Web.HttpContext" /> object that contains the current context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bb8-126"><xref:System.Web.DefaultHttpHandler.Context%2A>屬性可提供存取目前<xref:System.Web.HttpContext>衍生類別的物件。</span><span class="sxs-lookup"><span data-stu-id="81bb8-126">The <xref:System.Web.DefaultHttpHandler.Context%2A> property provides access to the current <xref:System.Web.HttpContext> object for derived classes.</span></span> <span data-ttu-id="81bb8-127"><xref:System.Web.HttpContext>物件可存取此內建<xref:System.Web.HttpApplication.Request%2A>， <xref:System.Web.HttpApplication.Response%2A>，和<xref:System.Web.HttpApplication.Server%2A>要求屬性。</span><span class="sxs-lookup"><span data-stu-id="81bb8-127">An <xref:System.Web.HttpContext> object provides access to the intrinsic <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, and <xref:System.Web.HttpApplication.Server%2A> properties for the request.</span></span> <span data-ttu-id="81bb8-128">如需存取內容資訊的詳細資訊，請參閱<xref:System.Web.HttpContext>。</span><span class="sxs-lookup"><span data-stu-id="81bb8-128">For more information about accessing contextual information, see <xref:System.Web.HttpContext>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="EndProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void EndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndProcessRequest (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndProcessRequest(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="81bb8-129">包含處理序狀態相關資訊的物件。</span><span class="sxs-lookup"><span data-stu-id="81bb8-129">An object that contains information about the status of the process.</span></span></param>
        <summary><span data-ttu-id="81bb8-130">提供非同步處理序的結束方法。</span><span class="sxs-lookup"><span data-stu-id="81bb8-130">Provides an end method for an asynchronous process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bb8-131">您可以使用<xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>方法會擲回任何會攔截在非同步處理序期間的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="81bb8-131">You can use the <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A> method to throw any exceptions that are caught during the asynchronous process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteUrlHeaders">
      <MemberSignature Language="C#" Value="protected System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.ExecuteUrlHeaders" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ExecuteUrlHeaders As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Specialized::NameValueCollection ^ ExecuteUrlHeaders { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81bb8-132">取得隨要求傳輸之要求標頭和要求值的集合。</span><span class="sxs-lookup"><span data-stu-id="81bb8-132">Gets a collection of request headers and request values to transfer along with the request.</span></span></summary>
        <value><span data-ttu-id="81bb8-133">包含要求標頭和值的 <see cref="T:System.Collections.Specialized.NameValueCollection" />。</span><span class="sxs-lookup"><span data-stu-id="81bb8-133">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing request headers and values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bb8-134"><xref:System.Web.DefaultHttpHandler.ExecuteUrlHeaders%2A>屬性會傳回空集合，除非它衍生自的類別中填入<xref:System.Web.DefaultHttpHandler>類別。</span><span class="sxs-lookup"><span data-stu-id="81bb8-134">The <xref:System.Web.DefaultHttpHandler.ExecuteUrlHeaders%2A> property returns an empty collection unless it is populated in a class that is derived from the <xref:System.Web.DefaultHttpHandler> class.</span></span> <span data-ttu-id="81bb8-135">新增的標頭會附加至要求中的標頭的集合，再將要求傳遞回至網際網路資訊服務 (IIS)。</span><span class="sxs-lookup"><span data-stu-id="81bb8-135">The headers that are added are appended to the collection of headers in the request before passing the request back to Internet Information Services (IIS).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="public virtual bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DefaultHttpHandler.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReusable { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="81bb8-136">取得布林值，指出其他要求是否可以使用 <see cref="T:System.Web.DefaultHttpHandler" /> 類別目前的執行個體。</span><span class="sxs-lookup"><span data-stu-id="81bb8-136">Gets a Boolean value indicating that another request can use the current instance of the <see cref="T:System.Web.DefaultHttpHandler" /> class.</span></span></summary>
        <value>
          <span data-ttu-id="81bb8-137">如果 <see cref="T:System.Web.DefaultHttpHandler" /> 可以重複使用，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="81bb8-137"><see langword="true" /> if the <see cref="T:System.Web.DefaultHttpHandler" /> is reusable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bb8-138">若要明確地設定<xref:System.Web.DefaultHttpHandler.IsReusable%2A>屬性`true`或`false`，覆寫<xref:System.Web.DefaultHttpHandler.IsReusable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="81bb8-138">To explicitly set the <xref:System.Web.DefaultHttpHandler.IsReusable%2A> property to `true` or `false`, override the <xref:System.Web.DefaultHttpHandler.IsReusable%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
    <Member MemberName="OnExecuteUrlPreconditionFailure">
      <MemberSignature Language="C#" Value="public virtual void OnExecuteUrlPreconditionFailure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnExecuteUrlPreconditionFailure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnExecuteUrlPreconditionFailure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnExecuteUrlPreconditionFailure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81bb8-139">當先決條件防止 <see cref="T:System.Web.DefaultHttpHandler" /> 物件處理要求時呼叫。</span><span class="sxs-lookup"><span data-stu-id="81bb8-139">Called when preconditions prevent the <see cref="T:System.Web.DefaultHttpHandler" /> object from processing a request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bb8-140">前置條件所指定的要求標頭欄位中的用戶端，且會在 Web 伺服器上進行評估。</span><span class="sxs-lookup"><span data-stu-id="81bb8-140">Preconditions are specified by the client in the request-header fields and are evaluated on the Web server.</span></span> <span data-ttu-id="81bb8-141">例如，藉由使用前置條件，用戶端可以防止要求的方法 （例如，GET） 套用至資源所需的一個以外的資源。</span><span class="sxs-lookup"><span data-stu-id="81bb8-141">For example, by using preconditions, clients can prevent a requested method (for example, GET) from being applied to a resource other than the one intended.</span></span> <span data-ttu-id="81bb8-142">如需詳細資訊，請參閱 < 14 中，「 標頭欄位定義 」 區段中[超文字傳輸通訊協定-HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) World Wide Web Consortium (W3C) 網站上的規格。</span><span class="sxs-lookup"><span data-stu-id="81bb8-142">For more information, see section 14, "Header Field Definitions," in the [Hypertext Transfer Protocol -- HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) specification on the World Wide Web Consortium (W3C) Web site.</span></span>  
  
 <span data-ttu-id="81bb8-143"><xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A>呼叫方法時，防止先決條件<xref:System.Web.DefaultHttpHandler>無法處理要求的物件。</span><span class="sxs-lookup"><span data-stu-id="81bb8-143">The <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method is called when preconditions prevent the <xref:System.Web.DefaultHttpHandler> object from processing a request.</span></span> <span data-ttu-id="81bb8-144">衍生的類別可能會覆寫<xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A>前置條件失敗時所擲回例外狀況的方法。</span><span class="sxs-lookup"><span data-stu-id="81bb8-144">A deriving class might override the <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method to throw an exception when the preconditions fail.</span></span> <span data-ttu-id="81bb8-145"><xref:System.Web.DefaultHttpHandler>不會擲回例外狀況<xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="81bb8-145">The <xref:System.Web.DefaultHttpHandler> does not throw an exception in the <xref:System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure%2A> method.</span></span>  
  
 <span data-ttu-id="81bb8-146">下列其中一項會導致失敗的先決條件：</span><span class="sxs-lookup"><span data-stu-id="81bb8-146">Any of the following will cause the preconditions to fail:</span></span>  
  
-   <span data-ttu-id="81bb8-147">呼叫 <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="81bb8-147">Calling <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="81bb8-148">呼叫 <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="81bb8-148">Calling <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="81bb8-149">呼叫 <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="81bb8-149">Calling <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="81bb8-150">變更回應的快取原則。</span><span class="sxs-lookup"><span data-stu-id="81bb8-150">Changing the cache policy for the response.</span></span>  
  
-   <span data-ttu-id="81bb8-151">加入<xref:System.IO.Stream>當做篩選，將物件<xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="81bb8-151">Adding a <xref:System.IO.Stream> object as a filter to the <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideExecuteUrlPath">
      <MemberSignature Language="C#" Value="public virtual string OverrideExecuteUrlPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string OverrideExecuteUrlPath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OverrideExecuteUrlPath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ OverrideExecuteUrlPath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="81bb8-152">覆寫目前要求的目標 URL。</span><span class="sxs-lookup"><span data-stu-id="81bb8-152">Overrides the target URL for the current request.</span></span></summary>
        <returns><span data-ttu-id="81bb8-153">用於要求中的覆寫 URL，如果未提供覆寫 URL，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="81bb8-153">The overridden URL to use in the request; or <see langword="null" /> if an overridden URL is not provided.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bb8-154"><xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A>方法會傳回`null`除非衍生自的類別中覆寫<xref:System.Web.DefaultHttpHandler>類別。</span><span class="sxs-lookup"><span data-stu-id="81bb8-154">The <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> method returns `null` unless it is overridden in a class that is derived from the <xref:System.Web.DefaultHttpHandler> class.</span></span>  
  
 <span data-ttu-id="81bb8-155"><xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A>僅如果 ASP.NET 在 IIS 6.0 上執行背景工作處理序隔離模式中，而且 à ³ ¤ £ 修改之前，會呼叫方法<xref:System.Web.DefaultHttpHandler>呼叫物件。</span><span class="sxs-lookup"><span data-stu-id="81bb8-155">The <xref:System.Web.DefaultHttpHandler.OverrideExecuteUrlPath%2A> method is called only if ASP.NET is running in worker process isolation mode on IIS 6.0, and if the response was not modified before the <xref:System.Web.DefaultHttpHandler> object was called.</span></span> <span data-ttu-id="81bb8-156">回應會修改下列任何一項：</span><span class="sxs-lookup"><span data-stu-id="81bb8-156">The response is modified by any of the following:</span></span>  
  
-   <span data-ttu-id="81bb8-157">呼叫 <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="81bb8-157">Calling <xref:System.Web.HttpResponse.Write%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="81bb8-158">呼叫 <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="81bb8-158">Calling <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="81bb8-159">呼叫 <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="81bb8-159">Calling <xref:System.Web.HttpResponse.Flush%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="81bb8-160">變更回應的快取原則。</span><span class="sxs-lookup"><span data-stu-id="81bb8-160">Changing the cache policy for the response.</span></span>  
  
-   <span data-ttu-id="81bb8-161">加入<xref:System.IO.Stream>當做篩選，將物件<xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="81bb8-161">Adding a <xref:System.IO.Stream> object as a filter to the <xref:System.Web.HttpResponse.Filter%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="81bb8-162">提供對內建伺服器物件 (用於服務 HTTP 要求) 參考的物件。</span><span class="sxs-lookup"><span data-stu-id="81bb8-162">An object that provides references to intrinsic server objects used to service HTTP requests.</span></span></param>
        <summary><span data-ttu-id="81bb8-163">讓 <see cref="T:System.Web.DefaultHttpHandler" /> 物件可以處理 HTTP Web 要求。</span><span class="sxs-lookup"><span data-stu-id="81bb8-163">Enables a <see cref="T:System.Web.DefaultHttpHandler" /> object to process of HTTP Web requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bb8-164"><xref:System.Web.DefaultHttpHandler.ProcessRequest%2A>應該不以同步方式呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="81bb8-164">The <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> method should not be called synchronously.</span></span> <span data-ttu-id="81bb8-165">類別衍生自<xref:System.Web.DefaultHttpHandler>類別可以覆寫<xref:System.Web.DefaultHttpHandler.ProcessRequest%2A>來提供自訂的要求處理。</span><span class="sxs-lookup"><span data-stu-id="81bb8-165">Classes that are derived from the <xref:System.Web.DefaultHttpHandler> class can override the <xref:System.Web.DefaultHttpHandler.ProcessRequest%2A> to provide customized request processing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="81bb8-166">同步呼叫 <see cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" />。</span><span class="sxs-lookup"><span data-stu-id="81bb8-166">The <see cref="M:System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)" /> is called synchronously.</span></span></exception>
        <altmember cref="M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
  </Members>
</Type>