<Type Name="HttpApplicationStateBase" FullName="System.Web.HttpApplicationStateBase">
  <TypeSignature Language="C#" Value="public abstract class HttpApplicationStateBase : System.Collections.Specialized.NameObjectCollectionBase, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpApplicationStateBase extends System.Collections.Specialized.NameObjectCollectionBase implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpApplicationStateBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpApplicationStateBase&#xA;Inherits NameObjectCollectionBase&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpApplicationStateBase abstract : System::Collections::Specialized::NameObjectCollectionBase, System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="13ad6-101">用做類別的基底類別，這些類別可在 ASP.NET 應用程式中，跨多個工作階段和要求共用資訊。</span><span class="sxs-lookup"><span data-stu-id="13ad6-101">Serves as the base class for classes that enable information to be shared across multiple sessions and requests within an ASP.NET application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad6-102"><xref:System.Web.HttpApplicationStateBase>類別是抽象類別，其中包含相同的成員<xref:System.Web.HttpApplicationState>類別。</span><span class="sxs-lookup"><span data-stu-id="13ad6-102">The <xref:System.Web.HttpApplicationStateBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpApplicationState> class.</span></span> <span data-ttu-id="13ad6-103"><xref:System.Web.HttpApplicationStateBase>類別可讓您建立衍生的類別，它就像是<xref:System.Web.HttpApplicationState>類別，但您可以自訂，且該工作外的 ASP.NET 管線。</span><span class="sxs-lookup"><span data-stu-id="13ad6-103">The <xref:System.Web.HttpApplicationStateBase> class lets you create derived classes that are like the <xref:System.Web.HttpApplicationState> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="13ad6-104">當您執行單元測試時，您通常會使用衍生的類別來實作自訂行為符合您要測試的案例中的成員。</span><span class="sxs-lookup"><span data-stu-id="13ad6-104">When you perform unit testing, you typically use a derived class to implement members with customized behavior that fulfills the scenario you are testing.</span></span>  
  
 <span data-ttu-id="13ad6-105"><xref:System.Web.HttpApplicationStateWrapper> 類別衍生自 <xref:System.Web.HttpApplicationStateBase> 類別。</span><span class="sxs-lookup"><span data-stu-id="13ad6-105">The <xref:System.Web.HttpApplicationStateWrapper> class derives from the <xref:System.Web.HttpApplicationStateBase> class.</span></span> <span data-ttu-id="13ad6-106"><xref:System.Web.HttpApplicationStateWrapper>類別可做為包裝函式<xref:System.Web.HttpApplicationState>類別。</span><span class="sxs-lookup"><span data-stu-id="13ad6-106">The <xref:System.Web.HttpApplicationStateWrapper> class serves as a wrapper for the <xref:System.Web.HttpApplicationState> class.</span></span> <span data-ttu-id="13ad6-107">在執行階段，您通常使用的執行個體<xref:System.Web.HttpApplicationStateWrapper>類別來呼叫的成員<xref:System.Web.HttpApplicationState>物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-107">At run time, you typically use an instance of the <xref:System.Web.HttpApplicationStateWrapper> class to call members of the <xref:System.Web.HttpApplicationState> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpApplicationStateBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpApplicationStateBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13ad6-108">初始化這個類別，以供繼承的類別執行個體使用。</span><span class="sxs-lookup"><span data-stu-id="13ad6-108">Initializes the class for use by an inherited class instance.</span></span> <span data-ttu-id="13ad6-109">這個建構函式只能由繼承的類別呼叫。</span><span class="sxs-lookup"><span data-stu-id="13ad6-109">This constructor can only be called by an inherited class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="13ad6-110">要加入集合中的物件名稱。</span><span class="sxs-lookup"><span data-stu-id="13ad6-110">The name of the object to add to the collection.</span></span></param>
        <param name="value"><span data-ttu-id="13ad6-111">物件的值。</span><span class="sxs-lookup"><span data-stu-id="13ad6-111">The value of the object.</span></span></param>
        <summary><span data-ttu-id="13ad6-112">在衍生類別中覆寫時，將新物件加入集合中。</span><span class="sxs-lookup"><span data-stu-id="13ad6-112">When overridden in a derived class, adds a new object to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-113">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-113">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public virtual string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.AllKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllKeys As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ AllKeys { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13ad6-114">在衍生類別中覆寫時，取得集合中物件的便捷鍵。</span><span class="sxs-lookup"><span data-stu-id="13ad6-114">When overridden in a derived class, gets the access keys for the objects in the collection.</span></span></summary>
        <value><span data-ttu-id="13ad6-115">狀態物件索引鍵陣列。</span><span class="sxs-lookup"><span data-stu-id="13ad6-115">An array of state object keys.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-116">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-116">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13ad6-117">在衍生類別中覆寫時，移除集合中的所有物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-117">When overridden in a derived class, removes all objects from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-118">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-118">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplicationStateBase Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationStateBase Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Contents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Contents As HttpApplicationStateBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplicationStateBase ^ Contents { System::Web::HttpApplicationStateBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13ad6-119">在衍生類別中覆寫時，取得 <see cref="T:System.Web.HttpApplicationStateBase" /> 物件的參考。</span><span class="sxs-lookup"><span data-stu-id="13ad6-119">When overridden in a derived class, gets a reference to the <see cref="T:System.Web.HttpApplicationStateBase" /> object.</span></span></summary>
        <value><span data-ttu-id="13ad6-120"><see cref="T:System.Web.HttpApplicationState" /> 物件的參考。</span><span class="sxs-lookup"><span data-stu-id="13ad6-120">A reference to the <see cref="T:System.Web.HttpApplicationState" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad6-121">這個屬性會提供與 ASP 的舊版本相容性。</span><span class="sxs-lookup"><span data-stu-id="13ad6-121">This property provides compatibility with earlier versions of ASP.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-122">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-122">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="13ad6-123">從集合複製項目之目的端一維陣列。</span><span class="sxs-lookup"><span data-stu-id="13ad6-123">The one-dimensional array that is the destination for the elements that are copied from the collection.</span></span> <span data-ttu-id="13ad6-124">陣列必須有以零為起始的索引。</span><span class="sxs-lookup"><span data-stu-id="13ad6-124">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="13ad6-125">「陣列」<c></c>中以零為起始的索引，即要開始複製的位置。</span><span class="sxs-lookup"><span data-stu-id="13ad6-125">The zero-based index in <c>array</c> at which to begin copying.</span></span></param>
        <summary><span data-ttu-id="13ad6-126">在衍生類別中覆寫時，從陣列中指定的索引處開始，將集合的項目複製到陣列。</span><span class="sxs-lookup"><span data-stu-id="13ad6-126">When overridden in a derived class, copies the elements of the collection to an array, starting at the specified index in the array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-127">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-127">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13ad6-128">在衍生類別中覆寫時，取得集合中的物件數。</span><span class="sxs-lookup"><span data-stu-id="13ad6-128">When overridden in a derived class, gets the number of objects in the collection.</span></span></summary>
        <value><span data-ttu-id="13ad6-129">集合中的物件數目。</span><span class="sxs-lookup"><span data-stu-id="13ad6-129">The number of objects in the collection.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-130">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-130">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13ad6-131">在衍生類別中覆寫時，依名稱或索引取得狀態物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-131">When overridden in a derived class, gets a state object by name or index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual object Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Get(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="13ad6-132">要取得之應用程式狀態物件的索引。</span><span class="sxs-lookup"><span data-stu-id="13ad6-132">The index of the application state object to get.</span></span></param>
        <summary><span data-ttu-id="13ad6-133">在衍生類別中覆寫時，依索引取得狀態物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-133">When overridden in a derived class, gets a state object by index.</span></span></summary>
        <returns><span data-ttu-id="13ad6-134"><paramref name="index" /> 參考的物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-134">The object referenced by <paramref name="index" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-135">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-135">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual object Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Get(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="13ad6-136">要取得的物件名稱。</span><span class="sxs-lookup"><span data-stu-id="13ad6-136">The name of the object to get.</span></span></param>
        <summary><span data-ttu-id="13ad6-137">在衍生類別中覆寫時，依名稱取得狀態物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-137">When overridden in a derived class, gets a state object by name.</span></span></summary>
        <returns><span data-ttu-id="13ad6-138"><paramref name="name" /> 參考的物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-138">The object referenced by <paramref name="name" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-139">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-139">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13ad6-140">在衍生類別中覆寫時，傳回可用來逐一查看集合的列舉程式。</span><span class="sxs-lookup"><span data-stu-id="13ad6-140">When overridden in a derived class, returns an enumerator that can be used to iterate through the collection.</span></span></summary>
        <returns><span data-ttu-id="13ad6-141">可用於逐一查看集合的物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-141">An object that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-142">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-142">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetKey(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="13ad6-143">要取得之應用程式狀態物件的索引。</span><span class="sxs-lookup"><span data-stu-id="13ad6-143">The index of the application state object to get.</span></span></param>
        <summary><span data-ttu-id="13ad6-144">在衍生類別中覆寫時，依索引取得狀態物件的名稱。</span><span class="sxs-lookup"><span data-stu-id="13ad6-144">When overridden in a derived class, gets the name of a state object by index.</span></span></summary>
        <returns><span data-ttu-id="13ad6-145">應用程式狀態物件的名稱。</span><span class="sxs-lookup"><span data-stu-id="13ad6-145">The name of the application state object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-146">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-146">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13ad6-147">在衍生類別中覆寫時取得值，指出對集合的存取是否為安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="13ad6-147">When overridden in a derived class, gets a value that indicates whether access to the collection is thread-safe.</span></span></summary>
        <value>
          <span data-ttu-id="13ad6-148">如果存取是同步的 (安全執行緒)，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="13ad6-148"><see langword="true" /> if access is synchronized (thread-safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-149">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-149">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="13ad6-150">在衍生類別中覆寫時，依名稱或索引取得 <see cref="T:System.Web.HttpApplicationState" /> 集合中的物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-150">When overridden in a derived class, gets an object in an <see cref="T:System.Web.HttpApplicationState" /> collection by name or index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="13ad6-151">集合中物件的索引。</span><span class="sxs-lookup"><span data-stu-id="13ad6-151">The index of the object in the collection.</span></span></param>
        <summary><span data-ttu-id="13ad6-152">在衍生類別中覆寫時，依索引取得狀態物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-152">When overridden in a derived class, gets a state object by index.</span></span></summary>
        <value><span data-ttu-id="13ad6-153"><paramref name="index" /> 參考的物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-153">The object referenced by <paramref name="index" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-154">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-154">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="13ad6-155">集合中的物件名稱。</span><span class="sxs-lookup"><span data-stu-id="13ad6-155">The name of the object in the collection.</span></span></param>
        <summary><span data-ttu-id="13ad6-156">在衍生類別中覆寫時，依名稱取得狀態物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-156">When overridden in a derived class, gets a state object by name.</span></span></summary>
        <value><span data-ttu-id="13ad6-157"><paramref name="name" /> 參考的物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-157">The object referenced by <paramref name="name" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-158">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-158">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public virtual void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13ad6-159">在衍生類別中覆寫時，鎖定集合中物件的存取權，以啟用同步存取。</span><span class="sxs-lookup"><span data-stu-id="13ad6-159">When overridden in a derived class, locks access to objects in the collection in order to enable synchronized access.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-160">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-160">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="13ad6-161">要從集合中移除的物件名稱。</span><span class="sxs-lookup"><span data-stu-id="13ad6-161">The name of the object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="13ad6-162">在衍生類別中覆寫時，從此集合中移除具名物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-162">When overridden in a derived class, removes the named object from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-163">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-163">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public virtual void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13ad6-164">在衍生類別中覆寫時，移除集合中的所有物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-164">When overridden in a derived class, removes all objects from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-165">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-165">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="13ad6-166">要移除項目在集合中的位置。</span><span class="sxs-lookup"><span data-stu-id="13ad6-166">The position in the collection of the item to remove.</span></span></param>
        <summary><span data-ttu-id="13ad6-167">在衍生類別中被覆寫時，從集合中移除索引指定的狀態物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-167">When overridden in a derived class, removes a state object specified by index from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-168">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-168">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Set(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Set (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Set(System::String ^ name, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="13ad6-169">要更新的物件名稱。</span><span class="sxs-lookup"><span data-stu-id="13ad6-169">The name of the object to update.</span></span></param>
        <param name="value"><span data-ttu-id="13ad6-170">物件的更新值。</span><span class="sxs-lookup"><span data-stu-id="13ad6-170">The updated value of the object.</span></span></param>
        <summary><span data-ttu-id="13ad6-171">在衍生類別中覆寫時，更新在集合中物件的值。</span><span class="sxs-lookup"><span data-stu-id="13ad6-171">When overridden in a derived class, updates the value of an object in the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-172">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-172">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpStaticObjectsCollectionBase StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollectionBase StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StaticObjects As HttpStaticObjectsCollectionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpStaticObjectsCollectionBase ^ StaticObjects { System::Web::HttpStaticObjectsCollectionBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollectionBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13ad6-173">在衍生類別中覆寫時，取得 <see langword="object" /> 項目所宣告的所有物件，在 ASP.NET 應用程式中其範圍設定為 "Application"。</span><span class="sxs-lookup"><span data-stu-id="13ad6-173">When overridden in a derived class, gets all objects that are declared by an <see langword="object" /> element where the scope is set to "Application" in the ASP.NET application.</span></span></summary>
        <value><span data-ttu-id="13ad6-174">應用程式中物件的集合。</span><span class="sxs-lookup"><span data-stu-id="13ad6-174">A collection of objects in the application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad6-175">應用程式物件定義於 Global.asax 檔案，如下所示的語法項目內：</span><span class="sxs-lookup"><span data-stu-id="13ad6-175">Application objects are defined in the Global.asax file inside an element with syntax like the following:</span></span>  
  
 `<object runat="server" scope="Application">Object information</object>`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-176">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-176">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="13ad6-177">在衍生類別中覆寫時，取得可用來同步存取集合的物件。</span><span class="sxs-lookup"><span data-stu-id="13ad6-177">When overridden in a derived class, gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="13ad6-178">Object，可用來對集合同步存取。</span><span class="sxs-lookup"><span data-stu-id="13ad6-178">An object that can be used to synchronize access to the collection.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-179">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-179">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnLock">
      <MemberSignature Language="C#" Value="public virtual void UnLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.UnLock" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnLock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnLock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="13ad6-180">在衍生類別中覆寫時，解除對集合中物件存取權的鎖定，以啟用同步存取。</span><span class="sxs-lookup"><span data-stu-id="13ad6-180">When overridden in a derived class, unlocks access to objects in the collection to enable synchronized access.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="13ad6-181">永遠。</span><span class="sxs-lookup"><span data-stu-id="13ad6-181">Always.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>