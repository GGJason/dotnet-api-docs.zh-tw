<Type Name="HttpTaskAsyncHandler" FullName="System.Web.HttpTaskAsyncHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f9b97f339a814a7533d7651c138aacd736c7128" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39938970" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpTaskAsyncHandler : System.Web.IHttpAsyncHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpTaskAsyncHandler extends System.Object implements class System.Web.IHttpAsyncHandler, class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpTaskAsyncHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpTaskAsyncHandler&#xA;Implements IHttpAsyncHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpTaskAsyncHandler abstract : System::Web::IHttpAsyncHandler" />
  <TypeSignature Language="F#" Value="type HttpTaskAsyncHandler = class&#xA;    interface IHttpAsyncHandler&#xA;    interface IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpAsyncHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="6691e-101">提供衍生工作處理常式類別可實作的方法，以便處理非同步工作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6691e-101">Provides methods that a derived task handler class can implement in order to process an asynchronous task.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6691e-102"><xref:System.Web.HttpTaskAsyncHandler>類別會提供一個簡化的方式來處理非同步工作，而不必實作<xref:System.Web.IHttpAsyncHandler.BeginProcessRequest%2A>和<xref:System.Web.IHttpAsyncHandler.EndProcessRequest%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6691e-102">The <xref:System.Web.HttpTaskAsyncHandler> class provides a simplified way to handle asynchronous tasks without having to implement the <xref:System.Web.IHttpAsyncHandler.BeginProcessRequest%2A> and <xref:System.Web.IHttpAsyncHandler.EndProcessRequest%2A> methods.</span></span>  <span data-ttu-id="6691e-103">若要建立非同步工作的處理常式，您可以覆寫<xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A>處理程式碼的方法，並實作自訂的工作。</span><span class="sxs-lookup"><span data-stu-id="6691e-103">To create a handler for an asynchronous task, you can override the <xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A> method and implement custom task handling code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpTaskAsyncHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpTaskAsyncHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpTaskAsyncHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6691e-104">從衍生類別中的建構函式呼叫，以將 <see cref="T:System.Web.HttpTaskAsyncHandler" /> 類別初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-104">Called from constructors in derived classes to initialize the <see cref="T:System.Web.HttpTaskAsyncHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="public virtual bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpTaskAsyncHandler.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReusable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReusable : bool" Usage="System.Web.HttpTaskAsyncHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6691e-105">在衍生類別中覆寫時，取得一個值，此值指出工作處理常式類別執行個體是否可以重複用於另一個非同步工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-105">When overridden in a derived class, gets a value that indicates whether the task handler class instance can be reused for another asynchronous task.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6691e-106">如果處理常式可以重複使用，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-106">
              <see langword="true" /> if the handler can be reused; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6691e-107">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-107">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public virtual void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpTaskAsyncHandler.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : System.Web.HttpContext -&gt; unit&#xA;override this.ProcessRequest : System.Web.HttpContext -&gt; unit" Usage="httpTaskAsyncHandler.ProcessRequest context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="6691e-108">HTTP 內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-108">The HTTP context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6691e-109">在衍生類別中覆寫時，提供處理同步工作的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-109">When overridden in a derived class, provides code that handles a synchronous task.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="6691e-110">此方法已實作，但不提供同步工作的任何預設處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-110">The method is implemented but does not provide any default handling for synchronous tasks.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequestAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task ProcessRequestAsync (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ProcessRequestAsync(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ProcessRequestAsync (context As HttpContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task ^ ProcessRequestAsync(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequestAsync : System.Web.HttpContext -&gt; System.Threading.Tasks.Task" Usage="httpTaskAsyncHandler.ProcessRequestAsync context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="6691e-111">HTTP 內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-111">The HTTP context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6691e-112">在衍生類別中覆寫時，提供處理非同步工作的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-112">When overridden in a derived class, provides code that handles an asynchronous task.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6691e-113">非同步工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-113">The asynchronous task.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6691e-114">若要建立非同步工作的自訂處理常式，覆寫<xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6691e-114">To create a custom handler for an asynchronous task, override the <xref:System.Web.HttpTaskAsyncHandler.ProcessRequestAsync%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpAsyncHandler.BeginProcessRequest">
      <MemberSignature Language="C#" Value="IAsyncResult IHttpAsyncHandler.BeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.IAsyncResult System.Web.IHttpAsyncHandler.BeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback cb, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpTaskAsyncHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function BeginProcessRequest (context As HttpContext, cb As AsyncCallback, extraData As Object) As IAsyncResult Implements IHttpAsyncHandler.BeginProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual IAsyncResult ^ System.Web.IHttpAsyncHandler.BeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ cb, System::Object ^ extraData) = System::Web::IHttpAsyncHandler::BeginProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="cb" Type="System.AsyncCallback" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="6691e-115">HTTP 內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-115">The HTTP context.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="6691e-116">方法傳回時要叫用的回呼方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-116">The callback method to invoke when the method returns.</span>
          </span>
        </param>
        <param name="extraData">
          <span data-ttu-id="6691e-117">用於處理工作的其他資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-117">Additional data for processing the task.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6691e-118">啟始非同步處理 HTTP 工作處理常式中的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-118">Initiates asynchronous processing of a task in an HTTP task handler.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6691e-119">包含非同步作業之狀態資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-119">An object that contains status data about the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6691e-120">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6691e-120">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6691e-121">只有在 <xref:System.Web.HttpTaskAsyncHandler> 執行個體轉換成 <xref:System.Web.IHttpAsyncHandler> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6691e-121">It can be used only when the <xref:System.Web.HttpTaskAsyncHandler> instance is cast to an <xref:System.Web.IHttpAsyncHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpAsyncHandler.EndProcessRequest">
      <MemberSignature Language="C#" Value="void IHttpAsyncHandler.EndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpAsyncHandler.EndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpTaskAsyncHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Sub EndProcessRequest (result As IAsyncResult) Implements IHttpAsyncHandler.EndProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult ^ result) = System::Web::IHttpAsyncHandler::EndProcessRequest;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="6691e-122">非同步作業的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-122">The status of the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6691e-123">結束非同步處理 HTTP 工作處理常式中的工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6691e-123">Ends asynchronous processing of a task in an HTTP task handler.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6691e-124">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="6691e-124">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="6691e-125">只有在 <xref:System.Web.HttpTaskAsyncHandler> 執行個體轉換成 <xref:System.Web.IHttpAsyncHandler> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="6691e-125">It can be used only when the <xref:System.Web.HttpTaskAsyncHandler> instance is cast to an <xref:System.Web.IHttpAsyncHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>