<Type Name="EventHandlerTaskAsyncHelper" FullName="System.Web.EventHandlerTaskAsyncHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38de994921eae4fc9b99c34bc35cb2bf431d1e46" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36574747" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventHandlerTaskAsyncHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventHandlerTaskAsyncHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.EventHandlerTaskAsyncHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventHandlerTaskAsyncHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventHandlerTaskAsyncHelper sealed" />
  <TypeSignature Language="F#" Value="type EventHandlerTaskAsyncHelper = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>將傳回工作的非同步方法轉換成使用舊版 ASP.NET 中所用且以開始及結束事件為基礎之非同步程式設計模型的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要處理 ASP.NET 4.5 中的非同步工作，您會實作邏輯以傳回做為工作<xref:System.Web.TaskEventHandler>委派。 以工作為基礎的非同步程式設計此模型會取代舊版 ASP.NET 中，所有的事件上處理開始及結束事件的基底中使用的模型。 實作後<xref:System.Web.TaskEventHandler>委派，您可以再將它傳遞給<xref:System.Web.EventHandlerTaskAsyncHelper.%23ctor%2A>建構函式包裝的工作傳回的邏輯，並將模型會使用開始和結束事件處理常式。 <xref:System.Web.EventHandlerTaskAsyncHelper>類別可讓您<xref:System.Web.TaskEventHandler>為與 ASP.NET 網頁架構相容的物件。 當您呼叫<xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A>程序的工作為非同步頁面的方法，您可以使用<xref:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler%2A>和<xref:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler%2A>屬性，以傳遞至方法的已轉換的 begin 和事件處理常式。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventHandlerTaskAsyncHelper (System.Web.TaskEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.TaskEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.EventHandlerTaskAsyncHelper.#ctor(System.Web.TaskEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As TaskEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventHandlerTaskAsyncHelper(System::Web::TaskEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.EventHandlerTaskAsyncHelper : System.Web.TaskEventHandler -&gt; System.Web.EventHandlerTaskAsyncHelper" Usage="new System.Web.EventHandlerTaskAsyncHelper handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.TaskEventHandler" />
      </Parameters>
      <Docs>
        <param name="handler">非同步工作。</param>
        <summary>初始化 <see cref="T:System.Web.EventHandlerTaskAsyncHelper" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEventHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginEventHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginEventHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginEventHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginEventHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginEventHandler : System.Web.BeginEventHandler" Usage="System.Web.EventHandlerTaskAsyncHelper.BeginEventHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示非同步工作的 <see cref="T:System.Web.BeginEventHandler" /> 方法。</summary>
        <value>處理非同步工作的開始事件的方法。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndEventHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndEventHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndEventHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.EventHandlerTaskAsyncHelper.EndEventHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndEventHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndEventHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndEventHandler : System.Web.EndEventHandler" Usage="System.Web.EventHandlerTaskAsyncHelper.EndEventHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示非同步工作的 <see cref="T:System.Web.EndEventHandler" /> 方法。</summary>
        <value>處理非同步工作的結束事件的方法。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>