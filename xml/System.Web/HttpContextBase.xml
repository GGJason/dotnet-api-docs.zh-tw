<Type Name="HttpContextBase" FullName="System.Web.HttpContextBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67d6f885999642d5d333db4a057d877c878a42d9" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52251164" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpContextBase : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpContextBase extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpContextBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpContextBase&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpContextBase abstract : IServiceProvider" />
  <TypeSignature Language="F#" Value="type HttpContextBase = class&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Abstractions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9c0d2-101">作為包含個別 HTTP 要求之 HTTP 特定資訊之類別的基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9c0d2-101">Serves as the base class for classes that contain HTTP-specific information about an individual HTTP request.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0d2-102"><xref:System.Web.HttpContextBase>類別是抽象類別，其中包含相同的成員<xref:System.Web.HttpContext>類別。</span><span class="sxs-lookup"><span data-stu-id="9c0d2-102">The <xref:System.Web.HttpContextBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpContext> class.</span></span> <span data-ttu-id="9c0d2-103"><xref:System.Web.HttpContextBase>類別可讓您建立衍生的類別，它就像是<xref:System.Web.HttpContext>類別，但您可以自訂，而且 ASP.NET 管線外運作。</span><span class="sxs-lookup"><span data-stu-id="9c0d2-103">The <xref:System.Web.HttpContextBase> class enables you to create derived classes that are like the <xref:System.Web.HttpContext> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="9c0d2-104">當您執行單元測試時，通常會使用衍生的類別來實作自訂行為符合您要測試的案例使用的成員。</span><span class="sxs-lookup"><span data-stu-id="9c0d2-104">When you perform unit testing, you typically use a derived class to implement members with customized behavior that fulfills the scenario you are testing.</span></span>  
  
 <span data-ttu-id="9c0d2-105"><xref:System.Web.HttpContextWrapper> 類別衍生自 <xref:System.Web.HttpContextBase> 類別。</span><span class="sxs-lookup"><span data-stu-id="9c0d2-105">The <xref:System.Web.HttpContextWrapper> class derives from the <xref:System.Web.HttpContextBase> class.</span></span> <span data-ttu-id="9c0d2-106"><xref:System.Web.HttpContextWrapper>類別可做為包裝函式<xref:System.Web.HttpContext>類別。</span><span class="sxs-lookup"><span data-stu-id="9c0d2-106">The <xref:System.Web.HttpContextWrapper> class serves as a wrapper for the <xref:System.Web.HttpContext> class.</span></span> <span data-ttu-id="9c0d2-107">在執行階段，因此您通常使用的執行個體<xref:System.Web.HttpContextWrapper>類別上呼叫成員<xref:System.Web.HttpContext>物件。</span><span class="sxs-lookup"><span data-stu-id="9c0d2-107">At run time, you typically use an instance of the <xref:System.Web.HttpContextWrapper> class to call members on the <xref:System.Web.HttpContext> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpContextBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpContextBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-108">初始化這個類別，以供繼承的類別執行個體使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-108">Initializes the class for use by an inherited class instance.</span>
          </span>
          <span data-ttu-id="9c0d2-109">這個建構函式只能由繼承的類別呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-109">This constructor can only be called by an inherited class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AcceptWebSocketRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-110">在衍生類別中實作時，接受 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-110">When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc);" />
      <MemberSignature Language="F#" Value="abstract member AcceptWebSocketRequest : Func&lt;System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task&gt; -&gt; unit&#xA;override this.AcceptWebSocketRequest : Func&lt;System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task&gt; -&gt; unit" Usage="httpContextBase.AcceptWebSocketRequest userFunc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="userFunc">
          <span data-ttu-id="9c0d2-111">使用者函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-111">The user function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-112">在衍生類別中實作時，使用指定的使用者函式來接受<see cref="T:System.Web.WebSockets.AspNetWebSocket" />要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-112">When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc, System.Web.WebSockets.AspNetWebSocketOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc, class System.Web.WebSockets.AspNetWebSocketOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task), options As AspNetWebSocketOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc, System::Web::WebSockets::AspNetWebSocketOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member AcceptWebSocketRequest : Func&lt;System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task&gt; * System.Web.WebSockets.AspNetWebSocketOptions -&gt; unit&#xA;override this.AcceptWebSocketRequest : Func&lt;System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task&gt; * System.Web.WebSockets.AspNetWebSocketOptions -&gt; unit" Usage="httpContextBase.AcceptWebSocketRequest (userFunc, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="options" Type="System.Web.WebSockets.AspNetWebSocketOptions" />
      </Parameters>
      <Docs>
        <param name="userFunc">
          <span data-ttu-id="9c0d2-113">使用者函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-113">The user function.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9c0d2-114">選項物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-114">The options object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-115">在衍生類別中實作時，使用指定的使用者函式和選項物件來接受<see cref="T:System.Web.WebSockets.AspNetWebSocket" />要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-115">When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function and options object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddError">
      <MemberSignature Language="C#" Value="public virtual void AddError (Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddError(class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AddError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddError (errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddError(Exception ^ errorInfo);" />
      <MemberSignature Language="F#" Value="abstract member AddError : Exception -&gt; unit&#xA;override this.AddError : Exception -&gt; unit" Usage="httpContextBase.AddError errorInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="errorInfo">
          <span data-ttu-id="9c0d2-116">要加入例外狀況集合中例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-116">The exception to add to the exception collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-117">在衍生類別中覆寫時，將例外狀況加入目前 HTTP 要求的例外狀況集合中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-117">When overridden in a derived class, adds an exception to the exception collection for the current HTTP request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-118">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-118">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddOnRequestCompleted">
      <MemberSignature Language="C#" Value="public virtual System.Web.ISubscriptionToken AddOnRequestCompleted (Action&lt;System.Web.HttpContextBase&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.ISubscriptionToken AddOnRequestCompleted(class System.Action`1&lt;class System.Web.HttpContextBase&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AddOnRequestCompleted(System.Action{System.Web.HttpContextBase})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddOnRequestCompleted (callback As Action(Of HttpContextBase)) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::ISubscriptionToken ^ AddOnRequestCompleted(Action&lt;System::Web::HttpContextBase ^&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member AddOnRequestCompleted : Action&lt;System.Web.HttpContextBase&gt; -&gt; System.Web.ISubscriptionToken&#xA;override this.AddOnRequestCompleted : Action&lt;System.Web.HttpContextBase&gt; -&gt; System.Web.ISubscriptionToken" Usage="httpContextBase.AddOnRequestCompleted callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContextBase&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="9c0d2-119">HTTP 內容物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-119">The HTTP context object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-120">在衍生類別中實作時，引發虛擬事件，該事件會在要求的 HTTP 部分結束時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-120">When implemented in a derived class, raises a virtual event that occurs when the HTTP part of the request is ending.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0d2-121">訂閱語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-121">The subscription token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0d2-122">這個事件發生之前<xref:System.Web.WebSockets.AspNetWebSocket>連接一開始。</span><span class="sxs-lookup"><span data-stu-id="9c0d2-122">This event occurs before the <xref:System.Web.WebSockets.AspNetWebSocket> connection begins.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllErrors">
      <MemberSignature Language="C#" Value="public virtual Exception[] AllErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception[] AllErrors" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AllErrors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllErrors As Exception()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Exception ^&gt; ^ AllErrors { cli::array &lt;Exception ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllErrors : Exception[]" Usage="System.Web.HttpContextBase.AllErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-123">在衍生類別中覆寫時，取得處理 HTTP 要求時累積的錯誤陣列 (如果有)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-123">When overridden in a derived class, gets an array of errors (if any) that accumulated when an HTTP request was being processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-124">目前 HTTP 要求的 <see cref="T:System.Exception" /> 物件陣列；如果在 HTTP 要求處理期間未累積任何錯誤，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-124">An array of <see cref="T:System.Exception" /> objects for the current HTTP request, or <see langword="null" /> if no errors accumulated during the HTTP request processing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-125">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-125">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllowAsyncDuringSyncStages">
      <MemberSignature Language="C#" Value="public virtual bool AllowAsyncDuringSyncStages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAsyncDuringSyncStages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AllowAsyncDuringSyncStages" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowAsyncDuringSyncStages As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowAsyncDuringSyncStages { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowAsyncDuringSyncStages : bool with get, set" Usage="System.Web.HttpContextBase.AllowAsyncDuringSyncStages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-126">在衍生類別中實作時，取得或設定值，這個值表示是否在 ASP.NET 要求處理期間不應出現的各部分過程中允許非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-126">When implemented in a derived class, gets or sets a value that indicates whether asynchronous operations are allowed during parts of ASP.NET request processing when they are not expected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-127">如果 ASP.NET 在未預期的情況下使用了非同步 API 而擲回例外狀況，則為 <see langword="false" />；否則為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-127">
              <see langword="false" /> if ASP.NET will throw an exception when the asynchronous API is used at a time when it is not expected; otherwise, <see langword="true" />.</span>
          </span>
          <span data-ttu-id="9c0d2-128">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-128">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0d2-129">如需詳細資訊，請參閱<xref:System.Web.HttpContext.AllowAsyncDuringSyncStages%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9c0d2-129">For more information, see <xref:System.Web.HttpContext.AllowAsyncDuringSyncStages%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplicationStateBase Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationStateBase Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Application" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Application As HttpApplicationStateBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplicationStateBase ^ Application { System::Web::HttpApplicationStateBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : System.Web.HttpApplicationStateBase" Usage="System.Web.HttpContextBase.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-130">在衍生類別中覆寫時，取得目前 HTTP 要求的 <see cref="T:System.Web.HttpApplicationState" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-130">When overridden in a derived class, gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-131">目前 HTTP 要求的應用程式狀態物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-131">The application state object for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-132">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-132">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationInstance">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplication ApplicationInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplication ApplicationInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.ApplicationInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplicationInstance As HttpApplication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplication ^ ApplicationInstance { System::Web::HttpApplication ^ get(); void set(System::Web::HttpApplication ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationInstance : System.Web.HttpApplication with get, set" Usage="System.Web.HttpContextBase.ApplicationInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-133">在衍生類別中覆寫時，取得或設定目前 HTTP 要求的 <see cref="T:System.Web.HttpApplication" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-133">When overridden in a derived class, gets or sets the <see cref="T:System.Web.HttpApplication" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-134">目前 HTTP 要求的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-134">The object for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-135">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-135">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AsyncPreloadMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AsyncPreloadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AsyncPreloadMode As AsyncPreloadModeFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Configuration::AsyncPreloadModeFlags AsyncPreloadMode { System::Web::Configuration::AsyncPreloadModeFlags get(); void set(System::Web::Configuration::AsyncPreloadModeFlags value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPreloadMode : System.Web.Configuration.AsyncPreloadModeFlags with get, set" Usage="System.Web.HttpContextBase.AsyncPreloadMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AsyncPreloadModeFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-136">在衍生類別中實作時，取得或設定物件，此物件包含有關非同步預先載入模式的旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-136">When implemented in a derived class, gets or sets an object that contains flags that pertain to asynchronous preload mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-137">包含有關非同步預先載入模式之旗標的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-137">An object that contains flags that pertain to asynchronous preload mode.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public virtual System.Web.Caching.Cache Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.Cache Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cache As Cache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cache : System.Web.Caching.Cache" Usage="System.Web.HttpContextBase.Cache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-138">在衍生類別中覆寫時，取得目前應用程式定義域的 <see cref="T:System.Web.Caching.Cache" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-138">When overridden in a derived class, gets the <see cref="T:System.Web.Caching.Cache" /> object for the current application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-139">目前應用程式定義域的快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-139">The cache for the current application domain.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-140">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-140">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public virtual void ClearError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.ClearError" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearError ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearError();" />
      <MemberSignature Language="F#" Value="abstract member ClearError : unit -&gt; unit&#xA;override this.ClearError : unit -&gt; unit" Usage="httpContextBase.ClearError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-141">在衍生類別中覆寫時，清除目前 HTTP 要求的所有錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-141">When overridden in a derived class, clears all errors for the current HTTP request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-142">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-142">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler CurrentHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler CurrentHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.CurrentHandler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentHandler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ CurrentHandler { System::Web::IHttpHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentHandler : System.Web.IHttpHandler" Usage="System.Web.HttpContextBase.CurrentHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-143">在衍生類別中覆寫時，取得 <see cref="T:System.Web.IHttpHandler" /> 物件，代表目前正在執行的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-143">When overridden in a derived class, gets the <see cref="T:System.Web.IHttpHandler" /> object that represents the handler that is currently executing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-144">物件，代表目前正在執行的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-144">An object that represents the currently executing handler.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-145">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-145">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentNotification">
      <MemberSignature Language="C#" Value="public virtual System.Web.RequestNotification CurrentNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.RequestNotification CurrentNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.CurrentNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentNotification As RequestNotification" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::RequestNotification CurrentNotification { System::Web::RequestNotification get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentNotification : System.Web.RequestNotification" Usage="System.Web.HttpContextBase.CurrentNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.RequestNotification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-146">在衍生類別中覆寫時，取得 <see cref="T:System.Web.RequestNotification" /> 值，指出目前正在處理的 <see cref="T:System.Web.HttpApplication" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-146">When overridden in a derived class, gets a <see cref="T:System.Web.RequestNotification" /> value that indicates the <see cref="T:System.Web.HttpApplication" /> event that is currently processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-147">其中一個 <see cref="T:System.Web.RequestNotification" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-147">One of the <see cref="T:System.Web.RequestNotification" /> values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-148">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-148">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DisposeOnPipelineCompleted">
      <MemberSignature Language="C#" Value="public virtual System.Web.ISubscriptionToken DisposeOnPipelineCompleted (IDisposable target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.ISubscriptionToken DisposeOnPipelineCompleted(class System.IDisposable target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.DisposeOnPipelineCompleted(System.IDisposable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisposeOnPipelineCompleted (target As IDisposable) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::ISubscriptionToken ^ DisposeOnPipelineCompleted(IDisposable ^ target);" />
      <MemberSignature Language="F#" Value="abstract member DisposeOnPipelineCompleted : IDisposable -&gt; System.Web.ISubscriptionToken&#xA;override this.DisposeOnPipelineCompleted : IDisposable -&gt; System.Web.ISubscriptionToken" Usage="httpContextBase.DisposeOnPipelineCompleted target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.IDisposable" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="9c0d2-149">當要求的 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 連接部分完成時，必須呼叫其 <see cref="M:System.IDisposable.Dispose" /> 方法的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-149">The object whose <see cref="M:System.IDisposable.Dispose" /> method must be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of the request is completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-150">在衍生類別中實作時，啟用物件的 <see cref="M:System.IDisposable.Dispose" /> 方法，在完成此要求的 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 連接部分時會呼叫此方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-150">When implemented in a derived class, enables an object's <see cref="M:System.IDisposable.Dispose" /> method to be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of this request is completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0d2-151">訂閱語彙基元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-151">The subscription token.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public virtual Exception Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Error" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Error" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Error As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Exception ^ Error { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Error : Exception" Usage="System.Web.HttpContextBase.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-152">在衍生類別中覆寫時，取得處理 HTTP 要求時累積的第一個錯誤 (如果有)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-152">When overridden in a derived class, gets the first error (if any) that accumulated when an HTTP request was being processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-153">目前 HTTP 要求/回應處理序的第一個例外狀況；如果在 HTTP 要求處理期間未累積任何錯誤，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-153">The first exception for the current HTTP request/response process, or <see langword="null" /> if no errors accumulated during the HTTP request processing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-154">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-154">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGlobalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-155">在衍生類別中覆寫時，取得應用程式層級資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-155">When overridden in a derived class, gets an application-level resource.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetGlobalResourceObject (string classKey, string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetGlobalResourceObject(string classKey, string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetGlobalResourceObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalResourceObject (classKey As String, resourceKey As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey);" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalResourceObject : string * string -&gt; obj&#xA;override this.GetGlobalResourceObject : string * string -&gt; obj" Usage="httpContextBase.GetGlobalResourceObject (classKey, resourceKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="classKey">
          <span data-ttu-id="9c0d2-156">字串，代表所要求之資源物件的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-156">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="9c0d2-157">字串，代表所要求之資源物件的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-157">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-158">在衍生類別中覆寫時，根據指定的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> 和 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 屬性，取得應用程式層級資源物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-158">When overridden in a derived class, gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0d2-159">所要求的應用程式層級資源物件；如果找不到相符的資源物件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-159">The requested application-level resource object, or <see langword="null" /> if no matching resource object is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-160">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-160">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetGlobalResourceObject (string classKey, string resourceKey, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetGlobalResourceObject(string classKey, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalResourceObject (classKey As String, resourceKey As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalResourceObject : string * string * System.Globalization.CultureInfo -&gt; obj&#xA;override this.GetGlobalResourceObject : string * string * System.Globalization.CultureInfo -&gt; obj" Usage="httpContextBase.GetGlobalResourceObject (classKey, resourceKey, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="classKey">
          <span data-ttu-id="9c0d2-161">字串，代表所要求之資源物件的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-161">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="9c0d2-162">字串，代表所要求之資源物件的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-162">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="9c0d2-163">字串，代表所要求之資源的 <see cref="T:System.Globalization.CultureInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-163">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-164">在衍生類別中覆寫時，根據指定的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> 和 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 屬性以及 <see cref="T:System.Globalization.CultureInfo" /> 物件，取得應用程式層級資源物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-164">When overridden in a derived class, gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0d2-165">所要求的應用程式層級資源物件 (已針對指定的文化特性當地語系化)；如果找到相符的資源物件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-165">The requested application-level resource object, which is localized for the specified culture, or <see langword="null" /> if no matching resource object is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-166">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-166">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-167">在衍生類別中覆寫時，取得頁面層級資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-167">When overridden in a derived class, gets a page-level resource.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetLocalResourceObject (string virtualPath, string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLocalResourceObject(string virtualPath, string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetLocalResourceObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalResourceObject (virtualPath As String, resourceKey As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey);" />
      <MemberSignature Language="F#" Value="abstract member GetLocalResourceObject : string * string -&gt; obj&#xA;override this.GetLocalResourceObject : string * string -&gt; obj" Usage="httpContextBase.GetLocalResourceObject (virtualPath, resourceKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="9c0d2-168">字串，代表本機資源物件的 <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-168">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="9c0d2-169">字串，代表所要求之資源物件的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-169">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-170">在衍生類別中覆寫時，根據指定的 <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> 和 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 屬性取得頁面層級資源物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-170">When overridden in a derived class, gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0d2-171">所要求的頁面層級資源物件；如果找不到相符的資源物件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-171">The requested page-level resource object, or <see langword="null" /> if no matching resource object is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-172">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-172">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetLocalResourceObject (string virtualPath, string resourceKey, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLocalResourceObject(string virtualPath, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalResourceObject (virtualPath As String, resourceKey As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetLocalResourceObject : string * string * System.Globalization.CultureInfo -&gt; obj&#xA;override this.GetLocalResourceObject : string * string * System.Globalization.CultureInfo -&gt; obj" Usage="httpContextBase.GetLocalResourceObject (virtualPath, resourceKey, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="9c0d2-173">字串，代表本機資源物件的 <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-173">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="9c0d2-174">字串，代表所要求之資源物件的 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-174">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="9c0d2-175">字串，代表所要求之資源物件的 <see cref="T:System.Globalization.CultureInfo" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-175">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-176">在衍生類別中覆寫時，根據指定的 <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> 和 <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> 屬性以及 <see cref="T:System.Globalization.CultureInfo" /> 物件，取得頁面層級資源物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-176">When overridden in a derived class, gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0d2-177">所要求的本機資源物件 (已針對指定的文化特性當地語系化)；如果找不到相符的資源物件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-177">The requested local resource object, which is localized for the specified culture, or <see langword="null" /> if no matching resource object is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-178">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-178">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public virtual object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="abstract member GetSection : string -&gt; obj&#xA;override this.GetSection : string -&gt; obj" Usage="httpContextBase.GetSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="9c0d2-179">組態區段路徑 (XPath 格式) 和組態項目名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-179">The configuration section path (in XPath format) and the configuration element name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-180">在衍生類別中被覆寫時，取得目前應用程式預設組態的指定組態區段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-180">When overridden in a derived class, gets the specified configuration section of the current application's default configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0d2-181">指定的區段，如果區段不存在，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-181">The specified section, or <see langword="null" /> if the section does not exist.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-182">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-182">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="httpContextBase.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="9c0d2-183">要取得之服務物件的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-183">The type of service object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-184">在衍生類別中覆寫時，會傳回目前服務類型的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-184">When overridden in a derived class, returns an object for the current service type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9c0d2-185">目前的服務類型，或者如果找不到任何服務，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-185">The current service type, or <see langword="null" /> if no service is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-186">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-186">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler Handler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Handler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Handler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ Handler { System::Web::IHttpHandler ^ get(); void set(System::Web::IHttpHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Handler : System.Web.IHttpHandler with get, set" Usage="System.Web.HttpContextBase.Handler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-187">在衍生類別中覆寫時，取得或設定負責處理 HTTP 要求的 <see cref="T:System.Web.IHttpHandler" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-187">When overridden in a derived class, gets or sets the <see cref="T:System.Web.IHttpHandler" /> object that is responsible for processing the HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-188">負責處理 HTTP 要求的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-188">The object that is responsible for processing the HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-189">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-189">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsCustomErrorEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsCustomErrorEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomErrorEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsCustomErrorEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCustomErrorEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCustomErrorEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomErrorEnabled : bool" Usage="System.Web.HttpContextBase.IsCustomErrorEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-190">在衍生類別中覆寫時，取得指出是否啟用目前 HTTP 要求之自訂錯誤的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-190">When overridden in a derived class, gets a value that indicates whether custom errors are enabled for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-191">如果啟用自訂錯誤，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-191">
              <see langword="true" /> if custom errors are enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-192">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-192">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDebuggingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsDebuggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebuggingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsDebuggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDebuggingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDebuggingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDebuggingEnabled : bool" Usage="System.Web.HttpContextBase.IsDebuggingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-193">在衍生類別中覆寫時，取得表示目前 HTTP 要求是否正在偵錯模式的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-193">When overridden in a derived class, gets a value that indicates whether the current HTTP request is in debug mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-194">如果要求處於偵錯模式，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-194">
              <see langword="true" /> if the request is in debug mode; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-195">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-195">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsPostNotification">
      <MemberSignature Language="C#" Value="public virtual bool IsPostNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsPostNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsPostNotification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPostNotification { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPostNotification : bool" Usage="System.Web.HttpContextBase.IsPostNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-196">在衍生類別中受到覆寫時，取得表示 <see cref="T:System.Web.HttpApplication" /> 事件是否處理完成的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-196">When overridden in a derived class, gets a value that indicates whether an <see cref="T:System.Web.HttpApplication" /> event has finished processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-197">如果事件已處理完成，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-197">
              <see langword="true" /> if the event has finished processing; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-198">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-198">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsWebSocketRequest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequest : bool" Usage="System.Web.HttpContextBase.IsWebSocketRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-199">在衍生類別內實作時，取得一個值，這個值指出要求是否為 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 連接要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-199">When implemented in a derived class, gets a value that indicates whether the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-200">如果要求是 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 要求，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-200">
              <see langword="true" /> if the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequestUpgrading">
      <MemberSignature Language="C#" Value="public virtual bool IsWebSocketRequestUpgrading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequestUpgrading" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsWebSocketRequestUpgrading" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsWebSocketRequestUpgrading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsWebSocketRequestUpgrading { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequestUpgrading : bool" Usage="System.Web.HttpContextBase.IsWebSocketRequestUpgrading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-201">在衍生類別內實作時，取得一個值，這個值指出連接是否從 HTTP 連接升級至 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 連接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-201">When implemented in a derived class, gets a value that indicates whether the connection is upgrading from an HTTP connection to an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-202">如果連接正在升級，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-202">
              <see langword="true" /> if the connection is upgrading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Items { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IDictionary" Usage="System.Web.HttpContextBase.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-203">在衍生類別中覆寫時，取得索引鍵/值集合，可在 HTTP 要求期間，用來組織及共用模組和處理常式之間的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-203">When overridden in a derived class, gets a key/value collection that can be used to organize and share data between a module and a handler during an HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-204">索引鍵/值集合，藉由使用指定的索引鍵，提供對集合中個別值的存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-204">A key/value collection that provides access to an individual value in the collection by using a specified key.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-205">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-205">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PageInstrumentation">
      <MemberSignature Language="C#" Value="public virtual System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Instrumentation.PageInstrumentationService PageInstrumentation" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.PageInstrumentation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageInstrumentation As PageInstrumentationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Instrumentation::PageInstrumentationService ^ PageInstrumentation { System::Web::Instrumentation::PageInstrumentationService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PageInstrumentation : System.Web.Instrumentation.PageInstrumentationService" Usage="System.Web.HttpContextBase.PageInstrumentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Instrumentation.PageInstrumentationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-206">在衍生類別中實作時，取得此要求的頁面檢測服務執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-206">When implemented in a derived class, gets a reference to the page-instrumentation service instance for this request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-207">這項要求的頁面檢測服務執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-207">The page-instrumentation service instance for this request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler PreviousHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler PreviousHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.PreviousHandler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousHandler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ PreviousHandler { System::Web::IHttpHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousHandler : System.Web.IHttpHandler" Usage="System.Web.HttpContextBase.PreviousHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-208">在衍生類別中覆寫時，取得父處理常式的 <see cref="T:System.Web.IHttpHandler" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-208">When overridden in a derived class, gets the <see cref="T:System.Web.IHttpHandler" /> object for the parent handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-209">表示父處理常式的 <see cref="T:System.Web.IHttpHandler" /> 物件；如果找不到父處理常式，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-209">An <see cref="T:System.Web.IHttpHandler" /> object that represents the parent handler, or <see langword="null" /> if no parent handler was found.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-210">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-210">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Profile">
      <MemberSignature Language="C#" Value="public virtual System.Web.Profile.ProfileBase Profile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Profile.ProfileBase Profile" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Profile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Profile As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Profile::ProfileBase ^ Profile { System::Web::Profile::ProfileBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Profile : System.Web.Profile.ProfileBase" Usage="System.Web.HttpContextBase.Profile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-211">在衍生類別中遭覆寫時，取得目前使用者設定檔的 <see cref="T:System.Web.Profile.ProfileBase" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-211">When overridden in a derived class, gets the <see cref="T:System.Web.Profile.ProfileBase" /> object for the current user profile.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-212">如果應用程式組態檔中定義了設定檔屬性，且已為此應用程式啟用了設定檔，則為代表目前使用者設定檔的物件表示；否則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-212">If the profile properties are defined in the application configuration file and profiles are enabled for the application, an object that represents the current user profile; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-213">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-213">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemapHandler">
      <MemberSignature Language="C#" Value="public virtual void RemapHandler (System.Web.IHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemapHandler(class System.Web.IHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RemapHandler(System.Web.IHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemapHandler (handler As IHttpHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemapHandler(System::Web::IHttpHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemapHandler : System.Web.IHttpHandler -&gt; unit&#xA;override this.RemapHandler : System.Web.IHttpHandler -&gt; unit" Usage="httpContextBase.RemapHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="9c0d2-214">應該處理這個要求的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-214">The object that should process the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-215">在衍生類別中覆寫時，指定要求的處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-215">When overridden in a derived class, specifies a handler for the request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0d2-216">如果您設定`handler`至`null`的預設處理常式來處理要求。</span><span class="sxs-lookup"><span data-stu-id="9c0d2-216">If you set `handler` to `null`, the default handler is used to process the request.</span></span> <span data-ttu-id="9c0d2-217">您可以設定`handler`非同步處理常式，或同步處理常式。</span><span class="sxs-lookup"><span data-stu-id="9c0d2-217">You can set `handler` to either an asynchronous handler or to an synchronous handler.</span></span> <span data-ttu-id="9c0d2-218">處理常式必須實作<xref:System.Web.IHttpHandler>介面。</span><span class="sxs-lookup"><span data-stu-id="9c0d2-218">The handler must implement the <xref:System.Web.IHttpHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-219">衍生型別無法實作這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-219">A derived type fails to implement this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpRequestBase Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequestBase Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Request" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Request As HttpRequestBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpRequestBase ^ Request { System::Web::HttpRequestBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Request : System.Web.HttpRequestBase" Usage="System.Web.HttpContextBase.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequestBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-220">在衍生類別中覆寫時，取得目前 HTTP 要求的 <see cref="T:System.Web.HttpRequest" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-220">When overridden in a derived class, gets the <see cref="T:System.Web.HttpRequest" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-221">目前 HTTP 要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-221">The current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-222">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-222">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpResponseBase Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponseBase Response" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Response" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Response As HttpResponseBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpResponseBase ^ Response { System::Web::HttpResponseBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Response : System.Web.HttpResponseBase" Usage="System.Web.HttpContextBase.Response" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponseBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-223">在衍生類別中覆寫時，取得目前 HTTP 回應的 <see cref="T:System.Web.HttpResponse" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-223">When overridden in a derived class, gets the <see cref="T:System.Web.HttpResponse" /> object for the current HTTP response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-224">目前 HTTP 回應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-224">The current HTTP response.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-225">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-225">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RewritePath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-226">在衍生類別中覆寫時，指派內部的重新寫入路徑，如此可允許要求 URL 區分資源的內部路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-226">When overridden in a derived class, assigns an internal rewrite path, which lets the request URL differ from the internal path of the resource.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member RewritePath : string -&gt; unit&#xA;override this.RewritePath : string -&gt; unit" Usage="httpContextBase.RewritePath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9c0d2-227">取代路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-227">The replacement path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-228">在衍生類別中被覆寫時，使用指定的路徑重寫 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-228">When overridden in a derived class, rewrites the URL by using the specified path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-229">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-229">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string path, bool rebaseClientPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string path, bool rebaseClientPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (path As String, rebaseClientPath As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ path, bool rebaseClientPath);" />
      <MemberSignature Language="F#" Value="abstract member RewritePath : string * bool -&gt; unit&#xA;override this.RewritePath : string * bool -&gt; unit" Usage="httpContextBase.RewritePath (path, rebaseClientPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rebaseClientPath" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="9c0d2-230">取代路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-230">The replacement path.</span>
          </span>
        </param>
        <param name="rebaseClientPath">
          <span data-ttu-id="9c0d2-231">
            <see langword="true" /> 表示要重設虛擬路徑；<see langword="false" /> 表示要保持虛擬路徑不變。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-231">
              <see langword="true" /> to reset the virtual path; <see langword="false" /> to keep the virtual path unchanged.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-232">在衍生類別中覆寫時，使用指定的路徑和值重寫 URL，這個值會指定是否修改伺服器資源的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-232">When overridden in a derived class, rewrites the URL by using the specified path and a value that specifies whether the virtual path for server resources is modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-233">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-233">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string filePath, string pathInfo, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string filePath, string pathInfo, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (filePath As String, pathInfo As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString);" />
      <MemberSignature Language="F#" Value="abstract member RewritePath : string * string * string -&gt; unit&#xA;override this.RewritePath : string * string * string -&gt; unit" Usage="httpContextBase.RewritePath (filePath, pathInfo, queryString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="pathInfo" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">
          <span data-ttu-id="9c0d2-234">取代路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-234">The replacement path.</span>
          </span>
        </param>
        <param name="pathInfo">
          <span data-ttu-id="9c0d2-235">資源的額外路徑資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-235">Additional path information for a resource.</span>
          </span>
        </param>
        <param name="queryString">
          <span data-ttu-id="9c0d2-236">要求查詢字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-236">The request query string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-237">在衍生的類別中被覆寫時，使用指定的路徑、路徑資訊和查詢字串資訊重寫 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-237">When overridden in a derived class, rewrites the URL by using the specified path, path information, and query string information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-238">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-238">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string filePath, string pathInfo, string queryString, bool setClientFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string filePath, string pathInfo, string queryString, bool setClientFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (filePath As String, pathInfo As String, queryString As String, setClientFilePath As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString, bool setClientFilePath);" />
      <MemberSignature Language="F#" Value="abstract member RewritePath : string * string * string * bool -&gt; unit&#xA;override this.RewritePath : string * string * string * bool -&gt; unit" Usage="httpContextBase.RewritePath (filePath, pathInfo, queryString, setClientFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="pathInfo" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
        <Parameter Name="setClientFilePath" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filePath">
          <span data-ttu-id="9c0d2-239">取代路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-239">The replacement path.</span>
          </span>
        </param>
        <param name="pathInfo">
          <span data-ttu-id="9c0d2-240">資源的額外路徑資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-240">Additional path information for a resource.</span>
          </span>
        </param>
        <param name="queryString">
          <span data-ttu-id="9c0d2-241">要求查詢字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-241">The request query string.</span>
          </span>
        </param>
        <param name="setClientFilePath">
          <span data-ttu-id="9c0d2-242">
            <see langword="true" /> 表示要將用戶端資源所使用的檔案路徑設為 <paramref name="filePath" /> 參數的值；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-242">
              <see langword="true" /> to set the file path used for client resources to the value of the <paramref name="filePath" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-243">在衍生類別中覆寫時，使用指定路徑、路徑資訊、查詢字串資訊、查詢字串資訊和指定用戶端檔案路徑是否設為重寫路徑的值，來重寫 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-243">When overridden in a derived class, rewrites the URL by using the specified path, path information, query string information, and a value that specifies whether the client file path is set to the rewrite path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-244">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-244">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpServerUtilityBase Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtilityBase Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Server" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Server As HttpServerUtilityBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpServerUtilityBase ^ Server { System::Web::HttpServerUtilityBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Web.HttpServerUtilityBase" Usage="System.Web.HttpContextBase.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtilityBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-245">在衍生類別中覆寫時，取得 <see cref="T:System.Web.HttpServerUtility" /> 物件，提供處理 Web 要求時使用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-245">When overridden in a derived class, gets the <see cref="T:System.Web.HttpServerUtility" /> object that provides methods that are used when Web requests are being processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-246">目前 HTTP 要求的伺服器公用程式物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-246">The server utility object for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-247">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-247">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpSessionStateBase Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpSessionStateBase Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Session" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Session As HttpSessionStateBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpSessionStateBase ^ Session { System::Web::HttpSessionStateBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Session : System.Web.HttpSessionStateBase" Usage="System.Web.HttpContextBase.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpSessionStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-248">在衍生類別中覆寫時，取得目前 HTTP 要求的 <see cref="T:System.Web.SessionState.HttpSessionState" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-248">When overridden in a derived class, gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-249">目前 HTTP 要求的工作階段狀態物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-249">The session-state object for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-250">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-250">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetSessionStateBehavior">
      <MemberSignature Language="C#" Value="public virtual void SetSessionStateBehavior (System.Web.SessionState.SessionStateBehavior sessionStateBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSessionStateBehavior(valuetype System.Web.SessionState.SessionStateBehavior sessionStateBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSessionStateBehavior(System::Web::SessionState::SessionStateBehavior sessionStateBehavior);" />
      <MemberSignature Language="F#" Value="abstract member SetSessionStateBehavior : System.Web.SessionState.SessionStateBehavior -&gt; unit&#xA;override this.SetSessionStateBehavior : System.Web.SessionState.SessionStateBehavior -&gt; unit" Usage="httpContextBase.SetSessionStateBehavior sessionStateBehavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionStateBehavior" Type="System.Web.SessionState.SessionStateBehavior" />
      </Parameters>
      <Docs>
        <param name="sessionStateBehavior">
          <span data-ttu-id="9c0d2-251">其中一個列舉值，指定所需之工作階段狀態行為的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-251">One of the enumeration values that specifies what type of session state behavior is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9c0d2-252">在衍生類別中遭覆寫時，設定支援 HTTP 要求所需之工作階段狀態行為的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-252">When overridden in a derived class, sets the type of session state behavior that is required to support an HTTP request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0d2-253"><xref:System.Web.HttpContextBase.SetSessionStateBehavior%2A>方法提供繼承自這個類型的類別必須實作的基底方法。</span><span class="sxs-lookup"><span data-stu-id="9c0d2-253">The <xref:System.Web.HttpContextBase.SetSessionStateBehavior%2A> method provides a base method that must be implemented by classes that inherit from this type.</span></span> <span data-ttu-id="9c0d2-254">ASP.NET 會實作這個方法中的<xref:System.Web.HttpContextWrapper>和<xref:System.Web.HttpContext>類別。</span><span class="sxs-lookup"><span data-stu-id="9c0d2-254">ASP.NET implements this method in the <xref:System.Web.HttpContextWrapper> and <xref:System.Web.HttpContext> classes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-255">衍生型別無法實作這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-255">A derived type fails to implement this method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)" />
      </Docs>
    </Member>
    <Member MemberName="SkipAuthorization">
      <MemberSignature Language="C#" Value="public virtual bool SkipAuthorization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipAuthorization" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.SkipAuthorization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SkipAuthorization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SkipAuthorization { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipAuthorization : bool with get, set" Usage="System.Web.HttpContextBase.SkipAuthorization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-256">在衍生類別中覆寫時，取得或設定值，這個值指定 <see cref="T:System.Web.Security.UrlAuthorizationModule" /> 物件是否應該略過目前要求的授權檢查。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-256">When overridden in a derived class, gets or sets a value that specifies whether the <see cref="T:System.Web.Security.UrlAuthorizationModule" /> object should skip the authorization check for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-257">如果 <see cref="T:System.Web.Security.UrlAuthorizationModule" /> 應該略過授權檢查，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-257">
              <see langword="true" /> if <see cref="T:System.Web.Security.UrlAuthorizationModule" /> should skip the authorization check; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-258">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-258">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThreadAbortOnTimeout">
      <MemberSignature Language="C#" Value="public virtual bool ThreadAbortOnTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreadAbortOnTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.ThreadAbortOnTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ThreadAbortOnTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ThreadAbortOnTimeout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ThreadAbortOnTimeout : bool with get, set" Usage="System.Web.HttpContextBase.ThreadAbortOnTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-259">在衍生類別中實作時，取得或設定值，這個值指定 ASP.NET 執行階段是否應該在要求逾時已過時正在處理這個要求的執行緒上呼叫 <see cref="M:System.Threading.Thread.Abort" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-259">When implemented in a derived class, gets or sets a value that specifies whether the ASP.NET runtime should call <see cref="M:System.Threading.Thread.Abort" /> on the thread that is servicing this request when the request times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-260">如果在執行緒逾時的情況下會呼叫 <see cref="M:System.Threading.Thread.Abort" />，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-260">
              <see langword="true" /> if <see cref="M:System.Threading.Thread.Abort" /> will be called when the thread times out; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9c0d2-261">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-261">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9c0d2-262">如需詳細資訊，請參閱<xref:System.Web.HttpContext.ThreadAbortOnTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="9c0d2-262">For more information, see <xref:System.Web.HttpContext.ThreadAbortOnTimeout%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public virtual DateTime Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Timestamp As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime Timestamp { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : DateTime" Usage="System.Web.HttpContextBase.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-263">在衍生類別中覆寫時，取得目前 HTTP 要求的初始時間戳記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-263">When overridden in a derived class, gets the initial timestamp of the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-264">目前 HTTP 要求的時間戳記。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-264">The timestamp of the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-265">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-265">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Trace">
      <MemberSignature Language="C#" Value="public virtual System.Web.TraceContext Trace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.TraceContext Trace" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Trace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Trace As TraceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::TraceContext ^ Trace { System::Web::TraceContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Trace : System.Web.TraceContext" Usage="System.Web.HttpContextBase.Trace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-266">在衍生類別中覆寫時，取得目前 HTTP 回應的 <see cref="T:System.Web.TraceContext" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-266">When overridden in a derived class, gets the <see cref="T:System.Web.TraceContext" /> object for the current HTTP response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-267">目前 HTTP 回應的追蹤物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-267">The trace object for the current HTTP response.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-268">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-268">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IPrincipal User { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.User" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal with get, set" Usage="System.Web.HttpContextBase.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-269">在衍生類別中覆寫時，取得或設定目前 HTTP 要求的安全性資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-269">When overridden in a derived class, gets or sets security information for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-270">包含目前 HTTP 要求之安全性資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-270">An object that contains security information for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="9c0d2-271">永遠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-271">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WebSocketNegotiatedProtocol">
      <MemberSignature Language="C#" Value="public virtual string WebSocketNegotiatedProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebSocketNegotiatedProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.WebSocketNegotiatedProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebSocketNegotiatedProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ WebSocketNegotiatedProtocol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebSocketNegotiatedProtocol : string" Usage="System.Web.HttpContextBase.WebSocketNegotiatedProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-272">在衍生類別中實作時，針對 <see cref="T:System.Web.WebSockets.AspNetWebSocket" />連接，取得從伺服器傳送至用戶端的交涉通訊協定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-272">When implemented in a derived class, gets the negotiated protocol that was sent from the server to the client for an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-273">交涉通訊協定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-273">The negotiated protocol.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebSocketRequestedProtocols">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; WebSocketRequestedProtocols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; WebSocketRequestedProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.WebSocketRequestedProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebSocketRequestedProtocols As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::String ^&gt; ^ WebSocketRequestedProtocols { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebSocketRequestedProtocols : System.Collections.Generic.IList&lt;string&gt;" Usage="System.Web.HttpContextBase.WebSocketRequestedProtocols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9c0d2-274">在衍生類別中覆寫時，取得用戶端所要求的通訊協定清單 (已排序)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-274">When implemented in a derived class, gets the ordered list of protocols that were requested by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9c0d2-275">所要求的通訊協定；如果這不是 <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> 要求，或沒有清單，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9c0d2-275">The requested protocols, or <see langword="null" /> if this is not an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request or if no list is present.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>