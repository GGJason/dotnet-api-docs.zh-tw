<Type Name="HttpRequestValidationException" FullName="System.Web.HttpRequestValidationException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab81d57a6a7701b6a691d0f06c8590e73b45f39a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30607852" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpRequestValidationException : System.Web.HttpException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit HttpRequestValidationException extends System.Web.HttpException" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequestValidationException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequestValidationException&#xA;Inherits HttpException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestValidationException sealed : System::Web::HttpException" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.HttpException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>當從用戶端收到的要求資料中可能有包含惡意的輸入字串時，會擲回的例外狀況。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 限制和驗證使用者輸入很重要的 Web 應用程式，以防止惡意的輸入字串所依賴的駭客攻擊。 跨網站指令碼攻擊是這類駭客的範例。 透過各種形式的輸入，可以在要求中傳遞其他類型的惡意或不想要的資料。 藉由限制的應用程式中的低層級會傳遞的資料類型，您可以防止不想要的事件，即使在程式設計人員使用您的程式碼不要將適當的驗證技術中的位置。  
  
 要求驗證會偵測潛在的惡意用戶端輸入，並擲回這個例外狀況中止處理要求。 要求中止，可能表示有人嘗試入侵您的應用程式，例如跨網站指令碼攻擊的安全性。 強烈建議您的應用程式明確檢查所有關於要求中止的輸入。 不過，您可以設定停用要求驗證`validateRequest`屬性中的指示詞`false`，如下列範例所示：  
  
 `<%@ Page validateRequest="false" %>`  
  
 若要停用要求驗證，您的應用程式，您必須修改或建立的 Web.config 檔的應用程式和組`validateRequest`屬性`pages`區段`false`，如下列範例所示：  
  
```  
<configuration>   
  <system.web>   
    <pages validateRequest="false" />   
  </system.web>   
</configuration>   
```  
  
 若要停用要求驗證您的伺服器上所有應用程式，您可以進行這項修改 Machine.config 檔案。  
  
> [!NOTE]
>  強烈建議您的應用程式明確檢查所有輸入值，它會使用除了 ASP.NET 所執行的要求驗證。 要求驗證的功能不會攔截所有攻擊，特別是那些製作特別針對您的應用程式邏輯。  
  
   
  
## Examples  
 下列程式碼範例示範如何藉由檢查是否有惡意使用者輸入<xref:System.Web.HttpRequestValidationException>。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[HttpRequestValidationException#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpRequestValidationException/CS/httprequestvalidationexception_cs.aspx#1)]
 [!code-aspx-vb[HttpRequestValidationException#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpRequestValidationException/VB/HttpRequestValidationException_VB.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>多載。 建立 <see cref="T:System.Web.HttpRequestValidationException" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Web.HttpRequestValidationException" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">描述錯誤的字串。</param>
        <summary>使用指定的錯誤訊息建立新的 <see cref="T:System.Web.HttpRequestValidationException" /> 例外狀況。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 內容`message`參數要可供人們可讀取。 呼叫端<xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%29>建構函式，才能確保`message`字串已經被當地語系化。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">解釋發生例外狀況原因的錯誤訊息。</param>
        <param name="innerException">做為目前例外狀況發生原因的例外狀況。 如果此參數不是 <see langword="null" />，則目前的例外狀況乃是由處理內部例外的 <see langword="catch" /> 區塊所引發。</param>
        <summary>使用指定的錯誤訊息和造成此例外狀況原因的內部例外狀況參考，初始化 <see cref="T:System.Web.HttpRequestValidationException" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 被擲回以做為前一個例外狀況直接結果的例外狀況，應該在 <xref:System.Exception.InnerException%2A> 屬性中包含對前一個例外狀況的參考。 <xref:System.Exception.InnerException%2A>屬性會傳回相同的值傳遞到<xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29>建構函式，或`null`如果<xref:System.Exception.InnerException%2A>屬性沒有提供內部例外值給<xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29>建構函式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>