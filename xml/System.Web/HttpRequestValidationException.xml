<Type Name="HttpRequestValidationException" FullName="System.Web.HttpRequestValidationException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7879410d076bbc54a941e98ea9cada12d389b046" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36574403" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpRequestValidationException : System.Web.HttpException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit HttpRequestValidationException extends System.Web.HttpException" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequestValidationException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequestValidationException&#xA;Inherits HttpException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequestValidationException sealed : System::Web::HttpException" />
  <TypeSignature Language="F#" Value="type HttpRequestValidationException = class&#xA;    inherit HttpException" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.HttpException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="a2cc2-101">當從用戶端收到的要求資料中可能有包含惡意的輸入字串時，會擲回的例外狀況。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a2cc2-101">The exception that is thrown when a potentially malicious input string is received from the client as part of the request data.</span>
      </span>
      <span data-ttu-id="a2cc2-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="a2cc2-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2cc2-103">限制和驗證使用者輸入很重要的 Web 應用程式，以防止惡意的輸入字串所依賴的駭客攻擊。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-103">Constraining and validating user input is essential in a Web application to prevent hacker attacks that rely on malicious input strings.</span></span> <span data-ttu-id="a2cc2-104">跨網站指令碼攻擊是這類駭客的範例。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-104">Cross-site scripting attacks are one example of such hacks.</span></span> <span data-ttu-id="a2cc2-105">透過各種形式的輸入，可以在要求中傳遞其他類型的惡意或不想要的資料。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-105">Other types of malicious or undesired data can be passed in a request through various forms of input.</span></span> <span data-ttu-id="a2cc2-106">藉由限制的應用程式中的低層級會傳遞的資料類型，您可以防止不想要的事件，即使在程式設計人員使用您的程式碼不要將適當的驗證技術中的位置。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-106">By limiting the kinds of data that is passed at a low level in an application, you can prevent undesirable events, even when programmers who are using your code do not put the proper validation techniques in place.</span></span>  
  
 <span data-ttu-id="a2cc2-107">要求驗證會偵測潛在的惡意用戶端輸入，並擲回這個例外狀況中止處理要求。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-107">Request validation detects potentially malicious client input and throws this exception to abort processing of the request.</span></span> <span data-ttu-id="a2cc2-108">要求中止，可能表示有人嘗試入侵您的應用程式，例如跨網站指令碼攻擊的安全性。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-108">A request abort can indicate an attempt to compromise the security of your application, such as a cross-site scripting attack.</span></span> <span data-ttu-id="a2cc2-109">強烈建議您的應用程式明確檢查所有關於要求中止的輸入。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-109">It is strongly recommended that your application explicitly check all input regarding request aborts.</span></span> <span data-ttu-id="a2cc2-110">不過，您可以設定停用要求驗證`validateRequest`屬性中的指示詞`false`，如下列範例所示：</span><span class="sxs-lookup"><span data-stu-id="a2cc2-110">However, you can disable request validation by setting the `validateRequest` attribute in the  directive to `false`, as shown in the following example:</span></span>  
  
 `<%@ Page validateRequest="false" %>`  
  
 <span data-ttu-id="a2cc2-111">若要停用要求驗證，您的應用程式，您必須修改或建立的 Web.config 檔的應用程式和組`validateRequest`屬性`pages`區段`false`，如下列範例所示：</span><span class="sxs-lookup"><span data-stu-id="a2cc2-111">To disable request validation for your application, you must modify or create a Web.config file for your application and set the `validateRequest` attribute of the `pages` section to `false`, as shown in the following example:</span></span>  
  
```  
<configuration>   
  <system.web>   
    <pages validateRequest="false" />   
  </system.web>   
</configuration>   
```  
  
 <span data-ttu-id="a2cc2-112">若要停用要求驗證您的伺服器上所有應用程式，您可以進行這項修改 Machine.config 檔案。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-112">To disable request validation for all applications on your server, you can make this modification to the Machine.config file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2cc2-113">強烈建議您的應用程式明確檢查所有輸入值，它會使用除了 ASP.NET 所執行的要求驗證。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-113">It is strongly recommended that your application explicitly check all inputs it uses in addition to the request validation performed by ASP.NET.</span></span> <span data-ttu-id="a2cc2-114">要求驗證的功能不會攔截所有攻擊，特別是那些製作特別針對您的應用程式邏輯。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-114">The request validation feature cannot catch all attacks, especially those crafted specifically against your application logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2cc2-115">下列程式碼範例示範如何藉由檢查是否有惡意使用者輸入<xref:System.Web.HttpRequestValidationException>。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-115">The following code example demonstrates how to check for malicious user input by using an <xref:System.Web.HttpRequestValidationException>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="a2cc2-116">這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-116">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="a2cc2-117">根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-117">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="a2cc2-118">如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-118">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpRequestValidationException#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpRequestValidationException/CS/httprequestvalidationexception_cs.aspx#1)]
 [!code-aspx-vb[HttpRequestValidationException#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpRequestValidationException/VB/HttpRequestValidationException_VB.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a2cc2-119">多載。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2cc2-119">Overloaded.</span>
          </span>
          <span data-ttu-id="a2cc2-120">建立 <see cref="T:System.Web.HttpRequestValidationException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2cc2-120">Creates a new instance of the <see cref="T:System.Web.HttpRequestValidationException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a2cc2-121">建立 <see cref="T:System.Web.HttpRequestValidationException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2cc2-121">Creates a new instance of the <see cref="T:System.Web.HttpRequestValidationException" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequestValidationException : string -&gt; System.Web.HttpRequestValidationException" Usage="new System.Web.HttpRequestValidationException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="a2cc2-122">描述錯誤的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2cc2-122">A string that describes the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2cc2-123">使用指定的錯誤訊息建立新的 <see cref="T:System.Web.HttpRequestValidationException" /> 例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2cc2-123">Creates a new <see cref="T:System.Web.HttpRequestValidationException" /> exception with the specified error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2cc2-124">內容`message`參數要可供人們可讀取。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-124">The content of the `message` parameter is intended to be human readable.</span></span> <span data-ttu-id="a2cc2-125">呼叫端<xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%29>建構函式，才能確保`message`字串已經被當地語系化。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-125">The caller of the <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%29> constructor is required to ensure that the `message` string has been localized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequestValidationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequestValidationException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequestValidationException : string * Exception -&gt; System.Web.HttpRequestValidationException" Usage="new System.Web.HttpRequestValidationException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="a2cc2-126">解釋發生例外狀況原因的錯誤訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2cc2-126">An error message that explains the reason for the exception.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="a2cc2-127">做為目前例外狀況發生原因的例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2cc2-127">The exception that is the cause of the current exception.</span>
          </span>
          <span data-ttu-id="a2cc2-128">如果此參數不是 <see langword="null" />，則目前的例外狀況乃是由處理內部例外的 <see langword="catch" /> 區塊所引發。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2cc2-128">If this parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a2cc2-129">使用指定的錯誤訊息和造成此例外狀況原因的內部例外狀況參考，初始化 <see cref="T:System.Web.HttpRequestValidationException" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="a2cc2-129">Initializes a new instance of the <see cref="T:System.Web.HttpRequestValidationException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2cc2-130">被擲回以做為前一個例外狀況直接結果的例外狀況，應該在 <xref:System.Exception.InnerException%2A> 屬性中包含對前一個例外狀況的參考。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-130">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="a2cc2-131"><xref:System.Exception.InnerException%2A>屬性會傳回相同的值傳遞到<xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29>建構函式，或`null`如果<xref:System.Exception.InnerException%2A>屬性沒有提供內部例外值給<xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="a2cc2-131">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29> constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the <xref:System.Web.HttpRequestValidationException.%23ctor%28System.String%2CSystem.Exception%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>