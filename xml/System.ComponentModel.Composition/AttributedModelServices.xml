<Type Name="AttributedModelServices" FullName="System.ComponentModel.Composition.AttributedModelServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="afeeef0b48118722ce522e724c51c6e0120d904b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39868949" /></Metadata><TypeSignature Language="C#" Value="public static class AttributedModelServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AttributedModelServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.AttributedModelServices" />
  <TypeSignature Language="VB.NET" Value="Public Module AttributedModelServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributedModelServices abstract sealed" />
  <TypeSignature Language="F#" Value="type AttributedModelServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="25edb-101">包含 Helper 方法，這些方法會用於具有撰寫功能的 MEF 屬性化程式設計模型。</span><span class="sxs-lookup"><span data-stu-id="25edb-101">Contains helper methods for using the MEF attributed programming model with composition.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddExportedValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="25edb-102">從指定的值建立組件，並將它加入至撰寫批次。</span><span class="sxs-lookup"><span data-stu-id="25edb-102">Creates a part from a specified value and adds it to a composition batch.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionBatch batch, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddExportedValue(Of T) (batch As CompositionBatch, exportedValue As T) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ AddExportedValue(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch, T exportedValue);" />
      <MemberSignature Language="F#" Value="static member AddExportedValue : System.ComponentModel.Composition.Hosting.CompositionBatch * 'T -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.AddExportedValue (batch, exportedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" RefType="this" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="25edb-103">新組件的型別。</span><span class="sxs-lookup"><span data-stu-id="25edb-103">The type of the new part.</span></span></typeparam>
        <param name="batch"><span data-ttu-id="25edb-104">要加入的批次。</span><span class="sxs-lookup"><span data-stu-id="25edb-104">The batch to add to.</span></span></param>
        <param name="exportedValue"><span data-ttu-id="25edb-105">要加入的值。</span><span class="sxs-lookup"><span data-stu-id="25edb-105">The value to add.</span></span></param>
        <summary><span data-ttu-id="25edb-106">從指定的值建立組件，並將它加入至指定的批次。</span><span class="sxs-lookup"><span data-stu-id="25edb-106">Creates a part from the specified value and adds it to the specified batch.</span></span></summary>
        <returns><span data-ttu-id="25edb-107">新的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-107">The new part.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, string contractName, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart AddExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionBatch batch, string contractName, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddExportedValue(Of T) (batch As CompositionBatch, contractName As String, exportedValue As T) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ AddExportedValue(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch, System::String ^ contractName, T exportedValue);" />
      <MemberSignature Language="F#" Value="static member AddExportedValue : System.ComponentModel.Composition.Hosting.CompositionBatch * string * 'T -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.AddExportedValue (batch, contractName, exportedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="25edb-108">新組件的型別。</span><span class="sxs-lookup"><span data-stu-id="25edb-108">The type of the new part.</span></span></typeparam>
        <param name="batch"><span data-ttu-id="25edb-109">要加入的批次。</span><span class="sxs-lookup"><span data-stu-id="25edb-109">The batch to add to.</span></span></param>
        <param name="contractName"><span data-ttu-id="25edb-110">匯出的合約名稱。</span><span class="sxs-lookup"><span data-stu-id="25edb-110">The contract name of the export.</span></span></param>
        <param name="exportedValue"><span data-ttu-id="25edb-111">要加入的值。</span><span class="sxs-lookup"><span data-stu-id="25edb-111">The value to add.</span></span></param>
        <summary><span data-ttu-id="25edb-112">從指定的值建立組件，並將它加入至具有指定合約名稱的批次。</span><span class="sxs-lookup"><span data-stu-id="25edb-112">Creates a part from the specified value and adds it to the specified batch with the specified contract name.</span></span></summary>
        <returns><span data-ttu-id="25edb-113">新的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-113">The new part.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart AddPart (this System.ComponentModel.Composition.Hosting.CompositionBatch batch, object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart AddPart(class System.ComponentModel.Composition.Hosting.CompositionBatch batch, object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddPart (batch As CompositionBatch, attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ AddPart(System::ComponentModel::Composition::Hosting::CompositionBatch ^ batch, System::Object ^ attributedPart);" />
      <MemberSignature Language="F#" Value="static member AddPart : System.ComponentModel.Composition.Hosting.CompositionBatch * obj -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.AddPart (batch, attributedPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="batch" Type="System.ComponentModel.Composition.Hosting.CompositionBatch" RefType="this" />
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="batch"><span data-ttu-id="25edb-114">要加入的批次。</span><span class="sxs-lookup"><span data-stu-id="25edb-114">The batch to add to.</span></span></param>
        <param name="attributedPart"><span data-ttu-id="25edb-115">要加入的物件。</span><span class="sxs-lookup"><span data-stu-id="25edb-115">The object to add.</span></span></param>
        <summary><span data-ttu-id="25edb-116">從指定的屬性化物件建立可組合的組件，並將它加入至指定的撰寫批次。</span><span class="sxs-lookup"><span data-stu-id="25edb-116">Creates a composable part from the specified attributed object, and adds it to the specified composition batch.</span></span></summary>
        <returns><span data-ttu-id="25edb-117">新的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-117">The new part.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComposeExportedValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="25edb-118">從指定的物件建立組件，並使用指定的撰寫容器撰寫它。</span><span class="sxs-lookup"><span data-stu-id="25edb-118">Creates a part from a specified object and composes it with a specified composition container.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComposeExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ComposeExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionContainer container, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComposeExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionContainer container, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ComposeExportedValue(Of T) (container As CompositionContainer, exportedValue As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ComposeExportedValue(System::ComponentModel::Composition::Hosting::CompositionContainer ^ container, T exportedValue);" />
      <MemberSignature Language="F#" Value="static member ComposeExportedValue : System.ComponentModel.Composition.Hosting.CompositionContainer * 'T -&gt; unit" Usage="System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue (container, exportedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.Composition.Hosting.CompositionContainer" RefType="this" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="25edb-119">新組件的型別。</span><span class="sxs-lookup"><span data-stu-id="25edb-119">The type of the new part.</span></span></typeparam>
        <param name="container"><span data-ttu-id="25edb-120">要在其中執行撰寫的撰寫容器。</span><span class="sxs-lookup"><span data-stu-id="25edb-120">The composition container to perform composition in.</span></span></param>
        <param name="exportedValue"><span data-ttu-id="25edb-121">要撰寫的值。</span><span class="sxs-lookup"><span data-stu-id="25edb-121">The value to compose.</span></span></param>
        <summary><span data-ttu-id="25edb-122">從指定的值建立組件，並且在指定的撰寫容器中撰寫它。</span><span class="sxs-lookup"><span data-stu-id="25edb-122">Creates a part from the specified value and composes it in the specified composition container.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ComposeExportedValue&lt;T&gt; (this System.ComponentModel.Composition.Hosting.CompositionContainer container, string contractName, T exportedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComposeExportedValue&lt;T&gt;(class System.ComponentModel.Composition.Hosting.CompositionContainer container, string contractName, !!T exportedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ComposeExportedValue(Of T) (container As CompositionContainer, contractName As String, exportedValue As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ComposeExportedValue(System::ComponentModel::Composition::Hosting::CompositionContainer ^ container, System::String ^ contractName, T exportedValue);" />
      <MemberSignature Language="F#" Value="static member ComposeExportedValue : System.ComponentModel.Composition.Hosting.CompositionContainer * string * 'T -&gt; unit" Usage="System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue (container, contractName, exportedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.Composition.Hosting.CompositionContainer" RefType="this" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="exportedValue" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="25edb-123">新組件的型別。</span><span class="sxs-lookup"><span data-stu-id="25edb-123">The type of the new part.</span></span></typeparam>
        <param name="container"><span data-ttu-id="25edb-124">要在其中執行撰寫的撰寫容器。</span><span class="sxs-lookup"><span data-stu-id="25edb-124">The composition container to perform composition in.</span></span></param>
        <param name="contractName"><span data-ttu-id="25edb-125">要依據以便匯出組件的合約名稱。</span><span class="sxs-lookup"><span data-stu-id="25edb-125">The contract name to export the part under.</span></span></param>
        <param name="exportedValue"><span data-ttu-id="25edb-126">要撰寫的值。</span><span class="sxs-lookup"><span data-stu-id="25edb-126">The value to compose.</span></span></param>
        <summary><span data-ttu-id="25edb-127">依據指定之合約名稱，從指定的物件建立組件，並且在指定的撰寫容器中撰寫它。</span><span class="sxs-lookup"><span data-stu-id="25edb-127">Creates a part from the specified object under the specified contract name and composes it in the specified composition container.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeParts">
      <MemberSignature Language="C#" Value="public static void ComposeParts (this System.ComponentModel.Composition.Hosting.CompositionContainer container, params object[] attributedParts);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ComposeParts(class System.ComponentModel.Composition.Hosting.CompositionContainer container, object[] attributedParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub ComposeParts (container As CompositionContainer, ParamArray attributedParts As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void ComposeParts(System::ComponentModel::Composition::Hosting::CompositionContainer ^ container, ... cli::array &lt;System::Object ^&gt; ^ attributedParts);" />
      <MemberSignature Language="F#" Value="static member ComposeParts : System.ComponentModel.Composition.Hosting.CompositionContainer * obj[] -&gt; unit" Usage="System.ComponentModel.Composition.AttributedModelServices.ComposeParts (container, attributedParts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.Composition.Hosting.CompositionContainer" RefType="this" />
        <Parameter Name="attributedParts" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="25edb-128">要在其中執行撰寫的撰寫容器。</span><span class="sxs-lookup"><span data-stu-id="25edb-128">The composition container to perform composition in.</span></span></param>
        <param name="attributedParts"><span data-ttu-id="25edb-129">要撰寫之屬性化物件的陣列。</span><span class="sxs-lookup"><span data-stu-id="25edb-129">An array of attributed objects to compose.</span></span></param>
        <summary><span data-ttu-id="25edb-130">從屬性化物件的陣列建立可組合的組件，並且在指定的撰寫容器中撰寫它們。</span><span class="sxs-lookup"><span data-stu-id="25edb-130">Creates composable parts from an array of attributed objects and composes them in the specified composition container.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePart">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="25edb-131">建立可組合的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-131">Creates a composable part.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart CreatePart(object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ CreatePart(System::Object ^ attributedPart);" />
      <MemberSignature Language="F#" Value="static member CreatePart : obj -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.CreatePart attributedPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="attributedPart"><span data-ttu-id="25edb-132">屬性化物件。</span><span class="sxs-lookup"><span data-stu-id="25edb-132">The attributed object.</span></span></param>
        <summary><span data-ttu-id="25edb-133">從指定的屬性化物件建立可組合的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-133">Creates a composable part from the specified attributed object.</span></span></summary>
        <returns><span data-ttu-id="25edb-134">建立的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-134">The created part.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart CreatePart(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePart (partDefinition As ComposablePartDefinition, attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ CreatePart(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ partDefinition, System::Object ^ attributedPart);" />
      <MemberSignature Language="F#" Value="static member CreatePart : System.ComponentModel.Composition.Primitives.ComposablePartDefinition * obj -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.CreatePart (partDefinition, attributedPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partDefinition" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" />
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="partDefinition"><span data-ttu-id="25edb-135">新組件的定義。</span><span class="sxs-lookup"><span data-stu-id="25edb-135">The definition of the new part.</span></span></param>
        <param name="attributedPart"><span data-ttu-id="25edb-136">屬性化物件。</span><span class="sxs-lookup"><span data-stu-id="25edb-136">The attributed object.</span></span></param>
        <summary><span data-ttu-id="25edb-137">使用指定的組件定義，從指定的屬性化物件建立可組合的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-137">Creates a composable part from the specified attributed object, using the specified part definition.</span></span></summary>
        <returns><span data-ttu-id="25edb-138">建立的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-138">The created part.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePart">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart CreatePart (object attributedPart, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart CreatePart(object attributedPart, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePart(System.Object,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ CreatePart(System::Object ^ attributedPart, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="static member CreatePart : obj * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.CreatePart (attributedPart, reflectionContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributedPart" Type="System.Object" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="attributedPart"><span data-ttu-id="25edb-139">屬性化物件。</span><span class="sxs-lookup"><span data-stu-id="25edb-139">The attributed object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="25edb-140">組件的反映內容。</span><span class="sxs-lookup"><span data-stu-id="25edb-140">The reflection context for the part.</span></span></param>
        <summary><span data-ttu-id="25edb-141">使用指定的反映內容，從指定的屬性化物件建立可組合的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-141">Creates a composable part from the specified attributed object, using the specified reflection context.</span></span></summary>
        <returns><span data-ttu-id="25edb-142">建立的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-142">The created part.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="25edb-143"><paramref name="reflectionContext" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="25edb-143"><paramref name="reflectionContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePartDefinition">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="25edb-144">建立具有指定之型別和原意的部分定義。</span><span class="sxs-lookup"><span data-stu-id="25edb-144">Creates a part definition with the specified type and origin.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePartDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition(class System.Type type, class System.ComponentModel.Composition.Primitives.ICompositionElement origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ CreatePartDefinition(Type ^ type, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin);" />
      <MemberSignature Language="F#" Value="static member CreatePartDefinition : Type * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Primitives.ComposablePartDefinition" Usage="System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition (type, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="25edb-145">定義的型別。</span><span class="sxs-lookup"><span data-stu-id="25edb-145">The type of the definition.</span></span></param>
        <param name="origin"><span data-ttu-id="25edb-146">定義的原點。</span><span class="sxs-lookup"><span data-stu-id="25edb-146">The origin of the definition.</span></span></param>
        <summary><span data-ttu-id="25edb-147">建立具有指定之型別和原意的部分定義。</span><span class="sxs-lookup"><span data-stu-id="25edb-147">Creates a part definition with the specified type and origin.</span></span></summary>
        <returns><span data-ttu-id="25edb-148">新的組件定義。</span><span class="sxs-lookup"><span data-stu-id="25edb-148">The new part definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePartDefinition">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Type type, System.ComponentModel.Composition.Primitives.ICompositionElement origin, bool ensureIsDiscoverable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition(class System.Type type, class System.ComponentModel.Composition.Primitives.ICompositionElement origin, bool ensureIsDiscoverable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition(System.Type,System.ComponentModel.Composition.Primitives.ICompositionElement,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ CreatePartDefinition(Type ^ type, System::ComponentModel::Composition::Primitives::ICompositionElement ^ origin, bool ensureIsDiscoverable);" />
      <MemberSignature Language="F#" Value="static member CreatePartDefinition : Type * System.ComponentModel.Composition.Primitives.ICompositionElement * bool -&gt; System.ComponentModel.Composition.Primitives.ComposablePartDefinition" Usage="System.ComponentModel.Composition.AttributedModelServices.CreatePartDefinition (type, origin, ensureIsDiscoverable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartDefinition</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="origin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" />
        <Parameter Name="ensureIsDiscoverable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="25edb-149">定義的型別。</span><span class="sxs-lookup"><span data-stu-id="25edb-149">The type of the definition.</span></span></param>
        <param name="origin"><span data-ttu-id="25edb-150">定義的原點。</span><span class="sxs-lookup"><span data-stu-id="25edb-150">The origin of the definition.</span></span></param>
        <param name="ensureIsDiscoverable"><span data-ttu-id="25edb-151">值，指出新定義是否可搜尋。</span><span class="sxs-lookup"><span data-stu-id="25edb-151">A value indicating whether or not the new definition should be discoverable.</span></span></param>
        <summary><span data-ttu-id="25edb-152">建立具有指定之型別和原意的部分定義。</span><span class="sxs-lookup"><span data-stu-id="25edb-152">Creates a part definition with the specified type and origin.</span></span></summary>
        <returns><span data-ttu-id="25edb-153">新的組件定義。</span><span class="sxs-lookup"><span data-stu-id="25edb-153">The new part definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exports">
      <MemberSignature Language="C#" Value="public static bool Exports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Exports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exports (part As ComposablePartDefinition, contractType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Exports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="static member Exports : System.ComponentModel.Composition.Primitives.ComposablePartDefinition * Type -&gt; bool" Usage="System.ComponentModel.Composition.AttributedModelServices.Exports (part, contractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="25edb-154">要搜尋的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-154">The part to search.</span></span></param>
        <param name="contractType"><span data-ttu-id="25edb-155">合約類型。</span><span class="sxs-lookup"><span data-stu-id="25edb-155">The contract type.</span></span></param>
        <summary><span data-ttu-id="25edb-156">傳回值，這個值表示指定部分否包含符合指定合約型別的匯出。</span><span class="sxs-lookup"><span data-stu-id="25edb-156">Returns a value that indicates whether the specified part contains an export that matches the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="25edb-157">如果<paramref name="part" />包含符合<paramref name="contractType" />的匯出定義，則為 <see langword="true" />，否則為<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="25edb-157"><see langword="true" /> if <paramref name="part" /> contains an export definition that matches <paramref name="contractType" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Exports&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exports&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Exports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exports(Of T) (part As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Exports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part);" />
      <MemberSignature Language="F#" Value="static member Exports : System.ComponentModel.Composition.Primitives.ComposablePartDefinition -&gt; bool" Usage="System.ComponentModel.Composition.AttributedModelServices.Exports part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="25edb-158">合約類型。</span><span class="sxs-lookup"><span data-stu-id="25edb-158">The contract type.</span></span></typeparam>
        <param name="part"><span data-ttu-id="25edb-159">要搜尋的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-159">The part to search.</span></span></param>
        <summary><span data-ttu-id="25edb-160">傳回值，這個值表示指定部分否包含符合指定合約型別的匯出。</span><span class="sxs-lookup"><span data-stu-id="25edb-160">Returns a value that indicates whether the specified part contains an export that matches the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="25edb-161">如果<paramref name="part" />包含型別<paramref name="T" />的匯出定義，則為 <see langword="true" />，否則為<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="25edb-161"><see langword="true" /> if <paramref name="part" /> contains an export definition of type <paramref name="T" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContractName">
      <MemberSignature Language="C#" Value="public static string GetContractName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetContractName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetContractName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetContractName(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetContractName : Type -&gt; string" Usage="System.ComponentModel.Composition.AttributedModelServices.GetContractName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="25edb-162">要使用的型別。</span><span class="sxs-lookup"><span data-stu-id="25edb-162">The type to use.</span></span></param>
        <summary><span data-ttu-id="25edb-163">取得指定型別的正式合約名稱。</span><span class="sxs-lookup"><span data-stu-id="25edb-163">Gets a canonical contract name for the specified type.</span></span></summary>
        <returns><span data-ttu-id="25edb-164">從指定之型別建立的合約名稱。</span><span class="sxs-lookup"><span data-stu-id="25edb-164">A contract name created from the specified type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataView&lt;TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public static TMetadataView GetMetadataView&lt;TMetadataView&gt; (System.Collections.Generic.IDictionary&lt;string,object&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TMetadataView GetMetadataView&lt;TMetadataView&gt;(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetMetadataView``1(System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataView(Of TMetadataView) (metadata As IDictionary(Of String, Object)) As TMetadataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TMetadataView&gt;&#xA; static TMetadataView GetMetadataView(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="static member GetMetadataView : System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; 'MetadataView" Usage="System.ComponentModel.Composition.AttributedModelServices.GetMetadataView metadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TMetadataView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="metadata" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TMetadataView"><span data-ttu-id="25edb-165">要取得之中繼資料檢視物件的型別。</span><span class="sxs-lookup"><span data-stu-id="25edb-165">The type of the metadata view object to get.</span></span></typeparam>
        <param name="metadata"><span data-ttu-id="25edb-166">鬆散中繼資料的集合。</span><span class="sxs-lookup"><span data-stu-id="25edb-166">A collection of loose metadata.</span></span></param>
        <summary><span data-ttu-id="25edb-167">從鬆散中繼資料的字典取得中繼資料檢視物件。</span><span class="sxs-lookup"><span data-stu-id="25edb-167">Gets a metadata view object from a dictionary of loose metadata.</span></span></summary>
        <returns><span data-ttu-id="25edb-168">包含指定之中繼資料的中繼資料檢視。</span><span class="sxs-lookup"><span data-stu-id="25edb-168">A metadata view containing the specified metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeIdentity">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="25edb-169">取得方法或型別的唯一識別項。</span><span class="sxs-lookup"><span data-stu-id="25edb-169">Gets the unique identifier for a method or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeIdentity">
      <MemberSignature Language="C#" Value="public static string GetTypeIdentity (System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeIdentity(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeIdentity (method As MethodInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeIdentity(System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member GetTypeIdentity : System.Reflection.MethodInfo -&gt; string" Usage="System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="25edb-170">要檢查的方法。</span><span class="sxs-lookup"><span data-stu-id="25edb-170">The method to examine.</span></span></param>
        <summary><span data-ttu-id="25edb-171">取得指定之方法的唯一識別項。</span><span class="sxs-lookup"><span data-stu-id="25edb-171">Gets the unique identifier for the specified method.</span></span></summary>
        <returns><span data-ttu-id="25edb-172">方法的唯一識別項。</span><span class="sxs-lookup"><span data-stu-id="25edb-172">The unique identifier for the method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeIdentity">
      <MemberSignature Language="C#" Value="public static string GetTypeIdentity (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTypeIdentity(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTypeIdentity(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetTypeIdentity : Type -&gt; string" Usage="System.ComponentModel.Composition.AttributedModelServices.GetTypeIdentity type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="25edb-173">要檢查的型別。</span><span class="sxs-lookup"><span data-stu-id="25edb-173">The type to examine.</span></span></param>
        <summary><span data-ttu-id="25edb-174">取得指定之型別的唯一識別項。</span><span class="sxs-lookup"><span data-stu-id="25edb-174">Gets the unique identifier for the specified type.</span></span></summary>
        <returns><span data-ttu-id="25edb-175">型別的唯一識別項。</span><span class="sxs-lookup"><span data-stu-id="25edb-175">The unique identifier for the type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Imports">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="25edb-176">傳回值，這個值表示指定部分否包含符合指定合約的匯入。</span><span class="sxs-lookup"><span data-stu-id="25edb-176">Returns a value that indicates whether a specified part contains an inport that matches a specified contract.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Imports (part As ComposablePartDefinition, contractType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, Type ^ contractType);" />
      <MemberSignature Language="F#" Value="static member Imports : System.ComponentModel.Composition.Primitives.ComposablePartDefinition * Type -&gt; bool" Usage="System.ComponentModel.Composition.AttributedModelServices.Imports (part, contractType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="25edb-177">要搜尋的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-177">The part to search.</span></span></param>
        <param name="contractType"><span data-ttu-id="25edb-178">合約類型。</span><span class="sxs-lookup"><span data-stu-id="25edb-178">The contract type.</span></span></param>
        <summary><span data-ttu-id="25edb-179">傳回值，這個值表示指定部分否包含符合指定合約型別的匯入。</span><span class="sxs-lookup"><span data-stu-id="25edb-179">Returns a value that indicates whether the specified part contains an import that matches the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="25edb-180">如果<paramref name="part" />包含符合<paramref name="contractType" />的匯入定義，則為 <see langword="true" />，否則為<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="25edb-180"><see langword="true" /> if <paramref name="part" /> contains an import definition that matches <paramref name="contractType" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public static bool Imports (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, Type contractType, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, class System.Type contractType, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Type,System.ComponentModel.Composition.Primitives.ImportCardinality)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, Type ^ contractType, System::ComponentModel::Composition::Primitives::ImportCardinality importCardinality);" />
      <MemberSignature Language="F#" Value="static member Imports : System.ComponentModel.Composition.Primitives.ComposablePartDefinition * Type * System.ComponentModel.Composition.Primitives.ImportCardinality -&gt; bool" Usage="System.ComponentModel.Composition.AttributedModelServices.Imports (part, contractType, importCardinality)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="importCardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
      </Parameters>
      <Docs>
        <param name="part"><span data-ttu-id="25edb-181">要搜尋的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-181">The part to search.</span></span></param>
        <param name="contractType"><span data-ttu-id="25edb-182">合約類型。</span><span class="sxs-lookup"><span data-stu-id="25edb-182">The contract type.</span></span></param>
        <param name="importCardinality"><span data-ttu-id="25edb-183">匯入基數。</span><span class="sxs-lookup"><span data-stu-id="25edb-183">The import cardinality.</span></span></param>
        <summary><span data-ttu-id="25edb-184">傳回值，這個值表示指定部分否包含符合指定合約型別與匯入基數的匯入。</span><span class="sxs-lookup"><span data-stu-id="25edb-184">Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.</span></span></summary>
        <returns><span data-ttu-id="25edb-185">如果<paramref name="part" />包含符合<paramref name="contractType" />和 <paramref name="importCardinality" /> 的匯入定義，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="25edb-185"><see langword="true" /> if <paramref name="part" /> contains an import definition that matches <paramref name="contractType" /> and <paramref name="importCardinality" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Imports&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Imports(Of T) (part As ComposablePartDefinition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part);" />
      <MemberSignature Language="F#" Value="static member Imports : System.ComponentModel.Composition.Primitives.ComposablePartDefinition -&gt; bool" Usage="System.ComponentModel.Composition.AttributedModelServices.Imports part" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="25edb-186">合約類型。</span><span class="sxs-lookup"><span data-stu-id="25edb-186">The contract type.</span></span></typeparam>
        <param name="part"><span data-ttu-id="25edb-187">要搜尋的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-187">The part to search.</span></span></param>
        <summary><span data-ttu-id="25edb-188">傳回值，這個值表示指定部分否包含符合指定合約型別的匯入。</span><span class="sxs-lookup"><span data-stu-id="25edb-188">Returns a value that indicates whether the specified part contains an import that matches the specified contract type.</span></span></summary>
        <returns><span data-ttu-id="25edb-189">如果<paramref name="part" />包含型別<paramref name="T" />的匯入定義，則為 <see langword="true" />，否則為<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="25edb-189"><see langword="true" /> if <paramref name="part" /> contains an import definition of type <paramref name="T" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Imports&lt;T&gt; (this System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Imports&lt;T&gt;(class System.ComponentModel.Composition.Primitives.ComposablePartDefinition part, valuetype System.ComponentModel.Composition.Primitives.ImportCardinality importCardinality) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.Imports``1(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ImportCardinality)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Imports(System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^ part, System::ComponentModel::Composition::Primitives::ImportCardinality importCardinality);" />
      <MemberSignature Language="F#" Value="static member Imports : System.ComponentModel.Composition.Primitives.ComposablePartDefinition * System.ComponentModel.Composition.Primitives.ImportCardinality -&gt; bool" Usage="System.ComponentModel.Composition.AttributedModelServices.Imports (part, importCardinality)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="part" Type="System.ComponentModel.Composition.Primitives.ComposablePartDefinition" RefType="this" />
        <Parameter Name="importCardinality" Type="System.ComponentModel.Composition.Primitives.ImportCardinality" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="25edb-190">合約類型。</span><span class="sxs-lookup"><span data-stu-id="25edb-190">The contract type.</span></span></typeparam>
        <param name="part"><span data-ttu-id="25edb-191">要搜尋的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-191">The part to search.</span></span></param>
        <param name="importCardinality"><span data-ttu-id="25edb-192">匯入基數。</span><span class="sxs-lookup"><span data-stu-id="25edb-192">The import cardinality.</span></span></param>
        <summary><span data-ttu-id="25edb-193">傳回值，這個值表示指定部分否包含符合指定合約型別與匯入基數的匯入。</span><span class="sxs-lookup"><span data-stu-id="25edb-193">Returns a value that indicates whether the specified part contains an import that matches the specified contract type and import cardinality.</span></span></summary>
        <returns><span data-ttu-id="25edb-194">如果<paramref name="part" />包含型別<paramref name="T" />的匯入定義 (具有指定的匯入基數)，則為 <see langword="true" />，否則為<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="25edb-194"><see langword="true" /> if <paramref name="part" /> contains an import definition of type <paramref name="T" /> that has the specified import cardinality; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SatisfyImportsOnce">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="25edb-195">撰寫指定的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-195">Composes a specified part.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce(class System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SatisfyImportsOnce (compositionService As ICompositionService, attributedPart As Object) As ComposablePart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ SatisfyImportsOnce(System::ComponentModel::Composition::ICompositionService ^ compositionService, System::Object ^ attributedPart);" />
      <MemberSignature Language="F#" Value="static member SatisfyImportsOnce : System.ComponentModel.Composition.ICompositionService * obj -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce (compositionService, attributedPart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositionService" Type="System.ComponentModel.Composition.ICompositionService" RefType="this" />
        <Parameter Name="attributedPart" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="compositionService"><span data-ttu-id="25edb-196">要使用的撰寫服務。</span><span class="sxs-lookup"><span data-stu-id="25edb-196">The composition service to use.</span></span></param>
        <param name="attributedPart"><span data-ttu-id="25edb-197">要撰寫的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-197">The part to compose.</span></span></param>
        <summary><span data-ttu-id="25edb-198">在停用重新撰寫的情況下，使用指定的撰寫服務撰寫指定的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-198">Composes the specified part by using the specified composition service, with recomposition disabled.</span></span></summary>
        <returns><span data-ttu-id="25edb-199">撰寫的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-199">The composed part.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25edb-200">不同於一般的組合，組件包含使用此方法不保證會維持有效如果背後目錄`compositionService`變更。</span><span class="sxs-lookup"><span data-stu-id="25edb-200">Unlike ordinary composition, parts composed with this method are not guaranteed to remain valid if the catalog behind`compositionService` changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SatisfyImportsOnce">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce (this System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Composition.Primitives.ComposablePart SatisfyImportsOnce(class System.ComponentModel.Composition.ICompositionService compositionService, object attributedPart, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::ComponentModel::Composition::Primitives::ComposablePart ^ SatisfyImportsOnce(System::ComponentModel::Composition::ICompositionService ^ compositionService, System::Object ^ attributedPart, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="static member SatisfyImportsOnce : System.ComponentModel.Composition.ICompositionService * obj * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Primitives.ComposablePart" Usage="System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce (compositionService, attributedPart, reflectionContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositionService" Type="System.ComponentModel.Composition.ICompositionService" RefType="this" />
        <Parameter Name="attributedPart" Type="System.Object" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="compositionService"><span data-ttu-id="25edb-201">要使用的撰寫服務。</span><span class="sxs-lookup"><span data-stu-id="25edb-201">The composition service to use.</span></span></param>
        <param name="attributedPart"><span data-ttu-id="25edb-202">要撰寫的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-202">The part to compose.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="25edb-203">組件的反映內容。</span><span class="sxs-lookup"><span data-stu-id="25edb-203">The reflection context for the part.</span></span></param>
        <summary><span data-ttu-id="25edb-204">使用指定的撰寫服務 (其中已停用重新撰寫) 並使用指定的反映內容，以撰寫指定的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-204">Composes the specified part by using the specified composition service, with recomposition disabled and using the specified reflection context.</span></span></summary>
        <returns><span data-ttu-id="25edb-205">撰寫的組件。</span><span class="sxs-lookup"><span data-stu-id="25edb-205">The composed part.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="25edb-206"><paramref name="reflectionContext" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="25edb-206"><paramref name="reflectionContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>