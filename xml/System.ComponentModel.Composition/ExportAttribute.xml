<Type Name="ExportAttribute" FullName="System.ComponentModel.Composition.ExportAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a1b6a515860c8bbd6ada9ca0536436e21610cdaf" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30367082" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ExportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ExportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ExportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Field | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定型別、屬性、欄位或方法可提供特定匯出。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在屬性化程式設計模型中，<xref:System.ComponentModel.Composition.ExportAttribute>會宣告的組件匯出，或提供加入組合容器，可滿足特定合約的物件。 在組合，期間與具有相符的合約的匯入的組件必須填入所匯出物件的相依性。  
  
 <xref:System.ComponentModel.Composition.ExportAttribute>可以裝飾整個類別或屬性、 欄位或方法的類別。 裝飾的整個類別時，如果類別的執行個體是匯出的物件。 如果裝飾類別的成員時，匯出的物件會裝飾的成員的值。  
  
 合約符合取決於主要合約名稱與合約類型。 如需詳細資訊，請參閱<xref:System.ComponentModel.Composition.ImportAttribute>。  
  
   
  
## Examples  
 下列範例示範三個類別以裝飾<xref:System.ComponentModel.Composition.ExportAttribute>，並加以比對的三個匯入。  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ImportAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用預設合約名稱來匯出標記有這個屬性的型別或成員，初始化 <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設的合約名稱是呼叫<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>屬性或欄位型別，或標示了這個屬性的型別上的方法。  
  
 標示了這個屬性的方法必須使用指定的合約名稱或型別<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>或<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>。  
  
 合約名稱使用比較<xref:System.StringComparer.Ordinal%2A>執行區分大小寫且非語言比較的屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName">用來匯出標記有這個屬性之型別或成員的合約名稱，否則為使用預設合約名稱的 <see langword="null" /> 或空字串 ("")。</param>
        <summary>使用指定合約名稱來匯出標記有這個屬性的型別或成員，初始化 <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設的合約名稱是呼叫<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>屬性或欄位型別，或此標示了這個屬性的型別上的方法。  
  
 標示了這個屬性的方法必須使用指定的合約名稱或型別<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>或<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>。  
  
 合約名稱使用比較<xref:System.StringComparer.Ordinal%2A>執行區分大小寫且非語言比較的屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">從其中衍生合約名稱的型別，而該合約名稱會用來匯出標記有這個屬性的型別或成員，否則為使用預設合約名稱的 <see langword="null" />。</param>
        <summary>使用衍生自指定型別之合約名稱來匯出標記有這個屬性的型別或成員，初始化 <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 合約名稱是呼叫<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>方法`contractType`。  
  
 預設的合約名稱是呼叫<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>屬性或欄位型別，或標示了這個屬性的型別上的方法。  
  
 標示了這個屬性的方法必須使用指定的合約名稱或型別<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>或<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>。  
  
 合約名稱使用比較<xref:System.StringComparer.Ordinal%2A>執行區分大小寫且非語言比較的屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName">用來匯出標記有這個屬性之型別或成員的合約名稱，否則為使用預設合約名稱的 <see langword="null" /> 或空字串 ("")。</param>
        <param name="contractType">要匯出的型別。</param>
        <summary>使用指定的合約名稱來匯出指定的型別，初始化 <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得合約名稱，此名稱會用來匯出標記有這個屬性的類型或成員。</summary>
        <value>合約名稱，用來匯出標記有這個屬性的類型或成員。 預設值為空字串 ("")。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得合約型別，該型別是由附加此屬性的成員匯出。</summary>
        <value>要提供之匯出的型別。 預設值為 <see langword="null" />，表示將透過在附加此匯出之成員上查看型別的方式取得型別。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>