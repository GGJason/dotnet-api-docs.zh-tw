<Type Name="ExportAttribute" FullName="System.ComponentModel.Composition.ExportAttribute">
  <TypeSignature Language="C#" Value="public class ExportAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExportAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.ExportAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ExportAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportAttribute : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Field | System.AttributeTargets.Method | System.AttributeTargets.Property, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e8a5d-101">指定型別、屬性、欄位或方法可提供特定匯出。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-101">Specifies that a type, property, field, or method provides a particular export.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8a5d-102">在屬性化程式設計模型中，<xref:System.ComponentModel.Composition.ExportAttribute>會宣告的組件匯出，或提供加入組合容器，可滿足特定合約的物件。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-102">In the Attributed Programming Model, the <xref:System.ComponentModel.Composition.ExportAttribute> declares that a part exports, or provides to the composition container, an object that fulfills a particular contract.</span></span> <span data-ttu-id="e8a5d-103">在組合，期間與具有相符的合約的匯入的組件必須填入所匯出物件的相依性。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-103">During composition, parts with imports that have matching contracts will have those dependencies filled by the exported object.</span></span>  
  
 <span data-ttu-id="e8a5d-104"><xref:System.ComponentModel.Composition.ExportAttribute>可以裝飾整個類別或屬性、 欄位或方法的類別。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-104">The <xref:System.ComponentModel.Composition.ExportAttribute> can decorate either an entire class, or a property, field, or method of a class.</span></span> <span data-ttu-id="e8a5d-105">裝飾的整個類別時，如果類別的執行個體是匯出的物件。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-105">If the entire class is decorated, an instance of the class is the exported object.</span></span> <span data-ttu-id="e8a5d-106">如果裝飾類別的成員時，匯出的物件會裝飾的成員的值。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-106">If a member of a class is decorated, the exported object will be the value of the decorated member.</span></span>  
  
 <span data-ttu-id="e8a5d-107">合約符合取決於主要合約名稱與合約類型。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-107">Whether or not a contract matches is determined primarily by the contract name and the contract type.</span></span> <span data-ttu-id="e8a5d-108">如需詳細資訊，請參閱<xref:System.ComponentModel.Composition.ImportAttribute>。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-108">For more information, see <xref:System.ComponentModel.Composition.ImportAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8a5d-109">下列範例示範三個類別以裝飾<xref:System.ComponentModel.Composition.ExportAttribute>，並加以比對的三個匯入。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-109">The following example shows three classes decorated with the <xref:System.ComponentModel.Composition.ExportAttribute>, and three imports that match them.</span></span>  
  
 [!code-csharp[ImportAndExport#1](~/samples/snippets/csharp/VS_Snippets_Misc/importandexport/cs/program.cs#1)]
 [!code-vb[ImportAndExport#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/importandexport/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Composition.ImportAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e8a5d-110">初始化 <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-110">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8a5d-111">使用預設合約名稱來匯出標記有這個屬性的型別或成員，初始化 <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-111">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under the default contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8a5d-112">預設的合約名稱是呼叫<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>屬性或欄位型別，或標示了這個屬性的型別上的方法。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-112">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="e8a5d-113">標示了這個屬性的方法必須使用指定的合約名稱或型別<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>或<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-113">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="e8a5d-114">合約名稱使用比較<xref:System.StringComparer.Ordinal%2A>執行區分大小寫且非語言比較的屬性。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-114">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="e8a5d-115">用來匯出標記有這個屬性之型別或成員的合約名稱，否則為使用預設合約名稱的 <see langword="null" /> 或空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-115">The contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="e8a5d-116">使用指定合約名稱來匯出標記有這個屬性的型別或成員，初始化 <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-116">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under the specified contract name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8a5d-117">預設的合約名稱是呼叫<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>屬性或欄位型別，或此標示了這個屬性的型別上的方法。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-117">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that this is marked with this attribute.</span></span>  
  
 <span data-ttu-id="e8a5d-118">標示了這個屬性的方法必須使用指定的合約名稱或型別<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>或<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-118">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="e8a5d-119">合約名稱使用比較<xref:System.StringComparer.Ordinal%2A>執行區分大小寫且非語言比較的屬性。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-119">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType"><span data-ttu-id="e8a5d-120">從其中衍生合約名稱的型別，而該合約名稱會用來匯出標記有這個屬性的型別或成員，否則為使用預設合約名稱的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-120">A type from which to derive the contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> to use the default contract name.</span></span></param>
        <summary><span data-ttu-id="e8a5d-121">使用衍生自指定型別之合約名稱來匯出標記有這個屬性的型別或成員，初始化 <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-121">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the type or member marked with this attribute under a contract name derived from the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8a5d-122">合約名稱是呼叫<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>方法`contractType`。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-122">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `contractType`.</span></span>  
  
 <span data-ttu-id="e8a5d-123">預設的合約名稱是呼叫<xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>屬性或欄位型別，或標示了這個屬性的型別上的方法。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-123">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on the property or field type, or on the type that is marked with this attribute.</span></span>  
  
 <span data-ttu-id="e8a5d-124">標示了這個屬性的方法必須使用指定的合約名稱或型別<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>或<xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-124">Methods marked with this attribute must specify a contract name or a type by using either <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29> or <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</span></span>  
  
 <span data-ttu-id="e8a5d-125">合約名稱使用比較<xref:System.StringComparer.Ordinal%2A>執行區分大小寫且非語言比較的屬性。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-125">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportAttribute (string contractName, Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string contractName, class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractName As String, contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportAttribute(System::String ^ contractName, Type ^ contractType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractName"><span data-ttu-id="e8a5d-126">用來匯出標記有這個屬性之型別或成員的合約名稱，否則為使用預設合約名稱的 <see langword="null" /> 或空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-126">The contract name that is used to export the type or member marked with this attribute, or <see langword="null" /> or an empty string ("") to use the default contract name.</span></span></param>
        <param name="contractType"><span data-ttu-id="e8a5d-127">要匯出的型別。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-127">The type to export.</span></span></param>
        <summary><span data-ttu-id="e8a5d-128">使用指定的合約名稱來匯出指定的型別，初始化 <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-128">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.ExportAttribute" /> class, exporting the specified type under the specified contract name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8a5d-129">取得合約名稱，此名稱會用來匯出標記有這個屬性的類型或成員。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-129">Gets the contract name that is used to export the type or member marked with this attribute.</span></span></summary>
        <value><span data-ttu-id="e8a5d-130">合約名稱，用來匯出標記有這個屬性的類型或成員。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-130">The contract name that is used to export the type or member marked with this attribute.</span></span> <span data-ttu-id="e8a5d-131">預設值為空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-131">The default value is an empty string ("").</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.ExportAttribute.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8a5d-132">取得合約型別，該型別是由附加此屬性的成員匯出。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-132">Gets the contract type that is exported by the member that this attribute is attached to.</span></span></summary>
        <value><span data-ttu-id="e8a5d-133">要提供之匯出的型別。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-133">The type of export that is be provided.</span></span> <span data-ttu-id="e8a5d-134">預設值為 <see langword="null" />，表示將透過在附加此匯出之成員上查看型別的方式取得型別。</span><span class="sxs-lookup"><span data-stu-id="e8a5d-134">The default value is <see langword="null" />, which means that the type will be obtained by looking at the type on the member that this export is attached to.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>