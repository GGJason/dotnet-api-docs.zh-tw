<Type Name="Matrix" FullName="System.Windows.Media.Matrix">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ae4b52ebab05faea32abe73fa07b6543840c78f1" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55386912" /></Metadata><TypeSignature Language="C#" Value="public struct Matrix : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Matrix extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Matrix" />
  <TypeSignature Language="VB.NET" Value="Public Structure Matrix&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Matrix : IFormattable" />
  <TypeSignature Language="F#" Value="type Matrix = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.MatrixConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.MatrixValueSerializer))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d1fff-101">表示 3x3 仿射轉換矩陣，可用於 2-D 空間中的轉換。</span><span class="sxs-lookup"><span data-stu-id="d1fff-101">Represents a 3x3 affine transformation matrix used for transformations in 2-D space.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-102">3x3 矩陣用於轉換[!INCLUDE[TLA2#tla_2d](~/includes/tla2sharptla-2d-md.md)]x-y 平面。</span><span class="sxs-lookup"><span data-stu-id="d1fff-102">A 3x3 matrix is used for transformations in a [!INCLUDE[TLA2#tla_2d](~/includes/tla2sharptla-2d-md.md)] x-y plane.</span></span> <span data-ttu-id="d1fff-103">您可以以形成的線性轉換，例如旋轉及傾斜 （傾斜），後面接著轉譯任何數目乘上仿射轉換矩陣。</span><span class="sxs-lookup"><span data-stu-id="d1fff-103">Affine transformation matrices can be multiplied to form any number of linear transformations, such as rotation and skew (shear), followed by translation.</span></span> <span data-ttu-id="d1fff-104">非仿射轉換矩陣有其等於 （0，0，1），因此只有前兩個資料行必須指定成員的最後一個資料行。</span><span class="sxs-lookup"><span data-stu-id="d1fff-104">An affine transformation matrix has its final column equal to (0, 0, 1), so only the members in the first two columns need to be specified.</span></span>  <span data-ttu-id="d1fff-105">請注意向量會表示為資料列向量，非資料行向量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-105">Note that vectors are expressed as row-vectors, not column vectors.</span></span>  
  
 <span data-ttu-id="d1fff-106">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Media.Matrix>會使用以列為主要順序儲存，且具有下列結構：</span><span class="sxs-lookup"><span data-stu-id="d1fff-106">A [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <xref:System.Windows.Media.Matrix> is stored using row-major order and has the following structure:</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="d1fff-107">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-107">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="d1fff-108">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-108">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="d1fff-109">1</span><span class="sxs-lookup"><span data-stu-id="d1fff-109">1</span></span>|  
  
 <span data-ttu-id="d1fff-110">在最後一個資料列中，成員<xref:System.Windows.Media.Matrix.OffsetX%2A>和<xref:System.Windows.Media.Matrix.OffsetY%2A>，代表翻譯值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-110">The members in the last row, <xref:System.Windows.Media.Matrix.OffsetX%2A> and <xref:System.Windows.Media.Matrix.OffsetY%2A>, represent translation values.</span></span>  
  
 <span data-ttu-id="d1fff-111">在方法和屬性，位於轉換矩陣通常指定為只有六個成員，具有的向量，如下所示：</span><span class="sxs-lookup"><span data-stu-id="d1fff-111">In methods and properties, the transformation matrix is usually specified as a vector with only six members, as follows:</span></span>  
  
 <span data-ttu-id="d1fff-112">(<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)</span><span class="sxs-lookup"><span data-stu-id="d1fff-112">(<xref:System.Windows.Media.Matrix.M11%2A>, <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.M22%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, <xref:System.Windows.Media.Matrix.OffsetY%2A>)</span></span>  
  
 <span data-ttu-id="d1fff-113">雖然您可以使用<xref:System.Windows.Media.Matrix>結構，直接將轉譯的個別點，或使用<xref:System.Windows.Media.MatrixTransform>物件，轉換[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]也提供一組可讓您將物件轉換而不需要直接使用矩陣的類別：<xref:System.Windows.Media.RotateTransform>， <xref:System.Windows.Media.ScaleTransform>， <xref:System.Windows.Media.SkewTransform>，和<xref:System.Windows.Media.TranslateTransform>。</span><span class="sxs-lookup"><span data-stu-id="d1fff-113">Although you can use a <xref:System.Windows.Media.Matrix> structure directly to translate individual points, or with a <xref:System.Windows.Media.MatrixTransform> to transform objects, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] also provides a set of classes that enable you to transform objects without working directly with matrices: <xref:System.Windows.Media.RotateTransform>, <xref:System.Windows.Media.ScaleTransform>, <xref:System.Windows.Media.SkewTransform>, and <xref:System.Windows.Media.TranslateTransform>.</span></span>  
  
<a name="xamlAttributeUsage_Matrix"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="d1fff-114">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="d1fff-114">XAML Attribute Usage</span></span>  
  
```  
<object property="m11, m12, m21, m22, offsetX, offsetY"/>  
- or -  
<object property="Identity"/>  
```  
  
<a name="xamlValues_Matrix"></a>   
## <a name="xaml-values"></a><span data-ttu-id="d1fff-115">XAML 值</span><span class="sxs-lookup"><span data-stu-id="d1fff-115">XAML Values</span></span>  
 <span data-ttu-id="d1fff-116">*m11*</span><span class="sxs-lookup"><span data-stu-id="d1fff-116">*m11*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="d1fff-117">中的第一個資料列和第一個資料行，這個值<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="d1fff-117">The value in the first row and first column of this <xref:System.Windows.Media.Matrix>.</span></span> <span data-ttu-id="d1fff-118">如需詳細資訊，請參閱 <xref:System.Windows.Media.Matrix.M11%2A> 屬性 (Property)。</span><span class="sxs-lookup"><span data-stu-id="d1fff-118">For more information, see the <xref:System.Windows.Media.Matrix.M11%2A> property.</span></span>  
  
 <span data-ttu-id="d1fff-119">*m12*</span><span class="sxs-lookup"><span data-stu-id="d1fff-119">*m12*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="d1fff-120">中的第一個資料列和第二個資料行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-120">The value in the first row and second column.</span></span> <span data-ttu-id="d1fff-121">如需詳細資訊，請參閱 <xref:System.Windows.Media.Matrix.M12%2A> 屬性 (Property)。</span><span class="sxs-lookup"><span data-stu-id="d1fff-121">For more information, see the <xref:System.Windows.Media.Matrix.M12%2A> property.</span></span>  
  
 <span data-ttu-id="d1fff-122">*m21*</span><span class="sxs-lookup"><span data-stu-id="d1fff-122">*m21*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="d1fff-123">中的第二個資料列和第一個資料行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-123">The value in the second row and first column.</span></span> <span data-ttu-id="d1fff-124">如需詳細資訊，請參閱 <xref:System.Windows.Media.Matrix.M21%2A> 屬性 (Property)。</span><span class="sxs-lookup"><span data-stu-id="d1fff-124">For more information, see the <xref:System.Windows.Media.Matrix.M21%2A> property.</span></span>  
  
 <span data-ttu-id="d1fff-125">*m22*</span><span class="sxs-lookup"><span data-stu-id="d1fff-125">*m22*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="d1fff-126">中的第二個資料列和第二個資料行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-126">The value in the second row and second column.</span></span> <span data-ttu-id="d1fff-127">如需詳細資訊，請參閱 <xref:System.Windows.Media.Matrix.M22%2A> 屬性 (Property)。</span><span class="sxs-lookup"><span data-stu-id="d1fff-127">For more information, see the <xref:System.Windows.Media.Matrix.M22%2A> property.</span></span>  
  
 <span data-ttu-id="d1fff-128">*offsetX*</span><span class="sxs-lookup"><span data-stu-id="d1fff-128">*offsetX*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="d1fff-129">中的第三個資料列和第一個資料行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-129">The value in the third row and first column.</span></span> <span data-ttu-id="d1fff-130">如需詳細資訊，請參閱 <xref:System.Windows.Media.Matrix.OffsetX%2A> 屬性 (Property)。</span><span class="sxs-lookup"><span data-stu-id="d1fff-130">For more information, see the <xref:System.Windows.Media.Matrix.OffsetX%2A> property.</span></span>  
  
 <span data-ttu-id="d1fff-131">*offsetY*</span><span class="sxs-lookup"><span data-stu-id="d1fff-131">*offsetY*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="d1fff-132">中的第三個資料列和第二個資料行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-132">The value in the third row and second column.</span></span> <span data-ttu-id="d1fff-133">如需詳細資訊，請參閱 <xref:System.Windows.Media.Matrix.OffsetY%2A> 屬性 (Property)。</span><span class="sxs-lookup"><span data-stu-id="d1fff-133">For more information, see the <xref:System.Windows.Media.Matrix.OffsetY%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159044"><span data-ttu-id="d1fff-134">矩陣範例</span><span class="sxs-lookup"><span data-stu-id="d1fff-134">Matrix Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Matrix (double m11, double m12, double m21, double m22, double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 m11, float64 m12, float64 m21, float64 m22, float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (m11 As Double, m12 As Double, m21 As Double, m22 As Double, offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Matrix(double m11, double m12, double m21, double m22, double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Matrix : double * double * double * double * double * double -&gt; System.Windows.Media.Matrix" Usage="new System.Windows.Media.Matrix (m11, m12, m21, m22, offsetX, offsetY)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="m11" Type="System.Double" />
        <Parameter Name="m12" Type="System.Double" />
        <Parameter Name="m21" Type="System.Double" />
        <Parameter Name="m22" Type="System.Double" />
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="m11"><span data-ttu-id="d1fff-135">新 <see cref="T:System.Windows.Media.Matrix" /> 結構的 <see cref="P:System.Windows.Media.Matrix.M11" /> 係數。</span><span class="sxs-lookup"><span data-stu-id="d1fff-135">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M11" /> coefficient.</span></span></param>
        <param name="m12"><span data-ttu-id="d1fff-136">新 <see cref="T:System.Windows.Media.Matrix" /> 結構的 <see cref="P:System.Windows.Media.Matrix.M12" /> 係數。</span><span class="sxs-lookup"><span data-stu-id="d1fff-136">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M12" /> coefficient.</span></span></param>
        <param name="m21"><span data-ttu-id="d1fff-137">新 <see cref="T:System.Windows.Media.Matrix" /> 結構的 <see cref="P:System.Windows.Media.Matrix.M21" /> 係數。</span><span class="sxs-lookup"><span data-stu-id="d1fff-137">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M21" /> coefficient.</span></span></param>
        <param name="m22"><span data-ttu-id="d1fff-138">新 <see cref="T:System.Windows.Media.Matrix" /> 結構的 <see cref="P:System.Windows.Media.Matrix.M22" /> 係數。</span><span class="sxs-lookup"><span data-stu-id="d1fff-138">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.M22" /> coefficient.</span></span></param>
        <param name="offsetX"><span data-ttu-id="d1fff-139">新 <see cref="T:System.Windows.Media.Matrix" /> 結構的 <see cref="P:System.Windows.Media.Matrix.OffsetX" /> 係數。</span><span class="sxs-lookup"><span data-stu-id="d1fff-139">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.OffsetX" /> coefficient.</span></span></param>
        <param name="offsetY"><span data-ttu-id="d1fff-140">新 <see cref="T:System.Windows.Media.Matrix" /> 結構的 <see cref="P:System.Windows.Media.Matrix.OffsetY" /> 係數。</span><span class="sxs-lookup"><span data-stu-id="d1fff-140">The new <see cref="T:System.Windows.Media.Matrix" /> structure's <see cref="P:System.Windows.Media.Matrix.OffsetY" /> coefficient.</span></span></param>
        <summary><span data-ttu-id="d1fff-141">初始化 <see cref="T:System.Windows.Media.Matrix" /> 結構的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="d1fff-141">Initializes a new instance of the <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Windows.Media.Matrix -&gt; unit" Usage="matrix.Append matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="d1fff-142">要在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之後加上的 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-142">The <see cref="T:System.Windows.Media.Matrix" /> structure to append to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></param>
        <summary><span data-ttu-id="d1fff-143">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之後加上指定的 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-143">Appends the specified <see cref="T:System.Windows.Media.Matrix" /> structure to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-144">這項作業相當於乘以這<xref:System.Windows.Media.Matrix>參數的結構`matrix`。</span><span class="sxs-lookup"><span data-stu-id="d1fff-144">This operation is the same as multiplying this <xref:System.Windows.Media.Matrix> structure by the parameter `matrix`.</span></span>  <span data-ttu-id="d1fff-145">矩陣相乘不交替，不過，因此這項作業不是相同乘以參數`matrix`由此<xref:System.Windows.Media.Matrix>結構; 也就是說，(這 \* `matrix`) 不相同 (`matrix` \* 這)。</span><span class="sxs-lookup"><span data-stu-id="d1fff-145">Matrix multiplication is not commutative, though, so this operation is not the same as multiplying the parameter `matrix` by this <xref:System.Windows.Media.Matrix> structure; that is, (this \* `matrix`) is not the same as (`matrix` \* this).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-146">下列範例示範如何附加<xref:System.Windows.Media.Matrix>到另一個結構<xref:System.Windows.Media.Matrix>結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-146">The following example shows how to append a <xref:System.Windows.Media.Matrix> structure to another <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Determinant">
      <MemberSignature Language="C#" Value="public double Determinant { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Determinant" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.Determinant" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Determinant As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Determinant { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Determinant : double" Usage="System.Windows.Media.Matrix.Determinant" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fff-147">取得這個 <see cref="T:System.Windows.Media.Matrix" /> 結構的行列式。</span><span class="sxs-lookup"><span data-stu-id="d1fff-147">Gets the determinant of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="d1fff-148">這個 <see cref="T:System.Windows.Media.Matrix" /> 的行列式。</span><span class="sxs-lookup"><span data-stu-id="d1fff-148">The determinant of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-149">此範例示範如何取得的行列式<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="d1fff-149">This example shows how to get the determinant of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixDeterminantExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixdeterminantexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1fff-150">判斷兩個指定的 <see cref="T:System.Windows.Media.Matrix" /> 結構是否具有相同的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-150">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures have the same values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d1fff-151">A<xref:System.Windows.Media.Matrix>將其值儲存為雙精度浮點數。</span><span class="sxs-lookup"><span data-stu-id="d1fff-151">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="d1fff-152">因為值<xref:System.Double>它，比較兩個執行算術運算時可能會遺失有效位數<xref:System.Double>邏輯上相等的結構可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="d1fff-152">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-153">下列範例示範如何檢查兩個<xref:System.Windows.Media.Matrix>結構是否相等。</span><span class="sxs-lookup"><span data-stu-id="d1fff-153">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="matrix.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="d1fff-154">要比較的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="d1fff-154">The <see cref="T:System.Object" /> to compare.</span></span></param>
        <summary><span data-ttu-id="d1fff-155">判斷所指定 <see cref="T:System.Object" /> 的 <see cref="T:System.Windows.Media.Matrix" /> 結構是否與這個 <see cref="T:System.Windows.Media.Matrix" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="d1fff-155">Determines whether the specified <see cref="T:System.Object" /> is a <see cref="T:System.Windows.Media.Matrix" /> structure that is identical to this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="d1fff-156">如果 <paramref name="o" /> 的 <see cref="T:System.Windows.Media.Matrix" /> 結構與這個 <see cref="T:System.Windows.Media.Matrix" /> 結構相同則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1fff-156"><see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Media.Matrix" /> structure that is identical to this <see cref="T:System.Windows.Media.Matrix" /> structure; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d1fff-157">A<xref:System.Windows.Media.Matrix>將其值儲存為雙精度浮點數。</span><span class="sxs-lookup"><span data-stu-id="d1fff-157">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="d1fff-158">因為值<xref:System.Double>它，比較兩個執行算術運算時可能會遺失有效位數<xref:System.Double>邏輯上相等的結構可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="d1fff-158">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-159">下列範例示範如何檢查兩個<xref:System.Windows.Media.Matrix>結構是否相等。</span><span class="sxs-lookup"><span data-stu-id="d1fff-159">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.Matrix value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Media.Matrix value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Media::Matrix value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Media.Matrix -&gt; bool" Usage="matrix.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1fff-160">要與這個執行個體 (Instance) 比較的 <see cref="T:System.Windows.Media.Matrix" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="d1fff-160">The instance of <see cref="T:System.Windows.Media.Matrix" /> to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="d1fff-161">判斷指定的 <see cref="T:System.Windows.Media.Matrix" /> 結構是否與這個執行個體相同。</span><span class="sxs-lookup"><span data-stu-id="d1fff-161">Determines whether the specified <see cref="T:System.Windows.Media.Matrix" /> structure is identical to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1fff-162">如果執行個體相等，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1fff-162"><see langword="true" /> if instances are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d1fff-163">A<xref:System.Windows.Media.Matrix>將其值儲存為雙精度浮點數。</span><span class="sxs-lookup"><span data-stu-id="d1fff-163">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="d1fff-164">因為值<xref:System.Double>它，比較兩個執行算術運算時可能會遺失有效位數<xref:System.Double>邏輯上相等的結構可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="d1fff-164">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-165">下列範例示範如何檢查兩個<xref:System.Windows.Media.Matrix>結構是否相等。</span><span class="sxs-lookup"><span data-stu-id="d1fff-165">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Equals(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; bool" Usage="System.Windows.Media.Matrix.Equals (matrix1, matrix2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1"><span data-ttu-id="d1fff-166">要比較的第一個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-166">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <param name="matrix2"><span data-ttu-id="d1fff-167">要比較的第二個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-167">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="d1fff-168">判斷兩個指定的 <see cref="T:System.Windows.Media.Matrix" /> 結構是否相同。</span><span class="sxs-lookup"><span data-stu-id="d1fff-168">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are identical.</span></span></summary>
        <returns><span data-ttu-id="d1fff-169">如果 <paramref name="matrix1" /> 和 <paramref name="matrix2" /> 相同則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1fff-169"><see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are identical; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d1fff-170">A<xref:System.Windows.Media.Matrix>將其值儲存為雙精度浮點數。</span><span class="sxs-lookup"><span data-stu-id="d1fff-170">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="d1fff-171">因為值<xref:System.Double>它，比較兩個執行算術運算時可能會遺失有效位數<xref:System.Double>邏輯上相等的結構可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="d1fff-171">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="matrix.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1fff-172">傳回這個 <see cref="T:System.Windows.Media.Matrix" /> 結構的雜湊程式碼。</span><span class="sxs-lookup"><span data-stu-id="d1fff-172">Returns the hash code for this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="d1fff-173">這個執行個體的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="d1fff-173">The hash code for this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasInverse">
      <MemberSignature Language="C#" Value="public bool HasInverse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasInverse" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.HasInverse" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasInverse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasInverse { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasInverse : bool" Usage="System.Windows.Media.Matrix.HasInverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fff-174">取得值，這個值表示這個 <see cref="T:System.Windows.Media.Matrix" /> 結構是否可以反轉。</span><span class="sxs-lookup"><span data-stu-id="d1fff-174">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Matrix" /> structure is invertible.</span></span></summary>
        <value><span data-ttu-id="d1fff-175">如果 <see cref="T:System.Windows.Media.Matrix" /> 具有反轉則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1fff-175"><see langword="true" /> if the <see cref="T:System.Windows.Media.Matrix" /> has an inverse; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d1fff-176">預設為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="d1fff-176">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-177">下列範例會檢查是否<xref:System.Windows.Media.Matrix>是反轉。</span><span class="sxs-lookup"><span data-stu-id="d1fff-177">The following example checks whether a <xref:System.Windows.Media.Matrix> is invertible.</span></span> <span data-ttu-id="d1fff-178">如果可反轉，<xref:System.Windows.Media.Matrix>已反轉。</span><span class="sxs-lookup"><span data-stu-id="d1fff-178">If it is invertible, the <xref:System.Windows.Media.Matrix> is inverted.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixInverseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixinverseexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Media.Matrix Identity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Identity As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::Matrix Identity { System::Windows::Media::Matrix get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Windows.Media.Matrix" Usage="System.Windows.Media.Matrix.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fff-179">取得單位 <see cref="T:System.Windows.Media.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="d1fff-179">Gets an identity <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <value><span data-ttu-id="d1fff-180">單位矩陣。</span><span class="sxs-lookup"><span data-stu-id="d1fff-180">An identity matrix.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-181">身分識別矩陣具有 1 的值在係數 [1，1]，[2，2] [3，3]，在其餘係數中的 0 值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-181">An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</span></span> <span data-ttu-id="d1fff-182">這與設定相互關聯<xref:System.Windows.Media.Matrix.M11%2A>並<xref:System.Windows.Media.Matrix.M22%2A>為 1 和<xref:System.Windows.Media.Matrix.M12%2A>， <xref:System.Windows.Media.Matrix.M21%2A>， <xref:System.Windows.Media.Matrix.OffsetX%2A>，和<xref:System.Windows.Media.Matrix.OffsetY%2A>設為 0。</span><span class="sxs-lookup"><span data-stu-id="d1fff-182">This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0.</span></span> <span data-ttu-id="d1fff-183">在仿射矩陣，這是實作可[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]用於<xref:System.Windows.Media.Matrix>，結構，係數 [3，1]，[3，2]，[3.3] 一定要有值 0,0,1 分別隱含。</span><span class="sxs-lookup"><span data-stu-id="d1fff-183">In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] uses for the <xref:System.Windows.Media.Matrix>, structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="d1fff-184">1</span><span class="sxs-lookup"><span data-stu-id="d1fff-184">1</span></span>|<span data-ttu-id="d1fff-185">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-185">0</span></span>|<span data-ttu-id="d1fff-186">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-186">0</span></span>|  
|<span data-ttu-id="d1fff-187">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-187">0</span></span>|<span data-ttu-id="d1fff-188">1</span><span class="sxs-lookup"><span data-stu-id="d1fff-188">1</span></span>|<span data-ttu-id="d1fff-189">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-189">0</span></span>|  
|<span data-ttu-id="d1fff-190">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-190">0</span></span>|<span data-ttu-id="d1fff-191">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-191">0</span></span>|<span data-ttu-id="d1fff-192">1</span><span class="sxs-lookup"><span data-stu-id="d1fff-192">1</span></span>|  
  
 <span data-ttu-id="d1fff-193">如需身分識別矩陣中，<xref:System.Windows.Media.Matrix.ToString%2A>方法會傳回字串"Identity"而不是係數的<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="d1fff-193">For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string "Identity" instead of the coefficients of the <xref:System.Windows.Media.Matrix>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-194">下列範例示範如何擷取<xref:System.Windows.Media.Matrix.Identity%2A>矩陣。</span><span class="sxs-lookup"><span data-stu-id="d1fff-194">The following example shows how to retrieve the <xref:System.Windows.Media.Matrix.Identity%2A> matrix.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixIdentityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixidentityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.SetIdentity" />
        <altmember cref="P:System.Windows.Media.Matrix.IsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="Invert">
      <MemberSignature Language="C#" Value="public void Invert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Invert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invert();" />
      <MemberSignature Language="F#" Value="member this.Invert : unit -&gt; unit" Usage="matrix.Invert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1fff-195">反轉這個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-195">Inverts this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-196">下列範例會檢查是否<xref:System.Windows.Media.Matrix>結構不可以反轉。</span><span class="sxs-lookup"><span data-stu-id="d1fff-196">The following example checks if a <xref:System.Windows.Media.Matrix> structure is invertible.</span></span> <span data-ttu-id="d1fff-197">如果可反轉，<xref:System.Windows.Media.Matrix>結構已反轉。</span><span class="sxs-lookup"><span data-stu-id="d1fff-197">If it is invertible, the <xref:System.Windows.Media.Matrix> structure is inverted.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixInverseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixinverseexample_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d1fff-198"><see cref="T:System.Windows.Media.Matrix" /> 結構是不可以反轉的。</span><span class="sxs-lookup"><span data-stu-id="d1fff-198">The <see cref="T:System.Windows.Media.Matrix" /> structure is not invertible.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsIdentity : bool" Usage="System.Windows.Media.Matrix.IsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fff-199">取得值，這個值表示這個 <see cref="T:System.Windows.Media.Matrix" /> 結構是否為單位矩陣。</span><span class="sxs-lookup"><span data-stu-id="d1fff-199">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Matrix" /> structure is an identity matrix.</span></span></summary>
        <value><span data-ttu-id="d1fff-200">如果 <see cref="T:System.Windows.Media.Matrix" /> 結構是單位矩陣則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1fff-200"><see langword="true" /> if the <see cref="T:System.Windows.Media.Matrix" /> structure is an identity matrix; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d1fff-201">預設為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="d1fff-201">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-202">身分識別矩陣具有 1 的值在係數 [1，1]，[2，2] [3，3]，在其餘係數中的 0 值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-202">An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</span></span> <span data-ttu-id="d1fff-203">這與設定相互關聯<xref:System.Windows.Media.Matrix.M11%2A>並<xref:System.Windows.Media.Matrix.M22%2A>為 1 和<xref:System.Windows.Media.Matrix.M12%2A>， <xref:System.Windows.Media.Matrix.M21%2A>， <xref:System.Windows.Media.Matrix.OffsetX%2A>，和<xref:System.Windows.Media.Matrix.OffsetY%2A>設為 0。</span><span class="sxs-lookup"><span data-stu-id="d1fff-203">This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0.</span></span> <span data-ttu-id="d1fff-204">在仿射矩陣，這是實作可[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]用於<xref:System.Windows.Media.Matrix>結構，係數 [3，1]，[3，2]，[3.3] 一定要有值 0,0,1 分別隱含。</span><span class="sxs-lookup"><span data-stu-id="d1fff-204">In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] uses for the <xref:System.Windows.Media.Matrix> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="d1fff-205">1</span><span class="sxs-lookup"><span data-stu-id="d1fff-205">1</span></span>|<span data-ttu-id="d1fff-206">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-206">0</span></span>|<span data-ttu-id="d1fff-207">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-207">0</span></span>|  
|<span data-ttu-id="d1fff-208">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-208">0</span></span>|<span data-ttu-id="d1fff-209">1</span><span class="sxs-lookup"><span data-stu-id="d1fff-209">1</span></span>|<span data-ttu-id="d1fff-210">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-210">0</span></span>|  
|<span data-ttu-id="d1fff-211">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-211">0</span></span>|<span data-ttu-id="d1fff-212">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-212">0</span></span>|<span data-ttu-id="d1fff-213">1</span><span class="sxs-lookup"><span data-stu-id="d1fff-213">1</span></span>|  
  
 <span data-ttu-id="d1fff-214">如需身分識別矩陣中，<xref:System.Windows.Media.Matrix.ToString%2A>方法會傳回字串"Identity"，而不是係數的<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="d1fff-214">For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string "Identity", instead of the coefficients of the <xref:System.Windows.Media.Matrix>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Matrix.Identity" />
        <altmember cref="M:System.Windows.Media.Matrix.SetIdentity" />
      </Docs>
    </Member>
    <Member MemberName="M11">
      <MemberSignature Language="C#" Value="public double M11 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M11" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M11" />
      <MemberSignature Language="VB.NET" Value="Public Property M11 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M11 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M11 : double with get, set" Usage="System.Windows.Media.Matrix.M11" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fff-215">取得或設定這個 <see cref="T:System.Windows.Media.Matrix" /> 之結構第一列第一行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-215">Gets or sets the value of the first row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="d1fff-216">這個 <see cref="T:System.Windows.Media.Matrix" /> 之第一列第一行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-216">The value of the first row and first column of this <see cref="T:System.Windows.Media.Matrix" />.</span></span> <span data-ttu-id="d1fff-217">預設值為 1。</span><span class="sxs-lookup"><span data-stu-id="d1fff-217">The default value is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-218">下列範例示範如何乘以兩個<xref:System.Windows.Media.Matrix>結構，以及如何將值指派給<xref:System.Windows.Media.Matrix>時宣告，並宣告結構後。</span><span class="sxs-lookup"><span data-stu-id="d1fff-218">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M12">
      <MemberSignature Language="C#" Value="public double M12 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M12" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M12" />
      <MemberSignature Language="VB.NET" Value="Public Property M12 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M12 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M12 : double with get, set" Usage="System.Windows.Media.Matrix.M12" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fff-219">取得或設定這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第一列第二行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-219">Gets or sets the value of the first row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="d1fff-220">這個 <see cref="T:System.Windows.Media.Matrix" /> 之第一列第二行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-220">The value of the first row and second column of this <see cref="T:System.Windows.Media.Matrix" />.</span></span> <span data-ttu-id="d1fff-221">預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="d1fff-221">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-222">下表顯示的版面配置<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="d1fff-222">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="d1fff-223">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-223">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="d1fff-224">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-224">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="d1fff-225">1</span><span class="sxs-lookup"><span data-stu-id="d1fff-225">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-226">下列範例示範如何乘以兩個<xref:System.Windows.Media.Matrix>結構，以及如何將值指派給<xref:System.Windows.Media.Matrix>時宣告，並宣告結構後。</span><span class="sxs-lookup"><span data-stu-id="d1fff-226">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M21">
      <MemberSignature Language="C#" Value="public double M21 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M21" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M21" />
      <MemberSignature Language="VB.NET" Value="Public Property M21 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M21 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M21 : double with get, set" Usage="System.Windows.Media.Matrix.M21" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fff-227">取得或設定這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第二列第一行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-227">Gets or sets the value of the second row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="d1fff-228">這個 <see cref="T:System.Windows.Media.Matrix" /> 之第二列第一行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-228">The value of the second row and first column of this <see cref="T:System.Windows.Media.Matrix" />.</span></span> <span data-ttu-id="d1fff-229">預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="d1fff-229">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-230">下表顯示的版面配置<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="d1fff-230">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="d1fff-231">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-231">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="d1fff-232">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-232">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="d1fff-233">1</span><span class="sxs-lookup"><span data-stu-id="d1fff-233">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-234">下列範例示範如何乘以兩個<xref:System.Windows.Media.Matrix>結構，以及如何將值指派給<xref:System.Windows.Media.Matrix>時宣告，並宣告結構後。</span><span class="sxs-lookup"><span data-stu-id="d1fff-234">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="M22">
      <MemberSignature Language="C#" Value="public double M22 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 M22" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.M22" />
      <MemberSignature Language="VB.NET" Value="Public Property M22 As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double M22 { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.M22 : double with get, set" Usage="System.Windows.Media.Matrix.M22" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fff-235">取得或設定這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第二列第二行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-235">Gets or sets the value of the second row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="d1fff-236">這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第二列第二行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-236">The value of the second row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span> <span data-ttu-id="d1fff-237">預設值為 1。</span><span class="sxs-lookup"><span data-stu-id="d1fff-237">The default value is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-238">下表顯示的版面配置<xref:System.Windows.Media.Matrix>結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-238">The following table shows the layout of a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="d1fff-239">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-239">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="d1fff-240">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-240">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="d1fff-241">1</span><span class="sxs-lookup"><span data-stu-id="d1fff-241">1</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-242">下列範例示範如何乘以兩個<xref:System.Windows.Media.Matrix>結構，以及如何將值指派給<xref:System.Windows.Media.Matrix>時宣告，並宣告結構後。</span><span class="sxs-lookup"><span data-stu-id="d1fff-242">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures and how to assign values to a <xref:System.Windows.Media.Matrix> when it is declared, and after the structure is declared.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Multiply (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Matrix Multiply(valuetype System.Windows.Media.Matrix trans1, valuetype System.Windows.Media.Matrix trans2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (trans1 As Matrix, trans2 As Matrix) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix Multiply(System::Windows::Media::Matrix trans1, System::Windows::Media::Matrix trans2);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; System.Windows.Media.Matrix" Usage="System.Windows.Media.Matrix.Multiply (trans1, trans2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trans1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="trans2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="trans1"><span data-ttu-id="d1fff-243">要相乘的第一個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-243">The first <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <param name="trans2"><span data-ttu-id="d1fff-244">要相乘的第二個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-244">The second <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <summary><span data-ttu-id="d1fff-245">將 <see cref="T:System.Windows.Media.Matrix" /> 結構乘以另一個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-245">Multiplies a <see cref="T:System.Windows.Media.Matrix" /> structure by another <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="d1fff-246"><paramref name="trans1" /> 乘以 <paramref name="trans2" /> 的結果。</span><span class="sxs-lookup"><span data-stu-id="d1fff-246">The result of multiplying <paramref name="trans1" /> by <paramref name="trans2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-247">無法交替矩陣相乘。</span><span class="sxs-lookup"><span data-stu-id="d1fff-247">Matrix multiplication is not commutative.</span></span> <span data-ttu-id="d1fff-248">乘以`trans1`所`trans2`不是相同乘以`trans2`由`trans1`。</span><span class="sxs-lookup"><span data-stu-id="d1fff-248">Multiplying `trans1` by `trans2` is not the same as multiplying `trans2` by `trans1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-249">下列範例示範如何乘以兩個<xref:System.Windows.Media.Matrix>結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-249">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="OffsetX">
      <MemberSignature Language="C#" Value="public double OffsetX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OffsetX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.OffsetX" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetX As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OffsetX { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetX : double with get, set" Usage="System.Windows.Media.Matrix.OffsetX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fff-250">取得或設定這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第三列第一行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-250">Gets or sets the value of the third row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="d1fff-251">這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第三列第一行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-251">The value of the third row and first column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span> <span data-ttu-id="d1fff-252">預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="d1fff-252">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-253"><xref:System.Windows.Media.Matrix.OffsetX%2A>屬性會如此命名是因為它會指定要轉移沿著 x 軸座標空間的數量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-253">The <xref:System.Windows.Media.Matrix.OffsetX%2A> property is so named because it specifies the amount to translate the coordinate space along the x-axis.</span></span>  
  
 <span data-ttu-id="d1fff-254">下表顯示的版面配置<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="d1fff-254">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="d1fff-255">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-255">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="d1fff-256">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-256">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="d1fff-257">1</span><span class="sxs-lookup"><span data-stu-id="d1fff-257">1</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetY">
      <MemberSignature Language="C#" Value="public double OffsetY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OffsetY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Matrix.OffsetY" />
      <MemberSignature Language="VB.NET" Value="Public Property OffsetY As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OffsetY { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.OffsetY : double with get, set" Usage="System.Windows.Media.Matrix.OffsetY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1fff-258">取得或設定這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第三列第二行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-258">Gets or sets the value of the third row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <value><span data-ttu-id="d1fff-259">這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之第三列第二行的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-259">The value of the third row and second column of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span> <span data-ttu-id="d1fff-260">預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="d1fff-260">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-261"><xref:System.Windows.Media.Matrix.OffsetY%2A>屬性會如此命名是因為它會指定要轉移沿著 y 軸座標空間的數量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-261">The <xref:System.Windows.Media.Matrix.OffsetY%2A> property is so named because it specifies the amount to translate the coordinate space along the y-axis.</span></span>  
  
 <span data-ttu-id="d1fff-262">下表顯示的版面配置<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="d1fff-262">The following table shows the layout of a <xref:System.Windows.Media.Matrix>.</span></span>  
  
||||  
|-|-|-|  
|<xref:System.Windows.Media.Matrix.M11%2A>|<xref:System.Windows.Media.Matrix.M12%2A>|<span data-ttu-id="d1fff-263">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-263">0</span></span>|  
|<xref:System.Windows.Media.Matrix.M21%2A>|<xref:System.Windows.Media.Matrix.M22%2A>|<span data-ttu-id="d1fff-264">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-264">0</span></span>|  
|<xref:System.Windows.Media.Matrix.OffsetX%2A>|<xref:System.Windows.Media.Matrix.OffsetY%2A>|<span data-ttu-id="d1fff-265">1</span><span class="sxs-lookup"><span data-stu-id="d1fff-265">1</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Equality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; bool" Usage="matrix1 = matrix2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1"><span data-ttu-id="d1fff-266">要比較的第一個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-266">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <param name="matrix2"><span data-ttu-id="d1fff-267">要比較的第二個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-267">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="d1fff-268">判斷兩個指定的 <see cref="T:System.Windows.Media.Matrix" /> 結構是否相同。</span><span class="sxs-lookup"><span data-stu-id="d1fff-268">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are identical.</span></span></summary>
        <returns><span data-ttu-id="d1fff-269">如果 <paramref name="matrix1" /> 和 <paramref name="matrix2" /> 相同則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1fff-269"><see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are identical; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d1fff-270">A<xref:System.Windows.Media.Matrix>將其值儲存為雙精度浮點數。</span><span class="sxs-lookup"><span data-stu-id="d1fff-270">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="d1fff-271">因為值<xref:System.Double>它，比較兩個執行算術運算時可能會遺失有效位數<xref:System.Double>邏輯上相等的結構可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="d1fff-271">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-272">下列範例示範如何檢查兩個<xref:System.Windows.Media.Matrix>結構是否相等。</span><span class="sxs-lookup"><span data-stu-id="d1fff-272">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Media.Matrix.Equals" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.Matrix matrix1, System.Windows.Media.Matrix matrix2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.Matrix matrix1, valuetype System.Windows.Media.Matrix matrix2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Inequality(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (matrix1 As Matrix, matrix2 As Matrix) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::Matrix matrix1, System::Windows::Media::Matrix matrix2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; bool" Usage="System.Windows.Media.Matrix.op_Inequality (matrix1, matrix2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="matrix2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix1"><span data-ttu-id="d1fff-273">要比較的第一個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-273">The first <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <param name="matrix2"><span data-ttu-id="d1fff-274">要比較的第二個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-274">The second <see cref="T:System.Windows.Media.Matrix" /> structure to compare.</span></span></param>
        <summary><span data-ttu-id="d1fff-275">判斷兩個指定的 <see cref="T:System.Windows.Media.Matrix" /> 結構是否不同。</span><span class="sxs-lookup"><span data-stu-id="d1fff-275">Determines whether the two specified <see cref="T:System.Windows.Media.Matrix" /> structures are not identical.</span></span></summary>
        <returns><span data-ttu-id="d1fff-276">如果 <paramref name="matrix1" /> 和 <paramref name="matrix2" /> 不同則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d1fff-276"><see langword="true" /> if <paramref name="matrix1" /> and <paramref name="matrix2" /> are not identical; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="d1fff-277">A<xref:System.Windows.Media.Matrix>將其值儲存為雙精度浮點數。</span><span class="sxs-lookup"><span data-stu-id="d1fff-277">A <xref:System.Windows.Media.Matrix> stores its values as doubles.</span></span> <span data-ttu-id="d1fff-278">因為值<xref:System.Double>它，比較兩個執行算術運算時可能會遺失有效位數<xref:System.Double>邏輯上相等的結構可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="d1fff-278">Because the value of a <xref:System.Double> can lose precision when arithmetic operations are performed on it, a comparison between two <xref:System.Double> structures that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-279">下列範例示範如何檢查兩個<xref:System.Windows.Media.Matrix>結構是否相等。</span><span class="sxs-lookup"><span data-stu-id="d1fff-279">The following example shows how to check two <xref:System.Windows.Media.Matrix> structures for equality.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixEqualityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixequalityexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix operator * (System.Windows.Media.Matrix trans1, System.Windows.Media.Matrix trans2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Media.Matrix op_Multiply(valuetype System.Windows.Media.Matrix trans1, valuetype System.Windows.Media.Matrix trans2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (trans1 As Matrix, trans2 As Matrix) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix operator *(System::Windows::Media::Matrix trans1, System::Windows::Media::Matrix trans2);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Windows.Media.Matrix * System.Windows.Media.Matrix -&gt; System.Windows.Media.Matrix" Usage="trans1 * trans2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trans1" Type="System.Windows.Media.Matrix" />
        <Parameter Name="trans2" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="trans1"><span data-ttu-id="d1fff-280">要相乘的第一個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-280">The first <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <param name="trans2"><span data-ttu-id="d1fff-281">要相乘的第二個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-281">The second <see cref="T:System.Windows.Media.Matrix" /> structure to multiply.</span></span></param>
        <summary><span data-ttu-id="d1fff-282">將 <see cref="T:System.Windows.Media.Matrix" /> 結構乘以另一個 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-282">Multiplies a <see cref="T:System.Windows.Media.Matrix" /> structure by another <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="d1fff-283"><paramref name="trans1" /> 乘以 <paramref name="trans2" /> 的結果。</span><span class="sxs-lookup"><span data-stu-id="d1fff-283">The result of multiplying <paramref name="trans1" /> by <paramref name="trans2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-284">無法交替矩陣相乘。</span><span class="sxs-lookup"><span data-stu-id="d1fff-284">Matrix multiplication is not commutative.</span></span> <span data-ttu-id="d1fff-285">乘以`trans1`所`trans2`不是相同乘以`trans2`由`trans1`。</span><span class="sxs-lookup"><span data-stu-id="d1fff-285">Multiplying `trans1` by `trans2` is not the same as multiplying `trans2` by `trans1`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-286">下列範例示範如何乘以兩個<xref:System.Windows.Media.Matrix>結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-286">The following example shows how to multiply two <xref:System.Windows.Media.Matrix> structures.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixMultiplicationExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixmultiplicationexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Matrix Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Matrix Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Matrix Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Media.Matrix" Usage="System.Windows.Media.Matrix.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="d1fff-287">矩陣的 <see cref="T:System.String" /> 表示。</span><span class="sxs-lookup"><span data-stu-id="d1fff-287">The <see cref="T:System.String" /> representation of the matrix.</span></span></param>
        <summary><span data-ttu-id="d1fff-288">將矩陣的 <see cref="T:System.String" /> 表示轉換為對等的 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-288">Converts a <see cref="T:System.String" /> representation of a matrix into the equivalent <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="d1fff-289">對等的 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-289">The equivalent <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-290">下列範例示範如何將轉換成矩陣的字串表示<xref:System.Windows.Media.Matrix>結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-290">The following example shows how to convert a string representation of a matrix into a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixParseExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixparseexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepend">
      <MemberSignature Language="C#" Value="public void Prepend (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Prepend(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Prepend(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepend(System::Windows::Media::Matrix matrix);" />
      <MemberSignature Language="F#" Value="member this.Prepend : System.Windows.Media.Matrix -&gt; unit" Usage="matrix.Prepend matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="d1fff-291">要在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上的 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-291">The <see cref="T:System.Windows.Media.Matrix" /> structure to prepend to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></param>
        <summary><span data-ttu-id="d1fff-292">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上指定的 <see cref="T:System.Windows.Media.Matrix" /> 結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-292">Prepends the specified <see cref="T:System.Windows.Media.Matrix" /> structure onto this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-293">這項作業會乘以參數相同`matrix`由此<xref:System.Windows.Media.Matrix>結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-293">This operation is the same as multiplying the parameter `matrix` by this <xref:System.Windows.Media.Matrix> structure.</span></span> <span data-ttu-id="d1fff-294">矩陣相乘不交替，不過，因此這項作業不是相同乘以這<xref:System.Windows.Media.Matrix>參數的結構`matrix`，亦即`matrix`\* 這不是與此相同 \* `matrix`。</span><span class="sxs-lookup"><span data-stu-id="d1fff-294">Matrix multiplication is not commutative, however, so this operation is not the same as multiplying this <xref:System.Windows.Media.Matrix> structure by the parameter `matrix`; that is, `matrix` \* this is not the same as this \* `matrix`.</span></span>  
  
 <span data-ttu-id="d1fff-295">在複合的轉換中，個別轉換的順序很重要的。</span><span class="sxs-lookup"><span data-stu-id="d1fff-295">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="d1fff-296">例如，如果先旋轉，再調整，然後轉譯，得到不同的結果比先轉換再旋轉，然後調整。</span><span class="sxs-lookup"><span data-stu-id="d1fff-296">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="d1fff-297">順序很重要的其中一個原因是，例如旋轉和縮放轉換會完成方面座標系統的原點。</span><span class="sxs-lookup"><span data-stu-id="d1fff-297">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="d1fff-298">縮放中心位於原點的物件產生不同的結果調整已離開來源的物件。</span><span class="sxs-lookup"><span data-stu-id="d1fff-298">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="d1fff-299">同樣地，旋轉的中心位於原點的物件所產生的旋轉物件已移動離開來源不同的結果。</span><span class="sxs-lookup"><span data-stu-id="d1fff-299">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-300">下列範例示範如何在前面加上<xref:System.Windows.Media.Matrix>拖曳至另一個<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="d1fff-300">The following example shows how to prepend a <xref:System.Windows.Media.Matrix> onto another <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.op_Multiply(System.Windows.Media.Matrix,System.Windows.Media.Matrix)" />
        <altmember cref="M:System.Windows.Media.Matrix.Append(System.Windows.Media.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (double angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rotate(float64 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Rotate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (angle As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(double angle);" />
      <MemberSignature Language="F#" Value="member this.Rotate : double -&gt; unit" Usage="matrix.Rotate angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="d1fff-301">旋轉的角度。</span><span class="sxs-lookup"><span data-stu-id="d1fff-301">The angle of rotation.</span></span></param>
        <summary><span data-ttu-id="d1fff-302">使這個 <see cref="T:System.Windows.Media.Matrix" /> 結構繞著原點旋轉指定的角度。</span><span class="sxs-lookup"><span data-stu-id="d1fff-302">Applies a rotation of the specified angle about the origin of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-303">下列範例顯示如何旋轉<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="d1fff-303">The following example shows how to rotate a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="RotateAt">
      <MemberSignature Language="C#" Value="public void RotateAt (double angle, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAt(float64 angle, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAt (angle As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAt(double angle, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.RotateAt : double * double * double -&gt; unit" Usage="matrix.RotateAt (angle, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="d1fff-304">這個矩陣的旋轉角度 (以度數為單位)。</span><span class="sxs-lookup"><span data-stu-id="d1fff-304">The angle, in degrees, by which to rotate this matrix.</span></span></param>
        <param name="centerX"><span data-ttu-id="d1fff-305">這個矩陣的旋轉中心點 X 座標。</span><span class="sxs-lookup"><span data-stu-id="d1fff-305">The x-coordinate of the point about which to rotate this matrix.</span></span></param>
        <param name="centerY"><span data-ttu-id="d1fff-306">這個矩陣的旋轉中心點 Y 座標。</span><span class="sxs-lookup"><span data-stu-id="d1fff-306">The y-coordinate of the point about which to rotate this matrix.</span></span></param>
        <summary><span data-ttu-id="d1fff-307">繞著指定的點旋轉這個矩陣。</span><span class="sxs-lookup"><span data-stu-id="d1fff-307">Rotates this matrix about the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-308">下列範例顯示如何旋轉<xref:System.Windows.Media.Matrix>有關指定的點。</span><span class="sxs-lookup"><span data-stu-id="d1fff-308">The following example shows how to rotate a <xref:System.Windows.Media.Matrix> about a specified point.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixRotateAboutPointExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixrotateaboutpointexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateAtPrepend">
      <MemberSignature Language="C#" Value="public void RotateAtPrepend (double angle, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateAtPrepend(float64 angle, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateAtPrepend (angle As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateAtPrepend(double angle, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.RotateAtPrepend : double * double * double -&gt; unit" Usage="matrix.RotateAtPrepend (angle, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="d1fff-309">旋轉角度 (以度數為單位)。</span><span class="sxs-lookup"><span data-stu-id="d1fff-309">The rotation angle, in degrees.</span></span></param>
        <param name="centerX"><span data-ttu-id="d1fff-310">旋轉中心的 X 座標。</span><span class="sxs-lookup"><span data-stu-id="d1fff-310">The x-coordinate of the rotation center.</span></span></param>
        <param name="centerY"><span data-ttu-id="d1fff-311">旋轉中心的 Y 座標。</span><span class="sxs-lookup"><span data-stu-id="d1fff-311">The y-coordinate of the rotation center.</span></span></param>
        <summary><span data-ttu-id="d1fff-312">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上繞著指定的點進行的所指定角度的旋轉。</span><span class="sxs-lookup"><span data-stu-id="d1fff-312">Prepends a rotation of the specified angle at the specified point to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-313">在複合的轉換中，個別轉換的順序很重要的。</span><span class="sxs-lookup"><span data-stu-id="d1fff-313">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="d1fff-314">例如，如果先旋轉，再調整，然後轉譯，得到不同的結果比先轉換再旋轉，然後調整。</span><span class="sxs-lookup"><span data-stu-id="d1fff-314">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="d1fff-315">順序很重要的其中一個原因是，例如旋轉和縮放轉換會完成方面座標系統的原點。</span><span class="sxs-lookup"><span data-stu-id="d1fff-315">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="d1fff-316">縮放中心位於原點的物件產生不同的結果調整已離開來源的物件。</span><span class="sxs-lookup"><span data-stu-id="d1fff-316">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="d1fff-317">同樣地，旋轉的中心位於原點的物件所產生的旋轉物件已移動離開來源不同的結果。</span><span class="sxs-lookup"><span data-stu-id="d1fff-317">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-318">下列範例示範如何在前面加上旋轉<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="d1fff-318">The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependrotateexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotatePrepend">
      <MemberSignature Language="C#" Value="public void RotatePrepend (double angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotatePrepend(float64 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.RotatePrepend(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotatePrepend (angle As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotatePrepend(double angle);" />
      <MemberSignature Language="F#" Value="member this.RotatePrepend : double -&gt; unit" Usage="matrix.RotatePrepend angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="d1fff-319">要在前面加上的旋轉角度。</span><span class="sxs-lookup"><span data-stu-id="d1fff-319">The angle of rotation to prepend.</span></span></param>
        <summary><span data-ttu-id="d1fff-320">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上所指定角度的旋轉。</span><span class="sxs-lookup"><span data-stu-id="d1fff-320">Prepends a rotation of the specified angle to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-321">在複合的轉換中，個別轉換的順序很重要的。</span><span class="sxs-lookup"><span data-stu-id="d1fff-321">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="d1fff-322">例如，如果先旋轉，再調整，然後轉譯，得到不同的結果比先轉換再旋轉，然後調整。</span><span class="sxs-lookup"><span data-stu-id="d1fff-322">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="d1fff-323">順序很重要的其中一個原因是，例如旋轉和縮放轉換會完成方面座標系統的原點。</span><span class="sxs-lookup"><span data-stu-id="d1fff-323">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="d1fff-324">縮放中心位於原點的物件產生不同的結果調整已離開來源的物件。</span><span class="sxs-lookup"><span data-stu-id="d1fff-324">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="d1fff-325">同樣地，旋轉的中心位於原點的物件所產生的旋轉物件已移動離開來源不同的結果。</span><span class="sxs-lookup"><span data-stu-id="d1fff-325">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-326">下列範例示範如何在前面加上旋轉<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="d1fff-326">The following example shows how to prepend a rotation to a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependRotateExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependrotateexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Rotate(System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAt(System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.RotateAtPrepend(System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.Scale : double * double -&gt; unit" Usage="matrix.Scale (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="d1fff-327">要沿著 X 軸縮放這個 <see cref="T:System.Windows.Media.Matrix" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-327">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="scaleY"><span data-ttu-id="d1fff-328">要沿著 Y 軸縮放這個 <see cref="T:System.Windows.Media.Matrix" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-328">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <summary><span data-ttu-id="d1fff-329">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上指定的縮放向量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-329">Appends the specified scale vector to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-330">下列範例示範如何調整<xref:System.Windows.Media.Matrix>結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-330">The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleAt">
      <MemberSignature Language="C#" Value="public void ScaleAt (double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleAt(float64 scaleX, float64 scaleY, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleAt (scaleX As Double, scaleY As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleAt(double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.ScaleAt : double * double * double * double -&gt; unit" Usage="matrix.ScaleAt (scaleX, scaleY, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="d1fff-331">要沿著 X 軸縮放這個 <see cref="T:System.Windows.Media.Matrix" /> 的量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-331">The amount by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="scaleY"><span data-ttu-id="d1fff-332">要沿著 Y 軸縮放這個 <see cref="T:System.Windows.Media.Matrix" /> 的量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-332">The amount by which to scale this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <param name="centerX"><span data-ttu-id="d1fff-333">縮放作業中心點的 X 座標。</span><span class="sxs-lookup"><span data-stu-id="d1fff-333">The x-coordinate of the scale operation's center point.</span></span></param>
        <param name="centerY"><span data-ttu-id="d1fff-334">縮放作業中心點的 Y 座標。</span><span class="sxs-lookup"><span data-stu-id="d1fff-334">The y-coordinate of the scale operation's center point.</span></span></param>
        <summary><span data-ttu-id="d1fff-335">以指定的點為中心，將這個 <see cref="T:System.Windows.Media.Matrix" /> 縮放指定的量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-335">Scales this <see cref="T:System.Windows.Media.Matrix" /> by the specified amount about the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-336">下列範例示範如何調整<xref:System.Windows.Media.Matrix>結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-336">The following example shows how to scale a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleAtPrepend">
      <MemberSignature Language="C#" Value="public void ScaleAtPrepend (double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleAtPrepend(float64 scaleX, float64 scaleY, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleAtPrepend (scaleX As Double, scaleY As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleAtPrepend(double scaleX, double scaleY, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="member this.ScaleAtPrepend : double * double * double * double -&gt; unit" Usage="matrix.ScaleAtPrepend (scaleX, scaleY, centerX, centerY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="d1fff-337">X 軸的縮放因數。</span><span class="sxs-lookup"><span data-stu-id="d1fff-337">The x-axis scale factor.</span></span></param>
        <param name="scaleY"><span data-ttu-id="d1fff-338">Y 軸的縮放因數。</span><span class="sxs-lookup"><span data-stu-id="d1fff-338">The y-axis scale factor.</span></span></param>
        <param name="centerX"><span data-ttu-id="d1fff-339">要做為縮放作業中心點的 X 座標。</span><span class="sxs-lookup"><span data-stu-id="d1fff-339">The x-coordinate of the point about which the scale operation is performed.</span></span></param>
        <param name="centerY"><span data-ttu-id="d1fff-340">要做為縮放作業中心點的 Y 座標。</span><span class="sxs-lookup"><span data-stu-id="d1fff-340">The y-coordinate of the point about which the scale operation is performed.</span></span></param>
        <summary><span data-ttu-id="d1fff-341">在這個 <see cref="T:System.Windows.Media.Matrix" /> 前面加上以指定的點為中心的所指定縮放。</span><span class="sxs-lookup"><span data-stu-id="d1fff-341">Prepends the specified scale about the specified point of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-342">在複合的轉換中，個別轉換的順序很重要的。</span><span class="sxs-lookup"><span data-stu-id="d1fff-342">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="d1fff-343">例如，如果先旋轉，再調整，然後轉譯，得到不同的結果比先轉換再旋轉，然後調整。</span><span class="sxs-lookup"><span data-stu-id="d1fff-343">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="d1fff-344">順序很重要的其中一個原因是，例如旋轉和縮放轉換會完成方面座標系統的原點。</span><span class="sxs-lookup"><span data-stu-id="d1fff-344">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="d1fff-345">縮放中心位於原點的物件產生不同的結果調整已離開來源的物件。</span><span class="sxs-lookup"><span data-stu-id="d1fff-345">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="d1fff-346">同樣地，旋轉的中心位於原點的物件所產生的旋轉物件已移動離開來源不同的結果。</span><span class="sxs-lookup"><span data-stu-id="d1fff-346">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-347">下列範例示範如何在前面加上調整規模以<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="d1fff-347">The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScalePrepend">
      <MemberSignature Language="C#" Value="public void ScalePrepend (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScalePrepend(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ScalePrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScalePrepend (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScalePrepend(double scaleX, double scaleY);" />
      <MemberSignature Language="F#" Value="member this.ScalePrepend : double * double -&gt; unit" Usage="matrix.ScalePrepend (scaleX, scaleY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX"><span data-ttu-id="d1fff-348">要沿著 X 軸縮放這個 <see cref="T:System.Windows.Media.Matrix" /> 結構的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-348">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> structure along the x-axis.</span></span></param>
        <param name="scaleY"><span data-ttu-id="d1fff-349">要沿著 Y 軸縮放這個 <see cref="T:System.Windows.Media.Matrix" /> 結構的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-349">The value by which to scale this <see cref="T:System.Windows.Media.Matrix" /> structure along the y-axis.</span></span></param>
        <summary><span data-ttu-id="d1fff-350">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上指定的縮放向量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-350">Prepends the specified scale vector to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-351">在複合的轉換中，個別轉換的順序很重要的。</span><span class="sxs-lookup"><span data-stu-id="d1fff-351">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="d1fff-352">例如，如果先旋轉，再調整，然後轉譯，得到不同的結果比先轉換再旋轉，然後調整。</span><span class="sxs-lookup"><span data-stu-id="d1fff-352">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="d1fff-353">順序很重要的其中一個原因是，例如旋轉和縮放轉換會完成方面座標系統的原點。</span><span class="sxs-lookup"><span data-stu-id="d1fff-353">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="d1fff-354">縮放中心位於原點的物件產生不同的結果調整已離開來源的物件。</span><span class="sxs-lookup"><span data-stu-id="d1fff-354">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="d1fff-355">同樣地，旋轉的中心位於原點的物件所產生的旋轉物件已移動離開來源不同的結果。</span><span class="sxs-lookup"><span data-stu-id="d1fff-355">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-356">下列範例示範如何在前面加上調整規模以<xref:System.Windows.Media.Matrix>結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-356">The following example shows how to prepend a scale to a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixPrependScaleExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixprependscaleexamples_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAtPrepend(System.Double,System.Double,System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.Scale(System.Double,System.Double)" />
        <altmember cref="M:System.Windows.Media.Matrix.ScaleAt(System.Double,System.Double,System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SetIdentity">
      <MemberSignature Language="C#" Value="public void SetIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIdentity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.SetIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIdentity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIdentity();" />
      <MemberSignature Language="F#" Value="member this.SetIdentity : unit -&gt; unit" Usage="matrix.SetIdentity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1fff-357">將這個 <see cref="T:System.Windows.Media.Matrix" /> 結構變更為單位矩陣。</span><span class="sxs-lookup"><span data-stu-id="d1fff-357">Changes this <see cref="T:System.Windows.Media.Matrix" /> structure into an identity matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-358">身分識別矩陣具有 1 的值在係數 [1，1]，[2，2] [3，3]，在其餘係數中的 0 值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-358">An identity matrix has a value of 1 in coefficients [1,1],[2,2],[3,3] and a value of 0 in the rest of the coefficients.</span></span> <span data-ttu-id="d1fff-359">這與設定相互關聯<xref:System.Windows.Media.Matrix.M11%2A>並<xref:System.Windows.Media.Matrix.M22%2A>為 1 和<xref:System.Windows.Media.Matrix.M12%2A>， <xref:System.Windows.Media.Matrix.M21%2A>， <xref:System.Windows.Media.Matrix.OffsetX%2A>，和<xref:System.Windows.Media.Matrix.OffsetY%2A>設為 0。</span><span class="sxs-lookup"><span data-stu-id="d1fff-359">This correlates to setting <xref:System.Windows.Media.Matrix.M11%2A> and <xref:System.Windows.Media.Matrix.M22%2A> to 1 and <xref:System.Windows.Media.Matrix.M12%2A>, <xref:System.Windows.Media.Matrix.M21%2A>, <xref:System.Windows.Media.Matrix.OffsetX%2A>, and <xref:System.Windows.Media.Matrix.OffsetY%2A> to 0.</span></span> <span data-ttu-id="d1fff-360">在仿射矩陣，這是實作可[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]用於<xref:System.Windows.Media.Matrix>結構，係數 [3，1]，[3，2]，[3.3] 一定要有值 0,0,1 分別隱含。</span><span class="sxs-lookup"><span data-stu-id="d1fff-360">In an affine matrix, which is the implementation that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] uses for the <xref:System.Windows.Media.Matrix> structure, coefficients [3,1],[3,2],[3.3] are implied to always have the values 0,0,1 respectively.</span></span>  
  
||||  
|-|-|-|  
|<span data-ttu-id="d1fff-361">1</span><span class="sxs-lookup"><span data-stu-id="d1fff-361">1</span></span>|<span data-ttu-id="d1fff-362">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-362">0</span></span>|<span data-ttu-id="d1fff-363">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-363">0</span></span>|  
|<span data-ttu-id="d1fff-364">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-364">0</span></span>|<span data-ttu-id="d1fff-365">1</span><span class="sxs-lookup"><span data-stu-id="d1fff-365">1</span></span>|<span data-ttu-id="d1fff-366">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-366">0</span></span>|  
|<span data-ttu-id="d1fff-367">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-367">0</span></span>|<span data-ttu-id="d1fff-368">0</span><span class="sxs-lookup"><span data-stu-id="d1fff-368">0</span></span>|<span data-ttu-id="d1fff-369">1</span><span class="sxs-lookup"><span data-stu-id="d1fff-369">1</span></span>|  
  
 <span data-ttu-id="d1fff-370">如需身分識別矩陣中，<xref:System.Windows.Media.Matrix.ToString%2A>方法會傳回字串"Identity"，而不是係數的<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="d1fff-370">For an identity matrix, the <xref:System.Windows.Media.Matrix.ToString%2A> method returns the string "Identity", instead of the coefficients of the <xref:System.Windows.Media.Matrix>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-371">下列範例示範如何開啟<xref:System.Windows.Media.Matrix>為單位矩陣的結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-371">The following example shows how to turn a <xref:System.Windows.Media.Matrix> structure into an identity matrix.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixIdentityExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixidentityexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Matrix.Identity" />
        <altmember cref="P:System.Windows.Media.Matrix.IsIdentity" />
      </Docs>
    </Member>
    <Member MemberName="Skew">
      <MemberSignature Language="C#" Value="public void Skew (double skewX, double skewY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Skew(float64 skewX, float64 skewY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Skew (skewX As Double, skewY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Skew(double skewX, double skewY);" />
      <MemberSignature Language="F#" Value="member this.Skew : double * double -&gt; unit" Usage="matrix.Skew (skewX, skewY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skewX" Type="System.Double" />
        <Parameter Name="skewY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="skewX"><span data-ttu-id="d1fff-372">用來扭曲這個 <see cref="T:System.Windows.Media.Matrix" /> 的 X 維度角度。</span><span class="sxs-lookup"><span data-stu-id="d1fff-372">The angle in the x dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <param name="skewY"><span data-ttu-id="d1fff-373">用來扭曲這個 <see cref="T:System.Windows.Media.Matrix" /> 的 Y 維度角度。</span><span class="sxs-lookup"><span data-stu-id="d1fff-373">The angle in the y dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="d1fff-374">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之後加上指定的 X 和 Y 維度度數的扭曲。</span><span class="sxs-lookup"><span data-stu-id="d1fff-374">Appends a skew of the specified degrees in the x and y dimensions to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-375">此範例示範如何以扭曲<xref:System.Windows.Media.Matrix>結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-375">This example shows how to skew a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixSkewExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixskewexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SkewPrepend">
      <MemberSignature Language="C#" Value="public void SkewPrepend (double skewX, double skewY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkewPrepend(float64 skewX, float64 skewY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.SkewPrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkewPrepend (skewX As Double, skewY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkewPrepend(double skewX, double skewY);" />
      <MemberSignature Language="F#" Value="member this.SkewPrepend : double * double -&gt; unit" Usage="matrix.SkewPrepend (skewX, skewY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skewX" Type="System.Double" />
        <Parameter Name="skewY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="skewX"><span data-ttu-id="d1fff-376">用來扭曲這個 <see cref="T:System.Windows.Media.Matrix" /> 的 X 維度角度。</span><span class="sxs-lookup"><span data-stu-id="d1fff-376">The angle in the x dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <param name="skewY"><span data-ttu-id="d1fff-377">用來扭曲這個 <see cref="T:System.Windows.Media.Matrix" /> 的 Y 維度角度。</span><span class="sxs-lookup"><span data-stu-id="d1fff-377">The angle in the y dimension by which to skew this <see cref="T:System.Windows.Media.Matrix" />.</span></span></param>
        <summary><span data-ttu-id="d1fff-378">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上指定的 X 和 Y 維度度數的扭曲。</span><span class="sxs-lookup"><span data-stu-id="d1fff-378">Prepends a skew of the specified degrees in the x and y dimensions to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-379">在複合的轉換中，個別轉換的順序很重要的。</span><span class="sxs-lookup"><span data-stu-id="d1fff-379">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="d1fff-380">例如，如果先旋轉，再調整，然後轉譯，得到不同的結果比先轉換再旋轉，然後調整。</span><span class="sxs-lookup"><span data-stu-id="d1fff-380">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="d1fff-381">順序很重要的其中一個原因是，例如旋轉和縮放轉換會完成方面座標系統的原點。</span><span class="sxs-lookup"><span data-stu-id="d1fff-381">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="d1fff-382">縮放中心位於原點的物件產生不同的結果調整已離開來源的物件。</span><span class="sxs-lookup"><span data-stu-id="d1fff-382">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="d1fff-383">同樣地，旋轉的中心位於原點的物件所產生的旋轉物件已移動離開來源不同的結果。</span><span class="sxs-lookup"><span data-stu-id="d1fff-383">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-384">此範例示範如何在前面加上要扭曲<xref:System.Windows.Media.Matrix>結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-384">This example shows how to prepend a skew to a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixSkewPrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixskewprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Skew(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="d1fff-385">要使用的格式。</span><span class="sxs-lookup"><span data-stu-id="d1fff-385">The format to use.</span></span>  
  
<span data-ttu-id="d1fff-386">-或-</span><span class="sxs-lookup"><span data-stu-id="d1fff-386">-or-</span></span> 
<span data-ttu-id="d1fff-387">若要使用為 <see cref="T:System.IFormattable" /> 實作類型所定義的預設格式，則為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="d1fff-387">A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span></span></param>
        <param name="provider"><span data-ttu-id="d1fff-388">要用來格式化值的提供者。</span><span class="sxs-lookup"><span data-stu-id="d1fff-388">The provider to use to format the value.</span></span>  
  
<span data-ttu-id="d1fff-389">-或-</span><span class="sxs-lookup"><span data-stu-id="d1fff-389">-or-</span></span> 
<span data-ttu-id="d1fff-390">若要取得作業系統之目前地區設定中的數值格式資訊，則為 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="d1fff-390">A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span></span></param>
        <summary><span data-ttu-id="d1fff-391">使用指定的格式，格式化目前執行個體的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-391">Formats the value of the current instance using the specified format.</span></span></summary>
        <returns><span data-ttu-id="d1fff-392">採用指定格式之目前執行個體的值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-392">The value of the current instance in the specified format.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.IFormatProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1fff-393">建立這個 <see cref="T:System.String" /> 結構的 <see cref="T:System.Windows.Media.Matrix" /> 表示。</span><span class="sxs-lookup"><span data-stu-id="d1fff-393">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-394">如果這個<xref:System.Windows.Media.Matrix>結構是單位矩陣，則 「 識別 」 會傳回字串。</span><span class="sxs-lookup"><span data-stu-id="d1fff-394">If this <xref:System.Windows.Media.Matrix> structure is an identity matrix, the string "Identity" is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="matrix.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1fff-395">建立這個 <see cref="T:System.String" /> 結構的 <see cref="T:System.Windows.Media.Matrix" /> 表示。</span><span class="sxs-lookup"><span data-stu-id="d1fff-395">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <returns><span data-ttu-id="d1fff-396"><see cref="T:System.String" />，包含這個 <see cref="P:System.Windows.Media.Matrix.M11" /> 的 <see cref="P:System.Windows.Media.Matrix.M12" />、<see cref="P:System.Windows.Media.Matrix.M21" />、<see cref="P:System.Windows.Media.Matrix.M22" />、<see cref="P:System.Windows.Media.Matrix.OffsetX" />、<see cref="P:System.Windows.Media.Matrix.OffsetY" /> 和 <see cref="T:System.Windows.Media.Matrix" /> 值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-396">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, and <see cref="P:System.Windows.Media.Matrix.OffsetY" /> values of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-397">如果這個<xref:System.Windows.Media.Matrix>是<xref:System.Windows.Media.Matrix.Identity%2A>矩陣，會傳回 「 識別 」 的字串。</span><span class="sxs-lookup"><span data-stu-id="d1fff-397">If this <xref:System.Windows.Media.Matrix> is an <xref:System.Windows.Media.Matrix.Identity%2A> matrix, the string "Identity" is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="matrix.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d1fff-398">特定文化特性的格式資訊。</span><span class="sxs-lookup"><span data-stu-id="d1fff-398">The culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="d1fff-399">使用文化特性特定格式資訊，建立這個 <see cref="T:System.String" /> 結構的 <see cref="T:System.Windows.Media.Matrix" /> 表示。</span><span class="sxs-lookup"><span data-stu-id="d1fff-399">Creates a <see cref="T:System.String" /> representation of this <see cref="T:System.Windows.Media.Matrix" /> structure with culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="d1fff-400"><see cref="T:System.String" />，包含這個 <see cref="P:System.Windows.Media.Matrix.M11" /> 的 <see cref="P:System.Windows.Media.Matrix.M12" />、<see cref="P:System.Windows.Media.Matrix.M21" />、<see cref="P:System.Windows.Media.Matrix.M22" />、<see cref="P:System.Windows.Media.Matrix.OffsetX" />、<see cref="P:System.Windows.Media.Matrix.OffsetY" /> 和 <see cref="T:System.Windows.Media.Matrix" /> 值。</span><span class="sxs-lookup"><span data-stu-id="d1fff-400">A <see cref="T:System.String" /> containing the <see cref="P:System.Windows.Media.Matrix.M11" />, <see cref="P:System.Windows.Media.Matrix.M12" />, <see cref="P:System.Windows.Media.Matrix.M21" />, <see cref="P:System.Windows.Media.Matrix.M22" />, <see cref="P:System.Windows.Media.Matrix.OffsetX" />, and <see cref="P:System.Windows.Media.Matrix.OffsetY" /> values of this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-401">如果這個<xref:System.Windows.Media.Matrix>結構是單位矩陣，則 「 識別 」 會傳回字串。</span><span class="sxs-lookup"><span data-stu-id="d1fff-401">If this <xref:System.Windows.Media.Matrix> structure is an identity matrix, the string "Identity" is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1fff-402">依這個 <see cref="T:System.Windows.Media.Matrix" />，轉換指定的點、點陣列或向量陣列。</span><span class="sxs-lookup"><span data-stu-id="d1fff-402">Transforms the specified point, array of points, vector, or array of vectors by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-403">下列範例示範如何使用<xref:System.Windows.Media.Matrix>轉換點和向量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-403">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Windows.Point Transform (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point Transform(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point Transform(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Point -&gt; System.Windows.Point" Usage="matrix.Transform point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="d1fff-404">要轉換的點。</span><span class="sxs-lookup"><span data-stu-id="d1fff-404">The point to transform.</span></span></param>
        <summary><span data-ttu-id="d1fff-405">依 <see cref="T:System.Windows.Media.Matrix" /> 轉換指定的點，然後傳回結果。</span><span class="sxs-lookup"><span data-stu-id="d1fff-405">Transforms the specified point by the <see cref="T:System.Windows.Media.Matrix" /> and returns the result.</span></span></summary>
        <returns><span data-ttu-id="d1fff-406">依這個 <see cref="T:System.Windows.Media.Matrix" /> 轉換 <paramref name="point" /> 的結果。</span><span class="sxs-lookup"><span data-stu-id="d1fff-406">The result of transforming <paramref name="point" /> by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-407">下列範例示範如何使用<xref:System.Windows.Media.Matrix>轉換點和向量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-407">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(cli::array &lt;System::Windows::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Point[] -&gt; unit" Usage="matrix.Transform points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Windows.Point[]" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="d1fff-408">要轉換的點。</span><span class="sxs-lookup"><span data-stu-id="d1fff-408">The points to transform.</span></span> <span data-ttu-id="d1fff-409">陣列中的原始點由其轉換值取代。</span><span class="sxs-lookup"><span data-stu-id="d1fff-409">The original points in the array are replaced by their transformed values.</span></span></param>
        <summary><span data-ttu-id="d1fff-410">依這個 <see cref="T:System.Windows.Media.Matrix" /> 轉換指定的點。</span><span class="sxs-lookup"><span data-stu-id="d1fff-410">Transforms the specified points by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-411">下列範例示範如何使用<xref:System.Windows.Media.Matrix>轉換點和向量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-411">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Transform (System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Vector Transform(valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Vector Transform(System::Windows::Vector vector);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Vector -&gt; System.Windows.Vector" Usage="matrix.Transform vector" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="vector"><span data-ttu-id="d1fff-412">要轉換的向量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-412">The vector to transform.</span></span></param>
        <summary><span data-ttu-id="d1fff-413">依這個 <see cref="T:System.Windows.Media.Matrix" /> 轉換指定的向量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-413">Transforms the specified vector by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <returns><span data-ttu-id="d1fff-414">依這個 <see cref="T:System.Windows.Media.Matrix" /> 轉換 <paramref name="vector" /> 的結果。</span><span class="sxs-lookup"><span data-stu-id="d1fff-414">The result of transforming <paramref name="vector" /> by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-415">下列範例示範如何使用<xref:System.Windows.Media.Matrix>轉換點和向量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-415">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Vector[] vectors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Vector[] vectors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Transform(System.Windows.Vector[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (vectors As Vector())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(cli::array &lt;System::Windows::Vector&gt; ^ vectors);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Vector[] -&gt; unit" Usage="matrix.Transform vectors" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vectors" Type="System.Windows.Vector[]" />
      </Parameters>
      <Docs>
        <param name="vectors"><span data-ttu-id="d1fff-416">要轉換的向量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-416">The vectors to transform.</span></span> <span data-ttu-id="d1fff-417">陣列中的原始向量會以轉換後的值取代。</span><span class="sxs-lookup"><span data-stu-id="d1fff-417">The original vectors in the array are replaced by their transformed values.</span></span></param>
        <summary><span data-ttu-id="d1fff-418">依這個 <see cref="T:System.Windows.Media.Matrix" /> 轉換指定的向量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-418">Transforms the specified vectors by this <see cref="T:System.Windows.Media.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-419">下列範例示範如何使用<xref:System.Windows.Media.Matrix>轉換點和向量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-419">The follow example shows how to use a <xref:System.Windows.Media.Matrix> to transform points and vectors.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTransformExamples_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtransformexamples_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.Translate : double * double -&gt; unit" Usage="matrix.Translate (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="d1fff-420">要沿著 X 軸移離這個 <see cref="T:System.Windows.Media.Matrix" /> 的位移量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-420">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="offsetY"><span data-ttu-id="d1fff-421">要沿著 Y 軸移離這個 <see cref="T:System.Windows.Media.Matrix" /> 的位移量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-421">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <summary><span data-ttu-id="d1fff-422">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之後加上所指定位移的轉換。</span><span class="sxs-lookup"><span data-stu-id="d1fff-422">Appends a translation of the specified offsets to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d1fff-423">下列範例示範如何附加到翻譯<xref:System.Windows.Media.Matrix>結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-423">The following example shows how append a translation onto a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTranslateExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtranslateexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="TranslatePrepend">
      <MemberSignature Language="C#" Value="public void TranslatePrepend (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslatePrepend(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Matrix.TranslatePrepend(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslatePrepend (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslatePrepend(double offsetX, double offsetY);" />
      <MemberSignature Language="F#" Value="member this.TranslatePrepend : double * double -&gt; unit" Usage="matrix.TranslatePrepend (offsetX, offsetY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX"><span data-ttu-id="d1fff-424">要沿著 X 軸移離這個 <see cref="T:System.Windows.Media.Matrix" /> 的位移量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-424">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the x-axis.</span></span></param>
        <param name="offsetY"><span data-ttu-id="d1fff-425">要沿著 Y 軸移離這個 <see cref="T:System.Windows.Media.Matrix" /> 的位移量。</span><span class="sxs-lookup"><span data-stu-id="d1fff-425">The amount to offset this <see cref="T:System.Windows.Media.Matrix" /> along the y-axis.</span></span></param>
        <summary><span data-ttu-id="d1fff-426">在這個 <see cref="T:System.Windows.Media.Matrix" /> 結構之前加上所指定位移的轉換。</span><span class="sxs-lookup"><span data-stu-id="d1fff-426">Prepends a translation of the specified offsets to this <see cref="T:System.Windows.Media.Matrix" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fff-427">在複合的轉換中，個別轉換的順序很重要的。</span><span class="sxs-lookup"><span data-stu-id="d1fff-427">In a composite transformation, the order of individual transformations is important.</span></span> <span data-ttu-id="d1fff-428">例如，如果先旋轉，再調整，然後轉譯，得到不同的結果比先轉換再旋轉，然後調整。</span><span class="sxs-lookup"><span data-stu-id="d1fff-428">For example, if you first rotate, then scale, then translate, you get a different result than if you first translate, then rotate, then scale.</span></span> <span data-ttu-id="d1fff-429">順序很重要的其中一個原因是，例如旋轉和縮放轉換會完成方面座標系統的原點。</span><span class="sxs-lookup"><span data-stu-id="d1fff-429">One reason order is significant is that transformations like rotation and scaling are done with respect to the origin of the coordinate system.</span></span> <span data-ttu-id="d1fff-430">縮放中心位於原點的物件產生不同的結果調整已離開來源的物件。</span><span class="sxs-lookup"><span data-stu-id="d1fff-430">Scaling an object that is centered at the origin produces a different result than scaling an object that has been moved away from the origin.</span></span> <span data-ttu-id="d1fff-431">同樣地，旋轉的中心位於原點的物件所產生的旋轉物件已移動離開來源不同的結果。</span><span class="sxs-lookup"><span data-stu-id="d1fff-431">Similarly, rotating an object that is centered at the origin produces a different result than rotating an object that has been moved away from the origin.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fff-432">下列範例示範如何附加在前面的轉譯到<xref:System.Windows.Media.Matrix>結構。</span><span class="sxs-lookup"><span data-stu-id="d1fff-432">The following example shows how prepend a translation onto a <xref:System.Windows.Media.Matrix> structure.</span></span>  
  
 [!code-csharp[MatrixExamples_snip#MatrixTranslatePrependExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/MatrixExamples_snip/CSharp/MatrixExample.cs#matrixtranslateprependexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Matrix.Translate(System.Double,System.Double)" />
      </Docs>
    </Member>
  </Members>
</Type>