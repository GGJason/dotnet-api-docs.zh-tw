<Type Name="StreamGeometryContext" FullName="System.Windows.Media.StreamGeometryContext">
  <TypeSignature Language="C#" Value="public abstract class StreamGeometryContext : System.Windows.Threading.DispatcherObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StreamGeometryContext extends System.Windows.Threading.DispatcherObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.StreamGeometryContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StreamGeometryContext&#xA;Inherits DispatcherObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamGeometryContext abstract : System::Windows::Threading::DispatcherObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6ebbc-101">使用繪圖命令描述幾何。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-101">Describes a geometry using drawing commands.</span></span> <span data-ttu-id="6ebbc-102">這個類別是與 <see cref="T:System.Windows.Media.StreamGeometry" /> 類別搭配使用，用以建立不支援資料繫結、動畫或修改的輕量幾何。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-102">This class is used with the <see cref="T:System.Windows.Media.StreamGeometry" /> class to create a lightweight geometry that does not support data binding, animation, or modification.</span></span></summary>
    <remarks>To be added.</remarks>
    <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ebbc-103">未先呼叫 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法以開始圖形，即嘗試新增區段。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-103">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
    <altmember cref="T:System.Windows.Media.StreamGeometry" />
    <altmember cref="T:System.Windows.Media.PathGeometry" />
  </Docs>
  <Members>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public abstract void ArcTo (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ArcTo(valuetype System.Windows.Point point, valuetype System.Windows.Size size, float64 rotationAngle, bool isLargeArc, valuetype System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ArcTo(System::Windows::Point point, System::Windows::Size size, double rotationAngle, bool isLargeArc, System::Windows::Media::SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
        <Parameter Name="rotationAngle" Type="System.Double" />
        <Parameter Name="isLargeArc" Type="System.Boolean" />
        <Parameter Name="sweepDirection" Type="System.Windows.Media.SweepDirection" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="6ebbc-104">弧形結尾的目的點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-104">The destination point for the end of the arc.</span></span></param>
        <param name="size"><span data-ttu-id="6ebbc-105">其圓周用來繪製角度之橢圓形的半徑 (寬度的一半和高度的一半)。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-105">The radii (half the width and half the height) of an oval whose perimeter is used to draw the angle.</span></span> <span data-ttu-id="6ebbc-106">如果橢圓形的四週都是圓的，則弧形也會是圓的，而如果是幾近平面，則弧形也會幾近平面。例如，極大寬度和高度的值表示橢圓形會很大，這樣角度的曲率就會比較小。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-106">If the oval is very rounded in all directions, the arc will be rounded, if it is nearly flat, so will the arc. For example, a very large width and height would represent a very large oval, which would give a slight curvature for the angle.</span></span></param>
        <param name="rotationAngle"><span data-ttu-id="6ebbc-107">指定曲線之橢圓形的旋轉角度。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-107">The rotation angle of the oval that specifies the curve.</span></span> <span data-ttu-id="6ebbc-108">而弧形曲率可以利用這個參數進行旋轉。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-108">The curvature of the arc can be rotated with this parameter.</span></span></param>
        <param name="isLargeArc">
          <span data-ttu-id="6ebbc-109"><see langword="true" /> 表示繪製大於 180 度的弧度，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-109"><see langword="true" /> to draw the arc greater than 180 degrees; otherwise, <see langword="false" />.</span></span></param>
        <param name="sweepDirection"><span data-ttu-id="6ebbc-110">值，表示是以 <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> 或 <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> 方向繪製弧形。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-110">A value that indicates whether the arc is drawn in the <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> or <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> direction.</span></span></param>
        <param name="isStroked">
          <span data-ttu-id="6ebbc-111">使用 <see cref="T:System.Windows.Media.Pen" /> 轉譯區段，將區段劃上底線時，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-111"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin">
          <span data-ttu-id="6ebbc-112">使用 <see cref="T:System.Windows.Media.Pen" /> 畫底線時，將這個區段和前一個區段之間的這個聯結視為邊角，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-112"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6ebbc-113">繪製弧形至指定的點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-113">Draws an arc to the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebbc-114">這個方法會使用上一個區段的結束點，做為起點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-114">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="6ebbc-115">如果這是在圖中的第一個區段，它會使用指定的點<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>方法以做為其起始點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-115">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="6ebbc-116">A<xref:System.Windows.Media.StreamGeometry>如果它包含無法序列化<xref:System.Windows.Media.Transform>或任何非圖案或區段遭拒。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-116">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ebbc-117">下列範例示範如何繪製弧線使用<xref:System.Windows.Media.StreamGeometryContext.ArcTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-117">The following example shows how to draw an arc using the <xref:System.Windows.Media.StreamGeometryContext.ArcTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryArcToExample.cs#streamgeometryarctoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryarctoexample.vb#streamgeometryarctoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginFigure">
      <MemberSignature Language="C#" Value="public abstract void BeginFigure (System.Windows.Point startPoint, bool isFilled, bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginFigure(valuetype System.Windows.Point startPoint, bool isFilled, bool isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BeginFigure (startPoint As Point, isFilled As Boolean, isClosed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BeginFigure(System::Windows::Point startPoint, bool isFilled, bool isClosed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPoint" Type="System.Windows.Point" />
        <Parameter Name="isFilled" Type="System.Boolean" />
        <Parameter Name="isClosed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPoint"><span data-ttu-id="6ebbc-118">圖片開始的 <see cref="T:System.Windows.Point" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-118">The <see cref="T:System.Windows.Point" /> where the figure begins.</span></span></param>
        <param name="isFilled">
          <span data-ttu-id="6ebbc-119"><see langword="true" /> 使用這個圖形所包含的區域來進行點擊測試、呈現和裁剪；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-119"><see langword="true" /> to use the area contained by this figure for hit-testing, rendering, and clipping; otherwise, <see langword="false" />.</span></span></param>
        <param name="isClosed">
          <span data-ttu-id="6ebbc-120"><see langword="true" /> 表示關閉圖形；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-120"><see langword="true" /> to close the figure; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="6ebbc-121">例如，如果繪製兩條連接的線條，而且 <c>isClosed</c> 設定為 <see langword="false" />，則繪圖只是兩條線；但是，如果 <c>isClosed</c> 設定為 <see langword="true" />，則會將兩條線封起來，以建立三角形。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-121">For example, if two connecting lines are drawn, and <c>isClosed</c> is set to <see langword="false" />, the drawing will just be of two lines but if <c>isClosed</c> is set to <see langword="true" />, the two lines will be closed to create a triangle.</span></span></param>
        <summary><span data-ttu-id="6ebbc-122">指定新圖形的起點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-122">Specifies the starting point for a new figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebbc-123">多次呼叫這個方法，您可以建立多個圖表 （獨立幾何形狀），在這個<xref:System.Windows.Media.StreamGeometryContext>。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-123">By calling this method multiple times, you can create multiple figures (self-contained geometric shapes) within this <xref:System.Windows.Media.StreamGeometryContext>.</span></span>  
  
 <span data-ttu-id="6ebbc-124">A<xref:System.Windows.Media.StreamGeometry>如果它包含無法序列化<xref:System.Windows.Media.Transform>或任何非圖案或區段遭拒。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-124">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BezierTo">
      <MemberSignature Language="C#" Value="public abstract void BezierTo (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BezierTo (point1 As Point, point2 As Point, point3 As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BezierTo(System::Windows::Point point1, System::Windows::Point point2, System::Windows::Point point3, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="6ebbc-125">用來指定曲線圖案的第一個控制點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-125">The first control point used to specify the shape of the curve.</span></span></param>
        <param name="point2"><span data-ttu-id="6ebbc-126">用來指定曲線圖案的第二個控制點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-126">The second control point used to specify the shape of the curve.</span></span></param>
        <param name="point3"><span data-ttu-id="6ebbc-127">曲線結尾的目的點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-127">The destination point for the end of the curve.</span></span></param>
        <param name="isStroked">
          <span data-ttu-id="6ebbc-128">使用 <see cref="T:System.Windows.Media.Pen" /> 轉譯區段，將區段劃上底線時，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-128"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin">
          <span data-ttu-id="6ebbc-129">使用 <see cref="T:System.Windows.Media.Pen" /> 畫底線時，將這個區段和前一個區段之間的這個聯結視為邊角，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-129"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6ebbc-130">繪製貝茲曲線至指定的點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-130">Draws a Bezier curve to the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebbc-131">起點、 結束點，以及兩個控制點會定義三次方貝茲曲線。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-131">A cubic Bezier curve is defined by a start point, end point, and two control points.</span></span> <span data-ttu-id="6ebbc-132">第一個控制點決定前半個區段，第二個控制點決定線段的第二個半。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-132">The first control point determines the curvature of the first half of the segment, and the second control point determines the curvature of the second half of the segment.</span></span>  
  
 <span data-ttu-id="6ebbc-133">這個方法會使用上一個區段的結束點，做為起點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-133">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="6ebbc-134">如果這是在圖中的第一個區段，它會使用指定的點<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>方法以做為其起始點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-134">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="6ebbc-135">A<xref:System.Windows.Media.StreamGeometry>如果它包含無法序列化<xref:System.Windows.Media.Transform>或任何非圖案或區段遭拒。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-135">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ebbc-136">下列範例示範如何繪製貝茲曲線使用<xref:System.Windows.Media.StreamGeometryContext.BezierTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-136">The following example shows how to draw a Bezier curve using the <xref:System.Windows.Media.StreamGeometryContext.BezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryBezierToExample.cs#streamgeometrybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrybeziertoexample.vb#streamgeometrybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ebbc-137">未先呼叫 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法以開始圖形，即嘗試新增區段。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-137">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ebbc-138">關閉這個內容，並清除它的內容，以進行轉譯。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-138">Closes this context and flushes its content so that it can be rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebbc-139">一旦關閉，無法修改內容。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-139">Once closed, the context cannot be modified.</span></span> <span data-ttu-id="6ebbc-140">必須先關閉內容，可以轉譯其內容。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-140">The context must be closed before its content can be rendered.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="6ebbc-141">這個內容 (Context) 已經關閉或已經過處置。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-141">This context has already been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LineTo">
      <MemberSignature Language="C#" Value="public abstract void LineTo (System.Windows.Point point, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineTo(valuetype System.Windows.Point point, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LineTo(System::Windows::Point point, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="6ebbc-142">線條結尾的目的點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-142">The destination point for the end of the line.</span></span></param>
        <param name="isStroked">
          <span data-ttu-id="6ebbc-143">使用 <see cref="T:System.Windows.Media.Pen" /> 轉譯區段，將區段劃上底線時，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-143"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin">
          <span data-ttu-id="6ebbc-144">使用 <see cref="T:System.Windows.Media.Pen" /> 畫底線時，將這個區段和前一個區段之間的這個聯結視為邊角，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-144"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6ebbc-145">繪製直線至指定的 <see cref="T:System.Windows.Point" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-145">Draws a straight line to the specified <see cref="T:System.Windows.Point" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebbc-146">這個方法會使用上一個區段的結束點，做為起點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-146">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="6ebbc-147">如果這是在圖中的第一個區段，它會使用指定的點<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>方法以做為其起始點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-147">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="6ebbc-148">A<xref:System.Windows.Media.StreamGeometry>如果它包含無法序列化<xref:System.Windows.Media.Transform>或任何非圖案或區段遭拒。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-148">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ebbc-149">下列範例示範如何繪製三角形使用<xref:System.Windows.Media.StreamGeometryContext.LineTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-149">The following example shows how to draw a triangle using the <xref:System.Windows.Media.StreamGeometryContext.LineTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryTriangleExample.cs#streamgeometrytriangleexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrytriangleexample.vb#streamgeometrytriangleexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ebbc-150">未先呼叫 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法以開始圖形，即嘗試新增區段。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-150">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyBezierTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyBezierTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="6ebbc-151">點清單，指定一個或多個貝茲曲線的控制點和目的點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-151">The list of points that specify control points and destination points for one or more Bezier curves.</span></span> <span data-ttu-id="6ebbc-152">而這個清單中的點數應該是 3 的倍數。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-152">The number of points in this list should be a multiple of three.</span></span></param>
        <param name="isStroked">
          <span data-ttu-id="6ebbc-153">使用 <see cref="T:System.Windows.Media.Pen" /> 轉譯區段，將區段劃上底線時，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-153"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin">
          <span data-ttu-id="6ebbc-154">使用 <see cref="T:System.Windows.Media.Pen" /> 畫底線時，將這個區段和前一個區段之間的這個聯結視為邊角，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-154"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6ebbc-155">繪製一個或多個連接的貝茲曲線。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-155">Draws one or more connected Bezier curves.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebbc-156">中的第一個點`points`指定的第一個控制點，指定第二個控制點、 第三個點指定的結束點的下一個點指定的第一個控制點的下一個曲線，依此類推。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-156">The first point in `points` specifies the first control point, the next specifies the second control point, the third point specifies the end point, the next point specifies the first control point of the next curve, and so on.</span></span>  
  
 <span data-ttu-id="6ebbc-157">這個方法會使用上一個區段的結束點，做為起點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-157">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="6ebbc-158">如果這是在圖中的第一個區段，它會使用指定的點<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>方法以做為其起始點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-158">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="6ebbc-159">A<xref:System.Windows.Media.StreamGeometry>如果它包含無法序列化<xref:System.Windows.Media.Transform>或任何非圖案或區段遭拒。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-159">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ebbc-160">下列範例顯示如何畫連接使用的多個貝茲曲線<xref:System.Windows.Media.StreamGeometryContext.PolyBezierTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-160">The following example shows how to draw multiple connected Bezier curves using the <xref:System.Windows.Media.StreamGeometryContext.PolyBezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyBezierToExample.cs#streamgeometrypolybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolybeziertoexample.vb#streamgeometrypolybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ebbc-161">未先呼叫 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法以開始圖形，即嘗試新增區段。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-161">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyLineTo">
      <MemberSignature Language="C#" Value="public abstract void PolyLineTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyLineTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyLineTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyLineTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="6ebbc-162">點集合，指定一個或多個連接的貝茲曲線的目的點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-162">The collection of points that specify destination points for one or more connected straight lines.</span></span></param>
        <param name="isStroked">
          <span data-ttu-id="6ebbc-163">使用 <see cref="T:System.Windows.Media.Pen" /> 轉譯區段，將區段劃上底線時，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-163"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin">
          <span data-ttu-id="6ebbc-164">使用 <see cref="T:System.Windows.Media.Pen" /> 畫底線時，將這個區段和前一個區段之間的這個聯結視為邊角，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-164"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6ebbc-165">繪製一個或多個連接的直線。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-165">Draws one or more connected straight lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebbc-166">這個方法會使用上一個區段的結束點，做為起點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-166">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="6ebbc-167">如果這是在圖中的第一個區段，它會使用指定的點<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>方法以做為其起始點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-167">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="6ebbc-168">A<xref:System.Windows.Media.StreamGeometry>如果它包含無法序列化<xref:System.Windows.Media.Transform>或任何非圖案或區段遭拒。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-168">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ebbc-169">下列範例示範如何繪製三角形使用<xref:System.Windows.Media.StreamGeometryContext.PolyLineTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-169">The following example shows how to draw a triangle using the <xref:System.Windows.Media.StreamGeometryContext.PolyLineTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyLineToExample.cs#streamgeometrypolylinetoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolylinetoexample.vb#streamgeometrypolylinetoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ebbc-170">未先呼叫 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法以開始圖形，即嘗試新增區段。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-170">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyQuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyQuadraticBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyQuadraticBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyQuadraticBezierTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyQuadraticBezierTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="6ebbc-171">點集合，指定一個或多個二次方貝茲曲線的控制點和目的點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-171">The collection of points that specify control points and destination points for one or more quadratic Bezier curves.</span></span> <span data-ttu-id="6ebbc-172">清單中的第一個點指定曲線的控制點、下一個點指定目的點、再下一個點指定下一個曲線的控制點，以此類推。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-172">The first point in the list specifies the curve's control point, the next point specifies the destination point, the next point specifies the control point of the next curve, and so on.</span></span> <span data-ttu-id="6ebbc-173">清單必須包含偶數的點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-173">The list must contain an even number of points.</span></span></param>
        <param name="isStroked">
          <span data-ttu-id="6ebbc-174">使用 <see cref="T:System.Windows.Media.Pen" /> 轉譯區段，將區段劃上底線時，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-174"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin">
          <span data-ttu-id="6ebbc-175">使用 <see cref="T:System.Windows.Media.Pen" /> 畫底線時，將這個區段和前一個區段之間的這個聯結視為邊角，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-175"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6ebbc-176">繪製一個或多個連接的二次方貝茲曲線。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-176">Draws one or more connected quadratic Bezier curves.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebbc-177">這個方法會使用上一個區段的結束點，做為起點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-177">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="6ebbc-178">如果這是在圖中的第一個區段，它會使用指定的點<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>方法以做為其起始點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-178">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="6ebbc-179">A<xref:System.Windows.Media.StreamGeometry>如果它包含無法序列化<xref:System.Windows.Media.Transform>或任何非圖案或區段遭拒。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-179">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ebbc-180">下列範例示範如何繪製多個連接二次方貝茲曲線使用<xref:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-180">The following example shows how to draw multiple connected quadratic Bezier curves using the <xref:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyQuadraticBezierToExample.cs#streamgeometrypolyquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolyquadraticbeziertoexample.vb#streamgeometrypolyquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ebbc-181">未先呼叫 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法以開始圖形，即嘗試新增區段。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-181">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="QuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void QuadraticBezierTo (System.Windows.Point point1, System.Windows.Point point2, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QuadraticBezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub QuadraticBezierTo (point1 As Point, point2 As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void QuadraticBezierTo(System::Windows::Point point1, System::Windows::Point point2, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="6ebbc-182">用來指定曲線圖案的控制點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-182">The control point used to specify the shape of the curve.</span></span></param>
        <param name="point2"><span data-ttu-id="6ebbc-183">曲線結尾的目的點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-183">The destination point for the end of the curve.</span></span></param>
        <param name="isStroked">
          <span data-ttu-id="6ebbc-184">使用 <see cref="T:System.Windows.Media.Pen" /> 轉譯區段，將區段劃上底線時，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-184"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin">
          <span data-ttu-id="6ebbc-185">使用 <see cref="T:System.Windows.Media.Pen" /> 畫底線時，將這個區段和前一個區段之間的這個聯結視為邊角，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-185"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="6ebbc-186">繪製二次方貝茲曲線。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-186">Draws a quadratic Bezier curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6ebbc-187">使用兩個控制點，三次方貝茲曲線不同二次方的三次方貝茲曲線會使用單一的控制點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-187">Unlike a cubic Bezier curve, which uses two control points, a quadratic cubic Bezier curve uses a single control point.</span></span>  
  
 <span data-ttu-id="6ebbc-188">這個方法會使用上一個區段的結束點，做為起點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-188">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="6ebbc-189">如果這是在圖中的第一個區段，它會使用指定的點<xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A>方法以做為其起始點。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-189">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="6ebbc-190">A<xref:System.Windows.Media.StreamGeometry>如果它包含無法序列化<xref:System.Windows.Media.Transform>或任何非圖案或區段遭拒。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-190">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6ebbc-191">下列範例顯示如何畫二次方的貝茲曲線使用<xref:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-191">The following example shows how to draw a quadratic Bezier curve using the <xref:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryQuadraticBezierToExample.cs#streamgeometryquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryquadraticbeziertoexample.vb#streamgeometryquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6ebbc-192">未先呼叫 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法以開始圖形，即嘗試新增區段。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-192">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6ebbc-193">這個成員支援 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基礎結構，但是您不可以從程式碼直接使用它。</span><span class="sxs-lookup"><span data-stu-id="6ebbc-193">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>