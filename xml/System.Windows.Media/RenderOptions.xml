<Type Name="RenderOptions" FullName="System.Windows.Media.RenderOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="49b7566e1a1e73ddd863706035462028cf6dd952" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51921412" /></Metadata><TypeSignature Language="C#" Value="public static class RenderOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RenderOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.RenderOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class RenderOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class RenderOptions abstract sealed" />
  <TypeSignature Language="F#" Value="type RenderOptions = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供用來控制物件轉譯行為的選項。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用的附加的屬性<xref:System.Windows.Media.RenderOptions>類別在 WPF 應用程式中指定的文字和視覺項目呈現的選項。 這些選項可讓您最佳化速度或畫質的呈現方式。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.RenderCapability" />
    <related type="Article" href="https://msdn.microsoft.com/library/67cafaad-57ad-4ecb-9c08-57fac144393e">WPF 的程式碼剖析工具的效能</related>
  </Docs>
  <Members>
    <Member MemberName="BitmapScalingMode">
      <MemberSignature Language="C#" Value="see GetBitmapScalingMode, and SetBitmapScalingMode" />
      <MemberSignature Language="ILAsm" Value="see GetBitmapScalingMode, and SetBitmapScalingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderOptions.BitmapScalingMode" />
      <MemberSignature Language="VB.NET" Value="see GetBitmapScalingMode, and SetBitmapScalingMode" />
      <MemberSignature Language="F#" Value="see GetBitmapScalingMode, and SetBitmapScalingMode" Usage="see GetBitmapScalingMode, and SetBitmapScalingMode" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得或設定所指定 <see cref="T:System.Windows.Media.BitmapScalingMode" /> 的 <see cref="T:System.Windows.DependencyObject" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.RenderOptions.BitmapScalingMode%2A>上的屬性<xref:System.Windows.UIElement>或<xref:System.Windows.Media.DrawingGroup>動畫點陣圖的子系。  
  
 建立任何點陣圖的比例動畫時，預設的高品質影像重新取樣演算法有時會耗用過多系統資源，導致畫面播放速率降低，從而造成動畫中斷。 藉由設定<xref:System.Windows.Media.RenderOptions.BitmapScalingMode%2A>屬性設<xref:System.Windows.Media.BitmapScalingMode.LowQuality?displayProperty=nameWithType>，縮放點陣圖時，您可以建立更順暢的動畫。  
  
 若要存取此屬性在程式碼中的，使用<xref:System.Windows.Media.RenderOptions.GetBitmapScalingMode%2A>和<xref:System.Windows.Media.RenderOptions.SetBitmapScalingMode%2A>方法。  
  
<a name="dependencyPropertyInfo_BitmapScalingMode"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.RenderOptions.BitmapScalingModeProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.RenderOptions.GetBitmapScalingMode(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Media.RenderOptions.SetBitmapScalingMode(System.Windows.DependencyObject,System.Windows.Media.BitmapScalingMode)" />
      </Docs>
    </Member>
    <Member MemberName="BitmapScalingModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapScalingModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapScalingModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.RenderOptions.BitmapScalingModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapScalingModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapScalingModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BitmapScalingModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.RenderOptions.BitmapScalingModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.RenderOptions.BitmapScalingMode" /> 附加屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheInvalidationThresholdMaximum">
      <MemberSignature Language="C#" Value="see GetCacheInvalidationThresholdMaximum, and SetCacheInvalidationThresholdMaximum" />
      <MemberSignature Language="ILAsm" Value="see GetCacheInvalidationThresholdMaximum, and SetCacheInvalidationThresholdMaximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum" />
      <MemberSignature Language="VB.NET" Value="see GetCacheInvalidationThresholdMaximum, and SetCacheInvalidationThresholdMaximum" />
      <MemberSignature Language="F#" Value="see GetCacheInvalidationThresholdMaximum, and SetCacheInvalidationThresholdMaximum" Usage="see GetCacheInvalidationThresholdMaximum, and SetCacheInvalidationThresholdMaximum" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得或設定所指定 <see cref="T:System.Windows.DependencyObject" /> 的最大快取失效臨界值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此附加的屬性受<xref:System.Windows.Media.TileBrush>和其衍生的類型。 它要搭配，具有中繼介面，例如筆刷<xref:System.Windows.Media.DrawingBrush>和<xref:System.Windows.Media.VisualBrush>。 它只會有作用時<xref:System.Windows.Media.RenderOptions.CachingHint%2A>屬性設定為<xref:System.Windows.Media.CachingHint.Cache>。  
  
 根據預設，[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]不會快取的呈現的內容<xref:System.Windows.Media.DrawingBrush>和<xref:System.Windows.Media.VisualBrush>物件。 在靜態案例中，其中內容和場景中的筆刷使用都不會變更，未快取內容十分有用，因為它可以節省視訊記憶體。 當具有靜態內容的筆刷會在非靜態方法的預設行為[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]重新轉譯的筆刷的所有內容都是每個畫面，即使內容不變亦同。 例如，將會發生此靜態<xref:System.Windows.Media.DrawingBrush>或<xref:System.Windows.Media.VisualBrush>旋轉 3D 物件的介面對應。 重新轉譯靜態內容會對效能產生負面影響。  
  
 藉由設定<xref:System.Windows.Media.RenderOptions.CachingHint%2A>附加屬性的筆刷<xref:System.Windows.Media.CachingHint.Cache>，您可以使用並排筆刷物件的快取的版本，以提升效能。  
  
 <xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum%2A>並<xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum%2A>屬性的值是相對大小值，判斷何時<xref:System.Windows.Media.TileBrush>應該重新產生物件，因為擴展的變更。 例如，當<xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum%2A>屬性設為 2.0 時，快取<xref:System.Windows.Media.TileBrush>必須其大小超過目前快取大小兩倍時，才重新產生。  
  
 若要存取此屬性在程式碼中的，使用<xref:System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMaximum%2A>和<xref:System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMaximum%2A>方法。  
  
<a name="dependencyPropertyInfo_CacheInvalidationThresholdMaximum"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximumProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
   
  
## Examples  
 下列範例示範如何使用的快取提示選項<xref:System.Windows.Media.DrawingBrush>。  
  
 [!code-xml[RenderOptions#CachingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml#cachingxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMaximum(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMaximum(System.Windows.DependencyObject,System.Double)" />
        <altmember cref="P:System.Windows.Media.RenderOptions.CachingHint" />
      </Docs>
    </Member>
    <Member MemberName="CacheInvalidationThresholdMaximumProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CacheInvalidationThresholdMaximumProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CacheInvalidationThresholdMaximumProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximumProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CacheInvalidationThresholdMaximumProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CacheInvalidationThresholdMaximumProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CacheInvalidationThresholdMaximumProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximumProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum" /> 附加屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheInvalidationThresholdMinimum">
      <MemberSignature Language="C#" Value="see GetCacheInvalidationThresholdMinimum, and SetCacheInvalidationThresholdMinimum" />
      <MemberSignature Language="ILAsm" Value="see GetCacheInvalidationThresholdMinimum, and SetCacheInvalidationThresholdMinimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum" />
      <MemberSignature Language="VB.NET" Value="see GetCacheInvalidationThresholdMinimum, and SetCacheInvalidationThresholdMinimum" />
      <MemberSignature Language="F#" Value="see GetCacheInvalidationThresholdMinimum, and SetCacheInvalidationThresholdMinimum" Usage="see GetCacheInvalidationThresholdMinimum, and SetCacheInvalidationThresholdMinimum" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得或設定所指定 <see cref="T:System.Windows.DependencyObject" /> 的最小快取失效臨界值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此附加的屬性受<xref:System.Windows.Media.TileBrush>和其衍生的類型。 它要搭配，具有中繼介面，例如筆刷<xref:System.Windows.Media.DrawingBrush>和<xref:System.Windows.Media.VisualBrush>。 它只會有作用時<xref:System.Windows.Media.RenderOptions.CachingHint%2A>屬性設定為<xref:System.Windows.Media.CachingHint.Cache>。  
  
 根據預設，[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]不會快取的呈現的內容<xref:System.Windows.Media.DrawingBrush>和<xref:System.Windows.Media.VisualBrush>物件。 在靜態案例中，其中內容和場景中的筆刷使用都不會變更，未快取內容十分有用，因為它可以節省視訊記憶體。 當具有靜態內容的筆刷會在非靜態方法的預設行為[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]重新轉譯的筆刷的所有內容都是每個畫面，即使內容不變亦同。 例如，將會發生此靜態<xref:System.Windows.Media.DrawingBrush>或<xref:System.Windows.Media.VisualBrush>旋轉 3D 物件的介面對應。 重新轉譯靜態內容會對效能產生負面影響。  
  
 藉由設定<xref:System.Windows.Media.RenderOptions.CachingHint%2A>附加屬性的筆刷<xref:System.Windows.Media.CachingHint.Cache>，您可以使用並排筆刷物件的快取的版本，以提升效能。  
  
 <xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum%2A>並<xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum%2A>屬性的值是相對大小值，判斷何時<xref:System.Windows.Media.TileBrush>應該重新產生物件，因為擴展的變更。 例如，當<xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum%2A>屬性設定為 0.5，快取<xref:System.Windows.Media.TileBrush>重新產生它的大小縮減為目前的快取的大小小於一半時，才需要。  
  
 若要存取此屬性在程式碼中的，使用<xref:System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMinimum%2A>和<xref:System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMinimum%2A>方法。  
  
<a name="dependencyPropertyInfo_CacheInvalidationThresholdMinimum"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimumProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
   
  
## Examples  
 下列範例示範如何使用的快取提示選項<xref:System.Windows.Media.DrawingBrush>。  
  
 [!code-xml[RenderOptions#CachingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml#cachingxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMinimum(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMinimum(System.Windows.DependencyObject,System.Double)" />
        <altmember cref="P:System.Windows.Media.RenderOptions.CachingHint" />
      </Docs>
    </Member>
    <Member MemberName="CacheInvalidationThresholdMinimumProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CacheInvalidationThresholdMinimumProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CacheInvalidationThresholdMinimumProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimumProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CacheInvalidationThresholdMinimumProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CacheInvalidationThresholdMinimumProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CacheInvalidationThresholdMinimumProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimumProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum" /> 附加屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CachingHint">
      <MemberSignature Language="C#" Value="see GetCachingHint, and SetCachingHint" />
      <MemberSignature Language="ILAsm" Value="see GetCachingHint, and SetCachingHint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderOptions.CachingHint" />
      <MemberSignature Language="VB.NET" Value="see GetCachingHint, and SetCachingHint" />
      <MemberSignature Language="F#" Value="see GetCachingHint, and SetCachingHint" Usage="see GetCachingHint, and SetCachingHint" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得或設定值，此值指出如果可能應該快取呈現的內容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此附加的屬性受<xref:System.Windows.Media.TileBrush>和其衍生的類型。 它要搭配，具有中繼介面，例如筆刷<xref:System.Windows.Media.DrawingBrush>和<xref:System.Windows.Media.VisualBrush>。  
  
 根據預設，[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]不會快取的呈現的內容<xref:System.Windows.Media.DrawingBrush>和<xref:System.Windows.Media.VisualBrush>物件。 在靜態案例中，其中內容和場景中的筆刷使用都不會變更，快取的並非十分有用，因為它可以節省視訊記憶體。 當具有靜態內容的筆刷會在非靜態方法的預設行為[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]重新轉譯的筆刷的所有內容都是每個畫面，即使內容不變亦同。 例如，將會發生此靜態<xref:System.Windows.Media.DrawingBrush>或<xref:System.Windows.Media.VisualBrush>旋轉 3D 物件的介面對應。 重新轉譯靜態內容會對效能產生負面影響。  
  
 藉由設定<xref:System.Windows.Media.RenderOptions.CachingHint%2A>附加屬性的筆刷<xref:System.Windows.Media.CachingHint.Cache>，您可以使用並排筆刷物件的快取的版本，以提升效能。  
  
 <xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum%2A>並<xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum%2A>屬性的值是相對大小值，判斷何時<xref:System.Windows.Media.TileBrush>應該重新產生物件，因為擴展的變更。 例如，當<xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum%2A>屬性設為 2.0 時，快取<xref:System.Windows.Media.TileBrush>必須其大小超過目前快取大小兩倍時，才重新產生。  
  
 若要存取此屬性在程式碼中的，使用<xref:System.Windows.Media.RenderOptions.GetCachingHint%2A>和<xref:System.Windows.Media.RenderOptions.SetCachingHint%2A>方法。  
  
<a name="dependencyPropertyInfo_CachingHint"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.RenderOptions.CachingHintProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
   
  
## Examples  
 下列範例示範如何使用的快取提示選項<xref:System.Windows.Media.DrawingBrush>。  
  
 [!code-xml[RenderOptions#CachingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml#cachingxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.RenderOptions.GetCachingHint(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Media.RenderOptions.SetCachingHint(System.Windows.DependencyObject,System.Windows.Media.CachingHint)" />
        <altmember cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum" />
        <altmember cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum" />
      </Docs>
    </Member>
    <Member MemberName="CachingHintProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CachingHintProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CachingHintProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.RenderOptions.CachingHintProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CachingHintProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CachingHintProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CachingHintProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.RenderOptions.CachingHintProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.RenderOptions.CachingHint" /> 附加屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearTypeHint">
      <MemberSignature Language="C#" Value="see GetClearTypeHint, and SetClearTypeHint" />
      <MemberSignature Language="ILAsm" Value="see GetClearTypeHint, and SetClearTypeHint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderOptions.ClearTypeHint" />
      <MemberSignature Language="VB.NET" Value="see GetClearTypeHint, and SetClearTypeHint" />
      <MemberSignature Language="F#" Value="see GetClearTypeHint, and SetClearTypeHint" Usage="see GetClearTypeHint, and SetClearTypeHint" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得或設定值，這個值會通知轉譯引擎是否可使用 ClearType 來呈現文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.RenderOptions.ClearTypeHint%2A>附加屬性來表示，可以使用特定的組件的視覺化樹狀結構中的 ClearType 呈現文字。  
  
 ClearType 文字未正確顯示，不是完全不透明背景。 中繼呈現目標，例如<xref:System.Windows.UIElement.Effect%2A>， <xref:System.Windows.UIElement.OpacityMask%2A>， <xref:System.Windows.Media.VisualBrush>， <xref:System.Windows.Media.DrawingBrush>， <xref:System.Windows.UIElement.Clip%2A>，和<xref:System.Windows.UIElement.Opacity%2A>，可能會造成不是完全不透明的背景。 當它偵測到在其中繪製文字的緩衝區可能會有透明背景，則 WPF 會停用 ClearType。  
  
 設定<xref:System.Windows.Media.RenderOptions.ClearTypeHint%2A>屬性設<xref:System.Windows.Media.ClearTypeHint.Enabled>表示子樹狀結構是安全的 ClearType 文字轉譯。 只可以是特定的文字會轉譯為完全不透明的背景時，才執行此動作。 當子樹狀結構中的項目導入了透明度時，您可以啟用 ClearType;不過，可能會發生轉譯問題。 如果子樹狀結構的一部分導入了更多中繼呈現目標，您必須設定<xref:System.Windows.Media.RenderOptions.ClearTypeHint%2A>再於該樹狀子目錄的子系。  
  
 下列清單將示範如何確定要使用 ClearType 呈現文字，會正確出現。  
  
-   不會導入之間的中繼呈現目標<xref:System.Windows.Media.RenderOptions.ClearTypeHint%2A>和要使用 ClearType 呈現文字。  
  
-   指派是盡可能接近視覺化樹狀結構中文字的不透明背景。  
  
-   請注意，<xref:System.Windows.Media.RenderOptions.ClearTypeHint%2A>重新啟用 ClearType 子樹狀結構; 不過，不會強制 ClearType 呈現。  
  
-   請注意，<xref:System.Windows.Media.RenderOptions.ClearTypeHint%2A>不會覆寫您的系統設定或<xref:System.Windows.Media.TextOptions.TextRenderingMode%2A>設定。  
  
> [!NOTE]
>  <xref:System.Windows.Media.RenderOptions.ClearTypeHint%2A>附加的屬性不會影響<xref:System.Windows.Controls.TextBox>控制; 不過，它使用<xref:System.Windows.Controls.TextBlock>控制項。  
  
> [!NOTE]
>  在許多控制項，<xref:System.Windows.Media.RenderOptions.ClearTypeHint%2A>附加的屬性沒有任何作用，除非您設定的文字後面的不透明背景。  
  
 若要存取此屬性在程式碼中的，使用<xref:System.Windows.Media.RenderOptions.GetClearTypeHint%2A>和<xref:System.Windows.Media.RenderOptions.SetClearTypeHint%2A>方法。  
  
   
  
## Examples  
 下列範例顯示如何<xref:System.Windows.Media.RenderOptions.ClearTypeHint%2A>屬性會影響的視覺化樹狀結構的不同分支。 在第一個文字區塊控制項中，是在使用 ClearType 呈現文字因為文字區塊會繼承主視窗中的設定。 在第二個文字區塊中，ClearType 不使用，因為父元素的<xref:System.Windows.UIElement.OpacityMask%2A>屬性設定。 在第三個文字區塊中，<xref:System.Windows.Media.RenderOptions.ClearTypeHint%2A>使用，但可能會發生轉譯問題。  
  
```xaml
<Window x:Class="ClearTypeHintDemo.Window1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Window1" Height="300" Width="300"
        AllowsTransparency="True" 
        WindowStyle="None" 
        RenderOptions.ClearTypeHint="Enabled" 
        Background="White">
    <Window.Resources>
        <LinearGradientBrush x:Key="opacityBrush" >
            <GradientStop Color="#FF000000" Offset="0.0" />
            <GradientStop Color="#00000000" Offset="1.0" />
        </LinearGradientBrush>
    </Window.Resources>

    <StackPanel>
        <TextBlock Text="This text is rendered with ClearType." />
        <StackPanel OpacityMask="{StaticResource opacityBrush}" >
            <TextBlock Text="This text is not rendered with ClearType." />
            <TextBlock RenderOptions.ClearTypeHint="Enabled" 
                       Text="This text is rendered with ClearType but may alpha-blend incorrectly." />
        </StackPanel>
    </StackPanel>
</Window>  
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearTypeHintProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClearTypeHintProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClearTypeHintProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.RenderOptions.ClearTypeHintProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClearTypeHintProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClearTypeHintProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClearTypeHintProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.RenderOptions.ClearTypeHintProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" /> 附加屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EdgeMode">
      <MemberSignature Language="C#" Value="see GetEdgeMode, and SetEdgeMode" />
      <MemberSignature Language="ILAsm" Value="see GetEdgeMode, and SetEdgeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderOptions.EdgeMode" />
      <MemberSignature Language="VB.NET" Value="see GetEdgeMode, and SetEdgeMode" />
      <MemberSignature Language="F#" Value="see GetEdgeMode, and SetEdgeMode" Usage="see GetEdgeMode, and SetEdgeMode" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得或設定非文字基本的 <see cref="T:System.Windows.Media.EdgeMode" /> 列舉值，用以判斷它邊緣的轉譯方式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.RenderOptions.EdgeMode%2A>附加屬性來改善藉由指定的視覺物件應該呈現與鋸齒邊緣的轉譯效能。 文字物件一律會顯示使用消除鋸齒，而且並不會影響設定的邊緣模式值。 當您設定的視覺物件的邊緣模式值時，視覺物件的所有子系繪圖基本會設定為相同的邊緣模式值。  
  
 若要存取此屬性在程式碼中的，使用<xref:System.Windows.Media.RenderOptions.GetEdgeMode%2A>和<xref:System.Windows.Media.RenderOptions.SetEdgeMode%2A>方法。  
  
<a name="dependencyPropertyInfo_EdgeMode"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.RenderOptions.EdgeModeProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.RenderOptions.GetEdgeMode(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Media.RenderOptions.SetEdgeMode(System.Windows.DependencyObject,System.Windows.Media.EdgeMode)" />
      </Docs>
    </Member>
    <Member MemberName="EdgeModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EdgeModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EdgeModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.RenderOptions.EdgeModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EdgeModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EdgeModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EdgeModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.RenderOptions.EdgeModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.RenderOptions.EdgeMode" /> 附加屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBitmapScalingMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.BitmapScalingMode GetBitmapScalingMode (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.BitmapScalingMode GetBitmapScalingMode(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderOptions.GetBitmapScalingMode(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBitmapScalingMode (target As DependencyObject) As BitmapScalingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::BitmapScalingMode GetBitmapScalingMode(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetBitmapScalingMode : System.Windows.DependencyObject -&gt; System.Windows.Media.BitmapScalingMode" Usage="System.Windows.Media.RenderOptions.GetBitmapScalingMode target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BitmapScalingMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">要從中擷取 <see cref="P:System.Windows.Media.RenderOptions.BitmapScalingMode" /> 附加屬性值的相依性物件。</param>
        <summary>傳回所指定相依性物件的 <see cref="P:System.Windows.Media.RenderOptions.BitmapScalingMode" /> 附加屬性值。</summary>
        <returns>所指定相依性物件上 <see cref="P:System.Windows.Media.RenderOptions.BitmapScalingMode" /> 附加屬性的目前值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何取得<xref:System.Windows.Media.BitmapScalingMode>映像物件。  
  
 [!code-csharp[RenderOptions#RenderOptionsSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml.cs#renderoptionssnippet1)]
 [!code-vb[RenderOptions#RenderOptionsSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RenderOptions/visualbasic/window1.xaml.vb#renderoptionssnippet1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="target" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Media.RenderOptions.SetBitmapScalingMode(System.Windows.DependencyObject,System.Windows.Media.BitmapScalingMode)" />
      </Docs>
    </Member>
    <Member MemberName="GetCacheInvalidationThresholdMaximum">
      <MemberSignature Language="C#" Value="public static double GetCacheInvalidationThresholdMaximum (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetCacheInvalidationThresholdMaximum(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMaximum(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCacheInvalidationThresholdMaximum (target As DependencyObject) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetCacheInvalidationThresholdMaximum(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCacheInvalidationThresholdMaximum : System.Windows.DependencyObject -&gt; double" Usage="System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMaximum target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.Media.TileBrush))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">要從中擷取 <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum" /> 附加屬性值的相依性物件。</param>
        <summary>傳回所指定相依性物件的 <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum" /> 附加屬性值。</summary>
        <returns>所指定相依性物件上 <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum" /> 附加屬性的目前值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何擷取的快取的提示值<xref:System.Windows.Media.DrawingBrush>。  
  
 [!code-csharp[RenderOptions#RenderOptionsSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml.cs#renderoptionssnippet4)]
 [!code-vb[RenderOptions#RenderOptionsSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RenderOptions/visualbasic/window1.xaml.vb#renderoptionssnippet4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="target" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Media.RenderOptions.GetCachingHint(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMinimum(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="GetCacheInvalidationThresholdMinimum">
      <MemberSignature Language="C#" Value="public static double GetCacheInvalidationThresholdMinimum (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetCacheInvalidationThresholdMinimum(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMinimum(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCacheInvalidationThresholdMinimum (target As DependencyObject) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetCacheInvalidationThresholdMinimum(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCacheInvalidationThresholdMinimum : System.Windows.DependencyObject -&gt; double" Usage="System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMinimum target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.Media.TileBrush))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">要從中擷取 <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum" /> 附加屬性值的相依性物件。</param>
        <summary>傳回所指定相依性物件的 <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum" /> 附加屬性值。</summary>
        <returns>所指定相依性物件上 <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum" /> 附加屬性的目前值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何擷取的快取的提示值<xref:System.Windows.Media.DrawingBrush>。  
  
 [!code-csharp[RenderOptions#RenderOptionsSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml.cs#renderoptionssnippet4)]
 [!code-vb[RenderOptions#RenderOptionsSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RenderOptions/visualbasic/window1.xaml.vb#renderoptionssnippet4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="target" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Media.RenderOptions.GetCachingHint(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMaximum(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="GetCachingHint">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.CachingHint GetCachingHint (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.CachingHint GetCachingHint(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderOptions.GetCachingHint(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCachingHint (target As DependencyObject) As CachingHint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::CachingHint GetCachingHint(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetCachingHint : System.Windows.DependencyObject -&gt; System.Windows.Media.CachingHint" Usage="System.Windows.Media.RenderOptions.GetCachingHint target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.Media.TileBrush))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CachingHint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">要從中擷取 <see cref="P:System.Windows.Media.RenderOptions.CachingHint" /> 附加屬性值的相依性物件。</param>
        <summary>傳回所指定相依性物件的 <see cref="P:System.Windows.Media.RenderOptions.CachingHint" /> 附加屬性值。</summary>
        <returns>所指定相依性物件上 <see cref="P:System.Windows.Media.RenderOptions.CachingHint" /> 附加屬性的目前值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何擷取的快取的提示值<xref:System.Windows.Media.DrawingBrush>。  
  
 [!code-csharp[RenderOptions#RenderOptionsSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml.cs#renderoptionssnippet4)]
 [!code-vb[RenderOptions#RenderOptionsSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RenderOptions/visualbasic/window1.xaml.vb#renderoptionssnippet4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="target" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMinimum(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMaximum(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="GetClearTypeHint">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.ClearTypeHint GetClearTypeHint (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.ClearTypeHint GetClearTypeHint(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderOptions.GetClearTypeHint(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClearTypeHint (target As DependencyObject) As ClearTypeHint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::ClearTypeHint GetClearTypeHint(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetClearTypeHint : System.Windows.DependencyObject -&gt; System.Windows.Media.ClearTypeHint" Usage="System.Windows.Media.RenderOptions.GetClearTypeHint target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ClearTypeHint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">要擷取其 <see cref="T:System.Windows.DependencyObject" /> 附加屬性的 <see cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" />。</param>
        <summary>取得指定之項目的 <see cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" /> 附加屬性值。</summary>
        <returns><paramref name="target" /> 的 <see cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" /> 附加屬性值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdgeMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.EdgeMode GetEdgeMode (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.EdgeMode GetEdgeMode(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderOptions.GetEdgeMode(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEdgeMode (target As DependencyObject) As EdgeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::EdgeMode GetEdgeMode(System::Windows::DependencyObject ^ target);" />
      <MemberSignature Language="F#" Value="static member GetEdgeMode : System.Windows.DependencyObject -&gt; System.Windows.Media.EdgeMode" Usage="System.Windows.Media.RenderOptions.GetEdgeMode target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.EdgeMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">要從中擷取 <see cref="P:System.Windows.Media.RenderOptions.EdgeMode" /> 附加屬性值的相依性物件。</param>
        <summary>傳回所指定相依性物件的 <see cref="P:System.Windows.Media.RenderOptions.EdgeMode" /> 附加屬性值。</summary>
        <returns>所指定相依性物件上 <see cref="P:System.Windows.Media.RenderOptions.EdgeMode" /> 附加屬性的目前值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設值為非文字繪圖基本項目，例如<xref:System.Windows.Shapes.Ellipse>並<xref:System.Windows.Shapes.Polygon>，是<xref:System.Windows.Media.EdgeMode.Unspecified>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="target" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessRenderMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Interop.RenderMode ProcessRenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Interop.RenderMode ProcessRenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RenderOptions.ProcessRenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ProcessRenderMode As RenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Interop::RenderMode ProcessRenderMode { System::Windows::Interop::RenderMode get(); void set(System::Windows::Interop::RenderMode value); };" />
      <MemberSignature Language="F#" Value="member this.ProcessRenderMode : System.Windows.Interop.RenderMode with get, set" Usage="System.Windows.Media.RenderOptions.ProcessRenderMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.RenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定目前程序的呈現模式偏好設定。</summary>
        <value>目前程序的 <see cref="T:System.Windows.Interop.RenderMode" /> 偏好設定。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.RenderOptions.ProcessRenderMode%2A>屬性，以強制軟體呈現為目前的處理序。 您可以避免許多轉譯問題的 WPF 應用程式中發生，且如果您變更您的喜好設定，為軟體轉譯，外部的問題所造成的。  
  
 應用程式在啟動期間，如果您的應用程式偵測到的轉譯問題，例如緩慢的畫面播放速率，您可以設定的轉譯模式只軟體。 此外，您可能要啟用的使用者，設定應用程式執行時。  
  
 <xref:System.Windows.Interop.RenderMode.SoftwareOnly>喜好設定會覆寫<xref:System.Windows.Interop.HwndTarget.RenderMode%2A>設定。 軟體呈現的優先順序是：  
  
1.  DisableHWAcceleration 登錄機碼  
  
2.  <xref:System.Windows.Media.RenderOptions.ProcessRenderMode%2A>  
  
3.  <xref:System.Windows.Interop.HwndTarget.RenderMode%2A> （每個目標）  
  
 **附註**<xref:System.Windows.Media.RenderOptions.ProcessRenderMode%2A>指定喜好設定，並一定不會變更實際的呈現模式。 系統的其他部分可能會覆寫這個喜好設定，並強制系統進入軟體呈現。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">若要設定此屬性。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <altmember cref="T:System.Windows.Interop.RenderMode" />
      </Docs>
    </Member>
    <Member MemberName="SetBitmapScalingMode">
      <MemberSignature Language="C#" Value="public static void SetBitmapScalingMode (System.Windows.DependencyObject target, System.Windows.Media.BitmapScalingMode bitmapScalingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBitmapScalingMode(class System.Windows.DependencyObject target, valuetype System.Windows.Media.BitmapScalingMode bitmapScalingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderOptions.SetBitmapScalingMode(System.Windows.DependencyObject,System.Windows.Media.BitmapScalingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetBitmapScalingMode(System::Windows::DependencyObject ^ target, System::Windows::Media::BitmapScalingMode bitmapScalingMode);" />
      <MemberSignature Language="F#" Value="static member SetBitmapScalingMode : System.Windows.DependencyObject * System.Windows.Media.BitmapScalingMode -&gt; unit" Usage="System.Windows.Media.RenderOptions.SetBitmapScalingMode (target, bitmapScalingMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="bitmapScalingMode" Type="System.Windows.Media.BitmapScalingMode" />
      </Parameters>
      <Docs>
        <param name="target">要設定 <see cref="P:System.Windows.Media.RenderOptions.BitmapScalingMode" /> 屬性值的 <see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.Media.DrawingGroup" /> 下階。</param>
        <param name="bitmapScalingMode">要設定屬性的目標新值。</param>
        <summary>設定所指定相依性物件的 <see cref="P:System.Windows.Media.RenderOptions.BitmapScalingMode" /> 附加屬性值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.RenderOptions.SetBitmapScalingMode%2A>方法<xref:System.Windows.UIElement>或<xref:System.Windows.Media.DrawingGroup>動畫點陣圖的子系。  
  
 建立任何點陣圖的比例動畫時，預設的高品質影像重新取樣演算法有時會耗用過多系統資源，導致畫面播放速率降低，從而造成動畫中斷。 藉由設定<xref:System.Windows.Media.RenderOptions.BitmapScalingMode%2A>的屬性<xref:System.Windows.Media.RenderOptions>物件到<xref:System.Windows.Media.BitmapScalingMode.LowQuality>，縮放點陣圖時，您可以建立更順暢的動畫。  
  
   
  
## Examples  
 下列範例示範如何設定<xref:System.Windows.Media.BitmapScalingMode>針對<xref:System.Windows.Controls.Image>物件。  
  
 [!code-csharp[RenderOptions#RenderOptionsSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml.cs#renderoptionssnippet2)]
 [!code-vb[RenderOptions#RenderOptionsSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RenderOptions/visualbasic/window1.xaml.vb#renderoptionssnippet2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="target" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Media.RenderOptions.GetBitmapScalingMode(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetCacheInvalidationThresholdMaximum">
      <MemberSignature Language="C#" Value="public static void SetCacheInvalidationThresholdMaximum (System.Windows.DependencyObject target, double cacheInvalidationThresholdMaximum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCacheInvalidationThresholdMaximum(class System.Windows.DependencyObject target, float64 cacheInvalidationThresholdMaximum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMaximum(System.Windows.DependencyObject,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCacheInvalidationThresholdMaximum (target As DependencyObject, cacheInvalidationThresholdMaximum As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCacheInvalidationThresholdMaximum(System::Windows::DependencyObject ^ target, double cacheInvalidationThresholdMaximum);" />
      <MemberSignature Language="F#" Value="static member SetCacheInvalidationThresholdMaximum : System.Windows.DependencyObject * double -&gt; unit" Usage="System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMaximum (target, cacheInvalidationThresholdMaximum)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="cacheInvalidationThresholdMaximum" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="target">要設定 <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum" /> 屬性值的相依性物件。</param>
        <param name="cacheInvalidationThresholdMaximum">要設定屬性的目標新值。</param>
        <summary>設定所指定相依性物件的 <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum" /> 附加屬性值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法來設定<xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum%2A>附加程式碼中的屬性。  
  
   
  
## Examples  
 下列範例示範如何使用的快取提示選項<xref:System.Windows.Media.DrawingBrush>。  
  
 [!code-csharp[RenderOptions#RenderOptionsSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml.cs#renderoptionssnippet3)]
 [!code-vb[RenderOptions#RenderOptionsSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RenderOptions/visualbasic/window1.xaml.vb#renderoptionssnippet3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="target" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Media.RenderOptions.SetCachingHint(System.Windows.DependencyObject,System.Windows.Media.CachingHint)" />
        <altmember cref="M:System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMinimum(System.Windows.DependencyObject,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SetCacheInvalidationThresholdMinimum">
      <MemberSignature Language="C#" Value="public static void SetCacheInvalidationThresholdMinimum (System.Windows.DependencyObject target, double cacheInvalidationThresholdMinimum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCacheInvalidationThresholdMinimum(class System.Windows.DependencyObject target, float64 cacheInvalidationThresholdMinimum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMinimum(System.Windows.DependencyObject,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCacheInvalidationThresholdMinimum (target As DependencyObject, cacheInvalidationThresholdMinimum As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCacheInvalidationThresholdMinimum(System::Windows::DependencyObject ^ target, double cacheInvalidationThresholdMinimum);" />
      <MemberSignature Language="F#" Value="static member SetCacheInvalidationThresholdMinimum : System.Windows.DependencyObject * double -&gt; unit" Usage="System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMinimum (target, cacheInvalidationThresholdMinimum)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="cacheInvalidationThresholdMinimum" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="target">要設定 <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum" /> 屬性值的相依性物件。</param>
        <param name="cacheInvalidationThresholdMinimum">要設定屬性的目標新值。</param>
        <summary>設定所指定相依性物件的 <see cref="P:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum" /> 附加屬性值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法來設定<xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum%2A>附加程式碼中的屬性。  
  
   
  
## Examples  
 下列範例示範如何使用的快取提示選項<xref:System.Windows.Media.DrawingBrush>。  
  
 [!code-csharp[RenderOptions#RenderOptionsSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml.cs#renderoptionssnippet3)]
 [!code-vb[RenderOptions#RenderOptionsSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RenderOptions/visualbasic/window1.xaml.vb#renderoptionssnippet3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="target" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Media.RenderOptions.SetCachingHint(System.Windows.DependencyObject,System.Windows.Media.CachingHint)" />
        <altmember cref="M:System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMaximum(System.Windows.DependencyObject,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SetCachingHint">
      <MemberSignature Language="C#" Value="public static void SetCachingHint (System.Windows.DependencyObject target, System.Windows.Media.CachingHint cachingHint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCachingHint(class System.Windows.DependencyObject target, valuetype System.Windows.Media.CachingHint cachingHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderOptions.SetCachingHint(System.Windows.DependencyObject,System.Windows.Media.CachingHint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCachingHint(System::Windows::DependencyObject ^ target, System::Windows::Media::CachingHint cachingHint);" />
      <MemberSignature Language="F#" Value="static member SetCachingHint : System.Windows.DependencyObject * System.Windows.Media.CachingHint -&gt; unit" Usage="System.Windows.Media.RenderOptions.SetCachingHint (target, cachingHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="cachingHint" Type="System.Windows.Media.CachingHint" />
      </Parameters>
      <Docs>
        <param name="target">要設定 <see cref="P:System.Windows.Media.RenderOptions.CachingHint" /> 屬性值的相依性物件。</param>
        <param name="cachingHint">要設定屬性的目標新值。</param>
        <summary>設定所指定相依性物件的 <see cref="P:System.Windows.Media.RenderOptions.CachingHint" /> 附加屬性值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]不會快取的呈現的內容<xref:System.Windows.Media.DrawingBrush>和<xref:System.Windows.Media.VisualBrush>物件。 在靜態案例中，其中內容和場景中的筆刷使用都不會變更，快取的並非十分有用，因為它可以節省視訊記憶體。 當具有靜態內容的筆刷會在非靜態方法的預設行為[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]重新轉譯的筆刷的所有內容都是每個畫面，即使內容不變亦同。 例如，將會發生此靜態<xref:System.Windows.Media.DrawingBrush>或<xref:System.Windows.Media.VisualBrush>旋轉 3D 物件的介面對應。 重新轉譯靜態內容會對效能產生負面影響。  
  
 藉由設定<xref:System.Windows.Media.RenderOptions.CachingHint%2A>附加屬性的筆刷<xref:System.Windows.Media.CachingHint.Cache>，您可以使用並排筆刷物件的快取的版本，以提升效能。  
  
 <xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum%2A>並<xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum%2A>屬性的值是相對大小值，判斷何時<xref:System.Windows.Media.TileBrush>應該重新產生物件，因為擴展的變更。 例如，當<xref:System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum%2A>屬性設為 2.0 時，快取<xref:System.Windows.Media.TileBrush>必須其大小超過目前快取大小兩倍時，才重新產生。  
  
 使用此方法來設定<xref:System.Windows.Media.RenderOptions.CachingHint%2A>附加程式碼中的屬性。  
  
   
  
## Examples  
 下列範例示範如何使用的快取提示選項<xref:System.Windows.Media.DrawingBrush>。  
  
 [!code-csharp[RenderOptions#RenderOptionsSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/RenderOptions/CSharp/Window1.xaml.cs#renderoptionssnippet3)]
 [!code-vb[RenderOptions#RenderOptionsSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RenderOptions/visualbasic/window1.xaml.vb#renderoptionssnippet3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="target" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMaximum(System.Windows.DependencyObject,System.Double)" />
        <altmember cref="M:System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMinimum(System.Windows.DependencyObject,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SetClearTypeHint">
      <MemberSignature Language="C#" Value="public static void SetClearTypeHint (System.Windows.DependencyObject target, System.Windows.Media.ClearTypeHint clearTypeHint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetClearTypeHint(class System.Windows.DependencyObject target, valuetype System.Windows.Media.ClearTypeHint clearTypeHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderOptions.SetClearTypeHint(System.Windows.DependencyObject,System.Windows.Media.ClearTypeHint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetClearTypeHint(System::Windows::DependencyObject ^ target, System::Windows::Media::ClearTypeHint clearTypeHint);" />
      <MemberSignature Language="F#" Value="static member SetClearTypeHint : System.Windows.DependencyObject * System.Windows.Media.ClearTypeHint -&gt; unit" Usage="System.Windows.Media.RenderOptions.SetClearTypeHint (target, clearTypeHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="clearTypeHint" Type="System.Windows.Media.ClearTypeHint" />
      </Parameters>
      <Docs>
        <param name="target">要對其設定 <see cref="T:System.Windows.DependencyObject" /> 附加屬性的 <see cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" />。</param>
        <param name="clearTypeHint">新的 <see cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" /> 值。</param>
        <summary>設定指定之項目的 <see cref="P:System.Windows.Media.RenderOptions.ClearTypeHint" /> 附加屬性值。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="target" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetEdgeMode">
      <MemberSignature Language="C#" Value="public static void SetEdgeMode (System.Windows.DependencyObject target, System.Windows.Media.EdgeMode edgeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetEdgeMode(class System.Windows.DependencyObject target, valuetype System.Windows.Media.EdgeMode edgeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RenderOptions.SetEdgeMode(System.Windows.DependencyObject,System.Windows.Media.EdgeMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetEdgeMode(System::Windows::DependencyObject ^ target, System::Windows::Media::EdgeMode edgeMode);" />
      <MemberSignature Language="F#" Value="static member SetEdgeMode : System.Windows.DependencyObject * System.Windows.Media.EdgeMode -&gt; unit" Usage="System.Windows.Media.RenderOptions.SetEdgeMode (target, edgeMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="edgeMode" Type="System.Windows.Media.EdgeMode" />
      </Parameters>
      <Docs>
        <param name="target">要設定 <see cref="P:System.Windows.Media.RenderOptions.EdgeMode" /> 屬性值的相依性物件。</param>
        <param name="edgeMode">要設定屬性的目標新值。</param>
        <summary>設定所指定相依性物件的 <see cref="P:System.Windows.Media.RenderOptions.EdgeMode" /> 附加屬性值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字物件一律會顯示使用消除鋸齒，而且並不會影響設定的邊緣模式值。 當您設定的視覺物件的邊緣模式值時，視覺物件的所有子系繪圖基本會設定為相同的邊緣模式值。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Windows.Media.RenderOptions.SetEdgeMode%2A>方法來設定之視覺物件的邊緣模式<xref:System.Windows.Media.EdgeMode.Aliased>。  
  
 [!code-csharp[VisualSnippets#SetEdgeMode](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Snippets.cs#setedgemode)]
 [!code-vb[VisualSnippets#SetEdgeMode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/snippets.vb#setedgemode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">指定的 <paramref name="target" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>