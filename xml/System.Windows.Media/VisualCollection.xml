<Type Name="VisualCollection" FullName="System.Windows.Media.VisualCollection">
  <TypeSignature Language="C#" Value="public sealed class VisualCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VisualCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.VisualCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VisualCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualCollection sealed : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6d0e8-101">代表 <see cref="T:System.Windows.Media.Visual" /> 物件的已排序集合。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-101">Represents an ordered collection of <see cref="T:System.Windows.Media.Visual" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d0e8-102">A<xref:System.Windows.Media.VisualCollection>具有隱含內容親和性。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-102">A <xref:System.Windows.Media.VisualCollection> has implied context affinity.</span></span> <span data-ttu-id="6d0e8-103">如果程序嘗試存取<xref:System.Windows.Media.VisualCollection>擁有的內容不同的內容從<xref:System.Windows.Media.ContainerVisual>，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-103">If a procedure attempts to access the <xref:System.Windows.Media.VisualCollection> from a different context than the context of the owning <xref:System.Windows.Media.ContainerVisual>, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d0e8-104">下列範例示範如何建立<xref:System.Windows.Media.VisualCollection>並新增成員到它。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-104">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="6d0e8-105">如需完整範例，請參閱[點擊測試使用 DrawingVisuals 範例](http://go.microsoft.com/fwlink/?LinkID=159994)。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-105">For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualCollection (System.Windows.Media.Visual parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Visual parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualCollection(System::Windows::Media::Visual ^ parent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="6d0e8-106">傳回其 <see cref="T:System.Windows.Media.VisualCollection" /> 的父視覺物件。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-106">The parent visual object whose <see cref="T:System.Windows.Media.VisualCollection" /> is returned.</span></span></param>
        <summary><span data-ttu-id="6d0e8-107">初始化 <see cref="T:System.Windows.Media.VisualCollection" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-107">Initializes a new instance of the <see cref="T:System.Windows.Media.VisualCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="6d0e8-108">要附加到 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.Windows.Media.VisualCollection" />。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-108">The <see cref="T:System.Windows.Media.Visual" /> to append to the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="6d0e8-109">將 <see cref="T:System.Windows.Media.Visual" /> 附加至 <see cref="T:System.Windows.Media.VisualCollection" /> 的結尾。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-109">Appends a <see cref="T:System.Windows.Media.Visual" /> to the end of the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <returns><span data-ttu-id="6d0e8-110">在集合中加入 <paramref name="visual" /> 之處的索引。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-110">The index in the collection at which <paramref name="visual" /> was added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d0e8-111">加入<xref:System.Windows.Media.Visual>其實`null`且不會引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-111">Adding a <xref:System.Windows.Media.Visual> whose value is `null` is permitted and does not raise an exception.</span></span>  
  
 <span data-ttu-id="6d0e8-112"><xref:System.Windows.Media.VisualCollection.Add%2A>方法也會設定父系-子系之間的關聯性的父 visual，也就是擁有者的<xref:System.Windows.Media.VisualCollection>，與子系`visual`。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-112">The <xref:System.Windows.Media.VisualCollection.Add%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="6d0e8-113">如果您需要更低層級控制的自訂類別的視覺化子物件的基礎儲存體實作，請考慮使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>和<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-113">If you need greater low-level control over the underlying storage implementation of visual child objects of a custom class, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="6d0e8-114">當您使用這些方法時，您必須定義您自己的儲存體實作，而且不會使用<xref:System.Windows.Media.VisualCollection>。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-114">When you use these methods, you must define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d0e8-115">下列範例示範如何建立<xref:System.Windows.Media.VisualCollection>並新增成員到它。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-115">The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.</span></span>  
  
 [!code-csharp[DrawingVisualSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#100)]
 [!code-vb[DrawingVisualSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#100)]  
  
> [!NOTE]
>  <span data-ttu-id="6d0e8-116">如需完整範例，請參閱[點擊測試使用 DrawingVisuals 範例](http://go.microsoft.com/fwlink/?LinkID=159994)。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-116">For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d0e8-117">如果 <see cref="T:System.ArgumentException" /> 是根項目，則會擲回 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-117">An <see cref="T:System.ArgumentException" /> is thrown if the <see cref="T:System.Windows.Media.Visual" /> is a root element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d0e8-118">取得或設定 <see cref="T:System.Windows.Media.VisualCollection" /> 可包含的項目數目。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-118">Gets or sets the number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span></span></summary>
        <value><span data-ttu-id="6d0e8-119"><see cref="T:System.Windows.Media.VisualCollection" /> 可包含的項目數。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-119">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d0e8-120">值<xref:System.Windows.Media.VisualCollection.Capacity%2A>是項目數目，<xref:System.Windows.Media.VisualCollection>存放。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-120">The value of <xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span> <span data-ttu-id="6d0e8-121"><xref:System.Windows.Media.VisualCollection.Count%2A> 是實際的視覺效果的數目<xref:System.Windows.Media.VisualCollection>。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-121"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of visuals that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="6d0e8-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A> 永遠是大於或等於<xref:System.Windows.Media.VisualCollection.Count%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-122"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is always greater than or equal to <xref:System.Windows.Media.VisualCollection.Count%2A>.</span></span> <span data-ttu-id="6d0e8-123">如果<xref:System.Windows.Media.VisualCollection.Count%2A>超過<xref:System.Windows.Media.VisualCollection.Capacity%2A>加入項目的容量時<xref:System.Windows.Media.VisualCollection>會增加。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-123">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased.</span></span> <span data-ttu-id="6d0e8-124">根據預設<xref:System.Windows.Media.VisualCollection.Capacity%2A>為零。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-124">By default <xref:System.Windows.Media.VisualCollection.Capacity%2A> is zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6d0e8-125"><see cref="P:System.Windows.Media.VisualCollection.Capacity" /> 是設定為小於 <see cref="P:System.Windows.Media.VisualCollection.Count" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-125"><see cref="P:System.Windows.Media.VisualCollection.Capacity" /> is set to a value that is less than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d0e8-126">移除 <see cref="T:System.Windows.Media.VisualCollection" /> 中的所有項目。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-126">Removes all elements from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d0e8-127"><xref:System.Windows.Media.VisualCollection.Count%2A>重設為零。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-127">The <xref:System.Windows.Media.VisualCollection.Count%2A> is reset to zero.</span></span> <span data-ttu-id="6d0e8-128">值<xref:System.Windows.Media.VisualCollection.Capacity%2A>維持不變。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-128">The value of the <xref:System.Windows.Media.VisualCollection.Capacity%2A> remains unchanged.</span></span> <span data-ttu-id="6d0e8-129">若要重設的容量<xref:System.Windows.Media.VisualCollection>，將<xref:System.Windows.Media.VisualCollection.Capacity%2A>至所需大小的屬性。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-129">To reset the capacity of the <xref:System.Windows.Media.VisualCollection>, set the <xref:System.Windows.Media.VisualCollection.Capacity%2A> property to the desired size.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="6d0e8-130">要在集合中搜尋的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-130">The <see cref="T:System.Windows.Media.Visual" /> to search for in the collection.</span></span></param>
        <summary><span data-ttu-id="6d0e8-131">傳回 <see cref="T:System.Boolean" /> 值，表示集合中是否包含指定的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-131">Returns a <see cref="T:System.Boolean" /> value that indicates whether the specified <see cref="T:System.Windows.Media.Visual" /> is contained in the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="6d0e8-132">如果 <paramref name="visual" /> 包含在集合中，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-132"><see langword="true" /> if <paramref name="visual" /> is contained in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d0e8-133">此函式的最差狀況的執行階段案例`O(n)`，其中`n`中的項目數目是<xref:System.Windows.Media.VisualCollection>。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-133">The worst-case runtime scenario of this function is `O(n)`, where `n` is the number of items in the <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d0e8-134">將目前集合複製至傳遞的陣列。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-134">Copies the current collection into the passed array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="6d0e8-135">一維 <see cref="T:System.Array" />，是從 <see cref="T:System.Windows.Media.VisualCollection" /> 複製項目的目的地。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-135">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements that are copied from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="6d0e8-136"><c>array</c> 中以零起始的索引，複製作業從此處開始。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-136">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="6d0e8-137">將集合中的項目複製到從特定陣列索引開頭的陣列。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-137">Copies the items in the collection to an array, starting at a specific array index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.Visual[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Media.Visual[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Visual(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Media::Visual ^&gt; ^ array, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.Visual[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="6d0e8-138"><see cref="T:System.Windows.Media.Visual" /> 物件的陣列 (必須要有以零起始的索引)。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-138">An array of <see cref="T:System.Windows.Media.Visual" /> objects (which must have zero-based indexing).</span></span></param>
        <param name="index"><span data-ttu-id="6d0e8-139"><c>array</c> 內要開始複製的索引。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-139">The index to start copying from within <c>array</c>.</span></span></param>
        <summary><span data-ttu-id="6d0e8-140">將目前集合複製至傳遞的 <see cref="T:System.Windows.Media.Visual" /> 陣列。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-140">Copies the current collection into the passed <see cref="T:System.Windows.Media.Visual" /> array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d0e8-141">取得集合中的項目數。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-141">Gets the number of elements in the collection.</span></span></summary>
        <value><span data-ttu-id="6d0e8-142"><see cref="T:System.Windows.Media.VisualCollection" /> 所含的項目數目。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-142">The number of elements that the <see cref="T:System.Windows.Media.VisualCollection" /> contains.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d0e8-143"><xref:System.Windows.Media.VisualCollection.Count%2A> 是實際的項目數目<xref:System.Windows.Media.VisualCollection>。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-143"><xref:System.Windows.Media.VisualCollection.Count%2A> is the number of elements that are actually in the <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="6d0e8-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A> 是的項目數，<xref:System.Windows.Media.VisualCollection>存放。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-144"><xref:System.Windows.Media.VisualCollection.Capacity%2A> is the number of elements that the <xref:System.Windows.Media.VisualCollection> is capable of storing.</span></span>  
  
 <span data-ttu-id="6d0e8-145"><xref:System.Windows.Media.VisualCollection.Count%2A> 一定會小於或等於<xref:System.Windows.Media.VisualCollection.Capacity%2A>。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-145"><xref:System.Windows.Media.VisualCollection.Count%2A> is always less than or equal to <xref:System.Windows.Media.VisualCollection.Capacity%2A>.</span></span> <span data-ttu-id="6d0e8-146">如果<xref:System.Windows.Media.VisualCollection.Count%2A>超過<xref:System.Windows.Media.VisualCollection.Capacity%2A>時加入項目，清單的容量加倍複製舊的項目並加入新項目之前，自動重新配置內部的陣列。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-146">If <xref:System.Windows.Media.VisualCollection.Count%2A> exceeds <xref:System.Windows.Media.VisualCollection.Capacity%2A> while adding elements, the capacity of the list is doubled by automatically reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.VisualCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As VisualCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::VisualCollection::Enumerator GetEnumerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.VisualCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d0e8-147">擷取可以逐一查看 <see cref="T:System.Windows.Media.VisualCollection" /> 的列舉值。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-147">Retrieves an enumerator that can iterate through the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <returns><span data-ttu-id="6d0e8-148">可用來逐一查看集合的列舉值。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-148">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="6d0e8-149">要在 <see cref="T:System.Windows.Media.VisualCollection" /> 中尋找的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-149">The <see cref="T:System.Windows.Media.Visual" /> to locate in the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="6d0e8-150">傳回 <see cref="T:System.Windows.Media.Visual" /> 的以零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-150">Returns the zero-based index of the <see cref="T:System.Windows.Media.Visual" />.</span></span></summary>
        <returns><span data-ttu-id="6d0e8-151"><see cref="T:System.Windows.Media.Visual" /> 的索引。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-151">The index of the <see cref="T:System.Windows.Media.Visual" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d0e8-152">如果<xref:System.Windows.Media.Visual>不在<xref:System.Windows.Media.VisualCollection>，則傳回-1。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-152">If the <xref:System.Windows.Media.Visual> is not in the <xref:System.Windows.Media.VisualCollection>, -1 is returned.</span></span> <span data-ttu-id="6d0e8-153">如果`null`會傳遞至方法時，有第一個項目的索引`null`傳回。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-153">If `null` is passed to the method, the index of the first entry that has `null` is returned.</span></span> <span data-ttu-id="6d0e8-154">如果沒有任何 null 項目，則傳回-1。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-154">If there is no null entry, -1 is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="6d0e8-155">應該插入值之以零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-155">The zero-based index at which the value should be inserted.</span></span></param>
        <param name="visual"><span data-ttu-id="6d0e8-156">要插入至 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.Windows.Media.VisualCollection" />。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-156">The <see cref="T:System.Windows.Media.Visual" /> to insert into the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="6d0e8-157">將項目插入至 <see cref="T:System.Windows.Media.VisualCollection" /> 中指定的索引位置。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-157">Inserts an element into the <see cref="T:System.Windows.Media.VisualCollection" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d0e8-158">如果<xref:System.Windows.Media.VisualCollection.Count%2A>已等於<xref:System.Windows.Media.VisualCollection.Capacity%2A>、 容量的<xref:System.Windows.Media.VisualCollection>增加新<xref:System.Windows.Media.Visual>插入。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-158">If <xref:System.Windows.Media.VisualCollection.Count%2A> already equals <xref:System.Windows.Media.VisualCollection.Capacity%2A>, the capacity of the <xref:System.Windows.Media.VisualCollection> is increased before the new <xref:System.Windows.Media.Visual> is inserted.</span></span> <span data-ttu-id="6d0e8-159">如果`index`等於<xref:System.Windows.Media.VisualCollection.Count%2A>，`visual`加入至結尾<xref:System.Windows.Media.VisualCollection>。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-159">If `index` is equal to <xref:System.Windows.Media.VisualCollection.Count%2A>, `visual` is added to the end of <xref:System.Windows.Media.VisualCollection>.</span></span> <span data-ttu-id="6d0e8-160">任何現有的視覺效果的物件，等於或大於`index`移位，以容納新<xref:System.Windows.Media.Visual>，而且會更新其索引值。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-160">Any existing visual objects that are equal to or greater than `index` are shifted to accommodate the new <xref:System.Windows.Media.Visual>, and their index values are updated.</span></span>  
  
 <span data-ttu-id="6d0e8-161"><xref:System.Windows.Media.VisualCollection.Insert%2A>方法也會設定父系-子系之間的關聯性的父 visual，也就是擁有者的<xref:System.Windows.Media.VisualCollection>，與子系`visual`。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-161">The <xref:System.Windows.Media.VisualCollection.Insert%2A> method also sets up the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="6d0e8-162">如果您需要更廣泛的低階控制視覺子物件的基礎儲存體實作，請考慮使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>和<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-162">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="6d0e8-163">當您使用這些方法時，可定義您自己的儲存體實作，而且不會使用<xref:System.Windows.Media.VisualCollection>。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-163">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6d0e8-164"><paramref name="index" /> 小於零或大於 <see cref="P:System.Windows.Media.VisualCollection.Count" />。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-164"><paramref name="index" /> is less than zero or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d0e8-165">取得值，這個值表示 <see cref="T:System.Windows.Media.VisualCollection" /> 是否為唯讀。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-165">Gets a value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="6d0e8-166">值，表示 <see cref="T:System.Windows.Media.VisualCollection" /> 是否為唯讀。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-166">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d0e8-167">此屬性一律為`false`所有<xref:System.Windows.Media.VisualCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-167">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d0e8-168">取得值，指出 <see cref="T:System.Windows.Media.VisualCollection" /> 的存取是否同步 (安全執行緒)。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-168">Gets a value that indicates whether access to the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="6d0e8-169">值，表示 <see cref="T:System.Windows.Media.VisualCollection" /> 是否為同步 (安全執行緒 (Thread-Safe))。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-169">The value that indicates whether the <see cref="T:System.Windows.Media.VisualCollection" /> is synchronized (thread-safe).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d0e8-170">此屬性一律為`false`所有<xref:System.Windows.Media.VisualCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-170">This property is always `false` for all <xref:System.Windows.Media.VisualCollection> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Visual this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Visual ^ default[int] { System::Windows::Media::Visual ^ get(int index); void set(int index, System::Windows::Media::Visual ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="6d0e8-171"><see cref="T:System.Windows.Media.VisualCollection" /> 的以零起始索引，要從其中取得或設定 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-171">The zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" /> from which to get or set the <see cref="T:System.Windows.Media.Visual" />.</span></span></param>
        <summary><span data-ttu-id="6d0e8-172">取得或設定 <see cref="T:System.Windows.Media.Visual" />，這個項目儲存在 <see cref="T:System.Windows.Media.VisualCollection" /> 的索引位置 (以零為起始)。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-172">Gets or sets the <see cref="T:System.Windows.Media.Visual" /> that is stored at the zero-based index of the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <value><span data-ttu-id="6d0e8-173">儲存在 <paramref name="index" /> 的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-173">The <see cref="T:System.Windows.Media.Visual" /> that is stored at <paramref name="index" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d0e8-174">這個屬性會提供能夠存取特定<xref:System.Windows.Media.Visual>中<xref:System.Windows.Media.VisualCollection>的索引。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-174">This property provides the ability to access a specific <xref:System.Windows.Media.Visual> in the <xref:System.Windows.Media.VisualCollection> by using an index.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6d0e8-175"><paramref name="index" /> 小於零，或 <paramref name="index" /> 等於或大於 <see cref="P:System.Windows.Media.VisualCollection.Count" />。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-175"><paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6d0e8-176">新子項目已經有父代 (Parent)，或所指定索引處的值不是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-176">The new child element already has a parent, or the value at the specified index is not <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="6d0e8-177">要從 <see cref="T:System.Windows.Media.Visual" /> 移除的 <see cref="T:System.Windows.Media.VisualCollection" />。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-177">The <see cref="T:System.Windows.Media.Visual" /> to remove from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></param>
        <summary><span data-ttu-id="6d0e8-178">從 <see cref="T:System.Windows.Media.Visual" /> 移除指定的 <see cref="T:System.Windows.Media.VisualCollection" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-178">Removes the specified <see cref="T:System.Windows.Media.Visual" /> object from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d0e8-179">請遵循移除的物件的 visual 物件移位，以佔用空出的位置，並會更新其索引值。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-179">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span> <span data-ttu-id="6d0e8-180">如果`visual`是`null`，第一個`null`項目已移除。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-180">If `visual` is `null`, the first `null` entry is removed.</span></span> <span data-ttu-id="6d0e8-181">請注意該移除`null`項目中是線性集合的大小。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-181">Note that removing a `null` entry is linear in the size of the collection.</span></span>  
  
 <span data-ttu-id="6d0e8-182"><xref:System.Windows.Media.VisualCollection.Remove%2A>方法也會移除父系-子系之間的關聯性的父 visual，也就是擁有者的<xref:System.Windows.Media.VisualCollection>，與子系`visual`。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-182">The <xref:System.Windows.Media.VisualCollection.Remove%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="6d0e8-183">如果您需要更廣泛的低階控制視覺子物件的基礎儲存體實作，請考慮使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>和<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-183">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="6d0e8-184">當您使用這些方法時，可定義您自己的儲存體實作，而且不會使用<xref:System.Windows.Media.VisualCollection>。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-184">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="6d0e8-185">要移除之視覺項目之以零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-185">The zero-based index of the visual to remove.</span></span></param>
        <summary><span data-ttu-id="6d0e8-186">移除 <see cref="T:System.Windows.Media.VisualCollection" /> 中所指定索引處的視覺物件。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-186">Removes the visual object at the specified index in the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d0e8-187">請遵循移除的物件的 visual 物件移位，以佔用空出的位置，並會更新其索引值。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-187">The visual objects that follow the removed object are shifted to occupy the vacated position, and their index values are updated.</span></span>  
  
 <span data-ttu-id="6d0e8-188"><xref:System.Windows.Media.VisualCollection.RemoveAt%2A>方法也會移除父系-子系之間的關聯性的父 visual，也就是擁有者的<xref:System.Windows.Media.VisualCollection>，與子系`visual`。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-188">The <xref:System.Windows.Media.VisualCollection.RemoveAt%2A> method also removes the parent-child relationship between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the child `visual`.</span></span>  
  
 <span data-ttu-id="6d0e8-189">如果您需要更廣泛的低階控制視覺子物件的基礎儲存體實作，請考慮使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>和<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-189">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="6d0e8-190">當您使用這些方法時，可定義您自己的儲存體實作，而且不會使用<xref:System.Windows.Media.VisualCollection>。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-190">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6d0e8-191"><paramref name="index" /> 小於零，或 <paramref name="index" /> 等於或大於 <see cref="P:System.Windows.Media.VisualCollection.Count" />。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-191"><paramref name="index" /> is less than zero, or <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.VisualCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="6d0e8-192">要移除之項目範圍的以零起始的索引。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-192">The zero-based index of the range of elements to remove.</span></span></param>
        <param name="count"><span data-ttu-id="6d0e8-193">要移除的項目數目。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-193">The number of elements to remove.</span></span></param>
        <summary><span data-ttu-id="6d0e8-194">從 <see cref="T:System.Windows.Media.VisualCollection" /> 移除某範圍的視覺物件。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-194">Removes a range of visual objects from the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d0e8-195">請遵循移除的物件的視覺物件移位，以佔用空出的位置，並會更新其索引值。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-195">The visual objects that follow the removed objects are shifted to occupy the vacated positions, and their index values are updated.</span></span>  
  
 <span data-ttu-id="6d0e8-196"><xref:System.Windows.Media.VisualCollection.RemoveRange%2A>方法也會移除父視覺效果，也就是擁有者之間的父子式關聯性的<xref:System.Windows.Media.VisualCollection>，以及子視覺效果的範圍。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-196">The <xref:System.Windows.Media.VisualCollection.RemoveRange%2A> method also removes the parent-child relationships between the parent visual, which is the owner of the <xref:System.Windows.Media.VisualCollection>, and the range of child visuals.</span></span>  
  
 <span data-ttu-id="6d0e8-197">如果您需要更廣泛的低階控制視覺子物件的基礎儲存體實作，請考慮使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>和<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-197">If you need greater low-level control over the underlying storage implementation of visual child objects, consider using the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods.</span></span> <span data-ttu-id="6d0e8-198">當您使用這些方法時，可定義您自己的儲存體實作，而且不會使用<xref:System.Windows.Media.VisualCollection>。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-198">When you use these methods, you define your own storage implementation, and do not use <xref:System.Windows.Media.VisualCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6d0e8-199"><paramref name="index" /> 小於零，或 <paramref name="count" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-199"><paramref name="index" /> is less than zero or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6d0e8-200"><paramref name="index" /> 和 <paramref name="count" /> 未參照 <see cref="T:System.Windows.Media.VisualCollection" /> 中的有效項目範圍。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-200"><paramref name="index" /> and <paramref name="count" /> do not refer to a valid range of elements in the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.VisualCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d0e8-201">取得可用以同步存取 <see cref="T:System.Windows.Media.VisualCollection" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-201">Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Media.VisualCollection" />.</span></span></summary>
        <value><span data-ttu-id="6d0e8-202">型別 <see cref="T:System.Object" /> 的值。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-202">A value of type <see cref="T:System.Object" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d0e8-203">這個成員支援 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 基礎結構，但是您不可以從程式碼直接使用它。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-203">This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span> <span data-ttu-id="6d0e8-204">如需這個成員的說明，請參閱 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-204">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="6d0e8-205">可用於逐一查看集合的物件。</span><span class="sxs-lookup"><span data-stu-id="6d0e8-205">An object that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>