<Type Name="Visual" FullName="System.Windows.Media.Visual">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec6f14fe77ef036cb2ea77a94acd31ca33695723" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48622390" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Visual : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Visual extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Visual" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Visual&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Visual abstract : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type Visual = class&#xA;    inherit DependencyObject&#xA;    interface DUCE.IResource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c9d0e-101">提供在 WPF 中的呈現支援，包括點擊測試、座標轉換和週框方塊計算。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c9d0e-101">Provides rendering support in WPF, which includes hit testing, coordinate transformation, and bounding box calculations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-102"><xref:System.Windows.Media.Visual>類別是基本抽象，從中每<xref:System.Windows.FrameworkElement>物件衍生。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-102">The <xref:System.Windows.Media.Visual> class is the basic abstraction from which every <xref:System.Windows.FrameworkElement> object derives.</span></span> <span data-ttu-id="c9d0e-103">它也可以做為撰寫新控制項的進入點[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]，並在許多方面可以視為對等的視窗控制代碼 (HWND) 中[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]應用程式模型。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-103">It also serves as the entry point for writing new controls in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], and in many ways can be thought of as an equivalent of a window handle (HWND) in the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] application model.</span></span>  
  
 <span data-ttu-id="c9d0e-104"><xref:System.Windows.Media.Visual>物件是核心[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]物件，其主要角色是提供轉譯支援。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-104">The <xref:System.Windows.Media.Visual> object is a core [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] object, whose primary role is to provide rendering support.</span></span> <span data-ttu-id="c9d0e-105">使用者介面控制項，例如<xref:System.Windows.Controls.Button>並<xref:System.Windows.Controls.TextBox>，衍生自<xref:System.Windows.Media.Visual>類別，並使用<xref:System.Windows.Media.Visual>定義保存其轉譯資料的屬性。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-105">User interface controls, such as <xref:System.Windows.Controls.Button> and <xref:System.Windows.Controls.TextBox>, derive from the <xref:System.Windows.Media.Visual> class, and use the <xref:System.Windows.Media.Visual> defined properties for persisting their rendering data.</span></span> <span data-ttu-id="c9d0e-106"><xref:System.Windows.Media.Visual>物件提供下列支援：</span><span class="sxs-lookup"><span data-stu-id="c9d0e-106">The <xref:System.Windows.Media.Visual> object provides support for the following:</span></span>  
  
-   <span data-ttu-id="c9d0e-107">輸出顯示︰轉譯視覺物件已保存、序列化的繪圖內容。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-107">Output display: Rendering the persisted, serialized drawing content of a visual.</span></span>  
  
-   <span data-ttu-id="c9d0e-108">轉換︰執行視覺物件的轉換。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-108">Transformations: Performing transformations on a visual.</span></span>  
  
-   <span data-ttu-id="c9d0e-109">裁剪：提供視覺物件的裁剪區域支援。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-109">Clipping: Providing clipping region support for a visual.</span></span>  
  
-   <span data-ttu-id="c9d0e-110">點擊測試︰ 判斷指定的座標 （點） 或幾何是否包含視覺項目的界限內。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-110">Hit testing: Determining whether a specified coordinate (point) or geometry is contained within the bounds of a visual.</span></span>  
  
-   <span data-ttu-id="c9d0e-111">週框方塊計算︰判斷視覺物件的週框矩形。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-111">Bounding box calculations: Determining the bounding rectangle of a visual.</span></span>  
  
 <span data-ttu-id="c9d0e-112">在架構上，<xref:System.Windows.Media.Visual>物件不包含支援其他應用程式開發需求 /[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]立即無關，請在其呈現方式，如下所示的功能：</span><span class="sxs-lookup"><span data-stu-id="c9d0e-112">Architecturally, the <xref:System.Windows.Media.Visual> object does not include support for other application development requirements / [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] features that are not immediately related to its rendering, such as the following:</span></span>  
  
-   <span data-ttu-id="c9d0e-113">事件處理</span><span class="sxs-lookup"><span data-stu-id="c9d0e-113">Event handling</span></span>  
  
-   <span data-ttu-id="c9d0e-114">配置</span><span class="sxs-lookup"><span data-stu-id="c9d0e-114">Layout</span></span>  
  
-   <span data-ttu-id="c9d0e-115">樣式</span><span class="sxs-lookup"><span data-stu-id="c9d0e-115">Styles</span></span>  
  
-   <span data-ttu-id="c9d0e-116">資料繫結</span><span class="sxs-lookup"><span data-stu-id="c9d0e-116">Data binding</span></span>  
  
-   <span data-ttu-id="c9d0e-117">全球化</span><span class="sxs-lookup"><span data-stu-id="c9d0e-117">Globalization</span></span>  
  
 <span data-ttu-id="c9d0e-118"><xref:System.Windows.Media.Visual> 提供進一步的類別可以衍生的公用抽象類別。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-118"><xref:System.Windows.Media.Visual> is provided as a public abstract class from which further classes can be derived.</span></span> <span data-ttu-id="c9d0e-119">下圖顯示現有的視覺物件中所定義的階層[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]架構。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-119">The following illustration shows the hierarchy of the existing visual objects that are defined in the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] architecture.</span></span>  
  
 <span data-ttu-id="c9d0e-120">![圖表的類別衍生自 Visual 物件](~/add/media/visualclass01.png "圖表的類別衍生自 Visual 物件")</span><span class="sxs-lookup"><span data-stu-id="c9d0e-120">![Diagram of classes derived from the Visual object](~/add/media/visualclass01.png "Diagram of classes derived from the Visual object")</span></span>  
<span data-ttu-id="c9d0e-121">Visual 類別階層</span><span class="sxs-lookup"><span data-stu-id="c9d0e-121">Visual class hierarchy</span></span>  
  
 <span data-ttu-id="c9d0e-122">在某些情況下，定義為成員中受保護<xref:System.Windows.Media.Visual>公開為更容易存取的成員，具有類似的名稱中的衍生<xref:System.Windows.UIElement>類別。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-122">In some cases, members that are defined as protected in <xref:System.Windows.Media.Visual> are exposed as more readily accessible members with similar names in the derived <xref:System.Windows.UIElement> class.</span></span>  
  
 <span data-ttu-id="c9d0e-123">如需詳細資訊，請參閱 [WPF 圖形轉譯概觀](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-123">For more information, see [WPF Graphics Rendering Overview](~/docs/framework/wpf/graphics-multimedia/wpf-graphics-rendering-overview.md).</span></span>  
  
 <span data-ttu-id="c9d0e-124">A<xref:System.Windows.Media.Visual>具有有限的數目的層級。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-124">A <xref:System.Windows.Media.Visual> has a limited number of levels.</span></span> <span data-ttu-id="c9d0e-125">在舊版的.NET Framework 中，此最大深度為 255。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-125">In previous versions of the .NET Framework, this maximum depth was 255.</span></span> <span data-ttu-id="c9d0e-126">這項限制不適用於某些具有視覺化樹狀結構中的多層級的版面配置。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-126">This limit is inadequate for some layouts that have many levels in the visual tree.</span></span>  
  
 <span data-ttu-id="c9d0e-127">在  [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]，最大深度<xref:System.Windows.Media.Visual>為 2047，以便更深入的視覺化樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-127">In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the maximum depth of a <xref:System.Windows.Media.Visual> is 2047, which enables much deeper visual trees.</span></span> <span data-ttu-id="c9d0e-128">在大部分的應用程式，並沒有足夠的堆疊空間，來周遊這麼多層級，以及結果是<xref:System.StackOverflowException>在配置期間。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-128">In most applications, there is not enough stack space to traverse so many levels, and the result is a <xref:System.StackOverflowException> during layout.</span></span> <span data-ttu-id="c9d0e-129">針對預設的堆疊大小，此例外狀況通常會擲回樹狀結構深度大約 800，其對應至即將巢狀的 190<xref:System.Windows.Controls.TreeViewItem>物件。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-129">For the default stack size, this exception is usually thrown when the tree depth is approximately 800, which corresponds to about 190 nested <xref:System.Windows.Controls.TreeViewItem> objects.</span></span>  
  
 <span data-ttu-id="c9d0e-130">如果您的應用程式所擲回這個例外狀況，您需要有更深入的視覺化樹狀結構，您可以增加應用程式的堆疊大小。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-130">If this exception is thrown by your application and you need to have a deeper visual tree, you can increase the application's stack size.</span></span> <span data-ttu-id="c9d0e-131">使用在編譯時期 /STACK 選項或使用 EDITBIN 公用程式，您可以增加的堆疊大小。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-131">You can increase the size of the stack by using the /STACK option at compile time or by using the EDITBIN utility.</span></span> <span data-ttu-id="c9d0e-132">增加的堆疊大小可能會影響您的應用程式效能。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-132">Increasing the stack size may affect your application's performance.</span></span> <span data-ttu-id="c9d0e-133">如需詳細資訊，請參閱 <<c0> [ 堆疊配置](http://go.microsoft.com/fwlink/?LinkId=165510)並[EDITBIN 選項](http://go.microsoft.com/fwlink/?LinkId=165511)。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-133">For more information, see [Stack Allocations](http://go.microsoft.com/fwlink/?LinkId=165510) and [EDITBIN Options](http://go.microsoft.com/fwlink/?LinkId=165511).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.VisualCollection" />
    <altmember cref="T:System.Windows.Media.VisualTreeHelper" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Visual ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Visual();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-134">提供衍生自 <see cref="T:System.Windows.Media.Visual" /> 類別之物件的基底初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-134">Provides the base initialization for objects derived from the <see cref="T:System.Windows.Media.Visual" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVisualChild">
      <MemberSignature Language="C#" Value="protected void AddVisualChild (System.Windows.Media.Visual child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddVisualChild(class System.Windows.Media.Visual child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.AddVisualChild(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddVisualChild (child As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddVisualChild(System::Windows::Media::Visual ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddVisualChild : System.Windows.Media.Visual -&gt; unit" Usage="visual.AddVisualChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="c9d0e-135">要加入至父視覺項目的子視覺物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-135">The child visual object to add to parent visual.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-136">定義兩個視覺項目之間的父-子關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-136">Defines the parent-child relationship between two visuals.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-137"><xref:System.Windows.Media.Visual.AddVisualChild%2A>方法會設定兩個視覺物件之間的父子式關聯性。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-137">The <xref:System.Windows.Media.Visual.AddVisualChild%2A> method sets up the parent-child relationship between two visual objects.</span></span> <span data-ttu-id="c9d0e-138">當您需要更有效地視覺子物件的基礎儲存體實作的低階控制時，必須使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-138">This method must be used when you need greater low-level control over the underlying storage implementation of visual child objects.</span></span> <span data-ttu-id="c9d0e-139"><xref:System.Windows.Media.VisualCollection> 可用來當做預設實作來儲存子物件。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-139"><xref:System.Windows.Media.VisualCollection> can be used as a default implementation for storing child objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9d0e-140">下列範例示範如何定義自訂的儲存體需求視覺子系。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-140">The following example shows how to define custom storage requirements for a visual child.</span></span> <span data-ttu-id="c9d0e-141">此範例會使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>並<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>將視覺化父代之間的父子式關聯性的方法和`child`。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-141">The example uses the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods to sets up the parent-child relationship between the parent visual and `child`.</span></span> <span data-ttu-id="c9d0e-142">為了讓正確列舉視覺化樹狀結構，這個範例將提供的覆寫的實作<xref:System.Windows.Media.Visual.GetVisualChild%2A>方法和<xref:System.Windows.Media.Visual.VisualChildrenCount%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-142">In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <xref:System.Windows.Media.Visual.GetVisualChild%2A> method and <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9d0e-143">雖然您可以使用<xref:System.Windows.Media.VisualCollection>若要建立父-子視覺物件之間的關聯性，會提供您自己自訂的儲存體的實作，只有一個子節點連結至父代時更有效率。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-143">Although it is possible to use <xref:System.Windows.Media.VisualCollection> to create parent-child relationships between visual objects, it is more efficient to provide your own custom storage implementation when only one child is linked to a parent.</span></span>  
  
 [!code-csharp[AddVisualChild#AddVisualChild01](~/samples/snippets/csharp/VS_Snippets_Wpf/AddVisualChild/CSharp/Window1.xaml.cs#addvisualchild01)]
 [!code-vb[AddVisualChild#AddVisualChild01](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AddVisualChild/visualbasic/window1.xaml.vb#addvisualchild01)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.VisualCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindCommonVisualAncestor">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject FindCommonVisualAncestor (System.Windows.DependencyObject otherVisual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject FindCommonVisualAncestor(class System.Windows.DependencyObject otherVisual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.FindCommonVisualAncestor(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindCommonVisualAncestor (otherVisual As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ FindCommonVisualAncestor(System::Windows::DependencyObject ^ otherVisual);" />
      <MemberSignature Language="F#" Value="member this.FindCommonVisualAncestor : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="visual.FindCommonVisualAncestor otherVisual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="otherVisual" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="otherVisual">
          <span data-ttu-id="c9d0e-144">型別 <see cref="T:System.Windows.DependencyObject" /> 的視覺物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-144">A visual object of type <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-145">傳回兩個視覺物件的共同祖系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-145">Returns the common ancestor of two visual objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9d0e-146">如果存在一個視覺物件和 <paramref name="otherVisual" /> 則為其共同祖系，否則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-146">The common ancestor of the visual object and <paramref name="otherVisual" /> if one exists; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-147">2D 和 3D 物件可以有通用的 visual 上階，因此可以傳遞<xref:System.Windows.Media.Media3D.Visual3D>針對`otherVisual`。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-147">2D and 3D objects can have common visual ancestors, so it is possible to pass a <xref:System.Windows.Media.Media3D.Visual3D> for `otherVisual`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetVisualChild (index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::Visual ^ GetVisualChild(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetVisualChild : int -&gt; System.Windows.Media.Visual&#xA;override this.GetVisualChild : int -&gt; System.Windows.Media.Visual" Usage="visual.GetVisualChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="c9d0e-148">
            <see cref="T:System.Windows.Media.VisualCollection" /> 中視覺物件的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-148">The index of the visual object in the <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-149">傳回父 <see cref="T:System.Windows.Media.Visual" /> 中所指定的 <see cref="T:System.Windows.Media.VisualCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-149">Returns the specified <see cref="T:System.Windows.Media.Visual" /> in the parent <see cref="T:System.Windows.Media.VisualCollection" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9d0e-150">
            <see cref="T:System.Windows.Media.VisualCollection" /> 中指定之 <paramref name="index" /> 值處的子物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-150">The child in the <see cref="T:System.Windows.Media.VisualCollection" /> at the specified <paramref name="index" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-151">根據預設，<xref:System.Windows.Media.Visual>沒有子系。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-151">By default, a <xref:System.Windows.Media.Visual> has no children.</span></span> <span data-ttu-id="c9d0e-152">因此，預設實作永遠會擲回<xref:System.ArgumentOutOfRangeException>。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-152">Therefore, the default implementation always throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9d0e-153">下列範例會定義的覆寫實的作<xref:System.Windows.Media.Visual.GetVisualChild%2A>。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-153">The following example defines an overridden implementation of <xref:System.Windows.Media.Visual.GetVisualChild%2A>.</span></span>  
  
 [!code-csharp[DrawingVisualSample#102b](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#102b)]
 [!code-vb[DrawingVisualSample#102b](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#102b)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c9d0e-154">衍生自類別<see cref="T:System.Windows.Media.Visual" />必須覆寫這個方法，以及<see cref="P:System.Windows.Media.Visual.VisualChildrenCount" />屬性正確列舉視覺化樹狀結構。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c9d0e-154">A class that derives from <see cref="T:System.Windows.Media.Visual" /> must override this method, and also the <see cref="P:System.Windows.Media.Visual.VisualChildrenCount" /> property, for the visual tree to be enumerated correctly.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-155">判斷點或幾何值是否在視覺物件的界限中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-155">Determines whether a point or geometry value is within the bounds of the visual object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="abstract member HitTestCore : System.Windows.Media.GeometryHitTestParameters -&gt; System.Windows.Media.GeometryHitTestResult&#xA;override this.HitTestCore : System.Windows.Media.GeometryHitTestParameters -&gt; System.Windows.Media.GeometryHitTestResult" Usage="visual.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters">
          <span data-ttu-id="c9d0e-156">
            <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> 物件，指定要進行點擊測試的 <see cref="T:System.Windows.Media.Geometry" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-156">A <see cref="T:System.Windows.Media.GeometryHitTestParameters" /> object that specifies the <see cref="T:System.Windows.Media.Geometry" /> to hit test against.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-157">判斷幾何值是否在視覺物件的界限中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-157">Determines whether a geometry value is within the bounds of the visual object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9d0e-158">
            <see cref="T:System.Windows.Media.GeometryHitTestResult" />，表示點擊測試結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-158">A <see cref="T:System.Windows.Media.GeometryHitTestResult" /> that represents the result of the hit test.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-159">您可以覆寫預設點擊測試的視覺物件的支援，藉由覆寫<xref:System.Windows.Media.Visual.HitTestCore%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-159">You can override default hit testing support for a visual object by overriding the <xref:System.Windows.Media.Visual.HitTestCore%2A> method.</span></span> <span data-ttu-id="c9d0e-160">這表示，當您叫用<xref:System.Windows.Media.VisualTreeHelper.HitTest%2A>方法中的覆寫實的作<xref:System.Windows.Media.Visual.HitTestCore%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-160">This means that when you invoke the <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> method, your overridden implementation of <xref:System.Windows.Media.Visual.HitTestCore%2A> is called.</span></span> <span data-ttu-id="c9d0e-161">即使座標落在視覺物件的幾何以外時點擊的測試落在視覺物件的週框矩形內會呼叫您覆寫的方法。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-161">Your overridden method is called when a hit test falls within the bounding rectangle of the visual object, even if the coordinate falls outside the geometry of the visual object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9d0e-162">以下範例將說明如何覆寫 <xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.GeometryHitTestParameters%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-162">The following example shows how to override the <xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.GeometryHitTestParameters%29> method.</span></span> <span data-ttu-id="c9d0e-163">您可能想要覆寫這個方法的其中一個原因是在點擊測試的程序期間提供額外的功能。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-163">One reason you might want to override this method is to provide additional functionality during the hit testing process.</span></span>  
  
 [!code-csharp[HitTestingOverview#HitTestingOverviewSnippet13](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/GeometryHitTest.cs#hittestingoverviewsnippet13)]
 [!code-vb[HitTestingOverview#HitTestingOverviewSnippet13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/geometryhittest.vb#hittestingoverviewsnippet13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberSignature Language="F#" Value="abstract member HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult&#xA;override this.HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult" Usage="visual.HitTestCore hitTestParameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters">
          <span data-ttu-id="c9d0e-164">
            <see cref="T:System.Windows.Media.PointHitTestParameters" /> 物件，指定要進行點擊測試的 <see cref="T:System.Windows.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-164">A <see cref="T:System.Windows.Media.PointHitTestParameters" /> object that specifies the <see cref="T:System.Windows.Point" /> to hit test against.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-165">判斷點座標值是否在視覺物件的界限中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-165">Determines whether a point coordinate value is within the bounds of the visual object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9d0e-166">
            <see cref="T:System.Windows.Media.HitTestResult" />，表示從點擊測試傳回的 <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-166">A <see cref="T:System.Windows.Media.HitTestResult" /> that represents the <see cref="T:System.Windows.Media.Visual" /> that is returned from a hit test.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-167">您可以覆寫預設點擊測試的視覺物件上的支援，藉由覆寫<xref:System.Windows.Media.Visual.HitTestCore%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-167">You can override the default hit testing support on visual objects by overriding the <xref:System.Windows.Media.Visual.HitTestCore%2A> method.</span></span> <span data-ttu-id="c9d0e-168">這表示，當您叫用<xref:System.Windows.Media.VisualTreeHelper.HitTest%2A>方法中的覆寫實的作<xref:System.Windows.Media.Visual.HitTestCore%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-168">This means that when you invoke the <xref:System.Windows.Media.VisualTreeHelper.HitTest%2A> method, your overridden implementation of <xref:System.Windows.Media.Visual.HitTestCore%2A> is called.</span></span> <span data-ttu-id="c9d0e-169">即使座標落在視覺物件的幾何以外時點擊的測試落在視覺物件的週框矩形內會呼叫您覆寫的方法。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-169">Your overridden method is called when a hit test falls within the bounding rectangle of the visual object, even if the coordinate falls outside the geometry of the visual object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9d0e-170">以下範例將說明如何覆寫 <xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.PointHitTestParameters%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-170">The following example shows how to override the <xref:System.Windows.Media.Visual.HitTestCore%28System.Windows.Media.PointHitTestParameters%29> method.</span></span> <span data-ttu-id="c9d0e-171">您可能想要覆寫這個方法的其中一個原因是在點擊測試的程序期間提供額外的功能。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-171">One reason you might want to override this method is to provide additional functionality during the hit testing process.</span></span>  
  
 [!code-csharp[HitTestingOverview#107](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#107)]
 [!code-vb[HitTestingOverview#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAncestorOf">
      <MemberSignature Language="C#" Value="public bool IsAncestorOf (System.Windows.DependencyObject descendant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsAncestorOf(class System.Windows.DependencyObject descendant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.IsAncestorOf(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAncestorOf (descendant As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAncestorOf(System::Windows::DependencyObject ^ descendant);" />
      <MemberSignature Language="F#" Value="member this.IsAncestorOf : System.Windows.DependencyObject -&gt; bool" Usage="visual.IsAncestorOf descendant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descendant" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="descendant">
          <span data-ttu-id="c9d0e-172">型別 <see cref="T:System.Windows.DependencyObject" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-172">A value of type <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-173">判斷視覺物件是否為子系視覺物件的祖系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-173">Determines whether the visual object is an ancestor of the descendant visual object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9d0e-174">如果視覺物件是 <paramref name="descendant" /> 的祖系則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-174">
              <see langword="true" /> if the visual object is an ancestor of <paramref name="descendant" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDescendantOf">
      <MemberSignature Language="C#" Value="public bool IsDescendantOf (System.Windows.DependencyObject ancestor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsDescendantOf(class System.Windows.DependencyObject ancestor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.IsDescendantOf(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDescendantOf (ancestor As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDescendantOf(System::Windows::DependencyObject ^ ancestor);" />
      <MemberSignature Language="F#" Value="member this.IsDescendantOf : System.Windows.DependencyObject -&gt; bool" Usage="visual.IsDescendantOf ancestor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ancestor" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="ancestor">
          <span data-ttu-id="c9d0e-175">型別 <see cref="T:System.Windows.DependencyObject" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-175">A value of type <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-176">判斷視覺物件是否為祖系視覺物件的子系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-176">Determines whether the visual object is a descendant of the ancestor visual object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9d0e-177">如果視覺物件是 <paramref name="ancestor" /> 的子系則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-177">
              <see langword="true" /> if the visual object is a descendant of <paramref name="ancestor" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpi, valuetype System.Windows.DpiScale newDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (oldDpi As DpiScale, newDpi As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::DpiScale oldDpi, System::Windows::DpiScale newDpi);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit" Usage="visual.OnDpiChanged (oldDpi, newDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpi" Type="System.Windows.DpiScale" />
        <Parameter Name="newDpi" Type="System.Windows.DpiScale" />
      </Parameters>
      <Docs>
        <param name="oldDpi">
          <span data-ttu-id="c9d0e-178">先前的 DPI 縮放比例設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-178">The previous DPI scale setting.</span>
          </span>
        </param>
        <param name="newDpi">
          <span data-ttu-id="c9d0e-179">新的 DPI 縮放比例設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-179">The new DPI scale setting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-180">當轉譯此 View 的 DPI 變更時呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-180">Called when the DPI at which this View is rendered changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualChildrenChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnVisualChildrenChanged (System.Windows.DependencyObject visualAdded, System.Windows.DependencyObject visualRemoved);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnVisualChildrenChanged(class System.Windows.DependencyObject visualAdded, class System.Windows.DependencyObject visualRemoved) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnVisualChildrenChanged (visualAdded As DependencyObject, visualRemoved As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnVisualChildrenChanged(System::Windows::DependencyObject ^ visualAdded, System::Windows::DependencyObject ^ visualRemoved);" />
      <MemberSignature Language="F#" Value="abstract member OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit&#xA;override this.OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="visual.OnVisualChildrenChanged (visualAdded, visualRemoved)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visualAdded" Type="System.Windows.DependencyObject" />
        <Parameter Name="visualRemoved" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="visualAdded">
          <span data-ttu-id="c9d0e-181">已加入至集合的 <see cref="T:System.Windows.Media.Visual" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-181">The <see cref="T:System.Windows.Media.Visual" /> that was added to the collection</span>
          </span>
        </param>
        <param name="visualRemoved">
          <span data-ttu-id="c9d0e-182">從集合中移除的 <see cref="T:System.Windows.Media.Visual" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-182">The <see cref="T:System.Windows.Media.Visual" /> that was removed from the collection</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-183">當視覺物件的 <see cref="T:System.Windows.Media.VisualCollection" /> 已修改時呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-183">Called when the <see cref="T:System.Windows.Media.VisualCollection" /> of the visual object is modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="abstract member OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit&#xA;override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="visual.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="c9d0e-184">型別 <see cref="T:System.Windows.DependencyObject" /> 的值，表示 <see cref="T:System.Windows.Media.Visual" /> 物件的前一父物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-184">A value of type <see cref="T:System.Windows.DependencyObject" /> that represents the previous parent of the <see cref="T:System.Windows.Media.Visual" /> object.</span>
          </span>
          <span data-ttu-id="c9d0e-185">如果 <see cref="T:System.Windows.Media.Visual" /> 物件沒有前一父物件，則參數的值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-185">If the <see cref="T:System.Windows.Media.Visual" /> object did not have a previous parent, the value of the parameter is <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-186">在視覺物件的父代變更時呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-186">Called when the parent of the visual object is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-187">類別衍生自<xref:System.Windows.Media.Visual>可以選擇覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-187">A class that derives from <xref:System.Windows.Media.Visual> can choose to override this method.</span></span>  
  
 <span data-ttu-id="c9d0e-188">提供執行個體報告這項變更，沒有任何 「 VisualParentChanged 」 事件。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-188">There is no "VisualParentChanged" event provided that reports this change to instances.</span></span> <span data-ttu-id="c9d0e-189">因此，您必須覆寫這個方法，以處理通知案例，並提供通知的執行個體版本，如果這是您的案例的一部分。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-189">Therefore, you must override this method to handle notification scenarios and provide an instance version of the notification if that is part of your scenario.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9d0e-190">下列範例會定義的覆寫實的作<xref:System.Windows.Media.Visual.OnVisualParentChanged%2A>。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-190">The following example defines an overridden implementation of <xref:System.Windows.Media.Visual.OnVisualParentChanged%2A>.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet10](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet10)]
 [!code-vb[VisualSnippets#VisualSnippet10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Visual.VisualParent" />
      </Docs>
    </Member>
    <Member MemberName="PointFromScreen">
      <MemberSignature Language="C#" Value="public System.Windows.Point PointFromScreen (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point PointFromScreen(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.PointFromScreen(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point PointFromScreen(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.PointFromScreen : System.Windows.Point -&gt; System.Windows.Point" Usage="visual.PointFromScreen point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="c9d0e-191">螢幕座標中的 <see cref="T:System.Windows.Point" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-191">The <see cref="T:System.Windows.Point" /> value in screen coordinates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-192">將螢幕座標中的 <see cref="T:System.Windows.Point" /> 轉換為 <see cref="T:System.Windows.Point" />，表示 <see cref="T:System.Windows.Media.Visual" /> 的目前座標系統。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-192">Converts a <see cref="T:System.Windows.Point" /> in screen coordinates into a <see cref="T:System.Windows.Point" /> that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9d0e-193">已轉換的 <see cref="T:System.Windows.Point" /> 值，表示 <see cref="T:System.Windows.Media.Visual" /> 的目前座標系統。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-193">The converted <see cref="T:System.Windows.Point" /> value that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-194">使用<xref:System.Windows.Media.Visual.PointToScreen%2A>方法，將轉換<xref:System.Windows.Point>，表示目前座標系統<xref:System.Windows.Media.Visual>成<xref:System.Windows.Point>螢幕座標中。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-194">Use the <xref:System.Windows.Media.Visual.PointToScreen%2A> method to convert a <xref:System.Windows.Point> that represents the current coordinate system of the <xref:System.Windows.Media.Visual> into a <xref:System.Windows.Point> in screen coordinates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointToScreen">
      <MemberSignature Language="C#" Value="public System.Windows.Point PointToScreen (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point PointToScreen(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.PointToScreen(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point PointToScreen(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.PointToScreen : System.Windows.Point -&gt; System.Windows.Point" Usage="visual.PointToScreen point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="c9d0e-195">
            <see cref="T:System.Windows.Point" /> 值，表示 <see cref="T:System.Windows.Media.Visual" /> 的目前座標系統。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-195">The <see cref="T:System.Windows.Point" /> value that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-196">將表示 <see cref="T:System.Windows.Point" /> 之目前座標系統的 <see cref="T:System.Windows.Media.Visual" /> 轉換為螢幕座標中的 <see cref="T:System.Windows.Point" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-196">Converts a <see cref="T:System.Windows.Point" /> that represents the current coordinate system of the <see cref="T:System.Windows.Media.Visual" /> into a <see cref="T:System.Windows.Point" /> in screen coordinates.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9d0e-197">螢幕座標中已轉換的 <see cref="T:System.Windows.Point" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-197">The converted <see cref="T:System.Windows.Point" /> value in screen coordinates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-198">使用<xref:System.Windows.Media.Visual.PointFromScreen%2A>方法，將轉換<xref:System.Windows.Point>螢幕座標中<xref:System.Windows.Point>表示目前座標系統的<xref:System.Windows.Media.Visual>。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-198">Use the <xref:System.Windows.Media.Visual.PointFromScreen%2A> method to convert a <xref:System.Windows.Point> in screen coordinates into a <xref:System.Windows.Point> that represents the current coordinate system of the <xref:System.Windows.Media.Visual>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveVisualChild">
      <MemberSignature Language="C#" Value="protected void RemoveVisualChild (System.Windows.Media.Visual child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveVisualChild(class System.Windows.Media.Visual child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.RemoveVisualChild(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveVisualChild (child As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveVisualChild(System::Windows::Media::Visual ^ child);" />
      <MemberSignature Language="F#" Value="member this.RemoveVisualChild : System.Windows.Media.Visual -&gt; unit" Usage="visual.RemoveVisualChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="c9d0e-199">要從父視覺物件移除的子視覺物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-199">The child visual object to remove from the parent visual.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-200">移除兩個視覺物件之間的父-子關係。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-200">Removes the parent-child relationship between two visuals.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-201"><xref:System.Windows.Media.Visual.RemoveVisualChild%2A>方法會移除兩個視覺效果之間的父子式關聯性。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-201">The <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> method removes the parent-child relationship between two visuals.</span></span> <span data-ttu-id="c9d0e-202">這種方法，連同<xref:System.Windows.Media.Visual.AddVisualChild%2A>方法，必須使用當您需要更有效地視覺子物件的基礎儲存體實作的低階控制。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-202">This method, along with the <xref:System.Windows.Media.Visual.AddVisualChild%2A> method, must be used when you need greater low-level control over the underlying storage implementation of visual child objects.</span></span> <span data-ttu-id="c9d0e-203"><xref:System.Windows.Media.VisualCollection> 可用來當做預設實作來儲存子物件。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-203"><xref:System.Windows.Media.VisualCollection> can be used as a default implementation for storing child objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9d0e-204">下列範例示範如何定義自訂的儲存體需求視覺子系。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-204">The following example shows how to define custom storage requirements for a visual child.</span></span> <span data-ttu-id="c9d0e-205">此範例會使用<xref:System.Windows.Media.Visual.AddVisualChild%2A>並<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>將視覺化父代之間的父子式關聯性的方法和`child`。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-205">The example uses the <xref:System.Windows.Media.Visual.AddVisualChild%2A> and <xref:System.Windows.Media.Visual.RemoveVisualChild%2A> methods to sets up the parent-child relationship between the parent visual and `child`.</span></span> <span data-ttu-id="c9d0e-206">為了讓正確列舉視覺化樹狀結構，這個範例將提供的覆寫的實作<xref:System.Windows.Media.Visual.GetVisualChild%2A>方法和<xref:System.Windows.Media.Visual.VisualChildrenCount%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-206">In order for the visual tree to be enumerated correctly, the example provides overridden implementations of the <xref:System.Windows.Media.Visual.GetVisualChild%2A> method and <xref:System.Windows.Media.Visual.VisualChildrenCount%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c9d0e-207">雖然您可以使用<xref:System.Windows.Media.VisualCollection>若要建立父-子視覺物件之間的關聯性，會提供您自己自訂的儲存體的實作，只有一個子節點連結至父代時更有效率。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-207">Although it is possible to use <xref:System.Windows.Media.VisualCollection> to create parent-child relationships between visual objects, it is more efficient to provide your own custom storage implementation when only one child is linked to a parent.</span></span>  
  
 [!code-csharp[AddVisualChild#AddVisualChild01](~/samples/snippets/csharp/VS_Snippets_Wpf/AddVisualChild/CSharp/Window1.xaml.cs#addvisualchild01)]
 [!code-vb[AddVisualChild#AddVisualChild01](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AddVisualChild/visualbasic/window1.xaml.vb#addvisualchild01)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.VisualCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformToAncestor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-208">傳回轉換，這個轉換可用來將 <see cref="T:System.Windows.Media.Visual" /> 的座標轉換為視覺物件的指定祖系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-208">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified ancestor of the visual object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformToAncestor">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Media3D.GeneralTransform2DTo3D TransformToAncestor (System.Windows.Media.Media3D.Visual3D ancestor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Media3D.GeneralTransform2DTo3D TransformToAncestor(class System.Windows.Media.Media3D.Visual3D ancestor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToAncestor (ancestor As Visual3D) As GeneralTransform2DTo3D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Media3D::GeneralTransform2DTo3D ^ TransformToAncestor(System::Windows::Media::Media3D::Visual3D ^ ancestor);" />
      <MemberSignature Language="F#" Value="member this.TransformToAncestor : System.Windows.Media.Media3D.Visual3D -&gt; System.Windows.Media.Media3D.GeneralTransform2DTo3D" Usage="visual.TransformToAncestor ancestor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.GeneralTransform2DTo3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ancestor" Type="System.Windows.Media.Media3D.Visual3D" />
      </Parameters>
      <Docs>
        <param name="ancestor">
          <span data-ttu-id="c9d0e-209">座標會轉換為 <see cref="T:System.Windows.Media.Media3D.Visual3D" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-209">The <see cref="T:System.Windows.Media.Media3D.Visual3D" /> to which the coordinates are transformed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-210">傳回轉換，這個轉換可用來將 <see cref="T:System.Windows.Media.Visual" /> 的座標轉換為視覺物件的指定 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 祖系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-210">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> ancestor of the visual object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9d0e-211">轉換，可用來將座標從 <see cref="T:System.Windows.Media.Visual" /> 轉換為視覺物件之指定的 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 上階。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-211">A transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified <see cref="T:System.Windows.Media.Media3D.Visual3D" /> ancestor of the visual object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformToAncestor">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GeneralTransform TransformToAncestor (System.Windows.Media.Visual ancestor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.GeneralTransform TransformToAncestor(class System.Windows.Media.Visual ancestor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToAncestor (ancestor As Visual) As GeneralTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::GeneralTransform ^ TransformToAncestor(System::Windows::Media::Visual ^ ancestor);" />
      <MemberSignature Language="F#" Value="member this.TransformToAncestor : System.Windows.Media.Visual -&gt; System.Windows.Media.GeneralTransform" Usage="visual.TransformToAncestor ancestor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeneralTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ancestor" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="ancestor">
          <span data-ttu-id="c9d0e-212">座標會轉換為 <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-212">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-213">傳回轉換，這個轉換可用來將 <see cref="T:System.Windows.Media.Visual" /> 的座標轉換為視覺物件的指定 <see cref="T:System.Windows.Media.Visual" /> 祖系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-213">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified <see cref="T:System.Windows.Media.Visual" /> ancestor of the visual object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9d0e-214">型別 <see cref="T:System.Windows.Media.GeneralTransform" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-214">A value of type <see cref="T:System.Windows.Media.GeneralTransform" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-215">或者，您可以使用<xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=nameWithType>方法來擷取相對於其父視覺物件的位移。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-215">Alternatively, you can use the <xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A?displayProperty=nameWithType> method to retrieve the offset of a visual object relative to its parent.</span></span> <span data-ttu-id="c9d0e-216">位移的值都包含在傳回<xref:System.Windows.Vector>值。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-216">The offset values are contained within the returned <xref:System.Windows.Vector> value.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet2)]
 [!code-vb[VisualSnippets#VisualSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet2)]  
  
   
  
## Examples  
 <span data-ttu-id="c9d0e-217">下列標記範例示範<xref:System.Windows.Controls.TextBlock>巢狀內兩個<xref:System.Windows.Controls.StackPanel>物件。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-217">The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is nested within two <xref:System.Windows.Controls.StackPanel> objects.</span></span>  
  
 [!code-xaml[VisualSnippets#VisualSnippet7](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window2.xaml#visualsnippet7)]  
  
 <span data-ttu-id="c9d0e-218">下列程式碼範例示範如何使用<xref:System.Windows.Media.Visual.TransformToAncestor%2A>方法來擷取的位移<xref:System.Windows.Controls.TextBlock>相對於包含<xref:System.Windows.Window>。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-218">The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToAncestor%2A> method to retrieve the offset of the <xref:System.Windows.Controls.TextBlock> relative to the containing <xref:System.Windows.Window>.</span></span> <span data-ttu-id="c9d0e-219">位移的值都包含在傳回<xref:System.Windows.Media.GeneralTransform>。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-219">The offset values are contained in the returned <xref:System.Windows.Media.GeneralTransform>.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet5](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet5)]
 [!code-vb[VisualSnippets#VisualSnippet5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet5)]  
  
 <span data-ttu-id="c9d0e-220">位移會考量<xref:System.Windows.FrameworkElement.Margin%2A>內包含的所有物件的值<xref:System.Windows.Window>。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-220">The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects within the containing <xref:System.Windows.Window>.</span></span> <span data-ttu-id="c9d0e-221">在此情況下，<xref:System.Windows.Vector.X%2A>為 28，和<xref:System.Windows.Vector.Y%2A>為 28。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-221">In this case, <xref:System.Windows.Vector.X%2A> is 28, and <xref:System.Windows.Vector.Y%2A> is 28.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9d0e-222">
            <paramref name="ancestor" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-222">
              <paramref name="ancestor" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c9d0e-223">
            <paramref name="ancestor" /> 不是視覺物件的祖系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-223">
              <paramref name="ancestor" /> is not an ancestor of the visual.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c9d0e-224">這些視覺物件都不會產生關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-224">The visual objects are not related.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransformToDescendant">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GeneralTransform TransformToDescendant (System.Windows.Media.Visual descendant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.GeneralTransform TransformToDescendant(class System.Windows.Media.Visual descendant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformToDescendant (descendant As Visual) As GeneralTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::GeneralTransform ^ TransformToDescendant(System::Windows::Media::Visual ^ descendant);" />
      <MemberSignature Language="F#" Value="member this.TransformToDescendant : System.Windows.Media.Visual -&gt; System.Windows.Media.GeneralTransform" Usage="visual.TransformToDescendant descendant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeneralTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descendant" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="descendant">
          <span data-ttu-id="c9d0e-225">座標會轉換為 <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-225">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-226">傳回轉換，這個轉換可用來將 <see cref="T:System.Windows.Media.Visual" /> 的座標轉換為指定的視覺物件子系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-226">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified visual object descendant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9d0e-227">型別 <see cref="T:System.Windows.Media.GeneralTransform" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-227">A value of type <see cref="T:System.Windows.Media.GeneralTransform" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c9d0e-228">下列標記範例示範<xref:System.Windows.Controls.TextBlock>中所含<xref:System.Windows.Controls.StackPanel>物件。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-228">The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is contained within a <xref:System.Windows.Controls.StackPanel> object.</span></span>  
  
 [!code-xaml[VisualSnippets#VisualSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml#visualsnippet4)]  
  
 <span data-ttu-id="c9d0e-229">下列程式碼範例示範如何使用<xref:System.Windows.Media.Visual.TransformToDescendant%2A>方法來擷取的位移<xref:System.Windows.Controls.StackPanel>相對於它的子系<xref:System.Windows.Controls.TextBlock>。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-229">The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToDescendant%2A> method to retrieve the offset of the <xref:System.Windows.Controls.StackPanel> relative to its child <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="c9d0e-230">位移的值都包含在傳回<xref:System.Windows.Media.GeneralTransform>值。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-230">The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet9](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet9)]
 [!code-vb[VisualSnippets#VisualSnippet9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet9)]  
  
 <span data-ttu-id="c9d0e-231">位移會考量<xref:System.Windows.FrameworkElement.Margin%2A>的所有物件的值。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-231">The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects.</span></span> <span data-ttu-id="c9d0e-232">在此情況下，<xref:System.Windows.Vector.X%2A>為-4，和<xref:System.Windows.Vector.Y%2A>為-4。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-232">In this case, <xref:System.Windows.Vector.X%2A> is -4, and <xref:System.Windows.Vector.Y%2A> is -4.</span></span> <span data-ttu-id="c9d0e-233">位移的值是負數的值，因為父物件的位移負相對於其子物件。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-233">The offset values are negative values because the parent object is negatively offset relative to its child object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9d0e-234">
            <paramref name="descendant" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-234">
              <paramref name="descendant" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c9d0e-235">視覺不是 <paramref name="descendant" /> 視覺物件的祖系。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-235">The visual is not an ancestor of the <paramref name="descendant" /> visual.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c9d0e-236">這些視覺物件都不會產生關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-236">The visual objects are not related.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransformToVisual">
      <MemberSignature Language="C#" Value="public System.Windows.Media.GeneralTransform TransformToVisual (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.GeneralTransform TransformToVisual(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::GeneralTransform ^ TransformToVisual(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="member this.TransformToVisual : System.Windows.Media.Visual -&gt; System.Windows.Media.GeneralTransform" Usage="visual.TransformToVisual visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeneralTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="c9d0e-237">座標會轉換為 <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-237">The <see cref="T:System.Windows.Media.Visual" /> to which the coordinates are transformed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c9d0e-238">傳回轉換，這個轉換可用來將 <see cref="T:System.Windows.Media.Visual" /> 的座標轉換為指定的視覺物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-238">Returns a transform that can be used to transform coordinates from the <see cref="T:System.Windows.Media.Visual" /> to the specified visual object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c9d0e-239">型別 <see cref="T:System.Windows.Media.GeneralTransform" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-239">A value of type <see cref="T:System.Windows.Media.GeneralTransform" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-240"><xref:System.Windows.Media.Visual.TransformToAncestor%2A>和<xref:System.Windows.Media.Visual.TransformToDescendant%2A>方法也可用來傳回視覺物件的轉換。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-240">The <xref:System.Windows.Media.Visual.TransformToAncestor%2A> and <xref:System.Windows.Media.Visual.TransformToDescendant%2A> methods can also be used to return a transform for a visual object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9d0e-241">下列標記範例示範<xref:System.Windows.Controls.TextBlock>中所含<xref:System.Windows.Controls.StackPanel>物件。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-241">The following markup example shows a <xref:System.Windows.Controls.TextBlock> that is contained within a <xref:System.Windows.Controls.StackPanel> object.</span></span>  
  
 [!code-xaml[VisualSnippets#VisualSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml#visualsnippet4)]  
  
 <span data-ttu-id="c9d0e-242">下列程式碼範例示範如何使用<xref:System.Windows.Media.Visual.TransformToVisual%2A>方法來擷取的位移<xref:System.Windows.Controls.StackPanel>相對於它的子系<xref:System.Windows.Controls.TextBlock>。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-242">The following code example shows how to use the <xref:System.Windows.Media.Visual.TransformToVisual%2A> method to retrieve the offset of the <xref:System.Windows.Controls.StackPanel> relative to its child <xref:System.Windows.Controls.TextBlock>.</span></span> <span data-ttu-id="c9d0e-243">位移的值都包含在傳回<xref:System.Windows.Media.GeneralTransform>值。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-243">The offset values are contained within the returned <xref:System.Windows.Media.GeneralTransform> value.</span></span>  
  
 [!code-csharp[VisualSnippets#VisualSnippet8](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet8)]
 [!code-vb[VisualSnippets#VisualSnippet8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet8)]  
  
 <span data-ttu-id="c9d0e-244">位移會考量<xref:System.Windows.FrameworkElement.Margin%2A>的所有物件的值。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-244">The offset takes into account the <xref:System.Windows.FrameworkElement.Margin%2A> values for all objects.</span></span> <span data-ttu-id="c9d0e-245">在此情況下，<xref:System.Windows.Vector.X%2A>為-4，和<xref:System.Windows.Vector.Y%2A>為-4。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-245">In this case, <xref:System.Windows.Vector.X%2A> is -4, and <xref:System.Windows.Vector.Y%2A> is -4.</span></span> <span data-ttu-id="c9d0e-246">位移的值是負數的值，因為父物件的位移負相對於其子物件。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-246">The offset values are negative values because the parent object is negatively offset relative to its child object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c9d0e-247">
            <paramref name="visual" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-247">
              <paramref name="visual" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c9d0e-248">這些視覺物件都不會產生關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-248">The visual objects are not related.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VisualBitmapEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect VisualBitmapEffect { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffect VisualBitmapEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualBitmapEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualBitmapEffect As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Effects::BitmapEffect ^ VisualBitmapEffect {  protected public:&#xA;System::Windows::Media::Effects::BitmapEffect ^ get(); protected:&#xA; void set(System::Windows::Media::Effects::BitmapEffect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualBitmapEffect : System.Windows.Media.Effects.BitmapEffect with get, set" Usage="System.Windows.Media.Visual.VisualBitmapEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-249">取得或設定 <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> 的 <see cref="T:System.Windows.Media.Visual" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-249">Gets or sets the <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-250">這個視覺物件的點陣圖效果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-250">The bitmap effect for this visual object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.UIElement.BitmapEffect" />
      </Docs>
    </Member>
    <Member MemberName="VisualBitmapEffectInput">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffectInput VisualBitmapEffectInput { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffectInput VisualBitmapEffectInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualBitmapEffectInput" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualBitmapEffectInput As BitmapEffectInput" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Effects::BitmapEffectInput ^ VisualBitmapEffectInput {  protected public:&#xA;System::Windows::Media::Effects::BitmapEffectInput ^ get(); protected:&#xA; void set(System::Windows::Media::Effects::BitmapEffectInput ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualBitmapEffectInput : System.Windows.Media.Effects.BitmapEffectInput with get, set" Usage="System.Windows.Media.Visual.VisualBitmapEffectInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Obsolete("Avoid using BitmapEffects as they have very poor performance characteristics.  They will be deprecated in a future version.  Consider using the UIElement.Effect property and ShaderEffects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffectInput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-251">取得或設定 <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> 的 <see cref="T:System.Windows.Media.Visual" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-251">Gets or sets the <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-252">這個視覺物件的點陣圖效果輸入值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-252">The bitmap effect input value for this visual object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.UIElement.BitmapEffectInput" />
      </Docs>
    </Member>
    <Member MemberName="VisualBitmapScalingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BitmapScalingMode VisualBitmapScalingMode { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.BitmapScalingMode VisualBitmapScalingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualBitmapScalingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualBitmapScalingMode As BitmapScalingMode" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::BitmapScalingMode VisualBitmapScalingMode {  protected public:&#xA;System::Windows::Media::BitmapScalingMode get(); protected:&#xA; void set(System::Windows::Media::BitmapScalingMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualBitmapScalingMode : System.Windows.Media.BitmapScalingMode with get, set" Usage="System.Windows.Media.Visual.VisualBitmapScalingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BitmapScalingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-253">取得或設定 <see cref="T:System.Windows.Media.BitmapScalingMode" /> 的 <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-253">Gets or sets the <see cref="T:System.Windows.Media.BitmapScalingMode" /> for the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-254">的 <see cref="T:System.Windows.Media.BitmapScalingMode" /> 值 <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-254">The <see cref="T:System.Windows.Media.BitmapScalingMode" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualCacheMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CacheMode VisualCacheMode { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CacheMode VisualCacheMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualCacheMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualCacheMode As CacheMode" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::CacheMode ^ VisualCacheMode {  protected public:&#xA;System::Windows::Media::CacheMode ^ get(); protected:&#xA; void set(System::Windows::Media::CacheMode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualCacheMode : System.Windows.Media.CacheMode with get, set" Usage="System.Windows.Media.Visual.VisualCacheMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CacheMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-255">取得或設定 <see cref="T:System.Windows.Media.Visual" /> 的快取表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-255">Gets or sets a cached representation of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-256">保存 <see cref="T:System.Windows.Media.CacheMode" /> 之快取表示的 <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-256">A <see cref="T:System.Windows.Media.CacheMode" /> that holds a cached representation of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-257">設定<xref:System.Windows.Media.Visual.VisualCacheMode%2A>屬性，當您需要以提高效能相當耗時呈現的內容。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-257">Set the <xref:System.Windows.Media.Visual.VisualCacheMode%2A> property when you need to increase performance for content that is time-consuming to render.</span></span> <span data-ttu-id="c9d0e-258">如需詳細資訊，請參閱<xref:System.Windows.Media.BitmapCache>。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-258">For more information, see <xref:System.Windows.Media.BitmapCache>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.CacheMode" />
        <altmember cref="P:System.Windows.Media.ContainerVisual.CacheMode" />
        <altmember cref="T:System.Windows.Media.BitmapCache" />
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected virtual int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualChildrenCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property VisualChildrenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int VisualChildrenCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualChildrenCount : int" Usage="System.Windows.Media.Visual.VisualChildrenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-259">取得 <see cref="T:System.Windows.Media.Visual" /> 的子項目數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-259">Gets the number of child elements for the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-260">子項目數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-260">The number of child elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-261">根據預設，<xref:System.Windows.Media.Visual>沒有子系。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-261">By default, a <xref:System.Windows.Media.Visual> has no children.</span></span> <span data-ttu-id="c9d0e-262">因此，預設實作永遠會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-262">Therefore, the default implementation always returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9d0e-263">下列範例會定義的覆寫實的作<xref:System.Windows.Media.Visual.VisualChildrenCount%2A>。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-263">The following example defines an overridden implementation of <xref:System.Windows.Media.Visual.VisualChildrenCount%2A>.</span></span>  
  
 [!code-csharp[DrawingVisualSample#102a](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingVisualSample/CSharp/Window1.xaml.cs#102a)]
 [!code-vb[DrawingVisualSample#102a](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingVisualSample/visualbasic/window1.xaml.vb#102a)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c9d0e-264">衍生自類別<see cref="T:System.Windows.Media.Visual" />必須覆寫這個屬性，以及<see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />方法，要正確列舉視覺化樹狀結構。</span>
            <span class="sxs-lookup">
              <span data-stu-id="c9d0e-264">A class that derives from <see cref="T:System.Windows.Media.Visual" /> must override this property, and also the <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /> method, for the visual tree to be enumerated correctly.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="VisualClearTypeHint">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Media.ClearTypeHint VisualClearTypeHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.ClearTypeHint VisualClearTypeHint" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualClearTypeHint" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property VisualClearTypeHint As ClearTypeHint" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Media::ClearTypeHint VisualClearTypeHint { System::Windows::Media::ClearTypeHint get(); void set(System::Windows::Media::ClearTypeHint value); };" />
      <MemberSignature Language="F#" Value="member this.VisualClearTypeHint : System.Windows.Media.ClearTypeHint with get, set" Usage="System.Windows.Media.Visual.VisualClearTypeHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ClearTypeHint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-265">取得或設定 <see cref="T:System.Windows.Media.ClearTypeHint" />，以決定 <see cref="T:System.Windows.Media.Visual" /> 中的 ClearType 呈現方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-265">Gets or sets the <see cref="T:System.Windows.Media.ClearTypeHint" /> that determines how ClearType is rendered in the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-266">
            <see cref="T:System.Windows.Media.ClearTypeHint" /> 的 <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-266">A <see cref="T:System.Windows.Media.ClearTypeHint" /> of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualClip">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry VisualClip { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry VisualClip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualClip" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualClip As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Geometry ^ VisualClip {  protected public:&#xA;System::Windows::Media::Geometry ^ get(); protected:&#xA; void set(System::Windows::Media::Geometry ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualClip : System.Windows.Media.Geometry with get, set" Usage="System.Windows.Media.Visual.VisualClip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-267">取得或設定 <see cref="T:System.Windows.Media.Visual" /> 的裁剪區域做為 <see cref="T:System.Windows.Media.Geometry" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-267">Gets or sets the clip region of the <see cref="T:System.Windows.Media.Visual" /> as a <see cref="T:System.Windows.Media.Geometry" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-268">做為 <see cref="T:System.Windows.Media.Geometry" /> 型別之視覺物件的裁剪區域值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-268">The clip region value of the visual as a <see cref="T:System.Windows.Media.Geometry" /> type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms746710(v=vs.90)">
          <span data-ttu-id="c9d0e-269">如何： 建立裁剪區域</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-269">How to: Create a Clip Region</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="VisualEdgeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.EdgeMode VisualEdgeMode { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.EdgeMode VisualEdgeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualEdgeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualEdgeMode As EdgeMode" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::EdgeMode VisualEdgeMode {  protected public:&#xA;System::Windows::Media::EdgeMode get(); protected:&#xA; void set(System::Windows::Media::EdgeMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualEdgeMode : System.Windows.Media.EdgeMode with get, set" Usage="System.Windows.Media.Visual.VisualEdgeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.EdgeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-270">取得或設定 <see cref="T:System.Windows.Media.Visual" /> 的邊緣模式做為 <see cref="T:System.Windows.Media.EdgeMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-270">Gets or sets the edge mode of the <see cref="T:System.Windows.Media.Visual" /> as an <see cref="T:System.Windows.Media.EdgeMode" /> value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-271">視覺物件的 <see cref="T:System.Windows.Media.EdgeMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-271">The <see cref="T:System.Windows.Media.EdgeMode" /> value of the visual.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect VisualEffect { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.Effect VisualEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualEffect As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Effects::Effect ^ VisualEffect {  protected public:&#xA;System::Windows::Media::Effects::Effect ^ get(); protected:&#xA; void set(System::Windows::Media::Effects::Effect ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualEffect : System.Windows.Media.Effects.Effect with get, set" Usage="System.Windows.Media.Visual.VisualEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-272">取得或設定要套用至 <see cref="T:System.Windows.Media.Visual" /> 的點陣圖效果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-272">Gets or sets the bitmap effect to apply to the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-273">表示點陣圖效果的 <see cref="T:System.Windows.Media.Effects.Effect" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-273">An <see cref="T:System.Windows.Media.Effects.Effect" /> that represents the bitmap effect.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="VisualOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Vector VisualOffset { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector VisualOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualOffset As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Vector VisualOffset {  protected public:&#xA;System::Windows::Vector get(); protected:&#xA; void set(System::Windows::Vector value); };" />
      <MemberSignature Language="F#" Value="member this.VisualOffset : System.Windows.Vector with get, set" Usage="System.Windows.Media.Visual.VisualOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-274">取得或設定視覺物件的位移值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-274">Gets or sets the offset value of the visual object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-275">指定位移值的 <see cref="T:System.Windows.Vector" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-275">A <see cref="T:System.Windows.Vector" /> that specifies the offset value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualOpacity">
      <MemberSignature Language="C#" Value="public double VisualOpacity { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VisualOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualOpacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:  property double VisualOpacity {  protected public:&#xA;double get(); protected:&#xA; void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.VisualOpacity : double with get, set" Usage="System.Windows.Media.Visual.VisualOpacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-276">取得或設定 <see cref="T:System.Windows.Media.Visual" /> 的不透明度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-276">Gets or sets the opacity of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-277">視覺物件的不透明度值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-277">The opacity value of the visual.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-278">不透明度值<xref:System.Windows.Media.Visual>會以介於 0 和 1 之間的值。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-278">The value of the opacity of the <xref:System.Windows.Media.Visual> is expressed as a value between 0 and 1.</span></span> <span data-ttu-id="c9d0e-279">值為 0 表示的項目是完全透明，而值為 1 表示元素完全不透明。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-279">A value of 0 indicates that the element is completely transparent, whereas a value of 1 indicates that the element is completely opaque.</span></span> <span data-ttu-id="c9d0e-280">值為 0.5 表示的項目是 50%不透明。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-280">A value of 0.5 indicates that the element is 50 percent opaque.</span></span> <span data-ttu-id="c9d0e-281">小於 0 的值視為 0;大於 1 的值會視為 1。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-281">Values that are less than 0 are treated as 0; values that are greater than 1 are treated as 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualOpacityMask">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush VisualOpacityMask { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush VisualOpacityMask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualOpacityMask" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualOpacityMask As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Brush ^ VisualOpacityMask {  protected public:&#xA;System::Windows::Media::Brush ^ get(); protected:&#xA; void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualOpacityMask : System.Windows.Media.Brush with get, set" Usage="System.Windows.Media.Visual.VisualOpacityMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-282">取得或設定 <see cref="T:System.Windows.Media.Brush" /> 值，這個值表示 <see cref="T:System.Windows.Media.Visual" /> 的不透明遮罩。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-282">Gets or sets the <see cref="T:System.Windows.Media.Brush" /> value that represents the opacity mask of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-283">
            <see cref="T:System.Windows.Media.Brush" />，表示視覺物件的不透明遮罩值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-283">A <see cref="T:System.Windows.Media.Brush" /> that represents the opacity mask value of the visual.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-284">不透明度遮罩是<xref:System.Windows.Media.Brush>套用至任何 alpha 色板遮罩，如這個視覺效果的呈現內容。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-284">The opacity mask is a <xref:System.Windows.Media.Brush> that is applied to any alpha-channel masking for the rendered content of this visual.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualParent">
      <MemberSignature Language="C#" Value="protected System.Windows.DependencyObject VisualParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject VisualParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualParent" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property VisualParent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::DependencyObject ^ VisualParent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualParent : System.Windows.DependencyObject" Usage="System.Windows.Media.Visual.VisualParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-285">取得視覺物件的視覺化樹狀結構父物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-285">Gets the visual tree parent of the visual object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-286">
            <see cref="T:System.Windows.Media.Visual" /> 父物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-286">The <see cref="T:System.Windows.Media.Visual" /> parent.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkContentElement.Parent" />
        <altmember cref="T:System.Windows.Media.VisualTreeHelper" />
      </Docs>
    </Member>
    <Member MemberName="VisualScrollableAreaClip">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Windows.Rect&gt; VisualScrollableAreaClip { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.Windows.Rect&gt; VisualScrollableAreaClip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualScrollableAreaClip" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualScrollableAreaClip As Nullable(Of Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:  property Nullable&lt;System::Windows::Rect&gt; VisualScrollableAreaClip {  protected public:&#xA;Nullable&lt;System::Windows::Rect&gt; get(); protected:&#xA; void set(Nullable&lt;System::Windows::Rect&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.VisualScrollableAreaClip : Nullable&lt;System.Windows.Rect&gt; with get, set" Usage="System.Windows.Media.Visual.VisualScrollableAreaClip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Windows.Rect&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-287">取得或設定 <see cref="T:System.Windows.Media.Visual" /> 的可捲動裁剪區域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-287">Gets or sets a clipped scrollable area for the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-288">表示可捲動裁剪區域的 <see cref="T:System.Windows.Rect" />，如果沒有指派裁剪區域，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-288">A <see cref="T:System.Windows.Rect" /> that represents the scrollable clipping area, or <see langword="null" /> if no clipping area is assigned.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-289">設定<xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A>屬性，來啟用加速捲動時在軟體中轉譯。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-289">Set the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property to enable accelerated scrolling when rendering in software.</span></span> <span data-ttu-id="c9d0e-290">這是用於遠端轉譯案例，例如執行透過遠端桌面或虛擬機器中執行。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-290">This is useful in remote rendering scenarios, such as running over Remote Desktop or running in a virtual machine.</span></span> <span data-ttu-id="c9d0e-291">將捲動其子系的父項目上設定此屬性。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-291">Set this property on the parent element whose children will be scrolled.</span></span> <span data-ttu-id="c9d0e-292">設定<xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A>屬性沒有任何作用，當轉譯是透過硬體加速。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-292">Setting the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property has no effect when rendering is hardware accelerated.</span></span>  
  
 <span data-ttu-id="c9d0e-293"><xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A>屬性可讓特定的進階案例。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-293">The <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property enables specific, advanced scenarios.</span></span> <span data-ttu-id="c9d0e-294">下列清單顯示適用於當您使用的警告<xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-294">The following list shows the caveats that apply when you use the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property.</span></span>  
  
-   <span data-ttu-id="c9d0e-295">捲動區域的背景必須是不透明的或捲動成品將會發生。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-295">The background of the scrolled area must be opaque, or scrolling artifacts will occur.</span></span>  
  
-   <span data-ttu-id="c9d0e-296"><xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A>屬性可讓您加速捲動僅當 WPF 呈現在軟體中。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-296">The <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property accelerates scrolling only when WPF is rendering in software.</span></span> <span data-ttu-id="c9d0e-297">比方說，當應用程式執行的是透過遠端桌面或虛擬機器中本機執行時，就會發生這種情況。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-297">For example, this situation occurs when the application is running over Remote Desktop or running locally in a virtual machine.</span></span>  
  
-   <span data-ttu-id="c9d0e-298">在硬體中轉譯時，捲動行為不變。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-298">The scrolling behavior is unchanged when rendering in hardware.</span></span> <span data-ttu-id="c9d0e-299">若要避免捲動行為的差異，您應該保留<xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A>硬體和軟體啟用的屬性。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-299">To prevent differences in scrolling behavior, you should keep the <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> property enabled for both hardware and software.</span></span>  
  
-   <span data-ttu-id="c9d0e-300">旋轉及傾斜轉換加速的停用捲動。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-300">Rotate and skew transforms disable accelerated scrolling.</span></span> <span data-ttu-id="c9d0e-301">縮放轉換和水平或垂直捲動區域上方的翻譯正確運作，並不會停用捲動加速。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-301">Scale transforms and horizontal or vertical translations above the scrolled region work correctly and do not disable scrolling acceleration.</span></span>  
  
-   <span data-ttu-id="c9d0e-302">變更樹狀子目錄或觸發的可捲動區域來進行重繪透過動畫的組件行為如預期般運作，但會失去加速捲動重繪區域的優點。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-302">Changing the subtree or triggering parts of the scrollable area to redraw via animation behave as expected, but lose the benefit of accelerated scrolling for the redrawn area.</span></span> <span data-ttu-id="c9d0e-303">任何在相同的畫面格期間失效的捲動的區域的動畫中的捲動，就會發生可消除這種最佳化的優點。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-303">Any animation that invalidates the scrolled area during the same frame in which scrolling occurs eliminates the benefit of this optimization.</span></span>  
  
-   <span data-ttu-id="c9d0e-304"><xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A>矩形向內貼齊像素。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-304">The <xref:System.Windows.Media.Visual.VisualScrollableAreaClip%2A> rectangle snaps inward to pixels.</span></span> <span data-ttu-id="c9d0e-305">因此，貼齊捲動的矩形的大小一律為小於或等於您已設定的大小。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-305">Therefore, the snapped size of the scrolling rectangle is always less than or equal to the size you have set.</span></span>  
  
-   <span data-ttu-id="c9d0e-306">向下貼齊位移。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-306">Offsets snap downward.</span></span> <span data-ttu-id="c9d0e-307">這表示先前的差異進行位移，而且目前的貼齊的位移一律是像素為單位的整數。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-307">This means that the difference of the previous snapped offset and current snapped offset is always an integer number of pixels.</span></span>  
  
-   <span data-ttu-id="c9d0e-308">點擊的測試可能會相差一個像素到。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-308">Hit tests can be off by up to a pixel.</span></span>  
  
-   <span data-ttu-id="c9d0e-309">版面配置進位應該開啟，因為它會確保可捲動區域和界限的視窗用戶端區域邊緣會貼齊像素界限，導致正確對齊。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-309">Layout rounding should be turned on, because it ensures that the edges of scrollable areas and the boundary window client area are snapped to pixel boundaries, resulting in correct alignment.</span></span>  
  
-   <span data-ttu-id="c9d0e-310">捲動加速不適用於多層式視窗。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-310">Scrolling acceleration does not work on layered windows.</span></span> <span data-ttu-id="c9d0e-311">這表示在哪個 AllowTransparency windows = = true，window.windowstyle = = none，依此類推。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-311">This means windows in which AllowTransparency == true, window.windowstyle == none, and so on.</span></span>  
  
-   <span data-ttu-id="c9d0e-312">捲動加速不全視窗呈現期間會發生。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-312">Scrolling acceleration does not occur during full-window rendering.</span></span>  
  
-   <span data-ttu-id="c9d0e-313">捲動加速無法運作時的視窗是橫跨兩個監視器。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-313">Scrolling acceleration does not work when the window straddles two monitors.</span></span>  
  
-   <span data-ttu-id="c9d0e-314">捲動加速無法運作時的捲動項目之父鏈結的中繼呈現目標。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-314">Scrolling acceleration does not work in the presence of intermediate render targets in the parent chain of the scrolled element.</span></span> <span data-ttu-id="c9d0e-315">下列清單顯示其中某些中繼呈現目標。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-315">The following list shows some of these intermediate render targets.</span></span>  
  
    -   <span data-ttu-id="c9d0e-316">剪輯</span><span class="sxs-lookup"><span data-stu-id="c9d0e-316">Clips</span></span>  
  
    -   <span data-ttu-id="c9d0e-317">效果</span><span class="sxs-lookup"><span data-stu-id="c9d0e-317">Effects</span></span>  
  
    -   <span data-ttu-id="c9d0e-318">DrawingBrushes</span><span class="sxs-lookup"><span data-stu-id="c9d0e-318">DrawingBrushes</span></span>  
  
    -   <span data-ttu-id="c9d0e-319">VisualBrushes</span><span class="sxs-lookup"><span data-stu-id="c9d0e-319">VisualBrushes</span></span>  
  
    -   <span data-ttu-id="c9d0e-320">OpacityMasks</span><span class="sxs-lookup"><span data-stu-id="c9d0e-320">OpacityMasks</span></span>  
  
    -   <span data-ttu-id="c9d0e-321">Opacity</span><span class="sxs-lookup"><span data-stu-id="c9d0e-321">Opacity</span></span>  
  
-   <span data-ttu-id="c9d0e-322">只有一個加速的捲動可能會發生每個畫面。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-322">Only one accelerated scroll can happen per frame.</span></span> <span data-ttu-id="c9d0e-323">可以有多個加速的捲動區域，但其中只有一個元件可以在範圍內執行加速的捲軸。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-323">There can be multiple accelerated scroll areas, but only one of them can perform an accelerated scroll during a frame.</span></span> <span data-ttu-id="c9d0e-324">要捲動的區域為不定。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-324">Which area is scrolled is indeterminate.</span></span>  
  
-   <span data-ttu-id="c9d0e-325">捲動加速支援以上未與內容的其餘部分捲動捲軸的區域 （以 z 軸順序） 的內容。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-325">Scrolling acceleration supports content above the scrolling region (in z-order) that is not scrolled with the rest of the content.</span></span> <span data-ttu-id="c9d0e-326">系統計算所有必要的已變更區域，並完成加速的捲軸，但它會傳送數個額外的點陣圖，透過網路移動不小心捲動的部分將其正確的位置上畫面。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-326">The system calculates all necessary dirty regions and completes the accelerated scroll, but it sends several additional bitmaps over the wire to move the unintentionally scrolled portion back to its correct position on screen.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTextHintingMode">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Media.TextHintingMode VisualTextHintingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.TextHintingMode VisualTextHintingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualTextHintingMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property VisualTextHintingMode As TextHintingMode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Media::TextHintingMode VisualTextHintingMode { System::Windows::Media::TextHintingMode get(); void set(System::Windows::Media::TextHintingMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualTextHintingMode : System.Windows.Media.TextHintingMode with get, set" Usage="System.Windows.Media.Visual.VisualTextHintingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextHintingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-327">取得或設定 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.Windows.Media.TextHintingMode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-327">Gets or sets the <see cref="T:System.Windows.Media.TextHintingMode" /> of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-328">套用至 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.Windows.Media.TextHintingMode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-328">The <see cref="T:System.Windows.Media.TextHintingMode" /> applied to the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTextRenderingMode">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Media.TextRenderingMode VisualTextRenderingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.TextRenderingMode VisualTextRenderingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualTextRenderingMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property VisualTextRenderingMode As TextRenderingMode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::Media::TextRenderingMode VisualTextRenderingMode { System::Windows::Media::TextRenderingMode get(); void set(System::Windows::Media::TextRenderingMode value); };" />
      <MemberSignature Language="F#" Value="member this.VisualTextRenderingMode : System.Windows.Media.TextRenderingMode with get, set" Usage="System.Windows.Media.Visual.VisualTextRenderingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextRenderingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-329">取得或設定 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.Windows.Media.TextRenderingMode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-329">Gets or sets the <see cref="T:System.Windows.Media.TextRenderingMode" /> of the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-330">套用至 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.Windows.Media.TextRenderingMode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-330">The <see cref="T:System.Windows.Media.TextRenderingMode" /> applied to the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Transform VisualTransform { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Transform VisualTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualTransform As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::Transform ^ VisualTransform {  protected public:&#xA;System::Windows::Media::Transform ^ get(); protected:&#xA; void set(System::Windows::Media::Transform ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualTransform : System.Windows.Media.Transform with get, set" Usage="System.Windows.Media.Visual.VisualTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-331">取得或設定 <see cref="T:System.Windows.Media.Transform" /> 的 <see cref="T:System.Windows.Media.Visual" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-331">Gets or sets the <see cref="T:System.Windows.Media.Transform" /> value for the <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-332">視覺的轉換值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-332">The transform value of the visual.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualXSnappingGuidelines">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DoubleCollection VisualXSnappingGuidelines { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DoubleCollection VisualXSnappingGuidelines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualXSnappingGuidelines" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualXSnappingGuidelines As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::DoubleCollection ^ VisualXSnappingGuidelines {  protected public:&#xA;System::Windows::Media::DoubleCollection ^ get(); protected:&#xA; void set(System::Windows::Media::DoubleCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualXSnappingGuidelines : System.Windows.Media.DoubleCollection with get, set" Usage="System.Windows.Media.Visual.VisualXSnappingGuidelines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-333">取得或設定 X 座標 (垂直) 導線集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-333">Gets or sets the x-coordinate (vertical) guideline collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-334">視覺效果的 X 座標 (垂直) 導線集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-334">The x-coordinate guideline collection of the visual.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-335">像素貼齊功能是，讓物件邊緣的裝置特定像素轉譯內容的配置固定的程序。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-335">Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</span></span> <span data-ttu-id="c9d0e-336">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 圖形系統會使用裝置獨立單位來啟用解析度和裝置獨立性。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-336">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence.</span></span> <span data-ttu-id="c9d0e-337">每個裝置獨立像素都會依系統的 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] 設定自動進行調整。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-337">Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] setting.</span></span> <span data-ttu-id="c9d0e-338">這讓 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 應用程式針對不同的 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 設定進行適當調整，並自動讓應用程式感知 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-338">This provides [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]-aware.</span></span>  
  
 <span data-ttu-id="c9d0e-339">不過，這[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]獨立性可以建立不規則的邊緣轉譯，由於消除鋸齒。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-339">However, this [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing.</span></span> <span data-ttu-id="c9d0e-340">這些成品，通常被視為模糊或 「 軟性 」 的邊緣，就會發生的一個邊緣位置落在裝置像素，而不是裝置像素之間。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-340">These artifacts, commonly seen as blurry or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</span></span> <span data-ttu-id="c9d0e-341">若要解決這個問題，[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]提供 「 貼齊 」 裝置的像素，消除柔和的邊界所產生的消除鋸齒視覺化樹狀結構中的物件邊緣的方式。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-341">To address this issue, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to "snap" to device pixels, eliminating the soft edges produced by anti-aliasing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)" />
      </Docs>
    </Member>
    <Member MemberName="VisualYSnappingGuidelines">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DoubleCollection VisualYSnappingGuidelines { protected internal get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.DoubleCollection VisualYSnappingGuidelines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Visual.VisualYSnappingGuidelines" />
      <MemberSignature Language="VB.NET" Value="Public Property VisualYSnappingGuidelines As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:  property System::Windows::Media::DoubleCollection ^ VisualYSnappingGuidelines {  protected public:&#xA;System::Windows::Media::DoubleCollection ^ get(); protected:&#xA; void set(System::Windows::Media::DoubleCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.VisualYSnappingGuidelines : System.Windows.Media.DoubleCollection with get, set" Usage="System.Windows.Media.Visual.VisualYSnappingGuidelines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9d0e-342">取得或設定 Y 座標 (水平) 導線集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-342">Gets or sets the y-coordinate (horizontal) guideline collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9d0e-343">視覺效果的 Y 座標 (垂直) 導線集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9d0e-343">The y-coordinate guideline collection of the visual.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9d0e-344">像素貼齊功能是，讓物件邊緣的裝置特定像素轉譯內容的配置固定的程序。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-344">Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</span></span> <span data-ttu-id="c9d0e-345">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 圖形系統會使用裝置獨立單位來啟用解析度和裝置獨立性。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-345">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] graphics system uses device-independent units to enable resolution and device independence.</span></span> <span data-ttu-id="c9d0e-346">每個裝置獨立像素都會依系統的 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] 設定自動進行調整。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-346">Each device independent pixel automatically scales with the system's [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] setting.</span></span> <span data-ttu-id="c9d0e-347">這讓 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 應用程式針對不同的 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 設定進行適當調整，並自動讓應用程式感知 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-347">This provides [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] applications proper scaling for different [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] settings and makes the application automatically [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]-aware.</span></span>  
  
 <span data-ttu-id="c9d0e-348">不過，這[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]獨立性可以建立不規則的邊緣轉譯，由於消除鋸齒。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-348">However, this [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] independence can create irregular edge rendering due to anti-aliasing.</span></span> <span data-ttu-id="c9d0e-349">這些成品，通常被視為模糊或 「 軟性 」 的邊緣，就會發生的一個邊緣位置落在裝置像素，而不是裝置像素之間。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-349">These artifacts, commonly seen as blurry, or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</span></span> <span data-ttu-id="c9d0e-350">若要解決這個問題，[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]提供 「 貼齊 」 裝置的像素，消除柔和的邊界所產生的消除鋸齒視覺化樹狀結構中的物件邊緣的方式。</span><span class="sxs-lookup"><span data-stu-id="c9d0e-350">To address this issue, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] provides a way for object edges in a visual tree to "snap" to device pixels, eliminating the soft edges produced by anti-aliasing.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)" />
      </Docs>
    </Member>
  </Members>
</Type>