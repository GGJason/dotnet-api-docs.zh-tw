<Type Name="FontFamily" FullName="System.Windows.Media.FontFamily">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cedba6833f01ecdae1e7313cbb49f2558d29b76a" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32037614" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontFamily" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontFamily extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FontFamily" />
  <TypeSignature Language="VB.NET" Value="Public Class FontFamily" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontFamily" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.FontFamilyConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Font)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.FontFamilyValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表一系列的相關字型。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字型家族是一組的字體，共用相同的系列名稱，例如"Times New Roman"，但只有不同的功能。 這些功能差異包括<xref:System.Windows.Media.Typeface.Style%2A>，像是斜體、 和<xref:System.Windows.Media.Typeface.Weight%2A>，例如粗體。  
  
 ![字型](~/add/media/fonts.PNG "字型")  
成員"Times New Roman"字型家族的字體的範例  
  
 大部分[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]項目，例如<xref:System.Windows.Controls.Button>和<xref:System.Windows.Controls.TextBlock>，提供<xref:System.Windows.Controls.Control.FontFamily%2A>可用來指定文字內容的控制項字型的屬性。 設定與該屬性定義之字型<xref:System.Windows.Media.FontFamily>值。 下列範例示範如何在中參考了字型[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]和程式碼中。  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet3)]
 [!code-vb[FontSnippets#FontFallbackSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet3)]
 [!code-xaml[FontSnippets#FontFallbackSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet3)]  
  
 在上述範例中，字型的參考時，"Comic San MS"，都有其*易記名稱*。 此外，在此範例中的字型被假設為系統字型集合中。  
  
## <a name="specifying-fonts-in-alternate-directories"></a>指定替代的目錄中有多種字型  
 A[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]應用程式可以指定一個目錄，包含系統字型集合，來解析字型參考的目錄以外。 字型的易記名稱可以指定絕對[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]字型參考解析，如下列所示的值[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]和程式碼範例。  
  
 [!code-csharp[FontSnippets#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet6)]
 [!code-vb[FontSnippets#FontPackageSnippet6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet6)]
 [!code-xaml[FontSnippets#FontPackageSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet6)]  
  
 字型的易記名稱也可以指定相對[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值，這需要基底[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]字型參考解析。 <xref:System.Windows.Media.FontFamily.BaseUri%2A>屬性<xref:System.Windows.Media.FontFamily>物件會對應至基底[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值。 下列程式碼範例示範如何建立字型參考所組成的基底[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值和相對[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值。  
  
 [!code-csharp[FontSnippets#FontPackageSnippet7](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet7)]
 [!code-vb[FontSnippets#FontPackageSnippet7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet7)]  
  
 您可以使用基底[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]時參考封裝為應用程式部分字型的值。 例如，基底[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值可以是"//application" [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]，可讓您參考會封裝為應用程式資源的字型。 下列程式碼範例顯示的字型參考所組成的基底[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值和相對[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值。  
  
 [!code-csharp[FontSnippets#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 時<xref:System.Windows.Media.FontFamily>指定為在標記中，基底屬性[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]一律隱含的值，其值是[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]的[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]頁面。 隱含的基底[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值搭配相對於[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]易記名稱字串，若要取得之字型的位置中的值。 在下列[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]範例中，請注意，相對[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值會使用 「。 /"標記法，這表示在 「 」 中目前的資料夾中 「 基底[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值。  
  
 [!code-xaml[FontSnippets#FontPackageSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml#fontpackagesnippet1)]  
  
 A[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]應用程式可以將字型封裝為內容項目、 為資源項目或為程式庫資源項目。 如需詳細資訊，請參閱[將字型與應用程式一起封裝](~/docs/framework/wpf/advanced/packaging-fonts-with-applications.md)。  
  
## <a name="font-fallback"></a>字型遞補  
 字型遞補指以外的用戶端應用程式會選取的字型的字型自動替換。 有兩個後援字型為何會叫用的主要原因：  
  
-   用戶端應用程式所指定的字型不存在於系統中。  
  
-   用戶端應用程式所指定的字型不包含所需呈現文字的圖像。  
  
 在[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]，字型遞補機制使用預設後援字型家族，「 通用使用者介面 」，做為替代的字型。 這種字型被定義為組合字型，其檔案名稱為 「 GlobalUserInterface.CompositeFont"。 如需複合字型的詳細資訊，請參閱本主題中的複合字型 > 一節。  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]字型後援機制會取代先前[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]字型替換技術。  
  
## <a name="defining-a-font-fallback-sequence-in-code"></a>程式碼中定義字型後援順序  
 您可以定義字型後援順序中的程式碼，可讓您定義替代的字型。 當您建立<xref:System.Windows.Media.FontFamily>物件，提供多個字型家族的名稱，以逗號分隔，如<xref:System.String>參數，例如"新細明體，新細明體"。 在此情況下，如果無法使用"Comic Sans MS 」 字型中的字符，則會使用"新細明體"字型中的字符。 如果"Comic San MS"或"新細明體"都不需要的圖像 （glyph），後援字型家族的字樣使用時，這是 「 通用使用者介面 」 依預設值。  
  
 下列範例顯示如何定義中的字型後援順序[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]和程式碼中。  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet1)]
 [!code-vb[FontSnippets#FontFallbackSnippet1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet1)]
 [!code-xaml[FontSnippets#FontFallbackSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet1)]  
  
 其中一個回溯序列中的字型可以指定字型的位置。 在下列範例中，「 Pericles 光源 」 參照為應用程式資源，而且"新細明體"參照為系統字型集合成員。  
  
 [!code-csharp[FontSnippets#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml.cs#fontfallbacksnippet2)]
 [!code-vb[FontSnippets#FontFallbackSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontfamilysnippets.xaml.vb#fontfallbacksnippet2)]
 [!code-xaml[FontSnippets#FontFallbackSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontFamilySnippets.xaml#fontfallbacksnippet2)]  
  
## <a name="composite-fonts"></a>複合字型  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]平台提供複合字型功能，以允許在建構的完整範圍多國語言的字型，並避免顯示遺漏的圖像 （glyph）。 複合字型取代[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]字型連結、 後援字型、 字型繫結、 字型關聯和前端使用者定義的字元 (EUDC) 的機制。  
  
 組合字型系列可透過應用程式<xref:System.Windows.Media.FontFamily>和<xref:System.Windows.Media.Typeface>建構函式就像任何其他字型家族。 每個組合字型家族為，，和其他字型，可以提供當地語系化的變化，其多國語言的名稱。  
  
 下列標記範例示範如何將複合字型家族定義為磁碟檔案。 這個檔案可以儲存在預設[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]字型目錄的任何其他安裝字型，或可以參考的任何位置，包括其[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]依名稱參考系列時。  
  
 下列範例示範中的字型家族標記 」。CompositeFont"檔案。  
  
 [!code-xaml[CompositeFontMarkup#CF](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositeFontMarkup/CS/comp.xaml#cf)]  
  
 下列四個複合字型會出現在做為 WPF 安裝一部分的預設 Windows 字型目錄。  
  
|字型|注意|  
|----------|-----------|  
|GlobalMonospace.CompositeFont|使用等寬字型，例如，"新細明體 New"會呈現文字的拉丁字元。|  
|GlobalSanSerif.CompositeFont|使用用 sans serif 字型，例如，[Arial] 的拉丁字元，以呈現文字。|  
|GlobalSerif.CompositeFont|使用新細明體字型，例如"Times New Roman"會呈現文字的拉丁字元。|  
|GlobalUserInterface.CompositeFont|使用預設字型，例如"Times New Roman"會呈現文字的拉丁字元。|  
  
<a name="xamlAttributeUsage_FontFamily"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<object FontFamily="fontFamilyName"/>  
- or -  
<object FontFamily="fontFamilyNamesList"/>  
- or -  
<object FontFamily="fontFamilyFolderReference"/>  
- or -  
<object FontFamily="fontFamilyUriReference"/>  
```  
  
<a name="xamlValues_FontFamily"></a>   
## <a name="xaml-values"></a>XAML 值  
 *fontFamilyName*  
 指定字型家族名稱的字串。  例如，`"Arial"` 或 `"Century Gothic"`。  
  
 *fontFamilyNamesList*  
 指定多個字型家族名稱的字串，每個以的逗號分隔 （逗號之後的任何空白字元會被忽略）。  第一個指定的字型系列做為主要的字型系列。後續的字型家族做為後援，可在其中主要字型家族是無法使用或不適用的情況下使用。  例如，`"Arial, Century Gothic"`指定新細明體，做為主要字型家族，與做為後援字型家族哥世紀。  
  
 *fontFamilyFolderReference*  
 字串，指定包含字型的字型家族名稱的資料夾。  資料夾和字型家族名稱是以 # 字元分隔。  資料夾參考可能是絕對或相對。  例如，`"Custom Fonts\#My Custom Font"`。  
  
 *fontFamilyUriReference*  
 字串，指定[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]字型，以及字型家族名稱。  [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]和字型家族名稱以 # 字元分隔。  例如，`"http://MyFontServer/Fonts/#My Custom Font"`。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Fonts" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.FontFamily" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化匿名 <see cref="T:System.Windows.Media.FontFamily" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您想要以程式設計方式建立複合的字型，請使用此預設建構函式。 這表示您沒有指定字型家族名稱的建構函式，但您必須擴展中的集合<xref:System.Windows.Media.FontFamily.FamilyMaps%2A>和<xref:System.Windows.Media.FontFamily.FamilyNames%2A>之前使用建構的執行個體的集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (familyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(System::String ^ familyName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="familyName">組成新 <see cref="T:System.Windows.Media.FontFamily" /> 的系列名稱。 多個系列名稱應該以逗號分隔。</param>
        <summary>從指定的字型系列名稱初始化 <see cref="T:System.Windows.Media.FontFamily" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定在每個系列名稱`familyName`前面參數可以是任一個目錄的位置參考或[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。 位置參考以井字號分隔系列名稱 (`#`) 字元。 中所指定的多個系列名稱`familyName`參數必須以逗號分隔。  
  
 每個系列可以是實際的字型直接代表一組共用相同的系列名稱，字型檔案，或可以是複合字型檔案中定義的系列名稱的參考。  
  
 有多個家族識別時，第二個和後續的字型系列會做為後援系列，處理第一個字型系列不支援的字碼指標。 不支援第一個字型家族的每個字碼指標，會接著檢查每個後續的系列。  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#103](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#103)]
 [!code-vb[FontSnippets#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="familyName" /> 不可以是 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (Uri baseUri, string familyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri baseUri, string familyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseUri As Uri, familyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(Uri ^ baseUri, System::String ^ familyName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="familyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">指定用來解析 <c>familyName</c> 的基底 [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]。</param>
        <param name="familyName">組成新 <see cref="T:System.Windows.Media.FontFamily" /> 的系列名稱。 多個系列名稱應該以逗號分隔。</param>
        <summary>從指定的字型系列名稱和選擇性基底[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 值，初始化 <see cref="T:System.Windows.Media.FontFamily" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `familyName`值可以指定相對[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值，這需要基底[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]字型參考解析。 `baseUri`值可以是`null`。  
  
   
  
## Examples  
 下列程式碼顯示字型參考所組成的基底[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值和相對[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]值。  
  
 [!code-csharp[FontSnippets#FontPackageSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet2)]
 [!code-vb[FontSnippets#FontPackageSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public double Baseline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Baseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public Property Baseline As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Baseline { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定基準線與字元儲存格頂端之間的距離。</summary>
        <value>
          <see cref="T:System.Double" />，表示基準線與字元儲存格頂端之間的距離，以佔字型 em 大小的分數表示。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來解析字型系列名稱的基底[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]。</summary>
        <value>型別 <see cref="T:System.Uri" /> 的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回值是`null`如果字型家族名稱不會依賴基底[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]解決字型參考。 若要擷取用來建構字型家族名稱<xref:System.Windows.Media.FontFamily>物件，請使用<xref:System.Windows.Media.FontFamily.Source%2A>屬性。  
  
   
  
## Examples  
 下列範例示範擷取的結果<xref:System.Windows.Media.FontFamily.BaseUri%2A>屬性從<xref:System.Windows.Media.FontFamily>物件。  
  
 [!code-csharp[FontSnippets#FontPackageSnippet9](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet9)]
 [!code-vb[FontSnippets#FontPackageSnippet9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">要比較的 <see cref="T:System.Windows.Media.FontFamily" /> 物件。</param>
        <summary>取得值，這個值表示目前的字型家族物件與指定的字型家族物件是否相同。</summary>
        <returns>
          如果 <paramref name="o" /> 等於目前的 <see cref="T:System.Windows.Media.FontFamily" /> 物件，則為 <see langword="true" />；否則為 <see langword="false" />。 如果 <paramref name="o" /> 不是 <see cref="T:System.Windows.Media.FontFamily" /> 物件，則會傳回 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyMaps">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FontFamilyMapCollection FamilyMaps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FontFamilyMapCollection FamilyMaps" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyMaps" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyMaps As FontFamilyMapCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FontFamilyMapCollection ^ FamilyMaps { System::Windows::Media::FontFamilyMapCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FontFamilyMapCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Media.FontFamilyMap" /> 物件的集合。</summary>
        <value>包含 <see cref="T:System.Windows.Media.FontFamilyMapCollection" /> 物件的 <see cref="T:System.Windows.Media.FontFamilyMap" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如<xref:System.Windows.Media.FontFamily>使用字型家族名稱，所建立的物件<xref:System.Windows.Media.FontFamily.FamilyMaps%2A>屬性會傳回空白、 唯讀集合。  
  
 <xref:System.Windows.Media.FontFamilyMap>物件會定義用來顯示一組指定的 Unicode 字元指定的文化特性的哪一種字型。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyNames">
      <MemberSignature Language="C#" Value="public System.Windows.Media.LanguageSpecificStringDictionary FamilyNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.LanguageSpecificStringDictionary FamilyNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyNames As LanguageSpecificStringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::LanguageSpecificStringDictionary ^ FamilyNames { System::Windows::Media::LanguageSpecificStringDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.LanguageSpecificStringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得字串和 <see cref="T:System.Globalization.CultureInfo" /> 值的集合，這些字串和值表示 <see cref="T:System.Windows.Media.FontFamily" /> 物件的字型系列名稱。</summary>
        <value>表示字型系列名稱的 <see cref="T:System.Windows.Media.LanguageSpecificStringDictionary" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#106](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#106)]
 [!code-vb[FontSnippets#106](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#106)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FamilyTypefaces">
      <MemberSignature Language="C#" Value="public System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.FamilyTypefaceCollection FamilyTypefaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.FamilyTypefaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FamilyTypefaces As FamilyTypefaceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::FamilyTypefaceCollection ^ FamilyTypefaces { System::Windows::Media::FamilyTypefaceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.FamilyTypefaceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Media.FontFamily" /> 物件的字樣集合。</summary>
        <value>
          <see cref="T:System.Windows.Media.FamilyTypefaceCollection" />，表示 <see cref="T:System.Windows.Media.FontFamily" /> 物件的字樣集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_FamilyTypefaces"></a>   
## <a name="xaml-property-element-usage"></a>XAML 屬性項目用法  
  
```  
<object>  
  <object.FamilyTypefaces>  
    <OneOrMoreFontFamilyTypefaces/>  
  </object.FamilyTypefaces>  
</object>  
```  
  
<a name="xamlValues_FamilyTypefaces"></a>   
## <a name="xaml-values"></a>XAML 值  
 *OneOrMoreFontFamilyTypefaces*  
 一或多個字樣<xref:System.Windows.Media.FontFamily>物件。  
  
   
  
## Examples  
 [!code-csharp[FontSnippets#107](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#107)]
 [!code-vb[FontSnippets#107](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#107)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>做為 <see cref="T:System.Windows.Media.FontFamily" /> 的雜湊函式。 它適用於雜湊演算法和資料結構，例如雜湊資料表。</summary>
        <returns>
          <see cref="T:System.Int32" /> 值，表示目前物件的雜湊程式碼。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypefaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt; GetTypefaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Windows.Media.Typeface&gt; GetTypefaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.GetTypefaces" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypefaces () As ICollection(Of Typeface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Windows::Media::Typeface ^&gt; ^ GetTypefaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Windows.Media.Typeface&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Windows.Media.Typeface" /> 物件的集合，這些物件表示預設系統字型位置中的字樣。</summary>
        <returns>
          <see cref="T:System.Collections.Generic.ICollection`1" /> 物件的 <see cref="T:System.Windows.Media.Typeface" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[FontSnippets#104](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/Window1.xaml.cs#104)]
 [!code-vb[FontSnippets#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/window1.xaml.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineSpacing">
      <MemberSignature Language="C#" Value="public double LineSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.LineSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Property LineSpacing As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineSpacing { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Media.FontFamily" /> 物件的行距值。 行距是當使用這個字型的文字時，基準線與基準線之間的建議距離，以相對於 em 大小的大小表示。</summary>
        <value>
          <see cref="T:System.Double" />，表示 <see cref="T:System.Windows.Media.FontFamily" /> 物件的行距。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FontFamily.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得用來建構 <see cref="T:System.Windows.Media.FontFamily" /> 物件的字型家族名稱。</summary>
        <value>
          <see cref="T:System.Windows.Media.FontFamily" /> 物件的字型家族名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要傳回基底[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]值<xref:System.Windows.Media.FontFamily>物件，請使用<xref:System.Windows.Media.FontFamily.BaseUri%2A>。  
  
 如果<xref:System.Windows.Media.FontFamily>已建立物件，而不指定字型家族名稱、 傳回值是<xref:System.String.Empty>。  
  
   
  
## Examples  
 下列範例示範擷取的結果<xref:System.Windows.Media.FontFamily.BaseUri%2A>和<xref:System.Windows.Media.FontFamily.Source%2A>屬性值從<xref:System.Windows.Media.FontFamily>物件。  
  
 [!code-csharp[FontSnippets#FontPackageSnippet10](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontPackageSnippets.xaml.cs#fontpackagesnippet10)]
 [!code-vb[FontSnippets#FontPackageSnippet10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FontSnippets/visualbasic/fontpackagesnippets.xaml.vb#fontpackagesnippet10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FontFamily.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="P:System.Windows.Media.FontFamily.Source" /> 屬性值。</summary>
        <returns>
          <see cref="T:System.Windows.Media.FontFamily" /> 物件的來源位置，包括目錄或[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] 位置參考。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Media.FontFamily>已建立物件，而不指定字型家族名稱、 傳回值是<xref:System.String.Empty>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>