<Type Name="RotateTransform" FullName="System.Windows.Media.RotateTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8989cb175e77a8e12790ce78aa552a074b25aede" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46694872" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RotateTransform : System.Windows.Media.Transform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RotateTransform extends System.Windows.Media.Transform" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.RotateTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RotateTransform&#xA;Inherits Transform" />
  <TypeSignature Language="C++ CLI" Value="public ref class RotateTransform sealed : System::Windows::Media::Transform" />
  <TypeSignature Language="F#" Value="type RotateTransform = class&#xA;    inherit Transform" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Transform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>將物件根據 2-D x-y 座標系統中的指定點進行順時針旋轉。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Windows.Media.RotateTransform>旋轉除以指定的物件<xref:System.Windows.Media.RotateTransform.Angle%2A>點的相關<xref:System.Windows.Media.RotateTransform.CenterX%2A>， <xref:System.Windows.Media.RotateTransform.CenterY%2A>。  
  
 當您使用<xref:System.Windows.Media.RotateTransform>，了解轉換旋轉的點 （0，0） 的相關特定物件的座標系統。 因此，根據物件的位置，它可能不會就地旋轉 （繞著中心）。 比方說，如果物件是位於沿著 x 軸的 0 的 200 個單位，30 度的旋轉會將物件圓弧 30 度沿著為 200，半徑的繪製原點為中心的圓形。 若要旋轉的物件中，設定<xref:System.Windows.Media.RotateTransform.CenterX%2A>及<xref:System.Windows.Media.RotateTransform.CenterY%2A>的<xref:System.Windows.Media.RotateTransform>要旋轉之物件的中心。  
  
 **Freezable 功能：** 因為它繼承自<xref:System.Windows.Freezable>類別<xref:System.Windows.Media.RotateTransform>類別會提供數個特殊功能：<xref:System.Windows.Media.RotateTransform>物件可以宣告為唯讀以改善所做的多個物件之間共用效能、 複製，並變更為安全執行緒。 如需詳細資訊，所提供的不同功能的相關<xref:System.Windows.Freezable>物件，請參閱[Freezable 物件概觀](~/docs/framework/wpf/advanced/freezable-objects-overview.md)。  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=158252">2d 轉換範例</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.RotateTransform" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 順時針旋轉角度度數為測量單位。 預設的旋轉的中心為原點。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RotateTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RotateTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RotateTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.RotateTransform" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RotateTransform (double angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RotateTransform.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (angle As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RotateTransform(double angle);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.RotateTransform : double -&gt; System.Windows.Media.RotateTransform" Usage="new System.Windows.Media.RotateTransform angle" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle">順時針旋轉角度 (以度數為單位)。</param>
        <summary>初始化 <see cref="T:System.Windows.Media.RotateTransform" /> 類別的執行個體，這個執行個體具有順時針旋轉之指定的角度 (以度數為單位)。 旋轉是以原點 (0,0) 為中心。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RotateTransform (double angle, double centerX, double centerY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 angle, float64 centerX, float64 centerY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RotateTransform.#ctor(System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (angle As Double, centerX As Double, centerY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RotateTransform(double angle, double centerX, double centerY);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.RotateTransform : double * double * double -&gt; System.Windows.Media.RotateTransform" Usage="new System.Windows.Media.RotateTransform (angle, centerX, centerY)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="angle" Type="System.Double" />
        <Parameter Name="centerX" Type="System.Double" />
        <Parameter Name="centerY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="angle">順時針旋轉角度 (以度數為單位)。 如需詳細資訊，請參閱 <see cref="P:System.Windows.Media.RotateTransform.Angle" /> 屬性。</param>
        <param name="centerX">
          <see cref="T:System.Windows.Media.RotateTransform" /> 之中心點的 X 座標。 如需詳細資訊，請參閱 <see cref="P:System.Windows.Media.RotateTransform.CenterX" /> 屬性。</param>
        <param name="centerY">
          <see cref="T:System.Windows.Media.RotateTransform" /> 之中心點的 Y 座標。 如需詳細資訊，請參閱 <see cref="P:System.Windows.Media.RotateTransform.CenterY" /> 屬性。</param>
        <summary>初始化 <see cref="T:System.Windows.Media.RotateTransform" /> 類別的執行個體，這個執行個體具有指定的角度和中心點。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Angle">
      <MemberSignature Language="C#" Value="public double Angle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Angle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RotateTransform.Angle" />
      <MemberSignature Language="VB.NET" Value="Public Property Angle As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Angle { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Angle : double with get, set" Usage="System.Windows.Media.RotateTransform.Angle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定順時針旋轉的角度 (以度數為單位)。</summary>
        <value>順時針旋轉的角度 (以度為單位)。 預設值為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您使用<xref:System.Windows.Media.RotateTransform>，了解轉換旋轉的點 （0，0） 的相關特定物件的座標系統。 因此，根據物件的位置，它可能不會就地旋轉 （繞著中心）。 比方說，如果物件是位於沿著 x 軸的 0 的 200 個單位，30 度的旋轉會將物件圓弧 30 度沿著為 200，半徑的繪製原點為中心的圓形。 若要旋轉的物件中，設定<xref:System.Windows.Media.RotateTransform.CenterX%2A>及<xref:System.Windows.Media.RotateTransform.CenterY%2A>的<xref:System.Windows.Media.RotateTransform>要旋轉之物件的中心。  
  
<a name="dependencyPropertyInfo_Angle"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.RotateTransform.AngleProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=158252">2d 轉換範例</related>
      </Docs>
    </Member>
    <Member MemberName="AngleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AngleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AngleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.RotateTransform.AngleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AngleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AngleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AngleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.RotateTransform.AngleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.RotateTransform.Angle" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CenterX">
      <MemberSignature Language="C#" Value="public double CenterX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CenterX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RotateTransform.CenterX" />
      <MemberSignature Language="VB.NET" Value="Public Property CenterX As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double CenterX { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.CenterX : double with get, set" Usage="System.Windows.Media.RotateTransform.CenterX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定旋轉中心點的 X 座標。</summary>
        <value>旋轉中心的 X 座標。 預設值是<c>0</c>。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您使用<xref:System.Windows.Media.RotateTransform>，了解轉換旋轉的點 （0，0） 的相關特定物件的座標系統。 因此，根據物件的位置，它可能不會就地旋轉 （繞著中心）。 比方說，如果物件是位於沿著 x 軸的 0 的 200 個單位，30 度的旋轉會將物件圓弧 30 度沿著為 200，半徑的繪製原點為中心的圓形。 若要旋轉的物件中，設定<xref:System.Windows.Media.RotateTransform.CenterX%2A>及<xref:System.Windows.Media.RotateTransform.CenterY%2A>的<xref:System.Windows.Media.RotateTransform>要旋轉之物件的中心。  
  
<a name="dependencyPropertyInfo_CenterX"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.RotateTransform.CenterXProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=158252">2d 轉換範例</related>
      </Docs>
    </Member>
    <Member MemberName="CenterXProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CenterXProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CenterXProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.RotateTransform.CenterXProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CenterXProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CenterXProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CenterXProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.RotateTransform.CenterXProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.RotateTransform.CenterX" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CenterY">
      <MemberSignature Language="C#" Value="public double CenterY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CenterY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RotateTransform.CenterY" />
      <MemberSignature Language="VB.NET" Value="Public Property CenterY As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double CenterY { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.CenterY : double with get, set" Usage="System.Windows.Media.RotateTransform.CenterY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定旋轉中心點的 Y 座標。</summary>
        <value>旋轉中心的 Y 座標。 預設值是<c>0</c>。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您使用<xref:System.Windows.Media.RotateTransform>，了解轉換旋轉的點 （0，0） 的相關特定物件的座標系統。 因此，根據物件的位置，它可能不會就地旋轉 （繞著中心）。 比方說，如果物件是位於沿著 x 軸的 0 的 200 個單位，30 度的旋轉會將物件圓弧 30 度沿著為 200，半徑的繪製原點為中心的圓形。 若要旋轉的物件中，設定<xref:System.Windows.Media.RotateTransform.CenterX%2A>及<xref:System.Windows.Media.RotateTransform.CenterY%2A>的<xref:System.Windows.Media.RotateTransform>要旋轉之物件的中心。  
  
<a name="dependencyPropertyInfo_CenterY"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.RotateTransform.CenterYProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=158252">2d 轉換範例</related>
      </Docs>
    </Member>
    <Member MemberName="CenterYProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CenterYProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CenterYProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.RotateTransform.CenterYProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CenterYProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CenterYProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CenterYProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.RotateTransform.CenterYProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.RotateTransform.CenterY" /> 相依性屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.RotateTransform.CenterY%2A> 相依性屬性的識別項。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.RotateTransform Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.RotateTransform Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RotateTransform.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As RotateTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::RotateTransform ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.RotateTransform" Usage="rotateTransform.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.RotateTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>藉由製作這個 <see cref="T:System.Windows.Media.RotateTransform" /> 的深層複本，來建立它的可修改複本。</summary>
        <returns>目前物件的可修改深層複本。 即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="false" />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性仍會傳回 <see langword="true." />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個方法來產生可修改複本的唯讀<xref:System.Windows.Freezable>物件。 為了方便起見，這個方法會遮蔽的強型別實作繼承的版本。  
  
 當這個方法會複製相依性屬性時，會複製資源參考和資料繫結，但可能已不再解析也一樣。 它不會複製動畫或其目前的值。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.RotateTransform CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.RotateTransform CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RotateTransform.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As RotateTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::RotateTransform ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.RotateTransform" Usage="rotateTransform.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.RotateTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>藉由建立這個 <see cref="T:System.Windows.Media.RotateTransform" /> 物件值的深層複製，來建立它的可修改複本。 這個方法不會複製資源參考、資料繫結或動畫，但是會複製其目前值。</summary>
        <returns>目前物件的可修改深層複本 (Deep Copy)。 即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="false" />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性仍為 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個方法來產生可修改複本的唯讀<xref:System.Windows.Freezable>物件。 為了方便起見，這個方法會遮蔽的強型別實作繼承的版本。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.RotateTransform.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="rotateTransform.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override System.Windows.Media.Matrix Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Matrix Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.RotateTransform.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Media::Matrix Value { System::Windows::Media::Matrix get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : System.Windows.Media.Matrix" Usage="System.Windows.Media.RotateTransform.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前的旋轉轉換做為 <see cref="T:System.Windows.Media.Matrix" /> 物件。</summary>
        <value>目前的旋轉轉換做為 <see cref="T:System.Windows.Media.Matrix" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>