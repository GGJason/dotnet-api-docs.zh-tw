<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="VisualTreeHelper.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e915853b0ae47964f34415a9dd0c35719396302.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e915853b0ae47964f34415a9dd0c35719396302</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Provides utility methods that perform common tasks involving nodes in a visual tree.</source>
          <target state="translated">提供公用程式方法，執行以視覺化樹狀呈現節點的一般工作。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Nodes in the visual tree can be either <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> objects.</source>
          <target state="translated">視覺化樹狀結構中的節點可以是<ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Methods that are specific to a type of visual object are typed as either <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph>.</source>
          <target state="translated">視覺物件的類型所特有的方法的型別為其中<ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>However, some methods in the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper&gt;</ph> class can accept a <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph> value that represents either type of visual object.</source>
          <target state="translated">不過中的某些方法<ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper&gt;</ph>類別可以接受<ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>值，表示其中一個視覺物件的類型。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> supports programmatic access to several different tree structures of objects.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 支援以程式設計方式存取物件的數個不同的樹狀目錄結構。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Primarily, this is exposed as a visual tree and a logical tree.</source>
          <target state="translated">這主要被公開做為視覺化樹狀結構，以及邏輯樹狀結構。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>In some cases, the logical tree is a more useful representation of the elements in a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> application, but conceptually the logical tree is implemented at a level beyond the <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> class.</source>
          <target state="translated">在某些情況下，邏輯樹狀結構是中的項目更實用的方式表示<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>實作應用程式，但在概念上之邏輯樹狀結構層級超過<ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Unlike the visual tree, the logical tree can represent nonvisual data objects, such as <ph id="ph1">&lt;xref:System.Windows.Documents.ListItem&gt;</ph>.</source>
          <target state="translated">不同的視覺化樹狀結構中，於邏輯樹狀結構可以代表非視覺化的資料物件，例如<ph id="ph1">&lt;xref:System.Windows.Documents.ListItem&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>For more information on the logical tree, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept>.</source>
          <target state="translated">如需有關邏輯樹狀結構的詳細資訊，請參閱 <bpt id="p1">[</bpt>WPF 中的樹狀結構<ept id="p1">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>The logical tree also is supported by a similar utility method class, <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper&gt;</ph>.</source>
          <target state="translated">邏輯樹狀結構也支援類似的公用程式方法類別<ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>The following example shows how to enumerate all the descendants of a visual object, which is a technique you might want to use if you were interested in serializing all the rendering information of a visual object hierarchy.</source>
          <target state="translated">下列範例示範如何列舉視覺物件的所有子系，如果您對將視覺物件階層的所有轉譯資訊序列化感興趣，這也會是您想要使用的技術。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffect(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> that contains the bitmap effect.</source>
          <target state="translated">包含點陣圖效果的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffect(System.Windows.Media.Visual)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffect" /&gt;</ph> value for the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">傳回指定之 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffect" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffect(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffect" /&gt;</ph> for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffect" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> that contains the bitmap effect input value.</source>
          <target state="translated">包含點陣圖效果輸入值的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput(System.Windows.Media.Visual)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /&gt;</ph> value for the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">傳回指定之 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /&gt;</ph> for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetCacheMode(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to get the <ph id="ph2">&lt;see cref="T:System.Windows.Media.CacheMode" /&gt;</ph> for.</source>
          <target state="translated">要為其取得 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Windows.Media.CacheMode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetCacheMode(System.Windows.Media.Visual)">
          <source>Retrieves the cached representation of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">擷取指定之 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的快取表示。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetCacheMode(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.CacheMode" /&gt;</ph> for <ph id="ph2">&lt;paramref name="reference" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="reference" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.CacheMode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>The parent visual, referenced as a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">父視覺物件，參考為 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>The index that represents the child visual that is contained by <bpt id="p1">&lt;c&gt;</bpt>reference<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">索引，表示 <bpt id="p1">&lt;c&gt;</bpt>reference<ept id="p1">&lt;/c&gt;</ept> 包含的子視覺物件。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>Returns the child visual object from the specified collection index within a specified parent.</source>
          <target state="translated">從指定之父代內的指定的集合索引傳回子視覺物件。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>The index value of the child visual object.</source>
          <target state="translated">子視覺物件的索引值。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetChildrenCount%2A&gt;</ph> method to determine the total number of child elements of a parent visual.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetChildrenCount%2A&gt;</ph>方法來判斷父視覺子項目總數。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>The value of <ph id="ph1">`reference`</ph> can represent either a <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> object, which is why the common base type <ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph> is used here as a parameter type.</source>
          <target state="translated">值<ph id="ph1">`reference`</ph>可以代表<ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph>物件，這也是為什麼通用基底型別<ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph>用為參數型別。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>The following example shows how to enumerate all the descendants of a visual object.</source>
          <target state="translated">下列範例會示範如何列舉的視覺物件的所有下階。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>This is a technique you might use if you are interested in serializing all the rendering information of a visual object hierarchy or are performing analysis or alternative rendering.</source>
          <target state="translated">這是如果您想要序列化的視覺物件階層的所有呈現資訊或執行分析或替代的轉譯，您可能會使用一種技術。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
          <source>The parent visual that is referenced as a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">父視覺物件，參考為 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
          <source>Returns the number of children that the specified visual object contains.</source>
          <target state="translated">傳回指定的視覺物件包含的子系數目。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
          <source>The number of child visuals that the parent visual contains.</source>
          <target state="translated">父視覺物件包含的子視覺物件數目。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetChild%2A&gt;</ph> method to retrieve a specified child of a parent visual.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetChild%2A&gt;</ph>方法來擷取指定的父視覺子系。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
          <source>The value of <ph id="ph1">`reference`</ph> can represent either a <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> object, which is why the common base type <ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph> is used here as a parameter type.</source>
          <target state="translated">值<ph id="ph1">`reference`</ph>可以代表<ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph>物件，這也是為什麼通用基底型別<ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph>用為參數型別。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
          <source>The following example shows how to enumerate all the descendants of a visual object.</source>
          <target state="translated">下列範例會示範如何列舉的視覺物件的所有下階。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
          <source>This is a technique you might use if you are interested in serializing all the rendering information of a visual object hierarchy or are performing analysis or alternative rendering.</source>
          <target state="translated">這是如果您想要序列化的視覺物件階層的所有呈現資訊或執行分析或替代的轉譯，您可能會使用一種技術。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetClip(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose clip region value is returned.</source>
          <target state="translated">要傳回其裁剪區域值的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetClip(System.Windows.Media.Visual)">
          <source>Return the clip region of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> as a <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> value.</source>
          <target state="translated">傳回指定之 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的裁剪區域做為 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetClip(System.Windows.Media.Visual)">
          <source>The clip region value of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> returned as a <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的裁剪區域值，以 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> 型別傳回。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Returns the cached bounding box rectangle for the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的快取周框方塊矩形。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>The 3D visual whose bounding box value is computed.</source>
          <target state="translated">要計算其周框方塊值的 3D 視覺物件。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>Returns the cached bounding box rectangle for the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph>.</source>
          <target state="translated">傳回指定之 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph> 的快取周框方塊矩形。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>The bounding box 3D rectangle for the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph> 的周框方塊 3D 矩形。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A&gt;</ph> method to return the union of all the content bounding boxes for all the descendants of a 3D visual object, which includes the <ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> itself.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A&gt;</ph>方法以傳回聯集的週框方塊的 3D 的 visual 物件，其中包含的所有下階的所有內容<ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph>本身。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose bounding box value is computed.</source>
          <target state="translated">要計算其周框方塊值的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)">
          <source>Returns the cached bounding box rectangle for the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">傳回指定之 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的快取周框方塊矩形。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)">
          <source>The bounding box rectangle for the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的周框方塊矩形。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A&gt;</ph> method to return the union of all the content bounding boxes for all the descendants of a visual object, which includes the <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> itself.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A&gt;</ph>方法以傳回聯集的週框方塊的 visual 物件，其中包含的所有下階的所有內容<ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>本身。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)">
          <source>The following example shows how to retrieve the bounding rectangle of a <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> object.</source>
          <target state="translated">下列範例示範如何擷取週框矩形<ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Returns the union of all the content bounding boxes for all the descendants of the visual object, which includes the content bounding box of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">傳回視覺物件之所有下階的所有內容週框方塊聯集，這個聯集包括 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的內容週框方塊。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>The 3D visual whose bounding box value for all descendants is computed.</source>
          <target state="translated">要計算其所有子系之周框方塊值的 3D 視覺物件。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>Returns the union of all the content bounding boxes for all the descendants of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph>, which includes the content bounding box of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph>.</source>
          <target state="translated">傳回指定之 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph> 的所有子系的所有內容周框方塊聯集，包括 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph> 的內容周框方塊。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>Returns the bounding box 3D rectangle for the 3D visual.</source>
          <target state="translated">傳回 3D 視覺物件的周框方塊 3D 矩形。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A&gt;</ph> method to return the cached bounding box rectangle for a 3D visual object.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A&gt;</ph>方法以傳回快取的週框方塊矩形 3D 視覺物件。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose bounding box value for all descendants is computed.</source>
          <target state="translated">要計算其所有子系之周框方塊值的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)">
          <source>Returns the union of all the content bounding boxes for all the descendants of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>, which includes the content bounding box of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的所有子系的所有內容周框方塊聯集，包括 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的內容周框方塊。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)">
          <source>The bounding box rectangle for the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">指定之 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的周框方塊矩形。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A&gt;</ph> method to return the cached bounding box rectangle for a <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A&gt;</ph>方法傳回的快取的週框方塊矩形<ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)">
          <source>The following example shows how to retrieve the union of bounding rectangles for the descendants of a <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
          <target state="translated">下列範例示範如何擷取週框的下階的聯集<ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDpi(System.Windows.Media.Visual)">
          <source>The Visual target object.</source>
          <target state="translated">Visual 目標物件。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDpi(System.Windows.Media.Visual)">
          <source>Gets the DPI information at which this Visual is measured and rendered.</source>
          <target state="translated">取得測量及轉譯此 Visual 的 DPI 資訊。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDpi(System.Windows.Media.Visual)">
          <source>A DPIScale value.</source>
          <target state="translated">DPIScale 值。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose drawing content is returned.</source>
          <target state="translated">要傳回其繪製內容的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)">
          <source>Returns the drawing content of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">傳回指定之 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的繪製內容。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)">
          <source>The drawing content of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> returned as a <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingGroup" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的繪製內容，以 <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingGroup" /&gt;</ph> 型別傳回。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)">
          <source>The following example shows how to retrieve the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> from a visual object by using the <ph id="ph2">&lt;xref:System.Windows.Media.VisualTreeHelper.GetDrawing%2A&gt;</ph> method.</source>
          <target state="translated">下列範例示範如何擷取<ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph>從使用的 visual 物件<ph id="ph2">&lt;xref:System.Windows.Media.VisualTreeHelper.GetDrawing%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)">
          <source>A hit test is then performed on the geometry of each drawing in the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> to determine which geometry was hit.</source>
          <target state="translated">接著執行點擊的測試的每個繪圖幾何上<ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph>來判斷點擊的幾何。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose edge mode value is returned.</source>
          <target state="translated">要傳回其邊緣模式值的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>Returns the edge mode of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> as an <ph id="ph2">&lt;see cref="T:System.Windows.Media.EdgeMode" /&gt;</ph> value.</source>
          <target state="translated">傳回指定之 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的邊緣模式做為 <ph id="ph2">&lt;see cref="T:System.Windows.Media.EdgeMode" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.EdgeMode" /&gt;</ph> value of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.EdgeMode" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>The edge mode value determines how the edges of non-text primitives are rendered.</source>
          <target state="translated">邊緣模式值會決定如何呈現非文字基本的邊緣。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>Edge mode value</source>
          <target state="translated">邊緣模式值</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>Render edges of non-text primitives as aliased edges.</source>
          <target state="translated">呈現為鋸齒邊緣的非文字基本的邊緣。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>No edge mode is specified.</source>
          <target state="translated">未指定邊緣模式。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>Do not change the current edge mode that is applied to non-text primitives.</source>
          <target state="translated">請勿變更套用至非文字基本的目前邊緣模式。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetEffect(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to get the bitmap effect for.</source>
          <target state="translated">要取得其點陣圖效果的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetEffect(System.Windows.Media.Visual)">
          <source>Gets the bitmap effect for the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">取得指定之 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的點陣圖效果。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetEffect(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.Effect" /&gt;</ph> applied to <ph id="ph2">&lt;paramref name="reference" /&gt;</ph>.</source>
          <target state="translated">套用至 <ph id="ph2">&lt;paramref name="reference" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.Effect" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose offset is returned.</source>
          <target state="translated">要傳回其位移 (Offset) 的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>Returns the offset of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的位移。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> that represents the offset value of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph>，表示 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的位移值。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>The returned offset value is relative to the parent of the <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
          <target state="translated">傳回的位移的值是相對於父系的<ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>If you want to return an offset value that is not relative to the parent of a <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph> method.</source>
          <target state="translated">如果您想要傳回的位移的值不是相對於父系的<ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>，使用<ph id="ph2">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>The following markup example shows a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> that is defined with <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> value of 4.</source>
          <target state="translated">下列標記範例所示<ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>定義與<ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph>4 的值。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A&gt;</ph> method to retrieve the offset of the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A&gt;</ph>方法來擷取的位移<ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>The offset values are contained within the returned <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> value.</source>
          <target state="translated">位移的值包含在傳回<ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>The offset takes into account the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> value.</source>
          <target state="translated">位移會考量<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph>值。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>In this case, <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> is 4, and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> is 4.</source>
          <target state="translated">在此情況下，<ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph>為 4，和<ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph>為 4。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose opacity value is returned.</source>
          <target state="translated">要傳回其不透明度值的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
          <source>Returns the opacity of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的不透明度。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the opacity value of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">型別 <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> 的值，表示 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的不透明度值。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
          <source>The value of the opacity is expressed as a value between 0 and 1.</source>
          <target state="translated">不透明度的值被以介於 0 和 1 之間的值。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
          <source>A value of 0 indicates that the element is completely transparent, while a value of 1 indicates that the element is completely opaque.</source>
          <target state="translated">值為 0 表示的項目是完全透明，而值為 1 表示項目，則完全不透明。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
          <source>A value of 0.5 indicates that the element is 50 percent opaque.</source>
          <target state="translated">值為 0.5 表示的項目是 50%不透明。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
          <source>Values less than 0 are treated as 0, and values greater than 1 are treated as 1.</source>
          <target state="translated">值小於 0 會被視為 0，大於 1 的值會被視為 1。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacityMask(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose opacity mask value is returned.</source>
          <target state="translated">要傳回其不透明遮罩值的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacityMask(System.Windows.Media.Visual)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph> value that represents the opacity mask of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph> 值，這個值表示 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的不透明遮罩。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacityMask(System.Windows.Media.Visual)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph> that represents the opacity mask value of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">型別 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph> 的值，表示 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的不透明遮罩值。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacityMask(System.Windows.Media.Visual)">
          <source>The opacity mask is a <ph id="ph1">&lt;xref:System.Windows.Media.Brush&gt;</ph> that is applied to any alpha-channel masking for the rendered content of this <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
          <target state="translated">不透明度遮罩是<ph id="ph1">&lt;xref:System.Windows.Media.Brush&gt;</ph>套用至任何 alpha 色板遮罩所呈現的內容<ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>The visual whose parent is returned.</source>
          <target state="translated">傳回其父代的視覺物件。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> value that represents the parent of the visual object.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> 值，這個值表示視覺物件的父代。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>The parent of the visual.</source>
          <target state="translated">視覺物件的父代。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>The value of <ph id="ph1">`reference`</ph> can represent either a <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> object.</source>
          <target state="translated">值<ph id="ph1">`reference`</ph>可以代表<ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>或<ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose transform value is returned.</source>
          <target state="translated">要傳回其轉換值的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Transform" /&gt;</ph> value for the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Transform" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 值。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>The transform value of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="reference" /&gt;</ph> does not have a transform defined.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的轉換值，如果 <ph id="ph3">&lt;paramref name="reference" /&gt;</ph> 沒有定義轉換則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph> method to return a transform value for the ancestor of a <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
          <target state="translated">或者，您可以使用<ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph>方法來轉換值傳回的上階<ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>This method always returns a valid transform.</source>
          <target state="translated">這個方法一律會傳回有效的轉換。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>The following code example shows how to use <ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetTransform%2A&gt;</ph> method to retrieve the transform for the specified visual object.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetTransform%2A&gt;</ph>方法來擷取指定的視覺物件的轉換。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>Your code should test for <ph id="ph1">`null`</ph> before using the returned value.</source>
          <target state="translated">應該先測試您的程式碼<ph id="ph1">`null`</ph>之前使用傳回的值。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>To return the offset of the returned transform, use the <ph id="ph1">&lt;xref:System.Windows.Media.GeneralTransform.Transform%2A&gt;</ph> method.</source>
          <target state="translated">若要傳回的位移傳回轉換，請使用<ph id="ph1">&lt;xref:System.Windows.Media.GeneralTransform.Transform%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>The offset value is relative to the parent of the <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
          <target state="translated">位移的值是相對於父系的<ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose X-coordinate guideline collection is returned.</source>
          <target state="translated">要傳回其 X 座標導線集合的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>Returns an X-coordinate (vertical) guideline collection.</source>
          <target state="translated">傳回 X 座標 (垂直) 導線集合。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>The X-coordinate guideline collection of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的 X 座標導線集合。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</source>
          <target state="translated">像素貼齊是使裝置特定像素呈現物件邊緣內容版面配置固定的程序。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> graphics system uses device-independent units to enable resolution and device independence.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 圖形系統會使用裝置獨立單位來啟用解析度和裝置獨立性。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>Each device independent pixel automatically scales with the system's <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> setting.</source>
          <target state="translated">每個裝置獨立像素都會依系統的 <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> 設定自動進行調整。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>This provides <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> applications proper scaling for different <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> settings and makes the application automatically <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>-aware.</source>
          <target state="translated">這讓 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 應用程式針對不同的 <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> 設定進行適當調整，並自動讓應用程式感知 <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>However, this <ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> independence can create irregular edge rendering due to anti-aliasing.</source>
          <target state="translated">不過，這<ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>獨立性可以建立異常的邊緣轉譯，因為消除鋸齒。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>These artifacts, commonly seen as blurry, or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</source>
          <target state="translated">這些成品，通常被視為模糊或 「 軟式 」 的邊緣，就會發生的邊緣位置落在裝置像素，而不是裝置像素之間。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>To address this issue, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> provides a way for object edges in a visual tree to "snap" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing.</source>
          <target state="translated">若要解決此問題，<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>提供方法的 「 對齊 」 裝置像素，透過像素貼齊、 貼至視覺化樹狀結構中的物件邊緣消除柔和消除鋸齒所產生的邊界。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose Y-coordinate guideline collection is returned.</source>
          <target state="translated">要傳回其 Y 座標導線集合的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>Returns a Y-coordinate (horizontal) guideline collection.</source>
          <target state="translated">傳回 Y 座標 (水平) 導線集合。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>The Y-coordinate guideline collection of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的 Y 座標導線集合。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</source>
          <target state="translated">像素貼齊是使裝置特定像素呈現物件邊緣內容版面配置固定的程序。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> graphics system uses device-independent units to enable resolution and device independence.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 圖形系統會使用裝置獨立單位來啟用解析度和裝置獨立性。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>Each device independent pixel automatically scales with the system's <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> setting.</source>
          <target state="translated">每個裝置獨立像素都會依系統的 <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> 設定自動進行調整。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>This provides <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> applications proper scaling for different <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> settings and makes the application automatically <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>-aware.</source>
          <target state="translated">這讓 <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> 應用程式針對不同的 <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> 設定進行適當調整，並自動讓應用程式感知 <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>However, this <ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> independence can create irregular edge rendering due to anti-aliasing.</source>
          <target state="translated">不過，這<ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>獨立性可以建立異常的邊緣轉譯，因為消除鋸齒。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>These artifacts, commonly seen as blurry, or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</source>
          <target state="translated">這些成品，通常被視為模糊或 「 軟式 」 的邊緣，就會發生的邊緣位置落在裝置像素，而不是裝置像素之間。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>To address this issue, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> provides a way for object edges in a visual tree to "snap" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing.</source>
          <target state="translated">若要解決此問題，<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>提供方法的 「 對齊 」 裝置像素，透過像素貼齊、 貼至視覺化樹狀結構中的物件邊緣消除柔和消除鋸齒所產生的邊界。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Returns the topmost <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> object of a hit test.</source>
          <target state="translated">傳回點擊測試最上層的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>The overloaded methods that take <ph id="ph1">&lt;xref:System.Windows.Media.HitTestResultCallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.HitTestFilterCallback&gt;</ph> as parameters provide additional functionality during hit testing:</source>
          <target state="translated">多載這些方法會採用<ph id="ph1">&lt;xref:System.Windows.Media.HitTestResultCallback&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Media.HitTestFilterCallback&gt;</ph>參數在點擊測試期間提供額外的功能：</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Allow you to participate in controlling the visual tree traversal during hit testing.</source>
          <target state="translated">可讓您參與控制在點擊測試期間的視覺化樹狀目錄中周遊。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Allow you to retrieve all of the visuals under the point or geometry, not just the topmost one.</source>
          <target state="translated">可讓您擷取所有的點或幾何，不只是最上層的其中一個視覺效果。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to hit test.</source>
          <target state="translated">要進行點擊測試的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>The point value to hit test against.</source>
          <target state="translated">要進行點擊測試的點值。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>Returns the topmost <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> object of a hit test by specifying a <ph id="ph2">&lt;see cref="T:System.Windows.Point" /&gt;</ph>.</source>
          <target state="translated">藉由指定 <ph id="ph2">&lt;see cref="T:System.Windows.Point" /&gt;</ph>，傳回點擊測試最上層的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>The hit test result of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>, returned as a <ph id="ph2">&lt;see cref="T:System.Windows.Media.HitTestResult" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的點擊測試結果，作為 <ph id="ph2">&lt;see cref="T:System.Windows.Media.HitTestResult" /&gt;</ph> 類型傳回。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.HitTestResult.VisualHit%2A&gt;</ph> property of the return value represents the <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> object that was hit.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.HitTestResult.VisualHit%2A&gt;</ph>屬性的傳回值表示<ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>已叫用的物件。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>It is possible for a hit test that starts in a 2D visual tree to return <ph id="ph1">&lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;</ph>, which is a 3D hit test result object.</source>
          <target state="translated">點擊測試傳回 2D 視覺化樹狀結構中啟動，可能會<ph id="ph1">&lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;</ph>，這就是 3D 點擊的測試結果物件。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.</source>
          <target state="translated">點擊測試 2D 的視覺化樹狀結構中的啟動順暢地延伸至任何已定義的 3D 視覺化樹狀結構。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph> method to hit test the objects within a <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph>方法要進行點擊測試中的物件<ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph> to hit test.</source>
          <target state="translated">要進行點擊測試的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>The method that represents the hit test filter callback value.</source>
          <target state="translated">代表點擊測試篩選回呼值的方法。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>The method that represents the hit test result callback value.</source>
          <target state="translated">代表點擊測試結果回呼值的方法。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>The 3D parameter value to hit test against.</source>
          <target state="translated">要進行點擊測試的 3D 參數值。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>Initiates a hit test on the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph>, with caller-defined <ph id="ph2">&lt;see cref="T:System.Windows.Media.HitTestFilterCallback" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Windows.Media.HitTestResultCallback" /&gt;</ph> methods.</source>
          <target state="translated">利用呼叫端定義的 <ph id="ph2">&lt;see cref="T:System.Windows.Media.HitTestFilterCallback" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Windows.Media.HitTestResultCallback" /&gt;</ph> 方法，在指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph> 上起始點擊測試。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>The <ph id="ph1">`filterCallback`</ph> parameter can be <ph id="ph2">`null`</ph>, in which case, it is ignored.</source>
          <target state="translated"><ph id="ph1">`filterCallback`</ph>參數可以是<ph id="ph2">`null`</ph>，在此情況下，它會被忽略。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>If <ph id="ph1">`filterCallback`</ph> is not <ph id="ph2">`null`</ph>, it is invoked before <ph id="ph3">`resultCallback`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`filterCallback`</ph>不<ph id="ph2">`null`</ph>，它會叫用之前<ph id="ph3">`resultCallback`</ph>。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source><ph id="ph1">`resultCallback`</ph> cannot be <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`resultCallback`</ph> 不可以是 <ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>It is possible for a hit test that starts in a 2D visual tree to return <ph id="ph1">&lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;</ph>, which is a 3D hit test result object.</source>
          <target state="translated">點擊測試傳回 2D 視覺化樹狀結構中啟動，可能會<ph id="ph1">&lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;</ph>，這就是 3D 點擊的測試結果物件。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.</source>
          <target state="translated">點擊測試 2D 的視覺化樹狀結構中的啟動順暢地延伸至任何已定義的 3D 視覺化樹狀結構。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to hit test.</source>
          <target state="translated">要進行點擊測試的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>The method that represents the hit test filter callback value.</source>
          <target state="translated">代表點擊測試篩選回呼值的方法。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>The method that represents the hit test result callback value.</source>
          <target state="translated">代表點擊測試結果回呼值的方法。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>The parameter value to hit test against.</source>
          <target state="translated">要進行點擊測試的參數值。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>Initiates a hit test on the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>, with caller-defined <ph id="ph2">&lt;see cref="T:System.Windows.Media.HitTestFilterCallback" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Windows.Media.HitTestResultCallback" /&gt;</ph> methods.</source>
          <target state="translated">利用呼叫端定義的 <ph id="ph2">&lt;see cref="T:System.Windows.Media.HitTestFilterCallback" /&gt;</ph> 和 <ph id="ph3">&lt;see cref="T:System.Windows.Media.HitTestResultCallback" /&gt;</ph> 方法，在指定的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 上起始點擊測試。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>The <ph id="ph1">`filterCallback`</ph> parameter can be <ph id="ph2">`null`</ph>, in which case it is ignored.</source>
          <target state="translated"><ph id="ph1">`filterCallback`</ph>參數可以是<ph id="ph2">`null`</ph>，在此情況下會忽略它。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>If <ph id="ph1">`filterCallback`</ph> is not <ph id="ph2">`null`</ph>, it is invoked before <ph id="ph3">`resultCallback`</ph>.</source>
          <target state="translated">如果<ph id="ph1">`filterCallback`</ph>不<ph id="ph2">`null`</ph>，它會叫用之前<ph id="ph3">`resultCallback`</ph>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source><ph id="ph1">`resultCallback`</ph> cannot be <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">`resultCallback`</ph> 不可以是 <ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>It is possible for a hit test that starts in a 2D visual tree to return <ph id="ph1">&lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;</ph>, which is a 3D hit test result object.</source>
          <target state="translated">點擊測試傳回 2D 視覺化樹狀結構中啟動，可能會<ph id="ph1">&lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;</ph>，這就是 3D 點擊的測試結果物件。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.</source>
          <target state="translated">點擊測試 2D 的視覺化樹狀結構中的啟動順暢地延伸至任何已定義的 3D 視覺化樹狀結構。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph> method to hit test the objects within a <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph>方法要進行點擊測試中的物件<ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.SetRootDpi(System.Windows.Media.Visual,System.Windows.DpiScale)">
          <source>A Visual object target.</source>
          <target state="translated">Visual 物件目標。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.SetRootDpi(System.Windows.Media.Visual,System.Windows.DpiScale)">
          <source>DPI information for the target Visual.</source>
          <target state="translated">目標 Visual 的 DPI 資訊。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.SetRootDpi(System.Windows.Media.Visual,System.Windows.DpiScale)">
          <source>Updates the DPI information of a Visual.</source>
          <target state="translated">更新 Visual 的 DPI 的資訊。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.SetRootDpi(System.Windows.Media.Visual,System.Windows.DpiScale)">
          <source>It can only be called on a Visual without a parent.</source>
          <target state="translated">它只能在不具父代的 Visual 上呼叫。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>