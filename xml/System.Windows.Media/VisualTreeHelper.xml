<Type Name="VisualTreeHelper" FullName="System.Windows.Media.VisualTreeHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe0457b1f2f26ff07fcba64d19bd0dde44646355" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34472111" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class VisualTreeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit VisualTreeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.VisualTreeHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualTreeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualTreeHelper abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供公用程式方法，執行以視覺化樹狀呈現節點的一般工作。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 視覺化樹狀結構中的節點可以是<xref:System.Windows.Media.Visual>或<xref:System.Windows.Media.Media3D.Visual3D>物件。 視覺物件的類型所特有的方法的型別為其中<xref:System.Windows.Media.Visual>或<xref:System.Windows.Media.Media3D.Visual3D>。 不過中的某些方法<xref:System.Windows.Media.VisualTreeHelper>類別可以接受<xref:System.Windows.DependencyObject>值，表示其中一個視覺物件的類型。  
  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 支援以程式設計方式存取物件的數個不同的樹狀目錄結構。 這主要被公開做為視覺化樹狀結構，以及邏輯樹狀結構。 在某些情況下，邏輯樹狀結構是中的項目更實用的方式表示[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]實作應用程式，但在概念上之邏輯樹狀結構層級超過<xref:System.Windows.Media.Visual>類別。 不同的視覺化樹狀結構中，於邏輯樹狀結構可以代表非視覺化的資料物件，例如<xref:System.Windows.Documents.ListItem>。 如需有關邏輯樹狀結構的詳細資訊，請參閱 [WPF 中的樹狀結構](~/docs/framework/wpf/advanced/trees-in-wpf.md)。 邏輯樹狀結構也支援類似的公用程式方法類別<xref:System.Windows.LogicalTreeHelper>。  
  
   
  
## Examples  
 下列範例示範如何列舉視覺物件的所有子系，如果您對將視覺物件階層的所有轉譯資訊序列化感興趣，這也會是您想要使用的技術。  
  
 [!code-csharp[VisualsOverview#101](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualsOverview/CSharp/Window1.xaml.cs#101)]
 [!code-vb[VisualsOverview#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualsOverview/visualbasic/window1.xaml.vb#101)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetBitmapEffect">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Effects.BitmapEffect GetBitmapEffect (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Effects.BitmapEffect GetBitmapEffect(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffect(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBitmapEffect (reference As Visual) As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Effects::BitmapEffect ^ GetBitmapEffect(System::Windows::Media::Visual ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference">包含點陣圖效果的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>傳回指定之 <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> 的 <see cref="T:System.Windows.Media.Visual" /> 值。</summary>
        <returns>這個 <see cref="T:System.Windows.Media.Effects.BitmapEffect" /> 的 <see cref="T:System.Windows.Media.Visual" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBitmapEffectInput">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Effects.BitmapEffectInput GetBitmapEffectInput (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Effects.BitmapEffectInput GetBitmapEffectInput(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBitmapEffectInput (reference As Visual) As BitmapEffectInput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Effects::BitmapEffectInput ^ GetBitmapEffectInput(System::Windows::Media::Visual ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffectInput</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference">包含點陣圖效果輸入值的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>傳回指定之 <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> 的 <see cref="T:System.Windows.Media.Visual" /> 值。</summary>
        <returns>這個 <see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /> 的 <see cref="T:System.Windows.Media.Visual" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.CacheMode GetCacheMode (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.CacheMode GetCacheMode(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetCacheMode(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCacheMode (reference As Visual) As CacheMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::CacheMode ^ GetCacheMode(System::Windows::Media::Visual ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CacheMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference">要為其取得 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.Windows.Media.CacheMode" />。</param>
        <summary>擷取指定之 <see cref="T:System.Windows.Media.Visual" /> 的快取表示。</summary>
        <returns>
          <paramref name="reference" /> 的 <see cref="T:System.Windows.Media.CacheMode" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.BitmapCache" />
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetChild (System.Windows.DependencyObject reference, int childIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetChild(class System.Windows.DependencyObject reference, int32 childIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChild (reference As DependencyObject, childIndex As Integer) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetChild(System::Windows::DependencyObject ^ reference, int childIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.DependencyObject" />
        <Parameter Name="childIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="reference">父視覺物件，參考為 <see cref="T:System.Windows.DependencyObject" />。</param>
        <param name="childIndex">索引，表示 <c>reference</c> 包含的子視覺物件。</param>
        <summary>從指定之父代內的指定的集合索引傳回子視覺物件。</summary>
        <returns>子視覺物件的索引值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Windows.Media.VisualTreeHelper.GetChildrenCount%2A>方法來判斷父視覺子項目總數。  
  
 值`reference`可以代表<xref:System.Windows.Media.Visual>或<xref:System.Windows.Media.Media3D.Visual3D>物件，這也是為什麼通用基底型別<xref:System.Windows.DependencyObject>用為參數型別。  
  
   
  
## Examples  
 下列範例會示範如何列舉的視覺物件的所有下階。 這是如果您想要序列化的視覺物件階層的所有呈現資訊或執行分析或替代的轉譯，您可能會使用一種技術。  
  
 [!code-csharp[VisualsOverview#101](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualsOverview/CSharp/Window1.xaml.cs#101)]
 [!code-vb[VisualsOverview#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualsOverview/visualbasic/window1.xaml.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildrenCount">
      <MemberSignature Language="C#" Value="public static int GetChildrenCount (System.Windows.DependencyObject reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetChildrenCount(class System.Windows.DependencyObject reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildrenCount (reference As DependencyObject) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetChildrenCount(System::Windows::DependencyObject ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="reference">父視覺物件，參考為 <see cref="T:System.Windows.DependencyObject" />。</param>
        <summary>傳回指定的視覺物件包含的子系數目。</summary>
        <returns>父視覺物件包含的子視覺物件數目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.VisualTreeHelper.GetChild%2A>方法來擷取指定的父視覺子系。  
  
 值`reference`可以代表<xref:System.Windows.Media.Visual>或<xref:System.Windows.Media.Media3D.Visual3D>物件，這也是為什麼通用基底型別<xref:System.Windows.DependencyObject>用為參數型別。  
  
   
  
## Examples  
 下列範例會示範如何列舉的視覺物件的所有下階。 這是如果您想要序列化的視覺物件階層的所有呈現資訊或執行分析或替代的轉譯，您可能會使用一種技術。  
  
 [!code-csharp[VisualsOverview#101](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualsOverview/CSharp/Window1.xaml.cs#101)]
 [!code-vb[VisualsOverview#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualsOverview/visualbasic/window1.xaml.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClip">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Geometry GetClip (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Geometry GetClip(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetClip(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClip (reference As Visual) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Geometry ^ GetClip(System::Windows::Media::Visual ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference">要傳回其裁剪區域值的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>傳回指定之 <see cref="T:System.Windows.Media.Visual" /> 的裁剪區域做為 <see cref="T:System.Windows.Media.Geometry" /> 值。</summary>
        <returns>
          <see cref="T:System.Windows.Media.Visual" /> 的裁剪區域值，以 <see cref="T:System.Windows.Media.Geometry" /> 型別傳回。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.ContainerVisual.Clip" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetContentBounds">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回 <see cref="T:System.Windows.Media.Visual" /> 的快取周框方塊矩形。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Media3D.Rect3D GetContentBounds (System.Windows.Media.Media3D.Visual3D reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Media3D.Rect3D GetContentBounds(class System.Windows.Media.Media3D.Visual3D reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetContentBounds (reference As Visual3D) As Rect3D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Media3D::Rect3D GetContentBounds(System::Windows::Media::Media3D::Visual3D ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Rect3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Media3D.Visual3D" />
      </Parameters>
      <Docs>
        <param name="reference">要計算其周框方塊值的 3D 視覺物件。</param>
        <summary>傳回指定之 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 的快取周框方塊矩形。</summary>
        <returns>
          <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 的周框方塊 3D 矩形。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A>方法以傳回聯集的週框方塊的 3D 的 visual 物件，其中包含的所有下階的所有內容<xref:System.Windows.Media.Media3D.Visual3D>本身。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)" />
      </Docs>
    </Member>
    <Member MemberName="GetContentBounds">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect GetContentBounds (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect GetContentBounds(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetContentBounds (reference As Visual) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect GetContentBounds(System::Windows::Media::Visual ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference">要計算其周框方塊值的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>傳回指定之 <see cref="T:System.Windows.Media.Visual" /> 的快取周框方塊矩形。</summary>
        <returns>
          <see cref="T:System.Windows.Media.Visual" /> 的周框方塊矩形。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A>方法以傳回聯集的週框方塊的 visual 物件，其中包含的所有下階的所有內容<xref:System.Windows.Media.Visual>本身。  
  
   
  
## Examples  
 下列範例示範如何擷取週框矩形<xref:System.Windows.Media.Visual>物件。  
  
 [!code-csharp[VisualsOverview#102](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualsOverview/CSharp/Window1.xaml.cs#102)]
 [!code-vb[VisualsOverview#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualsOverview/visualbasic/window1.xaml.vb#102)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDescendantBounds">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回視覺物件之所有下階的所有內容週框方塊聯集，這個聯集包括 <see cref="T:System.Windows.Media.Visual" /> 的內容週框方塊。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDescendantBounds">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Media3D.Rect3D GetDescendantBounds (System.Windows.Media.Media3D.Visual3D reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.Media3D.Rect3D GetDescendantBounds(class System.Windows.Media.Media3D.Visual3D reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDescendantBounds (reference As Visual3D) As Rect3D" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Media3D::Rect3D GetDescendantBounds(System::Windows::Media::Media3D::Visual3D ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Media3D.Rect3D</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Media3D.Visual3D" />
      </Parameters>
      <Docs>
        <param name="reference">要計算其所有子系之周框方塊值的 3D 視覺物件。</param>
        <summary>傳回指定之 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 的所有子系的所有內容周框方塊聯集，包括 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 的內容周框方塊。</summary>
        <returns>傳回 3D 視覺物件的周框方塊 3D 矩形。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A>方法以傳回快取的週框方塊矩形 3D 視覺物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDescendantBounds">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect GetDescendantBounds (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect GetDescendantBounds(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDescendantBounds (reference As Visual) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect GetDescendantBounds(System::Windows::Media::Visual ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference">要計算其所有子系之周框方塊值的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>傳回 <see cref="T:System.Windows.Media.Visual" /> 的所有子系的所有內容周框方塊聯集，包括 <see cref="T:System.Windows.Media.Visual" /> 的內容周框方塊。</summary>
        <returns>指定之 <see cref="T:System.Windows.Media.Visual" /> 的周框方塊矩形。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A>方法傳回的快取的週框方塊矩形<xref:System.Windows.Media.Visual>。  
  
   
  
## Examples  
 下列範例示範如何擷取週框的下階的聯集<xref:System.Windows.Media.Visual>。  
  
 [!code-csharp[VisualsOverview#102](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualsOverview/CSharp/Window1.xaml.cs#102)]
 [!code-vb[VisualsOverview#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualsOverview/visualbasic/window1.xaml.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDpi">
      <MemberSignature Language="C#" Value="public static System.Windows.DpiScale GetDpi (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.DpiScale GetDpi(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetDpi(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DpiScale GetDpi(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DpiScale</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">Visual 目標物件。</param>
        <summary>取得測量及轉譯此 Visual 的 DPI 資訊。</summary>
        <returns>DPIScale 值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDrawing">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DrawingGroup GetDrawing (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.DrawingGroup GetDrawing(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDrawing (reference As Visual) As DrawingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::DrawingGroup ^ GetDrawing(System::Windows::Media::Visual ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference">要傳回其繪製內容的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>傳回指定之 <see cref="T:System.Windows.Media.Visual" /> 的繪製內容。</summary>
        <returns>
          <see cref="T:System.Windows.Media.Visual" /> 的繪製內容，以 <see cref="T:System.Windows.Media.DrawingGroup" /> 型別傳回。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何擷取<xref:System.Windows.Media.DrawingGroup>從使用的 visual 物件<xref:System.Windows.Media.VisualTreeHelper.GetDrawing%2A>方法。 接著執行點擊的測試的每個繪圖幾何上<xref:System.Windows.Media.DrawingGroup>來判斷點擊的幾何。  
  
 [!code-csharp[VisualsOverview#VisualsOverviewSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualsOverview/CSharp/Window1.xaml.cs#visualsoverviewsnippet4)]
 [!code-vb[VisualsOverview#VisualsOverviewSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualsOverview/visualbasic/window1.xaml.vb#visualsoverviewsnippet4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdgeMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.EdgeMode GetEdgeMode (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Media.EdgeMode GetEdgeMode(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEdgeMode (reference As Visual) As EdgeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::EdgeMode GetEdgeMode(System::Windows::Media::Visual ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.EdgeMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference">要傳回其邊緣模式值的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>傳回指定之 <see cref="T:System.Windows.Media.Visual" /> 的邊緣模式做為 <see cref="T:System.Windows.Media.EdgeMode" /> 值。</summary>
        <returns>
          <see cref="T:System.Windows.Media.EdgeMode" /> 的 <see cref="T:System.Windows.Media.Visual" /> 值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 邊緣模式值會決定如何呈現非文字基本的邊緣。  
  
|邊緣模式值|描述|  
|---------------------|-----------------|  
|<xref:System.Windows.Media.EdgeMode.Aliased>|呈現為鋸齒邊緣的非文字基本的邊緣。|  
|<xref:System.Windows.Media.EdgeMode.Unspecified>|未指定邊緣模式。 請勿變更套用至非文字基本的目前邊緣模式。|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEffect">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Effects.Effect GetEffect (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Effects.Effect GetEffect(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetEffect(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEffect (reference As Visual) As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Effects::Effect ^ GetEffect(System::Windows::Media::Visual ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference">要取得其點陣圖效果的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>取得指定之 <see cref="T:System.Windows.Media.Visual" /> 的點陣圖效果。</summary>
        <returns>套用至 <paramref name="reference" /> 的 <see cref="T:System.Windows.Media.Effects.Effect" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
        <altmember cref="T:System.Windows.Media.Effects.PixelShader" />
      </Docs>
    </Member>
    <Member MemberName="GetOffset">
      <MemberSignature Language="C#" Value="public static System.Windows.Vector GetOffset (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Vector GetOffset(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOffset (reference As Visual) As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Vector GetOffset(System::Windows::Media::Visual ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference">要傳回其位移 (Offset) 的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>傳回 <see cref="T:System.Windows.Media.Visual" /> 的位移。</summary>
        <returns>
          <see cref="T:System.Windows.Vector" />，表示 <see cref="T:System.Windows.Media.Visual" /> 的位移值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回的位移的值是相對於父系的<xref:System.Windows.Media.Visual>。 如果您想要傳回的位移的值不是相對於父系的<xref:System.Windows.Media.Visual>，使用<xref:System.Windows.Media.Visual.TransformToAncestor%2A>方法。  
  
   
  
## Examples  
 下列標記範例所示<xref:System.Windows.Controls.TextBlock>定義與<xref:System.Windows.FrameworkElement.Margin%2A>4 的值。  
  
 [!code-xaml[VisualSnippets#VisualSnippet1](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml#visualsnippet1)]  
  
 下列程式碼範例示範如何使用<xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A>方法來擷取的位移<xref:System.Windows.Controls.TextBlock>。 位移的值包含在傳回<xref:System.Windows.Vector>值。  
  
 [!code-csharp[VisualSnippets#VisualSnippet2](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet2)]
 [!code-vb[VisualSnippets#VisualSnippet2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet2)]  
  
 位移會考量<xref:System.Windows.FrameworkElement.Margin%2A>值。 在此情況下，<xref:System.Windows.Vector.X%2A>為 4，和<xref:System.Windows.Vector.Y%2A>為 4。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpacity">
      <MemberSignature Language="C#" Value="public static double GetOpacity (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetOpacity(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOpacity (reference As Visual) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetOpacity(System::Windows::Media::Visual ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference">要傳回其不透明度值的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>傳回 <see cref="T:System.Windows.Media.Visual" /> 的不透明度。</summary>
        <returns>型別 <see cref="T:System.Double" /> 的值，表示 <see cref="T:System.Windows.Media.Visual" /> 的不透明度值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不透明度的值被以介於 0 和 1 之間的值。 值為 0 表示的項目是完全透明，而值為 1 表示項目，則完全不透明。 值為 0.5 表示的項目是 50%不透明。 值小於 0 會被視為 0，大於 1 的值會被視為 1。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpacityMask">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Brush GetOpacityMask (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Brush GetOpacityMask(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetOpacityMask(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOpacityMask (reference As Visual) As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Brush ^ GetOpacityMask(System::Windows::Media::Visual ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference">要傳回其不透明遮罩值的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>傳回 <see cref="T:System.Windows.Media.Brush" /> 值，這個值表示 <see cref="T:System.Windows.Media.Visual" /> 的不透明遮罩。</summary>
        <returns>型別 <see cref="T:System.Windows.Media.Brush" /> 的值，表示 <see cref="T:System.Windows.Media.Visual" /> 的不透明遮罩值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不透明度遮罩是<xref:System.Windows.Media.Brush>套用至任何 alpha 色板遮罩所呈現的內容<xref:System.Windows.Media.Visual>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetParent(class System.Windows.DependencyObject reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetParent (reference As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetParent(System::Windows::DependencyObject ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="reference">傳回其父代的視覺物件。</param>
        <summary>傳回 <see cref="T:System.Windows.DependencyObject" /> 值，這個值表示視覺物件的父代。</summary>
        <returns>視覺物件的父代。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值`reference`可以代表<xref:System.Windows.Media.Visual>或<xref:System.Windows.Media.Media3D.Visual3D>物件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reference" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="reference" /> 不是 <see cref="T:System.Windows.Media.Visual" /> 或 <see cref="System.Windows.Media.Visual3D" /> 物件。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetTransform">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Transform GetTransform (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Transform GetTransform(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTransform (reference As Visual) As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Transform ^ GetTransform(System::Windows::Media::Visual ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference">要傳回其轉換值的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>傳回 <see cref="T:System.Windows.Media.Transform" /> 的 <see cref="T:System.Windows.Media.Visual" /> 值。</summary>
        <returns>
          <see cref="T:System.Windows.Media.Visual" /> 的轉換值，如果 <paramref name="reference" /> 沒有定義轉換則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 或者，您可以使用<xref:System.Windows.Media.Visual.TransformToAncestor%2A>方法來轉換值傳回的上階<xref:System.Windows.Media.Visual>。 這個方法一律會傳回有效的轉換。 下列程式碼範例示範如何使用<xref:System.Windows.Media.Visual.TransformToAncestor%2A>方法。  
  
 [!code-csharp[VisualSnippets#VisualSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet3)]
 [!code-vb[VisualSnippets#VisualSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet3)]  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Media.VisualTreeHelper.GetTransform%2A>方法來擷取指定的視覺物件的轉換。  
  
 [!code-csharp[VisualSnippets#VisualSnippet6](~/samples/snippets/csharp/VS_Snippets_Wpf/VisualSnippets/CSharp/Window1.xaml.cs#visualsnippet6)]
 [!code-vb[VisualSnippets#VisualSnippet6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/VisualSnippets/visualbasic/window1.xaml.vb#visualsnippet6)]  
  
 應該先測試您的程式碼`null`之前使用傳回的值。 若要傳回的位移傳回轉換，請使用<xref:System.Windows.Media.GeneralTransform.Transform%2A>方法。 位移的值是相對於父系的<xref:System.Windows.Media.Visual>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXSnappingGuidelines">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DoubleCollection GetXSnappingGuidelines (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.DoubleCollection GetXSnappingGuidelines(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXSnappingGuidelines (reference As Visual) As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::DoubleCollection ^ GetXSnappingGuidelines(System::Windows::Media::Visual ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference">要傳回其 X 座標導線集合的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>傳回 X 座標 (垂直) 導線集合。</summary>
        <returns>
          <see cref="T:System.Windows.Media.Visual" /> 的 X 座標導線集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 像素貼齊是使裝置特定像素呈現物件邊緣內容版面配置固定的程序。 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 圖形系統會使用裝置獨立單位來啟用解析度和裝置獨立性。 每個裝置獨立像素都會依系統的 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] 設定自動進行調整。 這讓 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 應用程式針對不同的 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 設定進行適當調整，並自動讓應用程式感知 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]。  
  
 不過，這[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]獨立性可以建立異常的邊緣轉譯，因為消除鋸齒。 這些成品，通常被視為模糊或 「 軟式 」 的邊緣，就會發生的邊緣位置落在裝置像素，而不是裝置像素之間。 若要解決此問題，[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]提供方法的 「 對齊 」 裝置像素，透過像素貼齊、 貼至視覺化樹狀結構中的物件邊緣消除柔和消除鋸齒所產生的邊界。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Visual.VisualXSnappingGuidelines" />
      </Docs>
    </Member>
    <Member MemberName="GetYSnappingGuidelines">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.DoubleCollection GetYSnappingGuidelines (System.Windows.Media.Visual reference);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.DoubleCollection GetYSnappingGuidelines(class System.Windows.Media.Visual reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetYSnappingGuidelines (reference As Visual) As DoubleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::DoubleCollection ^ GetYSnappingGuidelines(System::Windows::Media::Visual ^ reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DoubleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="reference">要傳回其 Y 座標導線集合的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <summary>傳回 Y 座標 (水平) 導線集合。</summary>
        <returns>
          <see cref="T:System.Windows.Media.Visual" /> 的 Y 座標導線集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 像素貼齊是使裝置特定像素呈現物件邊緣內容版面配置固定的程序。 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 圖形系統會使用裝置獨立單位來啟用解析度和裝置獨立性。 每個裝置獨立像素都會依系統的 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)] 設定自動進行調整。 這讓 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 應用程式針對不同的 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)] 設定進行適當調整，並自動讓應用程式感知 [!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]。  
  
 不過，這[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]獨立性可以建立異常的邊緣轉譯，因為消除鋸齒。 這些成品，通常被視為模糊或 「 軟式 」 的邊緣，就會發生的邊緣位置落在裝置像素，而不是裝置像素之間。 若要解決此問題，[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]提供方法的 「 對齊 」 裝置像素，透過像素貼齊、 貼至視覺化樹狀結構中的物件邊緣消除柔和消除鋸齒所產生的邊界。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Visual.VisualYSnappingGuidelines" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回點擊測試最上層的 <see cref="T:System.Windows.Media.Visual" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 多載這些方法會採用<xref:System.Windows.Media.HitTestResultCallback>和<xref:System.Windows.Media.HitTestFilterCallback>參數在點擊測試期間提供額外的功能：  
  
-   可讓您參與控制在點擊測試期間的視覺化樹狀目錄中周遊。  
  
-   可讓您擷取所有的點或幾何，不只是最上層的其中一個視覺效果。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.HitTestResult HitTest (System.Windows.Media.Visual reference, System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.HitTestResult HitTest(class System.Windows.Media.Visual reference, valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::HitTestResult ^ HitTest(System::Windows::Media::Visual ^ reference, System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="reference">要進行點擊測試的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <param name="point">要進行點擊測試的點值。</param>
        <summary>藉由指定 <see cref="T:System.Windows.Point" />，傳回點擊測試最上層的 <see cref="T:System.Windows.Media.Visual" /> 物件。</summary>
        <returns>
          <see cref="T:System.Windows.Media.Visual" /> 的點擊測試結果，作為 <see cref="T:System.Windows.Media.HitTestResult" /> 類型傳回。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.HitTestResult.VisualHit%2A>屬性的傳回值表示<xref:System.Windows.Media.Visual>已叫用的物件。  
  
> [!NOTE]
>  點擊測試傳回 2D 視覺化樹狀結構中啟動，可能會<xref:System.Windows.Media.Media3D.RayHitTestResult>，這就是 3D 點擊的測試結果物件。 點擊測試 2D 的視覺化樹狀結構中的啟動順暢地延伸至任何已定義的 3D 視覺化樹狀結構。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Windows.Media.VisualTreeHelper.HitTest%2A>方法要進行點擊測試中的物件<xref:System.Windows.Controls.Canvas>。  
  
 [!code-csharp[HitTestingOverview#100](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#100)]
 [!code-vb[HitTestingOverview#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#100)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public static void HitTest (System.Windows.Media.Media3D.Visual3D reference, System.Windows.Media.HitTestFilterCallback filterCallback, System.Windows.Media.HitTestResultCallback resultCallback, System.Windows.Media.Media3D.HitTestParameters3D hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HitTest(class System.Windows.Media.Media3D.Visual3D reference, class System.Windows.Media.HitTestFilterCallback filterCallback, class System.Windows.Media.HitTestResultCallback resultCallback, class System.Windows.Media.Media3D.HitTestParameters3D hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HitTest (reference As Visual3D, filterCallback As HitTestFilterCallback, resultCallback As HitTestResultCallback, hitTestParameters As HitTestParameters3D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HitTest(System::Windows::Media::Media3D::Visual3D ^ reference, System::Windows::Media::HitTestFilterCallback ^ filterCallback, System::Windows::Media::HitTestResultCallback ^ resultCallback, System::Windows::Media::Media3D::HitTestParameters3D ^ hitTestParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Media3D.Visual3D" />
        <Parameter Name="filterCallback" Type="System.Windows.Media.HitTestFilterCallback" />
        <Parameter Name="resultCallback" Type="System.Windows.Media.HitTestResultCallback" />
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.Media3D.HitTestParameters3D" />
      </Parameters>
      <Docs>
        <param name="reference">要進行點擊測試的 <see cref="T:System.Windows.Media.Media3D.Visual3D" />。</param>
        <param name="filterCallback">代表點擊測試篩選回呼值的方法。</param>
        <param name="resultCallback">代表點擊測試結果回呼值的方法。</param>
        <param name="hitTestParameters">要進行點擊測試的 3D 參數值。</param>
        <summary>利用呼叫端定義的 <see cref="T:System.Windows.Media.HitTestFilterCallback" /> 和 <see cref="T:System.Windows.Media.HitTestResultCallback" /> 方法，在指定的 <see cref="T:System.Windows.Media.Media3D.Visual3D" /> 上起始點擊測試。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `filterCallback`參數可以是`null`，在此情況下，它會被忽略。 如果`filterCallback`不`null`，它會叫用之前`resultCallback`。  `resultCallback` 不可以是 `null`。  
  
> [!NOTE]
>  點擊測試傳回 2D 視覺化樹狀結構中啟動，可能會<xref:System.Windows.Media.Media3D.RayHitTestResult>，這就是 3D 點擊的測試結果物件。 點擊測試 2D 的視覺化樹狀結構中的啟動順暢地延伸至任何已定義的 3D 視覺化樹狀結構。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public static void HitTest (System.Windows.Media.Visual reference, System.Windows.Media.HitTestFilterCallback filterCallback, System.Windows.Media.HitTestResultCallback resultCallback, System.Windows.Media.HitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HitTest(class System.Windows.Media.Visual reference, class System.Windows.Media.HitTestFilterCallback filterCallback, class System.Windows.Media.HitTestResultCallback resultCallback, class System.Windows.Media.HitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HitTest(System::Windows::Media::Visual ^ reference, System::Windows::Media::HitTestFilterCallback ^ filterCallback, System::Windows::Media::HitTestResultCallback ^ resultCallback, System::Windows::Media::HitTestParameters ^ hitTestParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Windows.Media.Visual" />
        <Parameter Name="filterCallback" Type="System.Windows.Media.HitTestFilterCallback" />
        <Parameter Name="resultCallback" Type="System.Windows.Media.HitTestResultCallback" />
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.HitTestParameters" />
      </Parameters>
      <Docs>
        <param name="reference">要進行點擊測試的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <param name="filterCallback">代表點擊測試篩選回呼值的方法。</param>
        <param name="resultCallback">代表點擊測試結果回呼值的方法。</param>
        <param name="hitTestParameters">要進行點擊測試的參數值。</param>
        <summary>利用呼叫端定義的 <see cref="T:System.Windows.Media.HitTestFilterCallback" /> 和 <see cref="T:System.Windows.Media.HitTestResultCallback" /> 方法，在指定的 <see cref="T:System.Windows.Media.Visual" /> 上起始點擊測試。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `filterCallback`參數可以是`null`，在此情況下會忽略它。 如果`filterCallback`不`null`，它會叫用之前`resultCallback`。 `resultCallback` 不可以是 `null`。  
  
> [!NOTE]
>  點擊測試傳回 2D 視覺化樹狀結構中啟動，可能會<xref:System.Windows.Media.Media3D.RayHitTestResult>，這就是 3D 點擊的測試結果物件。 點擊測試 2D 的視覺化樹狀結構中的啟動順暢地延伸至任何已定義的 3D 視覺化樹狀結構。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Windows.Media.VisualTreeHelper.HitTest%2A>方法要進行點擊測試中的物件<xref:System.Windows.Controls.Canvas>。  
  
 [!code-csharp[HitTestingOverview#101](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#101)]
 [!code-vb[HitTestingOverview#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#101)]  
[!code-csharp[HitTestingOverview#102](~/samples/snippets/csharp/VS_Snippets_Wpf/HitTestingOverview/CSharp/Window1.xaml.cs#102)]
[!code-vb[HitTestingOverview#102](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HitTestingOverview/visualbasic/window1.xaml.vb#102)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRootDpi">
      <MemberSignature Language="C#" Value="public static void SetRootDpi (System.Windows.Media.Visual visual, System.Windows.DpiScale dpiInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRootDpi(class System.Windows.Media.Visual visual, valuetype System.Windows.DpiScale dpiInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.VisualTreeHelper.SetRootDpi(System.Windows.Media.Visual,System.Windows.DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetRootDpi(System::Windows::Media::Visual ^ visual, System::Windows::DpiScale dpiInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="dpiInfo" Type="System.Windows.DpiScale" />
      </Parameters>
      <Docs>
        <param name="visual">Visual 物件目標。</param>
        <param name="dpiInfo">目標 Visual 的 DPI 資訊。</param>
        <summary>更新 Visual 的 DPI 的資訊。 它只能在不具父代的 Visual 上呼叫。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>