<Type Name="ArcSegment" FullName="System.Windows.Media.ArcSegment">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e590a9fac00879723d7b34096185be6614841545" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52733196" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ArcSegment : System.Windows.Media.PathSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ArcSegment extends System.Windows.Media.PathSegment" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.ArcSegment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ArcSegment&#xA;Inherits PathSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArcSegment sealed : System::Windows::Media::PathSegment" />
  <TypeSignature Language="F#" Value="type ArcSegment = class&#xA;    inherit PathSegment" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.PathSegment</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示兩個點之間的橢圓形弧線。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.PathFigure>物件來儲存<xref:System.Windows.Media.ArcSegment>物件和其他區段。  
  
 由其開始和結束點，x 和 y 半徑，x 軸旋轉的因素，值，指出弧形是否應大於 180 度，且描述用來繪製弧形方向的值定義橢圓形弧線。 <xref:System.Windows.Media.ArcSegment>類別不包含弧形的開始點的屬性; 它只會定義它所代表的弧線的終點。 圓弧的起點是目前的點<xref:System.Windows.Media.PathFigure>要<xref:System.Windows.Media.ArcSegment>加入。  
  
 下圖示範不同的結束點<xref:System.Windows.Media.ArcSegment.Size%2A>，和<xref:System.Windows.Media.ArcSegment.RotationAngle%2A>設定。  
  
 ![具有不同 Point 設定的 Arcsegment](~/add/media/arcsegment-point.png "具有不同 Point 設定的 Arcsegment")  
  
 ![具有不同 Size 設定的 Arcsegment](~/add/media/arcsegment-size.png "具有不同 Size 設定的 Arcsegment")  
  
 ![具有不同 RotationAngle 設定的 Arcsegment](~/add/media/arcsegment-rotationangle.png "具有不同 RotationAngle 設定的 Arcsegment")  
  
## <a name="islargearc-and-sweepdirection"></a>IsLargeArc 和 SweepDirection  
 大多數的特定位置、 大小和輪替弧形，有四個不同的弧形，可以繪製;<xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>和<xref:System.Windows.Media.ArcSegment.SweepDirection%2A>屬性會指出要使用哪一個弧形。  
  
 四個候選弧線掃掠，兩個代表大型弧形 180 度或更新版本，以及兩個代表較小的弧線掃掠 180 度或更少。 如果<xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>是`true`，則兩個較大的弧形掃掠的其中一個是選擇; 否則如果是`false`一掃掠會選擇較小的弧線。 其餘的兩個弧形候選項目每個繪製在不同的方向：<xref:System.Windows.Media.SweepDirection.Counterclockwise>或<xref:System.Windows.Media.SweepDirection.Clockwise>。 <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>屬性會指定要使用哪一個。  
  
 下圖顯示不同<xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>和<xref:System.Windows.Media.ArcSegment.SweepDirection%2A>設定。  
  
 ![具有不同 IsLargeArc 設定的 Arcsegment](~/add/media/arcsegment-islargearc.png "具有不同 IsLargeArc 設定的 Arcsegment")  
具有不同 IsLargeArc 設定的 ArcSegment 物件  
  
 ![具有不同 SweepDirection 設定的 Arcsegment](~/add/media/arcsegment-sweepdirection.png "具有不同 SweepDirection 設定的 Arcsegment")  
具有不同 SweepDirection 設定的 ArcSegment 物件  
  
## <a name="freezable-features"></a>Freezable 功能  
 <xref:System.Windows.Media.ArcSegment>是一種<xref:System.Windows.Freezable>物件。 如需<xref:System.Windows.Freezable>功能，例如凍結和複製，請參閱[Freezable 物件概觀](~/docs/framework/wpf/advanced/freezable-objects-overview.md)。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathFigure" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.ArcSegment" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.ArcSegment>類別會定義只它代表的弧線的終點，弧線的起點是目前的點<xref:System.Windows.Media.PathFigure>，其中<xref:System.Windows.Media.ArcSegment>加入。  
  
 對於最橢圓形弧線的特定位置、 大小和輪替中，有四個不同的弧形，可以繪製;`largeArc`和`sweepDirection`參數指出要使用哪一個弧形。  
  
 四個候選弧線掃掠，兩個代表大型弧形 180 度或更新版本，以及兩個代表較小的弧線掃掠 180 度或更少。 如果`largeArc`是`true`，則兩個較大的弧形掃掠的其中一個選擇，否則如果`largeArc`是`false`，下列其中一個較小的弧線的掃掠會選擇。  
  
 如果`sweepDirection`是<xref:System.Windows.Media.SweepDirection.Clockwise>，以正角方向繪製弧形。 如果`sweepDirection`是<xref:System.Windows.Media.SweepDirection.Counterclockwise>，以負角方向繪製弧形。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArcSegment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArcSegment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.ArcSegment" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.ArcSegment>類別會定義只它代表的弧線的終點，弧線的起點是目前的點<xref:System.Windows.Media.PathFigure>，其中<xref:System.Windows.Media.ArcSegment>加入。  
  
 對於最橢圓形弧線的特定位置、 大小和輪替中，有四個不同的弧形，可以繪製;`largeArc`和`sweepDirection`參數指出要使用哪一個弧形。  
  
 四個候選弧線掃掠，兩個代表大型弧形 180 度或更新版本，以及兩個代表較小的弧線掃掠 180 度或更少。 如果`largeArc`是`true`，則兩個較大的弧形掃掠的其中一個選擇，否則如果`largeArc`是`false`，下列其中一個較小的弧線的掃掠會選擇。  
  
 如果`sweepDirection`是<xref:System.Windows.Media.SweepDirection.Clockwise>，以正角方向繪製弧形。 如果`sweepDirection`是<xref:System.Windows.Media.SweepDirection.Counterclockwise>，以負角方向繪製弧形。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArcSegment (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Size size, float64 rotationAngle, bool isLargeArc, valuetype System.Windows.Media.SweepDirection sweepDirection, bool isStroked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArcSegment(System::Windows::Point point, System::Windows::Size size, double rotationAngle, bool isLargeArc, System::Windows::Media::SweepDirection sweepDirection, bool isStroked);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.ArcSegment : System.Windows.Point * System.Windows.Size * double * bool * System.Windows.Media.SweepDirection * bool -&gt; System.Windows.Media.ArcSegment" Usage="new System.Windows.Media.ArcSegment (point, size, rotationAngle, isLargeArc, sweepDirection, isStroked)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
        <Parameter Name="rotationAngle" Type="System.Double" />
        <Parameter Name="isLargeArc" Type="System.Boolean" />
        <Parameter Name="sweepDirection" Type="System.Windows.Media.SweepDirection" />
        <Parameter Name="isStroked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">弧線的終點。弧線的起點定義為加入了 <see cref="T:System.Windows.Media.ArcSegment" /> 的 <see cref="T:System.Windows.Media.PathFigure" /> 目前的點。</param>
        <param name="size">弧線的半徑 X 和 Y。<see cref="T:System.Windows.Size" /> 結構的 <see cref="P:System.Windows.Size.Width" /> 屬性指定半徑 X，<see cref="T:System.Windows.Size" /> 結構的 <see cref="P:System.Windows.Size.Height" /> 屬性指定半徑 Y。</param>
        <param name="rotationAngle">橢圓形繞 X 軸旋轉。</param>
        <param name="isLargeArc">弧線是否應該大於 180 度。</param>
        <param name="sweepDirection">設為 <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> 以正角方向繪製弧線，設為 <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> 以負角方向繪製弧線。</param>
        <param name="isStroked">用 <see cref="T:System.Windows.Media.Pen" /> 呈現區段時，設為 <c>true</c> 繪製弧線；否則為 <c>false</c>。</param>
        <summary>初始化 <see cref="T:System.Windows.Media.ArcSegment" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.ArcSegment>類別會定義只它代表的弧線的終點，弧線的起點是目前的點<xref:System.Windows.Media.PathFigure>，其中<xref:System.Windows.Media.ArcSegment>加入。  
  
 對於最橢圓形弧線的特定位置、 大小和輪替中，有四個不同的弧形，可以繪製;`largeArc`和`sweepDirection`參數指出要使用哪一個弧形。  
  
 四個候選弧線掃掠，兩個代表大型弧形 180 度或更新版本，以及兩個代表較小的弧線掃掠 180 度或更少。 如果`largeArc`是`true`，則兩個較大的弧形掃掠的其中一個選擇，否則如果`largeArc`是`false`，下列其中一個較小的弧線的掃掠會選擇。  
  
 如果`sweepDirection`是<xref:System.Windows.Media.SweepDirection.Clockwise>，以正角方向繪製弧形。 如果`sweepDirection`是<xref:System.Windows.Media.SweepDirection.Counterclockwise>，以負角方向繪製弧形。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ArcSegment Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.ArcSegment Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ArcSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::ArcSegment ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.ArcSegment" Usage="arcSegment.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ArcSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立這個 <see cref="T:System.Windows.Media.ArcSegment" /> 的可修改複製品，深層複製這個物件的值。 當複製相依性屬性時，這個方法會複製資源參考和資料繫結 (但可能無法再解析)，但不會複製動畫或它們目前的值。</summary>
        <returns>目前物件的可修改複本。 即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="true." />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性將仍為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。 為了方便起見，這個方法會遮蔽的強型別實作繼承的版本。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ArcSegment CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.ArcSegment CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As ArcSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::ArcSegment ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.ArcSegment" Usage="arcSegment.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ArcSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立這個 <see cref="T:System.Windows.Media.ArcSegment" /> 物件的可修改複製品，製作這個物件目前值的深層複本。 不會複製資源參考、資料繫結和動畫，但是會複製其目前值。</summary>
        <returns>目前物件的可修改複本。 即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="false" />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性將仍為 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。 為了方便起見，這個方法會遮蔽的強型別實作繼承的版本。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="arcSegment.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLargeArc">
      <MemberSignature Language="C#" Value="public bool IsLargeArc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLargeArc" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.IsLargeArc" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLargeArc As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLargeArc { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsLargeArc : bool with get, set" Usage="System.Windows.Media.ArcSegment.IsLargeArc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出弧形是否應大於 180 度。</summary>
        <value>
          <see langword="true" /> 如果弧形應大於 180 度。否則， <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 大多數的特定位置、 大小和輪替弧形，有四個不同的弧形，可以繪製;<xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>和<xref:System.Windows.Media.ArcSegment.SweepDirection%2A>屬性會指出要使用哪一個弧形。  
  
 四個候選弧線掃掠，兩個代表大型弧形 180 度或更新版本，以及兩個代表較小的弧線掃掠 180 度或更少。 如果<xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>是`true`，則兩個較大的弧形掃掠的其中一個是選擇; 否則如果是`false`一掃掠會選擇較小的弧線。 其餘的兩個弧形候選項目每個繪製在不同的方向：<xref:System.Windows.Media.SweepDirection.Counterclockwise>或<xref:System.Windows.Media.SweepDirection.Clockwise>。 <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>屬性會指定要使用哪一個。  
  
 下圖顯示兩個相同，除了的橢圓弧形其<xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>設定。  
  
 ![具有不同 IsLargeArc 設定的 Arcsegment](~/add/media/arcsegment-islargearc.png "具有不同 IsLargeArc 設定的 Arcsegment")  
具有不同 IsLargeArc 設定的 ArcSegment 物件  
  
<a name="dependencyPropertyInfo_IsLargeArc"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLargeArcProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsLargeArcProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsLargeArcProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.IsLargeArcProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsLargeArcProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsLargeArcProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsLargeArcProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.IsLargeArcProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.ArcSegment.IsLargeArc" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.Point" />
      <MemberSignature Language="VB.NET" Value="Public Property Point As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point : System.Windows.Point with get, set" Usage="System.Windows.Media.ArcSegment.Point" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定橢圓形弧線的端點。</summary>
        <value>弧線要繪製到的點。 預設值是 (0,0)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.ArcSegment>類別會定義只它代表的弧線的終點，弧線的起點是目前的點<xref:System.Windows.Media.PathFigure>要<xref:System.Windows.Media.ArcSegment>加入。  
  
 如果弧線的起點和終點相同，則會不繪製任何弧形。  
  
 大多數的特定位置、 大小和輪替弧形，有四個不同的弧形，可以繪製;<xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>和<xref:System.Windows.Media.ArcSegment.SweepDirection%2A>屬性會指出要使用哪一個弧形。  
  
 四個候選弧線掃掠，兩個代表大型弧形 180 度或更新版本，以及兩個代表較小的弧線掃掠 180 度或更少。 如果<xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>是`true`，則兩個較大的弧形掃掠的其中一個是選擇; 否則如果是`false`一掃掠會選擇較小的弧線。 其餘的兩個弧形候選項目每個繪製在不同的方向：<xref:System.Windows.Media.SweepDirection.Counterclockwise>或<xref:System.Windows.Media.SweepDirection.Clockwise>。 <xref:System.Windows.Media.ArcSegment.SweepDirection%2A>屬性會指定要使用哪一個。  
  
 下圖顯示數個橢圓弧形完全相同，除了其<xref:System.Windows.Media.ArcSegment.Point%2A>設定。  
  
 ![具有不同 Point 設定的 Arcsegment](~/add/media/arcsegment-point.png "具有不同 Point 設定的 Arcsegment")  
數個具有不同 Point 設定的 ArcSegment 物件  
  
<a name="dependencyPropertyInfo_Point"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.ArcSegment.PointProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PointProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PointProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.PointProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PointProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PointProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PointProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.PointProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.ArcSegment.Point" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationAngle">
      <MemberSignature Language="C#" Value="public double RotationAngle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RotationAngle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.RotationAngle" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationAngle As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RotationAngle { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.RotationAngle : double with get, set" Usage="System.Windows.Media.ArcSegment.RotationAngle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定橢圓形繞著 X 軸旋轉的量 (以度為單位)。</summary>
        <value>橢圓形繞著 X 軸旋轉的量 (以度為單位)。 預設值為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下圖顯示數個橢圓弧形完全相同，除了其<xref:System.Windows.Media.ArcSegment.RotationAngle%2A>設定。  
  
 ![具有不同 RotationAngle 設定的 Arcsegment](~/add/media/arcsegment-rotationangle.png "具有不同 RotationAngle 設定的 Arcsegment")  
數個具有不同 RotationAngle 設定的 ArcSegment 物件  
  
 請注意，是否弧線的寬度和高度都相同，設定這個屬性會有任何作用。  
  
<a name="dependencyPropertyInfo_RotationAngle"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.ArcSegment.RotationAngleProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationAngleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RotationAngleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RotationAngleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.RotationAngleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RotationAngleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RotationAngleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RotationAngleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.RotationAngleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.ArcSegment.RotationAngle" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Windows.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size Size { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Windows.Size with get, set" Usage="System.Windows.Media.ArcSegment.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定作為 <see cref="T:System.Windows.Size" /> 結構之弧線的 X 和 Y 半徑。</summary>
        <value>
          <see cref="T:System.Windows.Size" /> 結構，描述橢圓形弧線的 X 和 Y 半徑。<see cref="T:System.Windows.Size" />結構的<see cref="P:System.Windows.Size.Width" />屬性會指定弧線的 x 軸半徑，其<see cref="P:System.Windows.Size.Height" />屬性會指定弧線的 y 半徑。 預設值為 0,0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下圖顯示數個橢圓弧形完全相同，除了其<xref:System.Windows.Media.ArcSegment.Size%2A>設定。  
  
 ![具有不同 Size 設定的 Arcsegment](~/add/media/arcsegment-size.png "具有不同 Size 設定的 Arcsegment")  
數個具有不同 Size 設定的 ArcSegment 物件  
  
<a name="dependencyPropertyInfo_Size"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.ArcSegment.SizeProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.SizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SizeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.SizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.ArcSegment.Size" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SweepDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Media.SweepDirection SweepDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.SweepDirection SweepDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.SweepDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property SweepDirection As SweepDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::SweepDirection SweepDirection { System::Windows::Media::SweepDirection get(); void set(System::Windows::Media::SweepDirection value); };" />
      <MemberSignature Language="F#" Value="member this.SweepDirection : System.Windows.Media.SweepDirection with get, set" Usage="System.Windows.Media.ArcSegment.SweepDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.SweepDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指定是否在 <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> 或 <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> 方向繪製弧形。</summary>
        <value>指定繪製弧形方向的值。 預設值是 <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 針對<xref:System.Windows.Media.ArcSegment>與給定<xref:System.Windows.Media.ArcSegment.Size%2A>，<xref:System.Windows.Media.ArcSegment.RotationAngle%2A>起始點，且結尾<xref:System.Windows.Media.ArcSegment.Point%2A>，可能會有四個不同的弧形。 指定<xref:System.Windows.Media.ArcSegment.IsLargeArc%2A>屬性可以減少可能的弧線的兩個： 從起始點繪製到結尾的弧形<xref:System.Windows.Media.ArcSegment.Point%2A>中<xref:System.Windows.Media.SweepDirection.Clockwise>方向和從起始點到中的結束點繪製弧形<xref:System.Windows.Media.SweepDirection.Counterclockwise>方向。  
  
 下圖顯示兩個相同，除了的橢圓弧形其<xref:System.Windows.Media.ArcSegment.SweepDirection%2A>設定。  
  
 ![具有不同 SweepDirection 設定的 Arcsegment](~/add/media/arcsegment-sweepdirection.png "具有不同 SweepDirection 設定的 Arcsegment")  
具有不同 SweepDirection 設定的 ArcSegment 物件  
  
<a name="dependencyPropertyInfo_SweepDirection"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SweepDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SweepDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SweepDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.SweepDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SweepDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SweepDirectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SweepDirectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.SweepDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.ArcSegment.SweepDirection" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>