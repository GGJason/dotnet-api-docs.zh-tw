<Type Name="MediaPlayer" FullName="System.Windows.Media.MediaPlayer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1cf44e167fcb21e11dec56ff3f1846709fb8da97" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46595201" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MediaPlayer : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaPlayer extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.MediaPlayer" />
  <TypeSignature Language="VB.NET" Value="Public Class MediaPlayer&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MediaPlayer : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type MediaPlayer = class&#xA;    inherit Animatable&#xA;    interface DUCE.IResource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b18ff-101">提供媒體播放以用於繪製。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b18ff-101">Provides media playback for drawings.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-102">雖然您可以宣告此類別中的執行個體[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]，您無法載入及播放媒體，而不使用程式碼。</span><span class="sxs-lookup"><span data-stu-id="b18ff-102">Although you can declare an instance of this class in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], you cannot load and play its media without using code.</span></span> <span data-ttu-id="b18ff-103">若要在中播放媒體[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]只能使用<xref:System.Windows.Controls.MediaElement>。</span><span class="sxs-lookup"><span data-stu-id="b18ff-103">To play media in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] only, use a <xref:System.Windows.Controls.MediaElement>.</span></span> <span data-ttu-id="b18ff-104">此外，如果您宣告中的執行個體[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，唯一實用的用途為填滿的屬性元素語法<xref:System.Windows.Media.VideoDrawing.Player%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="b18ff-104">Also, if you declare an instance in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the only practical use is to fill property element syntax for the <xref:System.Windows.Media.VideoDrawing.Player%2A> property.</span></span>  
  
 <span data-ttu-id="b18ff-105">在隨著您的應用程式散發媒體時，您無法使用媒體檔案做為專案資源。</span><span class="sxs-lookup"><span data-stu-id="b18ff-105">When distributing media with your application, you cannot use a media file as a project resource.</span></span> <span data-ttu-id="b18ff-106">在您的專案檔中，您必須改為將媒體類型設定為 `Content`，並將 `CopyToOutputDirectory` 設定為 `PreserveNewest` 或 `Always`。</span><span class="sxs-lookup"><span data-stu-id="b18ff-106">In your project file, you must instead set the media type to `Content` and set `CopyToOutputDirectory` to `PreserveNewest` or `Always`.</span></span>  
  
 <span data-ttu-id="b18ff-107"><xref:System.Windows.Media.MediaPlayer> 可用於兩種不同模式的詳細資訊，取決於什麼促使 media player： 獨立模式或時鐘模式。</span><span class="sxs-lookup"><span data-stu-id="b18ff-107"><xref:System.Windows.Media.MediaPlayer> can be used in two different modes, depending on what is driving the player: independent mode or clock mode.</span></span> <span data-ttu-id="b18ff-108">在獨立模式中，<xref:System.Windows.Media.MediaPlayer>相當於映像和用來開啟媒體<xref:System.Windows.Media.MediaPlayer.Open%2A>方法磁碟機播放。</span><span class="sxs-lookup"><span data-stu-id="b18ff-108">In independent mode, the <xref:System.Windows.Media.MediaPlayer> is analogous to an image and the media opened through the <xref:System.Windows.Media.MediaPlayer.Open%2A> method drives playback.</span></span> <span data-ttu-id="b18ff-109">在時鐘模式中，<xref:System.Windows.Media.MediaPlayer>可以視為目標的動畫，並因此會有相對應<xref:System.Windows.Media.Animation.Timeline>和<xref:System.Windows.Media.Animation.Clock>時間中的項目樹狀結構控制項播放。</span><span class="sxs-lookup"><span data-stu-id="b18ff-109">In Clock mode, the <xref:System.Windows.Media.MediaPlayer> can be thought of as a target for an animation, and thus it will have corresponding <xref:System.Windows.Media.Animation.Timeline> and <xref:System.Windows.Media.Animation.Clock> entries in the Timing tree which controls playback.</span></span> <span data-ttu-id="b18ff-110">如需有關媒體模式的詳細資訊，請參閱[多媒體概觀](~/docs/framework/wpf/graphics-multimedia/multimedia-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="b18ff-110">For more information on media modes, see the [Multimedia Overview](~/docs/framework/wpf/graphics-multimedia/multimedia-overview.md).</span></span>  
  
 <span data-ttu-id="b18ff-111"><xref:System.Windows.Media.MediaPlayer> 不同於<xref:System.Windows.Controls.MediaElement>在於它不是可以直接加入的控制項[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]應用程式。</span><span class="sxs-lookup"><span data-stu-id="b18ff-111"><xref:System.Windows.Media.MediaPlayer> is different from a <xref:System.Windows.Controls.MediaElement> in that it is not a control that can be added directly to the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] of an application.</span></span> <span data-ttu-id="b18ff-112">若要顯示使用載入的媒體<xref:System.Windows.Media.MediaPlayer>，則<xref:System.Windows.Media.VideoDrawing>或<xref:System.Windows.Media.DrawingContext>必須使用。</span><span class="sxs-lookup"><span data-stu-id="b18ff-112">To display media loaded using <xref:System.Windows.Media.MediaPlayer>, a <xref:System.Windows.Media.VideoDrawing> or <xref:System.Windows.Media.DrawingContext> must be used.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="b18ff-113">如何： 使用 VideoDrawing 播放媒體</span><span class="sxs-lookup"><span data-stu-id="b18ff-113">How to: Play Media using a VideoDrawing</span></span>](~/docs/framework/wpf/graphics-multimedia/how-to-play-media-using-a-videodrawing.md)  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Drawing" />
    <altmember cref="T:System.Windows.Media.VideoDrawing" />
    <altmember cref="T:System.Windows.Media.DrawingContext" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaPlayer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-114">初始化 <see cref="T:System.Windows.Media.MediaPlayer" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-114">Initializes a new instance of the <see cref="T:System.Windows.Media.MediaPlayer" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Balance">
      <MemberSignature Language="C#" Value="public double Balance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Balance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Balance" />
      <MemberSignature Language="VB.NET" Value="Public Property Balance As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Balance { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Balance : double with get, set" Usage="System.Windows.Media.MediaPlayer.Balance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-115">取得或設定左邊和右邊喇叭音量的平衡。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-115">Gets or sets the balance between the left and right speaker volumes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-116">左邊和右邊喇叭的音量比例範圍介於 -1 和 1 之間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-116">The ratio of volume across the left and right speakers in a range between -1 and 1.</span>
          </span>
          <span data-ttu-id="b18ff-117">預設值為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-117">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-118">值為-1 代表 100%的左邊算的起的主講人和右邊喇叭的 1 代表 100%。</span><span class="sxs-lookup"><span data-stu-id="b18ff-118">A value of -1 represents 100% of the left side speakers and 1 represents 100% of the right side speakers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingEnded">
      <MemberSignature Language="C#" Value="public event EventHandler BufferingEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BufferingEnded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.BufferingEnded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BufferingEnded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BufferingEnded;" />
      <MemberSignature Language="F#" Value="member this.BufferingEnded : EventHandler " Usage="member this.BufferingEnded : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-119">當緩衝完成時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-119">Occurs when buffering has finished.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingProgress">
      <MemberSignature Language="C#" Value="public double BufferingProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 BufferingProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.BufferingProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BufferingProgress As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double BufferingProgress { double get(); };" />
      <MemberSignature Language="F#" Value="member this.BufferingProgress : double" Usage="System.Windows.Media.MediaPlayer.BufferingProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-120">取得資料流內容緩衝完成的百分比。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-120">Gets the percentage of buffering completed for streaming content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-121">資料流內容緩衝完成的百分比會以介於 0 和 1 的值來表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-121">The percentage of buffering completed for streaming content represented in a value between 0 and 1.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferingStarted">
      <MemberSignature Language="C#" Value="public event EventHandler BufferingStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BufferingStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.BufferingStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BufferingStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BufferingStarted;" />
      <MemberSignature Language="F#" Value="member this.BufferingStarted : EventHandler " Usage="member this.BufferingStarted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-122">當緩衝啟動時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-122">Occurs when buffering has started.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPause">
      <MemberSignature Language="C#" Value="public bool CanPause { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPause" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.CanPause" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanPause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPause { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPause : bool" Usage="System.Windows.Media.MediaPlayer.CanPause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-123">取得值，這個值表示媒體是否可暫停。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-123">Gets a value indicating whether the media can be paused.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-124">如果媒體可開啟則為 true，否則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-124">true if the media can be paused; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.MediaClock Clock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.MediaClock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Clock" />
      <MemberSignature Language="VB.NET" Value="Public Property Clock As MediaClock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::MediaClock ^ Clock { System::Windows::Media::MediaClock ^ get(); void set(System::Windows::Media::MediaClock ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Clock : System.Windows.Media.MediaClock with get, set" Usage="System.Windows.Media.MediaPlayer.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.MediaClock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-125">取得或設定與要播放之 <see cref="T:System.Windows.Media.MediaClock" /> 關聯的 <see cref="T:System.Windows.Media.MediaTimeline" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-125">Gets or sets the <see cref="T:System.Windows.Media.MediaClock" /> associated with the <see cref="T:System.Windows.Media.MediaTimeline" /> to be played.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-126">與要播放之 <see cref="T:System.Windows.Media.MediaTimeline" /> 關聯的時脈。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-126">The clock associated with the <see cref="T:System.Windows.Media.MediaTimeline" /> to be played.</span>
          </span>
          <span data-ttu-id="b18ff-127">預設為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-127">The default is null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-128">設定這個屬性會告知<xref:System.Windows.Media.MediaPlayer>来驅動的時鐘，並利用計時引擎，將播放程式放入時鐘模式。</span><span class="sxs-lookup"><span data-stu-id="b18ff-128">Setting this property tells the <xref:System.Windows.Media.MediaPlayer> to be clock driven and will utilize the timing engine, placing the player in Clock mode.</span></span> <span data-ttu-id="b18ff-129">停止任何正在播放的媒體和<xref:System.Uri>聯新時鐘會開啟。</span><span class="sxs-lookup"><span data-stu-id="b18ff-129">Any media that is playing is stopped and the <xref:System.Uri> associated with the new clock is opened.</span></span>  
  
 <span data-ttu-id="b18ff-130">當播放程式處於時鐘模式中時，搜尋使用<xref:System.Windows.Media.MediaPlayer.Position%2A>或呼叫<xref:System.Windows.Media.MediaPlayer.Play%2A>， <xref:System.Windows.Media.MediaPlayer.Pause%2A>，或<xref:System.Windows.Media.MediaPlayer.Stop%2A>方法會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="b18ff-130">When the player is in clock mode, seeking using <xref:System.Windows.Media.MediaPlayer.Position%2A> or calling the <xref:System.Windows.Media.MediaPlayer.Play%2A>, <xref:System.Windows.Media.MediaPlayer.Pause%2A>, or <xref:System.Windows.Media.MediaPlayer.Stop%2A> methods will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="b18ff-131">這些作業時，就只能使用播放程式<xref:System.Windows.Media.MediaPlayer.Clock%2A>為 null。</span><span class="sxs-lookup"><span data-stu-id="b18ff-131">These operations are only available when the player <xref:System.Windows.Media.MediaPlayer.Clock%2A> is null.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="mediaPlayer.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="b18ff-132">要複製的 <see cref="T:System.Windows.Media.MediaPlayer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-132">The <see cref="T:System.Windows.Media.MediaPlayer" /> to clone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b18ff-133">使這個執行個體成為指定之 <see cref="T:System.Windows.Media.MediaPlayer" /> 的深層複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-133">Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.MediaPlayer" />.</span>
          </span>
          <span data-ttu-id="b18ff-134">當複製相依性屬性時，這個方法會複製資源參考和資料繫結 (但可能無法再解析)，但不會複製動畫或它們目前的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-134">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-135">這個方法會呼叫<xref:System.Windows.Freezable.Clone%2A>方法並不會呼叫直接從程式碼中，除了呼叫基底實作，同時覆寫此方法時。</span><span class="sxs-lookup"><span data-stu-id="b18ff-135">This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="b18ff-136">若要建立目前物件的可修改複本，請呼叫<xref:System.Windows.Freezable.Clone%2A>而不是直接呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="b18ff-136">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="b18ff-137">如需詳細資訊，請參閱<xref:System.Windows.Freezable.CloneCore%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="b18ff-137">For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="mediaPlayer.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="b18ff-138">要複製的 <see cref="T:System.Windows.Media.MediaPlayer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-138">The <see cref="T:System.Windows.Media.MediaPlayer" /> to clone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b18ff-139">使用目前的屬性值，讓這個執行個體成為指定的 <see cref="T:System.Windows.Media.MediaPlayer" /> 之可修改深層複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-139">Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.MediaPlayer" /> using current property values.</span>
          </span>
          <span data-ttu-id="b18ff-140">不會複製資源參考、資料繫結和動畫，但是會複製其目前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-140">Resource references, data bindings, and animations are not copied, but their current values are.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-141">這個方法會呼叫<xref:System.Windows.Freezable.CloneCurrentValue%2A>方法並不會呼叫直接從程式碼中，除了呼叫基底實作，同時覆寫此方法時。</span><span class="sxs-lookup"><span data-stu-id="b18ff-141">This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="b18ff-142">若要建立目前物件的可修改複本，請呼叫<xref:System.Windows.Freezable.CloneCurrentValue%2A>而不是直接呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="b18ff-142">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="b18ff-143">如需詳細資訊，請參閱<xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="b18ff-143">For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="mediaPlayer.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-144">關閉基礎媒體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-144">Closes the underlying media.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-145"><xref:System.Windows.Media.MediaPlayer>可以藉由呼叫一次開啟<xref:System.Windows.Media.MediaPlayer.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="b18ff-145">The <xref:System.Windows.Media.MediaPlayer> can be opened again by calling the <xref:System.Windows.Media.MediaPlayer.Open%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="mediaPlayer.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-146">建立新的 <see cref="T:System.Windows.Media.MediaPlayer" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-146">Creates a new <see cref="T:System.Windows.Media.MediaPlayer" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b18ff-147">新的 <see cref="T:System.Windows.Media.MediaPlayer" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-147">A new <see cref="T:System.Windows.Media.MediaPlayer" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgress">
      <MemberSignature Language="C#" Value="public double DownloadProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DownloadProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.DownloadProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DownloadProgress As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DownloadProgress { double get(); };" />
      <MemberSignature Language="F#" Value="member this.DownloadProgress : double" Usage="System.Windows.Media.MediaPlayer.DownloadProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-148">取得下載遠端伺服器上之內容時的下載進度百分比。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-148">Gets the percentage of download progress for content located at a remote server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-149">下載遠端伺服器上之內容時的下載進度百分比會以介於 0 到 1 的值來表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-149">The percentage of download progress for content located at a remote server represented by a value between 0 and 1.</span>
          </span>
          <span data-ttu-id="b18ff-150">預設值為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-150">The default is 0.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="mediaPlayer.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="b18ff-151">要複製和凍結的 <see cref="T:System.Windows.Media.MediaPlayer" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-151">The <see cref="T:System.Windows.Media.MediaPlayer" /> object to clone and freeze.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b18ff-152">將這個執行個體製作為所指定 <see cref="T:System.Windows.Media.MediaPlayer" /> 物件的複製品。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-152">Makes this instance a clone of the specified <see cref="T:System.Windows.Media.MediaPlayer" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-153">當複製相依性屬性時，這個方法會複製資源參考和資料繫結 (但可能無法再解析)，但不會複製動畫或它們目前的值。</span><span class="sxs-lookup"><span data-stu-id="b18ff-153">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span> <span data-ttu-id="b18ff-154">請注意，如果這些屬性包含資源參考或資料繫結<xref:System.Windows.Freezable.GetAsFrozen%2A>將會失敗時嘗試凍結物件，而且將會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="b18ff-154">Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="b18ff-155">這個方法會呼叫<xref:System.Windows.Freezable.GetAsFrozen%2A>方法並不會呼叫直接從程式碼中，除了呼叫基底實作，同時覆寫此方法時。</span><span class="sxs-lookup"><span data-stu-id="b18ff-155">This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="b18ff-156">若要建立目前物件的凍結的複本，請呼叫<xref:System.Windows.Freezable.GetAsFrozen%2A>而不是直接呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="b18ff-156">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="b18ff-157">如需詳細資訊，請參閱<xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="b18ff-157">For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAudio">
      <MemberSignature Language="C#" Value="public bool HasAudio { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAudio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.HasAudio" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAudio As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAudio { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAudio : bool" Usage="System.Windows.Media.MediaPlayer.HasAudio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-158">取得值，這個值表示媒體是否具有音訊輸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-158">Gets a value that indicating whether the media has audio output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-159">如果媒體具有音訊輸出則為 true，否則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-159">true if the media has audio output; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasVideo">
      <MemberSignature Language="C#" Value="public bool HasVideo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasVideo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.HasVideo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasVideo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasVideo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasVideo : bool" Usage="System.Windows.Media.MediaPlayer.HasVideo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-160">取得值，這個值表示媒體是否具有視訊輸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-160">Gets a value that indicates whether the media has video output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-161">如果媒體具有視訊輸出則為 true，否則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-161">true if the media has video output; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuffering">
      <MemberSignature Language="C#" Value="public bool IsBuffering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuffering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.IsBuffering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBuffering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuffering { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBuffering : bool" Usage="System.Windows.Media.MediaPlayer.IsBuffering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-162">取得值，這個值表示媒體是否正在緩衝。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-162">Gets a value that indicates whether the media is buffering.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-163">如果媒體正在緩衝則為 true，否則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-163">true if the media is buffering; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMuted">
      <MemberSignature Language="C#" Value="public bool IsMuted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMuted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.IsMuted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMuted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMuted { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMuted : bool with get, set" Usage="System.Windows.Media.MediaPlayer.IsMuted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-164">取得值，這個值表示媒體是否為靜音。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-164">Gets a value that indicates whether the media is muted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-165">如果媒體為靜音則為 true，否則為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-165">true if the media is muted; otherwise, false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaEnded">
      <MemberSignature Language="C#" Value="public event EventHandler MediaEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MediaEnded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.MediaEnded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaEnded As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MediaEnded;" />
      <MemberSignature Language="F#" Value="member this.MediaEnded : EventHandler " Usage="member this.MediaEnded : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-166">媒體完成播放時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-166">Occurs when the media has finished playback.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt; MediaFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Media.ExceptionEventArgs&gt; MediaFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.MediaFailed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaFailed As EventHandler(Of ExceptionEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Media::ExceptionEventArgs ^&gt; ^ MediaFailed;" />
      <MemberSignature Language="F#" Value="member this.MediaFailed : EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt; " Usage="member this.MediaFailed : System.EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Media.ExceptionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-167">當遇到錯誤時發生</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-167">Occurs when an error is encountered</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_MediaFailed"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b18ff-168">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b18ff-168">XAML Attribute Usage</span></span>  
  
```  
<object MediaFailed="EventHandler"/>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaOpened">
      <MemberSignature Language="C#" Value="public event EventHandler MediaOpened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MediaOpened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.MediaOpened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MediaOpened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MediaOpened;" />
      <MemberSignature Language="F#" Value="member this.MediaOpened : EventHandler " Usage="member this.MediaOpened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-169">媒體開啟時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-169">Occurs when the media is opened.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration NaturalDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration NaturalDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.NaturalDuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration NaturalDuration { System::Windows::Duration get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalDuration : System.Windows.Duration" Usage="System.Windows.Media.MediaPlayer.NaturalDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-170">取得媒體的自然持續期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-170">Gets the natural duration of the media.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-171">媒體的自然持續期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-171">The natural duration of the media.</span>
          </span>
          <span data-ttu-id="b18ff-172">預設值為 <see cref="P:System.Windows.Duration.Automatic" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-172">The default is <see cref="P:System.Windows.Duration.Automatic" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-173"><xref:System.Windows.Media.MediaPlayer.NaturalDuration%2A> 無法在之後決定直到<xref:System.Windows.Media.MediaPlayer.MediaOpened>發生。</span><span class="sxs-lookup"><span data-stu-id="b18ff-173"><xref:System.Windows.Media.MediaPlayer.NaturalDuration%2A> cannot be determined until after <xref:System.Windows.Media.MediaPlayer.MediaOpened> has occurred.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalVideoHeight">
      <MemberSignature Language="C#" Value="public int NaturalVideoHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NaturalVideoHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.NaturalVideoHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalVideoHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NaturalVideoHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalVideoHeight : int" Usage="System.Windows.Media.MediaPlayer.NaturalVideoHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-174">取得視訊的像素高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-174">Gets the pixel height of the video.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-175">視訊的像素高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-175">The pixel height of the video.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-176">如果是音訊的媒體類型，則傳回 null。</span><span class="sxs-lookup"><span data-stu-id="b18ff-176">Null is returned if the media type is audio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NaturalVideoWidth">
      <MemberSignature Language="C#" Value="public int NaturalVideoWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NaturalVideoWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.NaturalVideoWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalVideoWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NaturalVideoWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalVideoWidth : int" Usage="System.Windows.Media.MediaPlayer.NaturalVideoWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-177">取得視訊的像素寬度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-177">Gets the pixel width of the video.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-178">視訊的像素寬度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-178">The pixel width of the video.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-179">如果是音訊的媒體類型，則傳回 null。</span><span class="sxs-lookup"><span data-stu-id="b18ff-179">Null is returned if the media type is audio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Open(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (source As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open(Uri ^ source);" />
      <MemberSignature Language="F#" Value="member this.Open : Uri -&gt; unit" Usage="mediaPlayer.Open source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="b18ff-180">媒體的來源 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-180">The media source <see cref="T:System.Uri" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b18ff-181">開啟指定的 <see cref="T:System.Uri" /> 以用於媒體播放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-181">Opens the given <see cref="T:System.Uri" /> for media playback.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="mediaPlayer.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-182">暫停媒體播放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-182">Pauses media playback.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-183">呼叫<xref:System.Windows.Media.MediaPlayer.Pause%2A>當播放程式都有相關聯<xref:System.Windows.Media.MediaPlayer.Clock%2A>將會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="b18ff-183">Calling <xref:System.Windows.Media.MediaPlayer.Pause%2A> when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="b18ff-184"><xref:System.Windows.Media.MediaPlayer.Pause%2A> 計時引擎會驅動媒體播放時，無法呼叫。</span><span class="sxs-lookup"><span data-stu-id="b18ff-184"><xref:System.Windows.Media.MediaPlayer.Pause%2A> cannot be called while the timing engine drives media playback.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Play" />
      <MemberSignature Language="VB.NET" Value="Public Sub Play ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Play();" />
      <MemberSignature Language="F#" Value="member this.Play : unit -&gt; unit" Usage="mediaPlayer.Play " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-185">從目前的 <see cref="P:System.Windows.Media.MediaPlayer.Position" /> 播放媒體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-185">Plays media from the current <see cref="P:System.Windows.Media.MediaPlayer.Position" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-186">呼叫<xref:System.Windows.Media.MediaPlayer.Play%2A>當播放程式都有相關聯<xref:System.Windows.Media.MediaPlayer.Clock%2A>將會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="b18ff-186">Calling <xref:System.Windows.Media.MediaPlayer.Play%2A> when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="b18ff-187"><xref:System.Windows.Media.MediaPlayer.Play%2A> 計時引擎會驅動媒體播放時，無法呼叫。</span><span class="sxs-lookup"><span data-stu-id="b18ff-187"><xref:System.Windows.Media.MediaPlayer.Play%2A> cannot be called while the timing engine drives media playback.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public TimeSpan Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Position { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Position : TimeSpan with get, set" Usage="System.Windows.Media.MediaPlayer.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-188">取得或設定媒體的目前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-188">Gets or sets the current position of the media.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-189">媒體的目前位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-189">The current position of the media.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-190">如果播放程式都有相關聯<xref:System.Windows.Media.MediaPlayer.Clock%2A>，將<xref:System.Windows.Media.MediaPlayer.Position%2A>將會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="b18ff-190">If the player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A>, setting <xref:System.Windows.Media.MediaPlayer.Position%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="b18ff-191"><xref:System.Windows.Media.MediaPlayer.Position%2A> nelze nastavit，dokud 計時引擎會驅動媒體播放。</span><span class="sxs-lookup"><span data-stu-id="b18ff-191"><xref:System.Windows.Media.MediaPlayer.Position%2A> cannot be set while the timing engine drives media playback.</span></span>  
  
<a name="xamlTextUsage_Position"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="b18ff-192">XAML 文字使用方式</span><span class="sxs-lookup"><span data-stu-id="b18ff-192">XAML Text Usage</span></span>  
 <span data-ttu-id="b18ff-193">不會通常用於[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="b18ff-193">Not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPreamble">
      <MemberSignature Language="C#" Value="protected void ReadPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.ReadPreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadPreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadPreamble();" />
      <MemberSignature Language="F#" Value="member this.ReadPreamble : unit -&gt; unit" Usage="mediaPlayer.ReadPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-194">確定 MediaPlayer 是從有效的執行緒進行存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-194">Ensures that the MediaPlayer is being accessed from a valid thread.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptCommand">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt; ScriptCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Media.MediaScriptCommandEventArgs&gt; ScriptCommand" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.MediaPlayer.ScriptCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ScriptCommand As EventHandler(Of MediaScriptCommandEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Media::MediaScriptCommandEventArgs ^&gt; ^ ScriptCommand;" />
      <MemberSignature Language="F#" Value="member this.ScriptCommand : EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt; " Usage="member this.ScriptCommand : System.EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Media.MediaScriptCommandEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-195">在媒體中遇到指令碼命令時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-195">Occurs when a script command has been encountered within the media.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_ScriptCommand"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b18ff-196">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="b18ff-196">XAML Attribute Usage</span></span>  
  
```  
<object ScriptCommand="EventHandler"/>  
```  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?linkid=57417">
          <span data-ttu-id="b18ff-197">IWMPEventsScriptCommand</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-197">IWMPEventsScriptCommand</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ScrubbingEnabled">
      <MemberSignature Language="C#" Value="public bool ScrubbingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrubbingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.ScrubbingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrubbingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrubbingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ScrubbingEnabled : bool with get, set" Usage="System.Windows.Media.MediaPlayer.ScrubbingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-198">取得或設定值，這個值表示是否啟用清除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-198">Gets or sets a value that indicates whether scrubbing is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-199">如果啟用清除則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-199">
              <see langword="true" /> if scrubbing is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Source" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri" Usage="System.Windows.Media.MediaPlayer.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-200">取得媒體的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-200">Gets the media <see cref="T:System.Uri" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-201">目前媒體的 <see cref="T:System.Uri" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-201">The current media <see cref="T:System.Uri" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-202"><xref:System.Windows.Media.MediaPlayer.Source%2A> 是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="b18ff-202"><xref:System.Windows.Media.MediaPlayer.Source%2A> is read-only.</span></span> <span data-ttu-id="b18ff-203">這個屬性會取得<xref:System.Uri>，透過開啟<xref:System.Windows.Media.MediaPlayer.Open%2A>方法或<xref:System.Uri>相關聯<xref:System.Windows.Media.MediaPlayer.Clock%2A>。</span><span class="sxs-lookup"><span data-stu-id="b18ff-203">This property gets the <xref:System.Uri> that is opened through the <xref:System.Windows.Media.MediaPlayer.Open%2A> method or the <xref:System.Uri> associated with the <xref:System.Windows.Media.MediaPlayer.Clock%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.MediaPlayer.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-204">取得或設定媒體的播放速率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-204">Gets or sets the ratio of speed that media is played at.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-205">媒體的播放速率會以介於 0 和最大的雙精度浮點數值之間的值來表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-205">The ratio of speed that media is played back represented by a value between 0 and the largest double value.</span>
          </span>
          <span data-ttu-id="b18ff-206">預設值為 1.0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-206">The default is 1.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-207">值小於一產生比正常播放，而值大於一個會產生比正常播放速度更慢。</span><span class="sxs-lookup"><span data-stu-id="b18ff-207">Values less than one yield slower than normal playback while values greater than one yields faster than normal playback.</span></span>  
  
 <span data-ttu-id="b18ff-208">如果播放程式都有相關聯<xref:System.Windows.Media.MediaPlayer.Clock%2A>，將<xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A>不允許。</span><span class="sxs-lookup"><span data-stu-id="b18ff-208">If the player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A>, setting <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> is not allowed.</span></span> <span data-ttu-id="b18ff-209"><xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> nelze nastavit，dokud 計時引擎會驅動媒體播放。</span><span class="sxs-lookup"><span data-stu-id="b18ff-209"><xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> cannot be set while the timing engine drives media playback.</span></span>  
  
 <span data-ttu-id="b18ff-210">音訊播放不保證何時<xref:System.Windows.Controls.MediaElement.SpeedRatio%2A>不是`1`。</span><span class="sxs-lookup"><span data-stu-id="b18ff-210">Audio playback is not guaranteed when <xref:System.Windows.Controls.MediaElement.SpeedRatio%2A> is not `1`.</span></span>  
  
<a name="xamlTextUsage_SpeedRatio"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="b18ff-211">XAML 文字使用方式</span><span class="sxs-lookup"><span data-stu-id="b18ff-211">XAML Text Usage</span></span>  
 <span data-ttu-id="b18ff-212">不會通常用於[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="b18ff-212">Not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="mediaPlayer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-213">停止媒體播放。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-213">Stops media playback.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b18ff-214">呼叫<xref:System.Windows.Media.MediaPlayer.Stop%2A>當播放程式都有相關聯<xref:System.Windows.Media.MediaPlayer.Clock%2A>將會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="b18ff-214">Calling <xref:System.Windows.Media.MediaPlayer.Stop%2A> when a player has an associated <xref:System.Windows.Media.MediaPlayer.Clock%2A> will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="b18ff-215"><xref:System.Windows.Media.MediaPlayer.Stop%2A> 計時引擎會驅動媒體播放時，無法呼叫。</span><span class="sxs-lookup"><span data-stu-id="b18ff-215"><xref:System.Windows.Media.MediaPlayer.Stop%2A> cannot be called while the timing engine drives media playback.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Volume">
      <MemberSignature Language="C#" Value="public double Volume { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Volume" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.MediaPlayer.Volume" />
      <MemberSignature Language="VB.NET" Value="Public Property Volume As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Volume { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Volume : double with get, set" Usage="System.Windows.Media.MediaPlayer.Volume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-216">取得或設定媒體的磁碟區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-216">Gets or sets the media's volume.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b18ff-217">介於 0 和 1 之間的線性標尺上表示的媒體磁碟區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-217">The media's volume represented on a linear scale between 0 and 1.</span>
          </span>
          <span data-ttu-id="b18ff-218">預設值為 0.5。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-218">The default is 0.5.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_Volume"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="b18ff-219">XAML 文字使用方式</span><span class="sxs-lookup"><span data-stu-id="b18ff-219">XAML Text Usage</span></span>  
 <span data-ttu-id="b18ff-220">不會通常用於[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="b18ff-220">Not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WritePreamble">
      <MemberSignature Language="C#" Value="protected void WritePreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.MediaPlayer.WritePreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePreamble();" />
      <MemberSignature Language="F#" Value="member this.WritePreamble : unit -&gt; unit" Usage="mediaPlayer.WritePreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b18ff-221">確認 MediaPlayer 未凍結，而且是從有效的執行緒內容進行存取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18ff-221">Verifies that the MediaPlayer is not frozen and that it is being accessed from a valid threading context.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>