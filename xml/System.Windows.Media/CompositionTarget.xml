<Type Name="CompositionTarget" FullName="System.Windows.Media.CompositionTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="406549230efcaa9751d1780c2fd6bddcc0538d73" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37496877" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CompositionTarget : System.Windows.Threading.DispatcherObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CompositionTarget extends System.Windows.Threading.DispatcherObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.CompositionTarget" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CompositionTarget&#xA;Inherits DispatcherObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionTarget abstract : System::Windows::Threading::DispatcherObject, IDisposable" />
  <TypeSignature Language="F#" Value="type CompositionTarget = class&#xA;    inherit DispatcherObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e439a-101">表示應用程式的顯示表面。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e439a-101">Represents the display surface of your application.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e439a-102"><xref:System.Windows.Media.CompositionTarget> 是代表繪製您的應用程式在顯示介面的類別。</span><span class="sxs-lookup"><span data-stu-id="e439a-102"><xref:System.Windows.Media.CompositionTarget> is a class that represents the display surface on which your application is being drawn.</span></span> <span data-ttu-id="e439a-103">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 動畫引擎提供許多建立畫面型動畫的功能。</span><span class="sxs-lookup"><span data-stu-id="e439a-103">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] animation engine provides many features for creating frame-based animation.</span></span> <span data-ttu-id="e439a-104">不過，有應用程式的情況下，您需要控制呈現每個畫面進行。</span><span class="sxs-lookup"><span data-stu-id="e439a-104">However, there are application scenarios in which you need control over rendering on a per frame basis.</span></span> <span data-ttu-id="e439a-105"><xref:System.Windows.Media.CompositionTarget>物件讓您能夠建立自訂動畫，根據每個畫面的回呼。</span><span class="sxs-lookup"><span data-stu-id="e439a-105">The <xref:System.Windows.Media.CompositionTarget> object provides the ability to create custom animations based on a per-frame callback.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e439a-106">使用完整的程式碼範例<xref:System.Windows.Media.CompositionTarget>，請參閱 <<c2> [ 使用 CompositionTarget 範例](http://go.microsoft.com/fwlink/?LinkID=160045)。</span><span class="sxs-lookup"><span data-stu-id="e439a-106">For a complete code sample using <xref:System.Windows.Media.CompositionTarget>, see [Using the CompositionTarget Sample](http://go.microsoft.com/fwlink/?LinkID=160045).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.CompositionTarget.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="compositionTarget.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e439a-107">處置 <see cref="T:System.Windows.Media.CompositionTarget" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e439a-107">Disposes <see cref="T:System.Windows.Media.CompositionTarget" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rendering">
      <MemberSignature Language="C#" Value="public static event EventHandler Rendering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Rendering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.CompositionTarget.Rendering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Rendering As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ Rendering;" />
      <MemberSignature Language="F#" Value="member this.Rendering : EventHandler " Usage="member this.Rendering : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e439a-108">呈現複合樹狀中物件之前發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e439a-108">Occurs just before the objects in the composition tree are rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e439a-109"><xref:System.Windows.Media.CompositionTarget.Rendering>動畫和版面配置已套用到組合樹狀結構之後，將會路由至指定的事件處理常式的事件。</span><span class="sxs-lookup"><span data-stu-id="e439a-109">The <xref:System.Windows.Media.CompositionTarget.Rendering> event is routed to the specified event handler after animation and layout have been applied to the composition tree.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e439a-110"><xref:System.Windows.Media.CompositionTarget.Rendering>期間引發事件[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]轉譯程序。</span><span class="sxs-lookup"><span data-stu-id="e439a-110">The <xref:System.Windows.Media.CompositionTarget.Rendering> event is raised during the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] rendering process.</span></span> <span data-ttu-id="e439a-111">下列範例示範如何註冊<xref:System.EventHandler>委派給靜態<xref:System.Windows.Media.CompositionTarget.Rendering>方法<xref:System.Windows.Media.CompositionTarget>。</span><span class="sxs-lookup"><span data-stu-id="e439a-111">The following example shows how you register an <xref:System.EventHandler> delegate to the static <xref:System.Windows.Media.CompositionTarget.Rendering> method on <xref:System.Windows.Media.CompositionTarget>.</span></span>  
  
 [!code-csharp[CompositionTargetSample#CompositionTarget1](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositionTargetSample/CSharp/Window1.xaml.cs#compositiontarget1)]
 [!code-vb[CompositionTargetSample#CompositionTarget1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CompositionTargetSample/visualbasic/window1.xaml.vb#compositiontarget1)]  
  
 <span data-ttu-id="e439a-112">您可以使用轉譯事件處理常式來建立自訂的繪製內容。</span><span class="sxs-lookup"><span data-stu-id="e439a-112">You can use your rendering event handler to create custom drawing content.</span></span> <span data-ttu-id="e439a-113">每個畫面中，此事件處理常式會呼叫一次。</span><span class="sxs-lookup"><span data-stu-id="e439a-113">This event handler gets called once per frame.</span></span> <span data-ttu-id="e439a-114">每次[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]封送處理呼叫跨越到組合樹狀目錄中，您的事件處理常式視覺化樹狀結構中保存的轉譯資料。</span><span class="sxs-lookup"><span data-stu-id="e439a-114">Each time that [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] marshals the persisted rendering data in the visual tree across to the composition tree, your event handler is called.</span></span> <span data-ttu-id="e439a-115">此外，如果視覺化樹狀結構的變更會強制更新，複合樹狀結構，您的事件處理常式也稱為。</span><span class="sxs-lookup"><span data-stu-id="e439a-115">In addition, if changes to the visual tree force updates to the composition tree, your event handler is also called.</span></span> <span data-ttu-id="e439a-116">請注意，事件處理常式會呼叫後已計算版面配置。</span><span class="sxs-lookup"><span data-stu-id="e439a-116">Note that your event handler is called after layout has been computed.</span></span> <span data-ttu-id="e439a-117">不過，您也可以在您的事件處理常式，這表示該配置會計算一次呈現之前修改配置。</span><span class="sxs-lookup"><span data-stu-id="e439a-117">However, you can modify layout in your event handler, which means that layout will be computed once more before rendering.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.CompositionTarget.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootVisual : System.Windows.Media.Visual with get, set" Usage="System.Windows.Media.CompositionTarget.RootVisual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e439a-118">取得或設定 <see cref="T:System.Windows.Media.CompositionTarget" /> 的根視覺。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e439a-118">Gets or sets the root visual of the <see cref="T:System.Windows.Media.CompositionTarget" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e439a-119">
            <see cref="T:System.Windows.Media.CompositionTarget" /> 的根視覺。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e439a-119">The root visual of the <see cref="T:System.Windows.Media.CompositionTarget" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="e439a-120">設定根視覺外觀<see cref="T:System.Windows.Media.CompositionTarget" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e439a-120">for setting the root visual of the <see cref="T:System.Windows.Media.CompositionTarget" />.</span>
          </span>
          <span data-ttu-id="e439a-121">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e439a-121">Associated enumerations: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="TransformFromDevice">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Matrix TransformFromDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Matrix TransformFromDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.CompositionTarget.TransformFromDevice" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TransformFromDevice As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Matrix TransformFromDevice { System::Windows::Media::Matrix get(); };" />
      <MemberSignature Language="F#" Value="member this.TransformFromDevice : System.Windows.Media.Matrix" Usage="System.Windows.Media.CompositionTarget.TransformFromDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e439a-122">取得矩陣，這個矩陣可用來將呈現目的地裝置的座標轉換為這個目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e439a-122">Gets a matrix that can be used to transform coordinates from the rendering destination device to this target.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e439a-123">轉換矩陣。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e439a-123">The transformation matrix.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformToDevice">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Matrix TransformToDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Matrix TransformToDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.CompositionTarget.TransformToDevice" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TransformToDevice As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Matrix TransformToDevice { System::Windows::Media::Matrix get(); };" />
      <MemberSignature Language="F#" Value="member this.TransformToDevice : System.Windows.Media.Matrix" Usage="System.Windows.Media.CompositionTarget.TransformToDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e439a-124">取得矩陣，這個矩陣可用來將這個目標的座標轉換為呈現目的地裝置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e439a-124">Gets a matrix that can be used to transform coordinates from this target to the rendering destination device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e439a-125">轉換矩陣。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e439a-125">The transformation matrix.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>