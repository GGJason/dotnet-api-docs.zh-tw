<Type Name="CompositionTarget" FullName="System.Windows.Media.CompositionTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e179c1a6efc2c24dbd1e42f2c54bffeec439e2dd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36469386" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CompositionTarget : System.Windows.Threading.DispatcherObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CompositionTarget extends System.Windows.Threading.DispatcherObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.CompositionTarget" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CompositionTarget&#xA;Inherits DispatcherObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionTarget abstract : System::Windows::Threading::DispatcherObject, IDisposable" />
  <TypeSignature Language="F#" Value="type CompositionTarget = class&#xA;    inherit DispatcherObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示應用程式的顯示表面。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.CompositionTarget> 是代表繪製您的應用程式的顯示介面的類別。 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 動畫引擎提供許多建立畫面型動畫的功能。 不過，有一些您需要控制呈現每個框架為基礎的應用程式案例。 <xref:System.Windows.Media.CompositionTarget>物件可讓您建立自訂個別畫面格回呼為基礎的動畫。  
  
> [!NOTE]
>  完整的程式碼範例使用<xref:System.Windows.Media.CompositionTarget>，請參閱[使用 CompositionTarget 範例](http://go.microsoft.com/fwlink/?LinkID=160045)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.CompositionTarget.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="compositionTarget.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>處置 <see cref="T:System.Windows.Media.CompositionTarget" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rendering">
      <MemberSignature Language="C#" Value="public static event EventHandler Rendering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Rendering" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.CompositionTarget.Rendering" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Rendering As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ Rendering;" />
      <MemberSignature Language="F#" Value="member this.Rendering : EventHandler " Usage="member this.Rendering : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>呈現複合樹狀中物件之前發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.CompositionTarget.Rendering>事件會路由傳送至指定的事件處理常式之後動畫和版面配置已套用至複合樹狀結構。  
  
   
  
## Examples  
 <xref:System.Windows.Media.CompositionTarget.Rendering>期間引發事件[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]轉譯程序。 下列範例顯示如何註冊<xref:System.EventHandler>委派給靜態<xref:System.Windows.Media.CompositionTarget.Rendering>方法<xref:System.Windows.Media.CompositionTarget>。  
  
 [!code-csharp[CompositionTargetSample#CompositionTarget1](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositionTargetSample/CSharp/Window1.xaml.cs#compositiontarget1)]
 [!code-vb[CompositionTargetSample#CompositionTarget1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CompositionTargetSample/visualbasic/window1.xaml.vb#compositiontarget1)]  
  
 您可以使用轉譯事件處理常式來建立自訂繪圖內容。 這個事件處理常式取得每個畫面格呼叫一次。 每次[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]把呼叫複合樹狀結構，您的事件處理常式之間的視覺化樹狀結構中的永續性的轉譯資料。 此外，如果變更的視覺化樹狀結構複合樹狀結構中強制更新，您的事件處理常式也稱為。 請注意，事件處理常式會呼叫後已經過計算配置。 不過，您可以在事件處理常式，這表示該版面配置將會計算一次呈現之前修改配置。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.CompositionTarget.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootVisual : System.Windows.Media.Visual with get, set" Usage="System.Windows.Media.CompositionTarget.RootVisual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Media.CompositionTarget" /> 的根視覺。</summary>
        <value>
          <see cref="T:System.Windows.Media.CompositionTarget" /> 的根視覺。</value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">設定根 visual 的<see cref="T:System.Windows.Media.CompositionTarget" />。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
      </Docs>
    </Member>
    <Member MemberName="TransformFromDevice">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Matrix TransformFromDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Matrix TransformFromDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.CompositionTarget.TransformFromDevice" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TransformFromDevice As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Matrix TransformFromDevice { System::Windows::Media::Matrix get(); };" />
      <MemberSignature Language="F#" Value="member this.TransformFromDevice : System.Windows.Media.Matrix" Usage="System.Windows.Media.CompositionTarget.TransformFromDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得矩陣，這個矩陣可用來將呈現目的地裝置的座標轉換為這個目標。</summary>
        <value>轉換矩陣。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformToDevice">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Matrix TransformToDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Matrix TransformToDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.CompositionTarget.TransformToDevice" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TransformToDevice As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Matrix TransformToDevice { System::Windows::Media::Matrix get(); };" />
      <MemberSignature Language="F#" Value="member this.TransformToDevice : System.Windows.Media.Matrix" Usage="System.Windows.Media.CompositionTarget.TransformToDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得矩陣，這個矩陣可用來將這個目標的座標轉換為呈現目的地裝置。</summary>
        <value>轉換矩陣。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>