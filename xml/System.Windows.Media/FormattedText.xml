<Type Name="FormattedText" FullName="System.Windows.Media.FormattedText">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b28b7409b89b37e40b3e358cf884905f6e4377bc" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37496740" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormattedText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormattedText extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.FormattedText" />
  <TypeSignature Language="VB.NET" Value="Public Class FormattedText" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormattedText" />
  <TypeSignature Language="F#" Value="type FormattedText = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides low-level control for drawing text in Windows Presentation Foundation (WPF) applications.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.FormattedText>物件可讓您繪製多行文字，可以個別格式化文字中的每個字元。 下例顯示已套用多種格式的文字。  
  
 ![使用 FormattedText 物件顯示的文字](~/add/media/formattedtext01.jpg "使用 FormattedText 物件顯示的文字")  
格式化的文字字串的範例  
  
 中的文字功能方面[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]，<xref:System.Windows.Media.FormattedText>被視為 「 低層級 」，因為它會處理文字，做為圖形元素。 文字中的其他層面[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]處理專用於文字的控制項的內容中的文字 (<xref:System.Windows.Controls.TextBlock>， <xref:System.Windows.Controls.TextBox>)，實作非固定格式文件模型 (請參閱[非固定格式文件概觀](~/docs/framework/wpf/advanced/flow-document-overview.md))，或支援[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]文件模型 (請參閱 < [WPF 中的文件](~/docs/framework/wpf/advanced/documents-in-wpf.md))。  
  
 中的 setter 方法的許多<xref:System.Windows.Media.FormattedText>擁有與所支援的附加屬性的相似處<xref:System.Windows.Documents.TextElement>，但<xref:System.Windows.Documents.TextElement>附加的屬性套用至較高層級的文字支援流程或[!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)]。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Media.FormattedText>物件，並接著套用至文字的數個格式化樣式。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.GlyphRun" />
    <altmember cref="T:System.Windows.Media.DrawingContext" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FormattedText" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
      </Parameters>
      <Docs>
        <param name="textToFormat">The text to be displayed.</param>
        <param name="culture">The specific culture of the text.</param>
        <param name="flowDirection">The direction the text is read.</param>
        <param name="typeface">The font family, weight, style and stretch the text should be formatted with.</param>
        <param name="emSize">The font size the text should be formatted at.</param>
        <param name="foreground">The brush used to paint the each glyph.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FormattedText" /> class with the specified text, culture, flow direction, typeface, font size, and brush.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, double pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * double -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, pixelsPerDip)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textToFormat">The text to be displayed.</param>
        <param name="culture">The specific culture of the text.</param>
        <param name="flowDirection">The direction the text is read.</param>
        <param name="typeface">The font family, weight, style and stretch the text should be formatted with.</param>
        <param name="emSize">The font size for the text's em measure, provided in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="foreground">The brush used to paint the each glyph.</param>
        <param name="pixelsPerDip">The Pixels Per Density Independent Pixel value, which is the equivalent of the scale factor. For example, if the DPI of a screen is 120 (or 1.25 because 120/96 = 1.25) , 1.25 pixel per density independent pixel is drawn. DIP is the unit of measurement used by WPF to be independent of device resolution and DPIs.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FormattedText" /> class with the specified text, culture, flow direction, typeface, font size, foreground brush, and pixelsPerDip value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
      </Parameters>
      <Docs>
        <param name="textToFormat">The text to be displayed.</param>
        <param name="culture">The specific culture of the text.</param>
        <param name="flowDirection">The direction the text is read.</param>
        <param name="typeface">The font family, weight, style and stretch the text should be formatted with.</param>
        <param name="emSize">The font size for the text's em measure, provided in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="foreground">The brush used to paint the each glyph.</param>
        <param name="numberSubstitution">The number substitution behavior to apply to the text.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FormattedText" /> class with the specified text, culture, flow direction, typeface, font size, brush, and number substitution behavior.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution, double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution, float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution, double pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution * double -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution, pixelsPerDip)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textToFormat">The text to display.</param>
        <param name="culture">The specific culture of the text.</param>
        <param name="flowDirection">The direction the text is read.</param>
        <param name="typeface">The font family, weight, style and stretch the text should be formatted with.</param>
        <param name="emSize">The font size for the text's em measure, provided in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="foreground">The brush used to paint the each glyph.</param>
        <param name="numberSubstitution">Specifies how numbers in text     are displayed, based on <see cref="T:System.Windows.Media.NumberSubstitution" />. This value can be <see langword="null" />.</param>
        <param name="pixelsPerDip">The Pixels Per Density Independent Pixel value, which is the equivalent of the scale factor. For example, if the DPI of a screen is 120 (or 1.25 because 120/96 = 1.25) , 1.25 pixel per density independent pixel is drawn. DIP is the unit of measurement used by WPF to be independent of device resolution and DPIs.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FormattedText" /> class with the specified text, culture, flow direction, typeface, font size, foreground brush, number substitution behavior, and pixelsPerDip value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution, System.Windows.Media.TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution, valuetype System.Windows.Media.TextFormattingMode textFormattingMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Windows.Media.TextFormattingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution, System::Windows::Media::TextFormattingMode textFormattingMode);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution * System.Windows.Media.TextFormattingMode -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution, textFormattingMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use the PixelsPerDip override", false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="textFormattingMode" Type="System.Windows.Media.TextFormattingMode" />
      </Parameters>
      <Docs>
        <param name="textToFormat">The text to be displayed.</param>
        <param name="culture">The specific culture of the text.</param>
        <param name="flowDirection">The direction the text is read.</param>
        <param name="typeface">The font family, weight, style and stretch the text should be formatted with.</param>
        <param name="emSize">The font size for the text's em measure, provided in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="foreground">The brush used to paint the each glyph.</param>
        <param name="numberSubstitution">The number substitution behavior to apply to the text.</param>
        <param name="textFormattingMode">The <see cref="T:System.Windows.Media.TextFormattingMode" /> to apply to the text.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FormattedText" /> class with the specified text, culture, flow direction, typeface, font size, brush, number substitution behavior, and text formatting mode.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormattedText (string textToFormat, System.Globalization.CultureInfo culture, System.Windows.FlowDirection flowDirection, System.Windows.Media.Typeface typeface, double emSize, System.Windows.Media.Brush foreground, System.Windows.Media.NumberSubstitution numberSubstitution, System.Windows.Media.TextFormattingMode textFormattingMode, double pixelsPerDip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string textToFormat, class System.Globalization.CultureInfo culture, valuetype System.Windows.FlowDirection flowDirection, class System.Windows.Media.Typeface typeface, float64 emSize, class System.Windows.Media.Brush foreground, class System.Windows.Media.NumberSubstitution numberSubstitution, valuetype System.Windows.Media.TextFormattingMode textFormattingMode, float64 pixelsPerDip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution,System.Windows.Media.TextFormattingMode,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormattedText(System::String ^ textToFormat, System::Globalization::CultureInfo ^ culture, System::Windows::FlowDirection flowDirection, System::Windows::Media::Typeface ^ typeface, double emSize, System::Windows::Media::Brush ^ foreground, System::Windows::Media::NumberSubstitution ^ numberSubstitution, System::Windows::Media::TextFormattingMode textFormattingMode, double pixelsPerDip);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.FormattedText : string * System.Globalization.CultureInfo * System.Windows.FlowDirection * System.Windows.Media.Typeface * double * System.Windows.Media.Brush * System.Windows.Media.NumberSubstitution * System.Windows.Media.TextFormattingMode * double -&gt; System.Windows.Media.FormattedText" Usage="new System.Windows.Media.FormattedText (textToFormat, culture, flowDirection, typeface, emSize, foreground, numberSubstitution, textFormattingMode, pixelsPerDip)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textToFormat" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="flowDirection" Type="System.Windows.FlowDirection" />
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="foreground" Type="System.Windows.Media.Brush" />
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="textFormattingMode" Type="System.Windows.Media.TextFormattingMode" />
        <Parameter Name="pixelsPerDip" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="textToFormat">The text to display.</param>
        <param name="culture">The specific culture of the text.</param>
        <param name="flowDirection">The direction the text is read.</param>
        <param name="typeface">The font family, weight, style and stretch the text should be formatted with.</param>
        <param name="emSize">The font size for the text's em measure, provided in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="foreground">he brush used to paint the each glyph.</param>
        <param name="numberSubstitution">Specifies how numbers in text     are displayed, based on <see cref="T:System.Windows.Media.NumberSubstitution" />. This value can be <see langword="null" />.</param>
        <param name="textFormattingMode">The formatting mode that affects how WPF displays text.</param>
        <param name="pixelsPerDip">The Pixels Per Density Independent Pixel value, which is the equivalent of the scale factor. For example, if the DPI of a screen is 120 (or 1.25 because 120/96 = 1.25) , 1.25 pixel per density independent pixel is drawn. DIP is the unit of measurement used by WPF to be independent of device resolution and DPIs.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Media.FormattedText" /> class with the specified text, culture, flow direction, typeface, font size, foreground brush, number substitution behavior, and pixelsPerDip value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="C#" Value="public double Baseline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Baseline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Baseline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Baseline As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Baseline { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Baseline : double" Usage="System.Windows.Media.FormattedText.Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the distance from the top of the first line to the baseline of the first line of a <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <value>中提供的第一行頂端到基準線的第一行中，之間的距離 [！INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildGeometry (System.Windows.Point origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildGeometry(valuetype System.Windows.Point origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.BuildGeometry(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildGeometry (origin As Point) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildGeometry(System::Windows::Point origin);" />
      <MemberSignature Language="F#" Value="member this.BuildGeometry : System.Windows.Point -&gt; System.Windows.Media.Geometry" Usage="formattedText.BuildGeometry origin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="origin">The top-left origin of the resulting geometry.</param>
        <summary>Returns a <see cref="T:System.Windows.Media.Geometry" /> object that represents the formatted text, including all glyphs and text decorations.</summary>
        <returns>The <see cref="T:System.Windows.Media.Geometry" /> object representation of the formatted text.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當文字轉換成<xref:System.Windows.Media.Geometry>物件時，它不再是字元集合，您無法修改文字字串中的字元。 不過，您可以修改其筆劃與填滿屬性來影響轉換文字的外觀。  
  
 下列範例說明幾個方法可透過修改筆劃並填滿轉換的文字建立視覺效果。  
  
 ![以不同的色彩填滿和筆劃的文字](~/add/media/outlinedtext03.jpg "以不同的色彩填滿和筆劃的文字")  
設定筆劃並填滿不同色彩的範例  
  
 ![影像筆刷套用至筆觸的文字](~/add/media/outlinedtext04.jpg "影像筆刷套用至筆觸的文字")  
影像筆刷套用至筆劃的範例  
  
 文字轉換成並轉譯為<xref:System.Windows.Media.Geometry>物件可能看起來不一樣為直接呈現的文字：  
  
-   文字轉換成<xref:System.Windows.Media.Geometry>物件則不會呈現使用 ClearType。 此外，已轉換的基準線不齊整個顯示像素。  
  
-   小型的字型，例如常用的內文，可能會失去以利閱讀、 變得模糊，和外觀會有所不同。  
  
   
  
## Examples  
 下列範例示範如何建立<xref:System.Windows.Media.FormattedText>物件並擷取格式化的文字和其週框方塊的幾何。  
  
 [!code-csharp[OutlineTextControlViewer#CreateText](~/samples/snippets/csharp/VS_Snippets_Wpf/OutlineTextControlViewer/CSharp/OutlineTextControl.cs#createtext)]
 [!code-vb[OutlineTextControlViewer#CreateText](~/samples/snippets/visualbasic/VS_Snippets_Wpf/OutlineTextControlViewer/visualbasic/outlinetextcontrol.vb#createtext)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BuildHighlightGeometry">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns a <see cref="T:System.Windows.Media.Geometry" /> object that represents the highlight bounding box of the formatted text.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BuildHighlightGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildHighlightGeometry (System.Windows.Point origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildHighlightGeometry(valuetype System.Windows.Point origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.BuildHighlightGeometry(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildHighlightGeometry (origin As Point) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildHighlightGeometry(System::Windows::Point origin);" />
      <MemberSignature Language="F#" Value="member this.BuildHighlightGeometry : System.Windows.Point -&gt; System.Windows.Media.Geometry" Usage="formattedText.BuildHighlightGeometry origin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="origin">The origin of the highlight region.</param>
        <summary>Returns a <see cref="T:System.Windows.Media.Geometry" /> object that represents the highlight bounding box of the formatted text.</summary>
        <returns>The <see cref="T:System.Windows.Media.Geometry" /> object that represents the highlight bounding box of the formatted text.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 週框方塊區域包含從指定的點開始的整個格式化的文字區域`origin`。 傳回<xref:System.Windows.Media.Geometry>物件包含反白顯示文字的週框方塊，而且不包含任何呈現的文字。  
  
 下列範例會說明建立視覺效果的方式，透過修改筆劃並反白顯示轉換的文字。  
  
 ![影像筆刷套用至筆觸的文字](~/add/media/outlinedtext05.jpg "影像筆刷套用至筆觸的文字")  
影像筆刷套用至筆劃並反白顯示的範例  
  
   
  
## Examples  
 下列範例示範如何建立<xref:System.Windows.Media.FormattedText>物件並擷取格式化的文字和其週框方塊的幾何。  
  
 [!code-csharp[OutlineTextControlViewer#CreateText](~/samples/snippets/csharp/VS_Snippets_Wpf/OutlineTextControlViewer/CSharp/OutlineTextControl.cs#createtext)]
 [!code-vb[OutlineTextControlViewer#CreateText](~/samples/snippets/visualbasic/VS_Snippets_Wpf/OutlineTextControlViewer/visualbasic/outlinetextcontrol.vb#createtext)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildHighlightGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry BuildHighlightGeometry (System.Windows.Point origin, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry BuildHighlightGeometry(valuetype System.Windows.Point origin, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.BuildHighlightGeometry(System.Windows.Point,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildHighlightGeometry (origin As Point, startIndex As Integer, count As Integer) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ BuildHighlightGeometry(System::Windows::Point origin, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.BuildHighlightGeometry : System.Windows.Point * int * int -&gt; System.Windows.Media.Geometry" Usage="formattedText.BuildHighlightGeometry (origin, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="origin" Type="System.Windows.Point" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="origin">The origin of the highlight region.</param>
        <param name="startIndex">The index of the initial character the highlight bounds should be obtained for.</param>
        <param name="count">The number of characters the highlight bounds should contain.</param>
        <summary>Returns a <see cref="T:System.Windows.Media.Geometry" /> object that represents the highlight bounding box for a specified substring of the formatted text.</summary>
        <returns>The <see cref="T:System.Windows.Media.Geometry" /> object that represents the highlight bounding box of the formatted text substring.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回<xref:System.Windows.Media.Geometry>物件包含反白顯示文字的週框方塊，而且不包含任何呈現的文字。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Extent">
      <MemberSignature Language="C#" Value="public double Extent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Extent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Extent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Extent As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Extent { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Extent : double" Usage="System.Windows.Media.FormattedText.Extent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the distance from the topmost drawn pixel of the first line to the bottommost drawn pixel of the last line.</summary>
        <value>從第一行最頂端繪製像素到最後一行中，最底端繪製像素的距離中提供 [！INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 範圍包含任何圖形化的項目，可能會出現在字符，包括可能會向外擴充的行高、 基準或突出部分的裝飾項目。 這個值取決於列上出現的字元並因此不會使用 （和不應使用） 來衍生行距。 不過可以用來對齊的頂端或底部的圖形化元素，或進行點擊測試的段落。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberSignature Language="F#" Value="member this.FlowDirection : System.Windows.FlowDirection with get, set" Usage="System.Windows.Media.FormattedText.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the <see cref="T:System.Windows.FlowDirection" /> of a <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <value>
          <see cref="T:System.Windows.FlowDirection" />格式化文字。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxTextWidths">
      <MemberSignature Language="C#" Value="public double[] GetMaxTextWidths ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] GetMaxTextWidths() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.GetMaxTextWidths" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMaxTextWidths () As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ GetMaxTextWidths();" />
      <MemberSignature Language="F#" Value="member this.GetMaxTextWidths : unit -&gt; double[]" Usage="formattedText.GetMaxTextWidths " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves an array of text widths. Each element in the array represents the maximum text width of sequential lines of text.</summary>
        <returns>An array of maximum text widths, each width provided in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果文字行超過陣列中的項目數，最後一個項目值將用於其餘的各行。 如果不是陣列的長度`null`，陣列值<xref:System.Windows.Media.FormattedText.GetMaxTextWidths%2A>而不是使用<xref:System.Windows.Media.FormattedText.MaxTextWidth%2A>屬性值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : double" Usage="System.Windows.Media.FormattedText.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the distance from the top of the first line to the bottom of the last line of the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <value>中提供的第一行頂端到最後一行底部之間的距離 [！INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.LineHeight : double with get, set" Usage="System.Windows.Media.FormattedText.LineHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the line height, or line spacing, between lines of text.</summary>
        <value>在提供的文字行之間的行距 [！INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設線條高度會自動計算，並且根據做為參數傳遞的字型值<xref:System.Windows.Media.FormattedText.%23ctor%2A>建構函式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLineCount">
      <MemberSignature Language="C#" Value="public int MaxLineCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLineCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MaxLineCount" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLineCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLineCount : int with get, set" Usage="System.Windows.Media.FormattedText.MaxLineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum number of lines to display. Text exceeding the <see cref="P:System.Windows.Media.FormattedText.MaxLineCount" /> will not be displayed.</summary>
        <value>要顯示的行數目上限。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.FormattedText.Trimming%2A>屬性，即可控制如何省略的文字表示當文字超過<xref:System.Windows.Media.FormattedText.MaxLineCount%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTextHeight">
      <MemberSignature Language="C#" Value="public double MaxTextHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxTextHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MaxTextHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTextHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxTextHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxTextHeight : double with get, set" Usage="System.Windows.Media.FormattedText.MaxTextHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum height of a text column.</summary>
        <value>中提供的文字資料行的最大高度 [！INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 顯示文字的最後一行是最後一整行內所容納<xref:System.Windows.Media.FormattedText.MaxTextHeight%2A>限制或不會超過的行號<xref:System.Windows.Media.FormattedText.MaxLineCount%2A>屬性，何者先發生。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Media.FormattedText>物件，然後將幾個格式化樣式套用至文字，包括<xref:System.Windows.Media.FormattedText.MaxTextHeight%2A>。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTextWidth">
      <MemberSignature Language="C#" Value="public double MaxTextWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxTextWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MaxTextWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTextWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxTextWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxTextWidth : double with get, set" Usage="System.Windows.Media.FormattedText.MaxTextWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the maximum text width (length) for a line of text.</summary>
        <value>在提供的文字行的最大文字寬度 [！INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字會換行以避免超出<xref:System.Windows.Media.FormattedText.MaxTextWidth%2A>限制。  
  
 字符對齊邊緣必須保留在行的計數限制。 因為許多字型的字符，稍微超過對齊邊緣，允許要求超過行數至少為 1/6 em （字型大小） 邊界，以留出空間給這類的突出部分。  
  
 行數的零值會被視為無限的行數。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Media.FormattedText>物件，然後將幾個格式化樣式套用至文字，包括<xref:System.Windows.Media.FormattedText.MaxTextWidth%2A>。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public double MinWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.MinWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.MinWidth : double" Usage="System.Windows.Media.FormattedText.MinWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the smallest possible text width that can fully contain the specified text content.</summary>
        <value>中提供的文字來源的最小文字寬度 [！INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下圖的文字會使用原始程式文字，它會顯示為多行的最小文字寬度。 最小文字寬度對應至具有最大寬度的文字，在此情況下，word"跳"。 請注意，多個字組可以出現在同一行，只要其總寬度不會超過最小文字寬度。  
  
 ![使用最小段落寬度的文字格式子](~/add/media/textformatter03.png "使用最小段落寬度的文字格式子")  
最小文字寬度  
  
 如果此值傳遞至<xref:System.Windows.Media.FormattedText.MaxTextWidth%2A>大於或等於值<xref:System.Windows.Media.FormattedText.MinWidth%2A>，文字會格式化為沒有省略符號字元。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Windows.Media.FormattedText.MinWidth%2A>產生格式化的文字行的最小文字寬度的屬性。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets3](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets3)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangAfter">
      <MemberSignature Language="C#" Value="public double OverhangAfter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangAfter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.OverhangAfter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverhangAfter As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OverhangAfter { double get(); };" />
      <MemberSignature Language="F#" Value="member this.OverhangAfter : double" Usage="System.Windows.Media.FormattedText.OverhangAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the distance from the bottom of the last line of text to the bottommost drawn pixel.</summary>
        <value>中提供的最後一行底端到最底端有著色的像素，之間的距離 [！INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當值為正數，如果最底端繪製像素低於列底部，而且是負數 （on 或更新版本） 中所顯示的才行。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangLeading">
      <MemberSignature Language="C#" Value="public double OverhangLeading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangLeading" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.OverhangLeading" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverhangLeading As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OverhangLeading { double get(); };" />
      <MemberSignature Language="F#" Value="member this.OverhangLeading : double" Usage="System.Windows.Media.FormattedText.OverhangLeading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum distance from the leading alignment point to the leading drawn pixel of a line.</summary>
        <value>最大的距離，從之前置對齊點到前置繪製的像素的線條，提供 [！INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 之前前置繪製的像素之前置對齊點時，值為負數。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverhangTrailing">
      <MemberSignature Language="C#" Value="public double OverhangTrailing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 OverhangTrailing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.OverhangTrailing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverhangTrailing As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double OverhangTrailing { double get(); };" />
      <MemberSignature Language="F#" Value="member this.OverhangTrailing : double" Usage="System.Windows.Media.FormattedText.OverhangTrailing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum distance from the trailing inked pixel to the trailing alignment point of a line.</summary>
        <value>最大距離結尾有著色的像素到結尾對齊點的列，提供 [！INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.FormattedText.OverhangTrailing%2A>尾端繪製的像素前面結尾對齊點時，值就是正數。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : double with get, set" Usage="System.Windows.Media.FormattedText.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get or sets the PixelsPerDip at which the text should be rendered.</summary>
        <value>目前的 <see cref="P:System.Windows.Media.FormattedText.PixelsPerDip" /> 值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCulture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the <see cref="T:System.Globalization.CultureInfo" /> for the formatted text.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCulture">
      <MemberSignature Language="C#" Value="public void SetCulture (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCulture(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetCulture(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCulture (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCulture(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.SetCulture : System.Globalization.CultureInfo -&gt; unit" Usage="formattedText.SetCulture culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for text formatting.</param>
        <summary>Sets the <see cref="T:System.Globalization.CultureInfo" /> for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo>類別包含特定文化特性資訊，例如相關聯的語言、 次語言、 國家/地區、 日曆和文化特性的慣例。 這個類別也會提供存取的特定文化特性的執行個體<xref:System.Globalization.DateTimeFormatInfo>， <xref:System.Globalization.NumberFormatInfo>， <xref:System.Globalization.CompareInfo>，和<xref:System.Globalization.TextInfo>。 這些物件包含特定文化特性的作業，例如大小寫、 格式化日期和數字和比較字串所需的資訊。  
  
 這個方法會設定整個文字字串的文化特性資訊值。 若要設定的文字字串子集的文化特性資訊值，請使用<xref:System.Windows.Media.FormattedText.SetCulture%28System.Globalization.CultureInfo%2CSystem.Int32%2CSystem.Int32%29>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCulture">
      <MemberSignature Language="C#" Value="public void SetCulture (System.Globalization.CultureInfo culture, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCulture(class System.Globalization.CultureInfo culture, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetCulture(System.Globalization.CultureInfo,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCulture (culture As CultureInfo, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCulture(System::Globalization::CultureInfo ^ culture, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetCulture : System.Globalization.CultureInfo * int * int -&gt; unit" Usage="formattedText.SetCulture (culture, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use for text formatting.</param>
        <param name="startIndex">The start index of initial character to apply the change to.</param>
        <param name="count">The number of characters the change should be applied to.</param>
        <summary>Sets the <see cref="T:System.Globalization.CultureInfo" /> for a specified subset of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Globalization.CultureInfo>類別包含特定文化特性資訊，例如相關聯的語言、 次語言、 國家/地區、 日曆和文化特性的慣例。 這個類別也會提供存取的特定文化特性的執行個體<xref:System.Globalization.DateTimeFormatInfo>， <xref:System.Globalization.NumberFormatInfo>， <xref:System.Globalization.CompareInfo>，和<xref:System.Globalization.TextInfo>。 這些物件包含特定文化特性的作業，例如大小寫、 格式化日期和數字和比較字串所需的資訊。  
  
 若要設定的整個文字字串的文化特性資訊值，請使用<xref:System.Windows.Media.FormattedText.SetCulture%28System.Globalization.CultureInfo%29>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontFamily">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the font family for the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (string fontFamily);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(string fontFamily) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontFamily (fontFamily As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::String ^ fontFamily);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : string -&gt; unit" Usage="formattedText.SetFontFamily fontFamily" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fontFamily">A string that constructs the <see cref="T:System.Windows.Media.FontFamily" /> to use for text formatting. Fallbacks are permitted; for details, see <see cref="T:System.Windows.Media.FontFamily" />.</param>
        <summary>Sets the font family for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會設定整個文字字串的字型系列值。 若要設定的文字字串子集的字型家族值，請使用<xref:System.Windows.Media.FormattedText.SetFontFamily%28System.String%2CSystem.Int32%2CSystem.Int32%29>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (System.Windows.Media.FontFamily fontFamily);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(class System.Windows.Media.FontFamily fontFamily) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.Windows.Media.FontFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::Windows::Media::FontFamily ^ fontFamily);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : System.Windows.Media.FontFamily -&gt; unit" Usage="formattedText.SetFontFamily fontFamily" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.Windows.Media.FontFamily" />
      </Parameters>
      <Docs>
        <param name="fontFamily">The <see cref="T:System.Windows.Media.FontFamily" /> to use for text formatting.</param>
        <summary>Sets the font family for a <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會設定整個文字字串的字型系列值。 若要設定的文字字串子集的字型家族值，請使用<xref:System.Windows.Media.FormattedText.SetFontFamily%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (string fontFamily, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(string fontFamily, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontFamily (fontFamily As String, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::String ^ fontFamily, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : string * int * int -&gt; unit" Usage="formattedText.SetFontFamily (fontFamily, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fontFamily">A string that constructs the <see cref="T:System.Windows.Media.FontFamily" /> to use for text formatting. Fallbacks are permitted; for details, see <see cref="T:System.Windows.Media.FontFamily" />.</param>
        <param name="startIndex">The starting index of the initial character to apply the font family change to.</param>
        <param name="count">The number of characters the change should apply to.</param>
        <summary>Sets the font family for a specified subset of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要設定的字型系列的整個文字字串值，請使用<xref:System.Windows.Media.FormattedText.SetFontFamily%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontFamily">
      <MemberSignature Language="C#" Value="public void SetFontFamily (System.Windows.Media.FontFamily fontFamily, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontFamily(class System.Windows.Media.FontFamily fontFamily, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontFamily(System.Windows.Media.FontFamily,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontFamily(System::Windows::Media::FontFamily ^ fontFamily, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontFamily : System.Windows.Media.FontFamily * int * int -&gt; unit" Usage="formattedText.SetFontFamily (fontFamily, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontFamily" Type="System.Windows.Media.FontFamily" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fontFamily">The <see cref="T:System.Windows.Media.FontFamily" /> to use for text formatting.</param>
        <param name="startIndex">The starting index of the initial character to apply the font family change to.</param>
        <param name="count">The number of characters the change should apply to.</param>
        <summary>Sets the font family for a specified subset of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要設定的字型系列的整個文字字串值，請使用<xref:System.Windows.Media.FormattedText.SetFontFamily%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontSize">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the font size.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontSize">
      <MemberSignature Language="C#" Value="public void SetFontSize (double emSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontSize(float64 emSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontSize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontSize (emSize As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontSize(double emSize);" />
      <MemberSignature Language="F#" Value="member this.SetFontSize : double -&gt; unit" Usage="formattedText.SetFontSize emSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emSize" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="emSize">The font 'em' measure size, provided in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <summary>Sets the font size for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會設定整個文字字串中的字型的大小值。 若要設定的文字字串子集的字型的大小值，請使用<xref:System.Windows.Media.FormattedText.SetFontSize%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontSize">
      <MemberSignature Language="C#" Value="public void SetFontSize (double emSize, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontSize(float64 emSize, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontSize(System.Double,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontSize (emSize As Double, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontSize(double emSize, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontSize : double * int * int -&gt; unit" Usage="formattedText.SetFontSize (emSize, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emSize" Type="System.Double" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="emSize">The font 'em' measure size, provided in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <param name="startIndex">The start index of the initial character to apply the font size to.</param>
        <param name="count">The number of characters to apply the font size to.</param>
        <summary>Sets the font size for a specified subset of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要設定的整個文字字串的字型大小值，請使用<xref:System.Windows.Media.FormattedText.SetFontSize%2A>方法。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Media.FormattedText>物件，然後將幾個格式化樣式套用至文字，包括<xref:System.Windows.Media.FormattedText.SetFontSize%2A>。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontStretch">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the font stretch value for the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontStretch">
      <MemberSignature Language="C#" Value="public void SetFontStretch (System.Windows.FontStretch stretch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStretch(valuetype System.Windows.FontStretch stretch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStretch(System.Windows.FontStretch)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStretch (stretch As FontStretch)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStretch(System::Windows::FontStretch stretch);" />
      <MemberSignature Language="F#" Value="member this.SetFontStretch : System.Windows.FontStretch -&gt; unit" Usage="formattedText.SetFontStretch stretch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stretch" Type="System.Windows.FontStretch" />
      </Parameters>
      <Docs>
        <param name="stretch">The desired <see cref="T:System.Windows.FontStretch" /> value to use for text formatting.</param>
        <summary>Sets the font stretch value for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字型自動縮放值指的是要在螢幕縮放字型的程度。 <xref:System.Windows.FontStretch> 支援型別轉換行為這類的該靜態值<xref:System.Windows.FontStretches>類別可以用來初始化<xref:System.Windows.FontStretch>，並填入參數的型別<xref:System.Windows.FontStretch>。 您也可以呼叫<xref:System.Windows.FontStretch.FromOpenTypeStretch%2A>來建立適當的初始化<xref:System.Windows.FontStretch>。  
  
 這個方法會設定整個文字字串的字型自動縮放值。 若要設定的文字字串子集的字型自動縮放值，請使用<xref:System.Windows.Media.FormattedText.SetFontStretch%28System.Windows.FontStretch%2CSystem.Int32%2CSystem.Int32%29>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontStretch">
      <MemberSignature Language="C#" Value="public void SetFontStretch (System.Windows.FontStretch stretch, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStretch(valuetype System.Windows.FontStretch stretch, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStretch(System.Windows.FontStretch,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStretch (stretch As FontStretch, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStretch(System::Windows::FontStretch stretch, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontStretch : System.Windows.FontStretch * int * int -&gt; unit" Usage="formattedText.SetFontStretch (stretch, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stretch" Type="System.Windows.FontStretch" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stretch">The desired <see cref="T:System.Windows.FontStretch" /> value to use for text formatting.</param>
        <param name="startIndex">The start index of the initial character to apply the font stretch to.</param>
        <param name="count">The number of characters to apply the font stretch to.</param>
        <summary>Sets the font stretch value for a specified subset of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字型自動縮放值指的是要在螢幕縮放字型的程度。  
  
 <xref:System.Windows.FontStretch> 支援型別轉換行為這類的該靜態值<xref:System.Windows.FontStretches>類別可以用來初始化<xref:System.Windows.FontStretch>，並填入參數的型別<xref:System.Windows.FontStretch>。 您也可以呼叫<xref:System.Windows.FontStretch.FromOpenTypeStretch%2A>來建立適當的初始化<xref:System.Windows.FontStretch>。  
  
 若要設定的整個文字字串的字型自動縮放值，請使用<xref:System.Windows.Media.FormattedText.SetFontStretch%28System.Windows.FontStretch%29>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontStyle">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the font style for the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontStyle">
      <MemberSignature Language="C#" Value="public void SetFontStyle (System.Windows.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStyle(valuetype System.Windows.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStyle(System.Windows.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStyle (style As FontStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStyle(System::Windows::FontStyle style);" />
      <MemberSignature Language="F#" Value="member this.SetFontStyle : System.Windows.FontStyle -&gt; unit" Usage="formattedText.SetFontStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Windows.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">The <see cref="T:System.Windows.FontStyle" /> value to use for text formatting.</param>
        <summary>Sets the font style for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontStyle> 支援型別轉換行為這類的該靜態值<xref:System.Windows.FontStyles>類別可以用來初始化<xref:System.Windows.FontStyle>，並填入參數的型別<xref:System.Windows.FontStyle>。  
  
 這個方法會設定整個文字字串的字型樣式。 若要設定的文字字串子集的字型樣式，使用<xref:System.Windows.Media.FormattedText.SetFontStyle%28System.Windows.FontStyle%2CSystem.Int32%2CSystem.Int32%29>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontStyle">
      <MemberSignature Language="C#" Value="public void SetFontStyle (System.Windows.FontStyle style, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontStyle(valuetype System.Windows.FontStyle style, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontStyle(System.Windows.FontStyle,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontStyle (style As FontStyle, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontStyle(System::Windows::FontStyle style, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontStyle : System.Windows.FontStyle * int * int -&gt; unit" Usage="formattedText.SetFontStyle (style, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Windows.FontStyle" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="style">The <see cref="T:System.Windows.FontStyle" /> value to use for text formatting.</param>
        <param name="startIndex">The start index of the initial character to apply the font style to.</param>
        <param name="count">The number of characters to apply the font style to.</param>
        <summary>Sets the font style for a specified subset of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontStyle> 支援型別轉換行為這類的該靜態值<xref:System.Windows.FontStyles>類別可以用來初始化<xref:System.Windows.FontStyle>，並填入參數的型別<xref:System.Windows.FontStyle>。  
  
 若要設定的整個文字字串的字型樣式，使用<xref:System.Windows.Media.FormattedText.SetFontStyle%28System.Windows.FontStyle%29>方法。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Media.FormattedText>物件，然後將幾個格式化樣式套用至文字，包括<xref:System.Windows.Media.FormattedText.SetFontStyle%2A>。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontTypeface">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the font typeface for the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontTypeface">
      <MemberSignature Language="C#" Value="public void SetFontTypeface (System.Windows.Media.Typeface typeface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontTypeface(class System.Windows.Media.Typeface typeface) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontTypeface(System.Windows.Media.Typeface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontTypeface(System::Windows::Media::Typeface ^ typeface);" />
      <MemberSignature Language="F#" Value="member this.SetFontTypeface : System.Windows.Media.Typeface -&gt; unit" Usage="formattedText.SetFontTypeface typeface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
      </Parameters>
      <Docs>
        <param name="typeface">The <see cref="T:System.Windows.Media.Typeface" /> to use for text formatting.</param>
        <summary>Sets the font typeface for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Typeface> 表示的組合<xref:System.Windows.Media.FontFamily>， <xref:System.Windows.FontWeight>， <xref:System.Windows.FontStyle>，和<xref:System.Windows.FontStretch>。 <xref:System.Windows.Media.Typeface> 支援多個建構函式，其中一個名稱，另一個需要離散值的根據字樣的建構<xref:System.Windows.Media.FontFamily>， <xref:System.Windows.FontWeight>， <xref:System.Windows.FontStyle>，和<xref:System.Windows.FontStretch>。  
  
 這個方法會設定整個文字字串的字型字樣。 若要設定的文字字串子集的字型字樣，使用<xref:System.Windows.Media.FormattedText.SetFontTypeface%28System.Windows.Media.Typeface%2CSystem.Int32%2CSystem.Int32%29>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontTypeface">
      <MemberSignature Language="C#" Value="public void SetFontTypeface (System.Windows.Media.Typeface typeface, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontTypeface(class System.Windows.Media.Typeface typeface, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontTypeface(System.Windows.Media.Typeface,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontTypeface(System::Windows::Media::Typeface ^ typeface, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontTypeface : System.Windows.Media.Typeface * int * int -&gt; unit" Usage="formattedText.SetFontTypeface (typeface, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeface" Type="System.Windows.Media.Typeface" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="typeface">The <see cref="T:System.Windows.Media.Typeface" /> to use for text formatting.</param>
        <param name="startIndex">The start index of the initial character to apply the typeface to.</param>
        <param name="count">The number of characters to apply the typeface to.</param>
        <summary>Sets the font typeface for a specified subset of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Typeface> 表示的組合<xref:System.Windows.Media.FontFamily>， <xref:System.Windows.FontWeight>， <xref:System.Windows.FontStyle>，和<xref:System.Windows.FontStretch>。 <xref:System.Windows.Media.Typeface> 支援多個建構函式，其中一個名稱，另一個需要離散值的根據字樣的建構<xref:System.Windows.Media.FontFamily>， <xref:System.Windows.FontWeight>， <xref:System.Windows.FontStyle>，和<xref:System.Windows.FontStretch>。  
  
 若要設定的整個文字字串的字型字樣，使用<xref:System.Windows.Media.FormattedText.SetFontTypeface%28System.Windows.Media.Typeface%29>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFontWeight">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the font weight for the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFontWeight">
      <MemberSignature Language="C#" Value="public void SetFontWeight (System.Windows.FontWeight weight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontWeight(valuetype System.Windows.FontWeight weight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontWeight(System.Windows.FontWeight)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontWeight (weight As FontWeight)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontWeight(System::Windows::FontWeight weight);" />
      <MemberSignature Language="F#" Value="member this.SetFontWeight : System.Windows.FontWeight -&gt; unit" Usage="formattedText.SetFontWeight weight" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weight" Type="System.Windows.FontWeight" />
      </Parameters>
      <Docs>
        <param name="weight">The <see cref="T:System.Windows.FontWeight" /> to use for text formatting.</param>
        <summary>Sets the font weight for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontWeight> 支援型別轉換行為這類的該靜態值<xref:System.Windows.FontWeights>類別可以用來初始化<xref:System.Windows.FontWeight>，並填入參數的型別<xref:System.Windows.FontWeight>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFontWeight">
      <MemberSignature Language="C#" Value="public void SetFontWeight (System.Windows.FontWeight weight, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFontWeight(valuetype System.Windows.FontWeight weight, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetFontWeight(System.Windows.FontWeight,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFontWeight (weight As FontWeight, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFontWeight(System::Windows::FontWeight weight, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetFontWeight : System.Windows.FontWeight * int * int -&gt; unit" Usage="formattedText.SetFontWeight (weight, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="weight" Type="System.Windows.FontWeight" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="weight">The font weight to use for text formatting.</param>
        <param name="startIndex">The start index of the initial character to apply the font weight to.</param>
        <param name="count">The number of characters to apply the font weight to.</param>
        <summary>Changes the <see cref="T:System.Windows.FontWeight" /> for specified text within a <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.FontWeight> 支援型別轉換行為這類的該靜態值<xref:System.Windows.FontWeights>類別可以用來初始化<xref:System.Windows.FontWeight>，並填入參數的型別<xref:System.Windows.FontWeight>。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Media.FormattedText>物件，然後將幾個格式化樣式套用至文字，包括<xref:System.Windows.Media.FormattedText.SetFontWeight%2A>。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetForegroundBrush">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Changes the foreground brush used for drawing text.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetForegroundBrush">
      <MemberSignature Language="C#" Value="public void SetForegroundBrush (System.Windows.Media.Brush foregroundBrush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetForegroundBrush(class System.Windows.Media.Brush foregroundBrush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetForegroundBrush(System.Windows.Media.Brush)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetForegroundBrush (foregroundBrush As Brush)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetForegroundBrush(System::Windows::Media::Brush ^ foregroundBrush);" />
      <MemberSignature Language="F#" Value="member this.SetForegroundBrush : System.Windows.Media.Brush -&gt; unit" Usage="formattedText.SetForegroundBrush foregroundBrush" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foregroundBrush" Type="System.Windows.Media.Brush" />
      </Parameters>
      <Docs>
        <param name="foregroundBrush">The brush to use for the text foreground.</param>
        <summary>Changes the foreground <see cref="T:System.Windows.Media.Brush" /> for an entire <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會設定整個文字字串的前景筆刷。 若要設定的文字字串子集的前景筆刷，請使用<xref:System.Windows.Media.FormattedText.SetForegroundBrush%28System.Windows.Media.Brush%2CSystem.Int32%2CSystem.Int32%29>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetForegroundBrush">
      <MemberSignature Language="C#" Value="public void SetForegroundBrush (System.Windows.Media.Brush foregroundBrush, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetForegroundBrush(class System.Windows.Media.Brush foregroundBrush, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetForegroundBrush(System.Windows.Media.Brush,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetForegroundBrush (foregroundBrush As Brush, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetForegroundBrush(System::Windows::Media::Brush ^ foregroundBrush, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetForegroundBrush : System.Windows.Media.Brush * int * int -&gt; unit" Usage="formattedText.SetForegroundBrush (foregroundBrush, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foregroundBrush" Type="System.Windows.Media.Brush" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="foregroundBrush">The brush to use for the text foreground.</param>
        <param name="startIndex">The start index of the initial character to apply the foreground brush to.</param>
        <param name="count">The number of characters to apply the foreground brush to.</param>
        <summary>Changes the foreground <see cref="T:System.Windows.Media.Brush" /> for specified text within a <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要設定的整個文字字串的前景筆刷，請使用<xref:System.Windows.Media.FormattedText.SetForegroundBrush%2A>方法。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.Media.FormattedText>物件，然後將幾個格式化樣式套用至文字，包括<xref:System.Windows.Media.FormattedText.SetForegroundBrush%2A>。  
  
 [!code-csharp[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/csharp/VS_Snippets_Wpf/FormattedTextSnippets/CSharp/Window1.xaml.cs#formattedtextsnippets1)]
 [!code-vb[FormattedTextSnippets#FormattedTextSnippets1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FormattedTextSnippets/visualbasic/window1.xaml.vb#formattedtextsnippets1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaxTextWidths">
      <MemberSignature Language="C#" Value="public void SetMaxTextWidths (double[] maxTextWidths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMaxTextWidths(float64[] maxTextWidths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetMaxTextWidths(System.Double[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMaxTextWidths (maxTextWidths As Double())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMaxTextWidths(cli::array &lt;double&gt; ^ maxTextWidths);" />
      <MemberSignature Language="F#" Value="member this.SetMaxTextWidths : double[] -&gt; unit" Usage="formattedText.SetMaxTextWidths maxTextWidths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxTextWidths" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="maxTextWidths">An array of maximum text widths, each width provided in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</param>
        <summary>Sets an array of maximum text widths within the <see cref="T:System.Windows.Media.FormattedText" />, on a per-line basis. Each element in the array represents the maximum text width of sequential lines of text.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果文字行超過陣列中的項目數，陣列中的最後一個值將用於其餘的各行。 提供有效的陣列<xref:System.Windows.Media.FormattedText.SetMaxTextWidths%2A>將會覆寫提供任何值<xref:System.Windows.Media.FormattedText.MaxTextWidth%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetNumberSubstitution">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the number substitution behavior for the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetNumberSubstitution">
      <MemberSignature Language="C#" Value="public void SetNumberSubstitution (System.Windows.Media.NumberSubstitution numberSubstitution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNumberSubstitution(class System.Windows.Media.NumberSubstitution numberSubstitution) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetNumberSubstitution(System.Windows.Media.NumberSubstitution)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNumberSubstitution(System::Windows::Media::NumberSubstitution ^ numberSubstitution);" />
      <MemberSignature Language="F#" Value="member this.SetNumberSubstitution : System.Windows.Media.NumberSubstitution -&gt; unit" Usage="formattedText.SetNumberSubstitution numberSubstitution" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
      </Parameters>
      <Docs>
        <param name="numberSubstitution">Number substitution behavior to apply to the text; can be <see langword="null" />, in which case the default number substitution method for the text culture is used.</param>
        <summary>Sets the number substitution behavior for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.NumberSubstitution>類別可讓您指定要顯示的文字中的數字的方式。 這個方法會設定整個文字字串的數字取代行為。 若要設定的文字字串子集的數字取代行為，請使用<xref:System.Windows.Media.FormattedText.SetNumberSubstitution%28System.Windows.Media.NumberSubstitution%2CSystem.Int32%2CSystem.Int32%29>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNumberSubstitution">
      <MemberSignature Language="C#" Value="public void SetNumberSubstitution (System.Windows.Media.NumberSubstitution numberSubstitution, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetNumberSubstitution(class System.Windows.Media.NumberSubstitution numberSubstitution, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetNumberSubstitution(System.Windows.Media.NumberSubstitution,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetNumberSubstitution(System::Windows::Media::NumberSubstitution ^ numberSubstitution, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetNumberSubstitution : System.Windows.Media.NumberSubstitution * int * int -&gt; unit" Usage="formattedText.SetNumberSubstitution (numberSubstitution, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberSubstitution" Type="System.Windows.Media.NumberSubstitution" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberSubstitution">Number substitution behavior to apply to the text; can be <see langword="null" />, in which case the default number substitution method for the text culture is used.</param>
        <param name="startIndex">The start index of initial character to apply the change to.</param>
        <param name="count">The number of characters the change should be applied to.</param>
        <summary>Sets the number substitution behavior for specified text within a <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.NumberSubstitution>類別可讓您指定要顯示的文字中的數字的方式。 若要設定的整個文字字串的數字取代行為，請使用<xref:System.Windows.Media.FormattedText.SetNumberSubstitution%28System.Windows.Media.NumberSubstitution%29>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetTextDecorations">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the <see cref="T:System.Windows.TextDecorationCollection" /> for the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetTextDecorations">
      <MemberSignature Language="C#" Value="public void SetTextDecorations (System.Windows.TextDecorationCollection textDecorations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextDecorations(class System.Windows.TextDecorationCollection textDecorations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetTextDecorations(System.Windows.TextDecorationCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTextDecorations (textDecorations As TextDecorationCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTextDecorations(System::Windows::TextDecorationCollection ^ textDecorations);" />
      <MemberSignature Language="F#" Value="member this.SetTextDecorations : System.Windows.TextDecorationCollection -&gt; unit" Usage="formattedText.SetTextDecorations textDecorations" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textDecorations" Type="System.Windows.TextDecorationCollection" />
      </Parameters>
      <Docs>
        <param name="textDecorations">The <see cref="T:System.Windows.TextDecorationCollection" /> to apply to the text.</param>
        <summary>Sets the <see cref="T:System.Windows.TextDecorationCollection" /> for the entire set of characters in the <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.TextDecorationCollection>類別指定要套用至文字的文字裝飾的類型。 有四種類型的文字裝飾： 底線、 基準、 刪除線和頂線。 這些會被稱為<xref:System.Windows.TextDecorationLocation>中的每個項目上所設定的值<xref:System.Windows.TextDecorationCollection>。 是很常見，<xref:System.Windows.TextDecorationCollection>集合包含只有一個裝飾，但該屬性會使用集合來藉由將多個裝飾套用至相同的文字，提供更進階的裝飾效果。  
  
 下圖顯示相對於文字的文字裝飾的位置。  
  
 ![文字裝飾位置的圖表](~/add/media/textdecoration01.gif "文字裝飾位置的圖表")  
文字裝飾型別的範例  
  
 這個方法會設定<xref:System.Windows.TextDecorationCollection>整個文字字串。 若要設定<xref:System.Windows.TextDecorationCollection>子集的文字字串中，使用<xref:System.Windows.Media.FormattedText.SetTextDecorations%28System.Windows.TextDecorationCollection%2CSystem.Int32%2CSystem.Int32%29>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTextDecorations">
      <MemberSignature Language="C#" Value="public void SetTextDecorations (System.Windows.TextDecorationCollection textDecorations, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTextDecorations(class System.Windows.TextDecorationCollection textDecorations, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.FormattedText.SetTextDecorations(System.Windows.TextDecorationCollection,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetTextDecorations (textDecorations As TextDecorationCollection, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTextDecorations(System::Windows::TextDecorationCollection ^ textDecorations, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.SetTextDecorations : System.Windows.TextDecorationCollection * int * int -&gt; unit" Usage="formattedText.SetTextDecorations (textDecorations, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textDecorations" Type="System.Windows.TextDecorationCollection" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textDecorations">The <see cref="T:System.Windows.TextDecorationCollection" /> to apply to the text.</param>
        <param name="startIndex">The start index of the initial character to apply the text decorations to.</param>
        <param name="count">The number of characters to apply the text decorations to.</param>
        <summary>Sets the <see cref="T:System.Windows.TextDecorationCollection" /> for specified text within a <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.TextDecorationCollection>類別指定要套用至文字的文字裝飾的類型。 有四種類型的文字裝飾： 底線、 基準、 刪除線和頂線。 這些會被稱為<xref:System.Windows.TextDecorationLocation>中的每個項目上所設定的值<xref:System.Windows.TextDecorationCollection>。 是很常見，<xref:System.Windows.TextDecorationCollection>集合包含只有一個裝飾，但該屬性會使用集合來藉由將多個裝飾套用至相同的文字，提供更進階的裝飾效果。  
  
 下圖顯示相對於文字的文字裝飾的位置。  
  
 ![文字裝飾位置的圖表](~/add/media/textdecoration01.gif "文字裝飾位置的圖表")  
文字裝飾型別的範例  
  
 若要設定<xref:System.Windows.TextDecorationCollection>針對整個文字字串中，使用<xref:System.Windows.Media.FormattedText.SetTextDecorations%28System.Windows.TextDecorationCollection%29>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Windows.Media.FormattedText.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the string of text to be displayed.</summary>
        <value>要顯示的文字字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性不是可在建構上設定<xref:System.Windows.Media.FormattedText>物件。 您必須建構新<xref:System.Windows.Media.FormattedText>若要設定不同的文字。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush)" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Media.FormattedText.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the alignment of text within a <see cref="T:System.Windows.Media.FormattedText" /> object.</summary>
        <value>其中一個<see cref="T:System.Windows.TextAlignment" />值，指定文字方塊內文字的對齊方式<see cref="T:System.Windows.Media.FormattedText" />物件。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trimming">
      <MemberSignature Language="C#" Value="public System.Windows.TextTrimming Trimming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextTrimming Trimming" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Trimming" />
      <MemberSignature Language="VB.NET" Value="Public Property Trimming As TextTrimming" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextTrimming Trimming { System::Windows::TextTrimming get(); void set(System::Windows::TextTrimming value); };" />
      <MemberSignature Language="F#" Value="member this.Trimming : System.Windows.TextTrimming with get, set" Usage="System.Windows.Media.FormattedText.Trimming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextTrimming</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the means by which the omission of text is indicated.</summary>
        <value>其中一個<see cref="T:System.Windows.TextTrimming" />值，指定如何表示省略的文字。 預設值為 <see cref="F:System.Windows.TextTrimming.WordEllipsis" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Width : double" Usage="System.Windows.Media.FormattedText.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width between the leading and trailing alignment points of a line, excluding any trailing white-space characters.</summary>
        <value>列，但不包括任何尾端的空格字元的前置與結尾對齊點之間的寬度。 中提供 [！INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 對於多行文字，最長的那一行用於<xref:System.Windows.Media.FormattedText.Width%2A>值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthIncludingTrailingWhitespace">
      <MemberSignature Language="C#" Value="public double WidthIncludingTrailingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 WidthIncludingTrailingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.FormattedText.WidthIncludingTrailingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WidthIncludingTrailingWhitespace As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double WidthIncludingTrailingWhitespace { double get(); };" />
      <MemberSignature Language="F#" Value="member this.WidthIncludingTrailingWhitespace : double" Usage="System.Windows.Media.FormattedText.WidthIncludingTrailingWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width between the leading and trailing alignment points of a line, including any trailing white-space characters.</summary>
        <value>一行，包括任何尾端的空格字元的前置與結尾對齊點之間的寬度。 中提供 [！INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 對於多行文字，最長的那一行用於<xref:System.Windows.Media.FormattedText.WidthIncludingTrailingWhitespace%2A>值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>