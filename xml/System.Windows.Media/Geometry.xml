<Type Name="Geometry" FullName="System.Windows.Media.Geometry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ff827bf843b8129646646966b491886ad589da44" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39821258" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Geometry : System.Windows.Media.Animation.Animatable, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract Geometry extends System.Windows.Media.Animation.Animatable implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Geometry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Geometry&#xA;Inherits Animatable&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Geometry abstract : System::Windows::Media::Animation::Animatable, IFormattable" />
  <TypeSignature Language="F#" Value="type Geometry = class&#xA;    inherit Animatable&#xA;    interface IFormattable&#xA;    interface DUCE.IResource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.GeometryConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.GeometryValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>衍生自這個抽象基底類別的類別會定義幾何圖案。 <see cref="T:System.Windows.Media.Geometry" /> 物件可用來裁剪、叫用測試及轉譯 2D 圖形資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="geometry-compared-to-shape"></a>相較於圖形的幾何  
 <xref:System.Windows.Shapes.Shape?displayProperty=nameWithType>類別具有<xref:System.Windows.Shapes.Shape.Fill%2A>， <xref:System.Windows.Shapes.Shape.Stroke%2A>，和其他屬性呈現<xref:System.Windows.Media.Geometry>和其衍生的類別缺少。 <xref:System.Windows.Shapes.Shape>類別是<xref:System.Windows.FrameworkElement>，並因此參與版面配置系統，其衍生的類別可用來支援任何元素的內容當做<xref:System.Windows.UIElement>子系。  
  
 <xref:System.Windows.Media.Geometry>類別，相反地，只需定義圖形的幾何，而無法呈現其本身。 其單純性，因為它具有更廣泛的使用。  
  
 **Freezable 功能：** 因為它繼承自<xref:System.Windows.Freezable>類別<xref:System.Windows.Media.Geometry>類別會提供數個特殊功能：<xref:System.Windows.Media.Geometry>物件可以宣告為唯讀以改善所做的多個物件之間共用效能、 複製，並變更為安全執行緒。 如需詳細資訊，所提供的不同功能的相關<xref:System.Windows.Freezable>物件，請參閱[Freezable 物件概觀](~/docs/framework/wpf/advanced/freezable-objects-overview.md)。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>雖然此類別是抽象的但是不公開可延伸。</para>
    </block>
    <altmember cref="T:System.Windows.Shapes.Path" />
  </Docs>
  <Members>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Rect Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Geometry.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Bounds As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Rect Bounds { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Windows.Rect" Usage="System.Windows.Media.Geometry.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Rect" />，它指定 <see cref="T:System.Windows.Media.Geometry" /> 與軸對齊的週框方塊。</summary>
        <value>
          <see cref="T:System.Windows.Media.Geometry" /> 與軸對齊的週框方塊。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性不會將帳戶可能透過筆劃新增的區域。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Geometry" Usage="geometry.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立這個 <see cref="T:System.Windows.Media.Geometry" /> 的可修改複製，製作這個物件值的深層複製。 當複製相依性屬性時，這個方法會複製資源參考和資料繫結 (但可能無法再解析)，但不會複製動畫或它們目前的值。</summary>
        <returns>目前物件的可修改複本。 即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="true." />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性將仍為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。 為了方便起見，這個方法會遮蔽的強型別實作繼承的版本。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Geometry CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Geometry ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Media.Geometry" Usage="geometry.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Windows.Media.Geometry" /> 物件的可修改複製品，並在過程中建立物件目前值的深層複本。 不會複製資源參考、資料繫結和動畫，但是會複製其目前值。</summary>
        <returns>目前物件的可修改複本。 即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="false" />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性將仍為 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。 為了方便起見，這個方法會遮蔽的強型別實作繼承的版本。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Combine">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>結合兩個 <see cref="T:System.Windows.Media.Geometry" /> 物件。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.PathGeometry Combine (System.Windows.Media.Geometry geometry1, System.Windows.Media.Geometry geometry2, System.Windows.Media.GeometryCombineMode mode, System.Windows.Media.Transform transform);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.PathGeometry Combine(class System.Windows.Media.Geometry geometry1, class System.Windows.Media.Geometry geometry2, valuetype System.Windows.Media.GeometryCombineMode mode, class System.Windows.Media.Transform transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::PathGeometry ^ Combine(System::Windows::Media::Geometry ^ geometry1, System::Windows::Media::Geometry ^ geometry2, System::Windows::Media::GeometryCombineMode mode, System::Windows::Media::Transform ^ transform);" />
      <MemberSignature Language="F#" Value="static member Combine : System.Windows.Media.Geometry * System.Windows.Media.Geometry * System.Windows.Media.GeometryCombineMode * System.Windows.Media.Transform -&gt; System.Windows.Media.PathGeometry" Usage="System.Windows.Media.Geometry.Combine (geometry1, geometry2, mode, transform)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathGeometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometry1" Type="System.Windows.Media.Geometry" />
        <Parameter Name="geometry2" Type="System.Windows.Media.Geometry" />
        <Parameter Name="mode" Type="System.Windows.Media.GeometryCombineMode" />
        <Parameter Name="transform" Type="System.Windows.Media.Transform" />
      </Parameters>
      <Docs>
        <param name="geometry1">要結合的第一個幾何。</param>
        <param name="geometry2">要結合的第二個幾何。</param>
        <param name="mode">其中一個列舉值，指定幾何的結合方式。</param>
        <param name="transform">要套用至結合後之幾何的轉換，或為 <see langword="null" />。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Media.GeometryCombineMode" /> 結合兩個幾何，然後將指定的轉換套用至產生的幾何。</summary>
        <returns>結合後的幾何。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會使用預設的容錯因數 (描述<xref:System.Windows.Media.Geometry.StandardFlatteningTolerance%2A>屬性) 時合併幾何。 若要指定您自己的容錯因數，請使用<xref:System.Windows.Media.Geometry.Combine%2A>方法。  
  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.Combine%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 使用時，應該牽涉到仔細思考<xref:System.Windows.Media.Geometry.Combine%2A>執行聯集，因為它可以是非常耗費 CPU 資源。 在大部分情況下，<xref:System.Windows.Media.GeometryGroup>或<xref:System.Windows.Media.PathGeometry.AddGeometry%2A>好的效果。  
  
 使用<xref:System.Windows.Media.Geometry.Combine%2A>只任何時則適用下列步驟：  
  
-   幾何作業不是等位。  
  
-   其中一個幾何已<xref:System.Windows.Media.FillRule>的值<xref:System.Windows.Media.FillRule.EvenOdd>和幾何是自我交集 (也就是<xref:System.Windows.Media.FillRule>實際上很重要)。  
  
-   時間不是個問題，但名額 （比方說，如果幾何是建立一次，並且接著快取）。 通常<xref:System.Windows.Media.Geometry.Combine%2A>會產生較小的輸出，比<xref:System.Windows.Media.PathGeometry.AddGeometry%2A>。  
  
-   將圖案或路徑動畫中使用產生的幾何和<xref:System.Windows.Media.PathGeometry.AddGeometry%2A>不提供所需的外框。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.PathGeometry Combine (System.Windows.Media.Geometry geometry1, System.Windows.Media.Geometry geometry2, System.Windows.Media.GeometryCombineMode mode, System.Windows.Media.Transform transform, double tolerance, System.Windows.Media.ToleranceType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.PathGeometry Combine(class System.Windows.Media.Geometry geometry1, class System.Windows.Media.Geometry geometry2, valuetype System.Windows.Media.GeometryCombineMode mode, class System.Windows.Media.Transform transform, float64 tolerance, valuetype System.Windows.Media.ToleranceType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform,System.Double,System.Windows.Media.ToleranceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::PathGeometry ^ Combine(System::Windows::Media::Geometry ^ geometry1, System::Windows::Media::Geometry ^ geometry2, System::Windows::Media::GeometryCombineMode mode, System::Windows::Media::Transform ^ transform, double tolerance, System::Windows::Media::ToleranceType type);" />
      <MemberSignature Language="F#" Value="static member Combine : System.Windows.Media.Geometry * System.Windows.Media.Geometry * System.Windows.Media.GeometryCombineMode * System.Windows.Media.Transform * double * System.Windows.Media.ToleranceType -&gt; System.Windows.Media.PathGeometry" Usage="System.Windows.Media.Geometry.Combine (geometry1, geometry2, mode, transform, tolerance, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathGeometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometry1" Type="System.Windows.Media.Geometry" />
        <Parameter Name="geometry2" Type="System.Windows.Media.Geometry" />
        <Parameter Name="mode" Type="System.Windows.Media.GeometryCombineMode" />
        <Parameter Name="transform" Type="System.Windows.Media.Transform" />
        <Parameter Name="tolerance" Type="System.Double" />
        <Parameter Name="type" Type="System.Windows.Media.ToleranceType" />
      </Parameters>
      <Docs>
        <param name="geometry1">要結合的第一個幾何。</param>
        <param name="geometry2">要結合的第二個幾何。</param>
        <param name="mode">其中一個列舉值，指定幾何的結合方式。</param>
        <param name="transform">要套用至結合後之幾何的轉換，或為 <see langword="null" />。</param>
        <param name="tolerance">在幾何多邊形近似法中，點之間的距離上限。 值越小，產生的結果越精確，但執行過程也會比較慢。 如果 <c>tolerance</c> 小於 .000001，則會改用 .000001。</param>
        <param name="type">其中一個 <see cref="T:System.Windows.Media.ToleranceType" /> 值，這個值會指定容錯因數為絕對值或相對於幾何區域的值。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Media.GeometryCombineMode" /> 和容錯因數結合兩個幾何，然後將指定的轉換套用至產生的幾何。</summary>
        <returns>結合後的幾何。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.Combine%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 使用時，應該牽涉到仔細思考<xref:System.Windows.Media.Geometry.Combine%2A>執行聯集，因為它可以是非常耗費 CPU 資源。 在大部分情況下，<xref:System.Windows.Media.GeometryGroup>或<xref:System.Windows.Media.PathGeometry.AddGeometry%2A>好的效果。  
  
 使用<xref:System.Windows.Media.Geometry.Combine%2A>只任何時則適用下列步驟：  
  
-   幾何作業不是等位。  
  
-   其中一個幾何已<xref:System.Windows.Media.FillRule>的值<xref:System.Windows.Media.FillRule.EvenOdd>和幾何是自我交集 (也就是<xref:System.Windows.Media.FillRule>實際上很重要)。  
  
-   時間不是個問題，但名額 （比方說，如果幾何是建立一次，並且接著快取）。 通常<xref:System.Windows.Media.Geometry.Combine%2A>會產生較小的輸出，比<xref:System.Windows.Media.PathGeometry.AddGeometry%2A>。  
  
-   將圖案或路徑動畫中使用產生的幾何和<xref:System.Windows.Media.PathGeometry.AddGeometry%2A>不提供所需的外框。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Geometry Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.Geometry Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Geometry.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::Geometry ^ Empty { System::Windows::Media::Geometry ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Windows.Media.Geometry" Usage="System.Windows.Media.Geometry.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得空的物件。</summary>
        <value>空的幾何物件。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillContains">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>表示 <see cref="T:System.Windows.Media.Geometry" /> 是否完整包含指定的 <see cref="T:System.Windows.Media.Geometry" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillContains">
      <MemberSignature Language="C#" Value="public bool FillContains (System.Windows.Media.Geometry geometry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FillContains(class System.Windows.Media.Geometry geometry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.FillContains(System.Windows.Media.Geometry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FillContains(System::Windows::Media::Geometry ^ geometry);" />
      <MemberSignature Language="F#" Value="member this.FillContains : System.Windows.Media.Geometry -&gt; bool" Usage="geometry.FillContains geometry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometry" Type="System.Windows.Media.Geometry" />
      </Parameters>
      <Docs>
        <param name="geometry">用來測試內含項目的幾何。</param>
        <summary>表示目前幾何是否完整包含指定的 <see cref="T:System.Windows.Media.Geometry" />。</summary>
        <returns>如果目前幾何完整包含 <paramref name="geometry" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設的邊際誤差 (由描述<xref:System.Windows.Media.Geometry.StandardFlatteningTolerance%2A>屬性) 用於決定目前幾何是否包含指定的幾何。 若要指定您自己的邊際誤差，使用<xref:System.Windows.Media.Geometry.FillContains%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillContains">
      <MemberSignature Language="C#" Value="public bool FillContains (System.Windows.Point hitPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FillContains(valuetype System.Windows.Point hitPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.FillContains(System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function FillContains (hitPoint As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FillContains(System::Windows::Point hitPoint);" />
      <MemberSignature Language="F#" Value="member this.FillContains : System.Windows.Point -&gt; bool" Usage="geometry.FillContains hitPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitPoint" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="hitPoint">用來測試內含項目的點。</param>
        <summary>表示幾何是否包含指定的 <see cref="T:System.Windows.Point" />。</summary>
        <returns>如果幾何包含 <paramref name="hitPoint" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設的容錯因數 (描述<xref:System.Windows.Media.Geometry.StandardFlatteningTolerance%2A>屬性) 時判斷幾何是否包含指定的點，會使用。 若要指定您自己的容錯因數，請使用<xref:System.Windows.Media.Geometry.FillContains%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillContains">
      <MemberSignature Language="C#" Value="public bool FillContains (System.Windows.Media.Geometry geometry, double tolerance, System.Windows.Media.ToleranceType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FillContains(class System.Windows.Media.Geometry geometry, float64 tolerance, valuetype System.Windows.Media.ToleranceType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.FillContains(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FillContains(System::Windows::Media::Geometry ^ geometry, double tolerance, System::Windows::Media::ToleranceType type);" />
      <MemberSignature Language="F#" Value="member this.FillContains : System.Windows.Media.Geometry * double * System.Windows.Media.ToleranceType -&gt; bool" Usage="geometry.FillContains (geometry, tolerance, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometry" Type="System.Windows.Media.Geometry" />
        <Parameter Name="tolerance" Type="System.Double" />
        <Parameter Name="type" Type="System.Windows.Media.ToleranceType" />
      </Parameters>
      <Docs>
        <param name="geometry">用來測試內含項目的幾何。</param>
        <param name="tolerance">在幾何多邊形近似法中，點之間的距離上限。 值越小，產生的結果越精確，但執行過程也會比較慢。 如果 <c>tolerance</c> 小於 .000001，則會改用 .000001。</param>
        <param name="type">其中一個 <see cref="T:System.Windows.Media.ToleranceType" /> 值，這個值會指定容錯因數為絕對值或相對於幾何區域的值。</param>
        <summary>在指定的邊際誤差下，表示目前幾何是否包含指定的 <see cref="T:System.Windows.Media.Geometry" />。</summary>
        <returns>如果在指定的邊際誤差下，目前幾何包含 <paramref name="geometry" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.FillContains%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillContains">
      <MemberSignature Language="C#" Value="public bool FillContains (System.Windows.Point hitPoint, double tolerance, System.Windows.Media.ToleranceType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FillContains(valuetype System.Windows.Point hitPoint, float64 tolerance, valuetype System.Windows.Media.ToleranceType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.FillContains(System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)" />
      <MemberSignature Language="VB.NET" Value="Public Function FillContains (hitPoint As Point, tolerance As Double, type As ToleranceType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FillContains(System::Windows::Point hitPoint, double tolerance, System::Windows::Media::ToleranceType type);" />
      <MemberSignature Language="F#" Value="member this.FillContains : System.Windows.Point * double * System.Windows.Media.ToleranceType -&gt; bool" Usage="geometry.FillContains (hitPoint, tolerance, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitPoint" Type="System.Windows.Point" />
        <Parameter Name="tolerance" Type="System.Double" />
        <Parameter Name="type" Type="System.Windows.Media.ToleranceType" />
      </Parameters>
      <Docs>
        <param name="hitPoint">用來測試內含項目的點。</param>
        <param name="tolerance">在幾何多邊形近似法中，點之間的距離上限。 值越小，產生的結果越精確，但執行過程也會比較慢。 如果 <c>tolerance</c> 小於 .000001，則會改用 .000001。</param>
        <param name="type">其中一個 <see cref="T:System.Windows.Media.ToleranceType" /> 值，這個值會指定容錯因數為絕對值或相對於幾何區域的值。</param>
        <summary>在指定的邊際誤差下，表示幾何是否包含指定的 <see cref="T:System.Windows.Point" />。</summary>
        <returns>如果在指定的邊際誤差下，幾何包含 <paramref name="hitPoint" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.FillContains%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillContainsWithDetail">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回值，這個值描述幾何與所指定幾何的交集。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillContainsWithDetail">
      <MemberSignature Language="C#" Value="public System.Windows.Media.IntersectionDetail FillContainsWithDetail (System.Windows.Media.Geometry geometry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.IntersectionDetail FillContainsWithDetail(class System.Windows.Media.Geometry geometry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.FillContainsWithDetail(System.Windows.Media.Geometry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::IntersectionDetail FillContainsWithDetail(System::Windows::Media::Geometry ^ geometry);" />
      <MemberSignature Language="F#" Value="member this.FillContainsWithDetail : System.Windows.Media.Geometry -&gt; System.Windows.Media.IntersectionDetail" Usage="geometry.FillContainsWithDetail geometry" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.IntersectionDetail</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometry" Type="System.Windows.Media.Geometry" />
      </Parameters>
      <Docs>
        <param name="geometry">用來測試內含項目的幾何。</param>
        <summary>傳回值，這個值描述目前幾何與所指定幾何的交集。</summary>
        <returns>其中一個列舉值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設的容錯因數 (藉由定義<xref:System.Windows.Media.Geometry.StandardFlatteningTolerance%2A>屬性) 用於決定目前幾何是否包含指定的幾何。 若要指定您自己的容錯因數，請使用<xref:System.Windows.Media.Geometry.FillContainsWithDetail%2A>方法。  
  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.FillContainsWithDetail%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillContainsWithDetail">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.IntersectionDetail FillContainsWithDetail (System.Windows.Media.Geometry geometry, double tolerance, System.Windows.Media.ToleranceType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Media.IntersectionDetail FillContainsWithDetail(class System.Windows.Media.Geometry geometry, float64 tolerance, valuetype System.Windows.Media.ToleranceType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.FillContainsWithDetail(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Media::IntersectionDetail FillContainsWithDetail(System::Windows::Media::Geometry ^ geometry, double tolerance, System::Windows::Media::ToleranceType type);" />
      <MemberSignature Language="F#" Value="abstract member FillContainsWithDetail : System.Windows.Media.Geometry * double * System.Windows.Media.ToleranceType -&gt; System.Windows.Media.IntersectionDetail&#xA;override this.FillContainsWithDetail : System.Windows.Media.Geometry * double * System.Windows.Media.ToleranceType -&gt; System.Windows.Media.IntersectionDetail" Usage="geometry.FillContainsWithDetail (geometry, tolerance, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.IntersectionDetail</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="geometry" Type="System.Windows.Media.Geometry" />
        <Parameter Name="tolerance" Type="System.Double" />
        <Parameter Name="type" Type="System.Windows.Media.ToleranceType" />
      </Parameters>
      <Docs>
        <param name="geometry">用來測試內含項目的幾何。</param>
        <param name="tolerance">在幾何多邊形近似法中，點之間的距離上限。 值越小，產生的結果越精確，但執行過程也會比較慢。 如果 <c>tolerance</c> 小於 .000001，則會改用 .000001。</param>
        <param name="type">其中一個 <see cref="T:System.Windows.Media.ToleranceType" /> 值，這個值會指定容錯因數為絕對值或相對於幾何區域的值。</param>
        <summary>傳回值，這個值描述在指定的邊際誤差下，目前幾何與所指定幾何的交集。</summary>
        <returns>其中一個列舉值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.FillContainsWithDetail%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetArea">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Media.Geometry" /> 物件的填滿區域。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetArea">
      <MemberSignature Language="C#" Value="public double GetArea ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetArea() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.GetArea" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArea () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetArea();" />
      <MemberSignature Language="F#" Value="member this.GetArea : unit -&gt; double" Usage="geometry.GetArea " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Media.Geometry" /> 物件的填滿區域。</summary>
        <returns>幾何的填滿區域。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.GetArea%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArea">
      <MemberSignature Language="C#" Value="public virtual double GetArea (double tolerance, System.Windows.Media.ToleranceType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetArea(float64 tolerance, valuetype System.Windows.Media.ToleranceType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.GetArea(System.Double,System.Windows.Media.ToleranceType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetArea (tolerance As Double, type As ToleranceType) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double GetArea(double tolerance, System::Windows::Media::ToleranceType type);" />
      <MemberSignature Language="F#" Value="abstract member GetArea : double * System.Windows.Media.ToleranceType -&gt; double&#xA;override this.GetArea : double * System.Windows.Media.ToleranceType -&gt; double" Usage="geometry.GetArea (tolerance, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tolerance" Type="System.Double" />
        <Parameter Name="type" Type="System.Windows.Media.ToleranceType" />
      </Parameters>
      <Docs>
        <param name="tolerance">在幾何多邊形近似法中，點之間的距離上限。 值越小，產生的結果越精確，但執行過程也會比較慢。 如果 <c>tolerance</c> 小於 .000001，則會改用 .000001。</param>
        <param name="type">其中一個 <see cref="T:System.Windows.Media.ToleranceType" /> 值，這個值會指定容錯因數為絕對值或相對於幾何區域的值。</param>
        <summary>在指定的容許誤差內，取得 <see cref="T:System.Windows.Media.Geometry" /> 物件的填滿區域。</summary>
        <returns>幾何的填滿區域。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.GetArea%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFlattenedPathGeometry">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Media.PathGeometry" />，此為 <see cref="T:System.Windows.Media.Geometry" /> 物件的多邊形近似值。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFlattenedPathGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PathGeometry GetFlattenedPathGeometry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.PathGeometry GetFlattenedPathGeometry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.GetFlattenedPathGeometry" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFlattenedPathGeometry () As PathGeometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::PathGeometry ^ GetFlattenedPathGeometry();" />
      <MemberSignature Language="F#" Value="member this.GetFlattenedPathGeometry : unit -&gt; System.Windows.Media.PathGeometry" Usage="geometry.GetFlattenedPathGeometry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathGeometry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Media.PathGeometry" />，此為 <see cref="T:System.Windows.Media.Geometry" /> 物件的多邊形近似值。</summary>
        <returns>
          <see cref="T:System.Windows.Media.Geometry" /> 的多邊形近似值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會使用預設的容錯因數 (描述<xref:System.Windows.Media.Geometry.StandardFlatteningTolerance%2A>屬性) 時處理 geometry。 若要指定您自己的容錯因數，請使用<xref:System.Windows.Media.Geometry.GetFlattenedPathGeometry%2A>方法。  
  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.GetFlattenedPathGeometry%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFlattenedPathGeometry">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.PathGeometry GetFlattenedPathGeometry (double tolerance, System.Windows.Media.ToleranceType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.PathGeometry GetFlattenedPathGeometry(float64 tolerance, valuetype System.Windows.Media.ToleranceType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.GetFlattenedPathGeometry(System.Double,System.Windows.Media.ToleranceType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFlattenedPathGeometry (tolerance As Double, type As ToleranceType) As PathGeometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Media::PathGeometry ^ GetFlattenedPathGeometry(double tolerance, System::Windows::Media::ToleranceType type);" />
      <MemberSignature Language="F#" Value="abstract member GetFlattenedPathGeometry : double * System.Windows.Media.ToleranceType -&gt; System.Windows.Media.PathGeometry&#xA;override this.GetFlattenedPathGeometry : double * System.Windows.Media.ToleranceType -&gt; System.Windows.Media.PathGeometry" Usage="geometry.GetFlattenedPathGeometry (tolerance, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathGeometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tolerance" Type="System.Double" />
        <Parameter Name="type" Type="System.Windows.Media.ToleranceType" />
      </Parameters>
      <Docs>
        <param name="tolerance">在幾何多邊形近似法中，點之間的距離上限。 值越小，產生的結果越精確，但執行過程也會比較慢。 如果 <c>tolerance</c> 小於 .000001，則會改用 .000001。</param>
        <param name="type">其中一個 <see cref="T:System.Windows.Media.ToleranceType" /> 值，這個值會指定容錯因數為絕對值或相對於幾何區域的值。</param>
        <summary>在指定的容許誤差內取得 <see cref="T:System.Windows.Media.PathGeometry" />，這是 <see cref="T:System.Windows.Media.Geometry" /> 物件的多邊形近似值。</summary>
        <returns>
          <see cref="T:System.Windows.Media.Geometry" /> 的多邊形近似值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.GetFlattenedPathGeometry%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetOutlinedPathGeometry">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Media.PathGeometry" />，此為 <see cref="T:System.Windows.Media.Geometry" /> 填滿區域的簡單外框。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetOutlinedPathGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PathGeometry GetOutlinedPathGeometry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.PathGeometry GetOutlinedPathGeometry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.GetOutlinedPathGeometry" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutlinedPathGeometry () As PathGeometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::PathGeometry ^ GetOutlinedPathGeometry();" />
      <MemberSignature Language="F#" Value="member this.GetOutlinedPathGeometry : unit -&gt; System.Windows.Media.PathGeometry" Usage="geometry.GetOutlinedPathGeometry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathGeometry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Media.PathGeometry" />，此為 <see cref="T:System.Windows.Media.Geometry" /> 填滿區域的簡單外框。</summary>
        <returns>
          <see cref="T:System.Windows.Media.Geometry" /> 之填滿區域的簡單外框。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會使用預設的容錯因數 (描述<xref:System.Windows.Media.Geometry.StandardFlatteningTolerance%2A>屬性) 時處理 geometry。 若要指定您自己的容錯因數，請使用<xref:System.Windows.Media.Geometry.GetOutlinedPathGeometry%2A>方法。  
  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.GetOutlinedPathGeometry%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutlinedPathGeometry">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.PathGeometry GetOutlinedPathGeometry (double tolerance, System.Windows.Media.ToleranceType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.PathGeometry GetOutlinedPathGeometry(float64 tolerance, valuetype System.Windows.Media.ToleranceType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.GetOutlinedPathGeometry(System.Double,System.Windows.Media.ToleranceType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOutlinedPathGeometry (tolerance As Double, type As ToleranceType) As PathGeometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Media::PathGeometry ^ GetOutlinedPathGeometry(double tolerance, System::Windows::Media::ToleranceType type);" />
      <MemberSignature Language="F#" Value="abstract member GetOutlinedPathGeometry : double * System.Windows.Media.ToleranceType -&gt; System.Windows.Media.PathGeometry&#xA;override this.GetOutlinedPathGeometry : double * System.Windows.Media.ToleranceType -&gt; System.Windows.Media.PathGeometry" Usage="geometry.GetOutlinedPathGeometry (tolerance, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathGeometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tolerance" Type="System.Double" />
        <Parameter Name="type" Type="System.Windows.Media.ToleranceType" />
      </Parameters>
      <Docs>
        <param name="tolerance">在幾何多邊形近似法中，點之間的距離上限。 值越小，產生的結果越精確，但執行過程也會比較慢。 如果 <c>tolerance</c> 小於 .000001，則會改用 .000001。</param>
        <param name="type">其中一個 <see cref="T:System.Windows.Media.ToleranceType" /> 值，這個值會指定容錯因數為絕對值或相對於幾何區域的值。</param>
        <summary>在指定的容許誤差內，取得 <see cref="T:System.Windows.Media.PathGeometry" />，這是 <see cref="T:System.Windows.Media.Geometry" /> 之填滿區域的簡單外框。</summary>
        <returns>
          <see cref="T:System.Windows.Media.Geometry" /> 之填滿區域的簡單外框。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.GetOutlinedPathGeometry%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRenderBounds">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回與軸對齊的矩形，這個矩形正好能夠容納幾何和其筆劃。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRenderBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRenderBounds (System.Windows.Media.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRenderBounds(class System.Windows.Media.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRenderBounds(System::Windows::Media::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.GetRenderBounds : System.Windows.Media.Pen -&gt; System.Windows.Rect" Usage="geometry.GetRenderBounds pen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Windows.Media.Pen" />
      </Parameters>
      <Docs>
        <param name="pen">描述幾何筆劃區域的物件。</param>
        <summary>傳回與軸對齊的矩形，這個矩形正好能夠容納利用 <see cref="T:System.Windows.Media.Pen" /> 加上外框後的幾何。</summary>
        <returns>與軸對齊的矩形，這個矩形正好能夠容納加上外框後的幾何。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會使用預設的容錯因數 (描述<xref:System.Windows.Media.Geometry.StandardFlatteningTolerance%2A>屬性) 時處理 geometry。 若要指定您自己的容錯因數，請使用<xref:System.Windows.Media.Geometry.GetRenderBounds%2A>方法。  
  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.GetRenderBounds%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRenderBounds">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Rect GetRenderBounds (System.Windows.Media.Pen pen, double tolerance, System.Windows.Media.ToleranceType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Rect GetRenderBounds(class System.Windows.Media.Pen pen, float64 tolerance, valuetype System.Windows.Media.ToleranceType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Rect GetRenderBounds(System::Windows::Media::Pen ^ pen, double tolerance, System::Windows::Media::ToleranceType type);" />
      <MemberSignature Language="F#" Value="abstract member GetRenderBounds : System.Windows.Media.Pen * double * System.Windows.Media.ToleranceType -&gt; System.Windows.Rect&#xA;override this.GetRenderBounds : System.Windows.Media.Pen * double * System.Windows.Media.ToleranceType -&gt; System.Windows.Rect" Usage="geometry.GetRenderBounds (pen, tolerance, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Windows.Media.Pen" />
        <Parameter Name="tolerance" Type="System.Double" />
        <Parameter Name="type" Type="System.Windows.Media.ToleranceType" />
      </Parameters>
      <Docs>
        <param name="pen">描述幾何筆劃區域的物件。</param>
        <param name="tolerance">在幾何多邊形近似法中，點之間的距離上限。 值越小，產生的結果越精確，但執行過程也會比較慢。 如果 <c>tolerance</c> 小於 .000001，則會改用 .000001。</param>
        <param name="type">其中一個 <see cref="T:System.Windows.Media.ToleranceType" /> 值，這個值會指定容錯因數為絕對值或相對於幾何區域的值。</param>
        <summary>傳回與軸對齊的矩形，這個矩形能夠在指定的容錯因數下，正好能夠容納利用指定的 <see cref="T:System.Windows.Media.Pen" /> 加上外框後的幾何。</summary>
        <returns>與軸對齊的矩形，這個矩形正好能夠容納加上外框後的幾何。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.GetRenderBounds%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetWidenedPathGeometry">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Media.PathGeometry" />，此為 <see cref="T:System.Windows.Media.Geometry" /> 上之筆觸所定義的形狀，筆觸位於指定之 <see cref="T:System.Windows.Media.Pen" /> 所產生的項目上。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetWidenedPathGeometry">
      <MemberSignature Language="C#" Value="public System.Windows.Media.PathGeometry GetWidenedPathGeometry (System.Windows.Media.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.PathGeometry GetWidenedPathGeometry(class System.Windows.Media.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::PathGeometry ^ GetWidenedPathGeometry(System::Windows::Media::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.GetWidenedPathGeometry : System.Windows.Media.Pen -&gt; System.Windows.Media.PathGeometry" Usage="geometry.GetWidenedPathGeometry pen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathGeometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Windows.Media.Pen" />
      </Parameters>
      <Docs>
        <param name="pen">描述幾何筆劃區域的物件。</param>
        <summary>取得 <see cref="T:System.Windows.Media.PathGeometry" />，此為 <see cref="T:System.Windows.Media.Geometry" /> 上之筆觸所定義的形狀，筆觸位於指定之 <see cref="T:System.Windows.Media.Pen" /> 所產生的項目上。</summary>
        <returns>加上外框的幾何。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.GetWidenedPathGeometry%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWidenedPathGeometry">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Media.PathGeometry GetWidenedPathGeometry (System.Windows.Media.Pen pen, double tolerance, System.Windows.Media.ToleranceType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.PathGeometry GetWidenedPathGeometry(class System.Windows.Media.Pen pen, float64 tolerance, valuetype System.Windows.Media.ToleranceType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Media::PathGeometry ^ GetWidenedPathGeometry(System::Windows::Media::Pen ^ pen, double tolerance, System::Windows::Media::ToleranceType type);" />
      <MemberSignature Language="F#" Value="abstract member GetWidenedPathGeometry : System.Windows.Media.Pen * double * System.Windows.Media.ToleranceType -&gt; System.Windows.Media.PathGeometry&#xA;override this.GetWidenedPathGeometry : System.Windows.Media.Pen * double * System.Windows.Media.ToleranceType -&gt; System.Windows.Media.PathGeometry" Usage="geometry.GetWidenedPathGeometry (pen, tolerance, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.PathGeometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Windows.Media.Pen" />
        <Parameter Name="tolerance" Type="System.Double" />
        <Parameter Name="type" Type="System.Windows.Media.ToleranceType" />
      </Parameters>
      <Docs>
        <param name="pen">用來定義幾何筆劃區域的物件。</param>
        <param name="tolerance">在幾何多邊形近似法中，點之間的距離上限。 值越小，產生的結果越精確，但執行過程也會比較慢。 如果 <c>tolerance</c> 小於 .000001，則會改用 .000001。</param>
        <param name="type">其中一個 <see cref="T:System.Windows.Media.ToleranceType" /> 值，這個值會指定容錯因數為絕對值或相對於幾何區域的值。</param>
        <summary>取得 <see cref="T:System.Windows.Media.PathGeometry" />，這個圖案是由 <see cref="T:System.Windows.Media.Geometry" /> 上的筆劃定義，而該筆劃是由指定的 <see cref="T:System.Windows.Media.Pen" /> 在指定的容錯因數下產生。</summary>
        <returns>以 <paramref name="pen" /> 加寬的幾何。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.GetWidenedPathGeometry%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public abstract bool IsEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsEmpty () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsEmpty();" />
      <MemberSignature Language="F#" Value="abstract member IsEmpty : unit -&gt; bool" Usage="geometry.IsEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>判斷物件是否空白。</summary>
        <returns>如果幾何空白則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MayHaveCurves">
      <MemberSignature Language="C#" Value="public abstract bool MayHaveCurves ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MayHaveCurves() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.MayHaveCurves" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MayHaveCurves () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MayHaveCurves();" />
      <MemberSignature Language="F#" Value="abstract member MayHaveCurves : unit -&gt; bool" Usage="geometry.MayHaveCurves " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>判斷物件是否可以具有弧形片段。</summary>
        <returns>如果幾何物件可以具有弧形片段則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Geometry Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Media.Geometry Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Media::Geometry ^ Parse(System::String ^ source);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Windows.Media.Geometry" Usage="System.Windows.Media.Geometry.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">描述要建立之幾何的字串。</param>
        <summary>使用目前的文化特性，從指定的字串中建立新的 <see cref="T:System.Windows.Media.Geometry" /> 執行個體。</summary>
        <returns>從指定的字串建立新的 <see cref="T:System.Windows.Media.Geometry" /> 執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 請參閱[路徑標記語法](~/docs/framework/wpf/graphics-multimedia/path-markup-syntax.md)如需有關如何格式化此字串資訊  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTransform">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.ShouldSerializeTransform" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTransform () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTransform();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTransform : unit -&gt; bool" Usage="geometry.ShouldSerializeTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得值，這個值表示是否應該序列化 <see cref="P:System.Windows.Media.Geometry.Transform" /> 屬性的值。</summary>
        <returns>如果應該序列化幾何 <see cref="P:System.Windows.Media.Geometry.Transform" /> 屬性的值則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardFlatteningTolerance">
      <MemberSignature Language="C#" Value="public static double StandardFlatteningTolerance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float64 StandardFlatteningTolerance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Geometry.StandardFlatteningTolerance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StandardFlatteningTolerance As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property double StandardFlatteningTolerance { double get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardFlatteningTolerance : double" Usage="System.Windows.Media.Geometry.StandardFlatteningTolerance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得多邊形近似法使用的標準容許誤差。</summary>
        <value>標準容許誤差 (0.25)。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StrokeContains">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>判斷幾何的筆劃是否包含指定的 <see cref="T:System.Windows.Point" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StrokeContains">
      <MemberSignature Language="C#" Value="public bool StrokeContains (System.Windows.Media.Pen pen, System.Windows.Point hitPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StrokeContains(class System.Windows.Media.Pen pen, valuetype System.Windows.Point hitPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.StrokeContains(System.Windows.Media.Pen,System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StrokeContains(System::Windows::Media::Pen ^ pen, System::Windows::Point hitPoint);" />
      <MemberSignature Language="F#" Value="member this.StrokeContains : System.Windows.Media.Pen * System.Windows.Point -&gt; bool" Usage="geometry.StrokeContains (pen, hitPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Windows.Media.Pen" />
        <Parameter Name="hitPoint" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="pen">判斷幾何筆劃區域的物件。</param>
        <param name="hitPoint">用來測試內含項目的點。</param>
        <summary>判斷指定的 <see cref="T:System.Windows.Point" /> 是否包含於筆劃中，而這個筆劃是將指定的 <see cref="T:System.Windows.Media.Pen" /> 套用至幾何後而產生。</summary>
        <returns>如果 <paramref name="hitPoint" /> 包含於筆劃中，而這個筆劃是將指定的 <see cref="T:System.Windows.Media.Pen" /> 套用至幾何後而產生，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設的容錯因數 (藉由指定<xref:System.Windows.Media.Geometry.StandardFlatteningTolerance%2A>屬性) 用於決定指定的點是否位於幾何筆劃。 若要指定您自己的容錯因數，請使用<xref:System.Windows.Media.Geometry.StrokeContains%2A>多載。  
  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.StrokeContains%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeContains">
      <MemberSignature Language="C#" Value="public bool StrokeContains (System.Windows.Media.Pen pen, System.Windows.Point hitPoint, double tolerance, System.Windows.Media.ToleranceType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StrokeContains(class System.Windows.Media.Pen pen, valuetype System.Windows.Point hitPoint, float64 tolerance, valuetype System.Windows.Media.ToleranceType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.StrokeContains(System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StrokeContains(System::Windows::Media::Pen ^ pen, System::Windows::Point hitPoint, double tolerance, System::Windows::Media::ToleranceType type);" />
      <MemberSignature Language="F#" Value="member this.StrokeContains : System.Windows.Media.Pen * System.Windows.Point * double * System.Windows.Media.ToleranceType -&gt; bool" Usage="geometry.StrokeContains (pen, hitPoint, tolerance, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Windows.Media.Pen" />
        <Parameter Name="hitPoint" Type="System.Windows.Point" />
        <Parameter Name="tolerance" Type="System.Double" />
        <Parameter Name="type" Type="System.Windows.Media.ToleranceType" />
      </Parameters>
      <Docs>
        <param name="pen">定義幾何筆劃的物件。</param>
        <param name="hitPoint">用來測試內含項目的點。</param>
        <param name="tolerance">在幾何多邊形近似法中，點之間的距離上限。 值越小，產生的結果越精確，但執行過程也會比較慢。 如果 <c>tolerance</c> 小於 .000001，則會改用 .000001。</param>
        <param name="type">其中一個 <see cref="T:System.Windows.Media.ToleranceType" /> 值，這個值會指定容錯因數為絕對值或相對於幾何區域的值。</param>
        <summary>在指定的邊際誤差下，判斷指定的 <see cref="T:System.Windows.Point" /> 是否包含於筆劃中，而這個筆劃是將指定的 <see cref="T:System.Windows.Media.Pen" /> 套用至幾何後而產生。</summary>
        <returns>如果在指定的容錯因數下，將指定的 <see cref="T:System.Windows.Media.Pen" /> 套用至幾何後而建立的筆劃包含指定的點，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.StrokeContains%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StrokeContainsWithDetail">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回值，這個值描述所指定幾何與目前幾何筆劃的交集。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StrokeContainsWithDetail">
      <MemberSignature Language="C#" Value="public System.Windows.Media.IntersectionDetail StrokeContainsWithDetail (System.Windows.Media.Pen pen, System.Windows.Media.Geometry geometry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.IntersectionDetail StrokeContainsWithDetail(class System.Windows.Media.Pen pen, class System.Windows.Media.Geometry geometry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::IntersectionDetail StrokeContainsWithDetail(System::Windows::Media::Pen ^ pen, System::Windows::Media::Geometry ^ geometry);" />
      <MemberSignature Language="F#" Value="member this.StrokeContainsWithDetail : System.Windows.Media.Pen * System.Windows.Media.Geometry -&gt; System.Windows.Media.IntersectionDetail" Usage="geometry.StrokeContainsWithDetail (pen, geometry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.IntersectionDetail</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Windows.Media.Pen" />
        <Parameter Name="geometry" Type="System.Windows.Media.Geometry" />
      </Parameters>
      <Docs>
        <param name="pen">決定目前幾何筆劃區域的物件。</param>
        <param name="geometry">用來測試內含項目的幾何。</param>
        <summary>傳回值，這個值描述所指定 <see cref="T:System.Windows.Media.Geometry" /> 與將指定的 <see cref="T:System.Windows.Media.Pen" /> 套用至目前幾何後而建立之筆劃的交集。</summary>
        <returns>其中一個列舉值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設的容錯因數 (藉由定義<xref:System.Windows.Media.Geometry.StandardFlatteningTolerance%2A>屬性) 用於決定目前幾何筆劃是否位於所指定的幾何。 若要指定您自己的容錯因數，請使用<xref:System.Windows.Media.Geometry.StrokeContainsWithDetail%2A>方法。  
  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.StrokeContainsWithDetail%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeContainsWithDetail">
      <MemberSignature Language="C#" Value="public System.Windows.Media.IntersectionDetail StrokeContainsWithDetail (System.Windows.Media.Pen pen, System.Windows.Media.Geometry geometry, double tolerance, System.Windows.Media.ToleranceType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.IntersectionDetail StrokeContainsWithDetail(class System.Windows.Media.Pen pen, class System.Windows.Media.Geometry geometry, float64 tolerance, valuetype System.Windows.Media.ToleranceType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::IntersectionDetail StrokeContainsWithDetail(System::Windows::Media::Pen ^ pen, System::Windows::Media::Geometry ^ geometry, double tolerance, System::Windows::Media::ToleranceType type);" />
      <MemberSignature Language="F#" Value="member this.StrokeContainsWithDetail : System.Windows.Media.Pen * System.Windows.Media.Geometry * double * System.Windows.Media.ToleranceType -&gt; System.Windows.Media.IntersectionDetail" Usage="geometry.StrokeContainsWithDetail (pen, geometry, tolerance, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.IntersectionDetail</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Windows.Media.Pen" />
        <Parameter Name="geometry" Type="System.Windows.Media.Geometry" />
        <Parameter Name="tolerance" Type="System.Double" />
        <Parameter Name="type" Type="System.Windows.Media.ToleranceType" />
      </Parameters>
      <Docs>
        <param name="pen">決定目前幾何筆劃區域的物件。</param>
        <param name="geometry">用來測試內含項目的幾何。</param>
        <param name="tolerance">在幾何多邊形近似法中，點之間的距離上限。 值越小，產生的結果越精確，但執行過程也會比較慢。 如果 <c>tolerance</c> 小於 .000001，則會改用 .000001。</param>
        <param name="type">其中一個 <see cref="T:System.Windows.Media.ToleranceType" /> 值，這個值會指定容錯因數為絕對值或相對於幾何區域的值。</param>
        <summary>取得值，這個值描述在指定的邊際誤差下，所指定 <see cref="T:System.Windows.Media.Geometry" /> 與將指定的 <see cref="T:System.Windows.Media.Pen" /> 套用至目前幾何後而建立之筆劃的交集。</summary>
        <returns>其中一個列舉值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有些<xref:System.Windows.Media.Geometry>方法 (例如<xref:System.Windows.Media.Geometry.StrokeContainsWithDetail%2A>) 產生，或使用幾何的多邊形近似值。 容錯因數指定點在此多邊形的近似值之間的最大距離。 較小的容錯值會產生更好的近似值，但需要更多的處理程序比使用大型的容錯因數的近似值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">要使用的格式。  
  
-或- 
Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，用於使用針對 <see cref="T:System.IFormattable" /> 實作而定義的預設格式。</param>
        <param name="provider">要用來格式化值的提供者。  
  
-或- 
Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，用於取得作業系統目前地區設定中的數值格式資訊。</param>
        <summary>使用指定的格式，格式化目前執行個體的值。</summary>
        <returns>採用指定格式之目前執行個體的值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>根據目前的文化，建立物件的字串表示。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="geometry.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>根據目前的文化，建立物件的字串表示。</summary>
        <returns>物件的字串表示。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Geometry.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="member this.ToString : IFormatProvider -&gt; string" Usage="geometry.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">文化特性 (Culture) 特定格式資訊，或 <see langword="null" /> 表示使用目前的文化特性。</param>
        <summary>使用指定的文化特性特定格式資訊，建立物件的字串表示。</summary>
        <returns>物件的字串表示。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Transform Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Transform Transform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Geometry.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Transform ^ Transform { System::Windows::Media::Transform ^ get(); void set(System::Windows::Media::Transform ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Windows.Media.Transform with get, set" Usage="System.Windows.Media.Geometry.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定套用至 <see cref="T:System.Windows.Media.Transform" /> 的 <see cref="T:System.Windows.Media.Geometry" /> 物件。</summary>
        <value>套用至 <see cref="T:System.Windows.Media.Geometry" /> 的轉換。 請注意，這個值可能是單一 <see cref="T:System.Windows.Media.Transform" /> 或是做為某個 <see cref="T:System.Windows.Media.TransformCollection" /> 的 <see cref="T:System.Windows.Media.Transform" /> 轉換。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果目前的物件沒有轉換值，這個方法會傳回身分識別轉換。 否則，它會傳回<xref:System.Windows.Media.Transform>套用至目前的物件。  
  
<a name="dependencyPropertyInfo_Transform"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.Geometry.TransformProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Windows.Media.Geometry.Transform%2A>屬性，將套用<xref:System.Windows.Media.RotateTransform>到<xref:System.Windows.Media.Geometry>物件。  
  
 此範例會使用<xref:System.Windows.Media.GeometryGroup>若要從三個建立複合圖案<xref:System.Windows.Media.Geometry>物件，然後再旋轉 45 度的幾何使用<xref:System.Windows.Media.Geometry.Transform%2A>屬性。  
  
 [!code-xaml[Transforms_snip#GeometryTransformExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/Transforms_snip/CS/GeometryTransformExample.xaml#geometrytransformexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TransformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TransformProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Geometry.TransformProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TransformProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TransformProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TransformProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Geometry.TransformProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.Geometry.Transform" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>