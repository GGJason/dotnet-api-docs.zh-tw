<Type Name="NetworkInterface" FullName="System.Net.NetworkInformation.NetworkInterface">
  <TypeSignature Language="C#" Value="public abstract class NetworkInterface" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NetworkInterface extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.NetworkInterface" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NetworkInterface" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetworkInterface abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Net.NetworkInformation</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e9fae-101">提供網路介面的組態和統計資訊。</span><span class="sxs-lookup"><span data-stu-id="e9fae-101">Provides configuration and statistical information for a network interface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fae-102">這個類別會封裝之網路介面，也就是配接器，在本機電腦上的資料。</span><span class="sxs-lookup"><span data-stu-id="e9fae-102">This class encapsulates data for network interfaces, also known as adapters, on the local computer.</span></span> <span data-ttu-id="e9fae-103">您不會建立此類別; 事件類別的執行個體<xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A>方法會傳回陣列，其中包含每個網路介面在本機電腦上的這個類別的一個執行個體。</span><span class="sxs-lookup"><span data-stu-id="e9fae-103">You do not create instances of this class; the <xref:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces%2A> method returns an array that contains one instance of this class for each network interface on the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9fae-104">下列程式碼範例會顯示介面的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="e9fae-104">The following code example displays information about interfaces.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#12)]
 [!code-csharp[NCLNetInfoReport#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#12)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e9fae-105">執行 unmanaged 程式碼。</span><span class="sxs-lookup"><span data-stu-id="e9fae-105">for executing unmanaged code.</span></span> <span data-ttu-id="e9fae-106">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="e9fae-106">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NetworkInterface ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NetworkInterface();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9fae-107">初始化 <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e9fae-107">Initializes a new instance of the <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fae-108">可以呼叫這個建構函式只能由衍生自的<xref:System.Net.NetworkInformation.NetworkInterface>類別。</span><span class="sxs-lookup"><span data-stu-id="e9fae-108">This constructor can be called only by classes that derive from the <xref:System.Net.NetworkInformation.NetworkInterface> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9fae-109">取得介面的描述。</span><span class="sxs-lookup"><span data-stu-id="e9fae-109">Gets the description of the interface.</span></span></summary>
        <value><span data-ttu-id="e9fae-110"><see cref="T:System.String" />，描述這個介面。</span><span class="sxs-lookup"><span data-stu-id="e9fae-110">A <see cref="T:System.String" /> that describes this interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fae-111">人類看得懂的文字描述的網路介面的描述。</span><span class="sxs-lookup"><span data-stu-id="e9fae-111">The description is human-readable text that describes the network interface.</span></span> <span data-ttu-id="e9fae-112">在描述中包含的資訊取決於作業系統的功能。</span><span class="sxs-lookup"><span data-stu-id="e9fae-112">The information included in the description depends on the capabilities of the operating system.</span></span>  <span data-ttu-id="e9fae-113">在 Windows 中，它通常是指介面廠商、 型別 （例如，乙太網路）、 品牌、 和模型。</span><span class="sxs-lookup"><span data-stu-id="e9fae-113">On Windows, it typically describes the interface vendor, type (for example, Ethernet), brand, and model.</span></span> <span data-ttu-id="e9fae-114">在其他平台，可能很簡短名稱的介面，例如`eth0`。</span><span class="sxs-lookup"><span data-stu-id="e9fae-114">On other platforms, it may be as brief as the name of the interface, such as `eth0`.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="e9fae-115">下列程式碼範例顯示在本機電腦上的所有介面的摘要。</span><span class="sxs-lookup"><span data-stu-id="e9fae-115">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllNetworkInterfaces">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkInformation.NetworkInterface[] GetAllNetworkInterfaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.NetworkInformation.NetworkInterface[] GetAllNetworkInterfaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllNetworkInterfaces () As NetworkInterface()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Net::NetworkInformation::NetworkInterface ^&gt; ^ GetAllNetworkInterfaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.NetworkInterface[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9fae-116">傳回物件，其描述本機電腦上的網路介面。</span><span class="sxs-lookup"><span data-stu-id="e9fae-116">Returns objects that describe the network interfaces on the local computer.</span></span></summary>
        <returns><span data-ttu-id="e9fae-117"><see cref="T:System.Net.NetworkInformation.NetworkInterface" /> 陣列，其中包含描述可用之網路介面的物件，但如果沒有偵測到介面則為空陣列。</span><span class="sxs-lookup"><span data-stu-id="e9fae-117">A <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> array that contains objects that describe the available network interfaces, or an empty array if no interfaces are detected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fae-118">在電腦上的網路介面提供網路連線。</span><span class="sxs-lookup"><span data-stu-id="e9fae-118">The network interfaces on a computer provide network connectivity.</span></span> <span data-ttu-id="e9fae-119">網路介面已也稱為網路介面卡。</span><span class="sxs-lookup"><span data-stu-id="e9fae-119">Network interfaces are also known as network adapters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9fae-120">下列程式碼範例會顯示本機電腦的網路介面卡的網域名稱服務 (DNS) 組態資訊。</span><span class="sxs-lookup"><span data-stu-id="e9fae-120">The following code example displays Domain Name Service (DNS) configuration information for the local computer's network adapters.</span></span>  
  
 [!code-cpp[NCLNetInfo2#41](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#41)]
 [!code-csharp[NCLNetInfo2#41](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#41)]
 [!code-vb[NCLNetInfo2#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="e9fae-121">Windows 系統函式呼叫失敗。</span><span class="sxs-lookup"><span data-stu-id="e9fae-121">A Windows system function call failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIPProperties">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPInterfaceProperties GetIPProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPInterfaceProperties GetIPProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPProperties () As IPInterfaceProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPInterfaceProperties ^ GetIPProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPInterfaceProperties</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9fae-122">傳回物件，其描述這個網路介面的組態。</span><span class="sxs-lookup"><span data-stu-id="e9fae-122">Returns an object that describes the configuration of this network interface.</span></span></summary>
        <returns><span data-ttu-id="e9fae-123"><see cref="T:System.Net.NetworkInformation.IPInterfaceProperties" /> 物件，其描述這個網路介面。</span><span class="sxs-lookup"><span data-stu-id="e9fae-123">An <see cref="T:System.Net.NetworkInformation.IPInterfaceProperties" /> object that describes this network interface.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fae-124">請注意，這個方法所傳回的物件中的資訊會反映陣列建立時間為準的介面。</span><span class="sxs-lookup"><span data-stu-id="e9fae-124">Note that the information in the object returned by this method reflects the interfaces as of the time the array is created.</span></span> <span data-ttu-id="e9fae-125">這項資訊不會動態更新。</span><span class="sxs-lookup"><span data-stu-id="e9fae-125">This information is not updated dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9fae-126">下列程式碼範例會顯示本機電腦的網路介面卡支援 IPv4 的資訊。</span><span class="sxs-lookup"><span data-stu-id="e9fae-126">The following code example displays information for the local computer's network adapters that support IPv4.</span></span>  
  
 [!code-cpp[NCLNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NCLNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NCLNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPStatistics">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPInterfaceStatistics GetIPStatistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPInterfaceStatistics GetIPStatistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPStatistics" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPStatistics () As IPInterfaceStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPInterfaceStatistics ^ GetIPStatistics();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPInterfaceStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9fae-127">取得這個 <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> 執行個體的 IP 統計資料。</span><span class="sxs-lookup"><span data-stu-id="e9fae-127">Gets the IP statistics for this <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> instance.</span></span></summary>
        <returns><span data-ttu-id="e9fae-128">傳回 <see cref="T:System.Net.NetworkInformation.IPInterfaceStatistics" />。</span><span class="sxs-lookup"><span data-stu-id="e9fae-128">Returns <see cref="T:System.Net.NetworkInformation.IPInterfaceStatistics" />.</span></span>  
  
 <span data-ttu-id="e9fae-129">IP 統計資料。</span><span class="sxs-lookup"><span data-stu-id="e9fae-129">The IP statistics.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIPv4Statistics">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.IPv4InterfaceStatistics GetIPv4Statistics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.IPv4InterfaceStatistics GetIPv4Statistics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetIPv4Statistics () As IPv4InterfaceStatistics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::IPv4InterfaceStatistics ^ GetIPv4Statistics();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPv4InterfaceStatistics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9fae-130">取得這個 <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> 執行個體的 IPv4 統計資料。</span><span class="sxs-lookup"><span data-stu-id="e9fae-130">Gets the IPv4 statistics for this <see cref="T:System.Net.NetworkInformation.NetworkInterface" /> instance.</span></span></summary>
        <returns><span data-ttu-id="e9fae-131"><see cref="T:System.Net.NetworkInformation.IPv4InterfaceStatistics" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="e9fae-131">An <see cref="T:System.Net.NetworkInformation.IPv4InterfaceStatistics" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsNetworkAvailable">
      <MemberSignature Language="C#" Value="public static bool GetIsNetworkAvailable ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsNetworkAvailable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsNetworkAvailable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsNetworkAvailable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9fae-132">指出是否有任何網路連接可使用。</span><span class="sxs-lookup"><span data-stu-id="e9fae-132">Indicates whether any network connection is available.</span></span></summary>
        <returns>
          <span data-ttu-id="e9fae-133">如果有可用的網路連接則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e9fae-133"><see langword="true" /> if a network connection is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fae-134">網路連線視為可用，如果任何網路介面標示為 「 向上 」，而且不是回送 」 或 「 通道介面。</span><span class="sxs-lookup"><span data-stu-id="e9fae-134">A network connection is considered to be available if any network interface is marked "up" and is not a loopback or tunnel interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPhysicalAddress">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.PhysicalAddress GetPhysicalAddress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkInformation.PhysicalAddress GetPhysicalAddress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPhysicalAddress () As PhysicalAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkInformation::PhysicalAddress ^ GetPhysicalAddress();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PhysicalAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e9fae-135">傳回這個介面卡的媒體存取控制 (MAC) 或實體位址。</span><span class="sxs-lookup"><span data-stu-id="e9fae-135">Returns the Media Access Control (MAC) or physical address for this adapter.</span></span></summary>
        <returns><span data-ttu-id="e9fae-136"><see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> 物件，包含實體位址。</span><span class="sxs-lookup"><span data-stu-id="e9fae-136">A <see cref="T:System.Net.NetworkInformation.PhysicalAddress" /> object that contains the physical address.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fae-137">這個方法所傳回的物件會包含適合用來傳輸資料在資料連結層媒體的位址。</span><span class="sxs-lookup"><span data-stu-id="e9fae-137">The object returned by this method contains an address that is appropriate to the media used to transport data at the data link layer.</span></span> <span data-ttu-id="e9fae-138">例如，乙太網路，這個方法會傳回乙太網路硬體位址。</span><span class="sxs-lookup"><span data-stu-id="e9fae-138">For example, on an Ethernet network, this method returns the Ethernet hardware address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9fae-139">下列程式碼範例會顯示在本機電腦上的所有介面的實體位址。</span><span class="sxs-lookup"><span data-stu-id="e9fae-139">The following code example displays the physical addresses of all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9fae-140">取得網路介面卡的識別項。</span><span class="sxs-lookup"><span data-stu-id="e9fae-140">Gets the identifier of the network adapter.</span></span></summary>
        <value><span data-ttu-id="e9fae-141"><see cref="T:System.String" />，包含識別項。</span><span class="sxs-lookup"><span data-stu-id="e9fae-141">A <see cref="T:System.String" /> that contains the identifier.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IPv6LoopbackInterfaceIndex">
      <MemberSignature Language="C#" Value="public static int IPv6LoopbackInterfaceIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 IPv6LoopbackInterfaceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IPv6LoopbackInterfaceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int IPv6LoopbackInterfaceIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9fae-142">取得 IPv6 回送介面的索引。</span><span class="sxs-lookup"><span data-stu-id="e9fae-142">Gets the index of the IPv6 loopback interface.</span></span></summary>
        <value><span data-ttu-id="e9fae-143">傳回 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="e9fae-143">Returns <see cref="T:System.Int32" />.</span></span>  
  
 <span data-ttu-id="e9fae-144">IPv6 回送介面的索引。</span><span class="sxs-lookup"><span data-stu-id="e9fae-144">The index for the IPv6 loopback interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fae-145">網路介面可能會有不同的介面索引，IPv4 和 IPv6 的回送介面。</span><span class="sxs-lookup"><span data-stu-id="e9fae-145">A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface.</span></span> <span data-ttu-id="e9fae-146">P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex 屬性只會傳回 IPv6 回送介面。</span><span class="sxs-lookup"><span data-stu-id="e9fae-146">The P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex property only returns the IPv6 loopback interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex" />
      </Docs>
    </Member>
    <Member MemberName="IsReceiveOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReceiveOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReceiveOnly" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.IsReceiveOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReceiveOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReceiveOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9fae-147">取得 <see cref="T:System.Boolean" /> 值，指出網路介面是否設定為只接收資料封包。</span><span class="sxs-lookup"><span data-stu-id="e9fae-147">Gets a <see cref="T:System.Boolean" /> value that indicates whether the network interface is set to only receive data packets.</span></span></summary>
        <value>
          <span data-ttu-id="e9fae-148">如果介面只接收網路流量，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e9fae-148"><see langword="true" /> if the interface only receives network traffic; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e9fae-149">下列程式碼範例顯示在本機電腦上的所有介面的摘要。</span><span class="sxs-lookup"><span data-stu-id="e9fae-149">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e9fae-150">這個屬性不適用於執行 Windows XP 以前版本作業系統的電腦。</span><span class="sxs-lookup"><span data-stu-id="e9fae-150">This property is not valid on computers running operating systems earlier than Windows XP.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoopbackInterfaceIndex">
      <MemberSignature Language="C#" Value="public static int LoopbackInterfaceIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LoopbackInterfaceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LoopbackInterfaceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int LoopbackInterfaceIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9fae-151">取得 IPv4 回送介面的索引。</span><span class="sxs-lookup"><span data-stu-id="e9fae-151">Gets the index of the IPv4 loopback interface.</span></span></summary>
        <value><span data-ttu-id="e9fae-152"><see cref="T:System.Int32" />，包含 IPv4 回送介面的索引。</span><span class="sxs-lookup"><span data-stu-id="e9fae-152">A <see cref="T:System.Int32" /> that contains the index for the IPv4 loopback interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fae-153">回送介面的索引通常是 1，但您不能依賴這。</span><span class="sxs-lookup"><span data-stu-id="e9fae-153">The index of the loopback interface is usually 1, but you cannot rely on this.</span></span> <span data-ttu-id="e9fae-154">使用<xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A>屬性來取得正確的值。</span><span class="sxs-lookup"><span data-stu-id="e9fae-154">Use the <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property to get the correct value.</span></span>  
  
 <span data-ttu-id="e9fae-155">網路介面可能會有不同的介面索引，IPv4 和 IPv6 的回送介面。</span><span class="sxs-lookup"><span data-stu-id="e9fae-155">A network interface may have different interface indexes for the IPv4 and IPv6 loopback interface.</span></span> <span data-ttu-id="e9fae-156"><xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A>屬性只會傳回 IPv4 回送介面。</span><span class="sxs-lookup"><span data-stu-id="e9fae-156">The <xref:System.Net.NetworkInformation.NetworkInterface.LoopbackInterfaceIndex%2A> property only returns the IPv4 loopback interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.NetworkInformation.NetworkInformationException"><span data-ttu-id="e9fae-157">這個屬性在只執行 Ipv6 的電腦上是無效的。</span><span class="sxs-lookup"><span data-stu-id="e9fae-157">This property is not valid on computers running only Ipv6.</span></span></exception>
        <altmember cref="P:System.Net.NetworkInformation.NetworkInterface.IPv6LoopbackInterfaceIndex" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9fae-158">取得網路介面卡的名稱。</span><span class="sxs-lookup"><span data-stu-id="e9fae-158">Gets the name of the network adapter.</span></span></summary>
        <value><span data-ttu-id="e9fae-159"><see cref="T:System.String" />，包含介面卡名稱。</span><span class="sxs-lookup"><span data-stu-id="e9fae-159">A <see cref="T:System.String" /> that contains the adapter name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e9fae-160">下列程式碼範例顯示在本機電腦上的所有介面的摘要。</span><span class="sxs-lookup"><span data-stu-id="e9fae-160">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkInterfaceType">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.NetworkInterfaceType NetworkInterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.NetworkInterfaceType NetworkInterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.NetworkInterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NetworkInterfaceType As NetworkInterfaceType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkInformation::NetworkInterfaceType NetworkInterfaceType { System::Net::NetworkInformation::NetworkInterfaceType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.NetworkInterfaceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9fae-161">取得介面類型。</span><span class="sxs-lookup"><span data-stu-id="e9fae-161">Gets the interface type.</span></span></summary>
        <value><span data-ttu-id="e9fae-162"><see cref="T:System.Net.NetworkInformation.NetworkInterfaceType" /> 值，指定網路介面類型。</span><span class="sxs-lookup"><span data-stu-id="e9fae-162">An <see cref="T:System.Net.NetworkInformation.NetworkInterfaceType" /> value that specifies the network interface type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fae-163">介面型別中的詳細說明<xref:System.Net.NetworkInformation.NetworkInterfaceType?displayProperty=nameWithType>列舉文件。</span><span class="sxs-lookup"><span data-stu-id="e9fae-163">The interface types are described in detail in the <xref:System.Net.NetworkInformation.NetworkInterfaceType?displayProperty=nameWithType> enumeration documentation.</span></span>  

 <span data-ttu-id="e9fae-164">基本上，此屬性可以傳回的任何成員<xref:System.Net.NetworkInformation.NetworkInterfaceType>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="e9fae-164">In principle, this property can return any member of the <xref:System.Net.NetworkInformation.NetworkInterfaceType> enumeration.</span></span> <span data-ttu-id="e9fae-165">會傳回特定值為基礎的網路拓樸的執行階段條件而定。</span><span class="sxs-lookup"><span data-stu-id="e9fae-165">The specific value that it does return is dependent on the runtime conditions of the underlying network topology.</span></span> <span data-ttu-id="e9fae-166">這表示：</span><span class="sxs-lookup"><span data-stu-id="e9fae-166">This means that:</span></span>
 
 - <span data-ttu-id="e9fae-167">您不可以判斷事先哪個值的屬性會傳回特定的網路。</span><span class="sxs-lookup"><span data-stu-id="e9fae-167">It is not possible to determine in advance which value the property returns for a particular network.</span></span>
 
 - <span data-ttu-id="e9fae-168">很可能在實務上特定的網路上，列舉值的完整範圍不提供的。</span><span class="sxs-lookup"><span data-stu-id="e9fae-168">It is possible that in practice on a particular network, the full range of enumeration values is not available.</span></span> <span data-ttu-id="e9fae-169">例如，在 gigabit 乙太網路上，很可能屬性傳回<xref:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet?displayProperty=nameWithType>而不是<xref:System.Net.NetworkInformation.NetworkInterfaceType.GigabitEthernet?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e9fae-169">For example, on a gigabit Ethernet network, it is possible that the property returns <xref:System.Net.NetworkInformation.NetworkInterfaceType.Ethernet?displayProperty=nameWithType> rather than <xref:System.Net.NetworkInformation.NetworkInterfaceType.GigabitEthernet?displayProperty=nameWithType>.</span></span>

## Examples  
 <span data-ttu-id="e9fae-170">下列範例顯示在本機電腦上的所有介面的型別資訊。</span><span class="sxs-lookup"><span data-stu-id="e9fae-170">The following example displays type information for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationalStatus">
      <MemberSignature Language="C#" Value="public virtual System.Net.NetworkInformation.OperationalStatus OperationalStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.OperationalStatus OperationalStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.OperationalStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OperationalStatus As OperationalStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::NetworkInformation::OperationalStatus OperationalStatus { System::Net::NetworkInformation::OperationalStatus get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.OperationalStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9fae-171">取得網路連接的目前操作狀態。</span><span class="sxs-lookup"><span data-stu-id="e9fae-171">Gets the current operational state of the network connection.</span></span></summary>
        <value><span data-ttu-id="e9fae-172">其中一個 <see cref="T:System.Net.NetworkInformation.OperationalStatus" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e9fae-172">One of the <see cref="T:System.Net.NetworkInformation.OperationalStatus" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fae-173">中有詳細說明操作狀態的值<xref:System.Net.NetworkInformation.OperationalStatus>列舉文件。</span><span class="sxs-lookup"><span data-stu-id="e9fae-173">The operational status values are described in detail in the <xref:System.Net.NetworkInformation.OperationalStatus> enumeration documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9fae-174">下列程式碼範例顯示在本機電腦上的所有介面的摘要。</span><span class="sxs-lookup"><span data-stu-id="e9fae-174">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfoReport#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#16)]
 [!code-csharp[NCLNetInfoReport#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Speed">
      <MemberSignature Language="C#" Value="public virtual long Speed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Speed" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.Speed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Speed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Speed { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9fae-175">取得網路介面的速度。</span><span class="sxs-lookup"><span data-stu-id="e9fae-175">Gets the speed of the network interface.</span></span></summary>
        <value><span data-ttu-id="e9fae-176"><see cref="T:System.Int64" /> 值，指定速度 (每秒位元數)。</span><span class="sxs-lookup"><span data-stu-id="e9fae-176">A <see cref="T:System.Int64" /> value that specifies the speed in bits per second.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fae-177">這個屬性所傳回的值會報告的網路介面。</span><span class="sxs-lookup"><span data-stu-id="e9fae-177">The value returned by this property is reported by the network interface.</span></span> <span data-ttu-id="e9fae-178">它不會動態計算。</span><span class="sxs-lookup"><span data-stu-id="e9fae-178">It is not computed dynamically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9fae-179">下列程式碼範例示範如何在本機電腦上顯示之介面的速度。</span><span class="sxs-lookup"><span data-stu-id="e9fae-179">The following code example demonstrates displaying the speed of interfaces on the local computer.</span></span>  
  
 [!code-cpp[NclNetInfo2#13](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#13)]
 [!code-csharp[NclNetInfo2#13](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#13)]
 [!code-vb[NclNetInfo2#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public virtual bool Supports (System.Net.NetworkInformation.NetworkInterfaceComponent networkInterfaceComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.Net.NetworkInformation.NetworkInterfaceComponent networkInterfaceComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.NetworkInterface.Supports(System.Net.NetworkInformation.NetworkInterfaceComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Supports(System::Net::NetworkInformation::NetworkInterfaceComponent networkInterfaceComponent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkInterfaceComponent" Type="System.Net.NetworkInformation.NetworkInterfaceComponent" />
      </Parameters>
      <Docs>
        <param name="networkInterfaceComponent"><span data-ttu-id="e9fae-180"><see cref="T:System.Net.NetworkInformation.NetworkInterfaceComponent" /> 值。</span><span class="sxs-lookup"><span data-stu-id="e9fae-180">A <see cref="T:System.Net.NetworkInformation.NetworkInterfaceComponent" /> value.</span></span></param>
        <summary><span data-ttu-id="e9fae-181">取得 <see cref="T:System.Boolean" /> 值，指出介面是否支援指定的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="e9fae-181">Gets a <see cref="T:System.Boolean" /> value that indicates whether the interface supports the specified protocol.</span></span></summary>
        <returns>
          <span data-ttu-id="e9fae-182">如果支援指定的通訊協定，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e9fae-182"><see langword="true" /> if the specified protocol is supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e9fae-183">下列程式碼範例會顯示在本機電腦上的 IPV4 介面的統計資料。</span><span class="sxs-lookup"><span data-stu-id="e9fae-183">The following code example displays statistics for IPV4 interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]
 [!code-csharp[NCLNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]
 [!code-vb[NCLNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsMulticast">
      <MemberSignature Language="C#" Value="public virtual bool SupportsMulticast { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsMulticast" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.NetworkInterface.SupportsMulticast" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsMulticast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsMulticast { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.NetworkInformation</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e9fae-184">取得 <see cref="T:System.Boolean" /> 值，指出網路介面是否啟用為可接收多點傳送封包。</span><span class="sxs-lookup"><span data-stu-id="e9fae-184">Gets a <see cref="T:System.Boolean" /> value that indicates whether the network interface is enabled to receive multicast packets.</span></span></summary>
        <value>
          <span data-ttu-id="e9fae-185">如果介面可接收多點傳送封包，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e9fae-185"><see langword="true" /> if the interface receives multicast packets; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e9fae-186">多點傳送是指在同時傳送資料封包給多個目的地。</span><span class="sxs-lookup"><span data-stu-id="e9fae-186">Multicasting is the act of sending a data packet to multiple destinations simultaneously.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9fae-187">下列程式碼範例顯示在本機電腦上的所有介面的摘要。</span><span class="sxs-lookup"><span data-stu-id="e9fae-187">The following code example displays a summary for all interfaces on the local computer.</span></span>  
  
 [!code-cpp[NCLNetInfo2#51](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#51)]
 [!code-csharp[NCLNetInfo2#51](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#51)]
 [!code-vb[NCLNetInfo2#51](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e9fae-188">這個屬性不適用於執行 Windows XP 以前版本作業系統的電腦。</span><span class="sxs-lookup"><span data-stu-id="e9fae-188">This property is not valid on computers running operating systems earlier than Windows XP.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>