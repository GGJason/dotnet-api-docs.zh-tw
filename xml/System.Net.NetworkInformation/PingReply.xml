<Type Name="PingReply" FullName="System.Net.NetworkInformation.PingReply">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32bc4bb9e15257bd0e0354a58210c82b2b416c6f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37477890" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PingReply" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingReply extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingReply" />
  <TypeSignature Language="VB.NET" Value="Public Class PingReply" />
  <TypeSignature Language="C++ CLI" Value="public ref class PingReply" />
  <TypeSignature Language="F#" Value="type PingReply = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="58904-101">提供由於 <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> 或 <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> 作業而產生的狀態和資料等相關資訊。</span>
      <span class="sxs-lookup">
        <span data-stu-id="58904-101">Provides information about the status and data resulting from a <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> or <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58904-102"><xref:System.Net.NetworkInformation.Ping>類別會嘗試傳送到遠端電腦的網際網路控制訊息通訊協定 (ICMP) 回應要求，並傳回接收 ICMP 回應回覆訊息透過電腦的資訊。</span><span class="sxs-lookup"><span data-stu-id="58904-102">The <xref:System.Net.NetworkInformation.Ping> class attempts to send an Internet Control Message Protocol (ICMP) echo request to a remote computer and receive information back from the computer via an ICMP echo reply message.</span></span> <span data-ttu-id="58904-103"><xref:System.Net.NetworkInformation.Ping>類別使用的執行個體<xref:System.Net.NetworkInformation.PingReply>類別，以傳回作業，例如其狀態，以及傳送要求並接收回應所花費的時間的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="58904-103">The <xref:System.Net.NetworkInformation.Ping> class uses instances of the <xref:System.Net.NetworkInformation.PingReply> class to return information about the operation, such as its status and the time taken to send the request and receive the reply.</span></span>  
  
 <span data-ttu-id="58904-104"><xref:System.Net.NetworkInformation.Ping.Send%2A>方法傳回的執行個體<xref:System.Net.NetworkInformation.PingReply>直接類別。</span><span class="sxs-lookup"><span data-stu-id="58904-104">The <xref:System.Net.NetworkInformation.Ping.Send%2A> methods return instances of the <xref:System.Net.NetworkInformation.PingReply> class directly.</span></span> <span data-ttu-id="58904-105"><xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法會傳回<xref:System.Net.NetworkInformation.PingReply>中<xref:System.Net.NetworkInformation.PingCompletedEventHandler>方法的<xref:System.Net.NetworkInformation.PingCompletedEventArgs>參數。</span><span class="sxs-lookup"><span data-stu-id="58904-105">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods return a <xref:System.Net.NetworkInformation.PingReply> in the <xref:System.Net.NetworkInformation.PingCompletedEventHandler> method's <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parameter.</span></span> <span data-ttu-id="58904-106"><xref:System.Net.NetworkInformation.PingReply>透過存取<xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58904-106">The <xref:System.Net.NetworkInformation.PingReply> is accessed through the <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> property.</span></span>  
  
 <span data-ttu-id="58904-107">如果值<xref:System.Net.NetworkInformation.PingReply.Status%2A>不是<xref:System.Net.NetworkInformation.IPStatus.Success>，您不應該使用所傳回的值<xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>，<xref:System.Net.NetworkInformation.PingReply.Options%2A>或<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58904-107">If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus.Success>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties.</span></span> <span data-ttu-id="58904-108"><xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>屬性會傳回零，<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>屬性會傳回空陣列，而<xref:System.Net.NetworkInformation.PingReply.Options%2A>屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="58904-108">The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> property will return zero, the <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> property will return an empty array, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58904-109">下列程式碼範例示範如何使用<xref:System.Net.NetworkInformation.Ping>類別來以同步方式傳送的 ICMP 回應要求，並顯示回應。</span><span class="sxs-lookup"><span data-stu-id="58904-109">The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ Address { System::Net::IPAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.Net.IPAddress" Usage="System.Net.NetworkInformation.PingReply.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58904-110">取得主機位址，該主機傳送網際網路控制訊息通訊協定 (ICMP) 回應回覆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58904-110">Gets the address of the host that sends the Internet Control Message Protocol (ICMP) echo reply.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58904-111">
            <see cref="T:System.Net.IPAddress" />，包含 ICMP 回應訊息的目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58904-111">An <see cref="T:System.Net.IPAddress" /> containing the destination for the ICMP echo message.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58904-112"><xref:System.Net.NetworkInformation.PingReply.Address%2A>傳回的任何<xref:System.Net.NetworkInformation.Ping.Send%2A>多載可以來自惡意的遠端電腦。</span><span class="sxs-lookup"><span data-stu-id="58904-112">The <xref:System.Net.NetworkInformation.PingReply.Address%2A> returned by any of the <xref:System.Net.NetworkInformation.Ping.Send%2A> overloads can originate from a malicious remote computer.</span></span> <span data-ttu-id="58904-113">請勿連線到遠端電腦使用此位址。</span><span class="sxs-lookup"><span data-stu-id="58904-113">Do not connect to the remote computer using this address.</span></span> <span data-ttu-id="58904-114">使用 DNS 來判斷您要連接的機器的 IP 位址。</span><span class="sxs-lookup"><span data-stu-id="58904-114">Use DNS to determine the IP address of the machine to which you want to connect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58904-115">下列程式碼範例會以同步方式傳送的 ICMP 回應要求，並顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="58904-115">The following code example sends an ICMP echo request synchronously and displays the value of this property.</span></span>  
  
 [!code-cpp[NclPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NclPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58904-116">取得在網際網路控制訊息通訊協定 (ICMP) 回應回覆訊息中所收到的資料緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58904-116">Gets the buffer of data received in an Internet Control Message Protocol (ICMP) echo reply message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58904-117">
            <see cref="T:System.Byte" /> 陣列，包含在 ICMP 回應回覆訊息中所收到的資料，如果沒有收到回覆則為空陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58904-117">A <see cref="T:System.Byte" /> array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58904-118">傳送 ICMP 回應要求的資料緩衝區傳回寄件者回應的回覆中，因此您可以計算已知大小的封包往返傳輸時間。</span><span class="sxs-lookup"><span data-stu-id="58904-118">The data buffer sent with the ICMP echo request is returned to the sender in the echo reply so the roundtrip travel time for a packet of a known size can be computed.</span></span> <span data-ttu-id="58904-119">資料緩衝區結合<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>選項，可用來探索來源和目的地電腦之間的網路路徑的最大傳輸單位。</span><span class="sxs-lookup"><span data-stu-id="58904-119">The data buffer, combined with the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> option, can be used to discover the maximum transmission unit for the network path between the source and destination computers.</span></span> <span data-ttu-id="58904-120">如需詳細資訊，請參閱 RFC 1574，第 3.2 節，網址中的 「 追蹤路由 」 [ https://www.ietf.org ](https://www.ietf.org)。</span><span class="sxs-lookup"><span data-stu-id="58904-120">For additional information, see "Traceroute" in RFC 1574, Section 3.2, available at [https://www.ietf.org](https://www.ietf.org).</span></span>  
  
 <span data-ttu-id="58904-121">搭配使用的預設緩衝區<xref:System.Net.NetworkInformation.Ping.Send%2A>和<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>包含 32 個位元組的資料。</span><span class="sxs-lookup"><span data-stu-id="58904-121">The default buffer used with <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> contains 32 bytes of data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58904-122">下列程式碼範例會以同步方式傳送的 ICMP 回應要求，並顯示這個屬性所傳回的緩衝區大小。</span><span class="sxs-lookup"><span data-stu-id="58904-122">The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.PingOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As PingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::PingOptions ^ Options { System::Net::NetworkInformation::PingOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Net.NetworkInformation.PingOptions" Usage="System.Net.NetworkInformation.PingReply.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58904-123">取得選項，用於傳送對網際網路控制訊息通訊協定 (ICMP) 回應要求的回覆。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58904-123">Gets the options used to transmit the reply to an Internet Control Message Protocol (ICMP) echo request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58904-124">如果 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 是 <see cref="P:System.Net.NetworkInformation.PingReply.Status" />，則為 <see cref="F:System.Net.NetworkInformation.IPStatus.Success" /> 物件，該物件包含用於傳送回覆的存留時間 (TTL) 及分割指示詞，否則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58904-124">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object that contains the Time to Live (TTL) and the fragmentation directive used for transmitting the reply if <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> is <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58904-125">TTL 定義的節點可以轉送封包，其來源與目的地之間傳送的次數。</span><span class="sxs-lookup"><span data-stu-id="58904-125">The TTL defines the number of times nodes can forward a packet as it travels between its source and destination.</span></span> <span data-ttu-id="58904-126">如果轉送，也就是的躍點數目超過指定的 TTL 值，將封包會被視為無法傳遞，並捨棄。</span><span class="sxs-lookup"><span data-stu-id="58904-126">If the number of forwards, also known as hops, exceeds the value specified for the TTL, the packet is deemed undeliverable and is discarded.</span></span>  
  
 <span data-ttu-id="58904-127"><xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ICMP echo 要求控制項的封包片段中所指定的值。</span><span class="sxs-lookup"><span data-stu-id="58904-127">The <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> value specified in the ICMP echo request controls packet fragmentation.</span></span> <span data-ttu-id="58904-128">如果<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>已`true`封包大小超過最大傳輸單位的封包所採取的網路路徑，會捨棄封包和<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>會傳回錯誤。</span><span class="sxs-lookup"><span data-stu-id="58904-128">If <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the packet size exceeds the maximum transmission unit of the network path taken by the packet, the packet is discarded and the <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig> error is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58904-129">下列程式碼範例會以同步方式傳送的 ICMP 回應要求，並顯示中所儲存的值<xref:System.Net.NetworkInformation.PingOptions>這個屬性所傳回的物件。</span><span class="sxs-lookup"><span data-stu-id="58904-129">The following code example sends an ICMP echo request synchronously and displays the values stored in the <xref:System.Net.NetworkInformation.PingOptions> object returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NclPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundtripTime">
      <MemberSignature Language="C#" Value="public long RoundtripTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RoundtripTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoundtripTime As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RoundtripTime { long get(); };" />
      <MemberSignature Language="F#" Value="member this.RoundtripTime : int64" Usage="System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58904-130">取得用於傳送網際網路控制訊息通訊協定 (ICMP) 回應要求及接收對應的 ICMP 回應回覆訊息的毫秒數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58904-130">Gets the number of milliseconds taken to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58904-131">
            <see cref="T:System.Int64" />，指定以毫秒為單位的往返時間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58904-131">An <see cref="T:System.Int64" /> that specifies the round trip time, in milliseconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58904-132">如果回應要求失敗，<xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>次會報告為 0 時，這也是要求成功時的有效值。</span><span class="sxs-lookup"><span data-stu-id="58904-132">If the Echo request fails, the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> time is reported as 0, which is also a valid value when the request succeeds.</span></span> <span data-ttu-id="58904-133">您必須檢查<xref:System.Net.NetworkInformation.PingReply.Status%2A>來判斷是否應該忽略這個屬性所傳回的值。</span><span class="sxs-lookup"><span data-stu-id="58904-133">You must check the <xref:System.Net.NetworkInformation.PingReply.Status%2A> to determine whether the value returned by this property should be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58904-134">下列程式碼範例會以同步方式傳送的 ICMP 回應要求，並顯示這個屬性所傳回的緩衝區大小。</span><span class="sxs-lookup"><span data-stu-id="58904-134">The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.IPStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.IPStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As IPStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::IPStatus Status { System::Net::NetworkInformation::IPStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.Net.NetworkInformation.IPStatus" Usage="System.Net.NetworkInformation.PingReply.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58904-135">取得嘗試傳送網際網路控制訊息通訊協定 (ICMP) 回應要求及接收對應的 ICMP 回應回覆訊息的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58904-135">Gets the status of an attempt to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58904-136">
            <see cref="T:System.Net.NetworkInformation.IPStatus" /> 值，指出要求的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58904-136">An <see cref="T:System.Net.NetworkInformation.IPStatus" /> value indicating the result of the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58904-137">如果值<xref:System.Net.NetworkInformation.PingReply.Status%2A>不是<xref:System.Net.NetworkInformation.IPStatus.Success>，您不應該使用所傳回的值<xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>，<xref:System.Net.NetworkInformation.PingReply.Options%2A>或<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58904-137">If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus.Success>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties.</span></span> <span data-ttu-id="58904-138"><xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>並<xref:System.Net.NetworkInformation.PingReply.Buffer%2A>屬性會傳回零，而<xref:System.Net.NetworkInformation.PingReply.Options%2A>屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="58904-138">The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> and <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties will return zero, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58904-139">下列程式碼範例示範如何使用<xref:System.Net.NetworkInformation.Ping>類別來以同步方式傳送的 ICMP 回應要求，並顯示回應。</span><span class="sxs-lookup"><span data-stu-id="58904-139">The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>