<Type Name="PingOptions" FullName="System.Net.NetworkInformation.PingOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d555c901f88f1ef19998c3a5e71e81d3af7028d0" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39885449" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class PingOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class PingOptions" />
  <TypeSignature Language="F#" Value="type PingOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>用來控制如何傳送 <see cref="T:System.Net.NetworkInformation.Ping" /> 資料封包。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.NetworkInformation.PingOptions>類別會提供<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>和<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性來控制如何傳送網際網路控制訊息通訊協定 (ICMP) 回應要求封包。  
  
 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>屬性會指定所傳送的封包的存留時間<xref:System.Net.NetworkInformation.Ping>類別。 這個值表示可以將轉送的路由節點數目<xref:System.Net.NetworkInformation.Ping>之前它會捨棄的封包。 將此選項設定是很有用，如果您想要測試轉送的數目，也稱為躍點，才能將封包從來源電腦傳送至目的地電腦。  
  
 <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>屬性會控制資料傳送至遠端主機是否可以分割成多個封包。  這個選項非常有用，如果您想要測試的最大傳輸單位 (MTU) 的路由器和閘道用來傳送封包。  
  
 執行個體<xref:System.Net.NetworkInformation.PingOptions>類別會傳遞至<xref:System.Net.NetworkInformation.Ping.Send%2A>並<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>方法，而<xref:System.Net.NetworkInformation.PingReply>類別會傳回的執行個體<xref:System.Net.NetworkInformation.PingOptions>透過<xref:System.Net.NetworkInformation.PingReply.Options%2A>屬性。  
  
 如需執行個體的初始屬性值的清單<xref:System.Net.NetworkInformation.PingOptions>，請參閱<xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A>建構函式。  
  
   
  
## Examples  
 下列程式碼範例會使用<xref:System.Net.NetworkInformation.Ping>，<xref:System.Net.NetworkInformation.PingOptions>和<xref:System.Net.NetworkInformation.PingReply>類別來傳送 ICMP 回應要求的命令列上指定的主機。  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PingOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.PingOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PingOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表顯示的執行個體的初始屬性值<xref:System.Net.NetworkInformation.PingOptions>。  
  
|屬性|初始值|  
|--------------|-------------------|  
|<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>|128|  
|<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>|`false`|  
  
 您可以將屬性設定為新的值，然後再呼叫<xref:System.Net.NetworkInformation.Ping.Send%2A>或<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式。  
  
 [!code-cpp[NCLPingSync#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#2)]
 [!code-csharp[NCLPingSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PingOptions (int ttl, bool dontFragment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 ttl, bool dontFragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.NetworkInformation.PingOptions.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ttl As Integer, dontFragment As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PingOptions(int ttl, bool dontFragment);" />
      <MemberSignature Language="F#" Value="new System.Net.NetworkInformation.PingOptions : int * bool -&gt; System.Net.NetworkInformation.PingOptions" Usage="new System.Net.NetworkInformation.PingOptions (ttl, dontFragment)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ttl" Type="System.Int32" />
        <Parameter Name="dontFragment" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ttl">大於零的 <see cref="T:System.Int32" /> 值，指定可以轉送 <see cref="T:System.Net.NetworkInformation.Ping" /> 資料封包的次數。</param>
        <param name="dontFragment">
          <see langword="true" /> 表示不要分割傳送到遠端主機的資料，否則為 <see langword="false" />。</param>
        <summary>初始化 <see cref="T:System.Net.NetworkInformation.PingOptions" /> 類別的新執行個體，並設定「存留時間」和分割值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ttl`參數會限制路由器和閘道器可以將資料轉送的數目。 這是適用於測試的長度，在本機和遠端電腦之間的路由。 `dontFragment`參數可讓您測試的最大傳輸單位 (MTU) 的路由器和閘道用來傳送封包。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個建構函式，並顯示新的執行個體的屬性值。  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="ttl" /> 小於或等於零。</exception>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingOptions.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DontFragment : bool with get, set" Usage="System.Net.NetworkInformation.PingOptions.DontFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Boolean" /> 值，控制是否要分割傳送到遠端主機的資料。</summary>
        <value>如果無法以多個封包傳送資料則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 應用程式會使用這個屬性來控制資料傳送至遠端主機是否<xref:System.Net.NetworkInformation.Ping>類別可以分成多個封包。  這個選項非常有用，如果您想要測試的最大傳輸單位 (MTU) 的路由器和閘道用來傳送封包。 如果這個屬性是`true`然後傳送至遠端主機的資料是較大的閘道 」 或 「 寄件者與遠端主機之間的路由器的 MTU，ping 作業會失敗，狀態<xref:System.Net.NetworkInformation.IPStatus.PacketTooBig>。  
  
   
  
## Examples  
 下列程式碼範例將示範如何設定此屬性使用的值<xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A>建構函式，並接著顯示的值。  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public int Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingOptions.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ttl { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Ttl : int with get, set" Usage="System.Net.NetworkInformation.PingOptions.Ttl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定路由節點數目，這些節點可在丟棄 <see cref="T:System.Net.NetworkInformation.Ping" /> 資料前轉送該資料。</summary>
        <value>
          <see cref="T:System.Int32" /> 值，指定可以轉送 <see cref="T:System.Net.NetworkInformation.Ping" /> 資料封包的次數。 預設值為 128。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 閘道和路由器來傳送透過網路的封包，因為它們會遞減目前-存留時間 (TTL) 值的封包標頭中找到。 若 TTL 值到達零時，封包會被視為無法傳遞，並捨棄。 這個選項非常有用，如果您想要測試的路由器和閘道器用來傳輸資料數目。  
  
   
  
## Examples  
 下列程式碼範例將示範如何設定此屬性使用的值<xref:System.Net.NetworkInformation.PingOptions.%23ctor%2A>建構函式，並接著顯示的值。  
  
 [!code-cpp[NCLPingAsync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingAsync/CPP/asyncping.cpp#3)]
 [!code-csharp[NCLPingAsync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingAsync/CS/asyncping.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">為設定作業指定的值小於或等於零。</exception>
      </Docs>
    </Member>
  </Members>
</Type>