<Type Name="ContextStack" FullName="System.ComponentModel.Design.Serialization.ContextStack">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6a43ceb93f2fc7c037056f76a8a98f516cf07dc" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37698815" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ContextStack" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ContextStack extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ContextStack" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ContextStack" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextStack sealed" />
  <TypeSignature Language="F#" Value="type ContextStack = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="91be0-101">提供堆疊物件，序列化工具可以使用這個堆疊物件，使資訊可以為巢狀序列化工具所用。</span>
      <span class="sxs-lookup">
        <span data-stu-id="91be0-101">Provides a stack object that can be used by a serializer to make information available to nested serializers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91be0-102">某些序列化程式會要求有關物件內容的資訊，以便正確保存 (Persist) 它們的狀態。</span><span class="sxs-lookup"><span data-stu-id="91be0-102">Some serializers require information about the context of an object to correctly persist their state.</span></span> <span data-ttu-id="91be0-103"><xref:System.ComponentModel.Design.Serialization.ContextStack>類別可讓您設定另一個序列化程式可以存取堆疊的相關序列化物件的內容資料的序列化程式。</span><span class="sxs-lookup"><span data-stu-id="91be0-103">The <xref:System.ComponentModel.Design.Serialization.ContextStack> class enables a serializer to set data about the context of an object that is being serialized to a stack where another serializer can access it.</span></span> <span data-ttu-id="91be0-104">值<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>所提供屬性<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>共用資訊的某些序列化程式的使用。</span><span class="sxs-lookup"><span data-stu-id="91be0-104">The value of the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> property is provided by an <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> to share information of use to some serializers.</span></span>  
  
 <span data-ttu-id="91be0-105">內容堆疊是很有用，因為可以深度巢狀序列化設計文件的程序，而且每個層級的巢狀的物件可能需要內容資訊，以便正確保存物件的狀態。</span><span class="sxs-lookup"><span data-stu-id="91be0-105">A context stack is useful because the process of serializing a design document can be deeply nested, and objects at each level of nesting may require context information to correctly persist the state of the object.</span></span> <span data-ttu-id="91be0-106">序列化程式可以叫用巢狀的序列化程式之前，以設定堆疊的內容物件。</span><span class="sxs-lookup"><span data-stu-id="91be0-106">A serializer can set a context object to the stack before invoking a nested serializer.</span></span> <span data-ttu-id="91be0-107">每個物件設定堆疊應該移除巢狀序列化工具的呼叫傳回之後，將其設定的序列化程式。</span><span class="sxs-lookup"><span data-stu-id="91be0-107">Each object set to the stack should be removed by the serializer that set it after a call to a nested serializer returns.</span></span>  
  
 <span data-ttu-id="91be0-108">一般而言，在堆疊上的物件包含目前正在序列化的物件內容的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="91be0-108">Typically, the objects on the stack contain information about the context of the current object that is being serialized.</span></span> <span data-ttu-id="91be0-109">父序列化程式加入下一步要序列化的物件在堆疊中的內容資訊、 呼叫適當的序列化程式，序列化程式會完成，在物件上執行時從堆疊移除的內容資訊。</span><span class="sxs-lookup"><span data-stu-id="91be0-109">A parent serializer adds context information to the stack about the next object to be serialized, calls an appropriate serializer and, when the serializer finishes executing on the object, removes the context information from the stack.</span></span> <span data-ttu-id="91be0-110">這是由每個序列化程式，以判斷哪些物件會推入此堆疊上的實作。</span><span class="sxs-lookup"><span data-stu-id="91be0-110">It is up to the implementation of each serializer to determine what objects get pushed on this stack.</span></span>  
  
 <span data-ttu-id="91be0-111">例如，具有屬性的物件名為`Enabled`的資料類型為<xref:System.Boolean>。</span><span class="sxs-lookup"><span data-stu-id="91be0-111">As an example, an object with a property named `Enabled` has a data type of <xref:System.Boolean>.</span></span> <span data-ttu-id="91be0-112">如果序列化程式會將此值寫入資料流，它可能需要包含的內容或其正寫入的屬性型別。</span><span class="sxs-lookup"><span data-stu-id="91be0-112">If a serializer writes this value to a data stream, it might need to include the context or type of property it is writing.</span></span> <span data-ttu-id="91be0-113">序列化程式並沒有這項資訊，不過，因為它只會指示要寫入<xref:System.Boolean>值。</span><span class="sxs-lookup"><span data-stu-id="91be0-113">The serializer does not have this information, however, because it is only instructed to write the <xref:System.Boolean> value.</span></span> <span data-ttu-id="91be0-114">若要提供這項資訊給序列化程式，父序列化程式可以將推送<xref:System.ComponentModel.PropertyDescriptor>，以指到`Enabled`內容堆疊上的屬性。</span><span class="sxs-lookup"><span data-stu-id="91be0-114">To provide this information to the serializer, the parent serializer can push a <xref:System.ComponentModel.PropertyDescriptor> that points to the `Enabled` property on the context stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="91be0-115">下列程式碼範例示範如何使用<xref:System.ComponentModel.Design.Serialization.ContextStack>推入，然後再移除 10 個值。</span><span class="sxs-lookup"><span data-stu-id="91be0-115">The following code example demonstrates using a <xref:System.ComponentModel.Design.Serialization.ContextStack> to push and then remove 10 values.</span></span>  
  
 [!code-cpp[ContextStackExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#1)]
 [!code-csharp[ContextStackExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#1)]
 [!code-vb[ContextStackExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="91be0-116">取得的完整存取系統資源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="91be0-116">for full access to system resources.</span>
      </span>
      <span data-ttu-id="91be0-117">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />， <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="91be0-117">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="91be0-118">相關聯的狀態：</span>
      <span class="sxs-lookup">
        <span data-stu-id="91be0-118">Associated state:</span>
      </span>
    </permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextStack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="91be0-119">初始化 <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="91be0-120">下列程式碼範例將示範如何建立<xref:System.ComponentModel.Design.Serialization.ContextStack>執行個體。</span><span class="sxs-lookup"><span data-stu-id="91be0-120">The following code example demonstrates creating a <xref:System.ComponentModel.Design.Serialization.ContextStack> instance.</span></span>  
  
 [!code-cpp[ContextStackExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#2)]
 [!code-csharp[ContextStackExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#2)]
 [!code-vb[ContextStackExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (context As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Object ^ context);" />
      <MemberSignature Language="F#" Value="member this.Append : obj -&gt; unit" Usage="contextStack.Append context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="91be0-121">要附加至堆疊的內容物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-121">A context object to append to the stack.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91be0-122">將物件附加至堆疊結尾，而不是將它推至堆疊的頂端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-122">Appends an object to the end of the stack, rather than pushing it onto the top of the stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91be0-123">這個方法可讓序列化程式與其他序列化程式進行通訊，加上不需要在順序中移除的內容相關的資料物件。</span><span class="sxs-lookup"><span data-stu-id="91be0-123">This method allows a serializer to communicate with other serializers by adding contextual data objects that do not have to be removed in order.</span></span> <span data-ttu-id="91be0-124">沒有任何方法可以移除已附加至堆疊的結尾，但不會移除所有其他物件的物件。</span><span class="sxs-lookup"><span data-stu-id="91be0-124">There is no way to remove an object that was appended to the end of the stack without removing all other objects.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="91be0-125">
            <paramref name="context" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-125">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public object Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Current" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : obj" Usage="System.ComponentModel.Design.Serialization.ContextStack.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="91be0-126">取得堆疊上的目前物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-126">Gets the current object on the stack.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="91be0-127">堆疊上的目前物件，或 <see langword="null" /> (如果沒有物件推入)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-127">The current object on the stack, or <see langword="null" /> if no objects were pushed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91be0-128">目前的物件是在堆疊頂端的物件或最後一個新增至堆疊的物件。</span><span class="sxs-lookup"><span data-stu-id="91be0-128">The current object is the object at the top of the stack, or the object last added to the stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="91be0-129">取得或設定指定層次堆疊上的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-129">Gets or sets the object on the stack at the specified level.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int level] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(level As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int level); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.ComponentModel.Design.Serialization.ContextStack.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="91be0-130">要在堆疊上擷取的物件層次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-130">The level of the object to retrieve on the stack.</span>
          </span>
          <span data-ttu-id="91be0-131">第 0 層是堆疊的最上層，第 1 層則是下一層，依此類推。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-131">Level 0 is the top of the stack, level 1 is the next down, and so on.</span>
          </span>
          <span data-ttu-id="91be0-132">這一層必須是 0 或更大的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-132">This level must be 0 or greater.</span>
          </span>
          <span data-ttu-id="91be0-133">如果層次數字大於堆疊層次的數字，就會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-133">If level is greater than the number of levels on the stack, it returns <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91be0-134">取得所指定層次之堆疊上的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-134">Gets the object on the stack at the specified level.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="91be0-135">指定層次堆疊上的物件，或 <see langword="null" /> (如果該層次上沒有物件存在)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-135">The object on the stack at the specified level, or <see langword="null" /> if no object exists at that level.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="91be0-136">
            <paramref name="level" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-136">
              <paramref name="level" /> is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[Type type] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Type)" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(type As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[Type ^] { System::Object ^ get(Type ^ type); };" />
      <MemberSignature Language="F#" Value="member this.Item(Type) : obj" Usage="System.ComponentModel.Design.Serialization.ContextStack.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="91be0-137">要從內容堆疊中擷取的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-137">A type to retrieve from the context stack.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91be0-138">取得在堆疊上繼承自或實作指定型別的第一個物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-138">Gets the first object on the stack that inherits from or implements the specified type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="91be0-139">在堆疊上繼承自或實作指定型別的第一個物件，或 <see langword="null" /> (如果在堆疊上沒有物件實作該型別)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-139">The first object on the stack that inherits from or implements the specified type, or <see langword="null" /> if no object on the stack implements the type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91be0-140">在堆疊中搜尋之物件的實作或繼承的每個層級上進行檢查`type`。</span><span class="sxs-lookup"><span data-stu-id="91be0-140">A check is made on each level of the stack, searching for an object that implements or inherits `type`.</span></span> <span data-ttu-id="91be0-141">如果找到相符項目，則會傳回。</span><span class="sxs-lookup"><span data-stu-id="91be0-141">If a match is found, it is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="91be0-142">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-142">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Pop">
      <MemberSignature Language="C#" Value="public object Pop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Pop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Pop" />
      <MemberSignature Language="VB.NET" Value="Public Function Pop () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Pop();" />
      <MemberSignature Language="F#" Value="member this.Pop : unit -&gt; obj" Usage="contextStack.Pop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="91be0-143">將目前物件從堆疊中移除，並傳回物件的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-143">Removes the current object off of the stack, returning its value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="91be0-144">已從堆疊中移除的物件；如果堆疊中沒有物件，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-144">The object removed from the stack; <see langword="null" /> if no objects are on the stack.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="91be0-145">下列程式碼範例示範如何移除值，以從<xref:System.ComponentModel.Design.Serialization.ContextStack>。</span><span class="sxs-lookup"><span data-stu-id="91be0-145">The following code example demonstrates removing a value from a <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 [!code-cpp[ContextStackExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#4)]
 [!code-csharp[ContextStackExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#4)]
 [!code-vb[ContextStackExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (context As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push(System::Object ^ context);" />
      <MemberSignature Language="F#" Value="member this.Push : obj -&gt; unit" Usage="contextStack.Push context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="91be0-146">要推入至堆疊的內容物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-146">The context object to push onto the stack.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="91be0-147">推入或放置指定物件至堆疊上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-147">Pushes, or places, the specified object onto the stack.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="91be0-148">下列程式碼範例示範推送值<xref:System.ComponentModel.Design.Serialization.ContextStack>。</span><span class="sxs-lookup"><span data-stu-id="91be0-148">The following code example demonstrates pushing values to a <xref:System.ComponentModel.Design.Serialization.ContextStack>.</span></span>  
  
 [!code-cpp[ContextStackExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ContextStackExample/CPP/class1.cpp#3)]
 [!code-csharp[ContextStackExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ContextStackExample/CS/class1.cs#3)]
 [!code-vb[ContextStackExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContextStackExample/VB/class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="91be0-149">
            <paramref name="context" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="91be0-149">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>