<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeCodeDomSerializer.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac565c87864b4321c7a14ca30be60b486679a4325c4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65c87864b4321c7a14ca30be60b486679a4325c4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
          <source>Serializes an object to a new type.</source>
          <target state="translated">將物件序列化為新的型別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&gt;</ph> class performs the same tasks as a <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;</ph>, but serializing an object through this class defines a new type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&gt;</ph>類別會執行與相同的工作<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializer&gt;</ph>，但將物件序列化為透過此類別會定義新型別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The serialization manager to use for serialization.</source>
          <target state="translated">用於序列化的序列化管理員。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Type declaration to use for serialization.</source>
          <target state="translated">要用於序列化的型別宣告。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Deserializes the given type declaration.</source>
          <target state="translated">還原序列化指定的型別宣告 (Type Declaration)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The root object.</source>
          <target state="translated">根物件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A&gt;</ph> method deserializes a previously serialized code type declaration.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A&gt;</ph>方法還原序列化序列化先前的程式碼型別宣告。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The following table shows the tasks default implementation performs.</source>
          <target state="translated">下表顯示工作預設實作會執行。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Task</source>
          <target state="translated">工作</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Case Sensitivity Checks</source>
          <target state="translated">區分大小寫檢查</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The implementation searches for a <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> service to decide if it should treat members as case sensitive or case insensitive.</source>
          <target state="translated">實作搜尋<ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph>服務，以決定是否它應該將成員視為區分大小寫或不區分大小寫。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Statement Sorting</source>
          <target state="translated">陳述式排序</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>All member variables and local variables from init methods are stored in a table.</source>
          <target state="translated">所有成員變數和 init 方法的本機變數會都儲存在資料表中。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Then each statement in an init method is added to a statement collection grouped according to its left-hand side, so all statements assigning or operating on a particular variable are grouped under that variable.</source>
          <target state="translated">則 init 方法中的每個陳述式加入至其左邊，根據組成群組，以便在該變數底下的分組指派或作業在特定變數的所有陳述式的陳述式集合。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Variables that have no statements are discarded.</source>
          <target state="translated">沒有陳述式的變數會被捨棄。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Deserialization</source>
          <target state="translated">還原序列化</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The statement collections for each variable are deserialized according to the variable.</source>
          <target state="translated">每個變數的陳述式集合會根據變數還原序列化。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The following table shows the services the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A&gt;</ph> method requires.</source>
          <target state="translated">下表顯示服務<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize%2A&gt;</ph>方法需要。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Service</source>
          <target state="translated">服務</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>While not strictly necessary, the service, if available, is used to determine if the serialization should be case sensitive or case insensitive.</source>
          <target state="translated">時並非絕對必要，「 服務，如果有的話，用來判斷是否序列化應區分大小寫或不區分大小寫。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>If an object does not exist in the name table during deserialization, a query for <ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph> is made.</source>
          <target state="translated">如果物件不存在名稱表格中還原序列化時，查詢<ph id="ph1">&lt;xref:System.ComponentModel.IContainer&gt;</ph>進行。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>If this query succeeds, the container is checked for the object.</source>
          <target state="translated">如果這個查詢成功，容器會檢查物件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The container is also used as a stand-in for any container argument needed by components.</source>
          <target state="translated">容器也作為替代的元件所需的任何容器引數。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="typeDecl" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="typeDecl" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>The serialization manager to use for serialization.</source>
          <target state="translated">用於序列化的序列化管理員。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>The type declaration to use for serialization.</source>
          <target state="translated">用於序列化的類型宣告。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>The value to use for serialization.</source>
          <target state="translated">供序列化使用的值。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>Returns the method where statements used to serialize a member are stored.</source>
          <target state="translated">傳回一個方法，而在該方法中會儲存用於序列化成員的陳述式。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>The method used to emit all of the initialization code for the given member.</source>
          <target state="translated">用於為指定成員發出所有初始化程式碼的方法。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A&gt;</ph> method returns the method to emit all of the initialization code for the given member.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A&gt;</ph>方法會傳回指定成員發出所有初始化程式碼的方法。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>The default implementation returns an empty constructor.</source>
          <target state="translated">預設實作會傳回空的建構函式。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>If the same method is to be returned for multiple values, the same instance of the method should be returned.</source>
          <target state="translated">如果傳回多個值相同的方法，則應該會傳回相同的執行個體的方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>You can use the <ph id="ph1">&lt;xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType&gt;</ph> dictionary to remember methods you have created.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=nameWithType&gt;</ph>記住您建立的方法的字典。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>The <ph id="ph1">`typeDecl`</ph> parameter can also be used to add infrastructure methods.</source>
          <target state="translated"><ph id="ph1">`typeDecl`</ph>參數也可用來新增基礎結構的方法。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>For example, if you want to emit a separate method for each object, you need a single method that calls all of these methods in turn.</source>
          <target state="translated">例如，如果您想要發出的每個物件不同的方法，您需要依次呼叫所有這些方法的單一方法。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source>This method can be added to the code type declaration as needed.</source>
          <target state="translated">這個方法可以加入所需的程式碼型別宣告。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph>, <ph id="ph2">&lt;paramref name="typeDecl" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="value" /&gt;</ph> is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph><ph id="ph2">&lt;paramref name="typeDecl" /&gt;</ph> 或 <ph id="ph3">&lt;paramref name="value" /&gt;</ph> 是 <ph id="ph4">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The serialization manager to use for serialization.</source>
          <target state="translated">用於序列化的序列化管理員。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The type declaration to use for serialization.</source>
          <target state="translated">用於序列化的類型宣告。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>Returns an array of methods to be interpreted during deserialization.</source>
          <target state="translated">傳回要在還原序列化期間解譯的方法陣列。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMemberMethod" /&gt;</ph> array of methods to be interpreted during deserialization.</source>
          <target state="translated">方法的 <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeMemberMethod" /&gt;</ph> 陣列，要在還原序列化期間解譯。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source>The default implementation returns a single-element array with the constructor in it.</source>
          <target state="translated">預設實作會傳回在其建構函式的單一元素陣列。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="typeDecl" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="typeDecl" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The serialization manager to use for serialization.</source>
          <target state="translated">用於序列化的序列化管理員。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The object to serialize.</source>
          <target state="translated">要序列化的物件。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Optional collection of members.</source>
          <target state="translated">成員的選擇性集合。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Can be <ph id="ph1">&lt;see langword="null" /&gt;</ph> or empty.</source>
          <target state="translated">可以為 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或空白。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Serializes the object root by creating a new type declaration that defines root.</source>
          <target state="translated">藉由建立定義根 (Root) 的新型別宣告序列化物件根。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph> that defines the root object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeDeclaration" /&gt;</ph>，定義根物件。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph> method serializes the given root object and optional collection of members to create a new type definition.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph>方法會序列化給定的根物件和要建立新的類型定義之成員的選擇性集合。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>If the <ph id="ph1">`members`</ph> collection contains values, these values are serialized.</source>
          <target state="translated">如果<ph id="ph1">`members`</ph>集合包含值，這些值序列化。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Values themselves may serialize as either member variables or local variables.</source>
          <target state="translated">做為成員變數或本機變數，將這些值可能會序列化。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>This determination is done by searching for an extender property on the object called <ph id="ph1">`GenerateMember`</ph>.</source>
          <target state="translated">這項判斷是藉由擴充項屬性上呼叫的物件搜尋<ph id="ph1">`GenerateMember`</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>If <ph id="ph1">`true`</ph>, a member is generated.</source>
          <target state="translated">如果<ph id="ph1">`true`</ph>，成員就會產生。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Otherwise, a local variable is generated.</source>
          <target state="translated">否則，會產生的本機變數。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>For convenience, the <ph id="ph1">`members`</ph> collection can contain the root object.</source>
          <target state="translated">為了方便起見，<ph id="ph1">`members`</ph>集合可以包含根物件。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>In this case, the root object is not also added as a member or local variable.</source>
          <target state="translated">在此情況下，根物件不也會加入做為成員或本機變數。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The name of the returned type is taken from the root object’s name, if it was a named object.</source>
          <target state="translated">如果是具名的物件的傳回型別名稱是取自根物件的名稱。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>If not, a name is fabricated from the simple type name of the root class.</source>
          <target state="translated">如果沒有，則名稱簡單類型名稱的根類別中傳遞。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The following table shows the tasks performed by the default implementation of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph> method.</source>
          <target state="translated">下表顯示的預設實作所執行的工作<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Task</source>
          <target state="translated">工作</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Context Seeding</source>
          <target state="translated">植入的內容</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The serialization context is initialized with data including the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph> and <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph></source>
          <target state="translated">序列化內容會初始化資料包括<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.RootContext&gt;</ph>和 <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Member Serialization</source>
          <target state="translated">成員序列化</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Next, <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph> walks all of the members and calls <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph>.</source>
          <target state="translated">下一步<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph>會引導所有成員和呼叫<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Because serialization is done opportunistically in <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph>, this ensures that serialization is not done twice.</source>
          <target state="translated">因為序列化必須視情況在完成<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A&gt;</ph>，這可確保，序列化不是兩次。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Root Serialization</source>
          <target state="translated">根序列化</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Next, the root object is serialized and its statements are added to the statement collection.</source>
          <target state="translated">接下來，序列化根物件，其陳述式已加入至陳述式集合。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Statement Integration</source>
          <target state="translated">陳述式整合</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>After all objects are serialized, the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph> method orders the statements and adds them to a method returned from <ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A&gt;</ph>.</source>
          <target state="translated">所有物件都會都序列化之後，<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph>方法訂單陳述式，並將它們加入至方法，從傳回<ph id="ph2">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Finally, a constructor is fabricated that calls all of the methods returned from <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A&gt;</ph>.</source>
          <target state="translated">最後，建構函式會傳遞可呼叫的方法所傳回的所有<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The following table shows the objects the <ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph> method places on the context stack.</source>
          <target state="translated">下表顯示的物件<ph id="ph1">&lt;xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize%2A&gt;</ph>方法置於內容堆疊。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Instance</source>
          <target state="translated">執行個體</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>This serializer.</source>
          <target state="translated">這個序列化程式。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Deriving classes may find it useful to add public properties to this class.</source>
          <target state="translated">衍生類別可能會發現將這個類別的公用屬性。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>The type being created.</source>
          <target state="translated">正在建立的類型。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source>Most objects do not need direct access to this.</source>
          <target state="translated">大部分的物件不需要直接存取。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
          <source><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> or <ph id="ph2">&lt;paramref name="root" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="manager" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="root" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>