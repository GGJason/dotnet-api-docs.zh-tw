<Type Name="RootDesignerSerializerAttribute" FullName="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="86eb547d7dba90c252698b143e61764dab6e1834" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36708560" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RootDesignerSerializerAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RootDesignerSerializerAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RootDesignerSerializerAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RootDesignerSerializerAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type RootDesignerSerializerAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This attribute has been deprecated. Use DesignerSerializerAttribute instead.  For example, to specify a root designer for CodeDom, use DesignerSerializerAttribute(...,typeof(TypeCodeDomSerializer)).  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="acd14-101">指示用於根 (Root) 設計工具物件的基底序列化工具。</span>
      <span class="sxs-lookup">
        <span data-stu-id="acd14-101">Indicates the base serializer to use for a root designer object.</span>
      </span>
      <span data-ttu-id="acd14-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="acd14-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acd14-103"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute> 表示要使用的序列化管理員序列化設計文件，並指出是否指定的序列化程式支援自動重新載入設計文件，但未先序列化程式完全處理這些文件。</span><span class="sxs-lookup"><span data-stu-id="acd14-103"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute> indicates the serializer to use when the serialization manager serializes the design document, and whether the specified serializer supports automatic reloading of the design document without first completely disposing of the document.</span></span>  
  
 <span data-ttu-id="acd14-104">這個屬性包含下列重要成員：</span><span class="sxs-lookup"><span data-stu-id="acd14-104">This attribute contains the following significant members:</span></span>  
  
-   <span data-ttu-id="acd14-105"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName%2A> 指出哪些要用來在設計階段序列化類別的序列化物件。</span><span class="sxs-lookup"><span data-stu-id="acd14-105"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName%2A> indicates what serialization object to use to serialize the class at design time.</span></span>  
  
-   <span data-ttu-id="acd14-106"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName%2A> 表示序列化物件的基底類型的完整的名稱。</span><span class="sxs-lookup"><span data-stu-id="acd14-106"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName%2A> indicates the fully qualified name of the serialization object's base type.</span></span>  
  
-   <span data-ttu-id="acd14-107"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> 表示序列化程式是否支援重新載入而不需使用者互動，以開啟新的設計工具檢視的設計文件。</span><span class="sxs-lookup"><span data-stu-id="acd14-107"><xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> indicates whether the serializer supports reloading a design document without user interaction to open a new designer view.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="acd14-108">下列範例程式碼適用於<xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute>元件。</span><span class="sxs-lookup"><span data-stu-id="acd14-108">The following example code applies a <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute> to a component.</span></span>  
  
 [!code-cpp[IDesignerSerializationManagerSample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CPP/idesignerserializationmanagersample.cpp#2)]
 [!code-csharp[IDesignerSerializationManagerSample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerSerializationManagerSample/CS/idesignerserializationmanagersample.cs#2)]
 [!code-vb[IDesignerSerializationManagerSample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerSerializationManagerSample/VB/idesignerserializationmanagersample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="acd14-109">使用指定的屬性，初始化 <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-109">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootDesignerSerializerAttribute (string serializerTypeName, string baseSerializerTypeName, bool reloadable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serializerTypeName, string baseSerializerTypeName, bool reloadable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerTypeName As String, baseSerializerTypeName As String, reloadable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootDesignerSerializerAttribute(System::String ^ serializerTypeName, System::String ^ baseSerializerTypeName, bool reloadable);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute : string * string * bool -&gt; System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" Usage="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute (serializerTypeName, baseSerializerTypeName, reloadable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerTypeName" Type="System.String" />
        <Parameter Name="baseSerializerTypeName" Type="System.String" />
        <Parameter Name="reloadable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializerTypeName">
          <span data-ttu-id="acd14-110">序列化工具資料型別的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-110">The fully qualified name of the data type of the serializer.</span>
          </span>
        </param>
        <param name="baseSerializerTypeName">
          <span data-ttu-id="acd14-111">序列化工具基底型別的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-111">The name of the base type of the serializer.</span>
          </span>
          <span data-ttu-id="acd14-112">類別可包含多個序列化工具，因為它們具有不同的基底型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-112">A class can include multiple serializers as they all have different base types.</span>
          </span>
        </param>
        <param name="reloadable">
          <span data-ttu-id="acd14-113">如果序列化工具支援文件的動態重新載入，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-113">
              <see langword="true" /> if this serializer supports dynamic reloading of the document; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acd14-114">使用指定的屬性，初始化 <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-114">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acd14-115">建立新的設計工具的序列化屬性。</span><span class="sxs-lookup"><span data-stu-id="acd14-115">Creates a new designer serialization attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootDesignerSerializerAttribute (string serializerTypeName, Type baseSerializerType, bool reloadable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string serializerTypeName, class System.Type baseSerializerType, bool reloadable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerTypeName As String, baseSerializerType As Type, reloadable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootDesignerSerializerAttribute(System::String ^ serializerTypeName, Type ^ baseSerializerType, bool reloadable);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute : string * Type * bool -&gt; System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" Usage="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute (serializerTypeName, baseSerializerType, reloadable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerTypeName" Type="System.String" />
        <Parameter Name="baseSerializerType" Type="System.Type" />
        <Parameter Name="reloadable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializerTypeName">
          <span data-ttu-id="acd14-116">序列化工具資料型別的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-116">The fully qualified name of the data type of the serializer.</span>
          </span>
        </param>
        <param name="baseSerializerType">
          <span data-ttu-id="acd14-117">序列化工具基底型別的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-117">The name of the base type of the serializer.</span>
          </span>
          <span data-ttu-id="acd14-118">類別可包含多個序列化工具，因為它們具有不同的基底型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-118">A class can include multiple serializers, as they all have different base types.</span>
          </span>
        </param>
        <param name="reloadable">
          <span data-ttu-id="acd14-119">如果序列化工具支援文件的動態重新載入，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-119">
              <see langword="true" /> if this serializer supports dynamic reloading of the document; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acd14-120">使用指定的屬性，初始化 <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-120">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acd14-121">建立新的設計工具的序列化屬性。</span><span class="sxs-lookup"><span data-stu-id="acd14-121">Creates a new designer serialization attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RootDesignerSerializerAttribute (Type serializerType, Type baseSerializerType, bool reloadable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serializerType, class System.Type baseSerializerType, bool reloadable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serializerType As Type, baseSerializerType As Type, reloadable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RootDesignerSerializerAttribute(Type ^ serializerType, Type ^ baseSerializerType, bool reloadable);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute : Type * Type * bool -&gt; System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" Usage="new System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute (serializerType, baseSerializerType, reloadable)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serializerType" Type="System.Type" />
        <Parameter Name="baseSerializerType" Type="System.Type" />
        <Parameter Name="reloadable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="serializerType">
          <span data-ttu-id="acd14-122">序列化工具的資料型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-122">The data type of the serializer.</span>
          </span>
        </param>
        <param name="baseSerializerType">
          <span data-ttu-id="acd14-123">序列化工具的基底型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-123">The base type of the serializer.</span>
          </span>
          <span data-ttu-id="acd14-124">類別可包含多個序列化工具，因為它們具有不同的基底型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-124">A class can include multiple serializers as they all have different base types.</span>
          </span>
        </param>
        <param name="reloadable">
          <span data-ttu-id="acd14-125">如果序列化工具支援文件的動態重新載入，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-125">
              <see langword="true" /> if this serializer supports dynamic reloading of the document; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acd14-126">使用指定的屬性，初始化 <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-126">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute" /> class using the specified attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acd14-127">建立新的設計工具的序列化屬性。</span><span class="sxs-lookup"><span data-stu-id="acd14-127">Creates a new designer serialization attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reloadable">
      <MemberSignature Language="C#" Value="public bool Reloadable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Reloadable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reloadable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Reloadable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Reloadable : bool" Usage="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acd14-128">取得值，表示根序列化工具是否支援設計文件的重新載入，而不需先配置設計工具主應用程式 (Designer Host)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-128">Gets a value indicating whether the root serializer supports reloading of the design document without first disposing the designer host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acd14-129">如果根序列化工具支援重新載入，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-129">
              <see langword="true" /> if the root serializer supports reloading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acd14-130">如果這個屬性設定為`false`，設計文件不會自動執行代表使用者重新載入。</span><span class="sxs-lookup"><span data-stu-id="acd14-130">If this property is set to `false`, the design document does not automatically perform a reload on behalf of the user.</span></span> <span data-ttu-id="acd14-131">如果這個屬性設定為`false`，如果更新是使用者的責任重新開啟設計工具檢視視窗的設計文件，或想要重新載入。</span><span class="sxs-lookup"><span data-stu-id="acd14-131">If this property is set to `false`, it is the user's responsibility to reopen the designer view window for the design document, if an update or reload is desired.</span></span>  
  
 <span data-ttu-id="acd14-132">某些序列化程式需要以重建設計文件載入處理序在設計工具中的外部元件的互動。</span><span class="sxs-lookup"><span data-stu-id="acd14-132">Some serializers require the interaction of external components in the designer loading process in order to rebuild the design document.</span></span> <span data-ttu-id="acd14-133">這些序列化程式有時候需要每次載入設計文件時建立新的設計工具主應用程式。</span><span class="sxs-lookup"><span data-stu-id="acd14-133">These serializers sometimes need to create a new designer host each time the design document is loaded.</span></span> <span data-ttu-id="acd14-134">如果是這種情況下，<xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A>會設定為`false`，和設計工具主應用程式必須重新建立使用者互動 （啟動文件的設計工具） 之後的設計文件已處置。</span><span class="sxs-lookup"><span data-stu-id="acd14-134">If this is the situation, <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> will be set to `false`, and the designer host must be recreated by user interaction (launching the designer for the document) after the design document is disposed.</span></span> <span data-ttu-id="acd14-135">事件和服務連接到設計工具主應用程式，除了透過還原序列化時，不會保留，而且可能需要再次設定。</span><span class="sxs-lookup"><span data-stu-id="acd14-135">The events and services that were connected to the designer host, except through deserialization, do not remain and may need to be set again.</span></span> <span data-ttu-id="acd14-136">如果<xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A>是`true`，可以重新載入設計文件，在設計工具外變更後的程式碼，而不需要關閉設計工具視窗，並重新開啟它。</span><span class="sxs-lookup"><span data-stu-id="acd14-136">If <xref:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.Reloadable%2A> is `true`, the design document can be reloaded after changes outside the designer are made to the code, without closing the designer window and reopening it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializerBaseTypeName">
      <MemberSignature Language="C#" Value="public string SerializerBaseTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializerBaseTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializerBaseTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializerBaseTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializerBaseTypeName : string" Usage="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerBaseTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acd14-137">取得序列化工具基底型別的完整型別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-137">Gets the fully qualified type name of the base type of the serializer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acd14-138">序列化工具基底型別的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-138">The name of the base type of the serializer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializerTypeName">
      <MemberSignature Language="C#" Value="public string SerializerTypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerializerTypeName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializerTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SerializerTypeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializerTypeName : string" Usage="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.SerializerTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acd14-139">取得序列化工具的完整型別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-139">Gets the fully qualified type name of the serializer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acd14-140">序列化工具型別的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-140">The name of the type of the serializer.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeId">
      <MemberSignature Language="C#" Value="public override object TypeId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TypeId" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TypeId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ TypeId { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeId : obj" Usage="System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.TypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acd14-141">取得此屬性型別的唯一 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-141">Gets a unique ID for this attribute type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acd14-142">物件，包含此屬性型別的唯一 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="acd14-142">An object containing a unique ID for this attribute type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acd14-143">這個屬性供篩選演算法來識別兩個相同類型的屬性。</span><span class="sxs-lookup"><span data-stu-id="acd14-143">This property is used by filtering algorithms to identify two attributes that are the same type.</span></span> <span data-ttu-id="acd14-144">對於大部分的屬性，這只會傳回<xref:System.Type>屬性的執行個體。</span><span class="sxs-lookup"><span data-stu-id="acd14-144">For most attributes, this just returns the <xref:System.Type> instance for the attribute.</span></span> <span data-ttu-id="acd14-145"><xref:System.ComponentModel.EditorAttribute> 覆寫為包含類型的編輯器基底類型。</span><span class="sxs-lookup"><span data-stu-id="acd14-145"><xref:System.ComponentModel.EditorAttribute> overrides this to include the type of the editor base type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>