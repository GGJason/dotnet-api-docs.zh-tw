<Type Name="ComponentSerializationService" FullName="System.ComponentModel.Design.Serialization.ComponentSerializationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d887794ed82fe891a14299c38e502fd83d56b649" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58734602" /></Metadata><TypeSignature Language="C#" Value="public abstract class ComponentSerializationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ComponentSerializationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComponentSerializationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentSerializationService abstract" />
  <TypeSignature Language="F#" Value="type ComponentSerializationService = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="90bfd-101">提供基底類別，以序列化元件集合或可序列化物件至序列化存放區。</span><span class="sxs-lookup"><span data-stu-id="90bfd-101">Provides the base class for serializing a set of components or serializable objects into a serialization store.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90bfd-102"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>序列化的序列化存放區中的一組元件或可序列化的物件。</span><span class="sxs-lookup"><span data-stu-id="90bfd-102">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> serializes a set of components or serializable objects into a serialization store.</span></span> <span data-ttu-id="90bfd-103">稍後可以還原序列化存放區。</span><span class="sxs-lookup"><span data-stu-id="90bfd-103">The store can then be deserialized later.</span></span> <span data-ttu-id="90bfd-104"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>類別不同於其他序列化配置，序列化格式是不透明，並可讓部分序列化的物件。</span><span class="sxs-lookup"><span data-stu-id="90bfd-104">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> class differs from other serialization schemes in that the serialization format is opaque, and it allows for partial serialization of objects.</span></span> <span data-ttu-id="90bfd-105">例如，您可以選擇只選取的屬性的物件進行序列化。</span><span class="sxs-lookup"><span data-stu-id="90bfd-105">For example, you can choose to serialize only selected properties for an object.</span></span>  
  
 <span data-ttu-id="90bfd-106">這個類別是`abstract`。</span><span class="sxs-lookup"><span data-stu-id="90bfd-106">This class is `abstract`.</span></span> <span data-ttu-id="90bfd-107">通常<xref:System.ComponentModel.Design.Serialization.DesignerLoader>會提供這個類別的具體實作，並將它新增為服務，以其<xref:System.ComponentModel.Design.DesignSurface>。</span><span class="sxs-lookup"><span data-stu-id="90bfd-107">Typically, a <xref:System.ComponentModel.Design.Serialization.DesignerLoader> will provide a concrete implementation of this class and add it as a service to its <xref:System.ComponentModel.Design.DesignSurface>.</span></span> <span data-ttu-id="90bfd-108">這可讓以最適合他們的格式來序列化物件。</span><span class="sxs-lookup"><span data-stu-id="90bfd-108">This allows objects to be serialized in the format best suited for them.</span></span>  
  
 <span data-ttu-id="90bfd-109"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>類別取代了<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>介面從.NET Framework 1.0 版中，雖然後者會保留回溯相容性。</span><span class="sxs-lookup"><span data-stu-id="90bfd-109">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService> class replaces the <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> interface from the .NET Framework version 1.0, although the latter is retained for backward compatibility.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="90bfd-110">當您繼承自<see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />類別，您必須覆寫這個類別中的所有方法。</span><span class="sxs-lookup"><span data-stu-id="90bfd-110">When you inherit from the <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> class, you must override all the methods in this class.</span></span> <span data-ttu-id="90bfd-111">其中某些方法可擲回例外狀況，其對應的主題; 中所述強烈建議衍生類別遵循這些方針，以維護一致性的作業。</span><span class="sxs-lookup"><span data-stu-id="90bfd-111">Some of these methods were designed to throw exceptions, as documented in their corresponding topics; it is strongly recommended that derived classes follow these guidelines to maintain consistency of operation.</span></span> <span data-ttu-id="90bfd-112">如需詳細資訊，請參閱 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> 類別。</span><span class="sxs-lookup"><span data-stu-id="90bfd-112">For more information, see the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> class.</span></span></para></block>
    <altmember cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.DesignSurface" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComponentSerializationService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComponentSerializationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90bfd-113">初始化 <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="90bfd-113">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
      </Docs>
    </Member>
    <Member MemberName="CreateStore">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.Design.Serialization.SerializationStore CreateStore ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.Serialization.SerializationStore CreateStore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateStore () As SerializationStore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ComponentModel::Design::Serialization::SerializationStore ^ CreateStore();" />
      <MemberSignature Language="F#" Value="abstract member CreateStore : unit -&gt; System.ComponentModel.Design.Serialization.SerializationStore" Usage="componentSerializationService.CreateStore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.SerializationStore</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90bfd-114">建立新的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-114">Creates a new <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</span></span></summary>
        <returns><span data-ttu-id="90bfd-115">新建立的序列化存放區。</span><span class="sxs-lookup"><span data-stu-id="90bfd-115">A new created serialization store.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90bfd-116">多個物件可以序列化為相同的序列化存放區中。</span><span class="sxs-lookup"><span data-stu-id="90bfd-116">Multiple objects can be serialized into the same serialization store.</span></span> <span data-ttu-id="90bfd-117">當您完成使用存放區時，您可以呼叫其<xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A>或<xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="90bfd-117">When you are finished with the store, you can call its <xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A> or <xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A> method.</span></span> <span data-ttu-id="90bfd-118">序列化存放區一旦關閉，可以用於還原序列化，或它可以儲存至資料流。</span><span class="sxs-lookup"><span data-stu-id="90bfd-118">Once closed, a serialization store can be used for deserialization, or it can be saved into a stream.</span></span>  
  
 <span data-ttu-id="90bfd-119">序列化存放區可以傳遞給任何序列化方法，來建置一整組物件的序列化狀態。</span><span class="sxs-lookup"><span data-stu-id="90bfd-119">The serialization store can be passed to any of the various serializing methods to build up serialization state for a group of objects.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Deserialize">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="90bfd-120">還原序列化指定的存放區，以產生物件集合。</span><span class="sxs-lookup"><span data-stu-id="90bfd-120">Deserializes the given store to produce a collection of objects.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection Deserialize(class System.ComponentModel.Design.Serialization.SerializationStore store) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Deserialize (store As SerializationStore) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ICollection ^ Deserialize(System::ComponentModel::Design::Serialization::SerializationStore ^ store);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.SerializationStore -&gt; System.Collections.ICollection" Usage="componentSerializationService.Deserialize store" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="90bfd-121">要還原序列化的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-121">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to deserialize.</span></span></param>
        <summary><span data-ttu-id="90bfd-122">還原序列化指定的存放區，以產生物件集合。</span><span class="sxs-lookup"><span data-stu-id="90bfd-122">Deserializes the given store to produce a collection of objects.</span></span></summary>
        <returns><span data-ttu-id="90bfd-123">根據儲存狀態建立的物件集合。</span><span class="sxs-lookup"><span data-stu-id="90bfd-123">A collection of objects created according to the stored state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90bfd-124">這個方法會將還原序列化`store`產生其內所含的物件的集合。</span><span class="sxs-lookup"><span data-stu-id="90bfd-124">This method deserializes `store` to produce a collection of objects contained within it.</span></span> <span data-ttu-id="90bfd-125">物件會還原序列化所序列化的順序相同。</span><span class="sxs-lookup"><span data-stu-id="90bfd-125">Objects are deserialized in the same order in which they were serialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="90bfd-126"><paramref name="store" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-126"><paramref name="store" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="90bfd-127"><paramref name="store" /> 不包含序列化容器可以處理之格式的資料。</span><span class="sxs-lookup"><span data-stu-id="90bfd-127"><paramref name="store" /> does not contain data in a format the serialization container can process.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection Deserialize(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Deserialize (store As SerializationStore, container As IContainer) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ICollection ^ Deserialize(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer -&gt; System.Collections.ICollection" Usage="componentSerializationService.Deserialize (store, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="90bfd-128">要還原序列化的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-128">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to deserialize.</span></span></param>
        <param name="container"><span data-ttu-id="90bfd-129">要加入 <see cref="T:System.ComponentModel.IContainer" /> 物件的 <see cref="T:System.ComponentModel.IComponent" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-129">The <see cref="T:System.ComponentModel.IContainer" /> to which <see cref="T:System.ComponentModel.IComponent" /> objects will be added.</span></span></param>
        <summary><span data-ttu-id="90bfd-130">還原序列化指定的存放區，並使用已還原序列化的 <see cref="T:System.ComponentModel.IContainer" /> 物件填入指定的 <see cref="T:System.ComponentModel.IComponent" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-130">Deserializes the given store and populates the given <see cref="T:System.ComponentModel.IContainer" /> with deserialized <see cref="T:System.ComponentModel.IComponent" /> objects.</span></span></summary>
        <returns><span data-ttu-id="90bfd-131">根據儲存狀態建立的物件集合。</span><span class="sxs-lookup"><span data-stu-id="90bfd-131">A collection of objects created according to the stored state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90bfd-132">這個方法會將還原序列化`store`產生其內所含的物件的集合。</span><span class="sxs-lookup"><span data-stu-id="90bfd-132">This method deserializes `store` to produce a collection of objects contained within it.</span></span> <span data-ttu-id="90bfd-133">物件會還原序列化所序列化的順序相同。</span><span class="sxs-lookup"><span data-stu-id="90bfd-133">Objects are deserialized in the same order in which they were serialized.</span></span>  
  
 <span data-ttu-id="90bfd-134">建立物件，可實作<xref:System.ComponentModel.IComponent>新增至`container`。</span><span class="sxs-lookup"><span data-stu-id="90bfd-134">Created objects that implement <xref:System.ComponentModel.IComponent> are added to `container`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="90bfd-135"><paramref name="store" /> 或 <paramref name="container" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-135"><paramref name="store" /> or <paramref name="container" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="90bfd-136"><paramref name="store" /> 不包含序列化容器可以處理之格式的資料。</span><span class="sxs-lookup"><span data-stu-id="90bfd-136"><paramref name="store" /> does not contain data in a format the serialization container can process.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DeserializeTo">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="90bfd-137">還原序列化指定的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 至指定的容器中。</span><span class="sxs-lookup"><span data-stu-id="90bfd-137">Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeserializeTo">
      <MemberSignature Language="C#" Value="public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeTo (store As SerializationStore, container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeserializeTo(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="member this.DeserializeTo : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer -&gt; unit" Usage="componentSerializationService.DeserializeTo (store, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="90bfd-138">要還原序列化的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-138">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to deserialize.</span></span></param>
        <param name="container"><span data-ttu-id="90bfd-139">要加入 <see cref="T:System.ComponentModel.IComponent" /> 物件的容器。</span><span class="sxs-lookup"><span data-stu-id="90bfd-139">The container to which <see cref="T:System.ComponentModel.IComponent" /> objects will be added.</span></span></param>
        <summary><span data-ttu-id="90bfd-140">還原序列化指定的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 至指定的容器中。</span><span class="sxs-lookup"><span data-stu-id="90bfd-140">Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90bfd-141"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>方法會還原序列化`store`，但而不是產生新的物件，適用於資料存放區中的一組現有的物件取自提供的容器。</span><span class="sxs-lookup"><span data-stu-id="90bfd-141">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> method deserializes `store`, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</span></span> <span data-ttu-id="90bfd-142">如此一來，呼叫端可以事先建立物件但其認為適合。</span><span class="sxs-lookup"><span data-stu-id="90bfd-142">As a result, the caller can create in advance an object however it sees fit.</span></span> <span data-ttu-id="90bfd-143">如果物件已還原序列化的狀態，而物件的名稱不在一組現有的物件，就會建立新的物件。</span><span class="sxs-lookup"><span data-stu-id="90bfd-143">If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</span></span> <span data-ttu-id="90bfd-144">如果該物件也會實作<xref:System.ComponentModel.IComponent>，它會新增到`container`。</span><span class="sxs-lookup"><span data-stu-id="90bfd-144">If that object also implements <xref:System.ComponentModel.IComponent>, it will be added to `container`.</span></span> <span data-ttu-id="90bfd-145">在容器中的物件必須有名稱和比對的序列化存放區中要使用的現有物件的順序物件的型別。</span><span class="sxs-lookup"><span data-stu-id="90bfd-145">Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="90bfd-146"><paramref name="store" /> 或 <paramref name="container" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-146"><paramref name="store" /> or <paramref name="container" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="90bfd-147"><paramref name="store" /> 不包含序列化容器可以處理之格式的資料。</span><span class="sxs-lookup"><span data-stu-id="90bfd-147"><paramref name="store" /> does not contain data in a format the serialization container can process.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeTo">
      <MemberSignature Language="C#" Value="public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container, bool validateRecycledTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeserializeTo (store As SerializationStore, container As IContainer, validateRecycledTypes As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeserializeTo(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container, bool validateRecycledTypes);" />
      <MemberSignature Language="F#" Value="member this.DeserializeTo : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer * bool -&gt; unit" Usage="componentSerializationService.DeserializeTo (store, container, validateRecycledTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="validateRecycledTypes" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="90bfd-148">要還原序列化的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-148">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to deserialize.</span></span></param>
        <param name="container"><span data-ttu-id="90bfd-149">要加入 <see cref="T:System.ComponentModel.IComponent" /> 物件的容器。</span><span class="sxs-lookup"><span data-stu-id="90bfd-149">The container to which <see cref="T:System.ComponentModel.IComponent" /> objects will be added.</span></span></param>
        <param name="validateRecycledTypes"><span data-ttu-id="90bfd-150"><see langword="true" /> 表示保證還原序列化只會在套用至同一型別的物件時運作。</span><span class="sxs-lookup"><span data-stu-id="90bfd-150"><see langword="true" /> to guarantee that the deserialization will only work if applied to an object of the same type.</span></span></param>
        <summary><span data-ttu-id="90bfd-151">還原序列化指定的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 至指定的容器，可以選擇性地驗證回收型別。</span><span class="sxs-lookup"><span data-stu-id="90bfd-151">Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container, optionally validating recycled types.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90bfd-152"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>方法會還原序列化`store`，但而不是產生新的物件，適用於資料存放區中的一組現有的物件取自提供的容器。</span><span class="sxs-lookup"><span data-stu-id="90bfd-152">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> method deserializes `store`, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</span></span> <span data-ttu-id="90bfd-153">如此一來，呼叫端可以事先建立物件但其認為適合。</span><span class="sxs-lookup"><span data-stu-id="90bfd-153">As a result, the caller can create in advance an object however it sees fit.</span></span> <span data-ttu-id="90bfd-154">如果物件已還原序列化的狀態，而物件的名稱不在一組現有的物件，就會建立新的物件。</span><span class="sxs-lookup"><span data-stu-id="90bfd-154">If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</span></span> <span data-ttu-id="90bfd-155">如果該物件也會實作<xref:System.ComponentModel.IComponent>，它會新增到`container`。</span><span class="sxs-lookup"><span data-stu-id="90bfd-155">If that object also implements <xref:System.ComponentModel.IComponent>, it will be added to `container`.</span></span> <span data-ttu-id="90bfd-156">在容器中的物件必須有名稱和比對的序列化存放區中要使用的現有物件的順序物件的型別。</span><span class="sxs-lookup"><span data-stu-id="90bfd-156">Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="90bfd-157"><paramref name="store" /> 或 <paramref name="container" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-157"><paramref name="store" /> or <paramref name="container" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="90bfd-158"><paramref name="store" /> 不包含序列化容器可以處理之格式的資料。</span><span class="sxs-lookup"><span data-stu-id="90bfd-158"><paramref name="store" /> does not contain data in a format the serialization container can process.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="DeserializeTo">
      <MemberSignature Language="C#" Value="public abstract void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeserializeTo(class System.ComponentModel.Design.Serialization.SerializationStore store, class System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub DeserializeTo (store As SerializationStore, container As IContainer, validateRecycledTypes As Boolean, applyDefaults As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void DeserializeTo(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::ComponentModel::IContainer ^ container, bool validateRecycledTypes, bool applyDefaults);" />
      <MemberSignature Language="F#" Value="abstract member DeserializeTo : System.ComponentModel.Design.Serialization.SerializationStore * System.ComponentModel.IContainer * bool * bool -&gt; unit" Usage="componentSerializationService.DeserializeTo (store, container, validateRecycledTypes, applyDefaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="validateRecycledTypes" Type="System.Boolean" />
        <Parameter Name="applyDefaults" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="90bfd-159">要還原序列化的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-159">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to deserialize.</span></span></param>
        <param name="container"><span data-ttu-id="90bfd-160">要加入 <see cref="T:System.ComponentModel.IComponent" /> 物件的容器。</span><span class="sxs-lookup"><span data-stu-id="90bfd-160">The container to which <see cref="T:System.ComponentModel.IComponent" /> objects will be added.</span></span></param>
        <param name="validateRecycledTypes"><span data-ttu-id="90bfd-161"><see langword="true" /> 表示保證還原序列化只會在套用至同一型別的物件時運作。</span><span class="sxs-lookup"><span data-stu-id="90bfd-161"><see langword="true" /> to guarantee that the deserialization will only work if applied to an object of the same type.</span></span></param>
        <param name="applyDefaults"><span data-ttu-id="90bfd-162"><see langword="true" /> 表示應當套用預設屬性值。</span><span class="sxs-lookup"><span data-stu-id="90bfd-162"><see langword="true" /> to indicate that the default property values should be applied.</span></span></param>
        <summary><span data-ttu-id="90bfd-163">還原序列化指定的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 至指定的容器，可以選擇性地套用預設屬性值。</span><span class="sxs-lookup"><span data-stu-id="90bfd-163">Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container, optionally applying default property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90bfd-164"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>方法會還原序列化`store`，但而不是產生新的物件，適用於資料存放區中的一組現有的物件取自提供的容器。</span><span class="sxs-lookup"><span data-stu-id="90bfd-164">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> method deserializes `store`, but instead of producing new objects, it applies the data in the store to an existing set of objects that are taken from the provided container.</span></span> <span data-ttu-id="90bfd-165">如此一來，呼叫端可以事先建立物件但其認為適合。</span><span class="sxs-lookup"><span data-stu-id="90bfd-165">As a result, the caller can create in advance an object however it sees fit.</span></span> <span data-ttu-id="90bfd-166">如果物件已還原序列化的狀態，而物件的名稱不在一組現有的物件，就會建立新的物件。</span><span class="sxs-lookup"><span data-stu-id="90bfd-166">If an object has a deserialization state and the object is not named in the set of existing objects, a new object will be created.</span></span> <span data-ttu-id="90bfd-167">如果該物件也會實作<xref:System.ComponentModel.IComponent>，它會新增到`container`。</span><span class="sxs-lookup"><span data-stu-id="90bfd-167">If that object also implements <xref:System.ComponentModel.IComponent>, it will be added to `container`.</span></span> <span data-ttu-id="90bfd-168">在容器中的物件必須有名稱和比對的序列化存放區中要使用的現有物件的順序物件的型別。</span><span class="sxs-lookup"><span data-stu-id="90bfd-168">Objects in the container must have names and types that match objects in the serialization store in order for an existing object to be used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="90bfd-169"><paramref name="store" /> 或 <paramref name="container" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-169"><paramref name="store" /> or <paramref name="container" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="90bfd-170"><paramref name="store" /> 不包含序列化容器可以處理之格式的資料。</span><span class="sxs-lookup"><span data-stu-id="90bfd-170"><paramref name="store" /> does not contain data in a format the serialization container can process.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadStore">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.Design.Serialization.SerializationStore LoadStore (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.Design.Serialization.SerializationStore LoadStore(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ComponentModel::Design::Serialization::SerializationStore ^ LoadStore(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member LoadStore : System.IO.Stream -&gt; System.ComponentModel.Design.Serialization.SerializationStore" Usage="componentSerializationService.LoadStore stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.SerializationStore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="90bfd-171"><see cref="T:System.IO.Stream" />，從其中載入存放區。</span><span class="sxs-lookup"><span data-stu-id="90bfd-171">The <see cref="T:System.IO.Stream" /> from which the store will be loaded.</span></span></param>
        <summary><span data-ttu-id="90bfd-172">從資料流載入 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-172">Loads a <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> from a stream.</span></span></summary>
        <returns><span data-ttu-id="90bfd-173">新的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="90bfd-173">A new <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90bfd-174">您可以使用傳回的存放區來還原序列化物件傳遞至其中一個<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="90bfd-174">You can use the returned store to deserialize objects by passing it to one of the <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="90bfd-175"><paramref name="stream" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-175"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="90bfd-176"><paramref name="stream" /> 不包含先前呼叫 <see cref="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)" /> 儲存的資料。</span><span class="sxs-lookup"><span data-stu-id="90bfd-176"><paramref name="stream" /> does not contain data saved by a previous call to <see cref="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore" />
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract void Serialize (System.ComponentModel.Design.Serialization.SerializationStore store, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Serialize(class System.ComponentModel.Design.Serialization.SerializationStore store, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Serialize (store As SerializationStore, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Serialize(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : System.ComponentModel.Design.Serialization.SerializationStore * obj -&gt; unit" Usage="componentSerializationService.Serialize (store, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="90bfd-177"><see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />，<paramref name="value" /> 的狀態將寫入其中。</span><span class="sxs-lookup"><span data-stu-id="90bfd-177">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which the state of <paramref name="value" /> will be written.</span></span></param>
        <param name="value"><span data-ttu-id="90bfd-178">要序列化的物件。</span><span class="sxs-lookup"><span data-stu-id="90bfd-178">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="90bfd-179">序列化指定的物件至指定的 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-179">Serializes the given object to the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90bfd-180">存放區可用來將一個以上的物件序列化多次呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="90bfd-180">The store can be used to serialize more than one object by calling this method more than once.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="90bfd-181"><paramref name="store" /> 或 <paramref name="value" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-181"><paramref name="store" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="90bfd-182"><paramref name="store" /> 已關閉，或 <paramref name="store" /> 不是支援的序列化存放區類型。</span><span class="sxs-lookup"><span data-stu-id="90bfd-182"><paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store.</span></span> <span data-ttu-id="90bfd-183">請使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 傳回的存放區。</span><span class="sxs-lookup"><span data-stu-id="90bfd-183">Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize" />
      </Docs>
    </Member>
    <Member MemberName="SerializeAbsolute">
      <MemberSignature Language="C#" Value="public abstract void SerializeAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SerializeAbsolute(class System.ComponentModel.Design.Serialization.SerializationStore store, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SerializeAbsolute (store As SerializationStore, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SerializeAbsolute(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SerializeAbsolute : System.ComponentModel.Design.Serialization.SerializationStore * obj -&gt; unit" Usage="componentSerializationService.SerializeAbsolute (store, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="90bfd-184"><see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />，<paramref name="value" /> 的狀態將序列化至其中。</span><span class="sxs-lookup"><span data-stu-id="90bfd-184">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which the state of <paramref name="value" /> will be serialized.</span></span></param>
        <param name="value"><span data-ttu-id="90bfd-185">要序列化的物件。</span><span class="sxs-lookup"><span data-stu-id="90bfd-185">The object to serialize.</span></span></param>
        <summary><span data-ttu-id="90bfd-186">序列化指定的物件，因而能夠產生預設屬性值。</span><span class="sxs-lookup"><span data-stu-id="90bfd-186">Serializes the given object, accounting for default property values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90bfd-187">為透過已實作的標準序列化<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A>方法，只會序列化與不同的元件的預設狀態。</span><span class="sxs-lookup"><span data-stu-id="90bfd-187">Standard serialization, as implemented through the <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A> method, only serializes values that differ from the component's default state.</span></span> <span data-ttu-id="90bfd-188">這會提供最精簡的序列化機制，但會假設還原序列化期間，將會使用新建立的物件。</span><span class="sxs-lookup"><span data-stu-id="90bfd-188">This provides the most compact serialization mechanism but assumes that a newly created object will be used during deserialization.</span></span> <span data-ttu-id="90bfd-189">如果使用現有的物件，則產生的已還原序列化的物件不保證重複原始狀態的已序列化的物件;包含在序列化期間的預設值的屬性將不會重設回其預設值還原序列化期間。</span><span class="sxs-lookup"><span data-stu-id="90bfd-189">If an existing object is used, the resulting deserialized object is not guaranteed to duplicate the original state of the serialized object; the properties that contained default values during serialization will not be reset back to their defaults during deserialization.</span></span>  
  
 <span data-ttu-id="90bfd-190"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute%2A>方法不會使用這個快速鍵。</span><span class="sxs-lookup"><span data-stu-id="90bfd-190">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute%2A> method does not use this shortcut.</span></span> <span data-ttu-id="90bfd-191">好讓還原序列化可以還原所有物件的屬性，不論預設狀態，它會序列化的來源物件的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="90bfd-191">It serializes all properties of the source object so that deserialization can restore all the object's properties, regardless of default state.</span></span>  
  
 <span data-ttu-id="90bfd-192">因為可能會變更的順序在集合中的構成項目，是特別適用於序列化集合，這個方法。</span><span class="sxs-lookup"><span data-stu-id="90bfd-192">This method is particularly useful for serializing collections, because the order of the constituent items within the collection can change.</span></span> <span data-ttu-id="90bfd-193">在此情況下，最安全的程序來還原整個集合的原始狀態是以其原始的屬性值覆寫的所有項目。</span><span class="sxs-lookup"><span data-stu-id="90bfd-193">In this circumstance, the safest process to restore the original state of the entire collection is to overwrite all the items with all their original property values.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="90bfd-194"><paramref name="store" /> 或 <paramref name="value" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-194"><paramref name="store" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="90bfd-195"><paramref name="store" /> 已關閉，或 <paramref name="store" /> 不是支援的序列化存放區類型。</span><span class="sxs-lookup"><span data-stu-id="90bfd-195"><paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store.</span></span> <span data-ttu-id="90bfd-196">請使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 傳回的存放區。</span><span class="sxs-lookup"><span data-stu-id="90bfd-196">Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      </Docs>
    </Member>
    <Member MemberName="SerializeMember">
      <MemberSignature Language="C#" Value="public abstract void SerializeMember (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SerializeMember(class System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SerializeMember (store As SerializationStore, owningObject As Object, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SerializeMember(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ owningObject, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="abstract member SerializeMember : System.ComponentModel.Design.Serialization.SerializationStore * obj * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="componentSerializationService.SerializeMember (store, owningObject, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="90bfd-197"><see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />，<paramref name="member" /> 的狀態將序列化至其中。</span><span class="sxs-lookup"><span data-stu-id="90bfd-197">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which the state of <paramref name="member" /> will be serialized.</span></span></param>
        <param name="owningObject"><span data-ttu-id="90bfd-198">附加 <paramref name="member" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="90bfd-198">The object to which <paramref name="member" /> is attached.</span></span></param>
        <param name="member"><span data-ttu-id="90bfd-199"><see cref="T:System.ComponentModel.MemberDescriptor" />，指定要序列化的成員。</span><span class="sxs-lookup"><span data-stu-id="90bfd-199">A <see cref="T:System.ComponentModel.MemberDescriptor" /> specifying the member to serialize.</span></span></param>
        <summary><span data-ttu-id="90bfd-200">在指定的物件上將指定的成員序列化。</span><span class="sxs-lookup"><span data-stu-id="90bfd-200">Serializes the given member on the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90bfd-201"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember%2A>方法可以多次叫用來建置一份已序列化的序列化存放區中的成員相同的物件。</span><span class="sxs-lookup"><span data-stu-id="90bfd-201">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember%2A> method can be invoked multiple times for the same object to build up a list of serialized members within the serialization store.</span></span> <span data-ttu-id="90bfd-202">一般情況下，該成員應該是屬性或事件。</span><span class="sxs-lookup"><span data-stu-id="90bfd-202">In general, the member should be a property or an event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="90bfd-203"><paramref name="store" /> 或 <paramref name="value" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-203"><paramref name="store" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="90bfd-204"><paramref name="store" /> 已關閉，或 <paramref name="store" /> 不是支援的序列化存放區類型。</span><span class="sxs-lookup"><span data-stu-id="90bfd-204"><paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store.</span></span> <span data-ttu-id="90bfd-205">請使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 傳回的存放區。</span><span class="sxs-lookup"><span data-stu-id="90bfd-205">Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      </Docs>
    </Member>
    <Member MemberName="SerializeMemberAbsolute">
      <MemberSignature Language="C#" Value="public abstract void SerializeMemberAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SerializeMemberAbsolute(class System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SerializeMemberAbsolute (store As SerializationStore, owningObject As Object, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SerializeMemberAbsolute(System::ComponentModel::Design::Serialization::SerializationStore ^ store, System::Object ^ owningObject, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberSignature Language="F#" Value="abstract member SerializeMemberAbsolute : System.ComponentModel.Design.Serialization.SerializationStore * obj * System.ComponentModel.MemberDescriptor -&gt; unit" Usage="componentSerializationService.SerializeMemberAbsolute (store, owningObject, member)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="store" Type="System.ComponentModel.Design.Serialization.SerializationStore" />
        <Parameter Name="owningObject" Type="System.Object" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="store"><span data-ttu-id="90bfd-206"><see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />，<paramref name="member" /> 的狀態將序列化至其中。</span><span class="sxs-lookup"><span data-stu-id="90bfd-206">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to which the state of <paramref name="member" /> will be serialized.</span></span></param>
        <param name="owningObject"><span data-ttu-id="90bfd-207">附加 <paramref name="member" /> 的物件。</span><span class="sxs-lookup"><span data-stu-id="90bfd-207">The object to which <paramref name="member" /> is attached.</span></span></param>
        <param name="member"><span data-ttu-id="90bfd-208">要序列化的成員。</span><span class="sxs-lookup"><span data-stu-id="90bfd-208">The member to serialize.</span></span></param>
        <summary><span data-ttu-id="90bfd-209">用預設屬性值序列化指定物件上的指定成員。</span><span class="sxs-lookup"><span data-stu-id="90bfd-209">Serializes the given member on the given object, accounting for the default property value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90bfd-210"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A>方法會序列化`member`上`owningObject`，即使`member`包含預設屬性值。</span><span class="sxs-lookup"><span data-stu-id="90bfd-210">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A> method serializes the `member` on `owningObject`, even if `member` contains the default property value.</span></span>  
  
 <span data-ttu-id="90bfd-211">請注意，對於某些成員，包含預設值，並將相同的值的設定還原至該成員不同的概念。</span><span class="sxs-lookup"><span data-stu-id="90bfd-211">Note that for some members, containing the default value and restoring the setting of the same value to the member are different concepts.</span></span> <span data-ttu-id="90bfd-212">比方說，如果屬性會繼承它的值從父物件時未不設定任何本機的值，設定至屬性的值可能無法預期。</span><span class="sxs-lookup"><span data-stu-id="90bfd-212">For example, if a property inherits its value from a parent object when no local value is set, setting the value back to the property may not be what is desired.</span></span> <span data-ttu-id="90bfd-213"><xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A>方法會將此納入帳戶，並會在此情況下清除屬性的狀態。</span><span class="sxs-lookup"><span data-stu-id="90bfd-213">The <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute%2A> method takes this into account and would clear the state of the property in this case.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="90bfd-214"><paramref name="store" /> 或 <paramref name="value" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="90bfd-214"><paramref name="store" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="90bfd-215"><paramref name="store" /> 已關閉，或 <paramref name="store" /> 不是支援的序列化存放區類型。</span><span class="sxs-lookup"><span data-stu-id="90bfd-215"><paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store.</span></span> <span data-ttu-id="90bfd-216">請使用 <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" /> 傳回的存放區。</span><span class="sxs-lookup"><span data-stu-id="90bfd-216">Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)" />
        <altmember cref="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)" />
        <altmember cref="Overload:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize" />
      </Docs>
    </Member>
  </Members>
</Type>