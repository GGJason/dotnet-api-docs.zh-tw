<Type Name="BasicDesignerLoader" FullName="System.ComponentModel.Design.Serialization.BasicDesignerLoader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66ae10a1ca3df9431f8ff38d0cea63068dea5797" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30370182" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BasicDesignerLoader : System.ComponentModel.Design.Serialization.DesignerLoader, System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BasicDesignerLoader extends System.ComponentModel.Design.Serialization.DesignerLoader implements class System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BasicDesignerLoader&#xA;Inherits DesignerLoader&#xA;Implements IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public ref class BasicDesignerLoader abstract : System::ComponentModel::Design::Serialization::DesignerLoader, System::ComponentModel::Design::Serialization::IDesignerLoaderService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.DesignerLoader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerLoaderService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e4cc9-101">提供 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> 介面的實作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e4cc9-101">Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-102">A<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>是沒有任何項目與相關的持續性格式的設計工具載入器的完整實作。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-102">A <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> is a complete implementation of a designer loader without anything relating to a persistence format.</span></span> <span data-ttu-id="e4cc9-103">A<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>不會指定文字或二進位的持續性，但支援下列功能：</span><span class="sxs-lookup"><span data-stu-id="e4cc9-103">A <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> does not dictate either a text or binary persistence, but it does support the following features:</span></span>  
  
-   <span data-ttu-id="e4cc9-104">多個負載相依性。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-104">Multiple load dependencies.</span></span>  
  
-   <span data-ttu-id="e4cc9-105">在設計工具中的追蹤變更。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-105">Tracking changes within the designer.</span></span>  
  
-   <span data-ttu-id="e4cc9-106">延後重新載入閒置時間。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-106">Deferred idle-time reloading.</span></span>  
  
 <span data-ttu-id="e4cc9-107">A<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>將兩種類型的服務加入至設計工具主應用程式服務容器： 可取代的服務和服務無法取代。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-107">A <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> adds two kinds of services to the designer host’s service container: replaceable services and irreplaceable services.</span></span> <span data-ttu-id="e4cc9-108">您可以變更受保護的值來取代可取代服務<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-108">You can replace a replaceable service by changing the value of the protected <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> property.</span></span> <span data-ttu-id="e4cc9-109">您不能取代無法取代的服務，因為他們實作彼此相依。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-109">You cannot replace irreplaceable services because their implementations depend on each other.</span></span>  
  
 <span data-ttu-id="e4cc9-110">下表描述的服務所提供的預設值。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-110">The following table describes the services that are provided by default.</span></span>  
  
|<span data-ttu-id="e4cc9-111">預設的服務</span><span class="sxs-lookup"><span data-stu-id="e4cc9-111">Default Service</span></span>|<span data-ttu-id="e4cc9-112">描述</span><span class="sxs-lookup"><span data-stu-id="e4cc9-112">Description</span></span>|  
|---------------------|-----------------|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>|<span data-ttu-id="e4cc9-113">可讓設計工具載入本身閒置時所要求的物件。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-113">Allows objects to request that the designer reload itself when it is idle.</span></span> <span data-ttu-id="e4cc9-114">這是可取代的服務。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-114">This is a replaceable service.</span></span>|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>|<span data-ttu-id="e4cc9-115">用來序列化和還原序列化物件。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-115">Used to serialize and deserialize objects.</span></span> <span data-ttu-id="e4cc9-116">序列化管理員會加入做為服務，因此需要執行序列化的物件可以使用任何序列化提供者加入序列化管理員。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-116">The serialization manager is added as a service so objects that need to perform serialization can utilize any serialization providers that were added to the serialization manager.</span></span> <span data-ttu-id="e4cc9-117">這是無法取代的服務。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-117">This is an irreplaceable service.</span></span>|  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet">
      <span data-ttu-id="e4cc9-118">系統資源的完整存取權。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e4cc9-118">for full access to system resources.</span>
      </span>
      <span data-ttu-id="e4cc9-119">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />， <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e4cc9-119">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="e4cc9-120">相關聯的狀態：</span>
      <span class="sxs-lookup">
        <span data-stu-id="e4cc9-120">Associated state:</span>
      </span>
    </permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BasicDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BasicDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4cc9-121">初始化 <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-121">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public override void BeginLoad (System.ComponentModel.Design.Serialization.IDesignerLoaderHost host);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BeginLoad(class System.ComponentModel.Design.Serialization.IDesignerLoaderHost host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub BeginLoad (host As IDesignerLoaderHost)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void BeginLoad(System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="e4cc9-122">要載入的設計工具載入器主應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-122">The designer loader host to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4cc9-123">啟動載入處理序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-123">Starts the loading process.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-124">這是實作抽象的<xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-124">This is an implementation of the abstract <xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="e4cc9-125">您不需要您自己的類別中置換此方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-125">You do not need to override this method in your own class.</span></span> <span data-ttu-id="e4cc9-126"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>方法會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="e4cc9-126">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method performs the following actions:</span></span>  
  
-   <span data-ttu-id="e4cc9-127">它會驗證，在設計介面尚未載入。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-127">It verifies that the design surface has not already loaded.</span></span>  
  
-   <span data-ttu-id="e4cc9-128">在第一次呼叫時，它會將相關的服務和呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-128">On the first call, it adds relevant services and calls the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A> method.</span></span>  
  
-   <span data-ttu-id="e4cc9-129">它會呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>， <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>，和<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-129">It calls the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>, and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> methods.</span></span>  
  
 <span data-ttu-id="e4cc9-130">如果設計工具載入器服務無法從服務容器中，已移除<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>會呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A>和<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>方法，而非<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>和<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-130">If the designer loader service has not been removed from the service container, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> will call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> methods instead of the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> methods.</span></span> <span data-ttu-id="e4cc9-131">在此情況下，是要呼叫的設計工具載入器服務責任<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>和<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-131">In this situation, it is the responsibility of the designer loader service to call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> and <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e4cc9-132">
            <paramref name="host" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-132">
              <paramref name="host" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4cc9-133">設計工具已載入，或已使用其他設計工具載入器主應用程式呼叫 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-133">The designer is already loaded, or <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> has been called with a different designer loader host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4cc9-134">已處置 <paramref name="host" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-134">
              <paramref name="host" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4cc9-135">釋放 <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> 使用的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-135">Releases the resources used by the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-136">呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>方法的話，請勿清除變更至設計工具載入器。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-136">Calling the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> method does not flush changes to the designer loader.</span></span> <span data-ttu-id="e4cc9-137">如果您想要儲存變更時，呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>之前先呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-137">If you want changes to be saved, call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> before calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>.</span></span>  
  
 <span data-ttu-id="e4cc9-138"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> 使用完畢時，請呼叫 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-138">Call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.</span></span> <span data-ttu-id="e4cc9-139"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> 方法會將 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-139">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> in an unusable state.</span></span> <span data-ttu-id="e4cc9-140">在呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>，您必須釋放所有參考<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>讓記憶體回收行程可以回收記憶體的<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>所佔用。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-140">After calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> was occupying.</span></span> <span data-ttu-id="e4cc9-141">如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-141">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e4cc9-142">在您釋放最後一個 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> 參考之前，請務必呼叫 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-142">Always call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.</span></span> <span data-ttu-id="e4cc9-143">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-143">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableComponentNotification">
      <MemberSignature Language="C#" Value="protected virtual bool EnableComponentNotification (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool EnableComponentNotification(bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EnableComponentNotification (enable As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool EnableComponentNotification(bool enable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">
          <span data-ttu-id="e4cc9-144">
            <see langword="true" /> 表示透過 <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> 啟用元件告知，<see langword="false" /> 表示透過 <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> 停用元件告知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-144">
              <see langword="true" /> to enable component notification by the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />; <see langword="false" /> to disable component notification by the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4cc9-145">使用 <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" /> 啟用或停用元件告知。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-145">Enables or disables component notification with the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4cc9-146">如果在這個呼叫之前啟用元件告知，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-146">
              <see langword="true" /> if the component notification was enabled prior to this call; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4cc9-147">清除對設計工具載入器的暫止變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-147">Flushes pending changes to the designer loader.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-148">如果設計工具載入器尚未載入或未標示為已修改，<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>方法會立即傳回。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-148">If the designer loader has not been loaded or has not been marked as modified, the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> method returns immediately.</span></span> <span data-ttu-id="e4cc9-149">否則，<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>詢問要建立的序列化工作階段的序列化管理員，然後呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-149">Otherwise, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> asks the serialization manager to create a serialization session and then calls <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="e4cc9-150">服務的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-150">The <see cref="T:System.Type" /> of the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4cc9-151">取得所要求的服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-151">Gets the requested service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4cc9-152">要求的服務，如果找不到要求的服務則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-152">The requested service, or <see langword="null" /> if the requested service cannot be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-153"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService%2A> 是 helper 方法，可讓類別衍生自<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>來存取設計工具載入器主機所提供的服務。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-153"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService%2A> is a helper method that allows classes deriving from <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> to access services offered by the designer loader host.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4cc9-154">初始化服務。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-154">Initializes services.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-155"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A>第一次呼叫方法<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>叫用。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-155">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A> method is called the first time <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> is invoked.</span></span> <span data-ttu-id="e4cc9-156">此時，您可以加入至設計工具載入器主機所需的任何服務。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-156">You can add any services necessary to the designer loader host at this time.</span></span> <span data-ttu-id="e4cc9-157">基底實作可讓您新增服務的<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>提供，因此在呼叫基底實作之後，您可以取代現有的服務。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-157">The base implementation adds services that <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> provides, so after calling the base implementation you may replace existing services.</span></span> <span data-ttu-id="e4cc9-158">您必須移除您在此處新增藉由覆寫任何自訂服務<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-158">You must remove any custom services you add here by overriding <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4cc9-159">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-159">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4cc9-160">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-160">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsReloadNeeded">
      <MemberSignature Language="C#" Value="protected virtual bool IsReloadNeeded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsReloadNeeded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsReloadNeeded () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsReloadNeeded();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4cc9-161">指出是否應重新載入設計工具。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-161">Indicates whether the designer should be reloaded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4cc9-162">如果應重新載入設計工具則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-162">
              <see langword="true" /> if the designer should be reloaded; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e4cc9-163">預設的實作 (Implementation) 一定會傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-163">The default implementation always returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-164"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded%2A>一些設計工具載入器會使用方法來最佳化重新載入。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-164">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded%2A> method is used by some designer loaders to optimize reloading.</span></span> <span data-ttu-id="e4cc9-165">如果您的設計工具載入器支援智慧重新載入，就可以覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-165">This method can be overridden if your designer loader supports intelligent reloading.</span></span> <span data-ttu-id="e4cc9-166">某些設計工具載入器可以偵測其基礎的文件所做的變更，並判斷是否確實需要重新載入設計工具。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-166">Some designer loaders can detect changes made to their underlying document and determine if a reload of the designer is actually necessary.</span></span> <span data-ttu-id="e4cc9-167">如果不是，它們應該傳回`false`從這個方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-167">If not, they should return `false` from this method.</span></span> <span data-ttu-id="e4cc9-168">預設實作一定會傳回`true`，指出任何呼叫至<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A>會成功。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-168">The default implementation always returns `true`, indicating that any call to <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A> will succeed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoaderHost">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property LoaderHost As IDesignerLoaderHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ LoaderHost { System::ComponentModel::Design::Serialization::IDesignerLoaderHost ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.IDesignerLoaderHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4cc9-169">取得載入器主應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-169">Gets the loader host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4cc9-170">已傳遞至 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 方法的 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-170">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> that was passed to the <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-171">這個方法會傳回與這個設計工具載入器載入器主應用程式。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-171">This method returns the loader host that was given to this designer loader.</span></span> <span data-ttu-id="e4cc9-172">這可以是`null`如果<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>尚未呼叫，或如果此設計工具載入器已被處置。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-172">This can be `null` if <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> has not been called yet, or if this designer loader has been disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4cc9-173">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-173">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4cc9-174">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-174">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" />
      </Docs>
    </Member>
    <Member MemberName="Loading">
      <MemberSignature Language="C#" Value="public override bool Loading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loading" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Loading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Loading { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4cc9-175">取得值，指出設計工具載入器是否正在載入設計介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-175">Gets a value indicating whether the designer loader is loading the design surface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4cc9-176">如果設計工具載入器目前正在載入設計介面則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-176">
              <see langword="true" /> if the designer loader is currently loading the design surface; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-177"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>類別提供<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>，它支援載入相依性。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-177">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> class provides the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>, which supports load dependencies.</span></span> <span data-ttu-id="e4cc9-178">此屬性會接受載入相依性納入考量，並將傳回`true`如果有任何未完成的載入相依性。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-178">This property takes load dependencies into account and will return `true` if there are any outstanding load dependencies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modified">
      <MemberSignature Language="C#" Value="protected virtual bool Modified { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Modified" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property Modified As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Modified { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4cc9-179">取得或設定值，指出是否已修改設計工具。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-179">Gets or sets a value indicating whether the designer has been modified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4cc9-180">如果已修改設計工具則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-180">
              <see langword="true" /> if the designer has been modified; otherwise, <see langword="false" />,</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-181">決定是否設計工具載入器偵測到已修改的設計工具。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-181">Determines if the designer loader has detected that the designer has been modified.</span></span> <span data-ttu-id="e4cc9-182">如果這個屬性是`true`當設計工具載入器<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>呼叫方法時，設計工具載入器會呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-182">If this property is `true` when the designer loader’s <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> method is called, the designer loader will call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginLoad ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginLoad();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4cc9-183">告知設計工具載入器載入即將開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-183">Notifies the designer loader that loading is about to begin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-184"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>開始載入程序叫用方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-184">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> method is invoked to start the loading process.</span></span> <span data-ttu-id="e4cc9-185">目前載入的您應該執行任何必要的初始化。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-185">You should perform any necessary initialization for loading at this time.</span></span> <span data-ttu-id="e4cc9-186">這個方法不應該用於執行實際的負載。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-186">This method should not be used to perform the actual load.</span></span> <span data-ttu-id="e4cc9-187">預設實作會停用變更通知，並設定<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>載入。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-187">The default implementation disables change notifications and sets up the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> for loading.</span></span>  
  
 <span data-ttu-id="e4cc9-188">如果您實作<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>以提供相依負載支援，您應該呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>相依的第一個載入就會發生。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-188">If you implement <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> to provide dependent load support, you should call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> when the first dependent load occurs.</span></span> <span data-ttu-id="e4cc9-189">呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>方法之後，最後呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-189">Call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> method after the last call to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method.</span></span> <span data-ttu-id="e4cc9-190">根據預設，<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>實作<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>並會為您進行。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-190">By default, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> implements <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> and does this for you.</span></span> <span data-ttu-id="e4cc9-191">如果<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>時不可以使用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>呼叫時，<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>會直接呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-191">If <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is not available when <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> is called, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> will directly call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>.</span></span>  
  
 <span data-ttu-id="e4cc9-192">如果您提供您自己的載入器服務，或您選擇不提供載入器服務，您必須負責呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-192">If you provide your own loader service, or if you choose not to provide a loader service, you are responsible for calling this method.</span></span> <span data-ttu-id="e4cc9-193"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>方法將會自動呼叫這個，間接藉由呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A>如果<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>可用，或直接如果不是。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-193">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method will automatically call this, either indirectly by calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> if <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is available, or directly if it is not.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginUnload">
      <MemberSignature Language="C#" Value="protected virtual void OnBeginUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBeginUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBeginUnload ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBeginUnload();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4cc9-194">告知設計工具載入器卸載即將開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-194">Notifies the designer loader that unloading is about to begin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-195"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A>卸載文件設計工具載入器時，會叫用方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-195">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A> method is invoked when the designer loader is about to unload the document.</span></span>  
  
 <span data-ttu-id="e4cc9-196">文件可能會卸載，以準備進行重新載入，或如果無法載入文件。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-196">The document may be unloaded in preparation for reloading, or if the document failed to load.</span></span> <span data-ttu-id="e4cc9-197">如果您加入在特定文件 services<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>或<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>，這裡加以移除。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-197">If you added document-specific services in <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> or <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>, remove them here.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <span data-ttu-id="e4cc9-198">如果載入順利完成則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-198">
              <see langword="true" /> if the load completed successfully; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="errors">
          <span data-ttu-id="e4cc9-199">
            <see cref="T:System.Collections.ICollection" />，包含錯誤物件 (通常為例外狀況)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-199">An <see cref="T:System.Collections.ICollection" /> containing objects (usually exceptions) that were reported as errors.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4cc9-200">告知設計工具載入器已完成載入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-200">Notifies the designer loader that loading is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-201"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>完成載入時，會叫用方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-201">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> method is invoked when loading is finished.</span></span> <span data-ttu-id="e4cc9-202">它會一律呼叫，即使在載入期間擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-202">It is always called, even if an exception is thrown during loading.</span></span> <span data-ttu-id="e4cc9-203">值`successful`會設定為`true`如果載入成功，或`false`如果發生嚴重錯誤。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-203">The value of `successful` will be set to `true` if the load succeeded, or `false` if a fatal error occurred.</span></span> <span data-ttu-id="e4cc9-204">`errors`集合會包含已回報為錯誤的物件。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-204">The `errors` collection will contain objects that were reported as errors.</span></span> <span data-ttu-id="e4cc9-205">通常，這些物件是例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-205">Usually, these objects are exceptions.</span></span>  
  
 <span data-ttu-id="e4cc9-206">如果您實作<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>以提供相依負載支援，您應該呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>方法之後，最後呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-206">If you implement <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> to provide dependent load support, you should call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> method after the last call to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method.</span></span> <span data-ttu-id="e4cc9-207">根據預設，<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>實作<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>並會為您進行。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-207">By default, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> implements <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> and does this for you.</span></span> <span data-ttu-id="e4cc9-208">如果<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>時不可以使用<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>呼叫時，<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>會直接呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>之後呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-208">If <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is not available when <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> is called, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> will directly call <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> after calling <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>.</span></span>  
  
 <span data-ttu-id="e4cc9-209">完成所有相依的負載，應該呼叫這個方法由設計工具載入器服務。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-209">This method should be called by the designer loader service when all dependent loads have been completed.</span></span>  <span data-ttu-id="e4cc9-210">這會停止載入程序所起始的<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-210">This stops the loading process that was initiated by the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method.</span></span> <span data-ttu-id="e4cc9-211">如果您提供您自己的載入器服務，或您選擇不提供載入器服務，您必須負責呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-211">If you provide your own loader service, or if you choose not to provide a loader service, you are responsible for calling this method.</span></span> <span data-ttu-id="e4cc9-212"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>方法將會自動呼叫這個，間接藉由呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>方法如果<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>可用，或直接如果不是。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-212">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> method will automatically call this, either indirectly by calling the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method if <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> is available, or directly if it is not.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4cc9-213">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-213">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4cc9-214">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-214">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnModifying">
      <MemberSignature Language="C#" Value="protected virtual void OnModifying ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModifying() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModifying ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModifying();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4cc9-215">告知設計工具載入器即將修改文件的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-215">Notifies the designer loader that the state of the document is about to be modified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-216"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A>方法中呼叫元件不斷加入，或移除事件表示，在設計工具是即將修改。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-216">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A> method is called in response to a component changing, adding, or removing event which indicates that the designer is about to be modified.</span></span> <span data-ttu-id="e4cc9-217">您可以藉由覆寫這個方法實作原始程式碼控制。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-217">You can implement source code control by overriding this method.</span></span> <span data-ttu-id="e4cc9-218">呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A>並不表示<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A>稍後將屬性設定為`true`; 它只是表示要執行這項操作。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-218">A call to <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying%2A> does not mean that the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A> property will later be set to `true`; it merely indicates an intention to do so.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected abstract void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PerformFlush (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager">
          <span data-ttu-id="e4cc9-219">用於保持已載入之設計工具狀態的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-219">An <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for persisting the state of loaded designers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4cc9-220">清除對設計工具的所有變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-220">Flushes all changes to the designer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-221"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>設計工具載入器需要排清到持續性設計工具所做的變更時，會叫用方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-221">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> method is invoked when the designer loader needs to flush to persistence any changes made to the designers.</span></span> <span data-ttu-id="e4cc9-222">它會叫用呼叫的回應<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-222">It is invoked in response to a call to the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected abstract void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub PerformLoad (serializationManager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ serializationManager);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationManager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="serializationManager">
          <span data-ttu-id="e4cc9-223">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />，用於載入設計工具狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-223">An <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for loading state for the designers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4cc9-224">載入持續性的設計工具。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-224">Loads a designer from persistence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-225"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>設計工具載入器需要載入其狀態時，會叫用方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-225">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> method is invoked when the designer loader needs to load its state.</span></span> <span data-ttu-id="e4cc9-226"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> 之前，會呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-226"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> is called before the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> method.</span></span> <span data-ttu-id="e4cc9-227">您必須實作這個方法來載入設計工具的內容。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-227">You must implement this method to load the designer contents.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Docs>
    </Member>
    <Member MemberName="PropertyProvider">
      <MemberSignature Language="C#" Value="protected object PropertyProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PropertyProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Property PropertyProvider As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ PropertyProvider { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4cc9-228">取得或設定載入器正在使用之序列化管理員的屬性提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-228">Gets or sets the property provider for the serialization manager being used by the loader.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4cc9-229">其屬性要提供給序列化管理員的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-229">An object whose properties are to be provided to the serialization manager.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-230">提供的序列化管理員`Properties`自訂其特殊需要序列化的序列化程式可以讀取其主要介面上的屬性。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-230">The serialization manager provides a `Properties` property on its primary interface that can be read by serializers to customize their serialization to specific needs.</span></span> <span data-ttu-id="e4cc9-231">會檢查序列化的屬性需視使用的序列化程式類型而有所不同。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-231">The properties that are examined by the serializers vary depending on the type of serializer used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4cc9-232">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-232">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="protected void Reload (System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Reload(valuetype System.ComponentModel.Design.Serialization.BasicDesignerLoader/ReloadOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Reload (flags As BasicDesignerLoader.ReloadOptions)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Reload(System::ComponentModel::Design::Serialization::BasicDesignerLoader::ReloadOptions flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="System.ComponentModel.Design.Serialization.BasicDesignerLoader+ReloadOptions" />
      </Parameters>
      <Docs>
        <param name="flags">
          <span data-ttu-id="e4cc9-233">
            <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-233">A bitwise combination of the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4cc9-234">將設計工具的重新載入加入佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-234">Queues a reload of the designer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-235"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A>要求重新載入設計工具的設計工具載入器所叫用方法。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-235">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A> method can be invoked by the designer loader to request a reload of the designer.</span></span> <span data-ttu-id="e4cc9-236">在閒置時執行重新載入，因為這個方法不實際上會重新載入設計工具;它只佇列中的重新載入。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-236">Because reloads are performed at idle time, this method does not actually reload the designer; it just queues the reload.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" />
      </Docs>
    </Member>
    <Member MemberName="ReloadPending">
      <MemberSignature Language="C#" Value="protected bool ReloadPending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReloadPending" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReloadPending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ReloadPending { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e4cc9-237">取得值，指出是否已將重新載入加入佇列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-237">Gets a value indicating whether a reload has been queued.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e4cc9-238">如果對 <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> 的呼叫已將重新載入要求加入佇列，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-238">
              <see langword="true" />, if a call to <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> has queued a reload request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" />
      </Docs>
    </Member>
    <Member MemberName="ReportFlushErrors">
      <MemberSignature Language="C#" Value="protected virtual void ReportFlushErrors (System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReportFlushErrors(class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReportFlushErrors (errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReportFlushErrors(System::Collections::ICollection ^ errors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="errors">
          <span data-ttu-id="e4cc9-239">
            <see cref="T:System.Collections.ICollection" />，包含錯誤物件 (通常為例外狀況)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-239">An <see cref="T:System.Collections.ICollection" /> containing error objects, usually exceptions.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4cc9-240">報告清除變更時發生的錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-240">Reports errors that occurred while flushing changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-241"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A>期間會呼叫方法<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>如果清除變更時發生一個或多個錯誤。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-241">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A> method is called during <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> if one or more errors occurred while flushing changes.</span></span> <span data-ttu-id="e4cc9-242">中的值`errors`例外狀況或物件，可以是集合<xref:System.Object.ToString%2A>描述錯誤的值。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-242">The values in the `errors` collection can be exceptions or objects with <xref:System.Object.ToString%2A> values that describe the error.</span></span> <span data-ttu-id="e4cc9-243">預設實作<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A>引發集合中的最後一個例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-243">The default implementation of <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors%2A> raises the last exception in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4cc9-244">清除變更時發生一個或多個錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-244">One or more errors occurred while flushing changes.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetBaseComponentClassName">
      <MemberSignature Language="C#" Value="protected void SetBaseComponentClassName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetBaseComponentClassName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetBaseComponentClassName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetBaseComponentClassName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="e4cc9-245">字串，表示要設計之元件的完整名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-245">A string representing the full name of the component to be designed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4cc9-246">設定基底元件的完整類別名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-246">Sets the full class name of the base component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-247"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A>方法應該呼叫期間建立的元件設計工具設計的完整名稱載入。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-247">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> method should be called during loading to establish the full name of the component a designer is designing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e4cc9-248">
            <paramref name="name" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-248">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency">
      <MemberSignature Language="C#" Value="void IDesignerLoaderService.AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Sub AddLoadDependency () Implements IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency() = System::ComponentModel::Design::Serialization::IDesignerLoaderService::AddLoadDependency;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4cc9-249">將外部元件註冊為由 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> 管理之載入處理序的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-249">Registers an external component as part of the load process managed by <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-250">呼叫<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>方法一次載入處理序中參與的每個外部物件。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-250">Call the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> method once for each external object participating in the load process.</span></span> <span data-ttu-id="e4cc9-251"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>方法在載入程序的工作完成時呼叫。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-251">The <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> method is called when the work of the load process is done.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4cc9-252">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-252">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete">
      <MemberSignature Language="C#" Value="void IDesignerLoaderService.DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection) Implements IDesignerLoaderService.DependentLoadComplete" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection) = System::ComponentModel::Design::Serialization::IDesignerLoaderService::DependentLoadComplete;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <span data-ttu-id="e4cc9-253">
            <see langword="true" /> 表示載入順利完成，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-253">
              <see langword="true" /> to load successfully; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="errorCollection">
          <span data-ttu-id="e4cc9-254">
            <see cref="T:System.Collections.ICollection" />，包含載入期間發生的錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-254">An <see cref="T:System.Collections.ICollection" /> containing errors that occurred during the load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4cc9-255">表示相依載入已完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-255">Signals that a dependent load has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-256"><xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>呼叫方法來表示相依的載入作業已完成。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-256">The <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> method is called to signal that a dependent loading operation has completed.</span></span> <span data-ttu-id="e4cc9-257">呼叫<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>方法一次註冊藉由呼叫每個處理序<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>方法，已完成。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-257">Call the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> method once for every process that was registered by calling the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> method, which has already completed.</span></span>  
  
 <span data-ttu-id="e4cc9-258">如果相依載入成功，呼叫端`successful`參數`true`並傳遞空集合或`null`至`errorCollection`參數。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-258">If the dependent load succeeds, the caller sets the `successful` parameter to `true` and passes either an empty collection or `null` to the `errorCollection` parameter.</span></span> <span data-ttu-id="e4cc9-259">呼叫端相依載入發生問題，設定`successful`參數`false`，並將指出的原因或失敗的原因的例外狀況的集合傳遞`errorCollection`參數。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-259">If the dependent load encounters errors, the caller sets the `successful` parameter to `false` and passes a collection of exceptions that indicate the reason or reasons for failure to the `errorCollection` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e4cc9-260">
            <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" /> 未加入任何載入相依性，或 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-260">No load dependencies have been added by <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />, or the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="e4cc9-261">
            <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 已經處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-261">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload">
      <MemberSignature Language="C#" Value="bool IDesignerLoaderService.Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload" />
      <MemberSignature Language="VB.NET" Value="Function Reload () As Boolean Implements IDesignerLoaderService.Reload" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload() = System::ComponentModel::Design::Serialization::IDesignerLoaderService::Reload;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e4cc9-262">重新載入設計文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-262">Reloads the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e4cc9-263">如果接受重新載入要求則為 <see langword="true" />，如果載入器不允許重新載入則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4cc9-263">
              <see langword="true" /> if the reload request is accepted; <see langword="false" /> if the loader does not allow the reload.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4cc9-264">任何物件都可以呼叫<xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23Reload%2A>方法，以要求載入器重新載入設計文件。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-264">Any object can call the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23Reload%2A> method to request that the loader reload the design document.</span></span> <span data-ttu-id="e4cc9-265">如果載入器支援重新載入，而且遵守重新載入，設計工具載入器可以傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-265">If the loader supports reloading and complies with the reload, the designer loader can return `true`.</span></span> <span data-ttu-id="e4cc9-266">否則，它會傳回`false`，表示不會發生重新載入。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-266">Otherwise, it returns `false`, indicating that the reload will not occur.</span></span> <span data-ttu-id="e4cc9-267">呼叫端不能依賴立即; 發生重新載入設計工具載入器可以將這項安排其他時間，或它可以再試一次重新載入設計工具。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-267">Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload the designer at once.</span></span>  
  
 <span data-ttu-id="e4cc9-268">呼叫端可以向使用者顯示訊息，如果無法重新載入設計工具。</span><span class="sxs-lookup"><span data-stu-id="e4cc9-268">The caller can display a message to the user if the designer cannot be reloaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>