<Type Name="IDesignerLoaderService" FullName="System.ComponentModel.Design.Serialization.IDesignerLoaderService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="91be6fb648bf803bf38fa96e6ee194581f86547f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37698555" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerLoaderService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerLoaderService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerLoaderService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerLoaderService" />
  <TypeSignature Language="F#" Value="type IDesignerLoaderService = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="81bbe-101">提供可以擴充設計工具載入器的介面，支援外部元件的非同步 (Asynchronous) 載入。</span>
      <span class="sxs-lookup">
        <span data-stu-id="81bbe-101">Provides an interface that can extend a designer loader to support asynchronous loading of external components.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bbe-102">A<xref:System.ComponentModel.Design.Serialization.DesignerLoader>可以實作這個介面來管理牽涉到外部元件的設計工具載入。</span><span class="sxs-lookup"><span data-stu-id="81bbe-102">A <xref:System.ComponentModel.Design.Serialization.DesignerLoader> can implement this interface to manage designer loading that involves external components.</span></span> <span data-ttu-id="81bbe-103">此介面也可讓外部元件，若要起始重新載入設計介面的呼叫<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>。</span><span class="sxs-lookup"><span data-stu-id="81bbe-103">This interface also allows external components to initiate a reload of the design surface by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload%2A>.</span></span> <span data-ttu-id="81bbe-104">若要實作這個介面，如果不需要支援來非同步載入沒有設計工具載入器。</span><span class="sxs-lookup"><span data-stu-id="81bbe-104">A designer loader does not have to implement this interface if it does not require support for asynchronous loading.</span></span>  
  
 <span data-ttu-id="81bbe-105">設計工具載入使用的自訂實作<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>可能會發生在各種不同的方式。</span><span class="sxs-lookup"><span data-stu-id="81bbe-105">Designer loading using a custom implementation of the <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> can occur in a variety of ways.</span></span> <span data-ttu-id="81bbe-106">有時，外部元件參與在載入程序。</span><span class="sxs-lookup"><span data-stu-id="81bbe-106">Sometimes external components are involved in the loading process.</span></span> <span data-ttu-id="81bbe-107">若要加速載入具有外部相依性，設計工具載入器服務介面會提供可決定何時完成載入，並讓每個部分來表示其已完成載入的機制。</span><span class="sxs-lookup"><span data-stu-id="81bbe-107">To facilitate loading with external dependencies, the designer loader service interface provides a mechanism that determines when loading is complete and allows each portion of loading to signal that it has completed.</span></span> <span data-ttu-id="81bbe-108"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>通常會決定當載入已完成測試的計數器，會追蹤剩餘的載入相依性數目。</span><span class="sxs-lookup"><span data-stu-id="81bbe-108">The <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> typically determines when loading is complete by testing a counter that tracks the number of load dependencies remaining.</span></span> <span data-ttu-id="81bbe-109">完成負載的每一個部分時，<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>呼叫時，和服務遞減計數器。</span><span class="sxs-lookup"><span data-stu-id="81bbe-109">When each portion of the load completes, <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called, and the service decrements the counter.</span></span> <span data-ttu-id="81bbe-110">若要設定相依的載入程序的數目，請呼叫<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>針對每個呼叫的載入程序執行一次<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>何時完成其載入。</span><span class="sxs-lookup"><span data-stu-id="81bbe-110">To set the number of dependent load processes, call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each load process that calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> when its loading is complete.</span></span> <span data-ttu-id="81bbe-111">當完成最終的載入時，服務會呼叫<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A>上載入器主應用程式。</span><span class="sxs-lookup"><span data-stu-id="81bbe-111">When the final loading is complete, the service calls <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> on the loader host.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddLoadDependency">
      <MemberSignature Language="C#" Value="public void AddLoadDependency ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddLoadDependency() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLoadDependency ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLoadDependency();" />
      <MemberSignature Language="F#" Value="abstract member AddLoadDependency : unit -&gt; unit" Usage="iDesignerLoaderService.AddLoadDependency " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="81bbe-112">將外部元件登錄成由這個介面所管理之載入處理的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81bbe-112">Registers an external component as part of the load process managed by this interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bbe-113">呼叫<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>參與載入程序的每個外部物件一次。</span><span class="sxs-lookup"><span data-stu-id="81bbe-113">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> once for each external object participating in the load process.</span></span> <span data-ttu-id="81bbe-114"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> 在載入程序的工作完成時呼叫。</span><span class="sxs-lookup"><span data-stu-id="81bbe-114"><xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> is called when the work of the load process is done.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependentLoadComplete">
      <MemberSignature Language="C#" Value="public void DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DependentLoadComplete(bool successful, class System.Collections.ICollection errorCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DependentLoadComplete (successful As Boolean, errorCollection As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DependentLoadComplete(bool successful, System::Collections::ICollection ^ errorCollection);" />
      <MemberSignature Language="F#" Value="abstract member DependentLoadComplete : bool * System.Collections.ICollection -&gt; unit" Usage="iDesignerLoaderService.DependentLoadComplete (successful, errorCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errorCollection" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful">
          <span data-ttu-id="81bbe-115">如果設計工具載入成功，則為 <see langword="true" />；如果錯誤使得載入無法完成，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81bbe-115">
              <see langword="true" /> if the load of the designer is successful; <see langword="false" /> if errors prevented the load from finishing.</span>
          </span>
        </param>
        <param name="errorCollection">
          <span data-ttu-id="81bbe-116">錯誤的集合，在載入期間發生 (如果有的話)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81bbe-116">A collection of errors that occurred during the load, if any.</span>
          </span>
          <span data-ttu-id="81bbe-117">如果沒有發生錯誤，您可以傳送空集合或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81bbe-117">If no errors occurred, pass either an empty collection or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81bbe-118">表示相依載入已完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81bbe-118">Signals that a dependent load has finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bbe-119">表示相依載入作業已完成，會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="81bbe-119">This method is called to signal that a dependent loading operation has completed.</span></span> <span data-ttu-id="81bbe-120">呼叫<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>針對每個處理序所註冊的呼叫一次<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>，其中已完成。</span><span class="sxs-lookup"><span data-stu-id="81bbe-120">Call <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A> once for every process that was registered by calling <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>, which has already completed.</span></span>  
  
 <span data-ttu-id="81bbe-121">如果相依載入成功，呼叫端`successful`參數來`true`，並傳遞空集合或`null`到`errorCollection`參數。</span><span class="sxs-lookup"><span data-stu-id="81bbe-121">If the dependent load succeeds, the caller sets the `successful` parameter to `true` and passes either an empty collection or `null` to the `errorCollection` parameter.</span></span> <span data-ttu-id="81bbe-122">呼叫端相依載入發生問題，設定`successful`參數來`false`，並將指出的原因或失敗的原因的例外狀況的集合傳遞`errorCollection`參數。</span><span class="sxs-lookup"><span data-stu-id="81bbe-122">If the dependent load encounters errors, the caller sets the `successful` parameter to `false` and passes a collection of exceptions that indicate the reason or reasons for failure to the `errorCollection` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public bool Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Reload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload" />
      <MemberSignature Language="VB.NET" Value="Public Function Reload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Reload();" />
      <MemberSignature Language="F#" Value="abstract member Reload : unit -&gt; bool" Usage="iDesignerLoaderService.Reload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="81bbe-123">重新載入設計文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81bbe-123">Reloads the design document.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81bbe-124">如果接受重新載入要求，則為 <see langword="true" />；如果載入器不允許重新載入，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81bbe-124">
              <see langword="true" /> if the reload request is accepted, or <see langword="false" /> if the loader does not allow the reload.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bbe-125">載入器重新載入設計文件時，任何物件可以呼叫此方法，以要求。</span><span class="sxs-lookup"><span data-stu-id="81bbe-125">Any object can call this method to request that the loader reload the design document.</span></span> <span data-ttu-id="81bbe-126">如果載入器支援重新載入，而且符合重新載入，設計工具載入器可以傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="81bbe-126">If the loader supports reloading and complies with the reload, the designer loader can return `true`.</span></span> <span data-ttu-id="81bbe-127">否則，它會傳回`false`，表示不會發生重新載入。</span><span class="sxs-lookup"><span data-stu-id="81bbe-127">Otherwise, it returns `false`, indicating that the reload will not occur.</span></span> <span data-ttu-id="81bbe-128">呼叫端不能依賴立即; 發生重新載入設計工具載入器可以這項作業安排其他時間，或它可以嘗試重新載入一次。</span><span class="sxs-lookup"><span data-stu-id="81bbe-128">Callers cannot rely on the reload happening immediately; the designer loader can schedule this for some other time, or it can try to reload at once.</span></span>  
  
 <span data-ttu-id="81bbe-129">呼叫端可以向使用者顯示一則訊息，如果無法重新載入設計工具。</span><span class="sxs-lookup"><span data-stu-id="81bbe-129">The caller can display a message to the user if the designer cannot be reloaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>