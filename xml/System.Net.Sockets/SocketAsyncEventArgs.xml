<Type Name="SocketAsyncEventArgs" FullName="System.Net.Sockets.SocketAsyncEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ece1699e39a8ec99cc6be3559509d6c255eea04e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36473926" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SocketAsyncEventArgs : EventArgs, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SocketAsyncEventArgs extends System.EventArgs implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.SocketAsyncEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SocketAsyncEventArgs&#xA;Inherits EventArgs&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SocketAsyncEventArgs : EventArgs, IDisposable" />
  <TypeSignature Language="F#" Value="type SocketAsyncEventArgs = class&#xA;    inherit EventArgs&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="18694-101">代表非同步通訊端作業。</span>
      <span class="sxs-lookup">
        <span data-stu-id="18694-101">Represents an asynchronous socket operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-102"><xref:System.Net.Sockets.SocketAsyncEventArgs>類別是一組增強功能的一部分<xref:System.Net.Sockets.Socket?displayProperty=nameWithType>提供可供專業化的高效能通訊端應用程式的另一種非同步模式的類別。</span><span class="sxs-lookup"><span data-stu-id="18694-102">The <xref:System.Net.Sockets.SocketAsyncEventArgs> class is part of a set of enhancements to the <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> class that provide an alternative asynchronous pattern that can be used by specialized high-performance socket applications.</span></span> <span data-ttu-id="18694-103">這個類別被專為需要高效能的網路伺服器應用程式。</span><span class="sxs-lookup"><span data-stu-id="18694-103">This class was specifically designed for network server applications that require high performance.</span></span> <span data-ttu-id="18694-104">應用程式可以只使用增強的非同步模式，或只在目標區域 （例如，接收大量的資料時）。</span><span class="sxs-lookup"><span data-stu-id="18694-104">An application can use the enhanced asynchronous pattern exclusively or only in targeted hot areas (for example, when receiving large amounts of data).</span></span>  
  
 <span data-ttu-id="18694-105">這些增強功能的主要功能是在大量的非同步通訊端 I/O 期間，避免重複配置和同步處理物件。</span><span class="sxs-lookup"><span data-stu-id="18694-105">The main feature of these enhancements is the avoidance of the repeated allocation and synchronization of objects during high-volume asynchronous socket I/O.</span></span> <span data-ttu-id="18694-106">目前所實作的 Begin/End 設計模式<xref:System.Net.Sockets.Socket?displayProperty=nameWithType>類別會要求<xref:System.IAsyncResult?displayProperty=nameWithType>即將配置給每個非同步通訊端作業的物件。</span><span class="sxs-lookup"><span data-stu-id="18694-106">The Begin/End design pattern currently implemented by the <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> class requires a <xref:System.IAsyncResult?displayProperty=nameWithType> object be allocated for each asynchronous socket operation.</span></span>  
  
 <span data-ttu-id="18694-107">在新<xref:System.Net.Sockets.Socket?displayProperty=nameWithType>類別增強功能，作業會描述可重複使用的非同步通訊端<xref:System.Net.Sockets.SocketAsyncEventArgs>物件配置和維護的應用程式。</span><span class="sxs-lookup"><span data-stu-id="18694-107">In the new <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> class enhancements, asynchronous socket operations are described by reusable <xref:System.Net.Sockets.SocketAsyncEventArgs> objects allocated and maintained by the application.</span></span> <span data-ttu-id="18694-108">高效能通訊端應用程式最知道必須維持的重疊通訊端作業量。</span><span class="sxs-lookup"><span data-stu-id="18694-108">High-performance socket applications know best the amount of overlapped socket operations that must be sustained.</span></span> <span data-ttu-id="18694-109">應用程式可以視需要建立許多 <xref:System.Net.Sockets.SocketAsyncEventArgs> 物件。</span><span class="sxs-lookup"><span data-stu-id="18694-109">The application can create as many of the <xref:System.Net.Sockets.SocketAsyncEventArgs> objects that it needs.</span></span> <span data-ttu-id="18694-110">例如，如果伺服器應用程式需要 15 通訊端接受作業未完成隨時支援內送的用戶端連線比率，它可以配置可重複使用 15<xref:System.Net.Sockets.SocketAsyncEventArgs>用於此用途的物件。</span><span class="sxs-lookup"><span data-stu-id="18694-110">For example, if a server application needs to have 15 socket accept operations outstanding at all times to support incoming client connection rates, it can allocate 15 reusable <xref:System.Net.Sockets.SocketAsyncEventArgs> objects for that purpose.</span></span>  
  
 <span data-ttu-id="18694-111">以這個類別執行非同步通訊端作業的模式，包含下列步驟：</span><span class="sxs-lookup"><span data-stu-id="18694-111">The pattern for performing an asynchronous socket operation with this class consists of the following steps:</span></span>  
  
1.  <span data-ttu-id="18694-112">配置新 <xref:System.Net.Sockets.SocketAsyncEventArgs> 內容物件，或從應用程式集區取得一個可用的內容物件。</span><span class="sxs-lookup"><span data-stu-id="18694-112">Allocate a new <xref:System.Net.Sockets.SocketAsyncEventArgs> context object, or get a free one from an application pool.</span></span>  
  
2.  <span data-ttu-id="18694-113">在內容上的設定屬性的物件作業有關要執行 （完成回呼方法、 資料緩衝區，緩衝區，而且要傳送，例如資料的最大數量的位移）。</span><span class="sxs-lookup"><span data-stu-id="18694-113">Set properties on the context object to the operation about to be performed (the completion callback method, the data buffer, the offset into the buffer, and the maximum amount of data to transfer, for example).</span></span>  
  
3.  <span data-ttu-id="18694-114">呼叫適當的通訊端方法 (xxxAsync) 來啟始非同步作業。</span><span class="sxs-lookup"><span data-stu-id="18694-114">Call the appropriate socket method (xxxAsync) to initiate the asynchronous operation.</span></span>  
  
4.  <span data-ttu-id="18694-115">如果非同步通訊端方法 (xxxAsync) 會傳回 true，回呼中，查詢完成狀態的內容屬性。</span><span class="sxs-lookup"><span data-stu-id="18694-115">If the asynchronous socket method (xxxAsync) returns true, in the callback, query the context properties for completion status.</span></span>  
  
5.  <span data-ttu-id="18694-116">如果非同步通訊端方法 (xxxAsync) 會傳回 false，以同步方式完成作業。</span><span class="sxs-lookup"><span data-stu-id="18694-116">If the asynchronous socket method (xxxAsync) returns false, the operation completed synchronously.</span></span> <span data-ttu-id="18694-117">可以查詢內容屬性以取得作業結果。</span><span class="sxs-lookup"><span data-stu-id="18694-117">The context properties may be queried for the operation result.</span></span>  
  
6.  <span data-ttu-id="18694-118">重複使用內容進行另一個作業、將它放入集區，或是將它捨棄。</span><span class="sxs-lookup"><span data-stu-id="18694-118">Reuse the context for another operation, put it back in the pool, or discard it.</span></span>  
  
 <span data-ttu-id="18694-119">新的非同步通訊端作業內容物件的存留期取決於所參考的應用程式程式碼和非同步 I/O 的參考。</span><span class="sxs-lookup"><span data-stu-id="18694-119">The lifetime of the new asynchronous socket operation context object is determined by references by the application code and asynchronous I/O references.</span></span> <span data-ttu-id="18694-120">應用程式不需要在送出作為其中一個非同步通訊端作業方法的參數之後，保留對非同步通訊端作業內容物件的參考。</span><span class="sxs-lookup"><span data-stu-id="18694-120">It is not necessary for the application to retain a reference to an asynchronous socket operation context object after it is submitted as a parameter to one of the asynchronous socket operation methods.</span></span> <span data-ttu-id="18694-121">在完成回呼傳回之前，它會一直被參考。</span><span class="sxs-lookup"><span data-stu-id="18694-121">It will remain referenced until the completion callback returns.</span></span> <span data-ttu-id="18694-122">不過它的好處是保留內容的參考，如此就可以為未來的非同步通訊端作業重複使用的應用程式。</span><span class="sxs-lookup"><span data-stu-id="18694-122">However it is advantageous for the application to retain the reference to the context so that it can be reused for a future asynchronous socket operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18694-123">下列程式碼範例會實作使用的通訊端伺服器的連線邏輯<xref:System.Net.Sockets.SocketAsyncEventArgs>類別。</span><span class="sxs-lookup"><span data-stu-id="18694-123">The following code example implements the connection logic for the socket server that uses the <xref:System.Net.Sockets.SocketAsyncEventArgs> class.</span></span> <span data-ttu-id="18694-124">接受連接之後, 從用戶端讀取所有資料會都傳送回用戶端。</span><span class="sxs-lookup"><span data-stu-id="18694-124">After accepting a connection, all data read from the client is sent back to the client.</span></span> <span data-ttu-id="18694-125">讀取和回用戶端模式會繼續，直到用戶端中斷連線為止。</span><span class="sxs-lookup"><span data-stu-id="18694-125">The read and echo back to the client pattern is continued until the client disconnects.</span></span> <span data-ttu-id="18694-126">中的程式碼範例會顯示這個範例會使用 BufferManager 類別<xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-126">The BufferManager class that is used by this example is displayed in the code example for the <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="18694-127">中的程式碼範例會顯示用在此範例中的 SocketAsyncEventArgsPool 類別<xref:System.Net.Sockets.SocketAsyncEventArgs.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="18694-127">The SocketAsyncEventArgsPool class that is used in this example is displayed in the code example for the <xref:System.Net.Sockets.SocketAsyncEventArgs.%23ctor%2A> constructor.</span></span>  
  
 [!code-csharp[NCLAsyncSocketServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAsyncSocketServer/CS/AsyncSocketServer.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IAsyncResult" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
    <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketAsyncEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketAsyncEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18694-128">建立空的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-128">Creates an empty <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-129">呼叫這個建構函式之後，所有屬性都會都有其預設值：</span><span class="sxs-lookup"><span data-stu-id="18694-129">After calling this constructor all properties will have their default values:</span></span>  
  
-   <span data-ttu-id="18694-130">物件參考將會是 null</span><span class="sxs-lookup"><span data-stu-id="18694-130">Object references will be null</span></span>  
  
-   <span data-ttu-id="18694-131">屬性會傳回整數，會傳回零。</span><span class="sxs-lookup"><span data-stu-id="18694-131">Properties that return an integer will return zero.</span></span>  
  
-   <span data-ttu-id="18694-132"><xref:System.Net.Sockets.SocketAsyncEventArgs.LastOperation%2A>屬性將會等於<xref:System.Net.Sockets.SocketAsyncOperation.None>。</span><span class="sxs-lookup"><span data-stu-id="18694-132">The <xref:System.Net.Sockets.SocketAsyncEventArgs.LastOperation%2A> property will be equal to <xref:System.Net.Sockets.SocketAsyncOperation.None>.</span></span>  
  
-   <span data-ttu-id="18694-133"><xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A>屬性將會等於<xref:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread?displayProperty=nameWithType>，指定沒有旗標將會使用。</span><span class="sxs-lookup"><span data-stu-id="18694-133">The <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A> property will be equal to <xref:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread?displayProperty=nameWithType>, which specifies no flags will be used.</span></span>  
  
-   <span data-ttu-id="18694-134"><xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A>屬性將會等於<xref:System.Net.Sockets.SocketAsyncOperation.None>。</span><span class="sxs-lookup"><span data-stu-id="18694-134">The <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A> property will be equal to <xref:System.Net.Sockets.SocketAsyncOperation.None>.</span></span>  
  
 <span data-ttu-id="18694-135">呼叫端必須設定適當的屬性之前將物件傳遞至適當的非同步通訊端 (xxxAsync) 方法。</span><span class="sxs-lookup"><span data-stu-id="18694-135">The caller must set the appropriate properties prior to passing the object to the appropriate asynchronous socket (xxxAsync) method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18694-136">下列程式碼範例代表集合的可重複使用<xref:System.Net.Sockets.SocketAsyncEventArgs>物件。</span><span class="sxs-lookup"><span data-stu-id="18694-136">The following code example represents a collection of reusable <xref:System.Net.Sockets.SocketAsyncEventArgs> objects.</span></span>  
  
 [!code-csharp[NCLAsyncSocketServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAsyncSocketServer/CS/AsyncSocketServer.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="18694-137">不支援平台。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-137">The platform is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket AcceptSocket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket AcceptSocket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptSocket As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ AcceptSocket { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptSocket : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-138">取得或設定要使用的通訊端，或是已建立並且使用非同步通訊端方法接受連線的通訊端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-138">Gets or sets the socket to use or the socket created for accepting a connection with an asynchronous socket method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-139">要使用的 <see cref="T:System.Net.Sockets.Socket" />，或是已建立並且使用非同步通訊端方法接受連線的通訊端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-139">The <see cref="T:System.Net.Sockets.Socket" /> to use or the socket created for accepting a connection with an asynchronous socket method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-140">這個屬性可以用來提供已建立<xref:System.Net.Sockets.Socket>，將使用的非同步通訊端接受作業。</span><span class="sxs-lookup"><span data-stu-id="18694-140">This property can be used to provide an already created <xref:System.Net.Sockets.Socket> that will be used for an asynchronous socket accept operation.</span></span> <span data-ttu-id="18694-141">完成接受作業的詳細資訊，則表示已接受的連線通訊端。</span><span class="sxs-lookup"><span data-stu-id="18694-141">Upon completion of the accept operation, it is the socket representing the accepted connection.</span></span> <span data-ttu-id="18694-142">如果未提供 （設定為 null），然後再呼叫<xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>方法，新的通訊端將會自動建立和完成回呼，這個屬性可以存取。</span><span class="sxs-lookup"><span data-stu-id="18694-142">If not supplied (set to null) before calling the <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType> method, a new socket will be created automatically and be accessible in the completion callback with this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-143">取得要和非同步通訊端方法一起使用的資料緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-143">Gets the data buffer to use with an asynchronous socket method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-144">
            <see cref="T:System.Byte" /> 陣列，表示要和非同步通訊端方法一起使用的資料緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-144">A <see cref="T:System.Byte" /> array that represents the data buffer to use with an asynchronous socket method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-145">這個屬性會取得目前與相關聯的資料緩衝區<xref:System.Net.Sockets.SocketAsyncEventArgs>執行個體。</span><span class="sxs-lookup"><span data-stu-id="18694-145">This property gets the data buffer currently associated with the <xref:System.Net.Sockets.SocketAsyncEventArgs> instance.</span></span> <span data-ttu-id="18694-146">若要設定緩衝區，<xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A>必須使用的方法。</span><span class="sxs-lookup"><span data-stu-id="18694-146">To set the buffer, the <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A> method must be used.</span></span>  
  
 <span data-ttu-id="18694-147">這個屬性搭配<xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>，和<xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-147">This property is used with the <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, and <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="Overload:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer" />
      </Docs>
    </Member>
    <Member MemberName="BufferList">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; BufferList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; BufferList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />
      <MemberSignature Language="VB.NET" Value="Public Property BufferList As IList(Of ArraySegment(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ BufferList { System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ get(); void set(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BufferList : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.BufferList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-148">取得或設定要和非同步通訊端方法一起使用的資料緩衝區之陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-148">Gets or sets an array of data buffers to use with an asynchronous socket method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-149">
            <see cref="T:System.Collections.IList" />，表示要和非同步通訊端方法一起使用的資料緩衝區之陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-149">An <see cref="T:System.Collections.IList" /> that represents an array of data buffers to use with an asynchronous socket method.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-150">這個屬性搭配<xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>和<xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-150">This property is used with the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="18694-151">這個屬性用來提供多個緩衝區的資料傳送，或是提供多個緩衝區，用來儲存資料的非同步通訊端作業，可以傳送或接收資料。</span><span class="sxs-lookup"><span data-stu-id="18694-151">This property is used to provide multiple buffers of data to be sent or to provide multiple buffers in which to store received data for an asynchronous socket operation that can send or receive data.</span></span> <span data-ttu-id="18694-152">使用多個緩衝區<xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A>屬性受到<xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>和<xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-152">Multiple buffers using the <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> property are supported by the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="18694-153">如果<xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A>屬性設定為非 null 值，<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A>屬性必須是 null，而且會忽略<xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>和<xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-153">If the <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> property is set to a non-null value, the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property must be null and is ignored by the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="18694-154">如果<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A>已設為非 null 值，並嘗試設定<xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A>屬性設為非 null 值，會發生例外狀況。</span><span class="sxs-lookup"><span data-stu-id="18694-154">If the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> was set to a non-null value and an attempt is made to set the <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> property to a non-null value, an exception is thrown.</span></span>  
  
 <span data-ttu-id="18694-155">如果<xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A>屬性設定為非 null 值，<xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>和<xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>方法會擲回<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="18694-155">If the <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> property is set to a non-null value, the <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType> methods will throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="18694-156"><xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A>參數已忽略由<xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType>和<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-156">The <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> parameter is ignored by the <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="18694-157">Set 作業指定了不明確的緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-157">There are ambiguous buffers specified on a set operation.</span>
          </span>
          <span data-ttu-id="18694-158">如果 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 屬性設定成非 Null 值，且嘗試將 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 屬性設定為非 Null 值，就會發生這個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-158">This exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property has been set to a non-null value and an attempt was made to set the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property to a non-null value.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
      </Docs>
    </Member>
    <Member MemberName="BytesTransferred">
      <MemberSignature Language="C#" Value="public int BytesTransferred { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesTransferred" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesTransferred As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesTransferred { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesTransferred : int" Usage="System.Net.Sockets.SocketAsyncEventArgs.BytesTransferred" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-159">取得通訊端作業中所傳輸的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-159">Gets the number of bytes transferred in the socket operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-160">
            <see cref="T:System.Int32" />，內含通訊端作業中所傳輸的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-160">An <see cref="T:System.Int32" /> that contains the number of bytes transferred in the socket operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-161">這個屬性提供傳輸中的非同步通訊端作業可以接收或傳送資料位元組的數目。</span><span class="sxs-lookup"><span data-stu-id="18694-161">This property provides the number of bytes transferred in an asynchronous socket operation that can receive or send data.</span></span> <span data-ttu-id="18694-162">如果讀取作業傳回零，則遠端端點已經關閉連接。</span><span class="sxs-lookup"><span data-stu-id="18694-162">If zero is returned from a read operation, the remote end has closed the connection.</span></span>  
  
 <span data-ttu-id="18694-163">這個屬性由不含所有的非同步通訊端作業設定<xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-163">This property is set by all asynchronous socket operations except the <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.Sockets.SocketAsyncEventArgs&gt; Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.Sockets.SocketAsyncEventArgs&gt; Completed" />
      <MemberSignature Language="DocId" Value="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler(Of SocketAsyncEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::Sockets::SocketAsyncEventArgs ^&gt; ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler&lt;System.Net.Sockets.SocketAsyncEventArgs&gt; " Usage="member this.Completed : System.EventHandler&lt;System.Net.Sockets.SocketAsyncEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.Sockets.SocketAsyncEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-164">用來完成非同步作業的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-164">The event used to complete an asynchronous operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-165"><xref:System.Net.Sockets.SocketAsyncEventArgs.Completed>事件可讓用戶端應用程式來完成非同步通訊端作業。</span><span class="sxs-lookup"><span data-stu-id="18694-165">The <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed> event provides a way for client applications to complete an asynchronous socket operation.</span></span> <span data-ttu-id="18694-166">事件處理常式應該附加至事件內<xref:System.Net.Sockets.SocketAsyncEventArgs>非同步通訊端作業啟動時，執行個體，否則應用程式將無法以判斷完成作業。</span><span class="sxs-lookup"><span data-stu-id="18694-166">An event handler should be attached to the event within a <xref:System.Net.Sockets.SocketAsyncEventArgs> instance when an asynchronous socket operation is initiated, otherwise the application will not be able to determine when the operation completes.</span></span>  
  
 <span data-ttu-id="18694-167">完成回呼委派，參考<xref:System.Net.Sockets.SocketAsyncEventArgs.Completed>事件包含程式邏輯，以完成處理用戶端的非同步通訊端作業。</span><span class="sxs-lookup"><span data-stu-id="18694-167">The completion callback delegates referenced by the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed> event contains program logic to finish processing the asynchronous socket operation for the client.</span></span>  
  
 <span data-ttu-id="18694-168">當事件發出信號時，應用程式會使用<xref:System.Net.Sockets.SocketAsyncEventArgs>物件參數來取得已完成的非同步通訊端作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="18694-168">When the event is signaled, the application uses the <xref:System.Net.Sockets.SocketAsyncEventArgs> object parameter to obtain the status of the completed asynchronous socket operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectByNameError">
      <MemberSignature Language="C#" Value="public Exception ConnectByNameError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ConnectByNameError" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectByNameError As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ConnectByNameError { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectByNameError : Exception" Usage="System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-169">取得使用 <see cref="T:System.Net.DnsEndPoint" /> 時發生連接失敗的例外狀況 (Exception)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-169">Gets the exception in the case of a connection failure when a <see cref="T:System.Net.DnsEndPoint" /> was used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-170">
            <see cref="T:System.Exception" />，指出當指定 <see cref="T:System.Net.DnsEndPoint" /> 屬性的 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 條件下發生連接錯誤的原因。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-170">An <see cref="T:System.Exception" /> that indicates the cause of the connection error when a <see cref="T:System.Net.DnsEndPoint" /> was specified for the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-171">如果發生連接失敗時<xref:System.Net.DnsEndPoint>指定<xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A>屬性，<xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A>屬性會包含指出詳細的通訊端錯誤原因的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="18694-171">In the case of a connection failure when a <xref:System.Net.DnsEndPoint> was specified for the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A> property, the <xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A> property will contain the exception that indicates the detailed cause of the socket error.</span></span>  
  
 <span data-ttu-id="18694-172">當<xref:System.Net.IPEndPoint>指定<xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A>屬性和連線失敗，就會發生，<xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A>屬性會是`null`參考。</span><span class="sxs-lookup"><span data-stu-id="18694-172">When an <xref:System.Net.IPEndPoint> was specified for the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A> property and a connection failure occurs, the <xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A> property will be a `null` reference.</span></span>  
  
 <span data-ttu-id="18694-173"><xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A>屬性永遠會設定在連線失敗的情況下。</span><span class="sxs-lookup"><span data-stu-id="18694-173">The <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A> property is always set in the case of a connection failure.</span></span> <span data-ttu-id="18694-174"><xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A>屬性包含有關失敗的詳細資訊，如果它無法連接到<xref:System.Net.DnsEndPoint>。</span><span class="sxs-lookup"><span data-stu-id="18694-174">The <xref:System.Net.Sockets.SocketAsyncEventArgs.ConnectByNameError%2A> property contains more information about the failure if it was a failure connecting to a <xref:System.Net.DnsEndPoint>.</span></span> <span data-ttu-id="18694-175">如果只想要應用程式連線作業是否成功或失敗，則應用程式只需要檢查<xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="18694-175">If an application is only interested in whether the connect operation succeeded or failed, then the application only needs to check the <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.Sockets.Socket.ConnectAsync" />
      </Docs>
    </Member>
    <Member MemberName="ConnectSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket ConnectSocket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket ConnectSocket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectSocket As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ ConnectSocket { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectSocket : System.Net.Sockets.Socket" Usage="System.Net.Sockets.SocketAsyncEventArgs.ConnectSocket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-176">
            <see cref="T:System.Net.Sockets.Socket" /> 方法成功完成後已建立和連接的 <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-176">The created and connected <see cref="T:System.Net.Sockets.Socket" /> object after successful completion of the <see cref="Overload:System.Net.Sockets.Socket.ConnectAsync" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-177">連接的 <see cref="T:System.Net.Sockets.Socket" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-177">The connected <see cref="T:System.Net.Sockets.Socket" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-178">成功完成後<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法，這個屬性包含新建立且已連線<xref:System.Net.Sockets.Socket>物件。</span><span class="sxs-lookup"><span data-stu-id="18694-178">After successful completion of the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method, this property contains the newly created and connected <xref:System.Net.Sockets.Socket> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.Sockets.Socket.ConnectAsync" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Net.Sockets.SocketAsyncEventArgs.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-179">取得非同步作業中要傳送或接收的資料量上限 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-179">Gets the maximum amount of data, in bytes, to send or receive in an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-180">
            <see cref="T:System.Int32" />，內含要傳送或接收的資料量上限 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-180">An <see cref="T:System.Int32" /> that contains the maximum amount of data, in bytes, to send or receive.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-181">這個屬性由呼叫設定<xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-181">This property is set by calling the <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A> method.</span></span>  
  
 <span data-ttu-id="18694-182">這個屬性搭配<xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>，和<xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-182">This property is used with the <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, and <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="Overload:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer" />
      </Docs>
    </Member>
    <Member MemberName="DisconnectReuseSocket">
      <MemberSignature Language="C#" Value="public bool DisconnectReuseSocket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisconnectReuseSocket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket" />
      <MemberSignature Language="VB.NET" Value="Public Property DisconnectReuseSocket As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisconnectReuseSocket { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisconnectReuseSocket : bool with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-183">取得或設定值，指定在中斷連接作業後是否可以重複使用通訊端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-183">Gets or sets a value that specifies if socket can be reused after a disconnect operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-184">
            <see cref="T:System.Boolean" />，指定在中斷連接作業後是否可以重複使用通訊端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-184">A <see cref="T:System.Boolean" /> that specifies if socket can be reused after a disconnect operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-185">這個屬性用來改變行為<xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-185">This property is used to alter the behavior of <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="18694-186">如果為 true，通訊端中斷<xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType>方法可以重複使用之後中斷連線完成後續的通訊端在接受或連線作業。</span><span class="sxs-lookup"><span data-stu-id="18694-186">If true, a socket disconnected by the <xref:System.Net.Sockets.Socket.DisconnectAsync%2A?displayProperty=nameWithType> method can be reused after disconnect completion in subsequent socket accept or connect operations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="socketAsyncEventArgs.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18694-187">釋放 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 執行個體所使用的 Unmanaged 資源，並選擇性地處置 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-187">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> instance and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-188">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-188">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="18694-189">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="18694-189">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="18694-190"><xref:System.Object.Finalize%2A> 叫用`Dispose`與`disposing`設`false`。</span><span class="sxs-lookup"><span data-stu-id="18694-190"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="18694-191">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Net.Sockets.SocketAsyncEventArgs> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="18694-191">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.SocketAsyncEventArgs> references.</span></span> <span data-ttu-id="18694-192">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="18694-192">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="18694-193">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="18694-193">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="18694-194">如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="18694-194">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="18694-195">
            <para>
              <see langword="Dispose" /> 可以被其他物件呼叫多次。覆寫 <see langword="Dispose(Boolean)" /> 時，請小心不要參考到先前已在對 <see langword="Dispose" /> 的早期呼叫中被處置 (Dispose) 的物件。如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 [實作 Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)。如需有關<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱 [清理 Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) 上和 [覆寫 Finalize 方法] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-195">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SocketAsyncEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SocketAsyncEventArgs ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="socketAsyncEventArgs.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="18694-196">釋放 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 類別所使用的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-196">Frees resources used by the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-197"><xref:System.Net.Sockets.SocketAsyncEventArgs>類別完成項關閉<xref:System.Net.Sockets.SocketAsyncEventArgs>以及釋放相關聯的資源<xref:System.Net.Sockets.SocketAsyncEventArgs>。</span><span class="sxs-lookup"><span data-stu-id="18694-197">The <xref:System.Net.Sockets.SocketAsyncEventArgs> class finalizer closes the <xref:System.Net.Sockets.SocketAsyncEventArgs> and free resources associated with the <xref:System.Net.Sockets.SocketAsyncEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOperation">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketAsyncOperation LastOperation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.SocketAsyncOperation LastOperation" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.LastOperation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastOperation As SocketAsyncOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::SocketAsyncOperation LastOperation { System::Net::Sockets::SocketAsyncOperation get(); };" />
      <MemberSignature Language="F#" Value="member this.LastOperation : System.Net.Sockets.SocketAsyncOperation" Usage="System.Net.Sockets.SocketAsyncEventArgs.LastOperation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketAsyncOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-198">取得最近使用這個內容物件執行的通訊端作業類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-198">Gets the type of socket operation most recently performed with this context object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-199">
            <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> 執行個體，代表最近使用這個內容物件執行的通訊端作業類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-199">A <see cref="T:System.Net.Sockets.SocketAsyncOperation" /> instance that indicates the type of socket operation most recently performed with this context object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-200">這個屬性描述最近使用這個完成的非同步通訊端作業<xref:System.Net.Sockets.SocketAsyncEventArgs>物件。</span><span class="sxs-lookup"><span data-stu-id="18694-200">This property describes the asynchronous socket operation that was most recently completed using this <xref:System.Net.Sockets.SocketAsyncEventArgs> object.</span></span> <span data-ttu-id="18694-201">這個屬性的值將會是<xref:System.Net.Sockets.SocketAsyncOperation.None?displayProperty=nameWithType>直到<xref:System.Net.Sockets.SocketAsyncEventArgs>執行個體做為開頭的非同步通訊端作業。</span><span class="sxs-lookup"><span data-stu-id="18694-201">The value of this property will be <xref:System.Net.Sockets.SocketAsyncOperation.None?displayProperty=nameWithType> until the <xref:System.Net.Sockets.SocketAsyncEventArgs> instance is used to begin an asynchronous socket operation.</span></span> <span data-ttu-id="18694-202">這個屬性然後將設定的作業正在執行中方法會採用型別<xref:System.Net.Sockets.SocketAsyncEventArgs>做為參數。</span><span class="sxs-lookup"><span data-stu-id="18694-202">The property will then be set to the type of operation being performed in the methods that take the <xref:System.Net.Sockets.SocketAsyncEventArgs> as a parameter.</span></span> <span data-ttu-id="18694-203">這個屬性會可更容易使用多個類型的非同步通訊端作業的單一完成回呼委派。</span><span class="sxs-lookup"><span data-stu-id="18694-203">This property more easily facilitates using a single completion callback delegate for multiple kinds of asynchronous socket operations.</span></span>  
  
 <span data-ttu-id="18694-204">這個屬性就持續有效中<xref:System.Net.Sockets.SocketAsyncEventArgs>執行個體，直到<xref:System.Net.Sockets.SocketAsyncEventArgs>執行個體用於另一個非同步通訊端 (xxxAsync) 作業。</span><span class="sxs-lookup"><span data-stu-id="18694-204">This property remains valid in a <xref:System.Net.Sockets.SocketAsyncEventArgs> instance until the <xref:System.Net.Sockets.SocketAsyncEventArgs> instance is used for another asynchronous socket (xxxAsync) operation.</span></span>  
  
 <span data-ttu-id="18694-205">這個屬性是設定的所有非同步通訊端 (xxxAsync) 方法。</span><span class="sxs-lookup"><span data-stu-id="18694-205">This property is set by all asynchronous socket (xxxAsync) methods.</span></span>  
  
 <span data-ttu-id="18694-206">在呼叫非同步通訊端方法 (xxxAsync)<xref:System.Net.Sockets.Socket?displayProperty=nameWithType>類別會設定這個屬性值。</span><span class="sxs-lookup"><span data-stu-id="18694-206">Calling an asynchronous socket method (xxxAsync) on the <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> class sets this property value.</span></span> <span data-ttu-id="18694-207">這個屬性是用於與應用程式實作 SocketAsyncCallback 完成常式。</span><span class="sxs-lookup"><span data-stu-id="18694-207">This property is intended for use with the SocketAsyncCallback completion routine implemented by the application.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="T:System.Net.Sockets.SocketAsyncOperation" />
      </Docs>
    </Member>
    <Member MemberName="MemoryBuffer">
      <MemberSignature Language="C#" Value="public Memory&lt;byte&gt; MemoryBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Memory`1&lt;unsigned int8&gt; MemoryBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.MemoryBuffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemoryBuffer As Memory(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Memory&lt;System::Byte&gt; MemoryBuffer { Memory&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.MemoryBuffer : Memory&lt;byte&gt;" Usage="System.Net.Sockets.SocketAsyncEventArgs.MemoryBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Memory&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public int Offset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Offset" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Offset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Offset { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Offset : int" Usage="System.Net.Sockets.SocketAsyncEventArgs.Offset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-208">取得 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 屬性所參考之資料緩衝區中的位移 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-208">Gets the offset, in bytes, into the data buffer referenced by the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-209">
            <see cref="T:System.Int32" />，內含 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 屬性所參考之資料緩衝區中的位移 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-209">An <see cref="T:System.Int32" /> that contains the offset, in bytes, into the data buffer referenced by the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-210">這個屬性描述中的資料開始的位元組位移<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="18694-210">This property describes the starting byte offset of data in the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property.</span></span> <span data-ttu-id="18694-211">這個值由呼叫設定<xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-211">This value is set by calling the <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A> method.</span></span>  
  
 <span data-ttu-id="18694-212">這個屬性不適用於<xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="18694-212">This property does not apply to the <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A> property.</span></span>  
  
 <span data-ttu-id="18694-213">這個屬性搭配<xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>，和<xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-213">This property is used with the <xref:System.Net.Sockets.Socket.AcceptAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, and <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
      </Docs>
    </Member>
    <Member MemberName="OnCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnCompleted (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCompleted(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCompleted (e As SocketAsyncEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCompleted(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCompleted : System.Net.Sockets.SocketAsyncEventArgs -&gt; unit&#xA;override this.OnCompleted : System.Net.Sockets.SocketAsyncEventArgs -&gt; unit" Usage="socketAsyncEventArgs.OnCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="18694-214">收到信號的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-214">The event that is signaled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18694-215">代表在非同步作業完成時所呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-215">Represents a method that is called when an asynchronous operation completes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-216">這個方法不是可由使用者程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="18694-216">This method is not callable by user code.</span></span> <span data-ttu-id="18694-217">取得呼叫這個方法的內部資訊<xref:System.Net.Sockets.SocketAsyncEventArgs>物件目前的作業完成時。</span><span class="sxs-lookup"><span data-stu-id="18694-217">This method gets called by the internals of the <xref:System.Net.Sockets.SocketAsyncEventArgs> object when the current operation is complete.</span></span> <span data-ttu-id="18694-218">這個方法會用於所有的非同步通訊端 (xxxAsync) 方法。</span><span class="sxs-lookup"><span data-stu-id="18694-218">This method is used with all asynchronous socket (xxxAsync) methods.</span></span>  
  
 <span data-ttu-id="18694-219">建立繼承自一個類別的應用程式<xref:System.Net.Sockets.SocketAsyncEventArgs>可以覆寫這個方法，以連線到這個完成的通知，並清除任何它的作業已配置的資源。</span><span class="sxs-lookup"><span data-stu-id="18694-219">An application that creates a class inheriting from <xref:System.Net.Sockets.SocketAsyncEventArgs> can override this method to hook into this completion notification and clean up any resources that it allocated for the operation.</span></span> <span data-ttu-id="18694-220">預設實作只會引發<xref:System.Net.Sockets.SocketAsyncEventArgs.Completed>事件。</span><span class="sxs-lookup"><span data-stu-id="18694-220">The default implementation just raises the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed> event.</span></span>  
  
 <span data-ttu-id="18694-221">這個方法用來攔截 (hook) 做為後續的非同步通訊端作業完成回呼的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="18694-221">This method is used to hook up an event handler to be used as the completion callback for a subsequent asynchronous socket operation.</span></span> <span data-ttu-id="18694-222">呼叫者必須實作繼承自這個方法，再開始使用其中一種非同步 (xxxAsync) 方法的非同步通訊端作業至少一個回呼委派<xref:System.Net.Sockets.Socket?displayProperty=nameWithType>類別。</span><span class="sxs-lookup"><span data-stu-id="18694-222">The caller must implement at least one callback delegate inherited from this method prior to starting an asynchronous socket operation using one of the asynchronous (xxxAsync) methods on the <xref:System.Net.Sockets.Socket?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="18694-223">呼叫端的<xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A>方法可讓用戶端應用程式來完成非同步通訊端作業。</span><span class="sxs-lookup"><span data-stu-id="18694-223">The caller's <xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A> method provides a way for client applications to complete an asynchronous socket operation.</span></span> <span data-ttu-id="18694-224">起始非同步通訊端作業時，就必須實作的回呼委派。</span><span class="sxs-lookup"><span data-stu-id="18694-224">A callback delegate must be implemented when an asynchronous socket operation is initiated.</span></span> <span data-ttu-id="18694-225">完成回呼 delegate(s) 繼承自<xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A>方法必須包含程式邏輯，以完成處理用戶端的非同步通訊端作業。</span><span class="sxs-lookup"><span data-stu-id="18694-225">The completion callback delegate(s) inherited from the <xref:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted%2A> method must contain program logic to finish processing the asynchronous socket operation for the client.</span></span>  
  
 <span data-ttu-id="18694-226">非同步作業會收到信號時，應用程式使用<xref:System.Net.Sockets.SocketAsyncEventArgs>物件參數來取得已完成的非同步通訊端作業的狀態。</span><span class="sxs-lookup"><span data-stu-id="18694-226">When an asynchronous operation is signaled, the application uses the <xref:System.Net.Sockets.SocketAsyncEventArgs> object parameter to obtain status of the completed asynchronous socket operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessageFromPacketInfo">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.IPPacketInformation ReceiveMessageFromPacketInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.IPPacketInformation ReceiveMessageFromPacketInfo" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveMessageFromPacketInfo As IPPacketInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::IPPacketInformation ReceiveMessageFromPacketInfo { System::Net::Sockets::IPPacketInformation get(); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveMessageFromPacketInfo : System.Net.Sockets.IPPacketInformation" Usage="System.Net.Sockets.SocketAsyncEventArgs.ReceiveMessageFromPacketInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.IPPacketInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-227">取得接收之封包的 IP 位址和介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-227">Gets the IP address and interface of a received packet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-228">
            <see cref="T:System.Net.Sockets.IPPacketInformation" /> 執行個體，內含接收之封包的目的地 IP 位址和介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-228">An <see cref="T:System.Net.Sockets.IPPacketInformation" /> instance that contains the destination IP address and interface of a received packet.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-229">這個屬性會提供有關使用所接收的封包資訊<xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-229">This property provides information about a packet received using the <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="18694-230">這個屬性搭配<xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-230">This property is used with the <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.IPAddress" />
        <altmember cref="T:System.Net.Sockets.IPPacketInformation" />
        <altmember cref="P:System.Net.Sockets.IPPacketInformation.Address" />
        <altmember cref="P:System.Net.Sockets.IPPacketInformation.Interface" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint RemoteEndPoint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public Property RemoteEndPoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ RemoteEndPoint { System::Net::EndPoint ^ get(); void set(System::Net::EndPoint ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RemoteEndPoint : System.Net.EndPoint with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-231">取得或設定非同步作業的遠端 IP 端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-231">Gets or sets the remote IP endpoint for an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-232">
            <see cref="T:System.Net.EndPoint" />，表示非同步作業的遠端 IP 端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-232">An <see cref="T:System.Net.EndPoint" /> that represents the remote IP endpoint for an asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-233">此屬性指定遠端端點。</span><span class="sxs-lookup"><span data-stu-id="18694-233">This property specifies the remote endpoint.</span></span> <span data-ttu-id="18694-234">這個屬性可以指定要用來連接使用的遠端端點<xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-234">This property can specify the remote endpoint to which to connect using the <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="18694-235">這個屬性可以指定要使用的資料傳送至遠端端點<xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-235">This property can specify the remote endpoint to which to send data using <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="18694-236">這個屬性可以指定遠端端點從收到的資料使用<xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>或<xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-236">This property can specify the remote endpoint from which data was received using the <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType> or <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="18694-237">這個屬性所指定的遠端端點可以包括 IPv4 或 IPv6 位址。</span><span class="sxs-lookup"><span data-stu-id="18694-237">This remote endpoint specified by this property can include an IPv4 or IPv6 address.</span></span>  
  
 <span data-ttu-id="18694-238">這個屬性搭配<xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>，或<xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-238">This property is used with the <xref:System.Net.Sockets.Socket.ConnectAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A?displayProperty=nameWithType>, or <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.EndPoint" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SendPacketsElements">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SendPacketsElement[] SendPacketsElements { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.SendPacketsElement[] SendPacketsElements" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      <MemberSignature Language="VB.NET" Value="Public Property SendPacketsElements As SendPacketsElement()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Net::Sockets::SendPacketsElement ^&gt; ^ SendPacketsElements { cli::array &lt;System::Net::Sockets::SendPacketsElement ^&gt; ^ get(); void set(cli::array &lt;System::Net::Sockets::SendPacketsElement ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SendPacketsElements : System.Net.Sockets.SendPacketsElement[] with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SendPacketsElement[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-239">取得或設定要為 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法所使用的非同步作業傳送的緩衝區陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-239">Gets or sets an array of buffers to be sent for an asynchronous operation used by the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-240">
            <see cref="T:System.Net.Sockets.SendPacketsElement" /> 物件的陣列，表示要傳送的緩衝區之陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-240">An array of <see cref="T:System.Net.Sockets.SendPacketsElement" /> objects that represent an array of buffers to be sent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-241">在記憶體中的記憶體資料緩衝區一組檔案，可代表緩衝區的陣列。</span><span class="sxs-lookup"><span data-stu-id="18694-241">The array of buffers can represent a file or files in memory or a set of memory data buffers.</span></span> <span data-ttu-id="18694-242">這個屬性搭配<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-242">This property is used with the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.SendPacketsElement" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SendPacketsFlags">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TransmitFileOptions SendPacketsFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.TransmitFileOptions SendPacketsFlags" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property SendPacketsFlags As TransmitFileOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::TransmitFileOptions SendPacketsFlags { System::Net::Sockets::TransmitFileOptions get(); void set(System::Net::Sockets::TransmitFileOptions value); };" />
      <MemberSignature Language="F#" Value="member this.SendPacketsFlags : System.Net.Sockets.TransmitFileOptions with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TransmitFileOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-243">取得或設定 <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 方法所使用之非同步作業的 <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-243">Gets or sets a bitwise combination of <see cref="T:System.Net.Sockets.TransmitFileOptions" /> values for an asynchronous operation used by the <see cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-244">
            <see cref="T:System.Net.Sockets.TransmitFileOptions" />，內含要和非同步作業一起使用的值位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-244">A <see cref="T:System.Net.Sockets.TransmitFileOptions" /> that contains a bitwise combination of values that are used with an asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-245">這個屬性會指定<xref:System.Net.Sockets.TransmitFileOptions>，由<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-245">This property specifies the <xref:System.Net.Sockets.TransmitFileOptions> that are used by the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="T:System.Net.Sockets.TransmitFileOptions" />
      </Docs>
    </Member>
    <Member MemberName="SendPacketsSendSize">
      <MemberSignature Language="C#" Value="public int SendPacketsSendSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendPacketsSendSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendPacketsSendSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendPacketsSendSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendPacketsSendSize : int with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SendPacketsSendSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("unused property")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-246">取得或設定傳送作業中所使用的資料區塊大小 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-246">Gets or sets the size, in bytes, of the data block used in the send operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-247">
            <see cref="T:System.Int32" />，內含傳送作業中所使用的資料區塊大小 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-247">An <see cref="T:System.Int32" /> that contains the size, in bytes, of the data block used in the send operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-248">這個屬性設為零，可讓通訊端層，選取預設的傳送大小。</span><span class="sxs-lookup"><span data-stu-id="18694-248">Set this property to zero to let the sockets layer select a default send size.</span></span> <span data-ttu-id="18694-249">將此屬性設定為 0xFFFFFFFF 可讓呼叫端控制的大小和每個傳送要求的內容，方法是使用<xref:System.Net.Sockets.SendPacketsElement.EndOfPacket%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="18694-249">Setting this property to 0xFFFFFFFF enables the caller to control the size and content of each send request, achieved by using the <xref:System.Net.Sockets.SendPacketsElement.EndOfPacket%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="18694-250">這項功能可用於會個別傳送要求的大小限制的訊息通訊協定。</span><span class="sxs-lookup"><span data-stu-id="18694-250">This capability is useful for message protocols that place limitations on the size of individual send requests.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.SendPacketsElement.EndOfPacket" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBuffer">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="18694-251">初始化要和非同步通訊端方法一起使用的資料緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-251">Initializes the data buffer to use with an asynchronous socket method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-252">這個方法會設定<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A>屬性設為 null 和<xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A>和<xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A>屬性為零。</span><span class="sxs-lookup"><span data-stu-id="18694-252">This method sets the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property to null and the <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> and <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> properties to zero.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBuffer">
      <MemberSignature Language="C#" Value="public void SetBuffer (Memory&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBuffer(valuetype System.Memory`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Memory{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBuffer (buffer As Memory(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBuffer(Memory&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="member this.SetBuffer : Memory&lt;byte&gt; -&gt; unit" Usage="socketAsyncEventArgs.SetBuffer buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBuffer">
      <MemberSignature Language="C#" Value="public void SetBuffer (int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBuffer(int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBuffer (offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBuffer(int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.SetBuffer : int * int -&gt; unit" Usage="socketAsyncEventArgs.SetBuffer (offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="18694-253">作業開始的資料緩衝區位移 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-253">The offset, in bytes, in the data buffer where the operation starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="18694-254">緩衝區中要傳送或接收的資料量上限 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-254">The maximum amount of data, in bytes, to send or receive in the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18694-255">設定要和非同步通訊端方法一起使用的資料緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-255">Sets the data buffer to use with an asynchronous socket method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-256">`offset`和`count`參數不可為負數。</span><span class="sxs-lookup"><span data-stu-id="18694-256">The `offset` and `count` parameters can't be negative numbers.</span></span> <span data-ttu-id="18694-257">組合`offset`和`count`參數必須在範圍中的緩衝區陣列<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="18694-257">The combination of the `offset` and `count` parameters must be in bounds of the buffer array in the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property.</span></span>  
  
 <span data-ttu-id="18694-258">這個方法會設定<xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A>屬性`count`參數和<xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A>屬性`offset`參數。</span><span class="sxs-lookup"><span data-stu-id="18694-258">This method sets the <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> property to the `count` parameter and the <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> property to the `offset` parameter.</span></span> <span data-ttu-id="18694-259">如果<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A>屬性為 null，則這個方法會忽略`offset`和`count`參數和集合<xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A>和<xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A>屬性設定為 0。</span><span class="sxs-lookup"><span data-stu-id="18694-259">If the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property is null, this method ignores the `offset` and `count` parameters and sets the <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> and <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> properties to 0.</span></span>  
  
 <span data-ttu-id="18694-260">這個方法不會變更<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="18694-260">This method does not change the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="18694-261">引數超出範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-261">An argument was out of range.</span>
          </span>
          <span data-ttu-id="18694-262">如果 <paramref name="offset" /> 參數小於零或大於 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 屬性中的陣列長度，就會發生這個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-262">This exception occurs if the <paramref name="offset" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</span>
          </span>
          <span data-ttu-id="18694-263">如果 <paramref name="count" /> 參數小於零或大於 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 屬性中的陣列長度減去 <paramref name="offset" /> 參數，也會發生這個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-263">This exception also occurs if the <paramref name="count" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property minus the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
      </Docs>
    </Member>
    <Member MemberName="SetBuffer">
      <MemberSignature Language="C#" Value="public void SetBuffer (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBuffer(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBuffer (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBuffer(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.SetBuffer : byte[] * int * int -&gt; unit" Usage="socketAsyncEventArgs.SetBuffer (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="18694-264">要和非同步通訊端方法一起使用的資料緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-264">The data buffer to use with an asynchronous socket method.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="18694-265">作業開始的資料緩衝區位移 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-265">The offset, in bytes, in the data buffer where the operation starts.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="18694-266">緩衝區中要傳送或接收的資料量上限 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-266">The maximum amount of data, in bytes, to send or receive in the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="18694-267">設定要和非同步通訊端方法一起使用的資料緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-267">Sets the data buffer to use with an asynchronous socket method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-268">`offset`和`count`參數不可為負數。</span><span class="sxs-lookup"><span data-stu-id="18694-268">The `offset` and `count` parameters can't be negative numbers.</span></span> <span data-ttu-id="18694-269">組合`offset`和`count`參數必須是在中的資料陣列的界限內`buffer`參數。</span><span class="sxs-lookup"><span data-stu-id="18694-269">The combination of the `offset` and `count` parameters must be in bounds of the data array in the `buffer` parameter.</span></span>  
  
 <span data-ttu-id="18694-270">這個方法會設定 [SetBuffer 方法 (位元組\<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A > 屬性來`buffer`參數時，[SetBuffer 方法 (位元組\<xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A > 屬性來`count`參數，而 [SetBuffer 方法 (位元組\<xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A > 屬性來`offset`參數。</span><span class="sxs-lookup"><span data-stu-id="18694-270">This method sets the [SetBuffer Method (Byte\<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A> property to the `buffer` parameter, the [SetBuffer Method (Byte\<xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A> property to the `count` parameter, and the [SetBuffer Method (Byte\<xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A> property to the `offset` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18694-271">下列程式碼範例會建立單一大型緩衝區，它可以分割並指派給 [SetBuffer 方法 (位元組\<xref:System.Net.Sockets.SocketAsyncEventArgs > 物件使用與每個通訊端的 I/O 作業。</span><span class="sxs-lookup"><span data-stu-id="18694-271">The following code example creates a single large buffer which can be divided up and assigned to [SetBuffer Method (Byte\<xref:System.Net.Sockets.SocketAsyncEventArgs> objects for use with each socket I/O operation.</span></span> <span data-ttu-id="18694-272">這可用來輕易地重複使用緩衝區，並防範分割堆積記憶體。</span><span class="sxs-lookup"><span data-stu-id="18694-272">This enables buffers to be easily reused and guards against fragmenting heap memory.</span></span>  
  
 [!code-csharp[NCLAsyncSocketServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLAsyncSocketServer/CS/AsyncSocketServer.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="18694-273">指定了不明確的緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-273">There are ambiguous buffers specified.</span>
          </span>
          <span data-ttu-id="18694-274">如果 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 屬性和 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 屬性都不是 null，就會發生這個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-274">This exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property is also not null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is also not null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="18694-275">引數超出範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-275">An argument was out of range.</span>
          </span>
          <span data-ttu-id="18694-276">如果 <paramref name="offset" /> 參數小於零或大於 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 屬性中的陣列長度，就會發生這個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-276">This exception occurs if the <paramref name="offset" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property.</span>
          </span>
          <span data-ttu-id="18694-277">如果 <paramref name="count" /> 參數小於零或大於 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 屬性中的陣列長度減去 <paramref name="offset" /> 參數，也會發生這個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-277">This exception also occurs if the <paramref name="count" /> parameter is less than zero or greater than the length of the array in the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> property minus the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
      </Docs>
    </Member>
    <Member MemberName="SocketClientAccessPolicyProtocol">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketClientAccessPolicyProtocol SocketClientAccessPolicyProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.SocketClientAccessPolicyProtocol SocketClientAccessPolicyProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SocketClientAccessPolicyProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property SocketClientAccessPolicyProtocol As SocketClientAccessPolicyProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::SocketClientAccessPolicyProtocol SocketClientAccessPolicyProtocol { System::Net::Sockets::SocketClientAccessPolicyProtocol get(); void set(System::Net::Sockets::SocketClientAccessPolicyProtocol value); };" />
      <MemberSignature Language="F#" Value="member this.SocketClientAccessPolicyProtocol : System.Net.Sockets.SocketClientAccessPolicyProtocol with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SocketClientAccessPolicyProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketClientAccessPolicyProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-278">取得或設定要用來下載通訊端用戶端存取原則檔案的通訊協定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-278">Gets or sets the protocol to use to download the socket client access policy file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-279">傳回 <see cref="T:System.Net.Sockets.SocketClientAccessPolicyProtocol" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-279">Returns <see cref="T:System.Net.Sockets.SocketClientAccessPolicyProtocol" />.</span>
          </span>
          <span data-ttu-id="18694-280">要用來下載通訊端用戶端存取原則檔案的通訊協定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-280">The protocol to use to download the socket client access policy file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-281"><xref:System.Net.Sockets.SocketClientAccessPolicyProtocol>指定要下載用戶端存取原則檔案的方法。</span><span class="sxs-lookup"><span data-stu-id="18694-281">The <xref:System.Net.Sockets.SocketClientAccessPolicyProtocol> specifies the method to download a client access policy file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SocketError">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketError SocketError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.SocketError SocketError" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SocketError" />
      <MemberSignature Language="VB.NET" Value="Public Property SocketError As SocketError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::SocketError SocketError { System::Net::Sockets::SocketError get(); void set(System::Net::Sockets::SocketError value); };" />
      <MemberSignature Language="F#" Value="member this.SocketError : System.Net.Sockets.SocketError with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SocketError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketError</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-282">取得或設定非同步通訊端作業的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-282">Gets or sets the result of the asynchronous socket operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-283">
            <see cref="T:System.Net.Sockets.SocketError" />，表示非同步通訊端作業的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-283">A <see cref="T:System.Net.Sockets.SocketError" /> that represents the result of the asynchronous socket operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-284">這個屬性提供非同步通訊端作業的完成狀態。</span><span class="sxs-lookup"><span data-stu-id="18694-284">This property provides the completion status of an asynchronous socket operation.</span></span> <span data-ttu-id="18694-285">值為<xref:System.Net.Sockets.SocketError.Success?displayProperty=nameWithType>指出作業成功完成。</span><span class="sxs-lookup"><span data-stu-id="18694-285">A value of <xref:System.Net.Sockets.SocketError.Success?displayProperty=nameWithType> indicates successful completion of an operation.</span></span> <span data-ttu-id="18694-286">這個屬性主要用於應用程式的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="18694-286">This property is primarily used in an application’s event handler routine.</span></span>  
  
 <span data-ttu-id="18694-287">這個屬性適用於所有的非同步通訊端 (xxxAsync) 方法。</span><span class="sxs-lookup"><span data-stu-id="18694-287">This property is used with all of the asynchronous socket (xxxAsync) methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="T:System.Net.Sockets.SocketError" />
      </Docs>
    </Member>
    <Member MemberName="SocketFlags">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketFlags SocketFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.SocketFlags SocketFlags" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property SocketFlags As SocketFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::SocketFlags SocketFlags { System::Net::Sockets::SocketFlags get(); void set(System::Net::Sockets::SocketFlags value); };" />
      <MemberSignature Language="F#" Value="member this.SocketFlags : System.Net.Sockets.SocketFlags with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-288">取得非同步通訊端作業的結果，或設定非同步作業的行為。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-288">Gets the results of an asynchronous socket operation or sets the behavior of an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-289">
            <see cref="T:System.Net.Sockets.SocketFlags" />，表示非同步通訊端作業的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-289">A <see cref="T:System.Net.Sockets.SocketFlags" /> that represents the results of an asynchronous socket operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-290">屬性會指定的位元組合<xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType>用於非同步通訊端作業。</span><span class="sxs-lookup"><span data-stu-id="18694-290">The property specifies the bitwise combination of the <xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType> to be used for an asynchronous socket operation.</span></span>  
  
 <span data-ttu-id="18694-291">這個屬性搭配<xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>， <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>，和<xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="18694-291">This property is used with the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A?displayProperty=nameWithType>, <xref:System.Net.Sockets.Socket.SendAsync%2A?displayProperty=nameWithType>, and <xref:System.Net.Sockets.Socket.SendToAsync%2A?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
      </Docs>
    </Member>
    <Member MemberName="UserToken">
      <MemberSignature Language="C#" Value="public object UserToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserToken" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      <MemberSignature Language="VB.NET" Value="Public Property UserToken As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserToken { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserToken : obj with get, set" Usage="System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="18694-292">取得或設定與這個非同步通訊端作業相關聯的使用者或應用程式物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-292">Gets or sets a user or application object associated with this asynchronous socket operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="18694-293">物件，表示與這個非同步通訊端作業相關聯的使用者或應用程式物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="18694-293">An object that represents the user or application object associated with this asynchronous socket operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18694-294">這個屬性可以由應用程式用來與應用程式狀態物件關聯<xref:System.Net.Sockets.SocketAsyncEventArgs>物件。</span><span class="sxs-lookup"><span data-stu-id="18694-294">This property can be used by an application to associate an application state object with the <xref:System.Net.Sockets.SocketAsyncEventArgs> object.</span></span> <span data-ttu-id="18694-295">主要是這個屬性是方法，讓應用程式傳遞至應用程式的事件處理常式 （例如，非同步作業完成方法） 的狀態。</span><span class="sxs-lookup"><span data-stu-id="18694-295">Primarily, this property is a way for an application to pass state to the application’s event handler (for example, the asynchronous operation completion method).</span></span>  
  
 <span data-ttu-id="18694-296">這個屬性適用於所有的非同步通訊端 (xxxAsync) 方法。</span><span class="sxs-lookup"><span data-stu-id="18694-296">This property is used with all of the asynchronous socket (xxxAsync) methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      </Docs>
    </Member>
  </Members>
</Type>