<Type Name="Socket" FullName="System.Net.Sockets.Socket">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b15ea766eeb666bfea112acef693b7fc485e194c" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52615097" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Socket : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Socket extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.Socket" />
  <TypeSignature Language="VB.NET" Value="Public Class Socket&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Socket : IDisposable" />
  <TypeSignature Language="F#" Value="type Socket = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="3831b-101">實作 Berkeley 通訊端介面。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3831b-101">Implements the Berkeley sockets interface.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-102"><xref:System.Net.Sockets.Socket>類別提供一組豐富的方法和屬性進行網路通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-102">The <xref:System.Net.Sockets.Socket> class provides a rich set of methods and properties for network communications.</span></span> <span data-ttu-id="3831b-103"><xref:System.Net.Sockets.Socket>類別可讓您執行同步和非同步資料傳輸使用任何通訊協定中所列<xref:System.Net.Sockets.ProtocolType>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="3831b-103">The <xref:System.Net.Sockets.Socket> class allows you to perform both synchronous and asynchronous data transfer using any of the communication protocols listed in the <xref:System.Net.Sockets.ProtocolType> enumeration.</span></span>  
  
 <span data-ttu-id="3831b-104"><xref:System.Net.Sockets.Socket>類別遵循非同步方法的.NET Framework 命名模式。</span><span class="sxs-lookup"><span data-stu-id="3831b-104">The <xref:System.Net.Sockets.Socket> class follows the .NET Framework naming pattern for asynchronous methods.</span></span> <span data-ttu-id="3831b-105">例如，同步<xref:System.Net.Sockets.Socket.Receive%2A>方法對應於非同步<xref:System.Net.Sockets.Socket.BeginReceive%2A>和<xref:System.Net.Sockets.Socket.EndReceive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-105">For example, the synchronous <xref:System.Net.Sockets.Socket.Receive%2A> method corresponds to the asynchronous <xref:System.Net.Sockets.Socket.BeginReceive%2A> and <xref:System.Net.Sockets.Socket.EndReceive%2A> methods.</span></span>  
  
 <span data-ttu-id="3831b-106">如果您的應用程式只需要一個執行緒在執行期間，使用下列方法，專為同步作業模式。</span><span class="sxs-lookup"><span data-stu-id="3831b-106">If your application only requires one thread during execution, use the following methods, which are designed for synchronous operation mode.</span></span>  
  
-   <span data-ttu-id="3831b-107">如果您使用連線導向的通訊協定，例如 TCP，您的伺服器可以接聽連線使用<xref:System.Net.Sockets.Socket.Listen%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-107">If you are using a connection-oriented protocol such as TCP, your server can listen for connections using the <xref:System.Net.Sockets.Socket.Listen%2A> method.</span></span> <span data-ttu-id="3831b-108"><xref:System.Net.Sockets.Socket.Accept%2A>方法會處理任何連入連線要求，並傳回<xref:System.Net.Sockets.Socket>可用來與遠端主機通訊資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-108">The <xref:System.Net.Sockets.Socket.Accept%2A> method processes any incoming connection requests and returns a <xref:System.Net.Sockets.Socket> that you can use to communicate data with the remote host.</span></span> <span data-ttu-id="3831b-109">使用此傳回<xref:System.Net.Sockets.Socket>來呼叫<xref:System.Net.Sockets.Socket.Send%2A>或<xref:System.Net.Sockets.Socket.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-109">Use this returned <xref:System.Net.Sockets.Socket> to call the <xref:System.Net.Sockets.Socket.Send%2A> or <xref:System.Net.Sockets.Socket.Receive%2A> method.</span></span> <span data-ttu-id="3831b-110">呼叫<xref:System.Net.Sockets.Socket.Bind%2A>方法之前呼叫<xref:System.Net.Sockets.Socket.Listen%2A>方法，如果您想要指定本機 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-110">Call the <xref:System.Net.Sockets.Socket.Bind%2A> method prior to calling the <xref:System.Net.Sockets.Socket.Listen%2A> method if you want to specify the local IP address and port number.</span></span> <span data-ttu-id="3831b-111">如果您想要指派給您的 可用的連接埠基礎的服務提供者，請使用連接埠號碼為零。</span><span class="sxs-lookup"><span data-stu-id="3831b-111">Use a port number of zero if you want the underlying service provider to assign a free port for you.</span></span> <span data-ttu-id="3831b-112">如果您想要連線到接聽的主機，呼叫<xref:System.Net.Sockets.Socket.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-112">If you want to connect to a listening host, call the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="3831b-113">若要進行通訊的資料，呼叫<xref:System.Net.Sockets.Socket.Send%2A>或<xref:System.Net.Sockets.Socket.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-113">To communicate data, call the <xref:System.Net.Sockets.Socket.Send%2A> or <xref:System.Net.Sockets.Socket.Receive%2A> method.</span></span>  
  
-   <span data-ttu-id="3831b-114">如果您使用無連線的通訊協定，例如 UDP，則您不需要完全接聽連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-114">If you are using a connectionless protocol such as UDP, you do not need to listen for connections at all.</span></span> <span data-ttu-id="3831b-115">呼叫<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法，以接受任何內送的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-115">Call the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method to accept any incoming datagrams.</span></span> <span data-ttu-id="3831b-116">使用<xref:System.Net.Sockets.Socket.SendTo%2A>資料包傳送至遠端主機的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-116">Use the <xref:System.Net.Sockets.Socket.SendTo%2A> method to send datagrams to a remote host.</span></span>  
  
 <span data-ttu-id="3831b-117">若要處理執行期間使用個別執行緒的通訊，請使用下列方法，專為非同步作業模式。</span><span class="sxs-lookup"><span data-stu-id="3831b-117">To process communications using separate threads during execution, use the following methods, which are designed for asynchronous operation mode.</span></span>  
  
-   <span data-ttu-id="3831b-118">如果您使用連線導向的通訊協定，例如 TCP，使用<xref:System.Net.Sockets.Socket>， <xref:System.Net.Sockets.Socket.BeginConnect%2A>，和<xref:System.Net.Sockets.Socket.EndConnect%2A>方法來連線到接聽的主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-118">If you are using a connection-oriented protocol such as TCP, use the <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, and <xref:System.Net.Sockets.Socket.EndConnect%2A> methods to connect with a listening host.</span></span> <span data-ttu-id="3831b-119">使用<xref:System.Net.Sockets.Socket.BeginSend%2A>並<xref:System.Net.Sockets.Socket.EndSend%2A>或是<xref:System.Net.Sockets.Socket.BeginReceive%2A>和<xref:System.Net.Sockets.Socket.EndReceive%2A>方法進行非同步通訊資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-119">Use the <xref:System.Net.Sockets.Socket.BeginSend%2A> and <xref:System.Net.Sockets.Socket.EndSend%2A> or <xref:System.Net.Sockets.Socket.BeginReceive%2A> and <xref:System.Net.Sockets.Socket.EndReceive%2A> methods to communicate data asynchronously.</span></span> <span data-ttu-id="3831b-120">可以使用處理內送連接要求<xref:System.Net.Sockets.Socket.BeginAccept%2A>和<xref:System.Net.Sockets.Socket.EndAccept%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-120">Incoming connection requests can be processed using <xref:System.Net.Sockets.Socket.BeginAccept%2A> and <xref:System.Net.Sockets.Socket.EndAccept%2A>.</span></span>  
  
-   <span data-ttu-id="3831b-121">如果您使用無連線的通訊協定，例如 UDP，您可以使用<xref:System.Net.Sockets.Socket.BeginSendTo%2A>並<xref:System.Net.Sockets.Socket.EndSendTo%2A>傳送資料包，並<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>和<xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>來接收資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-121">If you are using a connectionless protocol such as UDP, you can use <xref:System.Net.Sockets.Socket.BeginSendTo%2A> and <xref:System.Net.Sockets.Socket.EndSendTo%2A> to send datagrams, and <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> and <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> to receive datagrams.</span></span>  
  
 <span data-ttu-id="3831b-122">如果您執行多個通訊端上的非同步作業時，沒有一定是在完成會在啟動的順序。</span><span class="sxs-lookup"><span data-stu-id="3831b-122">If you perform multiple asynchronous operations on a socket, they do not necessarily complete in the order in which they are started.</span></span>  
  
 <span data-ttu-id="3831b-123">當您完成傳送和接收資料，請使用<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以停用<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-123">When you are finished sending and receiving data, use the <xref:System.Net.Sockets.Socket.Shutdown%2A> method to disable the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-124">之後呼叫<xref:System.Net.Sockets.Socket.Shutdown%2A>，呼叫<xref:System.Net.Sockets.Socket.Close%2A>方法來釋放相關聯的所有資源<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-124">After calling <xref:System.Net.Sockets.Socket.Shutdown%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method to release all resources associated with the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="3831b-125"><xref:System.Net.Sockets.Socket>類別可讓您設定您<xref:System.Net.Sockets.Socket>使用<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-125">The <xref:System.Net.Sockets.Socket> class allows you to configure your <xref:System.Net.Sockets.Socket> using the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method.</span></span> <span data-ttu-id="3831b-126">擷取使用這些設定<xref:System.Net.Sockets.Socket.GetSocketOption%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-126">Retrieve these settings using the <xref:System.Net.Sockets.Socket.GetSocketOption%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-127">如果您正在撰寫相當簡單的應用程式，並不需要最大效能，請考慮使用<xref:System.Net.Sockets.TcpClient>， <xref:System.Net.Sockets.TcpListener>，和<xref:System.Net.Sockets.UdpClient>。</span><span class="sxs-lookup"><span data-stu-id="3831b-127">If you are writing a relatively simple application and do not require maximum performance, consider using <xref:System.Net.Sockets.TcpClient>, <xref:System.Net.Sockets.TcpListener>, and <xref:System.Net.Sockets.UdpClient>.</span></span> <span data-ttu-id="3831b-128">這些類別提供更簡單且更方便使用的介面來<xref:System.Net.Sockets.Socket>通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-128">These classes provide a simpler and more user-friendly interface to <xref:System.Net.Sockets.Socket> communications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-129">下列程式碼範例示範如何<xref:System.Net.Sockets.Socket>類別可用來將資料傳送至 HTTP 伺服器，並接收回應。</span><span class="sxs-lookup"><span data-stu-id="3831b-129">The following code example shows how the <xref:System.Net.Sockets.Socket> class can be used to send data to an HTTP server and receive the response.</span></span> <span data-ttu-id="3831b-130">此範例會封鎖直到收到整個頁面。</span><span class="sxs-lookup"><span data-stu-id="3831b-130">This example blocks until the entire page is received.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socket#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket/CPP/socket.cpp#1)]
 [!code-csharp[System.Net.Sockets.Socket#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket/CS/socket.cs#1)]
 [!code-vb[System.Net.Sockets.Socket#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Socket/VB/socket.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="3831b-131">若要建立傳出連線，或接受連入要求。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3831b-131">To establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <threadsafe>
      <span data-ttu-id="3831b-132">此類別的執行個體都是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3831b-132">Instances of this class are thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="N:System.Net" />
    <altmember cref="N:System.Net.Cache" />
    <altmember cref="N:System.Net.Security" />
    <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
    <related type="Article" href="~/docs/framework/network-programming/index.md">
      <span data-ttu-id="3831b-133">以 .NET Framework 進行網路程式設計</span>
      <span class="sxs-lookup">
        <span data-stu-id="3831b-133">Network Programming in the .NET Framework</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/network-programming/best-practices-for-system-net-classes.md">
      <span data-ttu-id="3831b-134">System.Net 類別的最佳作法</span>
      <span class="sxs-lookup">
        <span data-stu-id="3831b-134">Best Practices for System.Net Classes</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/network-programming/cache-management-for-network-applications.md">
      <span data-ttu-id="3831b-135">網路應用程式的快取管理</span>
      <span class="sxs-lookup">
        <span data-stu-id="3831b-135">Cache Management for Network Applications</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/network-programming/internet-protocol-version-6.md">
      <span data-ttu-id="3831b-136">網際網路通訊協定第 6 版</span>
      <span class="sxs-lookup">
        <span data-stu-id="3831b-136">Internet Protocol Version 6</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/network-programming/network-programming-samples.md">
      <span data-ttu-id="3831b-137">網路程式設計範例</span>
      <span class="sxs-lookup">
        <span data-stu-id="3831b-137">Network Programming Samples</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/network-programming/network-tracing.md">
      <span data-ttu-id="3831b-138">以 .NET Framework 進行網路追蹤</span>
      <span class="sxs-lookup">
        <span data-stu-id="3831b-138">Network Tracing in the .NET Framework</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/network-programming/security-in-network-programming.md">
      <span data-ttu-id="3831b-139">網路程式設計的安全性</span>
      <span class="sxs-lookup">
        <span data-stu-id="3831b-139">Security in Network Programming</span>
      </span>
    </related>
    <related type="Article" href="~/docs/framework/network-programming/socket-performance-enhancements-in-version-3-5.md">
      <span data-ttu-id="3831b-140">3.5 版中的通訊端效能增強功能</span>
      <span class="sxs-lookup">
        <span data-stu-id="3831b-140">Socket Performance Enhancements in Version 3.5</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-141">初始化 <see cref="T:System.Net.Sockets.Socket" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-141">Initializes a new instance of the <see cref="T:System.Net.Sockets.Socket" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (System.Net.Sockets.SocketInformation socketInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.SocketInformation socketInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketInformation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Socket(System::Net::Sockets::SocketInformation socketInformation);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.Socket : System.Net.Sockets.SocketInformation -&gt; System.Net.Sockets.Socket" Usage="new System.Net.Sockets.Socket socketInformation" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socketInformation" Type="System.Net.Sockets.SocketInformation" />
      </Parameters>
      <Docs>
        <param name="socketInformation">
          <span data-ttu-id="3831b-142">
            <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" /> 傳回的通訊端資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-142">The socket information returned by <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-143">使用從 <see cref="T:System.Net.Sockets.Socket" /> 傳回的指定值，初始化 <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-143">Initializes a new instance of the <see cref="T:System.Net.Sockets.Socket" /> class using the specified value returned from <see cref="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-144">如果您呼叫<xref:System.Net.Sockets.Socket.%23ctor%2A>多次使用相同的位元組陣列，為每個呼叫的引數的建構函式，您將建立受管理的多個<xref:System.Net.Sockets.Socket>秒，使用相同的基礎通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-144">If you call the <xref:System.Net.Sockets.Socket.%23ctor%2A> constructor multiple times with the same byte array as the argument for each call, you will create multiple managed <xref:System.Net.Sockets.Socket>s with the same underlying socket.</span></span> <span data-ttu-id="3831b-145">這種做法不鼓勵。</span><span class="sxs-lookup"><span data-stu-id="3831b-145">This practice is strongly discouraged.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (System.Net.Sockets.SocketType socketType, System.Net.Sockets.ProtocolType protocolType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.SocketType socketType, valuetype System.Net.Sockets.ProtocolType protocolType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Socket(System::Net::Sockets::SocketType socketType, System::Net::Sockets::ProtocolType protocolType);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.Socket : System.Net.Sockets.SocketType * System.Net.Sockets.ProtocolType -&gt; System.Net.Sockets.Socket" Usage="new System.Net.Sockets.Socket (socketType, protocolType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socketType" Type="System.Net.Sockets.SocketType" />
        <Parameter Name="protocolType" Type="System.Net.Sockets.ProtocolType" />
      </Parameters>
      <Docs>
        <param name="socketType">
          <span data-ttu-id="3831b-146">其中一個 <see cref="T:System.Net.Sockets.SocketType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-146">One of the <see cref="T:System.Net.Sockets.SocketType" /> values.</span>
          </span>
        </param>
        <param name="protocolType">
          <span data-ttu-id="3831b-147">其中一個 <see cref="T:System.Net.Sockets.ProtocolType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-147">One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-148">使用指定的通訊端類型和通訊協定，初始化 <see cref="T:System.Net.Sockets.Socket" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-148">Initializes a new instance of the <see cref="T:System.Net.Sockets.Socket" /> class using the specified socket type and protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-149">`socketType`參數指定的型別<xref:System.Net.Sockets.Socket>類別和`protocolType`參數指定所使用的通訊協定<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-149">The `socketType` parameter specifies the type of the <xref:System.Net.Sockets.Socket> class and the `protocolType` parameter specifies the protocol used by <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-150">兩個參數不是獨立的。</span><span class="sxs-lookup"><span data-stu-id="3831b-150">The two parameters are not independent.</span></span> <span data-ttu-id="3831b-151">通常<xref:System.Net.Sockets.Socket>類型是隱含的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-151">Often the <xref:System.Net.Sockets.Socket> type is implicit in the protocol.</span></span> <span data-ttu-id="3831b-152">如果的組合<xref:System.Net.Sockets.Socket>類型和通訊協定的結果則會在無效的類型<xref:System.Net.Sockets.Socket>，這個建構函式會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-152">If the combination of <xref:System.Net.Sockets.Socket> type and protocol type results in an invalid <xref:System.Net.Sockets.Socket>, this constructor throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-153">如果這個建構函式會擲回<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-153">If this constructor throws a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-154">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-154">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-155">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-155">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-156">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-156">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-157">
            <paramref name="socketType" /> 和 <paramref name="protocolType" /> 組合產生無效通訊端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-157">The combination of  <paramref name="socketType" /> and <paramref name="protocolType" /> results in an invalid socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Socket (System.Net.Sockets.AddressFamily addressFamily, System.Net.Sockets.SocketType socketType, System.Net.Sockets.ProtocolType protocolType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily addressFamily, valuetype System.Net.Sockets.SocketType socketType, valuetype System.Net.Sockets.ProtocolType protocolType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.#ctor(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Socket(System::Net::Sockets::AddressFamily addressFamily, System::Net::Sockets::SocketType socketType, System::Net::Sockets::ProtocolType protocolType);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.Socket : System.Net.Sockets.AddressFamily * System.Net.Sockets.SocketType * System.Net.Sockets.ProtocolType -&gt; System.Net.Sockets.Socket" Usage="new System.Net.Sockets.Socket (addressFamily, socketType, protocolType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="addressFamily" Type="System.Net.Sockets.AddressFamily" />
        <Parameter Name="socketType" Type="System.Net.Sockets.SocketType" />
        <Parameter Name="protocolType" Type="System.Net.Sockets.ProtocolType" />
      </Parameters>
      <Docs>
        <param name="addressFamily">
          <span data-ttu-id="3831b-158">其中一個 <see cref="T:System.Net.Sockets.AddressFamily" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-158">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values.</span>
          </span>
        </param>
        <param name="socketType">
          <span data-ttu-id="3831b-159">其中一個 <see cref="T:System.Net.Sockets.SocketType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-159">One of the <see cref="T:System.Net.Sockets.SocketType" /> values.</span>
          </span>
        </param>
        <param name="protocolType">
          <span data-ttu-id="3831b-160">其中一個 <see cref="T:System.Net.Sockets.ProtocolType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-160">One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-161">使用指定的通訊協定家族 (Family)、通訊端類型和通訊協定，初始化 <see cref="T:System.Net.Sockets.Socket" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-161">Initializes a new instance of the <see cref="T:System.Net.Sockets.Socket" /> class using the specified address family, socket type and protocol.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-162">`addressFamily`參數指定的位址配置<xref:System.Net.Sockets.Socket>類別使用，`socketType`參數指定的型別<xref:System.Net.Sockets.Socket>類別，而`protocolType`參數指定所使用的通訊協定<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-162">The `addressFamily` parameter specifies the addressing scheme that the <xref:System.Net.Sockets.Socket> class uses, the `socketType` parameter specifies the type of the <xref:System.Net.Sockets.Socket> class, and the `protocolType` parameter specifies the protocol used by <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-163">三個參數不是獨立的。</span><span class="sxs-lookup"><span data-stu-id="3831b-163">The three parameters are not independent.</span></span> <span data-ttu-id="3831b-164">有些位址家族限制可以使用哪些通訊協定，與它們，且經常<xref:System.Net.Sockets.Socket>類型是隱含的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-164">Some address families restrict which protocols can be used with them, and often the <xref:System.Net.Sockets.Socket> type is implicit in the protocol.</span></span> <span data-ttu-id="3831b-165">如果位址家族的組合<xref:System.Net.Sockets.Socket>類型和類型中無效時，產生的通訊協定<xref:System.Net.Sockets.Socket>，這個建構函式會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-165">If the combination of address family, <xref:System.Net.Sockets.Socket> type, and protocol type results in an invalid <xref:System.Net.Sockets.Socket>, this constructor throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-166">如果這個建構函式會擲回<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-166">If this constructor throws a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-167">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-167">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-168">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-168">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-169">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-169">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-170">下列程式碼範例示範如何建立的執行個體<xref:System.Net.Sockets.Socket>類別。</span><span class="sxs-lookup"><span data-stu-id="3831b-170">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
 [!code-cpp[Socket_Send_Recieve#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Send_Recieve/CPP/source.cpp#1)]
 [!code-csharp[Socket_Send_Recieve#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Send_Recieve/CS/source.cs#1)]
 [!code-vb[Socket_Send_Recieve#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Send_Recieve/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-171">
            <paramref name="addressFamily" />、<paramref name="socketType" /> 和 <paramref name="protocolType" /> 組合所產生的無效通訊端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-171">The combination of <paramref name="addressFamily" />, <paramref name="socketType" />, and <paramref name="protocolType" /> results in an invalid socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.SocketException" />
        <altmember cref="T:System.Net.Sockets.AddressFamily" />
        <altmember cref="T:System.Net.Sockets.ProtocolType" />
        <altmember cref="T:System.Net.Sockets.SocketType" />
      </Docs>
    </Member>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Accept ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket Accept() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Accept" />
      <MemberSignature Language="VB.NET" Value="Public Function Accept () As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ Accept();" />
      <MemberSignature Language="F#" Value="member this.Accept : unit -&gt; System.Net.Sockets.Socket" Usage="socket.Accept " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3831b-172">建立新建立連接的新 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-172">Creates a new <see cref="T:System.Net.Sockets.Socket" /> for a newly created connection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-173">新建立連接的新 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-173">A <see cref="T:System.Net.Sockets.Socket" /> for a newly created connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-174"><xref:System.Net.Sockets.Socket.Accept%2A> 以同步方式暫止連接要求的第一個擷取連線要求的佇列接聽的通訊端，然後建立並傳回新<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-174"><xref:System.Net.Sockets.Socket.Accept%2A> synchronously extracts the first pending connection request from the connection request queue of the listening socket, and then creates and returns a new <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-175">您無法使用此傳回<xref:System.Net.Sockets.Socket>接受任何其他的連線，連線佇列中。</span><span class="sxs-lookup"><span data-stu-id="3831b-175">You cannot use this returned <xref:System.Net.Sockets.Socket> to accept any additional connections from the connection queue.</span></span> <span data-ttu-id="3831b-176">不過，您可以呼叫<xref:System.Net.Sockets.Socket.RemoteEndPoint%2A>方法傳回的<xref:System.Net.Sockets.Socket>來識別遠端主機的網路位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-176">However, you can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> method of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
 <span data-ttu-id="3831b-177">處於封鎖模式，<xref:System.Net.Sockets.Socket.Accept%2A>封鎖，直到連入連線嘗試會排入佇列。</span><span class="sxs-lookup"><span data-stu-id="3831b-177">In blocking mode, <xref:System.Net.Sockets.Socket.Accept%2A> blocks until an incoming connection attempt is queued.</span></span> <span data-ttu-id="3831b-178">接受連接時，原始<xref:System.Net.Sockets.Socket>繼續佇列的連入連線要求直到您關閉它。</span><span class="sxs-lookup"><span data-stu-id="3831b-178">Once a connection is accepted, the original <xref:System.Net.Sockets.Socket> continues queuing incoming connection requests until you close it.</span></span>  
  
 <span data-ttu-id="3831b-179">如果您呼叫這個方法，使用非封鎖<xref:System.Net.Sockets.Socket>，且要求會排入佇列，沒有連線<xref:System.Net.Sockets.Socket.Accept%2A>就會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-179">If you call this method using a non-blocking <xref:System.Net.Sockets.Socket>, and no connection requests are queued, <xref:System.Net.Sockets.Socket.Accept%2A> throws a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-180">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-180">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-181">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-181">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-182">然後再呼叫<xref:System.Net.Sockets.Socket.Accept%2A>方法中，您必須先呼叫<xref:System.Net.Sockets.Socket.Listen%2A>來接聽並連入連線要求排入佇列的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-182">Before calling the <xref:System.Net.Sockets.Socket.Accept%2A> method, you must first call the <xref:System.Net.Sockets.Socket.Listen%2A> method to listen for and queue incoming connection requests.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-183">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-183">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-184">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-184">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-185">下列程式碼範例接受簡單<xref:System.Net.Sockets.Socket>連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-185">The following code example accepts a simple <xref:System.Net.Sockets.Socket> connection.</span></span>  
  
 [!code-cpp[Classic Socket.Accept Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Accept Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Accept Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Accept Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Accept Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Accept Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-186">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-186">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-187">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-187">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-188">接受的通訊端並未接聽連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-188">The accepting socket is not listening for connections.</span>
          </span>
          <span data-ttu-id="3831b-189">您必須在呼叫 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 之前呼叫 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 和 <see cref="M:System.Net.Sockets.Socket.Accept" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-189">You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.Accept" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="P:System.Net.Sockets.Socket.RemoteEndPoint" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="AcceptAsync">
      <MemberSignature Language="C#" Value="public bool AcceptAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool AcceptAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool AcceptAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AcceptAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.AcceptAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3831b-190">
            <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件，用於這個非同步通訊端作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-190">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-191">開始非同步作業以接受連入的連接嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-191">Begins an asynchronous operation to accept an incoming connection attempt.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-192">如果 I/O 作業暫止，則傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-192">Returns <see langword="true" /> if the I/O operation is pending.</span>
          </span>
          <span data-ttu-id="3831b-193">作業完成時會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-193">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span>
          </span>
          <span data-ttu-id="3831b-194">如果 I/O 作業同步完成，則傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-194">Returns <see langword="false" /> if the I/O operation completed synchronously.</span>
          </span>
          <span data-ttu-id="3831b-195">不會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，而在方法呼叫傳回後會立即檢查做為參數傳遞的 <paramref name="e" /> 物件，以擷取作業的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-195">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-196">可以使用連線導向的通訊協定<xref:System.Net.Sockets.Socket.AcceptAsync%2A>方法以非同步方式處理連入連線嘗試。</span><span class="sxs-lookup"><span data-stu-id="3831b-196">Connection-oriented protocols can use the <xref:System.Net.Sockets.Socket.AcceptAsync%2A> method to asynchronously process incoming connection attempts.</span></span> <span data-ttu-id="3831b-197">以非同步方式接受連線，讓您能夠傳送和接收不同的執行緒內的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-197">Accepting connections asynchronously gives you the ability to send and receive data within a separate execution thread.</span></span> <span data-ttu-id="3831b-198">然後再呼叫<xref:System.Net.Sockets.Socket.AcceptAsync%2A>方法，您必須呼叫<xref:System.Net.Sockets.Socket.Listen%2A>來接聽並連入連線要求排入佇列的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-198">Before calling the <xref:System.Net.Sockets.Socket.AcceptAsync%2A> method, you must call the <xref:System.Net.Sockets.Socket.Listen%2A> method to listen for and queue incoming connection requests.</span></span>  
  
 <span data-ttu-id="3831b-199">若要完成的通知，您必須建立實作事件處理常式的回呼方法\<SocketAsyncEventArgs > 委派，並將它以連結<xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="3831b-199">To be notified of completion, you must create a callback method that implements the EventHandler\<SocketAsyncEventArgs> delegate and hook it to the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> event.</span></span>  
  
 <span data-ttu-id="3831b-200">下列的屬性和事件<xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType>物件所需：</span><span class="sxs-lookup"><span data-stu-id="3831b-200">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required:</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
 <span data-ttu-id="3831b-201">呼叫端可以選擇性地指定的現有<xref:System.Net.Sockets.Socket>要用於連入連線，藉由指定<xref:System.Net.Sockets.Socket>搭配使用<xref:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-201">The caller can optionally specify an existing <xref:System.Net.Sockets.Socket> to use for the incoming connection by specifying the <xref:System.Net.Sockets.Socket> to use with the <xref:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3831b-202">如果<xref:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket%2A?displayProperty=nameWithType>屬性是 null，新<xref:System.Net.Sockets.Socket>建構具有相同<xref:System.Net.Sockets.Socket.AddressFamily%2A>， <xref:System.Net.Sockets.Socket.SocketType%2A>，並<xref:System.Net.Sockets.Socket.ProtocolType%2A>與目前<xref:System.Net.Sockets.Socket>並將設為<xref:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-202">If the <xref:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket%2A?displayProperty=nameWithType> property is null, a new <xref:System.Net.Sockets.Socket> is constructed with the same <xref:System.Net.Sockets.Socket.AddressFamily%2A>, <xref:System.Net.Sockets.Socket.SocketType%2A>, and <xref:System.Net.Sockets.Socket.ProtocolType%2A> as the current <xref:System.Net.Sockets.Socket> and set as the <xref:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="3831b-203">呼叫端可能會設定<xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType>呼叫之前所需的任何使用者狀態物件的屬性<xref:System.Net.Sockets.Socket.AcceptAsync%2A>方法，如此會在回呼方法中擷取資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-203">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.AcceptAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="3831b-204">如果回呼需要比單一物件的詳細資訊，就可以建立小型的類別來保存為成員的其他必要的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-204">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="3831b-205">（選擇性） 緩衝區可能會提供用來接收之後在通訊端上的資料的初始區塊<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法成功。</span><span class="sxs-lookup"><span data-stu-id="3831b-205">Optionally, a buffer may be provided in which to receive the initial block of data on the socket after the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method succeeds.</span></span> <span data-ttu-id="3831b-206">在此情況下，<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType>屬性必須設定為包含資料的緩衝區，以接收和<xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType>屬性必須設為接收緩衝區中資料的位元組數目上限。</span><span class="sxs-lookup"><span data-stu-id="3831b-206">In this case, the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> property needs to be set to the buffer containing the data to receive and the <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> property needs to be set to the maximum number of bytes of data to receive in the buffer.</span></span> <span data-ttu-id="3831b-207">可以設定這些屬性，使用<xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-207">These properties can be set using the <xref:System.Net.Sockets.SocketAsyncEventArgs.SetBuffer%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3831b-208">傳入緩衝區的一部分會可供內部使用基礎 Winsock 發生 AcceptEx 呼叫。</span><span class="sxs-lookup"><span data-stu-id="3831b-208">Part of the buffer passed in will be consumed internally for use by the underlying Winsock AcceptEx call.</span></span> <span data-ttu-id="3831b-209">這表示傳回的資料量會一律的值小於<xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType>屬性上的<xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType>提供執行個體。</span><span class="sxs-lookup"><span data-stu-id="3831b-209">This means that the amount of data returned will always be less than the value of the <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> property on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> instance provided.</span></span> <span data-ttu-id="3831b-210">在內部使用的緩衝區數量而有所不同的通訊端通訊協定家族。</span><span class="sxs-lookup"><span data-stu-id="3831b-210">The amount of the buffer used internally varies based on the address family of the socket.</span></span> <span data-ttu-id="3831b-211">所需的最小緩衝區大小是 288 個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-211">The minimum buffer size required is 288 bytes.</span></span> <span data-ttu-id="3831b-212">如果指定較大的緩衝區大小，則<xref:System.Net.Sockets.Socket>就會預期收到一些額外的資料以外的 Winsock 發生 AcceptEx 呼叫所收到的資料，並會等候，直到接收到此額外的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-212">If a larger buffer size is specified, then the <xref:System.Net.Sockets.Socket> will expect some extra data other than the address data received by the Winsock AcceptEx call and will wait until this extra data is received.</span></span> <span data-ttu-id="3831b-213">如果發生逾時，會重設連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-213">If a timeout occurs, the connection is reset.</span></span> <span data-ttu-id="3831b-214">因此如果特定數量的預期額外的資料，則緩衝區大小應該設為最小緩衝區大小，加上此數量。</span><span class="sxs-lookup"><span data-stu-id="3831b-214">So if extra data is expected of  a specific amount, then the buffer size should be set to the minimum buffer size plus this amount.</span></span>  
  
 <span data-ttu-id="3831b-215">完成回呼方法應該檢查<xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType>屬性來判斷<xref:System.Net.Sockets.Socket.AcceptAsync%2A>作業是否成功。</span><span class="sxs-lookup"><span data-stu-id="3831b-215">The completion callback method should examine the <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType> property to determine if the <xref:System.Net.Sockets.Socket.AcceptAsync%2A> operation was successful.</span></span>  
  
 <span data-ttu-id="3831b-216"><xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>事件可能發生在某些情況下，已接受沒有連線時，導致<xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType>屬性設為<xref:System.Net.Sockets.SocketError.ConnectionReset>。</span><span class="sxs-lookup"><span data-stu-id="3831b-216">The <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> event can occur in some cases when no connection has been accepted and cause the <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType> property to be set to <xref:System.Net.Sockets.SocketError.ConnectionReset>.</span></span> <span data-ttu-id="3831b-217">這可能是因為連接埠掃描使用半開啟 SYN 類型掃描 (SYN]-> [同步認可]-> [RST 順序)。</span><span class="sxs-lookup"><span data-stu-id="3831b-217">This can occur as a result of port scanning using a half-open SYN type scan (a SYN -> SYN-ACK -> RST sequence).</span></span> <span data-ttu-id="3831b-218">使用應用程式<xref:System.Net.Sockets.Socket.AcceptAsync%2A>方法應該準備好處理這個狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-218">Applications using the <xref:System.Net.Sockets.Socket.AcceptAsync%2A> method should be prepared to handle this condition.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-219">引數無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-219">An argument is not valid.</span>
          </span>
          <span data-ttu-id="3831b-220">如果提供的緩衝區不夠大，就會發生這個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-220">This exception occurs if the buffer provided is not large enough.</span>
          </span>
          <span data-ttu-id="3831b-221">緩衝區必須至少為 2 \* (sizeof(SOCKADDR_STORAGE + 16) 位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-221">The buffer must be at least 2 \* (sizeof(SOCKADDR_STORAGE + 16) bytes.</span>
          </span>
          <span data-ttu-id="3831b-222">如果指定多個緩衝區而 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 屬性不是 null，也會發生這個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-222">This exception also occurs if multiple buffers are specified, the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is not null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-223">引數超出範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-223">An argument is out of range.</span>
          </span>
          <span data-ttu-id="3831b-224">如果 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" /> 小於 0，就會發生這個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-224">The exception occurs if the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-225">要求了無效的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-225">An invalid operation was requested.</span>
          </span>
          <span data-ttu-id="3831b-226">如果接受的 <see cref="T:System.Net.Sockets.Socket" /> 不接聽連接或接受的通訊端已繫結，就會發生這個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-226">This exception occurs if the accepting <see cref="T:System.Net.Sockets.Socket" /> is not listening for connections or the accepted socket is bound.</span>
          </span>
          <span data-ttu-id="3831b-227">您必須先呼叫 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 和 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 方法，再呼叫 <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-227">You must call the <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> method before calling the <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> method.</span>
          </span>
          <span data-ttu-id="3831b-228">此例外狀況也會在已與通訊端連線，或是通訊端作業已使用指定的 <paramref name="e" /> 參數進行時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-228">This exception also occurs if the socket is already connected or a socket operation was already in progress using the specified <paramref name="e" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-229">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-229">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-230">這個方法需要 Windows XP (含) 以後版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-230">Windows XP or later is required for this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-231">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-231">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.AcceptSocket" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="AddressFamily">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.AddressFamily AddressFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.AddressFamily AddressFamily" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.AddressFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddressFamily As AddressFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::AddressFamily AddressFamily { System::Net::Sockets::AddressFamily get(); };" />
      <MemberSignature Language="F#" Value="member this.AddressFamily : System.Net.Sockets.AddressFamily" Usage="System.Net.Sockets.Socket.AddressFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.AddressFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-232">取得 <see cref="T:System.Net.Sockets.Socket" /> 的通訊協定家族 (Family)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-232">Gets the address family of the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-233">其中一個 <see cref="T:System.Net.Sockets.AddressFamily" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-233">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-234"><xref:System.Net.Sockets.AddressFamily>指定的位址配置的執行個體<xref:System.Net.Sockets.Socket>類別可以使用。</span><span class="sxs-lookup"><span data-stu-id="3831b-234">The <xref:System.Net.Sockets.AddressFamily> specifies the addressing scheme that an instance of the <xref:System.Net.Sockets.Socket> class can use.</span></span> <span data-ttu-id="3831b-235">這個屬性是唯讀的而且時，會設定<xref:System.Net.Sockets.Socket>建立。</span><span class="sxs-lookup"><span data-stu-id="3831b-235">This property is read-only and is set when the <xref:System.Net.Sockets.Socket> is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-236">下列程式碼範例會顯示<xref:System.Net.Sockets.AddressFamily>， <xref:System.Net.Sockets.SocketType>，和<xref:System.Net.Sockets.ProtocolType>到主控台。</span><span class="sxs-lookup"><span data-stu-id="3831b-236">The following code example displays the <xref:System.Net.Sockets.AddressFamily>, <xref:System.Net.Sockets.SocketType>, and <xref:System.Net.Sockets.ProtocolType> to the console.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#3)]
 [!code-csharp[Socket_Socket_Options#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#3)]
 [!code-vb[Socket_Socket_Options#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.AddressFamily" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.Socket.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-237">取得已從網路接收且可供讀取的資料量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-237">Gets the amount of data that has been received from the network and is available to be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-238">從網路收到的和可供讀取的資料位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-238">The number of bytes of data received from the network and available to be read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-239">如果您使用非封鎖<xref:System.Net.Sockets.Socket>，<xref:System.Net.Sockets.Socket.Available%2A>是一個好的方法，以判斷資料是否已排入佇列進行讀取，然後再呼叫<xref:System.Net.Sockets.Socket.Receive%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-239">If you are using a non-blocking <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Available%2A> is a good way to determine whether data is queued for reading, before calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="3831b-240">可用的資料是總資料量已排入佇列進行讀取的網路緩衝區中。</span><span class="sxs-lookup"><span data-stu-id="3831b-240">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="3831b-241">如果沒有資料會排入佇列中的網路緩衝區中，<xref:System.Net.Sockets.Socket.Available%2A>會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="3831b-241">If no data is queued in the network buffer, <xref:System.Net.Sockets.Socket.Available%2A> returns 0.</span></span>  
  
 <span data-ttu-id="3831b-242">如果遠端主機關機或關閉連接，<xref:System.Net.Sockets.Socket.Available%2A>可能會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-242">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.Socket.Available%2A> can throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-243">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-243">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-244">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-244">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-245">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-245">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-246">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-246">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-247">下列程式碼範例會比較呼叫 IOControl FIONREAD 與可用屬性的結果。</span><span class="sxs-lookup"><span data-stu-id="3831b-247">The following code example compares the results of calling IOControl with FIONREAD and the Available property.</span></span>  
  
 [!code-cpp[NCLSocketIoControl#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketIoControl/CPP/iocontrolserver.cpp#1)]
 [!code-csharp[NCLSocketIoControl#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketIoControl/CS/iocontrolserver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-248">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-248">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-249">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-249">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="F:System.Net.Sockets.SocketType.Dgram" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAccept">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-250">開始非同步作業以接受連入的連接嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-250">Begins an asynchronous operation to accept an incoming connection attempt.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAccept">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAccept (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAccept(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAccept (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAccept(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAccept : AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginAccept (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="3831b-251">
            <see cref="T:System.AsyncCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-251">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-252">物件，包含這個要求的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-252">An object that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-253">開始非同步作業以接受連入的連接嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-253">Begins an asynchronous operation to accept an incoming connection attempt.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-254">參考非同步 <see cref="T:System.IAsyncResult" /> 建立作業的 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-254">An <see cref="T:System.IAsyncResult" /> that references the asynchronous <see cref="T:System.Net.Sockets.Socket" /> creation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-255">可以使用連線導向的通訊協定<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法以非同步方式處理連入連線嘗試。</span><span class="sxs-lookup"><span data-stu-id="3831b-255">Connection-oriented protocols can use the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method to asynchronously process incoming connection attempts.</span></span> <span data-ttu-id="3831b-256">以非同步方式接受連線，讓您能夠傳送和接收不同的執行緒內的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-256">Accepting connections asynchronously gives you the ability to send and receive data within a separate execution thread.</span></span> <span data-ttu-id="3831b-257">然後再呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法，您必須呼叫<xref:System.Net.Sockets.Socket.Listen%2A>來接聽並連入連線要求排入佇列的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-257">Before calling the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, you must call the <xref:System.Net.Sockets.Socket.Listen%2A> method to listen for and queue incoming connection requests.</span></span>  
  
 <span data-ttu-id="3831b-258">您必須建立回呼方法可實作<xref:System.AsyncCallback>委派，並將其名稱來傳遞<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-258">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="3831b-259">若要這樣做，請在非常小，您必須傳遞接聽<xref:System.Net.Sockets.Socket>物件至<xref:System.Net.Sockets.Socket.BeginAccept%2A>透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-259">To do this, at the very minimum, you must pass the listening <xref:System.Net.Sockets.Socket> object to <xref:System.Net.Sockets.Socket.BeginAccept%2A> through the `state` parameter.</span></span> <span data-ttu-id="3831b-260">如果回呼需要更多的資訊時，您可以建立小型類別以包裝<xref:System.Net.Sockets.Socket>和其他必要的資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-260">If your callback needs more information, you can create a small class to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="3831b-261">傳遞至這個類別的執行個體<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法，透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-261">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="3831b-262">您的回呼方法應該叫用<xref:System.Net.Sockets.Socket.EndAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-262">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndAccept%2A> method.</span></span> <span data-ttu-id="3831b-263">當您的應用程式呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>，系統通常會使用個別的執行緒來執行指定的回呼方法，並封鎖上<xref:System.Net.Sockets.Socket.EndAccept%2A>之前擷取暫止的連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-263">When your application calls <xref:System.Net.Sockets.Socket.BeginAccept%2A>, the system usually uses a separate thread to execute the specified callback method and blocks on <xref:System.Net.Sockets.Socket.EndAccept%2A> until a pending connection is retrieved.</span></span> <span data-ttu-id="3831b-264"><xref:System.Net.Sockets.Socket.EndAccept%2A> 會傳回新<xref:System.Net.Sockets.Socket>物件，您可以用來傳送和接收資料，與遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-264"><xref:System.Net.Sockets.Socket.EndAccept%2A> will return a new <xref:System.Net.Sockets.Socket> object that you can use to send and receive data with the remote host.</span></span> <span data-ttu-id="3831b-265">您無法使用此傳回<xref:System.Net.Sockets.Socket>接受任何其他的連線，連線佇列中。</span><span class="sxs-lookup"><span data-stu-id="3831b-265">You cannot use this returned <xref:System.Net.Sockets.Socket> to accept any additional connections from the connection queue.</span></span> <span data-ttu-id="3831b-266">如果您想封鎖之後呼叫的原始執行緒<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法，請使用<xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-266">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, use <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-267">在上呼叫 Set 方法<xref:System.Threading.ManualResetEvent>在回呼方法，當您想要繼續執行的原始執行緒時。</span><span class="sxs-lookup"><span data-stu-id="3831b-267">Call the Set method on a <xref:System.Threading.ManualResetEvent> in the callback method when you want the original thread to continue executing.</span></span>  
  
 <span data-ttu-id="3831b-268">系統可能也會使用呼叫執行緒叫用回呼方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-268">The system may also use the calling thread to invoke the callback method.</span></span> <span data-ttu-id="3831b-269">在此情況下，<xref:System.IAsyncResult.CompletedSynchronously%2A>對傳回的屬性<xref:System.IAsyncResult>將會設定為表示<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法以同步方式完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-269">In this case, the <xref:System.IAsyncResult.CompletedSynchronously%2A> property on the returned <xref:System.IAsyncResult> will be set to indicate that the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method completed synchronously.</span></span>  
  
 <span data-ttu-id="3831b-270">如需有關撰寫回呼方法的詳細資訊，請參閱[封送處理為回呼方法的委派](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-270">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="3831b-271">若要取消擱置中的呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法，關閉<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-271">To cancel a pending call to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, close the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-272">當<xref:System.Net.Sockets.Socket.Close%2A>非同步作業正在進行時，會呼叫方法，來提供回呼<xref:System.Net.Sockets.Socket.BeginAccept%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-272">When the <xref:System.Net.Sockets.Socket.Close%2A> method is called while an asynchronous operation is in progress, the callback provided to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method is called.</span></span>  <span data-ttu-id="3831b-273">後續呼叫<xref:System.Net.Sockets.Socket.EndAccept%2A>方法會擲回<xref:System.ObjectDisposedException>來指出已取消作業。</span><span class="sxs-lookup"><span data-stu-id="3831b-273">A subsequent call to the <xref:System.Net.Sockets.Socket.EndAccept%2A> method will throw an <xref:System.ObjectDisposedException> to indicate that the operation has been cancelled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-274">您可以使用<xref:System.Net.Sockets.Socket.RemoteEndPoint%2A>屬性傳回之<xref:System.Net.Sockets.Socket>來識別遠端主機的網路位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-274">You can use the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-275">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-275">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-276">取得此程式碼之後，請參閱[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="3831b-276">After you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-277">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-277">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-278">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-278">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-279">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-279">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-280">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-280">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-281">下列程式碼範例會嘗試以非同步方式接收連入連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-281">The following code example attempts to receive an incoming connection asynchronously.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#2)]
 [!code-csharp[Socket_Async_Send_Receive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#2)]
 [!code-vb[Socket_Async_Send_Receive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-282">
            <see cref="T:System.Net.Sockets.Socket" />物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-282">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-283">這個方法需要 Windows NT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-283">Windows NT is required for this method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-284">接受的通訊端並未接聽連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-284">The accepting socket is not listening for connections.</span>
          </span>
          <span data-ttu-id="3831b-285">您必須在呼叫 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 之前呼叫 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 和 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-285">You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span>
          </span>
          <span data-ttu-id="3831b-286">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-286">-or-</span>
          </span>
          <span data-ttu-id="3831b-287">接受的通訊端已繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-287">The accepted socket is bound.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-288">
            <paramref name="receiveSize" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-288">
              <paramref name="receiveSize" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-289">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-289">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="P:System.Net.Sockets.Socket.RemoteEndPoint" />
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md">
          <span data-ttu-id="3831b-290">非同步用戶端通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-290">Asynchronous Client Socket Example</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md">
          <span data-ttu-id="3831b-291">非同步伺服器通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-291">Asynchronous Server Socket Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginAccept">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAccept (int receiveSize, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAccept(int32 receiveSize, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginAccept(System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAccept (receiveSize As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAccept(int receiveSize, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAccept : int * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginAccept (receiveSize, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiveSize" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="receiveSize">
          <span data-ttu-id="3831b-292">要從寄件者接受的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-292">The number of bytes to accept from the sender.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-293">
            <see cref="T:System.AsyncCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-293">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-294">物件，包含這個要求的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-294">An object that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-295">開始非同步作業以接收連入連線嘗試，並接收用戶端應用程式傳送的第一個資料區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-295">Begins an asynchronous operation to accept an incoming connection attempt and receives the first block of data sent by the client application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-296">參考非同步 <see cref="T:System.IAsyncResult" /> 建立作業的 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-296">An <see cref="T:System.IAsyncResult" /> that references the asynchronous <see cref="T:System.Net.Sockets.Socket" /> creation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-297">可以使用連線導向的通訊協定<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法以非同步方式處理連入連線嘗試。</span><span class="sxs-lookup"><span data-stu-id="3831b-297">Connection-oriented protocols can use the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method to asynchronously process incoming connection attempts.</span></span> <span data-ttu-id="3831b-298">以非同步方式接受連線，可讓您傳送和接收不同的執行緒內的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-298">Accepting connections asynchronously enables you to send and receive data within a separate execution thread.</span></span> <span data-ttu-id="3831b-299">這個多載可讓您指定要接受在初始中傳送的位元組數目`receiveSize`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-299">This overload allows you to specify the number of bytes to accept in the initial transfer in the `receiveSize` parameter.</span></span>  
  
 <span data-ttu-id="3831b-300">然後再呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法，您必須呼叫<xref:System.Net.Sockets.Socket.Listen%2A>來接聽並連入連線要求排入佇列的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-300">Before calling the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, you must call the <xref:System.Net.Sockets.Socket.Listen%2A> method to listen for and queue incoming connection requests.</span></span>  
  
 <span data-ttu-id="3831b-301">您必須建立回呼方法可實作<xref:System.AsyncCallback>委派，並將其名稱來傳遞<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-301">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="3831b-302">若要這樣做，請在非常小，您必須傳遞接聽<xref:System.Net.Sockets.Socket>物件至<xref:System.Net.Sockets.Socket.BeginAccept%2A>透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-302">To do this, at the very minimum, you must pass the listening <xref:System.Net.Sockets.Socket> object to <xref:System.Net.Sockets.Socket.BeginAccept%2A> through the `state` parameter.</span></span> <span data-ttu-id="3831b-303">如果回呼需要更多的資訊時，您可以建立小型類別以包裝<xref:System.Net.Sockets.Socket>和其他必要的資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-303">If your callback needs more information, you can create a small class to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="3831b-304">傳遞至這個類別的執行個體<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法，透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-304">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="3831b-305">您的回呼方法應該叫用<xref:System.Net.Sockets.Socket.EndAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-305">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndAccept%2A> method.</span></span> <span data-ttu-id="3831b-306">當您的應用程式呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>，系統通常會使用個別的執行緒來執行指定的回呼方法，並封鎖上<xref:System.Net.Sockets.Socket.EndAccept%2A>之前擷取暫止的連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-306">When your application calls <xref:System.Net.Sockets.Socket.BeginAccept%2A>, the system usually uses a separate thread to execute the specified callback method and blocks on <xref:System.Net.Sockets.Socket.EndAccept%2A> until a pending connection is retrieved.</span></span>  
  
 <span data-ttu-id="3831b-307"><xref:System.Net.Sockets.Socket.EndAccept%2A> 傳回新<xref:System.Net.Sockets.Socket>可用來傳送和接收資料，與遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-307"><xref:System.Net.Sockets.Socket.EndAccept%2A> returns a new <xref:System.Net.Sockets.Socket> that you can use to send and receive data with the remote host.</span></span> <span data-ttu-id="3831b-308">您無法使用此傳回<xref:System.Net.Sockets.Socket>接受任何其他的連線，連線佇列中。</span><span class="sxs-lookup"><span data-stu-id="3831b-308">You cannot use this returned <xref:System.Net.Sockets.Socket> to accept any additional connections from the connection queue.</span></span> <span data-ttu-id="3831b-309">如果您想封鎖之後呼叫的原始執行緒<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法，請使用<xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-309">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, use <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-310">在上呼叫 Set 方法<xref:System.Threading.ManualResetEvent>在回呼方法，當您想要繼續執行的原始執行緒時。</span><span class="sxs-lookup"><span data-stu-id="3831b-310">Call the Set method on a <xref:System.Threading.ManualResetEvent> in the callback method when you want the original thread to continue executing.</span></span>  
  
 <span data-ttu-id="3831b-311">系統可能也會使用呼叫執行緒叫用回呼方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-311">The system may also use the calling thread to invoke the callback method.</span></span> <span data-ttu-id="3831b-312">在此情況下，<xref:System.IAsyncResult.CompletedSynchronously%2A>對傳回的屬性<xref:System.IAsyncResult>將會設定為表示<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法以同步方式完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-312">In this case, the <xref:System.IAsyncResult.CompletedSynchronously%2A> property on the returned <xref:System.IAsyncResult> will be set to indicate that the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method completed synchronously.</span></span>  
  
 <span data-ttu-id="3831b-313">如需有關撰寫回呼方法的詳細資訊，請參閱[封送處理為回呼方法的委派](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-313">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="3831b-314">若要取消擱置中的呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法，關閉<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-314">To cancel a pending call to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, close the <xref:System.Net.Sockets.Socket>.</span></span>  <span data-ttu-id="3831b-315">當<xref:System.Net.Sockets.Socket.Close%2A>非同步作業正在進行時，會呼叫方法，來提供回呼<xref:System.Net.Sockets.Socket.BeginAccept%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-315">When the <xref:System.Net.Sockets.Socket.Close%2A> method is called while an asynchronous operation is in progress, the callback provided to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method is called.</span></span>  <span data-ttu-id="3831b-316">後續呼叫<xref:System.Net.Sockets.Socket.EndAccept%2A>方法會擲回<xref:System.ObjectDisposedException>來指出已取消作業。</span><span class="sxs-lookup"><span data-stu-id="3831b-316">A subsequent call to the <xref:System.Net.Sockets.Socket.EndAccept%2A> method will throw an <xref:System.ObjectDisposedException> to indicate that the operation has been cancelled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-317">您可以呼叫使用<xref:System.Net.Sockets.Socket.RemoteEndPoint%2A>屬性傳回的<xref:System.Net.Sockets.Socket>物件來識別遠端主機的網路位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-317">You can call use the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> object to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-318">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-318">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-319">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-319">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-320">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-320">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-321">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-321">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-322">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-322">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-323">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-323">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-324">下列程式碼範例會開啟通訊端，並接受非同步連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-324">The following code example opens a socket and accepts an asynchronous connection.</span></span> <span data-ttu-id="3831b-325">在此範例中，通訊端會接受初始的 10 個位元組的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-325">In this example, the socket accepts the initial 10 bytes of data.</span></span> <span data-ttu-id="3831b-326">接收的位元組數目和資料會顯示在主控台上的回呼委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-326">The number of bytes received and the data are displayed on the console by the callback delegate.</span></span> <span data-ttu-id="3831b-327">請參閱<xref:System.Net.Sockets.Socket.BeginReceive%2A>的收到的剩餘資料的方式說明。</span><span class="sxs-lookup"><span data-stu-id="3831b-327">See <xref:System.Net.Sockets.Socket.BeginReceive%2A> for a description of how the remaining data is received.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#6)]
 [!code-csharp[NCLSocketEnhancements#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-328">
            <see cref="T:System.Net.Sockets.Socket" />物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-328">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-329">這個方法需要 Windows NT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-329">Windows NT is required for this method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-330">接受的通訊端並未接聽連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-330">The accepting socket is not listening for connections.</span>
          </span>
          <span data-ttu-id="3831b-331">您必須在呼叫 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 之前呼叫 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 和 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-331">You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span>
          </span>
          <span data-ttu-id="3831b-332">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-332">-or-</span>
          </span>
          <span data-ttu-id="3831b-333">接受的通訊端已繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-333">The accepted socket is bound.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-334">
            <paramref name="receiveSize" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-334">
              <paramref name="receiveSize" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-335">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-335">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="P:System.Net.Sockets.Socket.RemoteEndPoint" />
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md">
          <span data-ttu-id="3831b-336">非同步用戶端通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-336">Asynchronous Client Socket Example</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md">
          <span data-ttu-id="3831b-337">非同步伺服器通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-337">Asynchronous Server Socket Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginAccept">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAccept (System.Net.Sockets.Socket acceptSocket, int receiveSize, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAccept(class System.Net.Sockets.Socket acceptSocket, int32 receiveSize, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginAccept(System.Net.Sockets.Socket,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAccept (acceptSocket As Socket, receiveSize As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAccept(System::Net::Sockets::Socket ^ acceptSocket, int receiveSize, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAccept : System.Net.Sockets.Socket * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginAccept (acceptSocket, receiveSize, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="acceptSocket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="receiveSize" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="acceptSocket">
          <span data-ttu-id="3831b-338">已接受的 <see cref="T:System.Net.Sockets.Socket" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-338">The accepted <see cref="T:System.Net.Sockets.Socket" /> object.</span>
          </span>
          <span data-ttu-id="3831b-339">此值可為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-339">This value may be <see langword="null" />.</span>
          </span>
        </param>
        <param name="receiveSize">
          <span data-ttu-id="3831b-340">要接收的最大位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-340">The maximum number of bytes to receive.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-341">
            <see cref="T:System.AsyncCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-341">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-342">物件，包含這個要求的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-342">An object that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-343">開始非同步作業以接收指定通訊端的連入連線嘗試，並接收用戶端應用程式傳送的第一個資料區塊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-343">Begins an asynchronous operation to accept an incoming connection attempt from a specified socket and receives the first block of data sent by the client application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-344">
            <see cref="T:System.IAsyncResult" /> 物件，參考非同步 <see cref="T:System.Net.Sockets.Socket" /> 物件建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-344">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous <see cref="T:System.Net.Sockets.Socket" /> object creation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-345">可以使用連線導向的通訊協定<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法以非同步方式處理連入連線嘗試。</span><span class="sxs-lookup"><span data-stu-id="3831b-345">Connection-oriented protocols can use the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method to asynchronously process incoming connection attempts.</span></span> <span data-ttu-id="3831b-346">以非同步方式接受連線，讓您能夠傳送和接收不同的執行緒內的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-346">Accepting connections asynchronously gives you the ability to send and receive data within a separate execution thread.</span></span> <span data-ttu-id="3831b-347">這個多載可讓您指定可接受通訊端`acceptSocket`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-347">This overload allows you to specify the accepted socket in the `acceptSocket` parameter.</span></span> <span data-ttu-id="3831b-348">如果這個參數是`null`，接受的通訊端由<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-348">If this parameter is `null`, the accepted socket is created by the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="3831b-349">您可以指定要接受在初始中傳送的位元組數目`receiveSize`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-349">You can specify the number of bytes to accept in the initial transfer in the `receiveSize` parameter.</span></span>  
  
 <span data-ttu-id="3831b-350">然後再呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法，您必須呼叫<xref:System.Net.Sockets.Socket.Listen%2A>來接聽並連入連線要求排入佇列的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-350">Before calling the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, you must call the <xref:System.Net.Sockets.Socket.Listen%2A> method to listen for and queue incoming connection requests.</span></span>  
  
 <span data-ttu-id="3831b-351">您必須建立回呼方法可實作<xref:System.AsyncCallback>委派，並將其名稱來傳遞<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-351">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="3831b-352">若要這樣做，請在非常小，您必須傳遞接聽<xref:System.Net.Sockets.Socket>物件至<xref:System.Net.Sockets.Socket.BeginAccept%2A>透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-352">To do this, at the very minimum, you must pass the listening <xref:System.Net.Sockets.Socket> object to <xref:System.Net.Sockets.Socket.BeginAccept%2A> through the `state` parameter.</span></span> <span data-ttu-id="3831b-353">如果回呼需要更多的資訊時，您可以建立小型類別以包裝<xref:System.Net.Sockets.Socket>和其他必要的資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-353">If your callback needs more information, you can create a small class to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="3831b-354">傳遞至這個類別的執行個體<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法，透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-354">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="3831b-355">您的回呼方法應該叫用<xref:System.Net.Sockets.Socket.EndAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-355">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndAccept%2A> method.</span></span> <span data-ttu-id="3831b-356">當您的應用程式呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>，系統通常會使用個別的執行緒來執行指定的回呼方法，並封鎖上<xref:System.Net.Sockets.Socket.EndAccept%2A>之前擷取暫止的連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-356">When your application calls <xref:System.Net.Sockets.Socket.BeginAccept%2A>, the system usually uses a separate thread to execute the specified callback method and blocks on <xref:System.Net.Sockets.Socket.EndAccept%2A> until a pending connection is retrieved.</span></span>  
  
 <span data-ttu-id="3831b-357"><xref:System.Net.Sockets.Socket.EndAccept%2A> 傳回新<xref:System.Net.Sockets.Socket>物件，您可以用來傳送和接收資料，與遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-357"><xref:System.Net.Sockets.Socket.EndAccept%2A> returns a new <xref:System.Net.Sockets.Socket> object that you can use to send and receive data with the remote host.</span></span> <span data-ttu-id="3831b-358">您無法使用此傳回<xref:System.Net.Sockets.Socket>接受任何其他的連線，連線佇列中。</span><span class="sxs-lookup"><span data-stu-id="3831b-358">You cannot use this returned <xref:System.Net.Sockets.Socket> to accept any additional connections from the connection queue.</span></span> <span data-ttu-id="3831b-359">如果您想封鎖之後呼叫的原始執行緒<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法，請使用<xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-359">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, use <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-360">在上呼叫 Set 方法<xref:System.Threading.ManualResetEvent>在回呼方法，當您想要繼續執行的原始執行緒時。</span><span class="sxs-lookup"><span data-stu-id="3831b-360">Call the Set method on a <xref:System.Threading.ManualResetEvent> in the callback method when you want the original thread to continue executing.</span></span>  
  
 <span data-ttu-id="3831b-361">系統可能也會使用呼叫執行緒叫用回呼方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-361">The system may also use the calling thread to invoke the callback method.</span></span> <span data-ttu-id="3831b-362">在此情況下，<xref:System.IAsyncResult.CompletedSynchronously%2A>對傳回的屬性<xref:System.IAsyncResult>將會設定為表示<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法以同步方式完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-362">In this case, the <xref:System.IAsyncResult.CompletedSynchronously%2A> property on the returned <xref:System.IAsyncResult> will be set to indicate that the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method completed synchronously.</span></span>  
  
 <span data-ttu-id="3831b-363">如需有關如何撰寫回呼方法的詳細資訊，請參閱[封送處理為回呼方法的委派](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-363">For additional information on writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="3831b-364">若要取消擱置中的呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法，關閉<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-364">To cancel a pending call to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, close the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-365">當<xref:System.Net.Sockets.Socket.Close%2A>非同步作業正在進行時，會呼叫方法，來提供回呼<xref:System.Net.Sockets.Socket.BeginAccept%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-365">When the <xref:System.Net.Sockets.Socket.Close%2A> method is called while an asynchronous operation is in progress, the callback provided to the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method is called.</span></span>  <span data-ttu-id="3831b-366">後續呼叫<xref:System.Net.Sockets.Socket.EndAccept%2A>方法會擲回<xref:System.ObjectDisposedException>來指出已取消作業。</span><span class="sxs-lookup"><span data-stu-id="3831b-366">A subsequent call to the <xref:System.Net.Sockets.Socket.EndAccept%2A> method will throw an <xref:System.ObjectDisposedException> to indicate that the operation has been cancelled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-367">您可以使用<xref:System.Net.Sockets.Socket.RemoteEndPoint%2A>屬性傳回的<xref:System.Net.Sockets.Socket>物件來識別遠端主機的網路位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-367">You can use the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> object to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-368">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-368">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-369">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-369">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-370">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-370">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-371">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-371">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-372">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-372">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-373">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-373">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-374">下列程式碼範例會開啟通訊端，並接受非同步連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-374">The following code example opens a socket and accepts an asynchronous connection.</span></span> <span data-ttu-id="3831b-375">在此範例中，通訊端接受初始的 10 個位元組的資料並`acceptSocket`參數是`null`，可以強制<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法用來建立接受通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-375">In this example, the socket accepts the initial 10 bytes of data and the `acceptSocket` parameter is `null`, which forces the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method to create the accepted socket.</span></span> <span data-ttu-id="3831b-376">接收的位元組數目和資料會顯示在主控台上的回呼委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-376">The number of bytes received and the data are displayed on the console by the callback delegate.</span></span> <span data-ttu-id="3831b-377">請參閱<xref:System.Net.Sockets.Socket.BeginReceive%2A>的收到的剩餘資料的方式說明。</span><span class="sxs-lookup"><span data-stu-id="3831b-377">See <xref:System.Net.Sockets.Socket.BeginReceive%2A> for a description of how the remaining data is received.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#7)]
 [!code-csharp[NCLSocketEnhancements#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-378">
            <see cref="T:System.Net.Sockets.Socket" />物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-378">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-379">這個方法需要 Windows NT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-379">Windows NT is required for this method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-380">接受的通訊端並未接聽連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-380">The accepting socket is not listening for connections.</span>
          </span>
          <span data-ttu-id="3831b-381">您必須在呼叫 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 之前呼叫 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 和 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-381">You must call <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> and <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> before calling <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span>
          </span>
          <span data-ttu-id="3831b-382">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-382">-or-</span>
          </span>
          <span data-ttu-id="3831b-383">接受的通訊端已繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-383">The accepted socket is bound.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-384">
            <paramref name="receiveSize" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-384">
              <paramref name="receiveSize" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-385">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-385">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="P:System.Net.Sockets.Socket.RemoteEndPoint" />
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md">
          <span data-ttu-id="3831b-386">非同步用戶端通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-386">Asynchronous Client Socket Example</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md">
          <span data-ttu-id="3831b-387">非同步伺服器通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-387">Asynchronous Server Socket Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-388">開始遠端主機連接的非同步要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-388">Begins an asynchronous request for a remote host connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.EndPoint remoteEP, AsyncCallback callback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.EndPoint remoteEP, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (remoteEP As EndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::EndPoint ^ remoteEP, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.EndPoint end_point, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.EndPoint end_point, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (end_point As EndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::EndPoint ^ end_point, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.EndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginConnect (end_point, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="end_point" Type="System.Net.EndPoint" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="1" />
        <Parameter Name="state" Type="System.Object" Index="2" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="3831b-389">表示遠端主機的 <see cref="T:System.Net.EndPoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-389">An <see cref="T:System.Net.EndPoint" /> that represents the remote host.</span>
          </span>
        </param>
        <param name="end_point">
          <span data-ttu-id="3831b-390">表示遠端主機的 <see cref="T:System.Net.EndPoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-390">An <see cref="T:System.Net.EndPoint" /> that represents the remote host.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-391">
            <see cref="T:System.AsyncCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-391">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-392">物件，包含這個要求的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-392">An object that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-393">開始遠端主機連接的非同步要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-393">Begins an asynchronous request for a remote host connection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-394">參考非同步連接的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-394">An <see cref="T:System.IAsyncResult" /> that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-395">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法會啟動連線到的非同步要求`remoteEP`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-395">If you are using a connection-oriented protocol, the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method starts an asynchronous request for a connection to the `remoteEP` parameter.</span></span> <span data-ttu-id="3831b-396">如果您使用無連接的通訊協定，<xref:System.Net.Sockets.Socket.BeginConnect%2A>建立預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-396">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.BeginConnect%2A> establishes a default remote host.</span></span> <span data-ttu-id="3831b-397">連接或以非同步方式設定預設遠端主機可讓您能夠傳送和接收不同的執行緒內的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-397">Connecting or setting the default remote host asynchronously gives you the ability to send and receive data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="3831b-398">您可以建立回呼方法可實作<xref:System.AsyncCallback>委派，並將其名稱來傳遞<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-398">You can create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method.</span></span> <span data-ttu-id="3831b-399">至少，您必須傳遞<xref:System.Net.Sockets.Socket>要<xref:System.Net.Sockets.Socket.BeginConnect%2A>透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-399">At the very minimum, you must pass the <xref:System.Net.Sockets.Socket> to <xref:System.Net.Sockets.Socket.BeginConnect%2A> through the `state` parameter.</span></span> <span data-ttu-id="3831b-400">如果回呼需要更多的資訊時，您可以建立小型類別以包裝<xref:System.Net.Sockets.Socket>，以及其他必要的資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-400">If your callback needs more information, you can create a small class to hold the <xref:System.Net.Sockets.Socket>, and the other required information.</span></span> <span data-ttu-id="3831b-401">傳遞至這個類別的執行個體<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法，透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-401">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="3831b-402">您的回呼方法應該叫用<xref:System.Net.Sockets.Socket.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-402">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndConnect%2A> method.</span></span> <span data-ttu-id="3831b-403">當您的應用程式呼叫<xref:System.Net.Sockets.Socket.BeginConnect%2A>，系統會使用個別的執行緒來執行指定的回呼方法，並會封鎖<xref:System.Net.Sockets.Socket.EndConnect%2A>直到<xref:System.Net.Sockets.Socket>成功連線，或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-403">When your application calls <xref:System.Net.Sockets.Socket.BeginConnect%2A>, the system will use a separate thread to execute the specified callback method, and will block on <xref:System.Net.Sockets.Socket.EndConnect%2A> until the <xref:System.Net.Sockets.Socket> connects successfully or throws an exception.</span></span> <span data-ttu-id="3831b-404">如果您想封鎖之後呼叫的原始執行緒<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法，請使用<xref:System.Threading.WaitHandle.WaitOne%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-404">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method, use <xref:System.Threading.WaitHandle.WaitOne%2A>.</span></span> <span data-ttu-id="3831b-405">在上呼叫 Set 方法<xref:System.Threading.ManualResetEvent>在回呼方法，當您想要繼續執行的原始執行緒時。</span><span class="sxs-lookup"><span data-stu-id="3831b-405">Call the Set method on a <xref:System.Threading.ManualResetEvent> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="3831b-406">如需有關撰寫回呼方法的詳細資訊，請參閱[封送處理為回呼方法的委派](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-406">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="3831b-407">如果您使用無連線的通訊協定，例如 UDP，您就不必呼叫<xref:System.Net.Sockets.Socket.BeginConnect%2A>之前傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-407">If you are using a connectionless protocol such as UDP, you do not have to call <xref:System.Net.Sockets.Socket.BeginConnect%2A> before sending and receiving data.</span></span> <span data-ttu-id="3831b-408">您可以使用<xref:System.Net.Sockets.Socket.BeginSendTo%2A>和<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>與遠端主機通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-408">You can use <xref:System.Net.Sockets.Socket.BeginSendTo%2A> and <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> to communicate with a remote host.</span></span> <span data-ttu-id="3831b-409">如果您呼叫<xref:System.Net.Sockets.Socket.BeginConnect%2A>，將會捨棄任何資料包來自指定的預設值以外的位址。</span><span class="sxs-lookup"><span data-stu-id="3831b-409">If you do call <xref:System.Net.Sockets.Socket.BeginConnect%2A>, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="3831b-410">如果您想要設定預設遠端主機的廣播位址，您必須先呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>且設定為廣播`true`。</span><span class="sxs-lookup"><span data-stu-id="3831b-410">If you wish to set your default remote host to a broadcast address, you must first call <xref:System.Net.Sockets.Socket.SetSocketOption%2A> and set Broadcast to `true`.</span></span> <span data-ttu-id="3831b-411">如果您不能<xref:System.Net.Sockets.Socket.BeginConnect%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-411">If you cannot, <xref:System.Net.Sockets.Socket.BeginConnect%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="3831b-412">如果您使用連線導向的通訊協定並不會呼叫<xref:System.Net.Sockets.Socket.Bind%2A>再呼叫<xref:System.Net.Sockets.Socket.BeginConnect%2A>，基礎的服務提供者會指派最適當的區域網路位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-412">If you are using a connection-oriented protocol and do not call <xref:System.Net.Sockets.Socket.Bind%2A> before calling <xref:System.Net.Sockets.Socket.BeginConnect%2A>, the underlying service provider will assign the most appropriate local network address and port number.</span></span> <span data-ttu-id="3831b-413">如果您使用無連接的通訊協定，服務提供者將未指派本機網路位址和連接埠號碼直到您呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>或<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-413">If you are using a connectionless protocol, the service provider will not assign a local network address and port number until you call the <xref:System.Net.Sockets.Socket.BeginSend%2A> or <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-414">如果您想要變更預設遠端主機時，呼叫<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法一次所需的端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-414">If you want to change the default remote host, call the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method again with the desired endpoint.</span></span>  
  
 <span data-ttu-id="3831b-415">若要取消擱置中的呼叫<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法，關閉<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-415">To cancel a pending call to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method, close the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-416">當<xref:System.Net.Sockets.Socket.Close%2A>非同步作業正在進行時，會呼叫方法，來提供回呼<xref:System.Net.Sockets.Socket.BeginConnect%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-416">When the <xref:System.Net.Sockets.Socket.Close%2A> method is called while an asynchronous operation is in progress, the callback provided to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method is called.</span></span>  <span data-ttu-id="3831b-417">後續呼叫<xref:System.Net.Sockets.Socket.EndConnect%2A>方法會擲回<xref:System.ObjectDisposedException>來指出已取消作業。</span><span class="sxs-lookup"><span data-stu-id="3831b-417">A subsequent call to the <xref:System.Net.Sockets.Socket.EndConnect%2A> method will throw an <xref:System.ObjectDisposedException> to indicate that the operation has been cancelled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-418">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-418">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-419">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-419">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-420">如果這個通訊端先前已中斷連線，然後<xref:System.Net.Sockets.Socket.BeginConnect%2A>必須在作業完成之前，不會結束的執行緒上呼叫。</span><span class="sxs-lookup"><span data-stu-id="3831b-420">If this socket has previously been disconnected, then <xref:System.Net.Sockets.Socket.BeginConnect%2A> must be called on a thread that will not exit until the operation is complete.</span></span> <span data-ttu-id="3831b-421">這是基礎提供者的限制。</span><span class="sxs-lookup"><span data-stu-id="3831b-421">This is a limitation of the underlying provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-422">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-422">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-423">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-423">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-424">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-424">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-425">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-425">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-426">下列程式碼範例會起始非同步連接嘗試。</span><span class="sxs-lookup"><span data-stu-id="3831b-426">The following code example initiates an asynchronous connection attempt.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#1)]
 [!code-csharp[Socket_Async_Send_Receive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#1)]
 [!code-vb[Socket_Async_Send_Receive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-427">
            <paramref name="remoteEP" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-427">
              <paramref name="remoteEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-428">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-428">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-429">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-429">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-430">在呼叫堆疊中位置較高的呼叫端對於要求的作業沒有權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-430">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-431">藉由呼叫 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 已令 <see cref="T:System.Net.Sockets.Socket" /> 處於接聽狀態，或者非同步作業已在進行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-431">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, or an asynchronous operation is already in progress.</span>
          </span>
        </exception>
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md">
          <span data-ttu-id="3831b-432">做為回呼方法，委派封送處理</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-432">Marshaling a Delegate as a Callback Method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md">
          <span data-ttu-id="3831b-433">非同步用戶端通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-433">Asynchronous Client Socket Example</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md">
          <span data-ttu-id="3831b-434">非同步伺服器通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-434">Asynchronous Server Socket Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginConnect (address, port, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" Index="0" />
        <Parameter Name="port" Type="System.Int32" Index="1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="3" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="3831b-435">遠端主機的 <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-435">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="3831b-436">遠端主機的連接埠號碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-436">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="3831b-437">
            <see cref="T:System.AsyncCallback" /> 委派，會於連接作業完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-437">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-438">
            <see cref="T:System.AsyncCallback" /> 委派，會於連接作業完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-438">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-439">包含連線作業資訊的使用者定義物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-439">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="3831b-440">作業完成時會將這個物件傳遞至 <paramref name="requestCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-440">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-441">開始遠端主機連接的非同步要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-441">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="3831b-442">此主機是由 <see cref="T:System.Net.IPAddress" /> 和連接埠號碼所指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-442">The host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-443">參考非同步連接的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-443">An <see cref="T:System.IAsyncResult" /> that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-444">非同步<xref:System.Net.Sockets.Socket.BeginConnect%2A>作業必須完成呼叫<xref:System.Net.Sockets.Socket.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-444">The asynchronous <xref:System.Net.Sockets.Socket.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndConnect%2A> method.</span></span> <span data-ttu-id="3831b-445">一般而言，會叫用方法`requestCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-445">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="3831b-446">這個方法不會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="3831b-446">This method does not block until the operation is complete.</span></span> <span data-ttu-id="3831b-447">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Sockets.Socket.Connect%2A>方法多載，或<xref:System.Net.Sockets.Socket.EndConnect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-447">To block until the operation is complete, use one of the <xref:System.Net.Sockets.Socket.Connect%2A> method overloads, or <xref:System.Net.Sockets.Socket.EndConnect%2A>.</span></span>  
  
 <span data-ttu-id="3831b-448">若要取消擱置中的呼叫<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法，關閉<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-448">To cancel a pending call to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method, close the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-449">當<xref:System.Net.Sockets.Socket.Close%2A>非同步作業正在進行時，會呼叫方法，來提供回呼<xref:System.Net.Sockets.Socket.BeginConnect%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-449">When the <xref:System.Net.Sockets.Socket.Close%2A> method is called while an asynchronous operation is in progress, the callback provided to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method is called.</span></span>  <span data-ttu-id="3831b-450">後續呼叫<xref:System.Net.Sockets.Socket.EndConnect%2A>方法會擲回<xref:System.ObjectDisposedException>來指出已取消作業。</span><span class="sxs-lookup"><span data-stu-id="3831b-450">A subsequent call to the <xref:System.Net.Sockets.Socket.EndConnect%2A> method will throw an <xref:System.ObjectDisposedException> to indicate that the operation has been cancelled.</span></span>  
  
 <span data-ttu-id="3831b-451">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="3831b-451">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-452">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-452">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-453">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-453">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-454">如果這個通訊端先前已中斷連線，然後<xref:System.Net.Sockets.Socket.BeginConnect%2A>必須在作業完成之前，不會結束的執行緒上呼叫。</span><span class="sxs-lookup"><span data-stu-id="3831b-454">If this socket has previously been disconnected, then <xref:System.Net.Sockets.Socket.BeginConnect%2A> must be called on a thread that will not exit until the operation is complete.</span></span> <span data-ttu-id="3831b-455">這是基礎提供者的限制。</span><span class="sxs-lookup"><span data-stu-id="3831b-455">This is a limitation of the underlying provider.</span></span> <span data-ttu-id="3831b-456">也<xref:System.Net.EndPoint>也就是使用必須不同。</span><span class="sxs-lookup"><span data-stu-id="3831b-456">Also the <xref:System.Net.EndPoint> that is used must be different.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-457">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-457">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-458">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-458">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-459">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-459">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-460">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-460">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-461">下列程式碼範例會起始非同步連接嘗試。</span><span class="sxs-lookup"><span data-stu-id="3831b-461">The following code example initiates an asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#1)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#1)]  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#7)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-462">
            <paramref name="address" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-462">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-463">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-463">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-464">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-464">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-465">
            <see cref="T:System.Net.Sockets.Socket" /> 不在通訊端系列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-465">The <see cref="T:System.Net.Sockets.Socket" /> is not in the socket family.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-466">連接埠號碼無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-466">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-467">
            <paramref name="address" /> 的長度為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-467">The length of <paramref name="address" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-468">藉由呼叫 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 已令 <see cref="T:System.Net.Sockets.Socket" /> 處於接聽狀態，或者非同步作業已在進行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-468">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, or an asynchronous operation is already in progress.</span>
          </span>
        </exception>
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md">
          <span data-ttu-id="3831b-469">做為回呼方法，委派封送處理</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-469">Marshaling a Delegate as a Callback Method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md">
          <span data-ttu-id="3831b-470">非同步用戶端通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-470">Asynchronous Client Socket Example</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md">
          <span data-ttu-id="3831b-471">非同步伺服器通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-471">Asynchronous Server Socket Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginConnect (addresses, port, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" Index="0" />
        <Parameter Name="port" Type="System.Int32" Index="1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="3" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="3831b-472">至少一個指定遠端主機的 <see cref="T:System.Net.IPAddress" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-472">At least one <see cref="T:System.Net.IPAddress" />, designating the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="3831b-473">遠端主機的連接埠號碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-473">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="3831b-474">
            <see cref="T:System.AsyncCallback" /> 委派，會於連接作業完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-474">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-475">
            <see cref="T:System.AsyncCallback" /> 委派，會於連接作業完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-475">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-476">包含連線作業資訊的使用者定義物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-476">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="3831b-477">作業完成時會將這個物件傳遞至 <paramref name="requestCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-477">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-478">開始遠端主機連接的非同步要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-478">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="3831b-479">主機是由 <see cref="T:System.Net.IPAddress" /> 陣列和連接埠號碼指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-479">The host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-480">參考非同步連接的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-480">An <see cref="T:System.IAsyncResult" /> that references the asynchronous connections.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-481">非同步<xref:System.Net.Sockets.Socket.BeginConnect%2A>作業必須完成呼叫<xref:System.Net.Sockets.Socket.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-481">The asynchronous <xref:System.Net.Sockets.Socket.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndConnect%2A> method.</span></span> <span data-ttu-id="3831b-482">一般而言，會叫用方法`requestCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-482">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="3831b-483">這個方法不會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="3831b-483">This method does not block until the operation is complete.</span></span> <span data-ttu-id="3831b-484">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Sockets.Socket.Connect%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="3831b-484">To block until the operation is complete, use one of the <xref:System.Net.Sockets.Socket.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="3831b-485">若要取消擱置中的呼叫<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法，關閉<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-485">To cancel a pending call to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method, close the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-486">當<xref:System.Net.Sockets.Socket.Close%2A>非同步作業正在進行時，會呼叫方法，來提供回呼<xref:System.Net.Sockets.Socket.BeginConnect%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-486">When the <xref:System.Net.Sockets.Socket.Close%2A> method is called while an asynchronous operation is in progress, the callback provided to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method is called.</span></span>  <span data-ttu-id="3831b-487">後續呼叫<xref:System.Net.Sockets.Socket.EndConnect%2A>方法會擲回<xref:System.ObjectDisposedException>來指出已取消作業。</span><span class="sxs-lookup"><span data-stu-id="3831b-487">A subsequent call to the <xref:System.Net.Sockets.Socket.EndConnect%2A> method will throw an <xref:System.ObjectDisposedException> to indicate that the operation has been cancelled.</span></span>  
  
 <span data-ttu-id="3831b-488">如需使用非同步程式設計模型的詳細資訊，請參閱 < [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-488">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-489">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-489">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-490">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-490">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-491">如果這個通訊端先前已中斷連線，然後<xref:System.Net.Sockets.Socket.BeginConnect%2A>必須在作業完成之前，不會結束的執行緒上呼叫。</span><span class="sxs-lookup"><span data-stu-id="3831b-491">If this socket has previously been disconnected, then <xref:System.Net.Sockets.Socket.BeginConnect%2A> must be called on a thread that will not exit until the operation is complete.</span></span> <span data-ttu-id="3831b-492">這是基礎提供者的限制。</span><span class="sxs-lookup"><span data-stu-id="3831b-492">This is a limitation of the underlying provider.</span></span> <span data-ttu-id="3831b-493">也<xref:System.Net.EndPoint>也就是使用必須不同。</span><span class="sxs-lookup"><span data-stu-id="3831b-493">Also the <xref:System.Net.EndPoint> that is used must be different.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-494">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-494">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-495">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-495">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-496">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-496">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-497">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-497">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-498">下列程式碼範例會起始非同步連接嘗試。</span><span class="sxs-lookup"><span data-stu-id="3831b-498">The following code example initiates an asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#1)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#1)]  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#2)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-499">
            <paramref name="addresses" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-499">
              <paramref name="addresses" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-500">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-500">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-501">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-501">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-502">這個方法對於使用 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 的通訊端有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-502">This method is valid for sockets that use <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-503">連接埠號碼無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-503">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-504">
            <paramref name="address" /> 的長度為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-504">The length of <paramref name="address" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-505">藉由呼叫 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 已令 <see cref="T:System.Net.Sockets.Socket" /> 處於接聽狀態，或者非同步作業已在進行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-505">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, or an asynchronous operation is already in progress.</span>
          </span>
        </exception>
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md">
          <span data-ttu-id="3831b-506">做為回呼方法，委派封送處理</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-506">Marshaling a Delegate as a Callback Method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md">
          <span data-ttu-id="3831b-507">非同步用戶端通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-507">Asynchronous Client Socket Example</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md">
          <span data-ttu-id="3831b-508">非同步伺服器通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-508">Asynchronous Server Socket Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginConnect (host, port, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" />
        <Parameter Name="port" Type="System.Int32" Index="1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="3" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="3831b-509">遠端主機的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-509">The name of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="3831b-510">遠端主機的連接埠號碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-510">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="3831b-511">
            <see cref="T:System.AsyncCallback" /> 委派，會於連接作業完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-511">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-512">
            <see cref="T:System.AsyncCallback" /> 委派，會於連接作業完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-512">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the connect operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-513">包含連線作業資訊的使用者定義物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-513">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="3831b-514">作業完成時會將這個物件傳遞至 <paramref name="requestCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-514">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-515">開始遠端主機連接的非同步要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-515">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="3831b-516">此主機是由主機名稱和連接埠號碼指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-516">The host is specified by a host name and a port number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-517">參考非同步連接的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-517">An <see cref="T:System.IAsyncResult" /> that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-518">非同步<xref:System.Net.Sockets.Socket.BeginConnect%2A>作業必須完成呼叫<xref:System.Net.Sockets.Socket.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-518">The asynchronous <xref:System.Net.Sockets.Socket.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndConnect%2A> method.</span></span> <span data-ttu-id="3831b-519">一般而言，會叫用方法`requestCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-519">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="3831b-520">這個方法不會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="3831b-520">This method does not block until the operation is complete.</span></span> <span data-ttu-id="3831b-521">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Sockets.Socket.Connect%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="3831b-521">To block until the operation is complete, use one of the <xref:System.Net.Sockets.Socket.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="3831b-522">若要取消擱置中的呼叫<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法，關閉<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-522">To cancel a pending call to the  <xref:System.Net.Sockets.Socket.BeginConnect%2A> method, close the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-523">當<xref:System.Net.Sockets.Socket.Close%2A>非同步作業正在進行時，會呼叫方法，來提供回呼<xref:System.Net.Sockets.Socket.BeginConnect%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-523">When the <xref:System.Net.Sockets.Socket.Close%2A> method is called while an asynchronous operation is in progress, the callback provided to the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method is called.</span></span>  <span data-ttu-id="3831b-524">後續呼叫<xref:System.Net.Sockets.Socket.EndConnect%2A>方法會擲回<xref:System.ObjectDisposedException>來指出已取消作業。</span><span class="sxs-lookup"><span data-stu-id="3831b-524">A subsequent call to the <xref:System.Net.Sockets.Socket.EndConnect%2A> method will throw an <xref:System.ObjectDisposedException> to indicate that the operation has been cancelled.</span></span>  
  
 <span data-ttu-id="3831b-525">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="3831b-525">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-526">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-526">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-527">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-527">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-528">如果這個通訊端先前已中斷連線，然後<xref:System.Net.Sockets.Socket.BeginConnect%2A>必須在作業完成之前，不會結束的執行緒上呼叫。</span><span class="sxs-lookup"><span data-stu-id="3831b-528">If this socket has previously been disconnected, then <xref:System.Net.Sockets.Socket.BeginConnect%2A> must be called on a thread that will not exit until the operation is complete.</span></span> <span data-ttu-id="3831b-529">這是基礎提供者的限制。</span><span class="sxs-lookup"><span data-stu-id="3831b-529">This is a limitation of the underlying provider.</span></span> <span data-ttu-id="3831b-530">也<xref:System.Net.EndPoint>也就是使用必須不同。</span><span class="sxs-lookup"><span data-stu-id="3831b-530">Also the <xref:System.Net.EndPoint> that is used must be different.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-531">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-531">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-532">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-532">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-533">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-533">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-534">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-534">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-535">下列程式碼範例會起始非同步連接嘗試。</span><span class="sxs-lookup"><span data-stu-id="3831b-535">The following code example initiates an asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#1)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#1)]  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#3)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-536">
            <paramref name="host" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-536">
              <paramref name="host" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-537">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-537">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-538">這個方法對於 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 系列的通訊端有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-538">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-539">連接埠號碼無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-539">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-540">藉由呼叫 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 已令 <see cref="T:System.Net.Sockets.Socket" /> 處於接聽狀態，或者非同步作業已在進行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-540">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />, or an asynchronous operation is already in progress.</span>
          </span>
        </exception>
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md">
          <span data-ttu-id="3831b-541">做為回呼方法，委派封送處理</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-541">Marshaling a Delegate as a Callback Method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md">
          <span data-ttu-id="3831b-542">非同步用戶端通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-542">Asynchronous Client Socket Example</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md">
          <span data-ttu-id="3831b-543">非同步伺服器通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-543">Asynchronous Server Socket Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginDisconnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisconnect (bool reuseSocket, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginDisconnect(bool reuseSocket, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisconnect (reuseSocket As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisconnect(bool reuseSocket, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginDisconnect : bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginDisconnect (reuseSocket, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reuseSocket" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reuseSocket">
          <span data-ttu-id="3831b-544">如果這個通訊端可以在關閉連接後重複使用，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-544">
              <see langword="true" /> if this socket can be reused after the connection is closed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-545">
            <see cref="T:System.AsyncCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-545">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-546">物件，包含這個要求的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-546">An object that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-547">開始非同步要求，以中斷遠端端點的連接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-547">Begins an asynchronous request to disconnect from a remote endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-548">
            <see cref="T:System.IAsyncResult" /> 物件，參考非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-548">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-549">如果您使用連線導向的通訊協定，您可以呼叫<xref:System.Net.Sockets.Socket.BeginDisconnect%2A>方法來要求從遠端端點的中斷連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-549">If you are using a connection-oriented protocol, you can call the <xref:System.Net.Sockets.Socket.BeginDisconnect%2A> method to request a disconnect from a remote endpoint.</span></span> <span data-ttu-id="3831b-550">如果`reuseSocket`是`true`，您可以重複使用通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-550">If `reuseSocket` is `true`, you can reuse the socket.</span></span>  
  
 <span data-ttu-id="3831b-551"><xref:System.Net.Sockets.Socket.BeginDisconnect%2A>方法會使用個別的執行緒叫用指定的回呼方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-551">The <xref:System.Net.Sockets.Socket.BeginDisconnect%2A> method uses a separate thread to invoke the specified callback method.</span></span> <span data-ttu-id="3831b-552"><xref:System.Net.Sockets.Socket.EndDisconnect%2A>方法會封鎖直到暫止中斷連線已完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-552">The <xref:System.Net.Sockets.Socket.EndDisconnect%2A> method blocks until the pending disconnect is complete.</span></span> <span data-ttu-id="3831b-553">如需有關如何撰寫回呼方法的詳細資訊，請參閱[封送處理為回呼方法的委派](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-553">For additional information on writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-554">如果您收到<xref:System.Net.Sockets.SocketException>例外狀況，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-554">If you receive a <xref:System.Net.Sockets.SocketException> exception, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-555">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-555">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-556">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-556">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-557">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-557">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-558">下列程式碼範例會建立非同步通訊的通訊端，並將部分資料傳送至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-558">The following code example creates a socket for asynchronous communication and sends some data to a remote host.</span></span> <span data-ttu-id="3831b-559">當資料已傳送時，<xref:System.Net.Sockets.Socket.Shutdown%2A>稱為停止傳送及接收活動。</span><span class="sxs-lookup"><span data-stu-id="3831b-559">When the data has been sent, <xref:System.Net.Sockets.Socket.Shutdown%2A> is called to stop the send and receive activity.</span></span> <span data-ttu-id="3831b-560">然後<xref:System.Net.Sockets.Socket.BeginDisconnect%2A>呼叫以開始中斷連接要求。</span><span class="sxs-lookup"><span data-stu-id="3831b-560">Then <xref:System.Net.Sockets.Socket.BeginDisconnect%2A> is called to begin a disconnect request.</span></span> <span data-ttu-id="3831b-561">要求完成時，<xref:System.Net.Sockets.Socket.Connected%2A>屬性查詢來測試是否已中斷連線的通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-561">When the request completes, the <xref:System.Net.Sockets.Socket.Connected%2A> property is queried to test whether the socket is disconnected.</span></span>  
  
 [!code-cpp[Nclsocketenhancements#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#11)]
 [!code-csharp[Nclsocketenhancements#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-562">作業系統是 Windows 2000 (含) 以前版本，但這個方法需要的是 Windows XP。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-562">The operating system is Windows 2000 or earlier, and this method requires Windows XP.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-563">
            <see cref="T:System.Net.Sockets.Socket" />物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-563">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-564">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-564">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginReceive">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-565">開始從已連接的 <see cref="T:System.Net.Sockets.Socket" /> 非同步接收資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-565">Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginReceive (buffers, socketFlags, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffers">
          <span data-ttu-id="3831b-566">
            <see cref="T:System.Byte" /> 型別的陣列，為收到資料的存放位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-566">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-567">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-567">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-568">
            <see cref="T:System.AsyncCallback" /> 委派，會於作業完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-568">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-569">使用者定義的物件，包含接收作業的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-569">A user-defined object that contains information about the receive operation.</span>
          </span>
          <span data-ttu-id="3831b-570">作業完成時會將這個物件傳遞至 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-570">This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-571">開始從已連接的 <see cref="T:System.Net.Sockets.Socket" /> 非同步接收資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-571">Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-572">參考非同步讀取的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-572">An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-573">非同步<xref:System.Net.Sockets.Socket.BeginReceive%2A>作業必須完成呼叫<xref:System.Net.Sockets.Socket.EndReceive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-573">The asynchronous <xref:System.Net.Sockets.Socket.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndReceive%2A> method.</span></span> <span data-ttu-id="3831b-574">一般而言，會叫用方法`callback`委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-574">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="3831b-575">這個方法不會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="3831b-575">This method does not block until the operation is complete.</span></span> <span data-ttu-id="3831b-576">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Sockets.Socket.Receive%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="3831b-576">To block until the operation is complete, use one of the <xref:System.Net.Sockets.Socket.Receive%2A> method overloads.</span></span>  
  
 <span data-ttu-id="3831b-577">若要取消暫止<xref:System.Net.Sockets.Socket.BeginReceive%2A>，呼叫<xref:System.Net.Sockets.Socket.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-577">To cancel a pending <xref:System.Net.Sockets.Socket.BeginReceive%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-578">如需使用非同步程式設計模型的詳細資訊，請參閱 < [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-578">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-579">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-579">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-580">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-580">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-581">該執行緒結束時，會取消指定的執行緒所起始的所有 I/O。</span><span class="sxs-lookup"><span data-stu-id="3831b-581">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="3831b-582">如果執行緒結束的作業完成之前，暫止的非同步作業可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="3831b-582">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-583">`state` 是使用者定義的具現化。</span><span class="sxs-lookup"><span data-stu-id="3831b-583">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-584">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-584">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-585">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-585">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-586">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-586">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-587">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-587">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-588">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-588">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-589">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-589">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-590">這個 <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-590">
              <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md">
          <span data-ttu-id="3831b-591">做為回呼方法，委派封送處理</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-591">Marshaling a Delegate as a Callback Method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md">
          <span data-ttu-id="3831b-592">非同步用戶端通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-592">Asynchronous Client Socket Example</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md">
          <span data-ttu-id="3831b-593">非同步伺服器通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-593">Asynchronous Server Socket Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags *  * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginReceive (buffers, socketFlags, errorCode, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffers">
          <span data-ttu-id="3831b-594">
            <see cref="T:System.Byte" /> 型別的陣列，為收到資料的存放位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-594">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-595">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-595">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="errorCode">
          <span data-ttu-id="3831b-596">
            <see cref="T:System.Net.Sockets.SocketError" /> 物件，儲存通訊端錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-596">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-597">
            <see cref="T:System.AsyncCallback" /> 委派，會於作業完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-597">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-598">使用者定義的物件，包含接收作業的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-598">A user-defined object that contains information about the receive operation.</span>
          </span>
          <span data-ttu-id="3831b-599">作業完成時會將這個物件傳遞至 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-599">This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-600">開始從已連接的 <see cref="T:System.Net.Sockets.Socket" /> 非同步接收資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-600">Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-601">參考非同步讀取的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-601">An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-602">非同步<xref:System.Net.Sockets.Socket.BeginReceive%2A>作業必須完成呼叫<xref:System.Net.Sockets.Socket.EndReceive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-602">The asynchronous <xref:System.Net.Sockets.Socket.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndReceive%2A> method.</span></span> <span data-ttu-id="3831b-603">一般而言，會叫用方法`callback`委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-603">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="3831b-604">這個方法不會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="3831b-604">This method does not block until the operation is complete.</span></span> <span data-ttu-id="3831b-605">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Sockets.Socket.Receive%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="3831b-605">To block until the operation is complete, use one of the <xref:System.Net.Sockets.Socket.Receive%2A> method overloads.</span></span>  
  
 <span data-ttu-id="3831b-606">若要取消暫止<xref:System.Net.Sockets.Socket.BeginReceive%2A>，呼叫<xref:System.Net.Sockets.Socket.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-606">To cancel a pending <xref:System.Net.Sockets.Socket.BeginReceive%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-607">如需使用非同步程式設計模型的詳細資訊，請參閱 < [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-607">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-608">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-608">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-609">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-609">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-610">該執行緒結束時，會取消指定的執行緒所起始的所有 I/O。</span><span class="sxs-lookup"><span data-stu-id="3831b-610">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="3831b-611">如果執行緒結束的作業完成之前，暫止的非同步作業可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="3831b-611">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-612">`state` 是使用者定義的具現化。</span><span class="sxs-lookup"><span data-stu-id="3831b-612">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-613">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-613">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-614">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-614">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-615">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-615">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-616">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-616">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-617">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-617">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-618">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-618">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-619">這個 <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-619">
              <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md">
          <span data-ttu-id="3831b-620">做為回呼方法，委派封送處理</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-620">Marshaling a Delegate as a Callback Method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md">
          <span data-ttu-id="3831b-621">非同步用戶端通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-621">Asynchronous Client Socket Example</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md">
          <span data-ttu-id="3831b-622">非同步伺服器通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-622">Asynchronous Server Socket Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, AsyncCallback callback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socket_flags, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socket_flags, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (buffer As Byte(), offset As Integer, size As Integer, socket_flags As SocketFlags, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socket_flags, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : byte[] * int * int * System.Net.Sockets.SocketFlags * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginReceive (buffer, offset, size, socket_flags, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" />
        <Parameter Name="size" Type="System.Int32" Index="2" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="socket_flags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="4" />
        <Parameter Name="state" Type="System.Object" Index="5" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-623">
            <see cref="T:System.Byte" /> 型別的陣列，為收到資料的存放位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-623">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3831b-624">
            <paramref name="buffer" /> 參數中要儲存已接收資料的以零起始的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-624">The zero-based position in the <paramref name="buffer" /> parameter at which to store the received data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-625">要接收的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-625">The number of bytes to receive.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-626">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-626">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="socket_flags">
          <span data-ttu-id="3831b-627">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-627">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-628">
            <see cref="T:System.AsyncCallback" /> 委派，會於作業完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-628">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-629">使用者定義的物件，包含接收作業的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-629">A user-defined object that contains information about the receive operation.</span>
          </span>
          <span data-ttu-id="3831b-630">作業完成時會將這個物件傳遞至 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-630">This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-631">開始從已連接的 <see cref="T:System.Net.Sockets.Socket" /> 非同步接收資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-631">Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-632">參考非同步讀取的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-632">An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-633">非同步<xref:System.Net.Sockets.Socket.BeginReceive%2A>作業必須完成呼叫<xref:System.Net.Sockets.Socket.EndReceive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-633">The asynchronous <xref:System.Net.Sockets.Socket.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndReceive%2A> method.</span></span> <span data-ttu-id="3831b-634">一般而言，會叫用方法`callback`委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-634">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="3831b-635">這個方法不會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="3831b-635">This method does not block until the operation is complete.</span></span> <span data-ttu-id="3831b-636">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Sockets.Socket.Receive%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="3831b-636">To block until the operation is complete, use one of the <xref:System.Net.Sockets.Socket.Receive%2A> method overloads.</span></span>  
  
 <span data-ttu-id="3831b-637">若要取消暫止<xref:System.Net.Sockets.Socket.BeginReceive%2A>，呼叫<xref:System.Net.Sockets.Socket.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-637">To cancel a pending <xref:System.Net.Sockets.Socket.BeginReceive%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-638">如需使用非同步程式設計模型的詳細資訊，請參閱 < [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-638">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-639">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-639">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-640">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-640">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-641">該執行緒結束時，會取消指定的執行緒所起始的所有 I/O。</span><span class="sxs-lookup"><span data-stu-id="3831b-641">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="3831b-642">如果執行緒結束的作業完成之前，暫止的非同步作業可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="3831b-642">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-643">`state` 是使用者定義的具現化。</span><span class="sxs-lookup"><span data-stu-id="3831b-643">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-644">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-644">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-645">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-645">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-646">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-646">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-647">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-647">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-648">下列程式碼範例會開始以非同步方式接收來自已連接的 資料<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-648">The following code example begins to asynchronously receive data from a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#11)]
 [!code-csharp[Socket_Async_Send_Receive#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#11)]
 [!code-vb[Socket_Async_Send_Receive#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#11)]  
  
 [!code-cpp[Socket_Async_Send_Receive#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#7)]
 [!code-csharp[Socket_Async_Send_Receive#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#7)]
 [!code-vb[Socket_Async_Send_Receive#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#7)]  
  
 [!code-cpp[Socket_Async_Send_Receive#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#8)]
 [!code-csharp[Socket_Async_Send_Receive#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#8)]
 [!code-vb[Socket_Async_Send_Receive#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-649">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-649">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-650">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-650">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-651">這個 <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-651">
              <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-652">
            <paramref name="offset" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-652">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-653">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-653">-or-</span>
          </span>
          <span data-ttu-id="3831b-654">
            <paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-654">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="3831b-655">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-655">-or-</span>
          </span>
          <span data-ttu-id="3831b-656">
            <paramref name="size" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-656">
              <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-657">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-657">-or-</span>
          </span>
          <span data-ttu-id="3831b-658">
            <paramref name="size" /> 大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-658">
              <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md">
          <span data-ttu-id="3831b-659">做為回呼方法，委派封送處理</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-659">Marshaling a Delegate as a Callback Method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md">
          <span data-ttu-id="3831b-660">非同步用戶端通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-660">Asynchronous Client Socket Example</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md">
          <span data-ttu-id="3831b-661">非同步伺服器通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-661">Asynchronous Server Socket Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode, AsyncCallback callback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags flags, out System.Net.Sockets.SocketError error, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags flags, [out] valuetype System.Net.Sockets.SocketError&amp; error, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (buffer As Byte(), offset As Integer, size As Integer, flags As SocketFlags, ByRef error As SocketError, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags flags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % error, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : byte[] * int * int * System.Net.Sockets.SocketFlags *  * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginReceive (buffer, offset, size, flags, error, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" />
        <Parameter Name="size" Type="System.Int32" Index="2" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="flags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="error" Type="System.Net.Sockets.SocketError" RefType="out" Index="4" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="5" />
        <Parameter Name="state" Type="System.Object" Index="6" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-662">
            <see cref="T:System.Byte" /> 型別的陣列，為收到資料的存放位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-662">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3831b-663">
            <paramref name="buffer" /> 中存放已接收資料的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-663">The location in <paramref name="buffer" /> to store the received data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-664">要接收的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-664">The number of bytes to receive.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-665">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-665">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="3831b-666">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-666">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="errorCode">
          <span data-ttu-id="3831b-667">
            <see cref="T:System.Net.Sockets.SocketError" /> 物件，儲存通訊端錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-667">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span>
          </span>
        </param>
        <param name="error">
          <span data-ttu-id="3831b-668">
            <see cref="T:System.Net.Sockets.SocketError" /> 物件，儲存通訊端錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-668">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-669">
            <see cref="T:System.AsyncCallback" /> 委派，會於作業完成時參考要叫用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-669">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-670">使用者定義的物件，包含接收作業的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-670">A user-defined object that contains information about the receive operation.</span>
          </span>
          <span data-ttu-id="3831b-671">作業完成時會將這個物件傳遞至 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-671">This object is passed to the <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-672">開始從已連接的 <see cref="T:System.Net.Sockets.Socket" /> 非同步接收資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-672">Begins to asynchronously receive data from a connected <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-673">參考非同步讀取的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-673">An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-674">非同步<xref:System.Net.Sockets.Socket.BeginReceive%2A>作業必須完成呼叫<xref:System.Net.Sockets.Socket.EndReceive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-674">The asynchronous <xref:System.Net.Sockets.Socket.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndReceive%2A> method.</span></span> <span data-ttu-id="3831b-675">一般而言，會叫用方法`callback`委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-675">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="3831b-676">這個方法不會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="3831b-676">This method does not block until the operation is complete.</span></span> <span data-ttu-id="3831b-677">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Sockets.Socket.Receive%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="3831b-677">To block until the operation is complete, use one of the <xref:System.Net.Sockets.Socket.Receive%2A> method overloads.</span></span>  
  
 <span data-ttu-id="3831b-678">若要取消暫止<xref:System.Net.Sockets.Socket.BeginReceive%2A>，呼叫<xref:System.Net.Sockets.Socket.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-678">To cancel a pending <xref:System.Net.Sockets.Socket.BeginReceive%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-679">如需使用非同步程式設計模型的詳細資訊，請參閱 < [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-679">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-680">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-680">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-681">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-681">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-682">該執行緒結束時，會取消指定的執行緒所起始的所有 I/O。</span><span class="sxs-lookup"><span data-stu-id="3831b-682">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="3831b-683">如果執行緒結束的作業完成之前，暫止的非同步作業可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="3831b-683">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-684">`state` 是使用者定義的具現化。</span><span class="sxs-lookup"><span data-stu-id="3831b-684">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-685">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-685">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-686">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-686">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-687">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-687">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-688">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-688">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-689">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-689">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-690">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-690">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-691">這個 <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-691">
              <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-692">
            <paramref name="offset" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-692">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-693">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-693">-or-</span>
          </span>
          <span data-ttu-id="3831b-694">
            <paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-694">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="3831b-695">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-695">-or-</span>
          </span>
          <span data-ttu-id="3831b-696">
            <paramref name="size" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-696">
              <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-697">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-697">-or-</span>
          </span>
          <span data-ttu-id="3831b-698">
            <paramref name="size" /> 大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-698">
              <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md">
          <span data-ttu-id="3831b-699">做為回呼方法，委派封送處理</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-699">Marshaling a Delegate as a Callback Method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md">
          <span data-ttu-id="3831b-700">非同步用戶端通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-700">Asynchronous Client Socket Example</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md">
          <span data-ttu-id="3831b-701">非同步伺服器通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-701">Asynchronous Server Socket Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFrom">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFrom (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, ref System.Net.EndPoint remoteEP, AsyncCallback callback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFrom(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint&amp; remoteEP, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFrom(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ % remoteEP, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFrom (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socket_flags, ref System.Net.EndPoint remote_end, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFrom(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socket_flags, class System.Net.EndPoint&amp; remote_end, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFrom (buffer As Byte(), offset As Integer, size As Integer, socket_flags As SocketFlags, ByRef remote_end As EndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFrom(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socket_flags, System::Net::EndPoint ^ % remote_end, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFrom : byte[] * int * int * System.Net.Sockets.SocketFlags *  * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginReceiveFrom (buffer, offset, size, socket_flags, remote_end, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" />
        <Parameter Name="size" Type="System.Int32" Index="2" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="socket_flags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" RefType="ref" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="remote_end" Type="System.Net.EndPoint" RefType="ref" Index="4" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="5" />
        <Parameter Name="state" Type="System.Object" Index="6" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-702">
            <see cref="T:System.Byte" /> 型別的陣列，為收到資料的存放位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-702">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3831b-703">
            <paramref name="buffer" /> 參數中要儲存資料的以零起始的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-703">The zero-based position in the <paramref name="buffer" /> parameter at which to store the data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-704">要接收的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-704">The number of bytes to receive.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-705">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-705">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="socket_flags">
          <span data-ttu-id="3831b-706">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-706">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="3831b-707">
            <see cref="T:System.Net.EndPoint" />，表示資料的來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-707">An <see cref="T:System.Net.EndPoint" /> that represents the source of the data.</span>
          </span>
        </param>
        <param name="remote_end">
          <span data-ttu-id="3831b-708">
            <see cref="T:System.Net.EndPoint" />，表示資料的來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-708">An <see cref="T:System.Net.EndPoint" /> that represents the source of the data.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-709">
            <see cref="T:System.AsyncCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-709">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-710">物件，包含這個要求的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-710">An object that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-711">開始從指定的網路裝置非同步接收資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-711">Begins to asynchronously receive data from a specified network device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-712">參考非同步讀取的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-712">An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-713"><xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>方法可讓您開始以非同步方式讀取從遠端主機的 無連接的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-713">The <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method starts asynchronously reading connectionless datagrams from a remote host.</span></span> <span data-ttu-id="3831b-714">呼叫<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>方法可讓您能夠接收不同的執行緒內的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-714">Calling the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method gives you the ability to receive data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="3831b-715">您可以建立回呼方法可實作<xref:System.AsyncCallback>委派，並將其名稱來傳遞<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-715">You can create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-716">若要這樣做，在非常小，您`state`參數必須包含已連接，或預設<xref:System.Net.Sockets.Socket>正在使用的通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-716">To do this, at the very minimum, your `state` parameter must contain the connected or default <xref:System.Net.Sockets.Socket> being used for communication.</span></span> <span data-ttu-id="3831b-717">如果回呼需要更多的資訊時，您可以建立小型類別以包裝<xref:System.Net.Sockets.Socket>和其他必要的資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-717">If your callback needs more information, you can create a small class to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="3831b-718">傳遞至這個類別的執行個體<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>方法，透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-718">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="3831b-719">您的回呼方法應該叫用<xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-719">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-720">當您的應用程式呼叫<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>，系統會使用個別的執行緒來執行指定的回呼方法，它就會封鎖<xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>直到<xref:System.Net.Sockets.Socket>讀取資料，或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-720">When your application calls <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>, the system will use a separate thread to execute the specified callback method, and it will block on <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> until the <xref:System.Net.Sockets.Socket> reads data or throws an exception.</span></span> <span data-ttu-id="3831b-721">如果您想封鎖之後呼叫的原始執行緒<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>方法，請使用<xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-721">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method, use <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-722">當您想要繼續執行原始執行緒時，呼叫 T:System.Threading.ManualResetEvent 在回呼方法中的 Set 方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-722">Call the Set method on a T:System.Threading.ManualResetEvent in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="3831b-723">如需有關如何撰寫回呼方法的詳細資訊，請參閱[封送處理為回呼方法的委派](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-723">For additional information on writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-724">然後再呼叫<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>，您必須明確地繫結<xref:System.Net.Sockets.Socket>本機端點，使用<xref:System.Net.Sockets.Socket.Bind%2A>方法，或<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-724">Before calling <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>, you must explicitly bind the <xref:System.Net.Sockets.Socket> to a local endpoint using the <xref:System.Net.Sockets.Socket.Bind%2A> method, or <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="3831b-725">這個方法會讀取資料到`buffer`參數，而擷取的遠端主機傳送資料的端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-725">This method reads data into the `buffer` parameter, and captures the remote host endpoint from which the data is sent.</span></span> <span data-ttu-id="3831b-726">如需如何擷取此端點的資訊，請參閱<xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-726">For information on how to retrieve this endpoint, refer to <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>.</span></span> <span data-ttu-id="3831b-727">這個方法是最有用，如果您想要以非同步方式接收來自未知的主機或多部主機的 無連接的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-727">This method is most useful if you intend to asynchronously receive connectionless datagrams from an unknown host or multiple hosts.</span></span> <span data-ttu-id="3831b-728">在這些情況下，<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>會讀取到區域網路緩衝區收到第一個加入佇列的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-728">In these cases, <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> will read the first enqueued datagram received into the local network buffer.</span></span> <span data-ttu-id="3831b-729">如果您收到的資料包大於的大小`buffer`，則<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>方法將會填滿`buffer`盡可能是盡可能，，並擲回的訊息與<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-729">If the datagram you receive is larger than the size of `buffer`, the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method will fill `buffer` with as much of the message as is possible, and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-730">如果您使用的不可靠的通訊協定，超過的資料將會遺失。</span><span class="sxs-lookup"><span data-stu-id="3831b-730">If you are using an unreliable protocol, the excess data will be lost.</span></span> <span data-ttu-id="3831b-731">如果您使用可靠的通訊協定、 過多的資料會保留由服務提供者，而且您可以呼叫來擷取<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>夠大的緩衝區的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-731">If you are using a reliable protocol, the excess data will be retained by the service provider and you can retrieve it by calling the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method with a large enough buffer.</span></span>  
  
 <span data-ttu-id="3831b-732">若要保證，一律會傳回遠端主機的端點，應用程式應該明確繫結<xref:System.Net.Sockets.Socket>本機端點，使用<xref:System.Net.Sockets.Socket.Bind%2A>方法，然後呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法`optionLevel`參數設定為<xref:System.Net.Sockets.SocketOptionLevel.IP>或<xref:System.Net.Sockets.SocketOptionLevel.IPv6>適時`optionName`參數設定為<xref:System.Net.Sockets.SocketOptionName.PacketInformation>，而`optionValue`參數來啟用此選項，然後再呼叫<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-732">To guarantee that the remote host endpoint is always returned, an application should explicitly bind the <xref:System.Net.Sockets.Socket> to a local endpoint using the <xref:System.Net.Sockets.Socket.Bind%2A> method and then call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method with the `optionLevel` parameter set to <xref:System.Net.Sockets.SocketOptionLevel.IP> or <xref:System.Net.Sockets.SocketOptionLevel.IPv6> as appropriate, the `optionName` parameter set to <xref:System.Net.Sockets.SocketOptionName.PacketInformation>, and the `optionValue` parameter to enable this option before calling the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-733">否則，可能會遠端主機的端點，並不會傳回當接收者已呼叫之前，傳送者已傳送的資料包數目<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-733">Otherwise, it is possible for the remote host endpoint to not be returned when the sender has sent a number of datagrams before the receiver has called the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-734">雖然<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>適用於無連線的通訊協定，您可以使用連線導向的通訊協定以及。</span><span class="sxs-lookup"><span data-stu-id="3831b-734">Although <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> is intended for connectionless protocols, you can use a connection-oriented protocol as well.</span></span> <span data-ttu-id="3831b-735">如果您選擇這樣做，您必須先請建立遠端主機連接藉由呼叫<xref:System.Net.Sockets.Socket.Connect%2A>  /  <xref:System.Net.Sockets.Socket.BeginConnect%2A>方法，或藉由呼叫接受連入連線要求<xref:System.Net.Sockets.Socket.Accept%2A>或<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-735">If you choose to do so, you must first either establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> / <xref:System.Net.Sockets.Socket.BeginConnect%2A> method or accept an incoming connection request by calling the <xref:System.Net.Sockets.Socket.Accept%2A> or <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="3831b-736">如果您呼叫<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>方法建立，或接受連線之前，您就有<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-736">If you call the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method before establishing or accepting a connection, you will get a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-737">您也可以建立預設遠端主機的無連線的通訊協定，才能呼叫<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-737">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-738">在這些情況下，任一<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>方法將會忽略`remoteEP`參數和只接收來自已連接的資料或預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-738">In either of these cases, the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method will ignore the `remoteEP` parameter and only receive data from the connected or default remote host.</span></span>  
  
 <span data-ttu-id="3831b-739">使用連線導向的通訊端<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>會讀取位於不超過所指定的位元組數目的資料量`size`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-739">With connection-oriented sockets, <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> will read as much data as is available up to the number of bytes specified by the `size` parameter.</span></span>  
  
 <span data-ttu-id="3831b-740">若要取消暫止<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>，呼叫<xref:System.Net.Sockets.Socket.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-740">To cancel a pending <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-741">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-741">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-742">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-742">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-743">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-743">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-744">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-744">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-745">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-745">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-746">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-746">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-747">下列程式碼範例以非同步方式接收來自遠端主機的無連接的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-747">The following code example asynchronously receives connectionless datagrams from a remote host.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#41](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#41)]
 [!code-csharp[Socket_Async_Send_Receive#41](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#41)]
 [!code-vb[Socket_Async_Send_Receive#41](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-748">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-748">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3831b-749">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-749">-or-</span>
          </span>
          <span data-ttu-id="3831b-750">
            <paramref name="remoteEP" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-750">
              <paramref name="remoteEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-751">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-751">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-752">
            <paramref name="offset" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-752">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-753">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-753">-or-</span>
          </span>
          <span data-ttu-id="3831b-754">
            <paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-754">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="3831b-755">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-755">-or-</span>
          </span>
          <span data-ttu-id="3831b-756">
            <paramref name="size" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-756">
              <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-757">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-757">-or-</span>
          </span>
          <span data-ttu-id="3831b-758">
            <paramref name="size" /> 大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-758">
              <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-759">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-759">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-760">在呼叫堆疊中位置較高的呼叫端對於要求的作業沒有權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-760">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Accept" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md">
          <span data-ttu-id="3831b-761">做為回呼方法，委派封送處理</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-761">Marshaling a Delegate as a Callback Method</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveMessageFrom">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveMessageFrom (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, ref System.Net.EndPoint remoteEP, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveMessageFrom(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint&amp; remoteEP, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveMessageFrom(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ % remoteEP, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveMessageFrom : byte[] * int * int * System.Net.Sockets.SocketFlags *  * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginReceiveMessageFrom (buffer, offset, size, socketFlags, remoteEP, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" RefType="ref" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-762">
            <see cref="T:System.Byte" /> 型別的陣列，為收到資料的存放位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-762">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3831b-763">
            <paramref name="buffer" /> 參數中要儲存資料的以零起始的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-763">The zero-based position in the <paramref name="buffer" /> parameter at which to store the data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-764">要接收的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-764">The number of bytes to receive.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-765">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-765">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="3831b-766">
            <see cref="T:System.Net.EndPoint" />，表示資料的來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-766">An <see cref="T:System.Net.EndPoint" /> that represents the source of the data.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-767">
            <see cref="T:System.AsyncCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-767">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-768">物件，包含這個要求的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-768">An object that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-769">使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" />，開始以非同步方式接收指定之位元組數目的資料至資料緩衝區的指定位置，並儲存端點和封包資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-769">Begins to asynchronously receive the specified number of bytes of data into the specified location of the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint and packet information..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-770">參考非同步讀取的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-770">An <see cref="T:System.IAsyncResult" /> that references the asynchronous read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-771">非同步接收作業必須完成呼叫<xref:System.Net.Sockets.Socket.EndReceiveMessageFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-771">The asynchronous receive operation must be completed by calling the <xref:System.Net.Sockets.Socket.EndReceiveMessageFrom%2A> method.</span></span> <span data-ttu-id="3831b-772">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-772">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="3831b-773">這個方法不會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="3831b-773">This method does not block until the operation completes.</span></span> <span data-ttu-id="3831b-774">若要封鎖，直到作業完成為止，使用<xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-774">To block until the operation completes, use the <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-775">若要取消暫止<xref:System.Net.Sockets.Socket.BeginReceiveMessageFrom%2A>，呼叫<xref:System.Net.Sockets.Socket.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-775">To cancel a pending <xref:System.Net.Sockets.Socket.BeginReceiveMessageFrom%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-776">如需使用非同步程式設計模型的詳細資訊，請參閱[Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="3831b-776">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="3831b-777">這個方法會讀取資料到`buffer`參數，和擷取的遠端主機資料會傳送的端點，以及收到的封包的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-777">This method reads data into the `buffer` parameter, and captures the remote host endpoint from which the data is sent, as well as information about the received packet.</span></span> <span data-ttu-id="3831b-778">如需如何擷取此端點的資訊，請參閱<xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-778">For information on how to retrieve this endpoint, refer to <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>.</span></span> <span data-ttu-id="3831b-779">這個方法是最有用，如果您想要以非同步方式接收來自未知的主機或多部主機的 無連接的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-779">This method is most useful if you intend to asynchronously receive connectionless datagrams from an unknown host or multiple hosts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-780">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-780">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-781">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-781">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-782">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-782">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-783">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-783">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-784">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-784">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-785">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-785">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-786">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-786">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3831b-787">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-787">-or-</span>
          </span>
          <span data-ttu-id="3831b-788">
            <paramref name="remoteEP" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-788">
              <paramref name="remoteEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-789">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-789">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-790">
            <paramref name="offset" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-790">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-791">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-791">-or-</span>
          </span>
          <span data-ttu-id="3831b-792">
            <paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-792">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="3831b-793">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-793">-or-</span>
          </span>
          <span data-ttu-id="3831b-794">
            <paramref name="size" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-794">
              <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-795">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-795">-or-</span>
          </span>
          <span data-ttu-id="3831b-796">
            <paramref name="size" /> 大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-796">
              <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-797">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-797">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-798">作業系統是 Windows 2000 (含) 以前版本，但這個方法需要的是 Windows XP。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-798">The operating system is Windows 2000 or earlier, and this method requires Windows XP.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-799">非同步傳送資料至已連接的 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-799">Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginSend (buffers, socketFlags, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffers">
          <span data-ttu-id="3831b-800">
            <see cref="T:System.Byte" /> 型別的陣列，包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-800">An array of type <see cref="T:System.Byte" /> that contains the data to send.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-801">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-801">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-802">
            <see cref="T:System.AsyncCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-802">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-803">物件，包含這個要求的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-803">An object that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-804">非同步傳送資料至已連接的 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-804">Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-805">參考非同步傳送的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-805">An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-806"><xref:System.Net.Sockets.Socket.BeginSend%2A>方法會啟動非同步傳送作業中所建立的遠端主機<xref:System.Net.Sockets.Socket.Connect%2A>， <xref:System.Net.Sockets.Socket.BeginConnect%2A>， <xref:System.Net.Sockets.Socket.Accept%2A>，或<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-806">The <xref:System.Net.Sockets.Socket.BeginSend%2A> method starts an asynchronous send operation to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="3831b-807"><xref:System.Net.Sockets.Socket.BeginSend%2A> 如果您未先呼叫將會擲回例外狀況<xref:System.Net.Sockets.Socket.Accept%2A>， <xref:System.Net.Sockets.Socket.BeginAccept%2A>， <xref:System.Net.Sockets.Socket.Connect%2A>，或<xref:System.Net.Sockets.Socket.BeginConnect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-807"><xref:System.Net.Sockets.Socket.BeginSend%2A> will throw an exception if you do not first call <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="3831b-808">呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>方法可讓您能夠傳送不同的執行緒中的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-808">Calling the <xref:System.Net.Sockets.Socket.BeginSend%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="3831b-809">您可以建立回呼方法可實作<xref:System.AsyncCallback>委派，並將其名稱來傳遞<xref:System.Net.Sockets.Socket.BeginSend%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-809">You can create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method.</span></span> <span data-ttu-id="3831b-810">若要這樣做，在非常小，您`state`參數必須包含已連接，或預設<xref:System.Net.Sockets.Socket>正在使用的通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-810">To do this, at the very minimum, your `state` parameter must contain the connected or default <xref:System.Net.Sockets.Socket> being used for communication.</span></span> <span data-ttu-id="3831b-811">如果回呼需要更多的資訊時，您可以建立的小型類別或結構以容納<xref:System.Net.Sockets.Socket>和其他必要的資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-811">If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="3831b-812">傳遞至這個類別的執行個體<xref:System.Net.Sockets.Socket.BeginSend%2A>方法，透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-812">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="3831b-813">您的回呼方法應該叫用<xref:System.Net.Sockets.Socket.EndSend%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-813">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndSend%2A> method.</span></span> <span data-ttu-id="3831b-814">當您的應用程式呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>，系統會使用個別的執行緒來執行指定的回呼方法，並會封鎖<xref:System.Net.Sockets.Socket.EndSend%2A>直到<xref:System.Net.Sockets.Socket>傳送要求的位元組數目，或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-814">When your application calls <xref:System.Net.Sockets.Socket.BeginSend%2A>, the system will use a separate thread to execute the specified callback method, and will block on <xref:System.Net.Sockets.Socket.EndSend%2A> until the <xref:System.Net.Sockets.Socket> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="3831b-815">如果您想封鎖之後呼叫的原始執行緒<xref:System.Net.Sockets.Socket.BeginSend%2A>方法，請使用<xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-815">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginSend%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3831b-816">當您想要繼續執行原始執行緒時，呼叫 T:System.Threading.ManualResetEvent 在回呼方法中的 Set 方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-816">Call the Set method on a T:System.Threading.ManualResetEvent in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="3831b-817">如需有關撰寫回呼方法的詳細資訊，請參閱[封送處理為回呼方法的委派](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-817">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="3831b-818">適用於連線導向的通訊協定，雖然<xref:System.Net.Sockets.Socket.BeginSend%2A>也適用於無連線的通訊協定，前提是您第一次呼叫<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法，以建立預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-818">Although intended for connection-oriented protocols, <xref:System.Net.Sockets.Socket.BeginSend%2A> also works for connectionless protocols, provided that you first call the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method to establish a default remote host.</span></span> <span data-ttu-id="3831b-819">如果您使用無連線的通訊協定和計劃將資料傳送至數個不同的主控件，您應該使用<xref:System.Net.Sockets.Socket.BeginSendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-819">If you are using a connectionless protocol and plan to send data to several different hosts, you should use <xref:System.Net.Sockets.Socket.BeginSendTo%2A>.</span></span> <span data-ttu-id="3831b-820">可以使用<xref:System.Net.Sockets.Socket.BeginSendTo%2A>即使您已建立預設遠端主機與之後<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-820">It is okay to use <xref:System.Net.Sockets.Socket.BeginSendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-821">您也可以變更預設遠端主機，才能呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>藉由再次呼叫<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.BeginConnect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-821">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.BeginSend%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="3831b-822">您也必須確定您的緩衝區的大小未超過最大的封包大小為基礎的服務提供者無連接的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-822">With connectionless protocols, you must also be sure that the size of your buffer does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-823">若是如此，將不會傳送資料包並<xref:System.Net.Sockets.Socket.BeginSend%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-823">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.BeginSend%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="3831b-824">如果您指定<xref:System.Net.Sockets.SocketFlags.DontRoute>旗標標示為`socketflags`參數，您要將不會路由傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-824">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-825">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-825">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-826">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-826">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-827">該執行緒結束時，會取消指定的執行緒所起始的所有 I/O。</span><span class="sxs-lookup"><span data-stu-id="3831b-827">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="3831b-828">如果執行緒結束的作業完成之前，暫止的非同步作業可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="3831b-828">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-829">`state` 是使用者定義的具現化。</span><span class="sxs-lookup"><span data-stu-id="3831b-829">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-830">成功完成傳送不表示已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-830">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="3831b-831">如果沒有緩衝區可用空間來保存資料傳輸的傳輸系統內，則除非通訊端已處於未封鎖模式，將會封鎖傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-831">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-832">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-832">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-833">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-833">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-834">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-834">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-835">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-835">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-836">
            <paramref name="buffers" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-836">
              <paramref name="buffers" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-837">
            <paramref name="buffers" /> 是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-837">
              <paramref name="buffers" /> is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-838">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-838">An error occurred when attempting to access the socket.</span>
          </span>
          <span data-ttu-id="3831b-839">請參閱以下註解章節。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-839">See remarks section below.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-840">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-840">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md">
          <span data-ttu-id="3831b-841">做為回呼方法，委派封送處理</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-841">Marshaling a Delegate as a Callback Method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md">
          <span data-ttu-id="3831b-842">非同步用戶端通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-842">Asynchronous Client Socket Example</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md">
          <span data-ttu-id="3831b-843">非同步伺服器通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-843">Asynchronous Server Socket Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags *  * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginSend (buffers, socketFlags, errorCode, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffers">
          <span data-ttu-id="3831b-844">
            <see cref="T:System.Byte" /> 型別的陣列，包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-844">An array of type <see cref="T:System.Byte" /> that contains the data to send.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-845">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-845">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="errorCode">
          <span data-ttu-id="3831b-846">
            <see cref="T:System.Net.Sockets.SocketError" /> 物件，儲存通訊端錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-846">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-847">
            <see cref="T:System.AsyncCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-847">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-848">物件，包含這個要求的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-848">An object that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-849">非同步傳送資料至已連接的 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-849">Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-850">參考非同步傳送的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-850">An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-851"><xref:System.Net.Sockets.Socket.BeginSend%2A>方法會啟動非同步傳送作業中所建立的遠端主機<xref:System.Net.Sockets.Socket.Connect%2A>， <xref:System.Net.Sockets.Socket.BeginConnect%2A>， <xref:System.Net.Sockets.Socket.Accept%2A>，或<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-851">The <xref:System.Net.Sockets.Socket.BeginSend%2A> method starts an asynchronous send operation to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="3831b-852"><xref:System.Net.Sockets.Socket.BeginSend%2A> 如果您未先呼叫將會擲回例外狀況<xref:System.Net.Sockets.Socket.Accept%2A>， <xref:System.Net.Sockets.Socket.BeginAccept%2A>， <xref:System.Net.Sockets.Socket.Connect%2A>，或<xref:System.Net.Sockets.Socket.BeginConnect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-852"><xref:System.Net.Sockets.Socket.BeginSend%2A> will throw an exception if you do not first call <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="3831b-853">呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>方法可讓您能夠傳送不同的執行緒中的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-853">Calling the <xref:System.Net.Sockets.Socket.BeginSend%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="3831b-854">您可以建立回呼方法可實作<xref:System.AsyncCallback>委派，並將其名稱來傳遞<xref:System.Net.Sockets.Socket.BeginSend%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-854">You can create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method.</span></span> <span data-ttu-id="3831b-855">若要這樣做，在非常小，您`state`參數必須包含已連接，或預設<xref:System.Net.Sockets.Socket>正在使用的通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-855">To do this, at the very minimum, your `state` parameter must contain the connected or default <xref:System.Net.Sockets.Socket> being used for communication.</span></span> <span data-ttu-id="3831b-856">如果回呼需要更多的資訊時，您可以建立的小型類別或結構以容納<xref:System.Net.Sockets.Socket>和其他必要的資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-856">If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="3831b-857">傳遞至這個類別的執行個體<xref:System.Net.Sockets.Socket.BeginSend%2A>方法，透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-857">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="3831b-858">您的回呼方法應該叫用<xref:System.Net.Sockets.Socket.EndSend%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-858">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndSend%2A> method.</span></span> <span data-ttu-id="3831b-859">當您的應用程式呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>，系統會使用個別的執行緒來執行指定的回呼方法，並會封鎖<xref:System.Net.Sockets.Socket.EndSend%2A>直到<xref:System.Net.Sockets.Socket>傳送要求的位元組數目，或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-859">When your application calls <xref:System.Net.Sockets.Socket.BeginSend%2A>, the system will use a separate thread to execute the specified callback method, and will block on <xref:System.Net.Sockets.Socket.EndSend%2A> until the <xref:System.Net.Sockets.Socket> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="3831b-860">如果您想封鎖之後呼叫的原始執行緒<xref:System.Net.Sockets.Socket.BeginSend%2A>方法，請使用<xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-860">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginSend%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3831b-861">在上呼叫 Set 方法<xref:System.Threading.ManualResetEvent>在回呼方法，當您想要繼續執行的原始執行緒時。</span><span class="sxs-lookup"><span data-stu-id="3831b-861">Call the Set method on a <xref:System.Threading.ManualResetEvent> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="3831b-862">如需有關撰寫回呼方法的詳細資訊，請參閱[封送處理為回呼方法的委派](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-862">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="3831b-863">適用於連線導向的通訊協定，雖然<xref:System.Net.Sockets.Socket.BeginSend%2A>也適用於無連線的通訊協定，前提是您第一次呼叫<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法，以建立預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-863">Although intended for connection-oriented protocols, <xref:System.Net.Sockets.Socket.BeginSend%2A> also works for connectionless protocols, provided that you first call the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method to establish a default remote host.</span></span> <span data-ttu-id="3831b-864">如果您使用無連線的通訊協定和計劃將資料傳送至數個不同的主控件，您應該使用<xref:System.Net.Sockets.Socket.BeginSendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-864">If you are using a connectionless protocol and plan to send data to several different hosts, you should use <xref:System.Net.Sockets.Socket.BeginSendTo%2A>.</span></span> <span data-ttu-id="3831b-865">可以使用<xref:System.Net.Sockets.Socket.BeginSendTo%2A>即使您已建立預設遠端主機與之後<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-865">It is okay to use <xref:System.Net.Sockets.Socket.BeginSendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-866">您也可以變更預設遠端主機，才能呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>藉由再次呼叫<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.BeginConnect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-866">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.BeginSend%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="3831b-867">您也必須確定您的緩衝區的大小未超過最大的封包大小為基礎的服務提供者無連接的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-867">With connectionless protocols, you must also be sure that the size of your buffer does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-868">若是如此，將不會傳送資料包並<xref:System.Net.Sockets.Socket.BeginSend%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-868">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.BeginSend%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="3831b-869">如果您指定<xref:System.Net.Sockets.SocketFlags.DontRoute>旗標標示為`socketflags`參數，您要將不會路由傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-869">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-870">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-870">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-871">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-871">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-872">該執行緒結束時，會取消指定的執行緒所起始的所有 I/O。</span><span class="sxs-lookup"><span data-stu-id="3831b-872">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="3831b-873">如果執行緒結束的作業完成之前，暫止的非同步作業可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="3831b-873">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-874">`state` 是使用者定義的具現化。</span><span class="sxs-lookup"><span data-stu-id="3831b-874">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-875">成功完成傳送不表示已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-875">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="3831b-876">如果沒有緩衝區可用空間來保存資料傳輸的傳輸系統內，則除非通訊端已處於未封鎖模式，將會封鎖傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-876">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-877">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-877">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-878">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-878">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-879">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-879">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-880">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-880">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-881">
            <paramref name="buffers" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-881">
              <paramref name="buffers" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-882">
            <paramref name="buffers" /> 是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-882">
              <paramref name="buffers" /> is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-883">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-883">An error occurred when attempting to access the socket.</span>
          </span>
          <span data-ttu-id="3831b-884">請參閱以下註解章節。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-884">See remarks section below.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-885">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-885">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md">
          <span data-ttu-id="3831b-886">做為回呼方法，委派封送處理</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-886">Marshaling a Delegate as a Callback Method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md">
          <span data-ttu-id="3831b-887">非同步用戶端通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-887">Asynchronous Client Socket Example</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md">
          <span data-ttu-id="3831b-888">非同步伺服器通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-888">Asynchronous Server Socket Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * int * System.Net.Sockets.SocketFlags *  * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginSend (buffer, offset, size, socketFlags, errorCode, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-889">
            <see cref="T:System.Byte" /> 型別的陣列，包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-889">An array of type <see cref="T:System.Byte" /> that contains the data to send.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3831b-890">
            <paramref name="buffer" /> 參數中要開始傳送資料的以零起始的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-890">The zero-based position in the <paramref name="buffer" /> parameter at which to begin sending data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-891">要傳送的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-891">The number of bytes to send.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-892">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-892">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="errorCode">
          <span data-ttu-id="3831b-893">
            <see cref="T:System.Net.Sockets.SocketError" /> 物件，儲存通訊端錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-893">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-894">
            <see cref="T:System.AsyncCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-894">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-895">物件，包含這個要求的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-895">An object that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-896">非同步傳送資料至已連接的 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-896">Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-897">參考非同步傳送的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-897">An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-898"><xref:System.Net.Sockets.Socket.BeginSend%2A>方法會啟動非同步傳送作業中所建立的遠端主機<xref:System.Net.Sockets.Socket.Connect%2A>， <xref:System.Net.Sockets.Socket.BeginConnect%2A>， <xref:System.Net.Sockets.Socket.Accept%2A>，或<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-898">The <xref:System.Net.Sockets.Socket.BeginSend%2A> method starts an asynchronous send operation to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="3831b-899"><xref:System.Net.Sockets.Socket.BeginSend%2A> 如果您未先呼叫將會擲回例外狀況<xref:System.Net.Sockets.Socket.Accept%2A>， <xref:System.Net.Sockets.Socket.BeginAccept%2A>， <xref:System.Net.Sockets.Socket.Connect%2A>，或<xref:System.Net.Sockets.Socket.BeginConnect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-899"><xref:System.Net.Sockets.Socket.BeginSend%2A> will throw an exception if you do not first call <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="3831b-900">呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>方法可讓您能夠傳送不同的執行緒中的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-900">Calling the <xref:System.Net.Sockets.Socket.BeginSend%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="3831b-901">您可以建立回呼方法可實作<xref:System.AsyncCallback>委派，並將其名稱來傳遞<xref:System.Net.Sockets.Socket.BeginSend%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-901">You can create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method.</span></span> <span data-ttu-id="3831b-902">若要這樣做，在非常小，您`state`參數必須包含已連接，或預設<xref:System.Net.Sockets.Socket>正在使用的通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-902">To do this, at the very minimum, your `state` parameter must contain the connected or default <xref:System.Net.Sockets.Socket> being used for communication.</span></span> <span data-ttu-id="3831b-903">如果回呼需要更多的資訊時，您可以建立的小型類別或結構以容納<xref:System.Net.Sockets.Socket>和其他必要的資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-903">If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="3831b-904">傳遞至這個類別的執行個體<xref:System.Net.Sockets.Socket.BeginSend%2A>方法，透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-904">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="3831b-905">您的回呼方法應該叫用<xref:System.Net.Sockets.Socket.EndSend%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-905">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndSend%2A> method.</span></span> <span data-ttu-id="3831b-906">當您的應用程式呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>，系統會使用個別的執行緒來執行指定的回呼方法，並會封鎖<xref:System.Net.Sockets.Socket.EndSend%2A>直到<xref:System.Net.Sockets.Socket>傳送要求的位元組數目，或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-906">When your application calls <xref:System.Net.Sockets.Socket.BeginSend%2A>, the system will use a separate thread to execute the specified callback method, and will block on <xref:System.Net.Sockets.Socket.EndSend%2A> until the <xref:System.Net.Sockets.Socket> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="3831b-907">如果您想封鎖之後呼叫的原始執行緒<xref:System.Net.Sockets.Socket.BeginSend%2A>方法，請使用<xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-907">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginSend%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3831b-908">當您想要繼續執行原始執行緒時，呼叫 T:System.Threading.ManualResetEvent 在回呼方法中的 Set 方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-908">Call the Set method on a T:System.Threading.ManualResetEvent in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="3831b-909">如需有關撰寫回呼方法的詳細資訊，請參閱[封送處理為回呼方法的委派](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-909">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="3831b-910">適用於連線導向的通訊協定，雖然<xref:System.Net.Sockets.Socket.BeginSend%2A>也適用於無連線的通訊協定，前提是您第一次呼叫<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法，以建立預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-910">Although intended for connection-oriented protocols, <xref:System.Net.Sockets.Socket.BeginSend%2A> also works for connectionless protocols, provided that you first call the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method to establish a default remote host.</span></span> <span data-ttu-id="3831b-911">如果您使用無連線的通訊協定和計劃將資料傳送至數個不同的主控件，您應該使用<xref:System.Net.Sockets.Socket.BeginSendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-911">If you are using a connectionless protocol and plan to send data to several different hosts, you should use <xref:System.Net.Sockets.Socket.BeginSendTo%2A>.</span></span> <span data-ttu-id="3831b-912">可以使用<xref:System.Net.Sockets.Socket.BeginSendTo%2A>即使您已建立預設遠端主機與之後<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-912">It is okay to use <xref:System.Net.Sockets.Socket.BeginSendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-913">您也可以變更預設遠端主機，才能呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>藉由再次呼叫<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.BeginConnect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-913">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.BeginSend%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="3831b-914">您也必須確定您的緩衝區的大小未超過最大的封包大小為基礎的服務提供者無連接的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-914">With connectionless protocols, you must also be sure that the size of your buffer does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-915">若是如此，將不會傳送資料包並<xref:System.Net.Sockets.Socket.BeginSend%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-915">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.BeginSend%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="3831b-916">如果您指定<xref:System.Net.Sockets.SocketFlags.DontRoute>旗標標示為`socketflags`參數，您要將不會路由傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-916">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-917">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-917">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-918">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-918">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-919">該執行緒結束時，會取消指定的執行緒所起始的所有 I/O。</span><span class="sxs-lookup"><span data-stu-id="3831b-919">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="3831b-920">如果執行緒結束的作業完成之前，暫止的非同步作業可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="3831b-920">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-921">`state` 是使用者定義的具現化。</span><span class="sxs-lookup"><span data-stu-id="3831b-921">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-922">成功完成傳送不表示已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-922">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="3831b-923">如果沒有緩衝區可用空間來保存資料傳輸的傳輸系統內，則除非通訊端已處於未封鎖模式，將會封鎖傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-923">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-924">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-924">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-925">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-925">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-926">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-926">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-927">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-927">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-928">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-928">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-929">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-929">An error occurred when attempting to access the socket.</span>
          </span>
          <span data-ttu-id="3831b-930">請參閱以下註解章節。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-930">See remarks section below.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-931">
            <paramref name="offset" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-931">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-932">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-932">-or-</span>
          </span>
          <span data-ttu-id="3831b-933">
            <paramref name="offset" /> 小於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-933">
              <paramref name="offset" /> is less than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="3831b-934">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-934">-or-</span>
          </span>
          <span data-ttu-id="3831b-935">
            <paramref name="size" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-935">
              <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-936">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-936">-or-</span>
          </span>
          <span data-ttu-id="3831b-937">
            <paramref name="size" /> 大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-937">
              <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-938">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-938">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md">
          <span data-ttu-id="3831b-939">做為回呼方法，委派封送處理</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-939">Marshaling a Delegate as a Callback Method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md">
          <span data-ttu-id="3831b-940">非同步用戶端通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-940">Asynchronous Client Socket Example</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md">
          <span data-ttu-id="3831b-941">非同步伺服器通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-941">Asynchronous Server Socket Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, AsyncCallback callback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socket_flags, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socket_flags, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (buffer As Byte(), offset As Integer, size As Integer, socket_flags As SocketFlags, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socket_flags, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * int * System.Net.Sockets.SocketFlags * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginSend (buffer, offset, size, socket_flags, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" />
        <Parameter Name="size" Type="System.Int32" Index="2" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="socket_flags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="4" />
        <Parameter Name="state" Type="System.Object" Index="5" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-942">
            <see cref="T:System.Byte" /> 型別的陣列，包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-942">An array of type <see cref="T:System.Byte" /> that contains the data to send.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3831b-943">
            <paramref name="buffer" /> 參數中要開始傳送資料的以零起始的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-943">The zero-based position in the <paramref name="buffer" /> parameter at which to begin sending data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-944">要傳送的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-944">The number of bytes to send.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-945">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-945">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="socket_flags">
          <span data-ttu-id="3831b-946">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-946">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-947">
            <see cref="T:System.AsyncCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-947">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-948">物件，包含這個要求的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-948">An object that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-949">非同步傳送資料至已連接的 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-949">Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-950">參考非同步傳送的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-950">An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-951"><xref:System.Net.Sockets.Socket.BeginSend%2A>方法會啟動非同步傳送作業中所建立的遠端主機<xref:System.Net.Sockets.Socket.Connect%2A>， <xref:System.Net.Sockets.Socket.BeginConnect%2A>， <xref:System.Net.Sockets.Socket.Accept%2A>，或<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-951">The <xref:System.Net.Sockets.Socket.BeginSend%2A> method starts an asynchronous send operation to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span> <span data-ttu-id="3831b-952"><xref:System.Net.Sockets.Socket.BeginSend%2A> 如果您未先呼叫將會擲回例外狀況<xref:System.Net.Sockets.Socket.Accept%2A>， <xref:System.Net.Sockets.Socket.BeginAccept%2A>， <xref:System.Net.Sockets.Socket.Connect%2A>，或<xref:System.Net.Sockets.Socket.BeginConnect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-952"><xref:System.Net.Sockets.Socket.BeginSend%2A> will throw an exception if you do not first call <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="3831b-953">呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>方法可讓您能夠傳送不同的執行緒中的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-953">Calling the <xref:System.Net.Sockets.Socket.BeginSend%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="3831b-954">您可以建立回呼方法可實作<xref:System.AsyncCallback>委派，並將其名稱來傳遞<xref:System.Net.Sockets.Socket.BeginSend%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-954">You can create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method.</span></span> <span data-ttu-id="3831b-955">若要這樣做，在非常小，您`state`參數必須包含已連接，或預設<xref:System.Net.Sockets.Socket>正在使用的通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-955">To do this, at the very minimum, your `state` parameter must contain the connected or default <xref:System.Net.Sockets.Socket> being used for communication.</span></span> <span data-ttu-id="3831b-956">如果回呼需要更多的資訊時，您可以建立的小型類別或結構以容納<xref:System.Net.Sockets.Socket>和其他必要的資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-956">If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="3831b-957">傳遞至這個類別的執行個體<xref:System.Net.Sockets.Socket.BeginSend%2A>方法，透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-957">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginSend%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="3831b-958">您的回呼方法應該叫用<xref:System.Net.Sockets.Socket.EndSend%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-958">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndSend%2A> method.</span></span> <span data-ttu-id="3831b-959">當您的應用程式呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>，系統會使用個別的執行緒來執行指定的回呼方法，並會封鎖<xref:System.Net.Sockets.Socket.EndSend%2A>直到<xref:System.Net.Sockets.Socket>傳送要求的位元組數目，或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-959">When your application calls <xref:System.Net.Sockets.Socket.BeginSend%2A>, the system will use a separate thread to execute the specified callback method, and will block on <xref:System.Net.Sockets.Socket.EndSend%2A> until the <xref:System.Net.Sockets.Socket> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="3831b-960">如果您想封鎖之後呼叫的原始執行緒<xref:System.Net.Sockets.Socket.BeginSend%2A>方法，請使用<xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-960">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginSend%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3831b-961">當您想要繼續執行原始執行緒時，呼叫 T:System.Threading.ManualResetEvent 在回呼方法中的 Set 方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-961">Call the Set method on a T:System.Threading.ManualResetEvent in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="3831b-962">如需有關撰寫回呼方法的詳細資訊，請參閱[封送處理為回呼方法的委派](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-962">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="3831b-963">適用於連線導向的通訊協定，雖然<xref:System.Net.Sockets.Socket.BeginSend%2A>也適用於無連線的通訊協定，前提是您第一次呼叫<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法，以建立預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-963">Although intended for connection-oriented protocols, <xref:System.Net.Sockets.Socket.BeginSend%2A> also works for connectionless protocols, provided that you first call the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method to establish a default remote host.</span></span> <span data-ttu-id="3831b-964">如果您使用無連線的通訊協定和計劃將資料傳送至數個不同的主控件，您應該使用<xref:System.Net.Sockets.Socket.BeginSendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-964">If you are using a connectionless protocol and plan to send data to several different hosts, you should use <xref:System.Net.Sockets.Socket.BeginSendTo%2A>.</span></span> <span data-ttu-id="3831b-965">可以使用<xref:System.Net.Sockets.Socket.BeginSendTo%2A>即使您已建立預設遠端主機與之後<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-965">It is okay to use <xref:System.Net.Sockets.Socket.BeginSendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-966">您也可以變更預設遠端主機，才能呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>藉由再次呼叫<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.BeginConnect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-966">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.BeginSend%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="3831b-967">您也必須確定您的緩衝區的大小未超過最大的封包大小為基礎的服務提供者無連接的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-967">With connectionless protocols, you must also be sure that the size of your buffer does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-968">若是如此，將不會傳送資料包並<xref:System.Net.Sockets.Socket.BeginSend%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-968">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.BeginSend%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="3831b-969">如果您指定<xref:System.Net.Sockets.SocketFlags.DontRoute>旗標標示為`socketflags`參數，您要將不會路由傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-969">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-970">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-970">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-971">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-971">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-972">該執行緒結束時，會取消指定的執行緒所起始的所有 I/O。</span><span class="sxs-lookup"><span data-stu-id="3831b-972">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="3831b-973">如果執行緒結束的作業完成之前，暫止的非同步作業可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="3831b-973">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-974">`state` 是使用者定義的具現化。</span><span class="sxs-lookup"><span data-stu-id="3831b-974">`state` is an instantiation of a user-defined class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-975">成功完成傳送不表示已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-975">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="3831b-976">如果沒有緩衝區可用空間來保存資料傳輸的傳輸系統內，則除非通訊端已處於未封鎖模式，將會封鎖傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-976">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-977">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-977">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-978">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-978">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-979">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-979">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-980">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-980">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-981">下列程式碼範例會開始以非同步方式將資料傳送至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-981">The following code example begins asynchronously sending data to a remote host.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#5)]
 [!code-csharp[Socket_Async_Send_Receive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#5)]
 [!code-vb[Socket_Async_Send_Receive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-982">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-982">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-983">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-983">An error occurred when attempting to access the socket.</span>
          </span>
          <span data-ttu-id="3831b-984">請參閱以下註解章節。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-984">See remarks section below.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-985">
            <paramref name="offset" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-985">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-986">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-986">-or-</span>
          </span>
          <span data-ttu-id="3831b-987">
            <paramref name="offset" /> 小於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-987">
              <paramref name="offset" /> is less than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="3831b-988">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-988">-or-</span>
          </span>
          <span data-ttu-id="3831b-989">
            <paramref name="size" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-989">
              <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-990">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-990">-or-</span>
          </span>
          <span data-ttu-id="3831b-991">
            <paramref name="size" /> 大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-991">
              <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-992">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-992">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md">
          <span data-ttu-id="3831b-993">做為回呼方法，委派封送處理</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-993">Marshaling a Delegate as a Callback Method</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-client-socket-example.md">
          <span data-ttu-id="3831b-994">非同步用戶端通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-994">Asynchronous Client Socket Example</span>
          </span>
        </related>
        <related type="Article" href="~/docs/framework/network-programming/asynchronous-server-socket-example.md">
          <span data-ttu-id="3831b-995">非同步伺服器通訊端範例</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-995">Asynchronous Server Socket Example</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSendFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-996">將檔案以非同步方式傳送至已連接的 <see cref="T:System.Net.Sockets.Socket" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-996">Sends a file asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSendFile">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendFile (string fileName, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendFile(string fileName, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendFile (fileName As String, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendFile(System::String ^ fileName, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendFile : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginSendFile (fileName, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="3831b-997">字串，包含要傳送之檔案的路徑和名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-997">A string that contains the path and name of the file to send.</span>
          </span>
          <span data-ttu-id="3831b-998">這個參數可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-998">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-999">
            <see cref="T:System.AsyncCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-999">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-1000">物件，包含這個要求的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1000">An object that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1001">使用 <see cref="T:System.Net.Sockets.Socket" /> 旗標，將檔案 <paramref name="fileName" /> 傳送至已連接的 <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1001">Sends the file <paramref name="fileName" /> to a connected <see cref="T:System.Net.Sockets.Socket" /> object using the <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> flag.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1002">
            <see cref="T:System.IAsyncResult" /> 物件，表示非同步傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1002">An <see cref="T:System.IAsyncResult" /> object that represents the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1003">這個多載會將該檔案傳送`fileName`要連接的通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-1003">This overload sends the file `fileName` to the connected socket.</span></span> <span data-ttu-id="3831b-1004">如果`fileName`是在本機目錄中，它可能會用來識別檔案的名稱; 否則必須指定完整路徑和檔案的名稱。</span><span class="sxs-lookup"><span data-stu-id="3831b-1004">If `fileName` is in the local directory, it may be identified with just the name of the file; otherwise, the full path and name of the file must be specified.</span></span> <span data-ttu-id="3831b-1005">萬用字元 ("...\\\myfile.txt") 和 UNC 共用名稱 ("\\\\\\\shared 目錄\\\myfile.txt 」) 支援。</span><span class="sxs-lookup"><span data-stu-id="3831b-1005">Wildcards ("..\\\myfile.txt") and UNC share names ("\\\\\\\shared directory\\\myfile.txt") are supported.</span></span> <span data-ttu-id="3831b-1006">如果檔案找不到，例外狀況<xref:System.IO.FileNotFoundException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3831b-1006">If the file is not found, the exception <xref:System.IO.FileNotFoundException> is thrown.</span></span>  
  
 <span data-ttu-id="3831b-1007">這個方法會使用`TransmitFile`函式位於 Windows Sockets 2 API。</span><span class="sxs-lookup"><span data-stu-id="3831b-1007">This method uses the `TransmitFile` function found in the Windows Sockets 2 API.</span></span> <span data-ttu-id="3831b-1008">如需詳細資訊`TransmitFile`函式和它的旗標，請參閱 MSDN Library 中的 Windows 通訊端文件。</span><span class="sxs-lookup"><span data-stu-id="3831b-1008">For more information about the `TransmitFile` function and its flags, see the Windows Sockets documentation in the MSDN Library.</span></span>  
  
 <span data-ttu-id="3831b-1009"><xref:System.Net.Sockets.Socket.BeginSendFile%2A>方法會啟動非同步傳送作業中所建立的遠端主機<xref:System.Net.Sockets.Socket.Connect%2A>，<xref:System.Net.Sockets.Socket.BeginConnect%2A>， <xref:System.Net.Sockets.Socket.Accept%2A>，或<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1009">The <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method starts an asynchronous send operation to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A>,<xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> methods.</span></span> <span data-ttu-id="3831b-1010"><xref:System.Net.Sockets.Socket.BeginSendFile%2A> 如果您未先呼叫，會擲回例外狀況<xref:System.Net.Sockets.Socket.Accept%2A>， <xref:System.Net.Sockets.Socket.BeginAccept%2A>， <xref:System.Net.Sockets.Socket.Connect%2A>，或<xref:System.Net.Sockets.Socket.BeginConnect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1010"><xref:System.Net.Sockets.Socket.BeginSendFile%2A> throws an exception if you do not first call <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="3831b-1011">呼叫<xref:System.Net.Sockets.Socket.BeginSendFile%2A>方法可讓您傳送不同的執行緒中的檔案。</span><span class="sxs-lookup"><span data-stu-id="3831b-1011">Calling the <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method enables you to send a file within a separate execution thread.</span></span>  
  
 <span data-ttu-id="3831b-1012">若要完成此作業，您可以建立會叫用的回呼方法<xref:System.AsyncCallback>委派參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-1012">To complete the operation, you can create a callback method that is invoked by the <xref:System.AsyncCallback> delegate parameter.</span></span> <span data-ttu-id="3831b-1013">若要這樣做，在非常小`state`參數必須包含<xref:System.Net.Sockets.Socket>物件正在使用的通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1013">To do this, at the very minimum, the `state` parameter must contain the <xref:System.Net.Sockets.Socket> object being used for communication.</span></span> <span data-ttu-id="3831b-1014">如果回呼需要更多的資訊時，您可以建立類別或結構來保存<xref:System.Net.Sockets.Socket>和其他必要的資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1014">If your callback needs more information, you can create a class or structure to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="3831b-1015">傳遞至這個自訂物件的執行個體<xref:System.Net.Sockets.Socket.BeginSendFile%2A>方法，透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-1015">Pass an instance of this custom object to the <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="3831b-1016">您的回呼方法必須叫用<xref:System.Net.Sockets.Socket.EndSendFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1016">Your callback method must invoke the <xref:System.Net.Sockets.Socket.EndSendFile%2A> method.</span></span> <span data-ttu-id="3831b-1017">當您的應用程式呼叫<xref:System.Net.Sockets.Socket.BeginSendFile%2A>，系統會使用個別的執行緒來執行指定的回呼方法，並封鎖<xref:System.Net.Sockets.Socket.EndSendFile%2A>直到<xref:System.Net.Sockets.Socket>會傳送整個檔案，或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-1017">When your application calls <xref:System.Net.Sockets.Socket.BeginSendFile%2A>, the system uses a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.Socket.EndSendFile%2A> until the <xref:System.Net.Sockets.Socket> sends the entire file or throws an exception.</span></span> <span data-ttu-id="3831b-1018">如需有關撰寫回呼方法的詳細資訊，請參閱[封送處理為回呼方法的委派](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1018">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="3831b-1019">適用於連線導向的通訊協定，雖然<xref:System.Net.Sockets.Socket.BeginSendFile%2A>也適用於無連線的通訊協定，前提是您第一次呼叫<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法，以建立預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1019">Although intended for connection-oriented protocols, <xref:System.Net.Sockets.Socket.BeginSendFile%2A> also works for connectionless protocols, provided that you first call the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method to establish a default remote host.</span></span> <span data-ttu-id="3831b-1020">無連接的通訊協定，您必須確定檔案的大小未超過基礎的服務提供者的最大的封包大小。</span><span class="sxs-lookup"><span data-stu-id="3831b-1020">With connectionless protocols, you must be sure that the size of your file does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-1021">若是如此，不會傳送資料包並<xref:System.Net.Sockets.Socket.BeginSendFile%2A>會擲回<xref:System.Net.Sockets.SocketException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-1021">If it does, the datagram is not sent and <xref:System.Net.Sockets.Socket.BeginSendFile%2A> throws a <xref:System.Net.Sockets.SocketException> exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1022">如果您收到<xref:System.Net.Sockets.SocketException>例外狀況，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1022">If you receive a <xref:System.Net.Sockets.SocketException> exception, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1023">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1023">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1024">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1024">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1025">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1025">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1026">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1026">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-1027">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-1027">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1028">下列程式碼範例會建立並連接通訊端的非同步通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1028">The following code example creates and connects a socket for asynchronous communication.</span></span> <span data-ttu-id="3831b-1029">首先，到遠端主機時以非同步方式傳送檔案"text.txt 」。</span><span class="sxs-lookup"><span data-stu-id="3831b-1029">First, the file "text.txt" is sent asynchronously to the remote host.</span></span> <span data-ttu-id="3831b-1030">回呼委派呼叫<xref:System.Net.Sockets.Socket.EndSendFile%2A>完成傳輸。</span><span class="sxs-lookup"><span data-stu-id="3831b-1030">The callback delegate calls <xref:System.Net.Sockets.Socket.EndSendFile%2A> to complete the transmission.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#9)]
 [!code-csharp[NCLSocketEnhancements#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1031">
            <see cref="T:System.Net.Sockets.Socket" />物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1031">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-1032">通訊端未連線至遠端主機。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1032">The socket is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="3831b-1033">找不到檔案 <paramref name="fileName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1033">The file <paramref name="fileName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1034">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1034">An error occurred when attempting to access the socket.</span>
          </span>
          <span data-ttu-id="3831b-1035">請參閱以下註解章節。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1035">See remarks section below.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendFile">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendFile (string fileName, byte[] preBuffer, byte[] postBuffer, System.Net.Sockets.TransmitFileOptions flags, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendFile(string fileName, unsigned int8[] preBuffer, unsigned int8[] postBuffer, valuetype System.Net.Sockets.TransmitFileOptions flags, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendFile (fileName As String, preBuffer As Byte(), postBuffer As Byte(), flags As TransmitFileOptions, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendFile(System::String ^ fileName, cli::array &lt;System::Byte&gt; ^ preBuffer, cli::array &lt;System::Byte&gt; ^ postBuffer, System::Net::Sockets::TransmitFileOptions flags, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendFile : string * byte[] * byte[] * System.Net.Sockets.TransmitFileOptions * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginSendFile (fileName, preBuffer, postBuffer, flags, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="preBuffer" Type="System.Byte[]" />
        <Parameter Name="postBuffer" Type="System.Byte[]" />
        <Parameter Name="flags" Type="System.Net.Sockets.TransmitFileOptions" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="3831b-1036">字串，包含要傳送之檔案的路徑和名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1036">A string that contains the path and name of the file to be sent.</span>
          </span>
          <span data-ttu-id="3831b-1037">這個參數可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1037">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="preBuffer">
          <span data-ttu-id="3831b-1038">包含傳送檔案前要傳送之資料的 <see cref="T:System.Byte" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1038">A <see cref="T:System.Byte" /> array that contains data to be sent before the file is sent.</span>
          </span>
          <span data-ttu-id="3831b-1039">這個參數可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1039">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="postBuffer">
          <span data-ttu-id="3831b-1040">包含傳送檔案後要傳送之資料的 <see cref="T:System.Byte" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1040">A <see cref="T:System.Byte" /> array that contains data to be sent after the file is sent.</span>
          </span>
          <span data-ttu-id="3831b-1041">這個參數可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1041">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="3831b-1042">
            <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1042">A bitwise combination of <see cref="T:System.Net.Sockets.TransmitFileOptions" /> values.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-1043">這個作業完成時要叫用的 <see cref="T:System.AsyncCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1043">An <see cref="T:System.AsyncCallback" /> delegate to be invoked when this operation completes.</span>
          </span>
          <span data-ttu-id="3831b-1044">這個參數可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1044">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-1045">使用者定義的物件，包含這個要求的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1045">A user-defined object that contains state information for this request.</span>
          </span>
          <span data-ttu-id="3831b-1046">這個參數可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1046">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1047">將檔案和資料緩衝區以非同步方式傳送至已連接的 <see cref="T:System.Net.Sockets.Socket" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1047">Sends a file and buffers of data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1048">
            <see cref="T:System.IAsyncResult" /> 物件，表示非同步作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1048">An <see cref="T:System.IAsyncResult" /> object that represents the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1049">這個多載都需要您想要傳送的檔案和的位元組合名稱<xref:System.Net.Sockets.TransmitFileOptions>值。</span><span class="sxs-lookup"><span data-stu-id="3831b-1049">This overload requires the name of the file you want to send and a bitwise combination of <xref:System.Net.Sockets.TransmitFileOptions> values.</span></span> <span data-ttu-id="3831b-1050">`preBuffer`參數包含您想要在檔案的所有資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1050">The `preBuffer` parameter contains any data you want to precede the file.</span></span> <span data-ttu-id="3831b-1051">`postBuffer` 包含您想要按照檔案中的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1051">`postBuffer` contains data you want to follow the file.</span></span> <span data-ttu-id="3831b-1052">如果`fileName`是在本機目錄中，它可能會用來識別檔案的名稱; 否則必須指定完整路徑和檔案的名稱。</span><span class="sxs-lookup"><span data-stu-id="3831b-1052">If `fileName` is in the local directory, it may be identified with just the name of the file; otherwise, the full path and name of the file must be specified.</span></span> <span data-ttu-id="3831b-1053">萬用字元 ("...\\\myfile.txt") 和 UNC 共用名稱 ("\\\\\\\shared 目錄\\\myfile.txt 」) 支援。</span><span class="sxs-lookup"><span data-stu-id="3831b-1053">Wildcards ("..\\\myfile.txt") and UNC share names ("\\\\\\\shared directory\\\myfile.txt") are supported.</span></span> <span data-ttu-id="3831b-1054">如果檔案找不到，例外狀況<xref:System.IO.FileNotFoundException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3831b-1054">If the file is not found, the exception <xref:System.IO.FileNotFoundException> is thrown.</span></span>  
  
 <span data-ttu-id="3831b-1055">`flags`參數提供的視窗通訊端服務提供者的檔案傳輸的其他資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1055">The `flags` parameter provides the Window Sockets service provider with additional information about the file transfer.</span></span> <span data-ttu-id="3831b-1056">如需如何使用此參數的詳細資訊，請參閱<xref:System.Net.Sockets.TransmitFileOptions>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1056">For more information about how to use this parameter, see <xref:System.Net.Sockets.TransmitFileOptions>.</span></span>  
  
 <span data-ttu-id="3831b-1057">這個方法會使用`TransmitFile`函式位於 Windows Sockets 2 API。</span><span class="sxs-lookup"><span data-stu-id="3831b-1057">This method uses the `TransmitFile` function found in the Windows Sockets 2 API.</span></span> <span data-ttu-id="3831b-1058">如需詳細資訊`TransmitFile`函式和它的旗標，請參閱 MSDN Library 中的 Windows 通訊端文件。</span><span class="sxs-lookup"><span data-stu-id="3831b-1058">For more information about the `TransmitFile` function and its flags, see the Windows Sockets documentation in the MSDN Library.</span></span>  
  
 <span data-ttu-id="3831b-1059"><xref:System.Net.Sockets.Socket.BeginSendFile%2A>方法會啟動非同步傳送作業中所建立的遠端主機<xref:System.Net.Sockets.Socket.Connect%2A>， <xref:System.Net.Sockets.Socket.BeginConnect%2A>， <xref:System.Net.Sockets.Socket.Accept%2A>，或<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1059">The <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method starts an asynchronous send operation to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> methods.</span></span> <span data-ttu-id="3831b-1060"><xref:System.Net.Sockets.Socket.BeginSendFile%2A> 如果您未先呼叫，會擲回例外狀況<xref:System.Net.Sockets.Socket.Accept%2A>， <xref:System.Net.Sockets.Socket.BeginAccept%2A>， <xref:System.Net.Sockets.Socket.Connect%2A>，或<xref:System.Net.Sockets.Socket.BeginConnect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1060"><xref:System.Net.Sockets.Socket.BeginSendFile%2A> throws an exception if you do not first call <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.BeginConnect%2A>.</span></span> <span data-ttu-id="3831b-1061">呼叫<xref:System.Net.Sockets.Socket.BeginSendFile%2A>方法可讓您能夠傳送不同的執行緒中的檔案。</span><span class="sxs-lookup"><span data-stu-id="3831b-1061">Calling the <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method gives you the ability to send a file within a separate execution thread.</span></span>  
  
 <span data-ttu-id="3831b-1062">若要完成此作業，您可以建立會叫用的回呼方法<xref:System.AsyncCallback>委派參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-1062">To complete the operation, you can create a callback method that is invoked by the <xref:System.AsyncCallback> delegate parameter.</span></span> <span data-ttu-id="3831b-1063">若要這樣做，在非常小`state`參數必須包含<xref:System.Net.Sockets.Socket>物件正在使用的通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1063">To do this, at the very minimum, the `state` parameter must contain the <xref:System.Net.Sockets.Socket> object being used for communication.</span></span> <span data-ttu-id="3831b-1064">如果回呼需要更多的資訊時，您可以建立類別或結構來保存<xref:System.Net.Sockets.Socket>和其他必要的資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1064">If your callback needs more information, you can create a class or structure to hold the <xref:System.Net.Sockets.Socket> and the other required information.</span></span> <span data-ttu-id="3831b-1065">傳遞至這個自訂物件的執行個體<xref:System.Net.Sockets.Socket.BeginSendFile%2A>方法，透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-1065">Pass an instance of this custom object to the <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="3831b-1066">您的回呼方法必須叫用<xref:System.Net.Sockets.Socket.EndSendFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1066">Your callback method must invoke the <xref:System.Net.Sockets.Socket.EndSendFile%2A> method.</span></span> <span data-ttu-id="3831b-1067">當您的應用程式呼叫<xref:System.Net.Sockets.Socket.BeginSendFile%2A>，系統會使用個別的執行緒來執行指定的回呼方法，並封鎖<xref:System.Net.Sockets.Socket.EndSendFile%2A>直到<xref:System.Net.Sockets.Socket>會傳送整個檔案，或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-1067">When your application calls <xref:System.Net.Sockets.Socket.BeginSendFile%2A>, the system uses a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.Socket.EndSendFile%2A> until the <xref:System.Net.Sockets.Socket> sends the entire file or throws an exception.</span></span> <span data-ttu-id="3831b-1068">如需有關撰寫回呼方法的詳細資訊，請參閱[封送處理為回呼方法的委派](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1068">For additional information on writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="3831b-1069">適用於連線導向的通訊協定，雖然<xref:System.Net.Sockets.Socket.BeginSendFile%2A>也適用於無連線的通訊協定，前提是您第一次呼叫<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法，以建立預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1069">Although intended for connection-oriented protocols, <xref:System.Net.Sockets.Socket.BeginSendFile%2A> also works for connectionless protocols, provided that you first call the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method to establish a default remote host.</span></span> <span data-ttu-id="3831b-1070">您也必須確定檔案的大小未超過最大的封包大小為基礎的服務提供者無連接的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-1070">With connectionless protocols, you must also be sure that the size of your file does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-1071">若是如此，不會傳送資料包並<xref:System.Net.Sockets.Socket.BeginSendFile%2A>會擲回<xref:System.Net.Sockets.SocketException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-1071">If it does, the datagram is not sent and <xref:System.Net.Sockets.Socket.BeginSendFile%2A> throws a <xref:System.Net.Sockets.SocketException> exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1072">如果您收到<xref:System.Net.Sockets.SocketException>例外狀況，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1072">If you receive a <xref:System.Net.Sockets.SocketException> exception, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1073">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1073">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1074">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1074">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1075">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1075">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1076">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1076">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-1077">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-1077">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1078">下列程式碼範例會建立和連接的非同步通訊的通訊端並開始以非同步方式遠端主機傳送檔案"text.txt 」。</span><span class="sxs-lookup"><span data-stu-id="3831b-1078">The following code example creates and connects a socket for asynchronous communication and begins sending the file "text.txt" asynchronously to the remote host.</span></span> <span data-ttu-id="3831b-1079">在此範例中，`preBuffer`並`postBuffer`的資料建立用來傳送檔案與預設<xref:System.Net.Sockets.TransmitFileOptions>會使用值。</span><span class="sxs-lookup"><span data-stu-id="3831b-1079">In this example, a `preBuffer` and a `postBuffer` of data is created to send with the file and the default <xref:System.Net.Sockets.TransmitFileOptions> value is used.</span></span> <span data-ttu-id="3831b-1080">回呼委派呼叫<xref:System.Net.Sockets.Socket.EndSendFile%2A>完成傳輸。</span><span class="sxs-lookup"><span data-stu-id="3831b-1080">The callback delegate calls <xref:System.Net.Sockets.Socket.EndSendFile%2A> to complete the transmission.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#10)]
 [!code-csharp[NCLSocketEnhancements#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1081">
            <see cref="T:System.Net.Sockets.Socket" />物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1081">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1082">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1082">An error occurred when attempting to access the socket.</span>
          </span>
          <span data-ttu-id="3831b-1083">請參閱以下註解章節。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1083">See remarks section below.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-1084">作業系統不是 Windows NT (含) 以後版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1084">The operating system is not Windows NT or later.</span>
          </span>
          <span data-ttu-id="3831b-1085">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1085">\- or -</span>
          </span>
          <span data-ttu-id="3831b-1086">通訊端未連線至遠端主機。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1086">The socket is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="3831b-1087">找不到檔案 <paramref name="fileName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1087">The file <paramref name="fileName" /> was not found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendTo">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendTo (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, System.Net.EndPoint remoteEP, AsyncCallback callback, object state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendTo(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint remoteEP, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendTo(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ remoteEP, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendTo (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socket_flags, System.Net.EndPoint remote_end, AsyncCallback callback, object state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendTo(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socket_flags, class System.Net.EndPoint remote_end, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendTo (buffer As Byte(), offset As Integer, size As Integer, socket_flags As SocketFlags, remote_end As EndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendTo(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socket_flags, System::Net::EndPoint ^ remote_end, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginSendTo : byte[] * int * int * System.Net.Sockets.SocketFlags * System.Net.EndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="socket.BeginSendTo (buffer, offset, size, socket_flags, remote_end, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" />
        <Parameter Name="offset" Type="System.Int32" Index="1" />
        <Parameter Name="size" Type="System.Int32" Index="2" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="socket_flags" Type="System.Net.Sockets.SocketFlags" Index="3" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="remote_end" Type="System.Net.EndPoint" Index="4" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="5" />
        <Parameter Name="state" Type="System.Object" Index="6" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-1088">
            <see cref="T:System.Byte" /> 型別的陣列，包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1088">An array of type <see cref="T:System.Byte" /> that contains the data to send.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3831b-1089">
            <paramref name="buffer" /> 中以零起始的位置，資料要在此處開始傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1089">The zero-based position in <paramref name="buffer" /> at which to begin sending data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-1090">要傳送的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1090">The number of bytes to send.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-1091">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1091">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="socket_flags">
          <span data-ttu-id="3831b-1092">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1092">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="3831b-1093">代表遠端裝置的 <see cref="T:System.Net.EndPoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1093">An <see cref="T:System.Net.EndPoint" /> that represents the remote device.</span>
          </span>
        </param>
        <param name="remote_end">
          <span data-ttu-id="3831b-1094">代表遠端裝置的 <see cref="T:System.Net.EndPoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1094">An <see cref="T:System.Net.EndPoint" /> that represents the remote device.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="3831b-1095">
            <see cref="T:System.AsyncCallback" /> 委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1095">The <see cref="T:System.AsyncCallback" /> delegate.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="3831b-1096">物件，包含這個要求的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1096">An object that contains state information for this request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1097">以非同步方式將資料傳送至特定的遠端主機。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1097">Sends data asynchronously to a specific remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1098">參考非同步傳送的 <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1098">An <see cref="T:System.IAsyncResult" /> that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1099"><xref:System.Net.Sockets.Socket.BeginSendTo%2A>方法會啟動非同步傳送作業中指定遠端主機`remoteEP`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-1099">The <xref:System.Net.Sockets.Socket.BeginSendTo%2A> method starts an asynchronous send operation to the remote host specified in the `remoteEP` parameter.</span></span> <span data-ttu-id="3831b-1100">呼叫<xref:System.Net.Sockets.Socket.BeginSendTo%2A>方法可讓您能夠傳送不同的執行緒中的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1100">Calling the <xref:System.Net.Sockets.Socket.BeginSendTo%2A> method gives you the ability to send data within a separate execution thread.</span></span> <span data-ttu-id="3831b-1101">適用於無連線的通訊協定，雖然<xref:System.Net.Sockets.Socket.BeginSendTo%2A>無連線和連線導向的通訊協定的運作方式。</span><span class="sxs-lookup"><span data-stu-id="3831b-1101">Although intended for connectionless protocols, <xref:System.Net.Sockets.Socket.BeginSendTo%2A> works with both connectionless and connection-oriented protocols.</span></span>  
  
 <span data-ttu-id="3831b-1102">您可以建立回呼方法可實作<xref:System.AsyncCallback>委派，並將其名稱來傳遞<xref:System.Net.Sockets.Socket.BeginSendTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1102">You can create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.Socket.BeginSendTo%2A> method.</span></span> <span data-ttu-id="3831b-1103">若要這樣做，在非常小，您`state`參數必須包含已連接，或預設<xref:System.Net.Sockets.Socket>正在使用的通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1103">To do this, at the very minimum, your `state` parameter must contain the connected or default <xref:System.Net.Sockets.Socket> being used for communication.</span></span> <span data-ttu-id="3831b-1104">如果回呼需要更多的資訊時，您可以建立小型類別以包裝<xref:System.Net.Sockets.Socket>，以及其他必要的資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1104">If your callback needs more information, you can create a small class to hold the <xref:System.Net.Sockets.Socket>, and the other required information.</span></span> <span data-ttu-id="3831b-1105">傳遞至這個類別的執行個體<xref:System.Net.Sockets.Socket.BeginSendTo%2A>方法，透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-1105">Pass an instance of this class to the <xref:System.Net.Sockets.Socket.BeginSendTo%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="3831b-1106">您的回呼方法應該叫用<xref:System.Net.Sockets.Socket.EndSendTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1106">Your callback method should invoke the <xref:System.Net.Sockets.Socket.EndSendTo%2A> method.</span></span> <span data-ttu-id="3831b-1107">當您的應用程式呼叫<xref:System.Net.Sockets.Socket.BeginSendTo%2A>，系統會使用個別的執行緒來執行指定的回呼方法，並會封鎖<xref:System.Net.Sockets.Socket.EndSendTo%2A>直到<xref:System.Net.Sockets.Socket>傳送要求的位元組數目，或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-1107">When your application calls <xref:System.Net.Sockets.Socket.BeginSendTo%2A>, the system will use a separate thread to execute the specified callback method, and will block on <xref:System.Net.Sockets.Socket.EndSendTo%2A> until the <xref:System.Net.Sockets.Socket> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="3831b-1108">如果您想封鎖之後呼叫的原始執行緒<xref:System.Net.Sockets.Socket.BeginSendTo%2A>方法，請使用<xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1108">If you want the original thread to block after you call the <xref:System.Net.Sockets.Socket.BeginSendTo%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="3831b-1109">當您想要繼續執行原始執行緒時，呼叫 T:System.Threading.ManualResetEvent 在回呼方法中的 Set 方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1109">Call the Set method on a T:System.Threading.ManualResetEvent in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="3831b-1110">如需有關撰寫回呼方法的詳細資訊，請參閱[封送處理為回呼方法的委派](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1110">For additional information about writing callback methods see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="3831b-1111">如果您使用連線導向的通訊協定，您必須先呼叫<xref:System.Net.Sockets.Socket.Connect%2A>， <xref:System.Net.Sockets.Socket.BeginConnect%2A>， <xref:System.Net.Sockets.Socket.Accept%2A>，或<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法，或<xref:System.Net.Sockets.Socket.BeginSendTo%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1111">If you are using a connection-oriented protocol, you must first call the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> method, or <xref:System.Net.Sockets.Socket.BeginSendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-1112"><xref:System.Net.Sockets.Socket.BeginSendTo%2A> 將會忽略`remoteEP`參數並傳送資料到<xref:System.Net.EndPoint>中建立<xref:System.Net.Sockets.Socket.Connect%2A>， <xref:System.Net.Sockets.Socket.BeginConnect%2A>， <xref:System.Net.Sockets.Socket.Accept%2A>，或<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1112"><xref:System.Net.Sockets.Socket.BeginSendTo%2A> will ignore the `remoteEP` parameter and send data to the <xref:System.Net.EndPoint> established in the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Accept%2A>, or <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-1113">如果您使用無連接的通訊協定，您不需要建立的預設遠端主機<xref:System.Net.Sockets.Socket.Connect%2A>或是<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法之前呼叫<xref:System.Net.Sockets.Socket.SendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1113">If you are using a connectionless protocol, you do not need to establish a default remote host with the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span> <span data-ttu-id="3831b-1114">您只需要這樣做，如果您想要呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1114">You only need to do this if you intend to call the <xref:System.Net.Sockets.Socket.BeginSend%2A> method.</span></span> <span data-ttu-id="3831b-1115">如果您呼叫<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法之前呼叫<xref:System.Net.Sockets.Socket.SendTo%2A>，則`remoteEP`參數會覆寫指定的預設遠端主機，可傳送作業才。</span><span class="sxs-lookup"><span data-stu-id="3831b-1115">If you do call the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.BeginConnect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>, the `remoteEP` parameter will override the specified default remote host for that send operation only.</span></span> <span data-ttu-id="3831b-1116">您也不需要呼叫<xref:System.Net.Sockets.Socket.Bind%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1116">You are also not required to call the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span> <span data-ttu-id="3831b-1117">在此情況下，基礎的服務提供者會指派最適當的區域網路位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1117">In this case, the underlying service provider will assign the most appropriate local network address and port number.</span></span> <span data-ttu-id="3831b-1118">如果您想要選取可用的連接埠基礎的服務提供者，請使用連接埠號碼為零。</span><span class="sxs-lookup"><span data-stu-id="3831b-1118">Use a port number of zero if you want the underlying service provider to select a free port.</span></span> <span data-ttu-id="3831b-1119">如果您需要識別指派的本機網路位址和連接埠號碼，您可以使用<xref:System.Net.Sockets.Socket.LocalEndPoint%2A>屬性之後<xref:System.Net.Sockets.Socket.EndSendTo%2A>方法成功完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-1119">If you need to identify the assigned local network address and port number, you can use the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property after the <xref:System.Net.Sockets.Socket.EndSendTo%2A> method successfully completes.</span></span>  
  
 <span data-ttu-id="3831b-1120">如果您想要將資料傳送至的廣播位址，您必須先呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法，並設定通訊端選項設定為<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1120">If you want to send data to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-1121">-您也必須確定您的緩衝區的大小未超過基礎的服務提供者的最大的封包大小。</span><span class="sxs-lookup"><span data-stu-id="3831b-1121">-You must also be sure that the size of your buffer does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-1122">若是如此，將不會傳送資料包並<xref:System.Net.Sockets.Socket.EndSendTo%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1122">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.EndSendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="3831b-1123">如果您指定<xref:System.Net.Sockets.SocketFlags.DontRoute>旗標標示為`socketflags`參數，您要將不會路由傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1123">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1124">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1124">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1125">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1125">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1126">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1126">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1127">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1127">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1128">執行內容 （的安全性內容中，模擬的使用者和呼叫的內容） 快取以供非同步<xref:System.Net.Sockets.Socket>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1128">The execution context (the security context, the impersonated user, and the calling context) is cached for the asynchronous <xref:System.Net.Sockets.Socket> methods.</span></span> <span data-ttu-id="3831b-1129">在特定內容的第一次使用後 (特定非同步<xref:System.Net.Sockets.Socket>方法中，特定<xref:System.Net.Sockets.Socket>執行個體與指定的回撥)，該內容的後續使用將會看見效能改進。</span><span class="sxs-lookup"><span data-stu-id="3831b-1129">After the first use of a particular context (a specific asynchronous <xref:System.Net.Sockets.Socket> method, a specific <xref:System.Net.Sockets.Socket> instance, and a specific callback), subsequent uses of that context will see a performance improvement.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1130">下列程式碼範例以非同步方式將資料傳送至指定的遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1130">The following code example asynchronously sends data to the specified remote host.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#3)]
 [!code-csharp[Socket_Async_Send_Receive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#3)]
 [!code-vb[Socket_Async_Send_Receive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1131">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1131">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3831b-1132">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1132">-or-</span>
          </span>
          <span data-ttu-id="3831b-1133">
            <paramref name="remoteEP" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1133">
              <paramref name="remoteEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1134">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1134">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-1135">
            <paramref name="offset" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1135">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-1136">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1136">-or-</span>
          </span>
          <span data-ttu-id="3831b-1137">
            <paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1137">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="3831b-1138">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1138">-or-</span>
          </span>
          <span data-ttu-id="3831b-1139">
            <paramref name="size" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1139">
              <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-1140">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1140">-or-</span>
          </span>
          <span data-ttu-id="3831b-1141">
            <paramref name="size" /> 大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1141">
              <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1142">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1142">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-1143">在呼叫堆疊中位置較高的呼叫端對於要求的作業沒有權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1143">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="P:System.Net.Sockets.Socket.LocalEndPoint" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <related type="Article" href="~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md">
          <span data-ttu-id="3831b-1144">做為回呼方法，委派封送處理</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1144">Marshaling a Delegate as a Callback Method</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public void Bind (System.Net.EndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Bind(class System.Net.EndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Bind (localEP As EndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Bind(System::Net::EndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="member this.Bind : System.Net.EndPoint -&gt; unit" Usage="socket.Bind localEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.EndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="3831b-1145">要與 <see cref="T:System.Net.EndPoint" /> 關聯的本機 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1145">The local <see cref="T:System.Net.EndPoint" /> to associate with the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1146">使 <see cref="T:System.Net.Sockets.Socket" /> 與本機端點建立關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1146">Associates a <see cref="T:System.Net.Sockets.Socket" /> with a local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1147">使用<xref:System.Net.Sockets.Socket.Bind%2A>方法，如果您需要使用特定的本機端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-1147">Use the <xref:System.Net.Sockets.Socket.Bind%2A> method if you need to use a specific local endpoint.</span></span> <span data-ttu-id="3831b-1148">您必須呼叫<xref:System.Net.Sockets.Socket.Bind%2A>您可以呼叫之前<xref:System.Net.Sockets.Socket.Listen%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1148">You must call <xref:System.Net.Sockets.Socket.Bind%2A> before you can call the <xref:System.Net.Sockets.Socket.Listen%2A> method.</span></span> <span data-ttu-id="3831b-1149">您不需要呼叫<xref:System.Net.Sockets.Socket.Bind%2A>才能使用<xref:System.Net.Sockets.Socket.Connect%2A>方法除非您需要使用特定的本機端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-1149">You do not need to call <xref:System.Net.Sockets.Socket.Bind%2A> before using the <xref:System.Net.Sockets.Socket.Connect%2A> method unless you need to use a specific local endpoint.</span></span> <span data-ttu-id="3831b-1150">您可以使用<xref:System.Net.Sockets.Socket.Bind%2A>無連線和連線導向的通訊協定上的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1150">You can use the <xref:System.Net.Sockets.Socket.Bind%2A> method on both connectionless and connection-oriented protocols.</span></span>  
  
 <span data-ttu-id="3831b-1151">然後再呼叫<xref:System.Net.Sockets.Socket.Bind%2A>，您必須先建立本機<xref:System.Net.IPEndPoint>從您要通訊的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1151">Before calling <xref:System.Net.Sockets.Socket.Bind%2A>, you must first create the local <xref:System.Net.IPEndPoint> from which you intend to communicate data.</span></span> <span data-ttu-id="3831b-1152">如果您並不在意指派的本機位址，您可以建立<xref:System.Net.IPEndPoint>使用<xref:System.Net.IPAddress.Any?displayProperty=nameWithType>位址參數，以及基礎的服務提供者會指派最適當的網路位址。</span><span class="sxs-lookup"><span data-stu-id="3831b-1152">If you do not care which local address is assigned, you can create an <xref:System.Net.IPEndPoint> using <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> as the address parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="3831b-1153">這有助於簡化您的應用程式，如果您有多個網路介面。</span><span class="sxs-lookup"><span data-stu-id="3831b-1153">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="3831b-1154">如果您並不在意哪些本機連接埠，您可以建立<xref:System.Net.IPEndPoint>使用 0 連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1154">If you do not care which local port is used, you can create an <xref:System.Net.IPEndPoint> using 0 for the port number.</span></span> <span data-ttu-id="3831b-1155">在此情況下，服務提供者會指派可用的通訊埠編號介於 1024年到 5000 之間。</span><span class="sxs-lookup"><span data-stu-id="3831b-1155">In this case, the service provider will assign an available port number between 1024 and 5000.</span></span>  
  
 <span data-ttu-id="3831b-1156">如果您使用上述的方法，您可以探索哪些本機網路位址和連接埠號碼已被指派藉由呼叫<xref:System.Net.Sockets.Socket.LocalEndPoint%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1156">If you use the above approach, you can discover what local network address and port number has been assigned by calling the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A>.</span></span> <span data-ttu-id="3831b-1157">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.LocalEndPoint%2A>之後所做的呼叫，則不會傳回在本機指派的網路位址，直到<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1157">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> will not return the locally assigned network address until after you have made a call to the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.EndConnect%2A> method.</span></span> <span data-ttu-id="3831b-1158">如果您使用無連接的通訊協定，您不會存取此資訊之前便已完成傳送或接收。</span><span class="sxs-lookup"><span data-stu-id="3831b-1158">If you are using a connectionless protocol, you will not have access to this information until you have completed a send or receive.</span></span>  
  
 <span data-ttu-id="3831b-1159">如果想要接收已接收的封包的介面資訊的 UDP 通訊端<xref:System.Net.Sockets.Socket.SetSocketOption%2A>通訊端選項設為應該明確地呼叫方法<xref:System.Net.Sockets.SocketOptionName.PacketInformation>後立即呼叫<xref:System.Net.Sockets.Socket.Bind%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1159">If a UDP socket wants to receive interface information on received packets,  the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method should be explicitly called with the socket option set to <xref:System.Net.Sockets.SocketOptionName.PacketInformation> immediately after calling the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1160">如果您想要接收多點傳送的資料包，您必須呼叫<xref:System.Net.Sockets.Socket.Bind%2A>方法的多點傳送連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1160">If you intend to receive multicast datagrams, you must call the <xref:System.Net.Sockets.Socket.Bind%2A> method with a multicast port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1161">您必須呼叫<xref:System.Net.Sockets.Socket.Bind%2A>方法，如果您想要接收無連接的資料包使用<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1161">You must call the <xref:System.Net.Sockets.Socket.Bind%2A> method if you intend to receive connectionless datagrams using the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1162">如果您收到<xref:System.Net.Sockets.SocketException>呼叫時<xref:System.Net.Sockets.Socket.Bind%2A>方法，請使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1162">If you receive a <xref:System.Net.Sockets.SocketException> when calling the <xref:System.Net.Sockets.Socket.Bind%2A> method, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1163">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1163">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1164">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1164">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1165">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1165">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1166">下列程式碼範例繫結<xref:System.Net.Sockets.Socket>使用指定的本機端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-1166">The following code example binds a <xref:System.Net.Sockets.Socket> using the specified local endpoint.</span></span>  
  
 [!code-cpp[Classic Socket.Bind Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Bind Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Bind Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Bind Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Bind Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Bind Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1167">
            <paramref name="localEP" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1167">
              <paramref name="localEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1168">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1168">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1169">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1169">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-1170">在呼叫堆疊中位置較高的呼叫端對於要求的作業沒有權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1170">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.SocketPermission">
          <span data-ttu-id="3831b-1171">接受來自所定義的主機連線<paramref name="localEP" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1171">for accepting connections from the host defined by <paramref name="localEP" />.</span>
          </span>
          <span data-ttu-id="3831b-1172">相關聯的列舉型別： <see cref="F:System.Net.NetworkAccess.Accept" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1172">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.Net.IPAddress" />
        <altmember cref="P:System.Net.Sockets.Socket.LocalEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Blocking">
      <MemberSignature Language="C#" Value="public bool Blocking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Blocking" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.Blocking" />
      <MemberSignature Language="VB.NET" Value="Public Property Blocking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Blocking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Blocking : bool with get, set" Usage="System.Net.Sockets.Socket.Blocking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1173">取得或設定值，指出 <see cref="T:System.Net.Sockets.Socket" /> 是否處於區塊模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1173">Gets or sets a value that indicates whether the <see cref="T:System.Net.Sockets.Socket" /> is in blocking mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-1174">如果 <see cref="T:System.Net.Sockets.Socket" /> 可區塊化，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1174">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> will block; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3831b-1175">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1175">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1176"><xref:System.Net.Sockets.Socket.Blocking%2A>屬性會指出是否<xref:System.Net.Sockets.Socket>處於封鎖模式。</span><span class="sxs-lookup"><span data-stu-id="3831b-1176">The <xref:System.Net.Sockets.Socket.Blocking%2A> property indicates whether a <xref:System.Net.Sockets.Socket> is in blocking mode.</span></span>  
  
 <span data-ttu-id="3831b-1177">如果您處於封鎖模式中，而且您在進行方法呼叫的未立即完成，您的應用程式會封鎖執行，直到完成要求的作業。</span><span class="sxs-lookup"><span data-stu-id="3831b-1177">If you are in blocking mode, and you make a method call which does not complete immediately, your application will block execution until the requested operation completes.</span></span> <span data-ttu-id="3831b-1178">如果您想要繼續，即使未完成要求的作業、 變更執行<xref:System.Net.Sockets.Socket.Blocking%2A>屬性設`false`。</span><span class="sxs-lookup"><span data-stu-id="3831b-1178">If you want execution to continue even though the requested operation is not complete, change the <xref:System.Net.Sockets.Socket.Blocking%2A> property to `false`.</span></span> <span data-ttu-id="3831b-1179"><xref:System.Net.Sockets.Socket.Blocking%2A>屬性沒有任何作用，非同步方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1179">The <xref:System.Net.Sockets.Socket.Blocking%2A> property has no effect on asynchronous methods.</span></span> <span data-ttu-id="3831b-1180">如果您是傳送和接收資料，以非同步方式想要封鎖執行，使用<xref:System.Threading.ManualResetEvent>類別。</span><span class="sxs-lookup"><span data-stu-id="3831b-1180">If you are sending and receiving data asynchronously and want to block execution, use the <xref:System.Threading.ManualResetEvent> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1181">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1181">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1182">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1182">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1183">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1183">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1184">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1184">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1185">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1185">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1186">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1186">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CancelConnectAsync">
      <MemberSignature Language="C#" Value="public static void CancelConnectAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CancelConnectAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CancelConnectAsync (e As SocketAsyncEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CancelConnectAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="static member CancelConnectAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; unit" Usage="System.Net.Sockets.Socket.CancelConnectAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3831b-1187">
            <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件，藉由呼叫一個 <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" /> 方法來要求與遠端主機連接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1187">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object used to request the connection to the remote host by calling one of the <see cref="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1188">取消遠端主機連接的非同步要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1188">Cancels an asynchronous request for a remote host connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1189"><xref:System.Net.Sockets.Socket.CancelConnectAsync%2A>方法就會取消遠端主機連接的非同步要求。</span><span class="sxs-lookup"><span data-stu-id="3831b-1189">The <xref:System.Net.Sockets.Socket.CancelConnectAsync%2A> method cancels an asynchronous request for a remote host connection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1190">
            <paramref name="e" /> 參數不可為 null，而且 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 也不可為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1190">The <paramref name="e" /> parameter cannot be null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1191">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1191">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1192">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1192">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-1193">在呼叫堆疊中位置較高的呼叫端對於要求的作業沒有權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1193">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1194">關閉 <see cref="T:System.Net.Sockets.Socket" /> 連接並釋放所有相關資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1194">Closes the <see cref="T:System.Net.Sockets.Socket" /> connection and releases all associated resources.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="socket.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1195">關閉 <see cref="T:System.Net.Sockets.Socket" /> 連接並釋放所有相關資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1195">Closes the <see cref="T:System.Net.Sockets.Socket" /> connection and releases all associated resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1196"><xref:System.Net.Sockets.Socket.Close%2A>方法會關閉連接遠端主機和版本的所有 managed 和 unmanaged 資源相關聯<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1196">The <xref:System.Net.Sockets.Socket.Close%2A> method closes the remote host connection and releases all managed and unmanaged resources associated with the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-1197">時結語<xref:System.Net.Sockets.Socket.Connected%2A>屬性設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="3831b-1197">Upon closing, the <xref:System.Net.Sockets.Socket.Connected%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="3831b-1198">連線導向的通訊協定，建議您呼叫<xref:System.Net.Sockets.Socket.Shutdown%2A>再呼叫<xref:System.Net.Sockets.Socket.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1198">For connection-oriented protocols, it is recommended that you call <xref:System.Net.Sockets.Socket.Shutdown%2A> before calling the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="3831b-1199">這可確保所有資料都傳送及它在關閉之前，連接的通訊端上接收。</span><span class="sxs-lookup"><span data-stu-id="3831b-1199">This ensures that all data is sent and received on the connected socket before it is closed.</span></span>  
  
 <span data-ttu-id="3831b-1200">如果您需要呼叫<xref:System.Net.Sockets.Socket.Close%2A>情況下先呼叫<xref:System.Net.Sockets.Socket.Shutdown%2A>，您可以確定資料中，會傳送所設定的連出傳輸佇列<xref:System.Net.Sockets.SocketOptionName.DontLinger><xref:System.Net.Sockets.Socket>選項設定為`false`並指定非零逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="3831b-1200">If you need to call <xref:System.Net.Sockets.Socket.Close%2A> without first calling <xref:System.Net.Sockets.Socket.Shutdown%2A>, you can ensure that data queued for outgoing transmission will be sent by setting the <xref:System.Net.Sockets.SocketOptionName.DontLinger><xref:System.Net.Sockets.Socket> option to `false` and specifying a non-zero time-out interval.</span></span> <span data-ttu-id="3831b-1201"><xref:System.Net.Sockets.Socket.Close%2A> 就會封鎖直到這項資料會傳送，或直到指定的逾時過期為止。</span><span class="sxs-lookup"><span data-stu-id="3831b-1201"><xref:System.Net.Sockets.Socket.Close%2A> will then block until this data is sent or until the specified time-out expires.</span></span> <span data-ttu-id="3831b-1202">如果您設定<xref:System.Net.Sockets.SocketOptionName.DontLinger>要`false`並指定為零的逾時間隔，<xref:System.Net.Sockets.Socket.Close%2A>釋出連線，並會自動捨棄 外寄佇列的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1202">If you set <xref:System.Net.Sockets.SocketOptionName.DontLinger> to `false` and specify a zero time-out interval, <xref:System.Net.Sockets.Socket.Close%2A> releases the connection and automatically discards outgoing queued data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1203">若要設定<xref:System.Net.Sockets.SocketOptionName.DontLinger>通訊端選項來`false`，建立<xref:System.Net.Sockets.LingerOption>，將啟用的屬性設定為`true`，並設定<xref:System.Net.Sockets.LingerOption.LingerTime%2A>屬性所需的逾時期間。</span><span class="sxs-lookup"><span data-stu-id="3831b-1203">To set the <xref:System.Net.Sockets.SocketOptionName.DontLinger> socket option to `false`, create a <xref:System.Net.Sockets.LingerOption>, set the enabled property to `true`, and set the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property to the desired time out period.</span></span> <span data-ttu-id="3831b-1204">使用此<xref:System.Net.Sockets.LingerOption>連同<xref:System.Net.Sockets.SocketOptionName.DontLinger>通訊端選項來呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1204">Use this <xref:System.Net.Sockets.LingerOption> along with the <xref:System.Net.Sockets.SocketOptionName.DontLinger> socket option to call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1205">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1205">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1206">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1206">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1207">下列程式碼範例會關閉<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1207">The following code example closes a <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic Socket.Close Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Close Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.DontLinger" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Close(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(int timeout);" />
      <MemberSignature Language="F#" Value="member this.Close : int -&gt; unit" Usage="socket.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="3831b-1208">最多等候 <paramref name="timeout" /> 秒以傳送任何剩餘的資料，然後關閉通訊端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1208">Wait up to <paramref name="timeout" /> seconds to send any remaining data, then close the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1209">關閉 <see cref="T:System.Net.Sockets.Socket" /> 連線，並釋放所有具指定逾時的關聯資源，以允許傳送佇列的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1209">Closes the <see cref="T:System.Net.Sockets.Socket" /> connection and releases all associated resources with a specified timeout to allow queued data to be sent.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1210"><xref:System.Net.Sockets.Socket.Close%2A>方法會關閉連接遠端主機和版本的所有 managed 和 unmanaged 資源相關聯<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1210">The <xref:System.Net.Sockets.Socket.Close%2A> method closes the remote host connection and releases all managed and unmanaged resources associated with the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-1211">時結語<xref:System.Net.Sockets.Socket.Connected%2A>屬性設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="3831b-1211">Upon closing, the <xref:System.Net.Sockets.Socket.Connected%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="3831b-1212">連線導向的通訊協定，建議您呼叫<xref:System.Net.Sockets.Socket.Shutdown%2A>再呼叫<xref:System.Net.Sockets.Socket.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1212">For connection-oriented protocols, it is recommended that you call <xref:System.Net.Sockets.Socket.Shutdown%2A> before calling <xref:System.Net.Sockets.Socket.Close%2A>.</span></span> <span data-ttu-id="3831b-1213">這可確保所有資料都傳送及它在關閉之前，連接的通訊端上接收。</span><span class="sxs-lookup"><span data-stu-id="3831b-1213">This ensures that all data is sent and received on the connected socket before it is closed.</span></span>  
  
 <span data-ttu-id="3831b-1214">如果您需要呼叫<xref:System.Net.Sockets.Socket.Close%2A>情況下先呼叫<xref:System.Net.Sockets.Socket.Shutdown%2A>，您可以確定資料中，會傳送所設定的連出傳輸佇列<xref:System.Net.Sockets.SocketOptionName.DontLinger>選項設定為`false`並指定非零逾時間隔。</span><span class="sxs-lookup"><span data-stu-id="3831b-1214">If you need to call <xref:System.Net.Sockets.Socket.Close%2A> without first calling <xref:System.Net.Sockets.Socket.Shutdown%2A>, you can ensure that data queued for outgoing transmission will be sent by setting the <xref:System.Net.Sockets.SocketOptionName.DontLinger> option to `false` and specifying a non-zero time-out interval.</span></span> <span data-ttu-id="3831b-1215"><xref:System.Net.Sockets.Socket.Close%2A> 就會封鎖直到這項資料會傳送，或直到指定的逾時過期為止。</span><span class="sxs-lookup"><span data-stu-id="3831b-1215"><xref:System.Net.Sockets.Socket.Close%2A> will then block until this data is sent or until the specified time-out expires.</span></span> <span data-ttu-id="3831b-1216">如果您設定<xref:System.Net.Sockets.SocketOptionName.DontLinger>要`false`並指定為零的逾時間隔，<xref:System.Net.Sockets.Socket.Close%2A>釋出連線，並會自動捨棄 外寄佇列的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1216">If you set <xref:System.Net.Sockets.SocketOptionName.DontLinger> to `false` and specify a zero time-out interval, <xref:System.Net.Sockets.Socket.Close%2A> releases the connection and automatically discards outgoing queued data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1217">若要設定<xref:System.Net.Sockets.SocketOptionName.DontLinger>通訊端選項來`false`，建立<xref:System.Net.Sockets.LingerOption>，enabled 的屬性設為`true`，並設定<xref:System.Net.Sockets.LingerOption.LingerTime%2A>的所需的逾時期限的屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-1217">To set the <xref:System.Net.Sockets.SocketOptionName.DontLinger> socket option to `false`, create a <xref:System.Net.Sockets.LingerOption>, set the enabled property to `true`, and set the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property to the desired time-out period.</span></span> <span data-ttu-id="3831b-1218">使用此<xref:System.Net.Sockets.LingerOption>連同<xref:System.Net.Sockets.SocketOptionName.DontLinger>通訊端選項來呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1218">Use this <xref:System.Net.Sockets.LingerOption> along with the <xref:System.Net.Sockets.SocketOptionName.DontLinger> socket option to call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1219">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1219">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1220">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1220">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1221">下列程式碼範例示範如何關閉<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1221">The following code example demonstrates how to close a <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic Socket.Close Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Close Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.DontLinger" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1222">建立與遠端主機的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1222">Establishes a connection to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.EndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As EndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::EndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.EndPoint -&gt; unit" Usage="socket.Connect remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="3831b-1223">代表遠端裝置的 <see cref="T:System.Net.EndPoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1223">An <see cref="T:System.Net.EndPoint" /> that represents the remote device.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1224">建立與遠端主機的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1224">Establishes a connection to a remote host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1225">如果您使用連線導向的通訊協定，例如 TCP<xref:System.Net.Sockets.Socket.Connect%2A>方法以同步方式建立之間的網路連線<xref:System.Net.Sockets.Socket.LocalEndPoint%2A>和指定的遠端端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-1225">If you are using a connection-oriented protocol such as TCP, the <xref:System.Net.Sockets.Socket.Connect%2A> method synchronously establishes a network connection between <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> and the specified remote endpoint.</span></span> <span data-ttu-id="3831b-1226">如果您使用無連接的通訊協定，<xref:System.Net.Sockets.Socket.Connect%2A>建立預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1226">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.Connect%2A> establishes a default remote host.</span></span> <span data-ttu-id="3831b-1227">在您呼叫後<xref:System.Net.Sockets.Socket.Connect%2A>，您可以將資料傳送到遠端裝置與<xref:System.Net.Sockets.Socket.Send%2A>方法，或從遠端裝置與接收資料<xref:System.Net.Sockets.Socket.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1227">After you call <xref:System.Net.Sockets.Socket.Connect%2A>, you can send data to the remote device with the <xref:System.Net.Sockets.Socket.Send%2A> method, or receive data from the remote device with the <xref:System.Net.Sockets.Socket.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-1228">如果您使用無連線的通訊協定，例如 UDP，您就不必呼叫<xref:System.Net.Sockets.Socket.Connect%2A>之前傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1228">If you are using a connectionless protocol such as UDP, you do not have to call <xref:System.Net.Sockets.Socket.Connect%2A> before sending and receiving data.</span></span> <span data-ttu-id="3831b-1229">您可以使用<xref:System.Net.Sockets.Socket.SendTo%2A>和<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>進行同步通訊與遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1229">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> and <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> to synchronously communicate with a remote host.</span></span> <span data-ttu-id="3831b-1230">如果您呼叫<xref:System.Net.Sockets.Socket.Connect%2A>，將會捨棄任何資料包來自指定的預設值以外的位址。</span><span class="sxs-lookup"><span data-stu-id="3831b-1230">If you do call <xref:System.Net.Sockets.Socket.Connect%2A>, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="3831b-1231">如果您想要設定預設遠端主機的廣播位址，您必須先呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法，並設定通訊端選項設定為<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>，或<xref:System.Net.Sockets.Socket.Connect%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1231">If you want to set your default remote host to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>, or <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-1232">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1232">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1233">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1233">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="3831b-1234"><xref:System.Net.Sockets.Socket.Connect%2A>方法將會封鎖，除非您特別設定<xref:System.Net.Sockets.Socket.Blocking%2A>屬性設`false`才能呼叫<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1234">The <xref:System.Net.Sockets.Socket.Connect%2A> method will block, unless you specifically set the <xref:System.Net.Sockets.Socket.Blocking%2A> property to `false` prior to calling <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-1235">如果您使用連線導向的通訊協定時，例如 TCP 和您不要停用封鎖<xref:System.Net.Sockets.Socket.Connect%2A>將會擲回<xref:System.Net.Sockets.SocketException>因為它需要時間來進行連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1235">If you are using a connection-oriented protocol like TCP and you do disable blocking, <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException> because it needs time to make the connection.</span></span> <span data-ttu-id="3831b-1236">因為它們只是建立預設遠端主機，無連線通訊協定不會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-1236">Connectionless protocols will not throw an exception because they simply establish a default remote host.</span></span> <span data-ttu-id="3831b-1237">您可以使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1237">You can use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1238">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1238">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span> <span data-ttu-id="3831b-1239">如果 WSAEWOULDBLOCK 傳回的錯誤，連接遠端主機已起始連線導向<xref:System.Net.Sockets.Socket>，但尚未完成成功。</span><span class="sxs-lookup"><span data-stu-id="3831b-1239">If the error returned WSAEWOULDBLOCK, the remote host connection has been initiated by a connection-oriented <xref:System.Net.Sockets.Socket>, but has not yet completed successfully.</span></span> <span data-ttu-id="3831b-1240">使用<xref:System.Net.Sockets.Socket.Poll%2A>方法，以判斷何時<xref:System.Net.Sockets.Socket>完成連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-1240">Use the <xref:System.Net.Sockets.Socket.Poll%2A> method to determine when the <xref:System.Net.Sockets.Socket> is finished connecting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1241">如果您使用連線導向的通訊協定，才會呼叫<xref:System.Net.Sockets.Socket.Bind%2A>再呼叫<xref:System.Net.Sockets.Socket.Connect%2A>，基礎的服務提供者會將指派的本機網路位址和連接埠編號。</span><span class="sxs-lookup"><span data-stu-id="3831b-1241">If you are using a connection-oriented protocol and did not call <xref:System.Net.Sockets.Socket.Bind%2A> before calling <xref:System.Net.Sockets.Socket.Connect%2A>, the underlying service provider will assign the local network address and port number.</span></span> <span data-ttu-id="3831b-1242">如果您使用無連接的通訊協定，服務提供者將未指派本機網路位址和連接埠號碼直到您完成傳送或接收作業。</span><span class="sxs-lookup"><span data-stu-id="3831b-1242">If you are using a connectionless protocol, the service provider will not assign a local network address and port number until you complete a send or receive operation.</span></span> <span data-ttu-id="3831b-1243">如果您想要變更預設遠端主機時，呼叫<xref:System.Net.Sockets.Socket.Connect%2A>再次使用所需的端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-1243">If you want to change the default remote host, call <xref:System.Net.Sockets.Socket.Connect%2A> again with the desired endpoint.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1244">如果通訊端具有先前中斷連接，然後您就無法使用此方法以還原連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1244">If the socket has been previously disconnected, then you cannot use this method to restore the connection.</span></span> <span data-ttu-id="3831b-1245">使用其中一種非同步<xref:System.Net.Sockets.Socket.BeginConnect%2A>重新連線的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1245">Use one of the asynchronous <xref:System.Net.Sockets.Socket.BeginConnect%2A> methods to reconnect.</span></span> <span data-ttu-id="3831b-1246">這是基礎提供者的限制。</span><span class="sxs-lookup"><span data-stu-id="3831b-1246">This is a limitation of the underlying provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1247">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1247">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1248">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1248">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1249">下列程式碼範例會連線到遠端端點，然後驗證該連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-1249">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[Classic Socket.Connect Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Connect Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Connect Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Connect Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Connect Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Connect Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1250">
            <paramref name="remoteEP" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1250">
              <paramref name="remoteEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1251">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1251">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1252">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1252">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-1253">在呼叫堆疊中位置較高的呼叫端對於要求的作業沒有權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1253">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1254">藉由呼叫 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 已令 <see cref="T:System.Net.Sockets.Socket" /> 處於接聽狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1254">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.SocketPermission">
          <span data-ttu-id="3831b-1255">用於連接至遠端主機。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1255">for connecting to the remote host.</span>
          </span>
          <span data-ttu-id="3831b-1256">相關聯的列舉型別： <see cref="F:System.Net.NetworkAccess.Connect" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1256">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Connect" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.LocalEndPoint" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.Socket.Blocking" />
        <altmember cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="socket.Connect (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="3831b-1257">遠端主機的 IP 位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1257">The IP address of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="3831b-1258">遠端主機的連接埠號碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1258">The port number of the remote host.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1259">建立與遠端主機的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1259">Establishes a connection to a remote host.</span>
          </span>
          <span data-ttu-id="3831b-1260">此主機是由 IP 位址和連接埠號碼所指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1260">The host is specified by an IP address and a port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1261">如果您使用連線導向的通訊協定，例如 TCP<xref:System.Net.Sockets.Socket.Connect%2A>方法以同步方式建立之間的網路連線<xref:System.Net.Sockets.Socket.LocalEndPoint%2A>和指定的遠端端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-1261">If you are using a connection-oriented protocol such as TCP, the <xref:System.Net.Sockets.Socket.Connect%2A> method synchronously establishes a network connection between <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> and the specified remote endpoint.</span></span> <span data-ttu-id="3831b-1262">如果您使用無連接的通訊協定，<xref:System.Net.Sockets.Socket.Connect%2A>建立預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1262">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.Connect%2A> establishes a default remote host.</span></span> <span data-ttu-id="3831b-1263">在您呼叫後<xref:System.Net.Sockets.Socket.Connect%2A>您可以將資料傳送到遠端裝置與<xref:System.Net.Sockets.Socket.Send%2A>方法，或從遠端裝置與接收資料<xref:System.Net.Sockets.Socket.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1263">After you call <xref:System.Net.Sockets.Socket.Connect%2A> you can send data to the remote device with the <xref:System.Net.Sockets.Socket.Send%2A> method, or receive data from the remote device with the <xref:System.Net.Sockets.Socket.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-1264">如果您使用無連線的通訊協定，例如 UDP，您就不必呼叫<xref:System.Net.Sockets.Socket.Connect%2A>之前傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1264">If you are using a connectionless protocol such as UDP, you do not have to call <xref:System.Net.Sockets.Socket.Connect%2A> before sending and receiving data.</span></span> <span data-ttu-id="3831b-1265">您可以使用<xref:System.Net.Sockets.Socket.SendTo%2A>和<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>進行同步通訊與遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1265">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> and <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> to synchronously communicate with a remote host.</span></span> <span data-ttu-id="3831b-1266">如果您呼叫<xref:System.Net.Sockets.Socket.Connect%2A>任何資料包來自指定的預設值以外的位址將會被捨棄。</span><span class="sxs-lookup"><span data-stu-id="3831b-1266">If you do call <xref:System.Net.Sockets.Socket.Connect%2A> any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="3831b-1267">如果您想要設定預設遠端主機的廣播位址，您必須先呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法，並設定通訊端選項設定為<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>，或<xref:System.Net.Sockets.Socket.Connect%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1267">If you want to set your default remote host to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>, or <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-1268">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1268">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1269">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1269">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="3831b-1270"><xref:System.Net.Sockets.Socket.Connect%2A> 方法會封鎖，除非您特別設定，否則<xref:System.Net.Sockets.Socket.Blocking%2A>屬性，以`false`才能呼叫<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1270"><xref:System.Net.Sockets.Socket.Connect%2A> method will block, unless you specifically set the <xref:System.Net.Sockets.Socket.Blocking%2A> property to `false` prior to calling <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-1271">如果您使用連線導向的通訊協定時，例如 TCP 和您不要停用封鎖<xref:System.Net.Sockets.Socket.Connect%2A>將會擲回<xref:System.Net.Sockets.SocketException>因為它需要時間來進行連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1271">If you are using a connection-oriented protocol like TCP and you do disable blocking, <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException> because it needs time to make the connection.</span></span> <span data-ttu-id="3831b-1272">因為它們只是建立預設遠端主機，無連線通訊協定不會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-1272">Connectionless protocols will not throw an exception because they simply establish a default remote host.</span></span> <span data-ttu-id="3831b-1273">您可以使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1273">You can use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1274">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1274">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span> <span data-ttu-id="3831b-1275">如果 WSAEWOULDBLOCK 傳回的錯誤，連接遠端主機已起始連線導向<xref:System.Net.Sockets.Socket>，但尚未完成成功。</span><span class="sxs-lookup"><span data-stu-id="3831b-1275">If the error returned WSAEWOULDBLOCK, the remote host connection has been initiated by a connection-oriented <xref:System.Net.Sockets.Socket>, but has not yet completed successfully.</span></span> <span data-ttu-id="3831b-1276">使用<xref:System.Net.Sockets.Socket.Poll%2A>方法，以判斷何時<xref:System.Net.Sockets.Socket>完成連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-1276">Use the <xref:System.Net.Sockets.Socket.Poll%2A> method to determine when the <xref:System.Net.Sockets.Socket> is finished connecting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1277">如果您使用連線導向的通訊協定，才會呼叫<xref:System.Net.Sockets.Socket.Bind%2A>再呼叫<xref:System.Net.Sockets.Socket.Connect%2A>，基礎的服務提供者會將指派的本機網路位址和連接埠編號。</span><span class="sxs-lookup"><span data-stu-id="3831b-1277">If you are using a connection-oriented protocol and did not call <xref:System.Net.Sockets.Socket.Bind%2A> before calling <xref:System.Net.Sockets.Socket.Connect%2A>, the underlying service provider will assign the local network address and port number.</span></span> <span data-ttu-id="3831b-1278">如果您使用無連接的通訊協定，服務提供者將未指派本機網路位址和連接埠號碼直到您完成傳送或接收作業。</span><span class="sxs-lookup"><span data-stu-id="3831b-1278">If you are using a connectionless protocol, the service provider will not assign a local network address and port number until you complete a send or receive operation.</span></span> <span data-ttu-id="3831b-1279">如果您想要變更預設遠端主機時，呼叫<xref:System.Net.Sockets.Socket.Connect%2A>再次使用所需的端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-1279">If you want to change the default remote host, call <xref:System.Net.Sockets.Socket.Connect%2A> again with the desired endpoint.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1280">如果通訊端具有先前中斷連接，然後您就無法使用此方法以還原連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1280">If the socket has been previously disconnected, then you cannot use this method to restore the connection.</span></span> <span data-ttu-id="3831b-1281">使用其中一種非同步<xref:System.Net.Sockets.Socket.BeginConnect%2A>重新連線的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1281">Use one of the asynchronous <xref:System.Net.Sockets.Socket.BeginConnect%2A> methods to reconnect.</span></span> <span data-ttu-id="3831b-1282">這是基礎提供者的限制。</span><span class="sxs-lookup"><span data-stu-id="3831b-1282">This is a limitation of the underlying provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1283">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1283">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1284">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1284">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1285">下列程式碼範例會連線到遠端端點，然後驗證該連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-1285">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#4)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1286">
            <paramref name="address" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1286">
              <paramref name="address" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-1287">連接埠號碼無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1287">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1288">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1288">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1289">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1289">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-1290">這個方法對於 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 系列的通訊端有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1290">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1291">
            <paramref name="address" /> 的長度為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1291">The length of <paramref name="address" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1292">藉由呼叫 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 已令 <see cref="T:System.Net.Sockets.Socket" /> 處於接聽狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1292">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (addresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress[] * int -&gt; unit" Usage="socket.Connect (addresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="3831b-1293">遠端主機的 IP 位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1293">The IP addresses of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="3831b-1294">遠端主機的連接埠號碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1294">The port number of the remote host.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1295">建立與遠端主機的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1295">Establishes a connection to a remote host.</span>
          </span>
          <span data-ttu-id="3831b-1296">主機是由 IP 位址陣列和連接埠號碼所指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1296">The host is specified by an array of IP addresses and a port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1297">這個方法通常用來呼叫之後立即<xref:System.Net.Dns.GetHostAddresses%2A>，這可以傳回多個 IP 位址的單一主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1297">This method is typically used immediately after a call to <xref:System.Net.Dns.GetHostAddresses%2A>, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="3831b-1298">如果您使用連線導向的通訊協定，例如 TCP<xref:System.Net.Sockets.Socket.Connect%2A>方法以同步方式建立之間的網路連線<xref:System.Net.Sockets.Socket.LocalEndPoint%2A>和指定的遠端端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-1298">If you are using a connection-oriented protocol such as TCP, the <xref:System.Net.Sockets.Socket.Connect%2A> method synchronously establishes a network connection between <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> and the specified remote endpoint.</span></span> <span data-ttu-id="3831b-1299">如果您使用無連接的通訊協定，<xref:System.Net.Sockets.Socket.Connect%2A>建立預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1299">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.Connect%2A> establishes a default remote host.</span></span> <span data-ttu-id="3831b-1300">在您呼叫後<xref:System.Net.Sockets.Socket.Connect%2A>您可以將資料傳送到遠端裝置與<xref:System.Net.Sockets.Socket.Send%2A>方法，或從遠端裝置與接收資料<xref:System.Net.Sockets.Socket.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1300">After you call <xref:System.Net.Sockets.Socket.Connect%2A> you can send data to the remote device with the <xref:System.Net.Sockets.Socket.Send%2A> method, or receive data from the remote device with the <xref:System.Net.Sockets.Socket.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-1301">如果您使用無連線的通訊協定，例如 UDP，您就不必呼叫<xref:System.Net.Sockets.Socket.Connect%2A>之前傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1301">If you are using a connectionless protocol such as UDP, you do not have to call <xref:System.Net.Sockets.Socket.Connect%2A> before sending and receiving data.</span></span> <span data-ttu-id="3831b-1302">您可以使用<xref:System.Net.Sockets.Socket.SendTo%2A>和<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>進行同步通訊與遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1302">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> and <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> to synchronously communicate with a remote host.</span></span> <span data-ttu-id="3831b-1303">如果您呼叫<xref:System.Net.Sockets.Socket.Connect%2A>任何資料包來自指定的預設值以外的位址將會被捨棄。</span><span class="sxs-lookup"><span data-stu-id="3831b-1303">If you do call <xref:System.Net.Sockets.Socket.Connect%2A> any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="3831b-1304">如果您想要設定預設遠端主機的廣播位址，您必須先呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法，並設定通訊端選項設定為<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>，或<xref:System.Net.Sockets.Socket.Connect%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1304">If you want to set your default remote host to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>, or <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-1305">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1305">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1306">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1306">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="3831b-1307"><xref:System.Net.Sockets.Socket.Connect%2A> 方法會封鎖，除非您特別設定，否則<xref:System.Net.Sockets.Socket.Blocking%2A>屬性，以`false`才能呼叫<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1307"><xref:System.Net.Sockets.Socket.Connect%2A> method will block, unless you specifically set the <xref:System.Net.Sockets.Socket.Blocking%2A> property to `false` prior to calling <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-1308">如果您使用連線導向的通訊協定時，例如 TCP 和您不要停用封鎖<xref:System.Net.Sockets.Socket.Connect%2A>將會擲回<xref:System.Net.Sockets.SocketException>因為它需要時間來進行連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1308">If you are using a connection-oriented protocol like TCP and you do disable blocking, <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException> because it needs time to make the connection.</span></span> <span data-ttu-id="3831b-1309">因為它們只是建立預設遠端主機，無連線通訊協定不會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-1309">Connectionless protocols will not throw an exception because they simply establish a default remote host.</span></span> <span data-ttu-id="3831b-1310">您可以使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1310">You can use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1311">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1311">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span> <span data-ttu-id="3831b-1312">如果 WSAEWOULDBLOCK 傳回的錯誤，連接遠端主機已起始連線導向<xref:System.Net.Sockets.Socket>，但尚未完成成功。</span><span class="sxs-lookup"><span data-stu-id="3831b-1312">If the error returned WSAEWOULDBLOCK, the remote host connection has been initiated by a connection-oriented <xref:System.Net.Sockets.Socket>, but has not yet completed successfully.</span></span> <span data-ttu-id="3831b-1313">使用<xref:System.Net.Sockets.Socket.Poll%2A>方法，以判斷何時<xref:System.Net.Sockets.Socket>完成連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-1313">Use the <xref:System.Net.Sockets.Socket.Poll%2A> method to determine when the <xref:System.Net.Sockets.Socket> is finished connecting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1314">如果您使用連線導向的通訊協定，才會呼叫<xref:System.Net.Sockets.Socket.Bind%2A>再呼叫<xref:System.Net.Sockets.Socket.Connect%2A>，基礎的服務提供者會將指派的本機網路位址和連接埠編號。</span><span class="sxs-lookup"><span data-stu-id="3831b-1314">If you are using a connection-oriented protocol and did not call <xref:System.Net.Sockets.Socket.Bind%2A> before calling <xref:System.Net.Sockets.Socket.Connect%2A>, the underlying service provider will assign the local network address and port number.</span></span> <span data-ttu-id="3831b-1315">如果您使用無連接的通訊協定，服務提供者將未指派本機網路位址和連接埠號碼直到您完成傳送或接收作業。</span><span class="sxs-lookup"><span data-stu-id="3831b-1315">If you are using a connectionless protocol, the service provider will not assign a local network address and port number until you complete a send or receive operation.</span></span> <span data-ttu-id="3831b-1316">如果您想要變更預設遠端主機時，呼叫<xref:System.Net.Sockets.Socket.Connect%2A>再次使用所需的端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-1316">If you want to change the default remote host, call <xref:System.Net.Sockets.Socket.Connect%2A> again with the desired endpoint.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1317">如果通訊端具有先前中斷連接，然後您就無法使用此方法以還原連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1317">If the socket has been previously disconnected, then you cannot use this method to restore the connection.</span></span> <span data-ttu-id="3831b-1318">使用其中一種非同步<xref:System.Net.Sockets.Socket.BeginConnect%2A>重新連線的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1318">Use one of the asynchronous <xref:System.Net.Sockets.Socket.BeginConnect%2A> methods to reconnect.</span></span> <span data-ttu-id="3831b-1319">這是基礎提供者的限制。</span><span class="sxs-lookup"><span data-stu-id="3831b-1319">This is a limitation of the underlying provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1320">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1320">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1321">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1321">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1322">下列程式碼範例會連線到遠端端點，然後驗證該連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-1322">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#5)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1323">
            <paramref name="addresses" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1323">
              <paramref name="addresses" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-1324">連接埠號碼無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1324">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1325">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1325">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1326">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1326">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-1327">這個方法對於 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 系列的通訊端有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1327">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1328">
            <paramref name="address" /> 的長度為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1328">The length of <paramref name="address" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1329">藉由呼叫 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 已令 <see cref="T:System.Net.Sockets.Socket" /> 處於接聽狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1329">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (host As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="socket.Connect (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="3831b-1330">遠端主機的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1330">The name of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="3831b-1331">遠端主機的連接埠號碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1331">The port number of the remote host.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1332">建立與遠端主機的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1332">Establishes a connection to a remote host.</span>
          </span>
          <span data-ttu-id="3831b-1333">此主機是由主機名稱和連接埠號碼指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1333">The host is specified by a host name and a port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1334">如果您使用連線導向的通訊協定，例如 TCP<xref:System.Net.Sockets.Socket.Connect%2A>方法以同步方式建立之間的網路連線<xref:System.Net.Sockets.Socket.LocalEndPoint%2A>和指定的遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1334">If you are using a connection-oriented protocol such as TCP, the <xref:System.Net.Sockets.Socket.Connect%2A> method synchronously establishes a network connection between <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> and the specified remote host.</span></span> <span data-ttu-id="3831b-1335">如果您使用無連接的通訊協定，<xref:System.Net.Sockets.Socket.Connect%2A>建立預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1335">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.Connect%2A> establishes a default remote host.</span></span> <span data-ttu-id="3831b-1336">在您呼叫後<xref:System.Net.Sockets.Socket.Connect%2A>您可以將資料傳送到遠端裝置與<xref:System.Net.Sockets.Socket.Send%2A>方法，或從遠端裝置與接收資料<xref:System.Net.Sockets.Socket.Receive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1336">After you call <xref:System.Net.Sockets.Socket.Connect%2A> you can send data to the remote device with the <xref:System.Net.Sockets.Socket.Send%2A> method, or receive data from the remote device with the <xref:System.Net.Sockets.Socket.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-1337">如果您使用無連線的通訊協定，例如 UDP，您就不必呼叫<xref:System.Net.Sockets.Socket.Connect%2A>之前傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1337">If you are using a connectionless protocol such as UDP, you do not have to call <xref:System.Net.Sockets.Socket.Connect%2A> before sending and receiving data.</span></span> <span data-ttu-id="3831b-1338">您可以使用<xref:System.Net.Sockets.Socket.SendTo%2A>和<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>進行同步通訊與遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1338">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> and <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> to synchronously communicate with a remote host.</span></span> <span data-ttu-id="3831b-1339">如果您呼叫<xref:System.Net.Sockets.Socket.Connect%2A>任何資料包來自指定的預設值以外的位址將會被捨棄。</span><span class="sxs-lookup"><span data-stu-id="3831b-1339">If you do call <xref:System.Net.Sockets.Socket.Connect%2A> any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="3831b-1340">如果您想要設定預設遠端主機的廣播位址，您必須先呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法，並設定通訊端選項設定為<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>，或<xref:System.Net.Sockets.Socket.Connect%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1340">If you want to set your default remote host to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>, or <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-1341">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1341">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1342">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1342">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="3831b-1343"><xref:System.Net.Sockets.Socket.Connect%2A> 方法會封鎖，除非您特別設定，否則<xref:System.Net.Sockets.Socket.Blocking%2A>屬性，以`false`才能呼叫<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1343"><xref:System.Net.Sockets.Socket.Connect%2A> method will block, unless you specifically set the <xref:System.Net.Sockets.Socket.Blocking%2A> property to `false` prior to calling <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-1344">如果您使用連線導向的通訊協定時，例如 TCP 和您不要停用封鎖<xref:System.Net.Sockets.Socket.Connect%2A>將會擲回<xref:System.Net.Sockets.SocketException>因為它需要時間來進行連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1344">If you are using a connection-oriented protocol like TCP and you do disable blocking, <xref:System.Net.Sockets.Socket.Connect%2A> will throw a <xref:System.Net.Sockets.SocketException> because it needs time to make the connection.</span></span> <span data-ttu-id="3831b-1345">因為它們只是建立預設遠端主機，無連線通訊協定不會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-1345">Connectionless protocols will not throw an exception because they simply establish a default remote host.</span></span> <span data-ttu-id="3831b-1346">您可以使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1346">You can use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1347">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1347">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span> <span data-ttu-id="3831b-1348">如果 WSAEWOULDBLOCK 傳回的錯誤，連接遠端主機已起始連線導向<xref:System.Net.Sockets.Socket>，但尚未完成成功。</span><span class="sxs-lookup"><span data-stu-id="3831b-1348">If the error returned WSAEWOULDBLOCK, the remote host connection has been initiated by a connection-oriented <xref:System.Net.Sockets.Socket>, but has not yet completed successfully.</span></span> <span data-ttu-id="3831b-1349">使用<xref:System.Net.Sockets.Socket.Poll%2A>方法，以判斷何時<xref:System.Net.Sockets.Socket>完成連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-1349">Use the <xref:System.Net.Sockets.Socket.Poll%2A> method to determine when the <xref:System.Net.Sockets.Socket> is finished connecting.</span></span>  
  
 <span data-ttu-id="3831b-1350">如果已啟用 IPv6 和<xref:System.Net.Sockets.Socket.Connect%28System.String%2CSystem.Int32%29>呼叫方法來連線到主機解析為這兩個 IPv6 和 IPv4 位址、 IPv6 位址將會連接嘗試之前的 IPv4 位址的第一個。</span><span class="sxs-lookup"><span data-stu-id="3831b-1350">If IPv6 is enabled and the <xref:System.Net.Sockets.Socket.Connect%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="3831b-1351">這可能會有延遲的時間來建立連接，如果主機並未接聽 IPv6 位址的效果。</span><span class="sxs-lookup"><span data-stu-id="3831b-1351">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1352">如果您使用連線導向的通訊協定，才會呼叫<xref:System.Net.Sockets.Socket.Bind%2A>再呼叫<xref:System.Net.Sockets.Socket.Connect%2A>，基礎的服務提供者會將指派的本機網路位址和連接埠編號。</span><span class="sxs-lookup"><span data-stu-id="3831b-1352">If you are using a connection-oriented protocol and did not call <xref:System.Net.Sockets.Socket.Bind%2A> before calling <xref:System.Net.Sockets.Socket.Connect%2A>, the underlying service provider will assign the local network address and port number.</span></span> <span data-ttu-id="3831b-1353">如果您使用無連接的通訊協定，服務提供者將未指派本機網路位址和連接埠號碼直到您完成傳送或接收作業。</span><span class="sxs-lookup"><span data-stu-id="3831b-1353">If you are using a connectionless protocol, the service provider will not assign a local network address and port number until you complete a send or receive operation.</span></span> <span data-ttu-id="3831b-1354">如果您想要變更預設遠端主機時，呼叫<xref:System.Net.Sockets.Socket.Connect%2A>再次使用所需的端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-1354">If you want to change the default remote host, call <xref:System.Net.Sockets.Socket.Connect%2A> again with the desired endpoint.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1355">如果通訊端具有先前中斷連接，然後您就無法使用此方法以還原連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1355">If the socket has been previously disconnected, then you cannot use this method to restore the connection.</span></span> <span data-ttu-id="3831b-1356">使用其中一種非同步<xref:System.Net.Sockets.Socket.BeginConnect%2A>重新連線的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1356">Use one of the asynchronous <xref:System.Net.Sockets.Socket.BeginConnect%2A> methods to reconnect.</span></span> <span data-ttu-id="3831b-1357">這是基礎提供者的限制。</span><span class="sxs-lookup"><span data-stu-id="3831b-1357">This is a limitation of the underlying provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1358">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1358">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1359">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1359">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1360">下列程式碼範例會連線到遠端端點，然後驗證該連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-1360">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socket.BeginConnect#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CPP/beginconnect.cpp#6)]
 [!code-csharp[System.Net.Sockets.Socket.BeginConnect#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socket.BeginConnect/CS/beginconnect.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1361">
            <paramref name="host" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1361">
              <paramref name="host" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-1362">連接埠號碼無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1362">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1363">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1363">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1364">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1364">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-1365">這個方法對於 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 系列的通訊端有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1365">This method is valid for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1366">藉由呼叫 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 已令 <see cref="T:System.Net.Sockets.Socket" /> 處於接聽狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1366">The <see cref="T:System.Net.Sockets.Socket" /> has been placed in a listening state by calling <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1367">開始與遠端主機連接的非同步要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1367">Begins an asynchronous request for a connection to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public bool ConnectAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ConnectAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ConnectAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.ConnectAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3831b-1368">
            <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件，用於這個非同步通訊端作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1368">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1369">開始與遠端主機連接的非同步要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1369">Begins an asynchronous request for a connection to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1370">如果 I/O 作業暫止，則傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1370">Returns <see langword="true" /> if the I/O operation is pending.</span>
          </span>
          <span data-ttu-id="3831b-1371">作業完成時會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1371">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span>
          </span>
          <span data-ttu-id="3831b-1372">如果 I/O 作業同步完成，則傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1372">Returns <see langword="false" /> if the I/O operation completed synchronously.</span>
          </span>
          <span data-ttu-id="3831b-1373">在這個情況下，就不會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，而在方法呼叫傳回後會立即檢查做為參數傳遞的 <paramref name="e" /> 物件，以擷取作業的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1373">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1374">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法會啟動遠端主機連接的非同步要求。</span><span class="sxs-lookup"><span data-stu-id="3831b-1374">If you are using a connection-oriented protocol, the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method starts an asynchronous request for a connection to the remote host.</span></span> <span data-ttu-id="3831b-1375">如果您使用無連接的通訊協定，<xref:System.Net.Sockets.Socket.ConnectAsync%2A>建立預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1375">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.ConnectAsync%2A> establishes a default remote host.</span></span>  
  
 <span data-ttu-id="3831b-1376">若要完成的通知，您必須建立實作事件處理常式的回呼方法\<SocketAsyncEventArgs > 委派，並將附加的回呼<xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="3831b-1376">To be notified of completion, you must create a callback method that implements the EventHandler\<SocketAsyncEventArgs> delegate and attach the callback to the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> event.</span></span>  
  
 <span data-ttu-id="3831b-1377">呼叫端必須將<xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>屬性設<xref:System.Net.IPEndPoint>連線至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1377">The caller must set the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> property to the <xref:System.Net.IPEndPoint> of the remote host to connect to.</span></span>  
  
 <span data-ttu-id="3831b-1378">呼叫端可能會設定<xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType>呼叫之前所需的任何使用者狀態物件的屬性<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法，如此會在回呼方法中擷取資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1378">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="3831b-1379">如果回呼需要比單一物件的詳細資訊，就可以建立小型的類別來保存為成員的其他必要的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1379">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="3831b-1380">如果您使用無連線的通訊協定，例如 UDP，您就不必呼叫<xref:System.Net.Sockets.Socket.ConnectAsync%2A>之前傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1380">If you are using a connectionless protocol such as UDP, you do not have to call <xref:System.Net.Sockets.Socket.ConnectAsync%2A> before sending and receiving data.</span></span> <span data-ttu-id="3831b-1381">您可以使用<xref:System.Net.Sockets.Socket.SendToAsync%2A>和<xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A>與遠端主機通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1381">You can use <xref:System.Net.Sockets.Socket.SendToAsync%2A> and <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A> to communicate with a remote host.</span></span> <span data-ttu-id="3831b-1382">如果您呼叫<xref:System.Net.Sockets.Socket.ConnectAsync%2A>，將會捨棄任何資料包來自指定的預設值以外的位址。</span><span class="sxs-lookup"><span data-stu-id="3831b-1382">If you do call <xref:System.Net.Sockets.Socket.ConnectAsync%2A>, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="3831b-1383">如果您想要變更預設遠端主機時，呼叫<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法一次所需的端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-1383">If you want to change the default remote host, call the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method again with the desired endpoint.</span></span>  
  
 <span data-ttu-id="3831b-1384">如果您想要設定預設遠端主機的廣播位址，您必須先呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>且設定為廣播`true`。</span><span class="sxs-lookup"><span data-stu-id="3831b-1384">If you wish to set the default remote host to a broadcast address, you must first call <xref:System.Net.Sockets.Socket.SetSocketOption%2A> and set Broadcast to `true`.</span></span> <span data-ttu-id="3831b-1385">如果不這麼做，<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1385">If this is not done, the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="3831b-1386">下列的屬性和事件<xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType>物件所需：</span><span class="sxs-lookup"><span data-stu-id="3831b-1386">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required:</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="3831b-1387">（選擇性） 緩衝區可能會提供這將會以不可分割方式傳送之後在通訊端上<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法成功。</span><span class="sxs-lookup"><span data-stu-id="3831b-1387">Optionally, a buffer may be provided which will atomically be sent on the socket after the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method succeeds.</span></span> <span data-ttu-id="3831b-1388">在此情況下，<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType>屬性必須設定為包含資料的緩衝區，以傳送和<xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType>屬性必須設定為從緩衝區傳送資料的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-1388">In this case, the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> property needs to be set to the buffer containing the data to send and the <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> property needs to be set to the number of bytes of data to send from the buffer.</span></span> <span data-ttu-id="3831b-1389">一旦建立連線時，就會傳送此緩衝區的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1389">Once a connection is established, this buffer of data is sent.</span></span>  
  
 <span data-ttu-id="3831b-1390">如果您使用連線導向的通訊協定並不會呼叫<xref:System.Net.Sockets.Socket.Bind%2A>再呼叫<xref:System.Net.Sockets.Socket.ConnectAsync%2A>，基礎的服務提供者會指派最適當的區域網路位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1390">If you are using a connection-oriented protocol and do not call <xref:System.Net.Sockets.Socket.Bind%2A> before calling <xref:System.Net.Sockets.Socket.ConnectAsync%2A>, the underlying service provider will assign the most appropriate local network address and port number.</span></span>  
  
 <span data-ttu-id="3831b-1391">如果您使用無連接的通訊協定，服務提供者將未指派區域網路 IP 位址和連接埠號碼直到您呼叫<xref:System.Net.Sockets.Socket.SendAsync%2A>或<xref:System.Net.Sockets.Socket.ReceiveAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1391">If you are using a connectionless protocol, the service provider will not assign a local network IP address and port number until you call the <xref:System.Net.Sockets.Socket.SendAsync%2A> or <xref:System.Net.Sockets.Socket.ReceiveAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="3831b-1392"><xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法會擲回<xref:System.NotSupportedException>如果 family<xref:System.Net.Sockets.Socket>而<xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>不相同的位址系列。</span><span class="sxs-lookup"><span data-stu-id="3831b-1392">The <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method throws <xref:System.NotSupportedException> if the address family of the <xref:System.Net.Sockets.Socket> and the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> are not the same address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1393">如果您收到<xref:System.Net.Sockets.SocketException>呼叫這個方法時，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1393">If you receive a <xref:System.Net.Sockets.SocketException> when calling this method, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1394">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1394">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1395">引數無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1395">An argument is not valid.</span>
          </span>
          <span data-ttu-id="3831b-1396">如果指定多個緩衝區而 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 屬性不是 null，就會發生這個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1396">This exception occurs if multiple buffers are specified, the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is not null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1397">
            <paramref name="e" /> 參數不可為 null，而且 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 也不可為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1397">The <paramref name="e" /> parameter cannot be null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1398">
            <see cref="T:System.Net.Sockets.Socket" /> 正在接聽，或是通訊端作業正在進行並且使用 <paramref name="e" /> 參數所指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1398">The <see cref="T:System.Net.Sockets.Socket" /> is listening or a socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1399">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1399">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-1400">這個方法需要 Windows XP (含) 以後版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1400">Windows XP or later is required for this method.</span>
          </span>
          <span data-ttu-id="3831b-1401">如果本機端點和 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 不是同一個通訊協定家族 (Family)，也會發生這個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1401">This exception also occurs if the local endpoint and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> are not the same address family.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1402">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1402">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-1403">在呼叫堆疊中位置較高的呼叫端對於要求的作業沒有權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1403">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public static bool ConnectAsync (System.Net.Sockets.SocketType socketType, System.Net.Sockets.ProtocolType protocolType, System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ConnectAsync(valuetype System.Net.Sockets.SocketType socketType, valuetype System.Net.Sockets.ProtocolType protocolType, class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ConnectAsync(System::Net::Sockets::SocketType socketType, System::Net::Sockets::ProtocolType protocolType, System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="static member ConnectAsync : System.Net.Sockets.SocketType * System.Net.Sockets.ProtocolType * System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="System.Net.Sockets.Socket.ConnectAsync (socketType, protocolType, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socketType" Type="System.Net.Sockets.SocketType" />
        <Parameter Name="protocolType" Type="System.Net.Sockets.ProtocolType" />
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" />
      </Parameters>
      <Docs>
        <param name="socketType">
          <span data-ttu-id="3831b-1404">其中一個 <see cref="T:System.Net.Sockets.SocketType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1404">One of the <see cref="T:System.Net.Sockets.SocketType" /> values.</span>
          </span>
        </param>
        <param name="protocolType">
          <span data-ttu-id="3831b-1405">其中一個 <see cref="T:System.Net.Sockets.ProtocolType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1405">One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3831b-1406">
            <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件，用於這個非同步通訊端作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1406">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1407">開始與遠端主機連接的非同步要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1407">Begins an asynchronous request for a connection to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1408">如果 I/O 作業暫止，則傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1408">Returns <see langword="true" /> if the I/O operation is pending.</span>
          </span>
          <span data-ttu-id="3831b-1409">作業完成時會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1409">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span>
          </span>
          <span data-ttu-id="3831b-1410">如果 I/O 作業同步完成，則傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1410">Returns <see langword="false" /> if the I/O operation completed synchronously.</span>
          </span>
          <span data-ttu-id="3831b-1411">在這個情況下，就不會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，而在方法呼叫傳回後會立即檢查做為參數傳遞的 <paramref name="e" /> 物件，以擷取作業的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1411">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1412">如果您使用連線導向的通訊協定，M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs) 方法啟動的非同步要求連接至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1412">If you are using a connection-oriented protocol, the M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs) method starts an asynchronous request for a connection to the remote host.</span></span> <span data-ttu-id="3831b-1413">如果您使用無連接的通訊協定<xref:System.Net.Sockets.Socket.ConnectAsync%2A>建立預設遠端主機所指定`socketType`和`protocolType`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-1413">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.ConnectAsync%2A> establishes a default remote host specified by the `socketType` and `protocolType` parameters.</span></span>  
  
 <span data-ttu-id="3831b-1414">若要完成的通知，您必須建立實作事件處理常式的回呼方法\<SocketAsyncEventArgs > 委派，並將附加的回呼<xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="3831b-1414">To be notified of completion, you must create a callback method that implements the EventHandler\<SocketAsyncEventArgs> delegate and attach the callback to the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> event.</span></span>  
  
 <span data-ttu-id="3831b-1415">呼叫端必須將<xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>屬性設<xref:System.Net.IPEndPoint>連線至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1415">The caller must set the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> property to the <xref:System.Net.IPEndPoint> of the remote host to connect to.</span></span>  
  
 <span data-ttu-id="3831b-1416">呼叫端可能會設定<xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType>呼叫之前所需的任何使用者狀態物件的屬性<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法，如此會在回呼方法中擷取資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1416">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="3831b-1417">如果回呼需要比單一物件的詳細資訊，就可以建立小型的類別來保存為成員的其他必要的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1417">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="3831b-1418">如果您使用無連線的通訊協定，例如 UDP，您就不必呼叫<xref:System.Net.Sockets.Socket.ConnectAsync%2A>之前傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1418">If you are using a connectionless protocol such as UDP, you do not have to call <xref:System.Net.Sockets.Socket.ConnectAsync%2A> before sending and receiving data.</span></span> <span data-ttu-id="3831b-1419">您可以使用<xref:System.Net.Sockets.Socket.SendToAsync%2A>和<xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A>與遠端主機通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1419">You can use <xref:System.Net.Sockets.Socket.SendToAsync%2A> and <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A> to communicate with a remote host.</span></span> <span data-ttu-id="3831b-1420">如果您呼叫<xref:System.Net.Sockets.Socket.ConnectAsync%2A>，將會捨棄任何資料包來自指定的預設值以外的位址。</span><span class="sxs-lookup"><span data-stu-id="3831b-1420">If you do call <xref:System.Net.Sockets.Socket.ConnectAsync%2A>, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="3831b-1421">如果您想要變更預設遠端主機時，呼叫<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法一次所需的端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-1421">If you want to change the default remote host, call the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method again with the desired endpoint.</span></span>  
  
 <span data-ttu-id="3831b-1422">如果您想要設定預設遠端主機的廣播位址，您必須先呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>且設定為廣播`true`。</span><span class="sxs-lookup"><span data-stu-id="3831b-1422">If you wish to set the default remote host to a broadcast address, you must first call <xref:System.Net.Sockets.Socket.SetSocketOption%2A> and set Broadcast to `true`.</span></span> <span data-ttu-id="3831b-1423">如果不這麼做，<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1423">If this is not done, the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="3831b-1424">下列的屬性和事件<xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType>物件所需：</span><span class="sxs-lookup"><span data-stu-id="3831b-1424">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required:</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="3831b-1425">（選擇性） 緩衝區可能會提供這將會以不可分割方式傳送之後在通訊端上<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法成功。</span><span class="sxs-lookup"><span data-stu-id="3831b-1425">Optionally, a buffer may be provided which will atomically be sent on the socket after the <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method succeeds.</span></span> <span data-ttu-id="3831b-1426">在此情況下，<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType>屬性必須設定為包含資料的緩衝區，以傳送和<xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType>屬性必須設定為從緩衝區傳送資料的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-1426">In this case, the <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> property needs to be set to the buffer containing the data to send and the <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> property needs to be set to the number of bytes of data to send from the buffer.</span></span> <span data-ttu-id="3831b-1427">一旦建立連線時，就會傳送此緩衝區的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1427">Once a connection is established, this buffer of data is sent.</span></span>  
  
 <span data-ttu-id="3831b-1428">如果您使用連線導向的通訊協定並不會呼叫<xref:System.Net.Sockets.Socket.Bind%2A>再呼叫<xref:System.Net.Sockets.Socket.ConnectAsync%2A>，基礎的服務提供者會指派最適當的區域網路位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1428">If you are using a connection-oriented protocol and do not call <xref:System.Net.Sockets.Socket.Bind%2A> before calling <xref:System.Net.Sockets.Socket.ConnectAsync%2A>, the underlying service provider will assign the most appropriate local network address and port number.</span></span>  
  
 <span data-ttu-id="3831b-1429">如果您使用無連接的通訊協定，服務提供者將未指派區域網路 IP 位址和連接埠號碼直到您呼叫<xref:System.Net.Sockets.Socket.SendAsync%2A>或<xref:System.Net.Sockets.Socket.ReceiveAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1429">If you are using a connectionless protocol, the service provider will not assign a local network IP address and port number until you call the <xref:System.Net.Sockets.Socket.SendAsync%2A> or <xref:System.Net.Sockets.Socket.ReceiveAsync%2A> methods.</span></span>  
  
 <span data-ttu-id="3831b-1430"><xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法會擲回<xref:System.NotSupportedException>如果 family<xref:System.Net.Sockets.Socket>而<xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>不相同的位址系列。</span><span class="sxs-lookup"><span data-stu-id="3831b-1430">The <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method throws <xref:System.NotSupportedException> if the address family of the <xref:System.Net.Sockets.Socket> and the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> are not the same address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1431">如果您收到<xref:System.Net.Sockets.SocketException>呼叫這個方法時，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1431">If you receive a <xref:System.Net.Sockets.SocketException> when calling this method, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1432">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1432">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1433">引數無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1433">An argument is not valid.</span>
          </span>
          <span data-ttu-id="3831b-1434">如果指定多個緩衝區而 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 屬性不是 null，就會發生這個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1434">This exception occurs if multiple buffers are specified, the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> property is not null.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1435">
            <paramref name="e" /> 參數不可為 null，而且 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 也不可為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1435">The <paramref name="e" /> parameter cannot be null and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1436">
            <see cref="T:System.Net.Sockets.Socket" /> 正在接聽，或是通訊端作業正在進行並且使用 <paramref name="e" /> 參數所指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1436">The <see cref="T:System.Net.Sockets.Socket" /> is listening or a socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1437">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1437">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-1438">這個方法需要 Windows XP (含) 以後版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1438">Windows XP or later is required for this method.</span>
          </span>
          <span data-ttu-id="3831b-1439">如果本機端點和 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 不是同一個通訊協定家族 (Family)，也會發生這個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1439">This exception also occurs if the local endpoint and the <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> are not the same address family.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1440">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1440">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-1441">在呼叫堆疊中位置較高的呼叫端對於要求的作業沒有權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1441">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Connected : bool" Usage="System.Net.Sockets.Socket.Connected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1442">取得值，指出上一個 <see cref="T:System.Net.Sockets.Socket" /> 或 <see cref="Overload:System.Net.Sockets.Socket.Send" /> 作業是否將 <see cref="Overload:System.Net.Sockets.Socket.Receive" /> 連接至遠端主機。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1442">Gets a value that indicates whether a <see cref="T:System.Net.Sockets.Socket" /> is connected to a remote host as of the last <see cref="Overload:System.Net.Sockets.Socket.Send" /> or <see cref="Overload:System.Net.Sockets.Socket.Receive" /> operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-1443">如果最近一次的作業是將 <see cref="T:System.Net.Sockets.Socket" /> 連接到遠端資源，則為 <see langword="true" />，否則，即為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1443">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1444">`Connected`屬性取得的連接狀態<xref:System.Net.Sockets.Socket>截至最後一個 I/O 作業。</span><span class="sxs-lookup"><span data-stu-id="3831b-1444">The `Connected` property gets the connection state of the <xref:System.Net.Sockets.Socket> as of the last I/O operation.</span></span> <span data-ttu-id="3831b-1445">當它傳回`false`，則<xref:System.Net.Sockets.Socket>永遠不會連接，或已中斷連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1445">When it returns `false`, the <xref:System.Net.Sockets.Socket> was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="3831b-1446">值<xref:System.Net.Sockets.Socket.Connected%2A>屬性會反映最新的作業連接的狀態。</span><span class="sxs-lookup"><span data-stu-id="3831b-1446">The value of the <xref:System.Net.Sockets.Socket.Connected%2A> property reflects the state of the connection as of the most recent operation.</span></span> <span data-ttu-id="3831b-1447">如果您需要判斷目前的連接狀態，請呼叫非封鎖，零位元組傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-1447">If you need to determine the current state of the connection, make a nonblocking, zero-byte Send call.</span></span> <span data-ttu-id="3831b-1448">如果呼叫成功傳回，或擲回 WAEWOULDBLOCK 錯誤程式碼 (10035)，然後連接通訊端仍;否則，通訊端已中斷連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1448">If the call returns successfully or throws a WAEWOULDBLOCK error code (10035), then the socket is still connected; otherwise, the socket is no longer connected.</span></span>  
  
 <span data-ttu-id="3831b-1449">如果您呼叫<xref:System.Net.Sockets.Socket.Connect%2A>使用者資料包通訊協定 (UDP) 通訊端上<xref:System.Net.Sockets.Socket.Connected%2A>屬性一律會傳回`true`; 不過，此動作不會變更 UDP 原本就不需連線性質。</span><span class="sxs-lookup"><span data-stu-id="3831b-1449">If you call <xref:System.Net.Sockets.Socket.Connect%2A> on a User Datagram Protocol (UDP) socket, the <xref:System.Net.Sockets.Socket.Connected%2A> property always returns `true`; however, this action does not change the inherent connectionless nature of UDP.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1450">下列程式碼範例會連線到遠端端點，檢查<xref:System.Net.Sockets.Socket.Connected%2A>屬性，並檢查連線的目前狀態。</span><span class="sxs-lookup"><span data-stu-id="3831b-1450">The following code example connects to a remote endpoint, checks the <xref:System.Net.Sockets.Socket.Connected%2A> property, and checks the current state of the connection.</span></span>  
  
 [!code-cpp[Classic Socket.Connect Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Connect Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Connect Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Connect Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Connect Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Connect Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="public void Disconnect (bool reuseSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Disconnect(bool reuseSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Disconnect(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Disconnect (reuseSocket As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Disconnect(bool reuseSocket);" />
      <MemberSignature Language="F#" Value="member this.Disconnect : bool -&gt; unit" Usage="socket.Disconnect reuseSocket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reuseSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reuseSocket">
          <span data-ttu-id="3831b-1451">如果這個通訊端可以在關閉目前連線後重複使用，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1451">
              <see langword="true" /> if this socket can be reused after the current connection is closed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1452">關閉通訊端連線並允許重複使用通訊端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1452">Closes the socket connection and allows reuse of the socket.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1453">如果您使用連線導向的通訊協定，您可以使用這個方法，以關閉通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-1453">If you are using a connection-oriented protocol, you can use this method to close the socket.</span></span> <span data-ttu-id="3831b-1454">此方法結束的連接和集合<xref:System.Net.Sockets.Socket.Connected%2A>屬性設`false`。</span><span class="sxs-lookup"><span data-stu-id="3831b-1454">This method ends the connection and sets the <xref:System.Net.Sockets.Socket.Connected%2A> property to `false`.</span></span> <span data-ttu-id="3831b-1455">不過，如果`reuseSocket`是`true`，您可以重複使用通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-1455">However, if `reuseSocket` is `true`, you can reuse the socket.</span></span>  
  
 <span data-ttu-id="3831b-1456">若要確保所有資料都傳送及接收通訊端關閉之前，您應該呼叫<xref:System.Net.Sockets.Socket.Shutdown%2A>再呼叫<xref:System.Net.Sockets.Socket.Disconnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1456">To ensure that all data is sent and received before the socket is closed, you should call <xref:System.Net.Sockets.Socket.Shutdown%2A> before calling the <xref:System.Net.Sockets.Socket.Disconnect%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-1457">如果您需要呼叫<xref:System.Net.Sockets.Socket.Disconnect%2A>情況下先呼叫<xref:System.Net.Sockets.Socket.Shutdown%2A>，您可以設定<xref:System.Net.Sockets.SocketOptionName.DontLinger><xref:System.Net.Sockets.Socket>選項設定為`false`並指定非零的逾時間隔，以確保資料在傳送 傳出傳輸排入佇列。</span><span class="sxs-lookup"><span data-stu-id="3831b-1457">If you need to call <xref:System.Net.Sockets.Socket.Disconnect%2A> without first calling <xref:System.Net.Sockets.Socket.Shutdown%2A>, you can set the <xref:System.Net.Sockets.SocketOptionName.DontLinger><xref:System.Net.Sockets.Socket> option to `false` and specify a nonzero time-out interval to ensure that data queued for outgoing transmission is sent.</span></span> <span data-ttu-id="3831b-1458"><xref:System.Net.Sockets.Socket.Disconnect%2A> 然後會封鎖直到將資料傳送，或直到指定的逾時過期為止。</span><span class="sxs-lookup"><span data-stu-id="3831b-1458"><xref:System.Net.Sockets.Socket.Disconnect%2A> then blocks until the data is sent or until the specified time-out expires.</span></span> <span data-ttu-id="3831b-1459">如果您設定<xref:System.Net.Sockets.SocketOptionName.DontLinger>要`false`並指定為零的逾時間隔，<xref:System.Net.Sockets.Socket.Close%2A>釋出連線，並會自動捨棄 外寄佇列的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1459">If you set <xref:System.Net.Sockets.SocketOptionName.DontLinger> to `false` and specify a zero time-out interval, <xref:System.Net.Sockets.Socket.Close%2A> releases the connection and automatically discards outgoing queued data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1460">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1460">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1461">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1461">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1462">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1462">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1463">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1463">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1464">下列程式碼範例會建立同步通訊的通訊端，並將部分資料傳送至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1464">The following code example creates a socket for synchronous communication and sends some data to a remote host.</span></span> <span data-ttu-id="3831b-1465">然後它會呼叫<xref:System.Net.Sockets.Socket.Shutdown%2A>，以停止傳送及接收活動，以及<xref:System.Net.Sockets.Socket.Disconnect%2A>以關閉通訊端連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1465">It then calls <xref:System.Net.Sockets.Socket.Shutdown%2A>, to stop the send and receive activity, and <xref:System.Net.Sockets.Socket.Disconnect%2A>, to close the socket connection.</span></span>  
  
 [!code-cpp[Nclsocketenhancements#12](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#12)]
 [!code-csharp[Nclsocketenhancements#12](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="3831b-1466">這個方法需要 Windows 2000 (含) 以前版本，否則會擲回例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1466">This method requires Windows 2000 or earlier, or the exception will be thrown.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1467">
            <see cref="T:System.Net.Sockets.Socket" />物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1467">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1468">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1468">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DisconnectAsync">
      <MemberSignature Language="C#" Value="public bool DisconnectAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DisconnectAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisconnectAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DisconnectAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.DisconnectAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.DisconnectAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3831b-1469">
            <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件，用於這個非同步通訊端作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1469">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1470">開始非同步要求，以中斷遠端端點的連接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1470">Begins an asynchronous request to disconnect from a remote endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1471">如果 I/O 作業暫止，則傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1471">Returns <see langword="true" /> if the I/O operation is pending.</span>
          </span>
          <span data-ttu-id="3831b-1472">作業完成時會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1472">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span>
          </span>
          <span data-ttu-id="3831b-1473">如果 I/O 作業同步完成，則傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1473">Returns <see langword="false" /> if the I/O operation completed synchronously.</span>
          </span>
          <span data-ttu-id="3831b-1474">在這個情況下，就不會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，而在方法呼叫傳回後會立即檢查做為參數傳遞的 <paramref name="e" /> 物件，以擷取作業的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1474">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1475">使用連線導向的通訊協定，當呼叫<xref:System.Net.Sockets.Socket.DisconnectAsync%2A>方法會要求從遠端端點的中斷連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1475">When using a connection-oriented protocol, calling the <xref:System.Net.Sockets.Socket.DisconnectAsync%2A> method requests a disconnect from a remote endpoint.</span></span> <span data-ttu-id="3831b-1476">如果您設定<xref:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket%2A?displayProperty=nameWithType>要`true`在`e`參數，可以重複使用通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-1476">If you set <xref:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket%2A?displayProperty=nameWithType> to `true` in the `e` parameter, the socket can be reused.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1477">
            <paramref name="e" /> 參數不可以是 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1477">The <paramref name="e" /> parameter cannot be null.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1478">通訊端作業已使用 <paramref name="e" /> 參數內指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件正在進行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1478">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-1479">這個方法需要 Windows XP (含) 以後版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1479">Windows XP or later is required for this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1480">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1480">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1481">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1481">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.DisconnectReuseSocket" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1482">釋放 <see cref="T:System.Net.Sockets.Socket" /> 類別目前的執行個體所使用的全部資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1482">Releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.Socket" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="socket.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1483">釋放 <see cref="T:System.Net.Sockets.Socket" /> 類別目前的執行個體所使用的全部資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1483">Releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.Socket" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1484">`Dispose` 使用完畢時，請呼叫 <xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1484">Call `Dispose` when you are finished using the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-1485">`Dispose` 方法會將 <xref:System.Net.Sockets.Socket> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="3831b-1485">The `Dispose` method leaves the <xref:System.Net.Sockets.Socket> in an unusable state.</span></span> <span data-ttu-id="3831b-1486">之後呼叫`Dispose`，您必須釋放所有的參考<xref:System.Net.Sockets.Socket>讓記憶體回收行程可以回收記憶體，<xref:System.Net.Sockets.Socket>所佔用。</span><span class="sxs-lookup"><span data-stu-id="3831b-1486">After calling `Dispose`, you must release all references to the <xref:System.Net.Sockets.Socket> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.Socket> was occupying.</span></span>  
  
 <span data-ttu-id="3831b-1487">如需詳細資訊，請參閱 <<c0> [ 清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1487">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1488">在您釋放最後一個 `Dispose` 參考之前，請務必呼叫 <xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1488">Always call `Dispose` before you release your last reference to the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-1489">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Net.Sockets.Socket> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1489">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.Socket> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="socket.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="3831b-1490">
            <see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源；<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1490">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1491">釋放 <see cref="T:System.Net.Sockets.Socket" /> 所使用的 Unmanaged 資源，並選擇性處置 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1491">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.Socket" />, and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1492">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1492">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="3831b-1493">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設為`true`。</span><span class="sxs-lookup"><span data-stu-id="3831b-1493">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="3831b-1494"><xref:System.Object.Finalize%2A> 叫用`Dispose`具有`disposing`設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="3831b-1494"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="3831b-1495">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Net.Sockets.Socket> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="3831b-1495">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.Socket> references.</span></span> <span data-ttu-id="3831b-1496">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1496">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1497">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1497">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1498">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1498">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3831b-1499">
              <see langword="Dispose" /> 可以被其他物件呼叫多次。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3831b-1499">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="3831b-1500">覆寫 <see cref="M:System.Net.Sockets.Socket.Dispose(System.Boolean)" /> 時，請小心不要參考到先前已在對 <see langword="Dispose" /> 的早期呼叫中被處置 (Dispose) 的物件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3831b-1500">When overriding <see cref="M:System.Net.Sockets.Socket.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="3831b-1501">如需有關如何實作<see cref="M:System.Net.Sockets.Socket.Dispose(System.Boolean)" />，請參閱 &lt;&lt;c2&gt; [ 實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3831b-1501">For more information about how to implement <see cref="M:System.Net.Sockets.Socket.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="3831b-1502">如需詳細資訊<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)並[覆寫 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3831b-1502">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DontFragment : bool with get, set" Usage="System.Net.Sockets.Socket.DontFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1503">取得或設定 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Net.Sockets.Socket" /> 是否允許將網際網路通訊協定 (IP) 資料包分散。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1503">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> allows Internet Protocol (IP) datagrams to be fragmented.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-1504">如果 <see cref="T:System.Net.Sockets.Socket" /> 允許資料包分散，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1504">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> allows datagram fragmentation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3831b-1505">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1505">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1506">資料包需要分散，當其大小超過最大傳輸單位 (MTU) 的傳輸媒介。</span><span class="sxs-lookup"><span data-stu-id="3831b-1506">Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</span></span> <span data-ttu-id="3831b-1507">可能分散資料包，藉由傳送主機 （所有的網際網路通訊協定版本） 或中繼路由器 (Internet Protocol Version 4 僅)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1507">Datagrams may be fragmented by the sending host (all Internet Protocol versions) or an intermediate router (Internet Protocol Version 4 only).</span></span> <span data-ttu-id="3831b-1508">如果必須分割資料包 (datagram)，而<xref:System.Net.Sockets.Socket.DontFragment%2A>選項設定，會捨棄的資料包，網際網路控制訊息通訊協定 (ICMP) 錯誤訊息傳回給寄件者的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-1508">If a datagram must be fragmented, and the <xref:System.Net.Sockets.Socket.DontFragment%2A> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</span></span>  
  
 <span data-ttu-id="3831b-1509">傳輸控制通訊協定 (TCP) 通訊端上設定這個屬性會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="3831b-1509">Setting this property on a Transmission Control Protocol (TCP) socket will have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1510">下列程式碼範例示範使用<xref:System.Net.Sockets.Socket.DontFragment%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-1510">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.DontFragment%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#2)]
 [!code-csharp[SocketPropertyTester#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-1511">這個屬性只可為 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 家族中的通訊端設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1511">This property can be set only for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1512">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1512">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1513">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1513">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DualMode">
      <MemberSignature Language="C#" Value="public bool DualMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DualMode" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.DualMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DualMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DualMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DualMode : bool with get, set" Usage="System.Net.Sockets.Socket.DualMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1514">取得或設定 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Net.Sockets.Socket" /> 是否為適用於 IPv4 和 IPv6 的雙重模式通訊端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1514">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> is a dual-mode socket used for both IPv4 and IPv6.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-1515">如果 <see cref="T:System.Net.Sockets.Socket" /> 是雙重模式通訊端，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1515">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> is a  dual-mode socket; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3831b-1516">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1516">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplicateAndClose">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketInformation DuplicateAndClose (int targetProcessId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Net.Sockets.SocketInformation DuplicateAndClose(int32 targetProcessId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.DuplicateAndClose(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DuplicateAndClose (targetProcessId As Integer) As SocketInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::SocketInformation DuplicateAndClose(int targetProcessId);" />
      <MemberSignature Language="F#" Value="member this.DuplicateAndClose : int -&gt; System.Net.Sockets.SocketInformation" Usage="socket.DuplicateAndClose targetProcessId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoLimitation("We do not support passing sockets across processes, we merely allow this API to pass the socket across AppDomains")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetProcessId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="targetProcessId">
          <span data-ttu-id="3831b-1517">建立重複通訊端參考的目標處理序 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1517">The ID of the target process where a duplicate of the socket reference is created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1518">複製目標處理序的通訊端參考，並關閉這個處理序的通訊端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1518">Duplicates the socket reference for the target process, and closes the socket for this process.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1519">要傳遞至目標處理序的通訊端參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1519">The socket reference to be passed to the target process.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1520">目標處理序應該使用<xref:System.Net.Sockets.Socket.%23ctor%2A>建立重複通訊端執行個體。</span><span class="sxs-lookup"><span data-stu-id="3831b-1520">The target process should use <xref:System.Net.Sockets.Socket.%23ctor%2A> to create the duplicate socket instance.</span></span>  
  
 <span data-ttu-id="3831b-1521">如果您呼叫<xref:System.Net.Sockets.Socket.%23ctor%2A>多次使用相同的位元組陣列，為每個呼叫的引數的建構函式，您將建立受管理的多個<xref:System.Net.Sockets.Socket>具有相同的基礎通訊端的執行個體。</span><span class="sxs-lookup"><span data-stu-id="3831b-1521">If you call the <xref:System.Net.Sockets.Socket.%23ctor%2A> constructor multiple times with the same byte array as the argument for each call, you will create multiple managed <xref:System.Net.Sockets.Socket> instances with the same underlying socket.</span></span> <span data-ttu-id="3831b-1522">這種做法不鼓勵。</span><span class="sxs-lookup"><span data-stu-id="3831b-1522">This practice is strongly discouraged.</span></span>  
  
 <span data-ttu-id="3831b-1523">如果建立通訊端處理程序會使用非同步方法 (<xref:System.Net.Sockets.Socket.BeginReceive%2A>或<xref:System.Net.Sockets.Socket.BeginSend%2A>)，必須先設定程序<xref:System.Net.Sockets.Socket.UseOnlyOverlappedIO%2A>屬性設為 true，否則繫結至建立的程序，這可能會造成的完成連接埠的通訊端<xref:System.ArgumentNullException>目標處理序上被擲回。</span><span class="sxs-lookup"><span data-stu-id="3831b-1523">If the process creating the socket uses asynchronous methods (<xref:System.Net.Sockets.Socket.BeginReceive%2A> or <xref:System.Net.Sockets.Socket.BeginSend%2A>), the process must first set the <xref:System.Net.Sockets.Socket.UseOnlyOverlappedIO%2A> property to true; otherwise, the socket is bound to the completion port of the creating process, which may cause an <xref:System.ArgumentNullException> to be thrown on the target process.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1524">
            <paramref name="targetProcessID" /> 不是有效的處理序 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1524">
              <paramref name="targetProcessID" /> is not a valid process id.</span>
          </span>
          <span data-ttu-id="3831b-1525">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1525">-or-</span>
          </span>
          <span data-ttu-id="3831b-1526">複製通訊端參考失敗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1526">Duplication of the socket reference failed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnableBroadcast">
      <MemberSignature Language="C#" Value="public bool EnableBroadcast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableBroadcast" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.EnableBroadcast" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableBroadcast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableBroadcast { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableBroadcast : bool with get, set" Usage="System.Net.Sockets.Socket.EnableBroadcast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1527">取得或設定 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Net.Sockets.Socket" /> 是否可以傳送或接收廣播封包。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1527">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> can send or receive broadcast packets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-1528">如果 <see cref="T:System.Net.Sockets.Socket" /> 允許廣播封包，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1528">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> allows broadcast packets; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3831b-1529">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1529">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1530">廣播限制為特定的子網路，而且必須使用使用者資料包通訊協定 (UDP)。針對網際網路通訊協定第 4 版，您可以廣播到本機子網路的封包傳送至 255.255.255.255;或者，您可以使用導向的廣播的位址，也就是使用中的主機部分設定的所有位元的網際網路通訊協定 (IP) 位址的網路部分。</span><span class="sxs-lookup"><span data-stu-id="3831b-1530">Broadcasting is limited to a specific subnet, and must use User Datagram Protocol (UDP.) For Internet Protocol version 4, you can broadcast to your local subnet by sending a packet to 255.255.255.255; or you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</span></span> <span data-ttu-id="3831b-1531">例如，如果您的 IP 位址為 192.168.1.40 （類別 C 位址，與網路遮罩 255.255.255.0-網路部分是前三個八位元，而的主機部分是最後一個八位元），則導向的廣播的位址為 192.168.1.255。</span><span class="sxs-lookup"><span data-stu-id="3831b-1531">For example, if your IP address is 192.168.1.40 (a Class C address, with a netmask of 255.255.255.0 -- the network portion is the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</span></span>  
  
 <span data-ttu-id="3831b-1532">傳輸控制通訊協定 (TCP) 通訊端上設定這個屬性會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="3831b-1532">Setting this property on a Transmission Control Protocol (TCP) socket will have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1533">下列程式碼範例示範使用<xref:System.Net.Sockets.Socket.EnableBroadcast%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-1533">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.EnableBroadcast%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#2)]
 [!code-csharp[SocketPropertyTester#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1534">這個選項只對資料包通訊端有效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1534">This option is valid for a datagram socket only.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1535">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1535">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EndAccept">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1536">非同步接受連入連線嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1536">Asynchronously accepts an incoming connection attempt.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EndAccept">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAccept (out byte[] buffer, IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAccept([out] unsigned int8[]&amp; buffer, class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAccept (ByRef buffer As Byte(), asyncResult As IAsyncResult) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAccept([Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % buffer, IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAccept :  * IAsyncResult -&gt; System.Net.Sockets.Socket" Usage="socket.EndAccept (buffer, asyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" RefType="out" />
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-1537">
            <see cref="T:System.Byte" /> 型別的陣列，包含已傳輸的位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1537">An array of type <see cref="T:System.Byte" /> that contains the bytes transferred.</span>
          </span>
        </param>
        <param name="asyncResult">
          <span data-ttu-id="3831b-1538">
            <see cref="T:System.IAsyncResult" /> 物件，儲存這個非同步作業的狀態資訊以及任何使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1538">An <see cref="T:System.IAsyncResult" /> object that stores state information for this asynchronous operation as well as any user defined data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1539">以非同步方式接受連入連線嘗試，並建立新的 <see cref="T:System.Net.Sockets.Socket" /> 物件，以處理遠端主機通訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1539">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> object to handle remote host communication.</span>
          </span>
          <span data-ttu-id="3831b-1540">這個方法會傳回包含已傳輸之初始資料的緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1540">This method returns a buffer that contains the initial data transferred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1541">
            <see cref="T:System.Net.Sockets.Socket" /> 物件，可處理與遠端主機的通訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1541">A <see cref="T:System.Net.Sockets.Socket" /> object to handle communication with the remote host.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1542"><xref:System.Net.Sockets.Socket.EndAccept%2A> 完成呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1542"><xref:System.Net.Sockets.Socket.EndAccept%2A> completes a call to <xref:System.Net.Sockets.Socket.BeginAccept%2A>.</span></span> <span data-ttu-id="3831b-1543">然後再呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>，您必須建立會叫用的回呼方法<xref:System.AsyncCallback>委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-1543">Before calling <xref:System.Net.Sockets.Socket.BeginAccept%2A>, you need to create a callback method that is invoked by the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="3831b-1544">此回呼方法會在個別的執行緒中執行和之後系統便會呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法會傳回。</span><span class="sxs-lookup"><span data-stu-id="3831b-1544">This callback method executes in a separate thread, and is called by the system after the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method returns.</span></span>  
  
 <span data-ttu-id="3831b-1545">在回呼方法中，呼叫<xref:System.IAsyncResult.AsyncState%2A>方法`asyncResult`參數來取得<xref:System.Net.Sockets.Socket>上它正在嘗試連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1545">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the `asyncResult` parameter to obtain the <xref:System.Net.Sockets.Socket> on which the connection attempt is being made.</span></span> <span data-ttu-id="3831b-1546">取得之後<xref:System.Net.Sockets.Socket>，您可以呼叫<xref:System.Net.Sockets.Socket.EndAccept%2A>方法成功完成連線嘗試。</span><span class="sxs-lookup"><span data-stu-id="3831b-1546">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndAccept%2A> method to successfully complete the connection attempt.</span></span> <span data-ttu-id="3831b-1547">`buffer`的這個多載的參數包含收到的呼叫中的資料<xref:System.Net.Sockets.Socket.BeginAccept%2A>而`bytesTransferred`參數會包含已在呼叫中傳送的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-1547">The `buffer` parameter of this overload contains the data that was received in the call to <xref:System.Net.Sockets.Socket.BeginAccept%2A> and the `bytesTransferred` parameter contains the number of bytes that were transferred in the call.</span></span>  
  
 <span data-ttu-id="3831b-1548"><xref:System.Net.Sockets.Socket.EndAccept%2A>方法會封鎖直到暫止的連接，就連入連線佇列中。</span><span class="sxs-lookup"><span data-stu-id="3831b-1548">The <xref:System.Net.Sockets.Socket.EndAccept%2A> method blocks until a connection is pending in the incoming connection queue.</span></span> <span data-ttu-id="3831b-1549"><xref:System.Net.Sockets.Socket.EndAccept%2A>方法會接受連入連線，並傳回新<xref:System.Net.Sockets.Socket>，可用來傳送和接收來自遠端主機的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1549">The <xref:System.Net.Sockets.Socket.EndAccept%2A> method accepts the incoming connection and returns a new <xref:System.Net.Sockets.Socket> that can be used to send data to and receive data from the remote host.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1550">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1550">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1551">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1551">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1552">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1552">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1553">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1553">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1554">下列程式碼範例使用<xref:System.Net.Sockets.Socket.BeginAccept%2A>來建立並連接通訊端，並接受初始的 10 個位元組的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1554">The following code example uses <xref:System.Net.Sockets.Socket.BeginAccept%2A> to create and connect a socket and accept the initial 10 bytes of data.</span></span> <span data-ttu-id="3831b-1555">回呼委派呼叫<xref:System.Net.Sockets.Socket.EndAccept%2A>結束非同步要求。</span><span class="sxs-lookup"><span data-stu-id="3831b-1555">The callback delegate calls <xref:System.Net.Sockets.Socket.EndAccept%2A> to end the asynchronous request.</span></span> <span data-ttu-id="3831b-1556">已傳送的位元組數目和資料會傳回`buffer`和`bytesTransferred`參數，這個方法會顯示在主控台上。</span><span class="sxs-lookup"><span data-stu-id="3831b-1556">The number of bytes transmitted and the data are returned in the `buffer` and `bytesTransferred` parameters of this method and are displayed on the console.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#6)]
 [!code-csharp[NCLSocketEnhancements#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-1557">這個方法需要 Windows NT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1557">Windows NT is required for this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1558">
            <see cref="T:System.Net.Sockets.Socket" />物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1558">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1559">
            <paramref name="asyncResult" /> 是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1559">
              <paramref name="asyncResult" /> is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1560">
            <paramref name="asyncResult" /> 不是由呼叫 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> 的方式所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1560">
              <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1561">先前已呼叫 <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1561">
              <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> method was previously called.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1562">嘗試存取 <see cref="T:System.Net.Sockets.Socket" /> 時發生錯誤</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1562">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" /></span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndAccept">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAccept (IAsyncResult asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAccept(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAccept (asyncResult As IAsyncResult) As Socket" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAccept(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAccept (IAsyncResult result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAccept(class System.IAsyncResult result) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAccept (result As IAsyncResult) As Socket" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAccept(IAsyncResult ^ result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndAccept : IAsyncResult -&gt; System.Net.Sockets.Socket" Usage="socket.EndAccept result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="3831b-1563">
            <see cref="T:System.IAsyncResult" />，儲存這個非同步作業的狀態資訊以及任何使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1563">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation as well as any user defined data.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="3831b-1564">
            <see cref="T:System.IAsyncResult" />，儲存這個非同步作業的狀態資訊以及任何使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1564">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation as well as any user defined data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1565">以非同步方式接受連入的連接嘗試，並建立新的 <see cref="T:System.Net.Sockets.Socket" /> 來處理遠端主機通訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1565">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> to handle remote host communication.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1566">
            <see cref="T:System.Net.Sockets.Socket" />，將處理與遠端主機的通訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1566">A <see cref="T:System.Net.Sockets.Socket" /> to handle communication with the remote host.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1567"><xref:System.Net.Sockets.Socket.EndAccept%2A> 完成呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1567"><xref:System.Net.Sockets.Socket.EndAccept%2A> completes a call to <xref:System.Net.Sockets.Socket.BeginAccept%2A>.</span></span> <span data-ttu-id="3831b-1568">然後再呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>，您必須建立實作的回呼方法<xref:System.AsyncCallback>委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-1568">Before calling <xref:System.Net.Sockets.Socket.BeginAccept%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="3831b-1569">此回呼方法會在個別的執行緒中執行和之後系統便會呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法會傳回。</span><span class="sxs-lookup"><span data-stu-id="3831b-1569">This callback method executes in a separate thread, and is called by the system after the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method returns.</span></span> <span data-ttu-id="3831b-1570">它必須接受`asyncResult`參數傳回<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1570">It must accept the `asyncResult` parameter returned from the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-1571">在回呼方法中，呼叫<xref:System.IAsyncResult.AsyncState%2A>方法`asyncResult`參數來取得<xref:System.Net.Sockets.Socket>上它正在嘗試連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1571">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the `asyncResult` parameter to obtain the <xref:System.Net.Sockets.Socket> on which the connection attempt is being made.</span></span> <span data-ttu-id="3831b-1572">取得之後<xref:System.Net.Sockets.Socket>，您可以呼叫<xref:System.Net.Sockets.Socket.EndAccept%2A>方法成功完成連線嘗試。</span><span class="sxs-lookup"><span data-stu-id="3831b-1572">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndAccept%2A> method to successfully complete the connection attempt.</span></span>  
  
 <span data-ttu-id="3831b-1573"><xref:System.Net.Sockets.Socket.EndAccept%2A>方法會封鎖直到暫止的連接，就連入連線佇列中。</span><span class="sxs-lookup"><span data-stu-id="3831b-1573">The <xref:System.Net.Sockets.Socket.EndAccept%2A> method blocks until a connection is pending in the incoming connection queue.</span></span> <span data-ttu-id="3831b-1574"><xref:System.Net.Sockets.Socket.EndAccept%2A>方法會接受連入連線，並傳回新<xref:System.Net.Sockets.Socket>，可用來傳送和接收來自遠端主機的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1574">The <xref:System.Net.Sockets.Socket.EndAccept%2A> method accepts the incoming connection and returns a new <xref:System.Net.Sockets.Socket> that can be used to send data to and receive data from the remote host.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1575">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1575">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1576">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1576">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1577">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1577">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1578">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1578">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1579">下列程式碼範例會結束的非同步要求，並建立新<xref:System.Net.Sockets.Socket>接受連入連線要求。</span><span class="sxs-lookup"><span data-stu-id="3831b-1579">The following code example ends an asynchronous request and creates a new <xref:System.Net.Sockets.Socket> to accept an incoming connection request.</span></span> <span data-ttu-id="3831b-1580">如需示範如何使用通訊端的非同步通訊的完整範例，請參閱 <<c0> [ 通訊端程式碼範例](~/docs/framework/network-programming/socket-code-examples.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1580">For a complete example that demonstrates asynchronous communications with sockets, see [Socket Code Examples](~/docs/framework/network-programming/socket-code-examples.md).</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#7)]
 [!code-csharp[Socket_Async_Send_Receive#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#7)]
 [!code-vb[Socket_Async_Send_Receive#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1581">
            <paramref name="asyncResult" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1581">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1582">
            <paramref name="asyncResult" /> 不是由呼叫 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> 的方式所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1582">
              <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1583">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1583">An error occurred when attempting to access the socket.</span>
          </span>
          <span data-ttu-id="3831b-1584">如需詳細資訊，請參閱＜備註＞一節。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1584">See the Remarks section for more information.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1585">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1585">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1586">先前已呼叫 <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1586">
              <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> method was previously called.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-1587">這個方法需要 Windows NT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1587">Windows NT is required for this method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="P:System.IAsyncResult.AsyncState" />
      </Docs>
    </Member>
    <Member MemberName="EndAccept">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAccept (out byte[] buffer, out int bytesTransferred, IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAccept([out] unsigned int8[]&amp; buffer, [out] int32&amp; bytesTransferred, class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.Int32@,System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAccept (ByRef buffer As Byte(), ByRef bytesTransferred As Integer, asyncResult As IAsyncResult) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAccept([Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % buffer, [Runtime::InteropServices::Out] int % bytesTransferred, IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAccept :  *  * IAsyncResult -&gt; System.Net.Sockets.Socket" Usage="socket.EndAccept (buffer, bytesTransferred, asyncResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" RefType="out" />
        <Parameter Name="bytesTransferred" Type="System.Int32" RefType="out" />
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-1588">
            <see cref="T:System.Byte" /> 型別的陣列，包含已傳輸的位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1588">An array of type <see cref="T:System.Byte" /> that contains the bytes transferred.</span>
          </span>
        </param>
        <param name="bytesTransferred">
          <span data-ttu-id="3831b-1589">已傳輸的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1589">The number of bytes transferred.</span>
          </span>
        </param>
        <param name="asyncResult">
          <span data-ttu-id="3831b-1590">
            <see cref="T:System.IAsyncResult" /> 物件，儲存這個非同步作業的狀態資訊以及任何使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1590">An <see cref="T:System.IAsyncResult" /> object that stores state information for this asynchronous operation as well as any user defined data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1591">以非同步方式接受連入連線嘗試，並建立新的 <see cref="T:System.Net.Sockets.Socket" /> 物件，以處理遠端主機通訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1591">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> object to handle remote host communication.</span>
          </span>
          <span data-ttu-id="3831b-1592">這個方法會傳回包含已傳輸之初始資料和位元組數的緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1592">This method returns a buffer that contains the initial data and the number of bytes transferred.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1593">
            <see cref="T:System.Net.Sockets.Socket" /> 物件，可處理與遠端主機的通訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1593">A <see cref="T:System.Net.Sockets.Socket" /> object to handle communication with the remote host.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1594"><xref:System.Net.Sockets.Socket.EndAccept%2A> 完成呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1594"><xref:System.Net.Sockets.Socket.EndAccept%2A> completes a call to <xref:System.Net.Sockets.Socket.BeginAccept%2A>.</span></span> <span data-ttu-id="3831b-1595">然後再呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>，您必須建立會叫用的回呼方法<xref:System.AsyncCallback>委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-1595">Before calling <xref:System.Net.Sockets.Socket.BeginAccept%2A>, you need to create a callback method that is invoked by the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="3831b-1596">此回呼方法會在個別的執行緒中執行和之後系統便會呼叫<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法會傳回。</span><span class="sxs-lookup"><span data-stu-id="3831b-1596">This callback method executes in a separate thread, and is called by the system after the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method returns.</span></span> <span data-ttu-id="3831b-1597">它必須接受`asyncResult`參數傳回<xref:System.Net.Sockets.Socket.BeginAccept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1597">It must accept the `asyncResult` parameter returned from the <xref:System.Net.Sockets.Socket.BeginAccept%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-1598">在回呼方法中，呼叫<xref:System.IAsyncResult.AsyncState%2A>方法`asyncResult`參數來取得<xref:System.Net.Sockets.Socket>上它正在嘗試連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1598">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the `asyncResult` parameter to obtain the <xref:System.Net.Sockets.Socket> on which the connection attempt is being made.</span></span> <span data-ttu-id="3831b-1599">取得之後<xref:System.Net.Sockets.Socket>，您可以呼叫<xref:System.Net.Sockets.Socket.EndAccept%2A>方法成功完成連線嘗試。</span><span class="sxs-lookup"><span data-stu-id="3831b-1599">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndAccept%2A> method to successfully complete the connection attempt.</span></span> <span data-ttu-id="3831b-1600">`buffer`的這個多載的參數包含收到的呼叫中的資料<xref:System.Net.Sockets.Socket.BeginAccept%2A>而`bytesTransferred`參數會包含已在呼叫中傳送的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-1600">The `buffer` parameter of this overload contains the data that was received in the call to <xref:System.Net.Sockets.Socket.BeginAccept%2A> and the `bytesTransferred` parameter contains the number of bytes that were transferred in the call.</span></span>  
  
 <span data-ttu-id="3831b-1601"><xref:System.Net.Sockets.Socket.EndAccept%2A>方法會封鎖直到暫止的連接，就連入連線佇列中。</span><span class="sxs-lookup"><span data-stu-id="3831b-1601">The <xref:System.Net.Sockets.Socket.EndAccept%2A> method blocks until a connection is pending in the incoming connection queue.</span></span> <span data-ttu-id="3831b-1602"><xref:System.Net.Sockets.Socket.EndAccept%2A>方法會接受連入連線，並傳回新<xref:System.Net.Sockets.Socket>，可用來傳送和接收來自遠端主機的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1602">The <xref:System.Net.Sockets.Socket.EndAccept%2A> method accepts the incoming connection and returns a new <xref:System.Net.Sockets.Socket> that can be used to send data to and receive data from the remote host.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1603">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1603">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1604">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1604">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1605">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1605">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1606">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1606">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1607">下列程式碼範例使用<xref:System.Net.Sockets.Socket.BeginAccept%2A>來建立並連接通訊端，並接受初始的 10 個位元組的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1607">The following code example uses <xref:System.Net.Sockets.Socket.BeginAccept%2A> to create and connect a socket and accept the initial 10 bytes of data.</span></span> <span data-ttu-id="3831b-1608">回呼委派呼叫<xref:System.Net.Sockets.Socket.EndAccept%2A>結束非同步要求。</span><span class="sxs-lookup"><span data-stu-id="3831b-1608">The callback delegate calls <xref:System.Net.Sockets.Socket.EndAccept%2A> to end the asynchronous request.</span></span> <span data-ttu-id="3831b-1609">已傳送的位元組數目和資料會傳回`buffer`和`bytesTransferred`參數，這個方法會顯示在主控台上。</span><span class="sxs-lookup"><span data-stu-id="3831b-1609">The number of bytes transmitted and the data are returned in the `buffer` and `bytesTransferred` parameters of this method and are displayed on the console.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#6)]
 [!code-csharp[NCLSocketEnhancements#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-1610">這個方法需要 Windows NT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1610">Windows NT is required for this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1611">
            <see cref="T:System.Net.Sockets.Socket" />物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1611">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1612">
            <paramref name="asyncResult" /> 是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1612">
              <paramref name="asyncResult" /> is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1613">
            <paramref name="asyncResult" /> 不是由呼叫 <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" /> 的方式所建立。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1613">
              <paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1614">先前已呼叫 <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1614">
              <see cref="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)" /> method was previously called.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1615">嘗試存取 <see cref="T:System.Net.Sockets.Socket" /> 時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1615">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult result) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (result As IAsyncResult)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndConnect : IAsyncResult -&gt; unit" Usage="socket.EndConnect result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="3831b-1616">
            <see cref="T:System.IAsyncResult" />，存放此非同步作業 (Asynchronous Operation) 的狀態資訊和任何使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1616">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="3831b-1617">
            <see cref="T:System.IAsyncResult" />，存放此非同步作業 (Asynchronous Operation) 的狀態資訊和任何使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1617">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1618">結束擱置的非同步連接要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1618">Ends a pending asynchronous connection request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1619"><xref:System.Net.Sockets.Socket.EndConnect%2A> 完成非同步的遠端主機連線要求的封鎖方法以啟動<xref:System.Net.Sockets.Socket.BeginConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1619"><xref:System.Net.Sockets.Socket.EndConnect%2A> is a blocking method that completes the asynchronous remote host connection request started in the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-1620">然後再呼叫<xref:System.Net.Sockets.Socket.BeginConnect%2A>，您必須建立實作的回呼方法<xref:System.AsyncCallback>委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-1620">Before calling <xref:System.Net.Sockets.Socket.BeginConnect%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="3831b-1621">這個回呼方法會在個別的執行緒中執行之後, 系統便會呼叫<xref:System.Net.Sockets.Socket.BeginConnect%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="3831b-1621">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginConnect%2A> returns.</span></span> <span data-ttu-id="3831b-1622">回呼方法必須接受<xref:System.IAsyncResult>所傳回<xref:System.Net.Sockets.Socket.BeginConnect%2A>做為參數的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1622">The callback method must accept the <xref:System.IAsyncResult> returned by the <xref:System.Net.Sockets.Socket.BeginConnect%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="3831b-1623">在回呼方法中，呼叫<xref:System.IAsyncResult.AsyncState%2A>方法<xref:System.IAsyncResult>參數來取得<xref:System.Net.Sockets.Socket>上它正在嘗試連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-1623">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> parameter to obtain the <xref:System.Net.Sockets.Socket> on which the connection attempt is being made.</span></span> <span data-ttu-id="3831b-1624">取得之後<xref:System.Net.Sockets.Socket>，您可以呼叫<xref:System.Net.Sockets.Socket.EndConnect%2A>方法成功完成連線嘗試。</span><span class="sxs-lookup"><span data-stu-id="3831b-1624">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndConnect%2A> method to successfully complete the connection attempt.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1625">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1625">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1626">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1626">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1627">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1627">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1628">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1628">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1629">下列程式碼範例會結束非同步的連線嘗試。</span><span class="sxs-lookup"><span data-stu-id="3831b-1629">The following code example ends the asynchronous connection attempt.</span></span> <span data-ttu-id="3831b-1630">如需示範如何使用通訊端的非同步通訊的完整範例，請參閱 <<c0> [ 通訊端程式碼範例](~/docs/framework/network-programming/socket-code-examples.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1630">For a complete example that demonstrates asynchronous communications with sockets, see [Socket Code Examples](~/docs/framework/network-programming/socket-code-examples.md).</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#5)]
 [!code-csharp[Socket_Async_Send_Receive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#5)]
 [!code-vb[Socket_Async_Send_Receive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1631">
            <paramref name="asyncResult" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1631">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1632">
            <paramref name="asyncResult" /> 不會經由對 <see cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" /> 方法的呼叫傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1632">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1633">
            <see cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" /> 是先前用來呼叫非同步連接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1633">
              <see cref="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)" /> was previously called for the asynchronous connection.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1634">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1634">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1635">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1635">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="P:System.IAsyncResult.AsyncState" />
      </Docs>
    </Member>
    <Member MemberName="EndDisconnect">
      <MemberSignature Language="C#" Value="public void EndDisconnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndDisconnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisconnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisconnect(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndDisconnect : IAsyncResult -&gt; unit" Usage="socket.EndDisconnect asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="3831b-1636">
            <see cref="T:System.IAsyncResult" /> 物件，儲存這個非同步作業的狀態資訊以及任何使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1636">An <see cref="T:System.IAsyncResult" /> object that stores state information and any user-defined data for this asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1637">結束暫止非同步中斷連接要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1637">Ends a pending asynchronous disconnect request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1638"><xref:System.Net.Sockets.Socket.EndDisconnect%2A> 完成呼叫<xref:System.Net.Sockets.Socket.BeginDisconnect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1638"><xref:System.Net.Sockets.Socket.EndDisconnect%2A> completes a call to <xref:System.Net.Sockets.Socket.BeginDisconnect%2A>.</span></span> <span data-ttu-id="3831b-1639"><xref:System.Net.Sockets.Socket.EndDisconnect%2A>方法會封鎖直到完成中斷連線為止。</span><span class="sxs-lookup"><span data-stu-id="3831b-1639">The <xref:System.Net.Sockets.Socket.EndDisconnect%2A> method blocks until the disconnect completes.</span></span> <span data-ttu-id="3831b-1640">如需非同步作業的資訊，請參閱 MSDN library 中的非同步程式設計的概觀主題。</span><span class="sxs-lookup"><span data-stu-id="3831b-1640">For information about asynchronous operations, see the Asynchronous Programming Overview topic in the MSDN library.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1641">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1641">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1642">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1642">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1643">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1643">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1644">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1644">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1645">下列程式碼範例會建立非同步通訊的通訊端，並將部分資料傳送至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-1645">The following code example creates a socket for asynchronous communication and sends some data to a remote host.</span></span> <span data-ttu-id="3831b-1646">當資料已傳送時，<xref:System.Net.Sockets.Socket.Shutdown%2A>稱為停止傳送及接收活動。</span><span class="sxs-lookup"><span data-stu-id="3831b-1646">When the data has been sent, <xref:System.Net.Sockets.Socket.Shutdown%2A> is called to stop the send and receive activity.</span></span> <span data-ttu-id="3831b-1647">然後<xref:System.Net.Sockets.Socket.BeginDisconnect%2A>呼叫以開始中斷連接要求。</span><span class="sxs-lookup"><span data-stu-id="3831b-1647">Then <xref:System.Net.Sockets.Socket.BeginDisconnect%2A> is called to begin a disconnect request.</span></span> <span data-ttu-id="3831b-1648">回呼委派呼叫<xref:System.Net.Sockets.Socket.EndDisconnect%2A>結束非同步要求。</span><span class="sxs-lookup"><span data-stu-id="3831b-1648">The callback delegate calls <xref:System.Net.Sockets.Socket.EndDisconnect%2A> to end the asynchronous request.</span></span> <span data-ttu-id="3831b-1649">要求完成時，<xref:System.Net.Sockets.Socket.Connected%2A>屬性查詢來測試是否已中斷連線的通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-1649">When the request completes, the <xref:System.Net.Sockets.Socket.Connected%2A> property is queried to test whether the socket is disconnected.</span></span>  
  
 [!code-cpp[Nclsocketenhancements#11](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#11)]
 [!code-csharp[Nclsocketenhancements#11](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-1650">作業系統是 Windows 2000 (含) 以前版本，但這個方法需要的是 Windows XP。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1650">The operating system is Windows 2000 or earlier, and this method requires Windows XP.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1651">
            <see cref="T:System.Net.Sockets.Socket" />物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1651">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1652">
            <paramref name="asyncResult" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1652">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1653">
            <paramref name="asyncResult" /> 不會經由對 <see cref="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" /> 方法的呼叫傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1653">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1654">
            <see cref="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" /> 是先前用來呼叫非同步連接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1654">
              <see cref="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)" /> was previously called for the asynchronous connection.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1655">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1655">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.WebException">
          <span data-ttu-id="3831b-1656">中斷連接要求已逾時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1656">The disconnect request has timed out.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EndReceive">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1657">結束擱置的非同步讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1657">Ends a pending asynchronous read.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public int EndReceive (IAsyncResult asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceive(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult) As Integer" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceive(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public int EndReceive (IAsyncResult result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceive(class System.IAsyncResult result) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (result As IAsyncResult) As Integer" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceive(IAsyncResult ^ result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndReceive : IAsyncResult -&gt; int" Usage="socket.EndReceive result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="3831b-1658">
            <see cref="T:System.IAsyncResult" />，存放此非同步作業 (Asynchronous Operation) 的狀態資訊和任何使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1658">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="3831b-1659">
            <see cref="T:System.IAsyncResult" />，存放此非同步作業 (Asynchronous Operation) 的狀態資訊和任何使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1659">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1660">結束擱置的非同步讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1660">Ends a pending asynchronous read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1661">收到的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1661">The number of bytes received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1662"><xref:System.Net.Sockets.Socket.EndReceive%2A>方法完成非同步的讀取的作業，以啟動<xref:System.Net.Sockets.Socket.BeginReceive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1662">The <xref:System.Net.Sockets.Socket.EndReceive%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-1663">然後再呼叫<xref:System.Net.Sockets.Socket.BeginReceive%2A>，您必須建立實作的回呼方法<xref:System.AsyncCallback>委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-1663">Before calling <xref:System.Net.Sockets.Socket.BeginReceive%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="3831b-1664">這個回呼方法會在個別的執行緒中執行之後, 系統便會呼叫<xref:System.Net.Sockets.Socket.BeginReceive%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="3831b-1664">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginReceive%2A> returns.</span></span> <span data-ttu-id="3831b-1665">回呼方法必須接受<xref:System.IAsyncResult>所傳回<xref:System.Net.Sockets.Socket.BeginReceive%2A>做為參數的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1665">The callback method must accept the <xref:System.IAsyncResult> returned by the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="3831b-1666">在回呼方法中，呼叫<xref:System.IAsyncResult.AsyncState%2A>方法<xref:System.IAsyncResult>取得狀態物件傳遞至<xref:System.Net.Sockets.Socket.BeginReceive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1666">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method.</span></span> <span data-ttu-id="3831b-1667">擷取接收<xref:System.Net.Sockets.Socket>從這個狀態物件。</span><span class="sxs-lookup"><span data-stu-id="3831b-1667">Extract the receiving <xref:System.Net.Sockets.Socket> from this state object.</span></span> <span data-ttu-id="3831b-1668">取得之後<xref:System.Net.Sockets.Socket>，您可以呼叫<xref:System.Net.Sockets.Socket.EndReceive%2A>方法成功完成讀取的作業，並傳回讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-1668">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndReceive%2A> method to successfully complete the read operation and return the number of bytes read.</span></span>  
  
 <span data-ttu-id="3831b-1669"><xref:System.Net.Sockets.Socket.EndReceive%2A>方法將會封鎖直到資料可供使用。</span><span class="sxs-lookup"><span data-stu-id="3831b-1669">The <xref:System.Net.Sockets.Socket.EndReceive%2A> method will block until data is available.</span></span> <span data-ttu-id="3831b-1670">如果您使用無連接的通訊協定，<xref:System.Net.Sockets.Socket.EndReceive%2A>會讀取連入的網路緩衝區中有可用的第一個加入佇列的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-1670">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.EndReceive%2A> will read the first enqueued datagram available in the incoming network buffer.</span></span> <span data-ttu-id="3831b-1671">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.EndReceive%2A>方法會讀取位於不超過您指定的位元組數目的資料量`size`參數<xref:System.Net.Sockets.Socket.BeginReceive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1671">If you are using a connection-oriented protocol, the <xref:System.Net.Sockets.Socket.EndReceive%2A> method will read as much data as is available up to the number of bytes you specified in the `size` parameter of the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method.</span></span> <span data-ttu-id="3831b-1672">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>與連接<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以及所有可用的資料已收到，<xref:System.Net.Sockets.Socket.EndReceive%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-1672">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.EndReceive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="3831b-1673">若要取得已接收的資料，請呼叫<xref:System.IAsyncResult.AsyncState%2A>方法的<xref:System.IAsyncResult>，並將解壓縮所產生的狀態物件中所含的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3831b-1673">To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult>, and extract the buffer contained in the resulting state object.</span></span>  
  
 <span data-ttu-id="3831b-1674">若要取消暫止<xref:System.Net.Sockets.Socket.BeginReceive%2A>，呼叫<xref:System.Net.Sockets.Socket.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1674">To cancel a pending <xref:System.Net.Sockets.Socket.BeginReceive%2A>, call the <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1675">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1675">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1676">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1676">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1677">該執行緒結束時，會取消指定的執行緒所起始的所有 I/O。</span><span class="sxs-lookup"><span data-stu-id="3831b-1677">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="3831b-1678">如果執行緒結束的作業完成之前，暫止的非同步作業可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="3831b-1678">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1679">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1679">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1680">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1680">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1681">下列程式碼範例會結束暫止的非同步讀取。</span><span class="sxs-lookup"><span data-stu-id="3831b-1681">The following code example ends a pending asynchronous read.</span></span> <span data-ttu-id="3831b-1682">如需示範如何使用通訊端的非同步通訊的完整範例，請參閱 <<c0> [ 通訊端程式碼範例](~/docs/framework/network-programming/socket-code-examples.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1682">For a complete example that demonstrates asynchronous communications with sockets, see [Socket Code Examples](~/docs/framework/network-programming/socket-code-examples.md).</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#8)]
 [!code-csharp[Socket_Async_Send_Receive#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#8)]
 [!code-vb[Socket_Async_Send_Receive#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1683">
            <paramref name="asyncResult" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1683">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1684">
            <paramref name="asyncResult" /> 不會經由對 <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 方法的呼叫傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1684">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1685">先前已針對非同步讀取呼叫 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1685">
              <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1686">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1686">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1687">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1687">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="P:System.IAsyncResult.AsyncState" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public int EndReceive (IAsyncResult asyncResult, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceive(class System.IAsyncResult asyncResult, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult, ByRef errorCode As SocketError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceive(IAsyncResult ^ asyncResult, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.EndReceive : IAsyncResult *  -&gt; int" Usage="socket.EndReceive (asyncResult, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="3831b-1688">
            <see cref="T:System.IAsyncResult" />，存放此非同步作業 (Asynchronous Operation) 的狀態資訊和任何使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1688">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span>
          </span>
        </param>
        <param name="errorCode">
          <span data-ttu-id="3831b-1689">
            <see cref="T:System.Net.Sockets.SocketError" /> 物件，儲存通訊端錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1689">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1690">結束擱置的非同步讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1690">Ends a pending asynchronous read.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1691">收到的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1691">The number of bytes received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1692"><xref:System.Net.Sockets.Socket.EndReceive%2A>方法完成非同步的讀取的作業，以啟動<xref:System.Net.Sockets.Socket.BeginReceive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1692">The <xref:System.Net.Sockets.Socket.EndReceive%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-1693">然後再呼叫<xref:System.Net.Sockets.Socket.BeginReceive%2A>，您必須建立實作的回呼方法<xref:System.AsyncCallback>委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-1693">Before calling <xref:System.Net.Sockets.Socket.BeginReceive%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="3831b-1694">這個回呼方法會在個別的執行緒中執行之後, 系統便會呼叫<xref:System.Net.Sockets.Socket.BeginReceive%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="3831b-1694">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginReceive%2A> returns.</span></span> <span data-ttu-id="3831b-1695">回呼方法必須接受<xref:System.IAsyncResult>所傳回<xref:System.Net.Sockets.Socket.BeginReceive%2A>做為參數的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1695">The callback method must accept the <xref:System.IAsyncResult> returned by the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="3831b-1696">在回呼方法中，呼叫<xref:System.IAsyncResult.AsyncState%2A>方法<xref:System.IAsyncResult>取得狀態物件傳遞至<xref:System.Net.Sockets.Socket.BeginReceive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1696">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method.</span></span> <span data-ttu-id="3831b-1697">擷取接收<xref:System.Net.Sockets.Socket>從這個狀態物件。</span><span class="sxs-lookup"><span data-stu-id="3831b-1697">Extract the receiving <xref:System.Net.Sockets.Socket> from this state object.</span></span> <span data-ttu-id="3831b-1698">取得之後<xref:System.Net.Sockets.Socket>，您可以呼叫<xref:System.Net.Sockets.Socket.EndReceive%2A>方法成功完成讀取的作業，並傳回讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-1698">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndReceive%2A> method to successfully complete the read operation and return the number of bytes read.</span></span>  
  
 <span data-ttu-id="3831b-1699"><xref:System.Net.Sockets.Socket.EndReceive%2A>方法將會封鎖直到資料可供使用。</span><span class="sxs-lookup"><span data-stu-id="3831b-1699">The <xref:System.Net.Sockets.Socket.EndReceive%2A> method will block until data is available.</span></span> <span data-ttu-id="3831b-1700">如果您使用無連接的通訊協定，<xref:System.Net.Sockets.Socket.EndReceive%2A>會讀取連入的網路緩衝區中有可用的第一個加入佇列的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-1700">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.EndReceive%2A> will read the first enqueued datagram available in the incoming network buffer.</span></span> <span data-ttu-id="3831b-1701">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.EndReceive%2A>方法會讀取位於不超過您指定的位元組數目的資料量`size`參數<xref:System.Net.Sockets.Socket.BeginReceive%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1701">If you are using a connection-oriented protocol, the <xref:System.Net.Sockets.Socket.EndReceive%2A> method will read as much data as is available up to the number of bytes you specified in the `size` parameter of the <xref:System.Net.Sockets.Socket.BeginReceive%2A> method.</span></span> <span data-ttu-id="3831b-1702">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>與連接<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以及所有可用的資料已收到，<xref:System.Net.Sockets.Socket.EndReceive%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-1702">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.EndReceive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="3831b-1703">若要取得已接收的資料，請呼叫<xref:System.IAsyncResult.AsyncState%2A>方法的<xref:System.IAsyncResult>，並將解壓縮所產生的狀態物件中所含的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3831b-1703">To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult>, and extract the buffer contained in the resulting state object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1704">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1704">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1705">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1705">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1706">該執行緒結束時，會取消指定的執行緒所起始的所有 I/O。</span><span class="sxs-lookup"><span data-stu-id="3831b-1706">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="3831b-1707">如果執行緒結束的作業完成之前，暫止的非同步作業可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="3831b-1707">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1708">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1708">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1709">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1709">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1710">
            <paramref name="asyncResult" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1710">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1711">
            <paramref name="asyncResult" /> 不會經由對 <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 方法的呼叫傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1711">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1712">先前已針對非同步讀取呼叫 <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1712">
              <see cref="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1713">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1713">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1714">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1714">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="P:System.IAsyncResult.AsyncState" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFrom">
      <MemberSignature Language="C#" Value="public int EndReceiveFrom (IAsyncResult asyncResult, ref System.Net.EndPoint endPoint);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFrom(class System.IAsyncResult asyncResult, class System.Net.EndPoint&amp; endPoint) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFrom (asyncResult As IAsyncResult, ByRef endPoint As EndPoint) As Integer" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFrom(IAsyncResult ^ asyncResult, System::Net::EndPoint ^ % endPoint);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public int EndReceiveFrom (IAsyncResult result, ref System.Net.EndPoint end_point);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFrom(class System.IAsyncResult result, class System.Net.EndPoint&amp; end_point) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFrom (result As IAsyncResult, ByRef end_point As EndPoint) As Integer" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFrom(IAsyncResult ^ result, System::Net::EndPoint ^ % end_point);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFrom : IAsyncResult *  -&gt; int" Usage="socket.EndReceiveFrom (result, end_point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="endPoint" Type="System.Net.EndPoint" RefType="ref" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="end_point" Type="System.Net.EndPoint" RefType="ref" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="3831b-1715">
            <see cref="T:System.IAsyncResult" />，存放此非同步作業 (Asynchronous Operation) 的狀態資訊和任何使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1715">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="3831b-1716">
            <see cref="T:System.IAsyncResult" />，存放此非同步作業 (Asynchronous Operation) 的狀態資訊和任何使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1716">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="3831b-1717">來源 <see cref="T:System.Net.EndPoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1717">The source <see cref="T:System.Net.EndPoint" />.</span>
          </span>
        </param>
        <param name="end_point">
          <span data-ttu-id="3831b-1718">來源 <see cref="T:System.Net.EndPoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1718">The source <see cref="T:System.Net.EndPoint" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1719">從指定的端點結束暫止的非同步讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1719">Ends a pending asynchronous read from a specific endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1720">如果成功，則傳回接收的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1720">If successful, the number of bytes received.</span>
          </span>
          <span data-ttu-id="3831b-1721">如果不成功，則傳回 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1721">If unsuccessful, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1722"><xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>方法完成非同步的讀取的作業，以啟動<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1722">The <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-1723">然後再呼叫<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>，您必須建立實作的回呼方法<xref:System.AsyncCallback>委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-1723">Before calling <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="3831b-1724">這個回呼方法會在個別的執行緒中執行之後, 系統便會呼叫<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="3831b-1724">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> returns.</span></span> <span data-ttu-id="3831b-1725">回呼方法必須接受<xref:System.IAsyncResult>所傳回<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>做為參數的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1725">The callback method must accept the <xref:System.IAsyncResult> returned by the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="3831b-1726">在回呼方法中，呼叫<xref:System.IAsyncResult.AsyncState%2A>方法<xref:System.IAsyncResult>取得狀態物件傳遞至<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1726">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-1727">擷取接收<xref:System.Net.Sockets.Socket>從這個狀態物件。</span><span class="sxs-lookup"><span data-stu-id="3831b-1727">Extract the receiving <xref:System.Net.Sockets.Socket> from this state object.</span></span> <span data-ttu-id="3831b-1728">取得之後<xref:System.Net.Sockets.Socket>，您可以呼叫<xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>方法成功完成讀取的作業，並傳回讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-1728">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> method to successfully complete the read operation and return the number of bytes read.</span></span>  
  
 <span data-ttu-id="3831b-1729"><xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>方法將會封鎖直到資料可供使用。</span><span class="sxs-lookup"><span data-stu-id="3831b-1729">The <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> method will block until data is available.</span></span> <span data-ttu-id="3831b-1730">如果您使用無連接的通訊協定，<xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>會讀取連入的網路緩衝區中有可用的第一個加入佇列的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-1730">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> will read the first enqueued datagram available in the incoming network buffer.</span></span> <span data-ttu-id="3831b-1731">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>方法會讀取位於不超過您指定的位元組數目的資料量`size`參數<xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1731">If you are using a connection-oriented protocol, the <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> method will read as much data as is available up to the number of bytes you specified in the `size` parameter of the <xref:System.Net.Sockets.Socket.BeginReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-1732">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>與連接<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以及所有可用的資料已收到，<xref:System.Net.Sockets.Socket.EndReceiveFrom%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-1732">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.EndReceiveFrom%2A> method will complete immediately and return zero bytes.</span></span> <span data-ttu-id="3831b-1733">若要取得已接收的資料，請呼叫<xref:System.IAsyncResult.AsyncState%2A>方法的<xref:System.IAsyncResult>物件，並將解壓縮所產生的狀態物件中所含的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3831b-1733">To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> object, and extract the buffer contained in the resulting state object.</span></span> <span data-ttu-id="3831b-1734">若要識別原始的主機，擷取<xref:System.Net.EndPoint>將它轉換成<xref:System.Net.IPEndPoint>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1734">To identify the originating host, extract the <xref:System.Net.EndPoint> and cast it to an <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="3831b-1735">使用<xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType>方法，以取得 IP 位址和<xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType>方法，以取得連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1735">Use the <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> method to obtain the IP address and the <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> method to obtain the port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1736">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1736">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1737">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1737">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1738">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1738">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1739">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1739">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1740">下列程式碼範例會結束暫止的非同步讀取從特定<xref:System.Net.EndPoint>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1740">The following code example ends a pending asynchronous read from a specific <xref:System.Net.EndPoint>.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#10)]
 [!code-csharp[Socket_Async_Send_Receive#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#10)]
 [!code-vb[Socket_Async_Send_Receive#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1741">
            <paramref name="asyncResult" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1741">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1742">
            <paramref name="asyncResult" /> 不會經由對 <see cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> 方法的呼叫傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1742">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1743">先前已針對非同步讀取呼叫 <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1743">
              <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1744">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1744">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1745">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1745">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveMessageFrom">
      <MemberSignature Language="C#" Value="public int EndReceiveMessageFrom (IAsyncResult asyncResult, ref System.Net.Sockets.SocketFlags socketFlags, ref System.Net.EndPoint endPoint, out System.Net.Sockets.IPPacketInformation ipPacketInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveMessageFrom(class System.IAsyncResult asyncResult, valuetype System.Net.Sockets.SocketFlags&amp; socketFlags, class System.Net.EndPoint&amp; endPoint, [out] valuetype System.Net.Sockets.IPPacketInformation&amp; ipPacketInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveMessageFrom (asyncResult As IAsyncResult, ByRef socketFlags As SocketFlags, ByRef endPoint As EndPoint, ByRef ipPacketInformation As IPPacketInformation) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveMessageFrom(IAsyncResult ^ asyncResult, System::Net::Sockets::SocketFlags % socketFlags, System::Net::EndPoint ^ % endPoint, [Runtime::InteropServices::Out] System::Net::Sockets::IPPacketInformation % ipPacketInformation);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveMessageFrom : IAsyncResult *  *  *  -&gt; int" Usage="socket.EndReceiveMessageFrom (asyncResult, socketFlags, endPoint, ipPacketInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" RefType="ref" />
        <Parameter Name="endPoint" Type="System.Net.EndPoint" RefType="ref" />
        <Parameter Name="ipPacketInformation" Type="System.Net.Sockets.IPPacketInformation" RefType="out" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="3831b-1746">
            <see cref="T:System.IAsyncResult" />，存放此非同步作業 (Asynchronous Operation) 的狀態資訊和任何使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1746">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-1747">接收封包之 <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1747">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values for the received packet.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="3831b-1748">來源 <see cref="T:System.Net.EndPoint" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1748">The source <see cref="T:System.Net.EndPoint" />.</span>
          </span>
        </param>
        <param name="ipPacketInformation">
          <span data-ttu-id="3831b-1749">接收之封包的 <see cref="T:System.Net.IPAddress" /> 和介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1749">The <see cref="T:System.Net.IPAddress" /> and interface of the received packet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1750">從指定的端點結束暫止的非同步讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1750">Ends a pending asynchronous read from a specific endpoint.</span>
          </span>
          <span data-ttu-id="3831b-1751">這個方法還會比 <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" /> 提供更多的封包資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1751">This method also reveals more information about the packet than <see cref="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1752">如果成功，則傳回接收的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1752">If successful, the number of bytes received.</span>
          </span>
          <span data-ttu-id="3831b-1753">如果不成功，則傳回 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1753">If unsuccessful, returns 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1754">如果作業尚未完成，這個方法會封鎖，直到它執行。</span><span class="sxs-lookup"><span data-stu-id="3831b-1754">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="3831b-1755">若要以同步方式執行這項作業，使用<xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1755">To perform this operation synchronously, use the <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-1756">檢查`ipPacketInformation`如果您需要知道是否資料包所傳送的單點傳播、 多點傳送或廣播位址。</span><span class="sxs-lookup"><span data-stu-id="3831b-1756">Examine `ipPacketInformation` if you need to know if the datagram was sent using a unicast, multicast, or broadcast address.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1757">
            <paramref name="asyncResult" /> 是 <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1757">
              <paramref name="asyncResult" /> is <see langword="null" /></span>
          </span>
          <span data-ttu-id="3831b-1758">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1758">-or-</span>
          </span>
          <span data-ttu-id="3831b-1759">
            <paramref name="endPoint" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1759">
              <paramref name="endPoint" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1760">
            <paramref name="asyncResult" /> 不會經由對 <see cref="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> 方法的呼叫傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1760">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1761">先前已針對非同步讀取呼叫 <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1761">
              <see cref="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1762">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1762">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1763">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1763">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="EndSend">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1764">結束暫止的非同步傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1764">Ends a pending asynchronous send.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (asyncResult As IAsyncResult) As Integer" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult result) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (result As IAsyncResult) As Integer" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndSend : IAsyncResult -&gt; int" Usage="socket.EndSend result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="3831b-1765">
            <see cref="T:System.IAsyncResult" />，存放這個非同步作業的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1765">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="3831b-1766">
            <see cref="T:System.IAsyncResult" />，存放這個非同步作業的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1766">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1767">結束暫止的非同步傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1767">Ends a pending asynchronous send.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1768">如果成功，則將位元組數目傳送至 <see cref="T:System.Net.Sockets.Socket" />，否則，則產生一個無效的 <see cref="T:System.Net.Sockets.Socket" /> 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1768">If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />; otherwise, an invalid <see cref="T:System.Net.Sockets.Socket" /> error.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1769"><xref:System.Net.Sockets.Socket.EndSend%2A> 完成非同步傳送作業中啟動<xref:System.Net.Sockets.Socket.BeginSend%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1769"><xref:System.Net.Sockets.Socket.EndSend%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.Socket.BeginSend%2A>.</span></span>  
  
 <span data-ttu-id="3831b-1770">然後再呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>，您必須建立實作的回呼方法<xref:System.AsyncCallback>委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-1770">Before calling <xref:System.Net.Sockets.Socket.BeginSend%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="3831b-1771">這個回呼方法會在個別的執行緒中執行之後, 系統便會呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="3831b-1771">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginSend%2A> returns.</span></span> <span data-ttu-id="3831b-1772">回呼方法必須接受<xref:System.IAsyncResult>所傳回<xref:System.Net.Sockets.Socket.BeginSend%2A>做為參數的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1772">The callback method must accept the <xref:System.IAsyncResult> returned by the <xref:System.Net.Sockets.Socket.BeginSend%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="3831b-1773">在回呼方法中，呼叫<xref:System.IAsyncResult.AsyncState%2A>方法<xref:System.IAsyncResult>參數，以取得傳送<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1773">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> parameter to obtain the sending <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-1774">取得之後<xref:System.Net.Sockets.Socket>，您可以呼叫<xref:System.Net.Sockets.Socket.EndSend%2A>方法成功完成傳送作業，並傳回傳送的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-1774">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndSend%2A> method to successfully complete the send operation and return the number of bytes sent.</span></span>  
  
 <span data-ttu-id="3831b-1775">如果您使用無連接的通訊協定，<xref:System.Net.Sockets.Socket.EndSend%2A>將會封鎖直到傳送資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-1775">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.EndSend%2A> will block until the datagram is sent.</span></span> <span data-ttu-id="3831b-1776">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.EndSend%2A>將會封鎖直到某些緩衝區已傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-1776">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.EndSend%2A> will block until some of the buffer was sent.</span></span> <span data-ttu-id="3831b-1777">如果傳回的值從<xref:System.Net.Sockets.Socket.EndSend%2A>表示緩衝區未完全傳送時，呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>方法同樣地，修改保留未傳送的資料緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3831b-1777">If the return value from <xref:System.Net.Sockets.Socket.EndSend%2A> indicates that the buffer was not completely sent, call the <xref:System.Net.Sockets.Socket.BeginSend%2A> method again, modifying the buffer to hold the unsent data.</span></span>  
  
 <span data-ttu-id="3831b-1778">則您傳送的資料就會立即出現在網路無法保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-1778">There is no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-1779">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1779">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="3831b-1780">成功完成<xref:System.Net.Sockets.Socket.BeginSend%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-1780">A successful completion of the <xref:System.Net.Sockets.Socket.BeginSend%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1781">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1781">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1782">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1782">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1783">該執行緒結束時，會取消指定的執行緒所起始的所有 I/O。</span><span class="sxs-lookup"><span data-stu-id="3831b-1783">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="3831b-1784">如果執行緒結束的作業完成之前，暫止的非同步作業可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="3831b-1784">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1785">成功完成傳送不表示已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1785">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="3831b-1786">如果沒有緩衝區可用空間來保存資料傳輸的傳輸系統內，則除非通訊端已處於未封鎖模式，將會封鎖傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-1786">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1787">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1787">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1788">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1788">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1789">下列程式碼範例會結束暫止的非同步傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-1789">The following code example ends a pending asynchronous send.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#6](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#6)]
 [!code-csharp[Socket_Async_Send_Receive#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#6)]
 [!code-vb[Socket_Async_Send_Receive#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1790">
            <paramref name="asyncResult" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1790">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1791">
            <paramref name="asyncResult" /> 不會經由對 <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 方法的呼叫傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1791">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1792">先前已針對非同步傳送呼叫 <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1792">
              <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous send.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1793">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1793">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1794">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1794">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="P:System.IAsyncResult.AsyncState" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.NoDelay" />
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult asyncResult, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult asyncResult, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (asyncResult As IAsyncResult, ByRef errorCode As SocketError) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ asyncResult, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.EndSend : IAsyncResult *  -&gt; int" Usage="socket.EndSend (asyncResult, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="3831b-1795">
            <see cref="T:System.IAsyncResult" />，存放這個非同步作業的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1795">An <see cref="T:System.IAsyncResult" /> that stores state information for this asynchronous operation.</span>
          </span>
        </param>
        <param name="errorCode">
          <span data-ttu-id="3831b-1796">
            <see cref="T:System.Net.Sockets.SocketError" /> 物件，儲存通訊端錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1796">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1797">結束暫止的非同步傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1797">Ends a pending asynchronous send.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1798">如果成功，則將位元組數目傳送至 <see cref="T:System.Net.Sockets.Socket" />，否則，則產生一個無效的 <see cref="T:System.Net.Sockets.Socket" /> 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1798">If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />; otherwise, an invalid <see cref="T:System.Net.Sockets.Socket" /> error.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1799"><xref:System.Net.Sockets.Socket.EndSend%2A> 完成非同步傳送作業中啟動<xref:System.Net.Sockets.Socket.BeginSend%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1799"><xref:System.Net.Sockets.Socket.EndSend%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.Socket.BeginSend%2A>.</span></span>  
  
 <span data-ttu-id="3831b-1800">然後再呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>，您必須建立實作的回呼方法<xref:System.AsyncCallback>委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-1800">Before calling <xref:System.Net.Sockets.Socket.BeginSend%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="3831b-1801">這個回呼方法會在個別的執行緒中執行之後, 系統便會呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="3831b-1801">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginSend%2A> returns.</span></span> <span data-ttu-id="3831b-1802">回呼方法必須接受<xref:System.IAsyncResult>所傳回<xref:System.Net.Sockets.Socket.BeginSend%2A>做為參數的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1802">The callback method must accept the <xref:System.IAsyncResult> returned by the <xref:System.Net.Sockets.Socket.BeginSend%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="3831b-1803">在回呼方法中，呼叫<xref:System.IAsyncResult.AsyncState%2A>方法<xref:System.IAsyncResult>參數，以取得傳送<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1803">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> parameter to obtain the sending <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-1804">取得之後<xref:System.Net.Sockets.Socket>，您可以呼叫<xref:System.Net.Sockets.Socket.EndSend%2A>方法成功完成傳送作業，並傳回傳送的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-1804">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndSend%2A> method to successfully complete the send operation and return the number of bytes sent.</span></span>  
  
 <span data-ttu-id="3831b-1805">如果您使用無連接的通訊協定，<xref:System.Net.Sockets.Socket.EndSend%2A>將會封鎖直到傳送資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-1805">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.EndSend%2A> will block until the datagram is sent.</span></span> <span data-ttu-id="3831b-1806">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.EndSend%2A>將會封鎖直到某些緩衝區已傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-1806">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.EndSend%2A> will block until some of the buffer was sent.</span></span> <span data-ttu-id="3831b-1807">如果傳回的值從<xref:System.Net.Sockets.Socket.EndSend%2A>表示緩衝區未完全傳送時，呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>方法同樣地，修改保留未傳送的資料緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3831b-1807">If the return value from <xref:System.Net.Sockets.Socket.EndSend%2A> indicates that the buffer was not completely sent, call the <xref:System.Net.Sockets.Socket.BeginSend%2A> method again, modifying the buffer to hold the unsent data.</span></span>  
  
 <span data-ttu-id="3831b-1808">則您傳送的資料就會立即出現在網路無法保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-1808">There is no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-1809">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1809">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="3831b-1810">成功完成<xref:System.Net.Sockets.Socket.BeginSend%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-1810">A successful completion of the <xref:System.Net.Sockets.Socket.BeginSend%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1811">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1811">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1812">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1812">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1813">該執行緒結束時，會取消指定的執行緒所起始的所有 I/O。</span><span class="sxs-lookup"><span data-stu-id="3831b-1813">All I/O initiated by a given thread is canceled when that thread exits.</span></span> <span data-ttu-id="3831b-1814">如果執行緒結束的作業完成之前，暫止的非同步作業可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="3831b-1814">A pending asynchronous operation can fail if the thread exits before the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1815">成功完成傳送不表示已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1815">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="3831b-1816">如果沒有緩衝區可用空間來保存資料傳輸的傳輸系統內，則除非通訊端已處於未封鎖模式，將會封鎖傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-1816">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1817">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1817">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1818">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1818">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1819">
            <paramref name="asyncResult" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1819">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1820">
            <paramref name="asyncResult" /> 不會經由對 <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> 方法的呼叫傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1820">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1821">先前已針對非同步傳送呼叫 <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1821">
              <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous send.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1822">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1822">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1823">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1823">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />
        <altmember cref="T:System.AsyncCallback" />
        <altmember cref="P:System.IAsyncResult.AsyncState" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.NoDelay" />
      </Docs>
    </Member>
    <Member MemberName="EndSendFile">
      <MemberSignature Language="C#" Value="public void EndSendFile (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendFile(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendFile (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendFile(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSendFile : IAsyncResult -&gt; unit" Usage="socket.EndSendFile asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="3831b-1824">
            <see cref="T:System.IAsyncResult" /> 物件，儲存這個非同步作業的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1824">An <see cref="T:System.IAsyncResult" /> object that stores state information for this asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1825">結束檔案的暫止非同步傳送。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1825">Ends a pending asynchronous send of a file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1826"><xref:System.Net.Sockets.Socket.EndSendFile%2A> 完成非同步傳送作業中啟動<xref:System.Net.Sockets.Socket.BeginSendFile%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1826"><xref:System.Net.Sockets.Socket.EndSendFile%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.Socket.BeginSendFile%2A>.</span></span>  
  
 <span data-ttu-id="3831b-1827">然後再呼叫<xref:System.Net.Sockets.Socket.BeginSendFile%2A>，您必須建立實作的回呼方法<xref:System.AsyncCallback>委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-1827">Before calling <xref:System.Net.Sockets.Socket.BeginSendFile%2A>, you must create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="3831b-1828">這個回呼方法會在個別的執行緒中執行之後, 系統便會呼叫<xref:System.Net.Sockets.Socket.BeginSendFile%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="3831b-1828">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginSendFile%2A> returns.</span></span> <span data-ttu-id="3831b-1829">回呼方法必須接受<xref:System.IAsyncResult>所傳回的物件<xref:System.Net.Sockets.Socket.BeginSendFile%2A>做為參數的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1829">The callback method must accept the <xref:System.IAsyncResult> object returned by the <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="3831b-1830">在回呼方法中，呼叫<xref:System.IAsyncResult.AsyncState%2A>方法<xref:System.IAsyncResult>參數，以取得傳送<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1830">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> parameter to obtain the sending <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-1831">取得之後<xref:System.Net.Sockets.Socket>，您可以呼叫<xref:System.Net.Sockets.Socket.EndSendFile%2A>才能順利完成傳送作業的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1831">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndSendFile%2A> method to successfully complete the send operation.</span></span>  
  
 <span data-ttu-id="3831b-1832">如果您使用無連接的通訊協定，<xref:System.Net.Sockets.Socket.EndSendFile%2A>封鎖，直到傳送資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-1832">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.EndSendFile%2A> blocks until the datagram is sent.</span></span> <span data-ttu-id="3831b-1833">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.EndSendFile%2A>封鎖，直到傳送整個檔案。</span><span class="sxs-lookup"><span data-stu-id="3831b-1833">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.EndSendFile%2A> blocks until the entire file is sent.</span></span> <span data-ttu-id="3831b-1834">則您傳送的資料就會立即出現在網路無法保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-1834">There is no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-1835">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1835">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="3831b-1836">成功完成<xref:System.Net.Sockets.Socket.BeginSendFile%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-1836">A successful completion of the <xref:System.Net.Sockets.Socket.BeginSendFile%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1837">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1837">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1838">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1838">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1839">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1839">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1840">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1840">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1841">下列程式碼範例會建立和連接的非同步通訊的通訊端並開始以非同步方式遠端主機傳送檔案"text.txt 」。</span><span class="sxs-lookup"><span data-stu-id="3831b-1841">The following code example creates and connects a socket for asynchronous communication and begins sending the file "text.txt" asynchronously to the remote host.</span></span> <span data-ttu-id="3831b-1842">回呼委派呼叫<xref:System.Net.Sockets.Socket.EndSendFile%2A>完成傳輸。</span><span class="sxs-lookup"><span data-stu-id="3831b-1842">The callback delegate calls <xref:System.Net.Sockets.Socket.EndSendFile%2A> to complete the transmission.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#9](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#9)]
 [!code-csharp[NCLSocketEnhancements#9](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-1843">這個方法需要 Windows NT。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1843">Windows NT is required for this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1844">
            <see cref="T:System.Net.Sockets.Socket" />物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1844">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1845">
            <paramref name="asyncResult" /> 是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1845">
              <paramref name="asyncResult" /> is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1846">
            <paramref name="asyncResult" /> 不會經由對 <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" /> 方法的呼叫傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1846">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1847">先前已呼叫 <see cref="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" /> 用於非同步 <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1847">
              <see cref="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)" /> was previously called for the asynchronous <see cref="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1848">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1848">An error occurred when attempting to access the socket.</span>
          </span>
          <span data-ttu-id="3831b-1849">請參閱以下註解章節。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1849">See remarks section below.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendTo">
      <MemberSignature Language="C#" Value="public int EndSendTo (IAsyncResult asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSendTo(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSendTo (asyncResult As IAsyncResult) As Integer" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSendTo(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
      <MemberSignature Language="C#" Value="public int EndSendTo (IAsyncResult result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSendTo(class System.IAsyncResult result) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSendTo (result As IAsyncResult) As Integer" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSendTo(IAsyncResult ^ result);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndSendTo : IAsyncResult -&gt; int" Usage="socket.EndSendTo result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2" />
        <Parameter Name="result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="3831b-1850">
            <see cref="T:System.IAsyncResult" />，存放此非同步作業 (Asynchronous Operation) 的狀態資訊和任何使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1850">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="3831b-1851">
            <see cref="T:System.IAsyncResult" />，存放此非同步作業 (Asynchronous Operation) 的狀態資訊和任何使用者定義的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1851">An <see cref="T:System.IAsyncResult" /> that stores state information and any user defined data for this asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1852">結束暫止的非同步傳送至指定的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1852">Ends a pending asynchronous send to a specific location.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1853">如果成功，則傳送位元組數目，否則，則產生一個無效的 <see cref="T:System.Net.Sockets.Socket" /> 錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1853">If successful, the number of bytes sent; otherwise, an invalid <see cref="T:System.Net.Sockets.Socket" /> error.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1854"><xref:System.Net.Sockets.Socket.EndSendTo%2A> 完成非同步傳送作業中啟動<xref:System.Net.Sockets.Socket.BeginSendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1854"><xref:System.Net.Sockets.Socket.EndSendTo%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.Socket.BeginSendTo%2A>.</span></span>  
  
 <span data-ttu-id="3831b-1855">然後再呼叫<xref:System.Net.Sockets.Socket.BeginSendTo%2A>，您必須建立實作的回呼方法<xref:System.AsyncCallback>委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-1855">Before calling <xref:System.Net.Sockets.Socket.BeginSendTo%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="3831b-1856">這個回呼方法會在個別的執行緒中執行之後, 系統便會呼叫<xref:System.Net.Sockets.Socket.BeginReceive%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="3831b-1856">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.Socket.BeginReceive%2A> returns.</span></span> <span data-ttu-id="3831b-1857">回呼方法必須接受<xref:System.IAsyncResult>所傳回<xref:System.Net.Sockets.Socket.BeginSendTo%2A>做為參數的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1857">The callback method must accept the <xref:System.IAsyncResult> returned by the <xref:System.Net.Sockets.Socket.BeginSendTo%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="3831b-1858">在回呼方法中，呼叫<xref:System.IAsyncResult.AsyncState%2A>方法<xref:System.IAsyncResult>參數，以取得傳送<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1858">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> method of the <xref:System.IAsyncResult> parameter to obtain the sending <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-1859">取得之後<xref:System.Net.Sockets.Socket>，您可以呼叫<xref:System.Net.Sockets.Socket.EndSendTo%2A>方法成功完成傳送作業，並傳回傳送的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-1859">After obtaining the <xref:System.Net.Sockets.Socket>, you can call the <xref:System.Net.Sockets.Socket.EndSendTo%2A> method to successfully complete the send operation and return the number of bytes sent.</span></span>  
  
 <span data-ttu-id="3831b-1860">如果您使用無連接的通訊協定，<xref:System.Net.Sockets.Socket.EndSendTo%2A>將會封鎖直到傳送資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-1860">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.EndSendTo%2A> will block until the datagram is sent.</span></span> <span data-ttu-id="3831b-1861">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.EndSendTo%2A>將會封鎖直到傳送要求的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-1861">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.EndSendTo%2A> will block until the requested number of bytes are sent.</span></span> <span data-ttu-id="3831b-1862">則您傳送的資料就會立即出現在網路無法保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-1862">There is no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-1863">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-1863">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="3831b-1864">成功完成<xref:System.Net.Sockets.Socket.BeginSendTo%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-1864">A successful completion of the <xref:System.Net.Sockets.Socket.BeginSendTo%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1865">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1865">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1866">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1866">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1867">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1867">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1868">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1868">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1869">下列程式碼範例會結束非同步傳送至特定位置。</span><span class="sxs-lookup"><span data-stu-id="3831b-1869">The following code example ends an asynchronous send to a specific location.</span></span>  
  
 [!code-cpp[Socket_Async_Send_Receive#9](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CPP/source.cpp#9)]
 [!code-csharp[Socket_Async_Send_Receive#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Async_Send_Receive/CS/source.cs#9)]
 [!code-vb[Socket_Async_Send_Receive#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Async_Send_Receive/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-1870">
            <paramref name="asyncResult" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1870">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-1871">
            <paramref name="asyncResult" /> 不會經由對 <see cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" /> 方法的呼叫傳回。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1871">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1872">先前已針對非同步傳送呼叫 <see cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1872">
              <see cref="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)" /> was previously called for the asynchronous send.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1873">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1873">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1874">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1874">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.Socket.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1875">取得或設定 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Net.Sockets.Socket" /> 是否只允許一個處理序繫結至通訊埠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1875">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> allows only one process to bind to a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-1876">如果 <see cref="T:System.Net.Sockets.Socket" /> 只允許一個通訊端繫結至特定通訊埠，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1876">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> allows only one socket to bind to a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3831b-1877">預設值是<see langword="true" />Windows Server 2003 和 Windows XP Service Pack 2 和<see langword="false" />對於所有其他版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1877">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1878">如果<xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A>已`false`，可以使用多個通訊端<xref:System.Net.Sockets.Socket.Bind%2A>方法繫結到特定的連接埠，不過只有其中一個通訊端可以對執行作業傳送至連接埠的網路流量。</span><span class="sxs-lookup"><span data-stu-id="3831b-1878">If <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> is `false`, multiple sockets can use the <xref:System.Net.Sockets.Socket.Bind%2A> method to bind to a specific port; however only one of the sockets can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="3831b-1879">如果多個通訊端嘗試使用<xref:System.Net.Sockets.Socket.Bind%28System.Net.EndPoint%29>方法繫結至特定的連接埠，則具有更特定的 IP 位址，一個會處理傳送到該連接埠的網路流量。</span><span class="sxs-lookup"><span data-stu-id="3831b-1879">If more than one socket attempts to use the <xref:System.Net.Sockets.Socket.Bind%28System.Net.EndPoint%29> method to bind to a particular port, then the one with the more specific IP address will handle the network traffic sent to that port.</span></span>  
  
 <span data-ttu-id="3831b-1880">如果<xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A>是`true`，第一次使用<xref:System.Net.Sockets.Socket.Bind%2A>方法，以嘗試繫結至特定的連接埠，不論網際網路通訊協定 (IP) 位址，將會成功，所有後續的用法<xref:System.Net.Sockets.Socket.Bind%2A>會嘗試繫結至該連接埠的方法失敗，直到原始的繫結通訊端被終結。</span><span class="sxs-lookup"><span data-stu-id="3831b-1880">If <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> is `true`, the first use of the <xref:System.Net.Sockets.Socket.Bind%2A> method to attempt to bind to a particular port, regardless of Internet Protocol (IP) address, will succeed; all subsequent uses of the <xref:System.Net.Sockets.Socket.Bind%2A> method to attempt to bind to that port will fail until the original bound socket is destroyed.</span></span>  
  
 <span data-ttu-id="3831b-1881">必須先設定此屬性才<xref:System.Net.Sockets.Socket.Bind%2A>被呼叫，否則為<xref:System.InvalidOperationException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3831b-1881">This property must be set before <xref:System.Net.Sockets.Socket.Bind%2A> is called; otherwise an <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1882">下列程式碼範例示範使用<xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-1882">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1883">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1883">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1884">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1884">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1885">已為這個 <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> 呼叫 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1885">
              <see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /> has been called for this <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Socket ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Socket ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="socket.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1886">釋放 <see cref="T:System.Net.Sockets.Socket" /> 類別所使用的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1886">Frees resources used by the <see cref="T:System.Net.Sockets.Socket" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1887"><xref:System.Net.Sockets.Socket>類別完成項呼叫<xref:System.Net.Sockets.Socket.Close%2A>方法以關閉<xref:System.Net.Sockets.Socket>釋放相關聯的資源和<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1887">The <xref:System.Net.Sockets.Socket> class finalizer calls the <xref:System.Net.Sockets.Socket.Close%2A> method to close the <xref:System.Net.Sockets.Socket> and free resources associated with the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="socket.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1888">傳回 <see cref="T:System.Net.Sockets.Socket" /> 執行個體的雜湊值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1888">Returns a hash value for a <see cref="T:System.Net.Sockets.Socket" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1889">整數雜湊值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1889">An integer hash value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="3831b-1890">GetHashCode 方法會傳回這個執行個體的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1890">The GetHashCode method returns a hash code of this instance.</span></span> <span data-ttu-id="3831b-1891">此值可用來當做雜湊表中的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="3831b-1891">This value can be used as a key in hash tables.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSocketOption">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1892">傳回 <see cref="T:System.Net.Sockets.Socket" /> 選項值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1892">Returns the value of a <see cref="T:System.Net.Sockets.Socket" /> option.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSocketOption">
      <MemberSignature Language="C#" Value="public object GetSocketOption (System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSocketOption (optionLevel As SocketOptionLevel, optionName As SocketOptionName) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName);" />
      <MemberSignature Language="F#" Value="member this.GetSocketOption : System.Net.Sockets.SocketOptionLevel * System.Net.Sockets.SocketOptionName -&gt; obj" Usage="socket.GetSocketOption (optionLevel, optionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" />
      </Parameters>
      <Docs>
        <param name="optionLevel">
          <span data-ttu-id="3831b-1893">其中一個 <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1893">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values.</span>
          </span>
        </param>
        <param name="optionName">
          <span data-ttu-id="3831b-1894">其中一個 <see cref="T:System.Net.Sockets.SocketOptionName" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1894">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1895">傳回指定 <see cref="T:System.Net.Sockets.Socket" /> 選項的值，表示為物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1895">Returns the value of a specified <see cref="T:System.Net.Sockets.Socket" /> option, represented as an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1896">表示選項值的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1896">An object that represents the value of the option.</span>
          </span>
          <span data-ttu-id="3831b-1897">當 <paramref name="optionName" /> 參數設為 <see cref="F:System.Net.Sockets.SocketOptionName.Linger" /> 時，傳回值將會是 <see cref="T:System.Net.Sockets.LingerOption" /> 類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1897">When the <paramref name="optionName" /> parameter is set to <see cref="F:System.Net.Sockets.SocketOptionName.Linger" /> the return value is an instance of the <see cref="T:System.Net.Sockets.LingerOption" /> class.</span>
          </span>
          <span data-ttu-id="3831b-1898">當 <paramref name="optionName" /> 設為 <see cref="F:System.Net.Sockets.SocketOptionName.AddMembership" /> 或 <see cref="F:System.Net.Sockets.SocketOptionName.DropMembership" /> 時，傳回值將會是 <see cref="T:System.Net.Sockets.MulticastOption" /> 類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1898">When <paramref name="optionName" /> is set to <see cref="F:System.Net.Sockets.SocketOptionName.AddMembership" /> or <see cref="F:System.Net.Sockets.SocketOptionName.DropMembership" />, the return value is an instance of the <see cref="T:System.Net.Sockets.MulticastOption" /> class.</span>
          </span>
          <span data-ttu-id="3831b-1899">當 <paramref name="optionName" /> 是其他的任何值時，傳回的值則是一個整數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1899">When <paramref name="optionName" /> is any other value, the return value is an integer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1900"><xref:System.Net.Sockets.Socket> 選項會決定目前的行為<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1900"><xref:System.Net.Sockets.Socket> options determine the behavior of the current <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-1901">若要取得使用此多載<xref:System.Net.Sockets.SocketOptionName.Linger>， <xref:System.Net.Sockets.SocketOptionName.AddMembership>，並<xref:System.Net.Sockets.SocketOptionName.DropMembership><xref:System.Net.Sockets.Socket>選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-1901">Use this overload to get the <xref:System.Net.Sockets.SocketOptionName.Linger>, <xref:System.Net.Sockets.SocketOptionName.AddMembership>, and <xref:System.Net.Sockets.SocketOptionName.DropMembership><xref:System.Net.Sockets.Socket> options.</span></span> <span data-ttu-id="3831b-1902">針對<xref:System.Net.Sockets.SocketOptionName.Linger>選項，請使用<xref:System.Net.Sockets.Socket>如`optionLevel`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-1902">For the <xref:System.Net.Sockets.SocketOptionName.Linger> option, use <xref:System.Net.Sockets.Socket> for the `optionLevel` parameter.</span></span> <span data-ttu-id="3831b-1903">針對<xref:System.Net.Sockets.SocketOptionName.AddMembership>並<xref:System.Net.Sockets.SocketOptionName.DropMembership>，使用<xref:System.Net.Sockets.SocketOptionLevel.IP>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1903">For <xref:System.Net.Sockets.SocketOptionName.AddMembership> and <xref:System.Net.Sockets.SocketOptionName.DropMembership>, use <xref:System.Net.Sockets.SocketOptionLevel.IP>.</span></span> <span data-ttu-id="3831b-1904">如果您想要設定任何上述選項的值，請使用<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1904">If you want to set the value of any of the options listed above, use the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1905">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1905">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1906">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1906">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1907">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1907">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1908">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1908">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1909">下列程式碼範例會擷取<xref:System.Net.Sockets.LingerOption>和<xref:System.Net.Sockets.Socket.Send%2A>逾時的值，並加以顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="3831b-1909">The following code example retrieves the <xref:System.Net.Sockets.LingerOption> and <xref:System.Net.Sockets.Socket.Send%2A> time-out values and displays them to the console.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#2)]
 [!code-csharp[Socket_Socket_Options#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#2)]
 [!code-vb[Socket_Socket_Options#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1910">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1910">An error occurred when attempting to access the socket.</span>
          </span>
          <span data-ttu-id="3831b-1911">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1911">-or-</span>
          </span>
          <span data-ttu-id="3831b-1912">
            <paramref name="optionName" /> 設定為不支援的值 <see cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1912">
              <paramref name="optionName" /> was set to the unsupported value <see cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1913">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1913">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.SocketOptionName" />
        <altmember cref="T:System.Net.Sockets.SocketOptionLevel" />
      </Docs>
    </Member>
    <Member MemberName="GetSocketOption">
      <MemberSignature Language="C#" Value="public void GetSocketOption (System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, byte[] optionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, unsigned int8[] optionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetSocketOption (optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName, cli::array &lt;System::Byte&gt; ^ optionValue);" />
      <MemberSignature Language="F#" Value="member this.GetSocketOption : System.Net.Sockets.SocketOptionLevel * System.Net.Sockets.SocketOptionName * byte[] -&gt; unit" Usage="socket.GetSocketOption (optionLevel, optionName, optionValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" />
        <Parameter Name="optionValue" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="optionLevel">
          <span data-ttu-id="3831b-1914">其中一個 <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1914">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values.</span>
          </span>
        </param>
        <param name="optionName">
          <span data-ttu-id="3831b-1915">其中一個 <see cref="T:System.Net.Sockets.SocketOptionName" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1915">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values.</span>
          </span>
        </param>
        <param name="optionValue">
          <span data-ttu-id="3831b-1916">
            <see cref="T:System.Byte" /> 型別的陣列，將要接收選項設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1916">An array of type <see cref="T:System.Byte" /> that is to receive the option setting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1917">傳回指定的 <see cref="T:System.Net.Sockets.Socket" /> 選項設定，表示為位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1917">Returns the specified <see cref="T:System.Net.Sockets.Socket" /> option setting, represented as a byte array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1918"><xref:System.Net.Sockets.Socket> 選項會決定目前的行為<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1918"><xref:System.Net.Sockets.Socket> options determine the behavior of the current <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-1919">這個方法成功完成，陣列會指定由`optionValue`參數會包含指定的值<xref:System.Net.Sockets.Socket>選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-1919">Upon successful completion of this method, the array specified by the `optionValue` parameter contains the value of the specified <xref:System.Net.Sockets.Socket> option.</span></span>  
  
 <span data-ttu-id="3831b-1920">當的長度`optionValue`陣列的儲存值，指定所需的位元組數目小於<xref:System.Net.Sockets.Socket>選項時，<xref:System.Net.Sockets.Socket.GetSocketOption%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1920">When the length of the `optionValue` array is smaller than the number of bytes required to store the value of the specified <xref:System.Net.Sockets.Socket> option, <xref:System.Net.Sockets.Socket.GetSocketOption%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-1921">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1921">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1922">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1922">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span> <span data-ttu-id="3831b-1923">使用此多載的布林值或整數都由任何通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-1923">Use this overload for any sockets that are represented by Boolean values or integers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1924">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1924">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1925">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1925">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1926">下列程式碼範例會擷取<xref:System.Net.Sockets.LingerOption>和<xref:System.Net.Sockets.Socket.Send%2A>逾時的值，並加以顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="3831b-1926">The following code example retrieves the <xref:System.Net.Sockets.LingerOption> and <xref:System.Net.Sockets.Socket.Send%2A> time-out values and displays them to the console.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#2)]
 [!code-csharp[Socket_Socket_Options#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#2)]
 [!code-vb[Socket_Socket_Options#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1927">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1927">An error occurred when attempting to access the socket.</span>
          </span>
          <span data-ttu-id="3831b-1928">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1928">\- or -</span>
          </span>
          <span data-ttu-id="3831b-1929">在 .NET Compact Framework 應用程式中，Windows CE 的預設緩衝區空間設為 32768 個位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1929">In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes.</span>
          </span>
          <span data-ttu-id="3831b-1930">您可以呼叫 <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />，以變更每個通訊端緩衝區空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1930">You can change the per socket buffer space by calling <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1931">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1931">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.SocketOptionName" />
        <altmember cref="T:System.Net.Sockets.SocketOptionLevel" />
      </Docs>
    </Member>
    <Member MemberName="GetSocketOption">
      <MemberSignature Language="C#" Value="public byte[] GetSocketOption (System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, int optionLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, int32 optionLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSocketOption (optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionLength As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName, int optionLength);" />
      <MemberSignature Language="F#" Value="member this.GetSocketOption : System.Net.Sockets.SocketOptionLevel * System.Net.Sockets.SocketOptionName * int -&gt; byte[]" Usage="socket.GetSocketOption (optionLevel, optionName, optionLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" />
        <Parameter Name="optionLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="optionLevel">
          <span data-ttu-id="3831b-1932">其中一個 <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1932">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values.</span>
          </span>
        </param>
        <param name="optionName">
          <span data-ttu-id="3831b-1933">其中一個 <see cref="T:System.Net.Sockets.SocketOptionName" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1933">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values.</span>
          </span>
        </param>
        <param name="optionLength">
          <span data-ttu-id="3831b-1934">要限制的傳回值長度，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1934">The length, in bytes, of the expected return value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1935">以陣列傳回指定 <see cref="T:System.Net.Sockets.Socket" /> 選項的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1935">Returns the value of the specified <see cref="T:System.Net.Sockets.Socket" /> option in an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1936">
            <see cref="T:System.Byte" /> 型別的陣列，包含通訊端選項值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1936">An array of type <see cref="T:System.Byte" /> that contains the value of the socket option.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1937">`optionLength`參數會設定傳回的位元組陣列的大小上限。</span><span class="sxs-lookup"><span data-stu-id="3831b-1937">The `optionLength` parameter sets the maximum size of the returned byte array.</span></span> <span data-ttu-id="3831b-1938">如果選項值需要更少個位元組，陣列將只包含位元組數。</span><span class="sxs-lookup"><span data-stu-id="3831b-1938">If the option value requires fewer bytes, the array will contain only that many bytes.</span></span> <span data-ttu-id="3831b-1939">如果選項值需要更多的位元組<xref:System.Net.Sockets.Socket.GetSocketOption%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-1939">If the option value requires more bytes, <xref:System.Net.Sockets.Socket.GetSocketOption%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-1940">使用此多載的布林值或整數都由任何通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-1940">Use this overload for any sockets that are represented by Boolean values or integers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1941">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1941">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1942">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1942">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1943">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1943">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1944">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1944">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1945">下列程式碼範例會擷取<xref:System.Net.Sockets.LingerOption>和<xref:System.Net.Sockets.Socket.Send%2A>逾時的值，並加以顯示到主控台。</span><span class="sxs-lookup"><span data-stu-id="3831b-1945">The following code example retrieves the <xref:System.Net.Sockets.LingerOption> and <xref:System.Net.Sockets.Socket.Send%2A> time-out values and displays them to the console.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#2)]
 [!code-csharp[Socket_Socket_Options#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#2)]
 [!code-vb[Socket_Socket_Options#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1946">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1946">An error occurred when attempting to access the socket.</span>
          </span>
          <span data-ttu-id="3831b-1947">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1947">\- or -</span>
          </span>
          <span data-ttu-id="3831b-1948">在 .NET Compact Framework 應用程式中，Windows CE 的預設緩衝區空間設為 32768 個位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1948">In .NET Compact Framework applications, the Windows CE default buffer space is set to 32768 bytes.</span>
          </span>
          <span data-ttu-id="3831b-1949">您可以呼叫 <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />，以變更每個通訊端緩衝區空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1949">You can change the per socket buffer space by calling <see cref="Overload:System.Net.Sockets.Socket.SetSocketOption" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1950">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1950">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.SocketOptionName" />
        <altmember cref="T:System.Net.Sockets.SocketOptionLevel" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Net.Sockets.Socket.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1951">取得 <see cref="T:System.Net.Sockets.Socket" /> 的作業系統處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1951">Gets the operating system handle for the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-1952">
            <see cref="T:System.IntPtr" />，表示 <see cref="T:System.Net.Sockets.Socket" /> 的作業系統控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1952">An <see cref="T:System.IntPtr" /> that represents the operating system handle for the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IOControl">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1953">設定 <see cref="T:System.Net.Sockets.Socket" /> 的低階作業系統模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1953">Sets low-level operating modes for the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IOControl">
      <MemberSignature Language="C#" Value="public int IOControl (int ioControlCode, byte[] optionInValue, byte[] optionOutValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IOControl(int32 ioControlCode, unsigned int8[] optionInValue, unsigned int8[] optionOutValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.IOControl(System.Int32,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function IOControl (ioControlCode As Integer, optionInValue As Byte(), optionOutValue As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IOControl(int ioControlCode, cli::array &lt;System::Byte&gt; ^ optionInValue, cli::array &lt;System::Byte&gt; ^ optionOutValue);" />
      <MemberSignature Language="F#" Value="member this.IOControl : int * byte[] * byte[] -&gt; int" Usage="socket.IOControl (ioControlCode, optionInValue, optionOutValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ioControlCode" Type="System.Int32" />
        <Parameter Name="optionInValue" Type="System.Byte[]" />
        <Parameter Name="optionOutValue" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="ioControlCode">
          <span data-ttu-id="3831b-1954">
            <see cref="T:System.Int32" /> 值，指定要執行之作業的控制碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1954">An <see cref="T:System.Int32" /> value that specifies the control code of the operation to perform.</span>
          </span>
        </param>
        <param name="optionInValue">
          <span data-ttu-id="3831b-1955">
            <see cref="T:System.Byte" /> 陣列，包含作業所需的輸入資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1955">A <see cref="T:System.Byte" /> array that contains the input data required by the operation.</span>
          </span>
        </param>
        <param name="optionOutValue">
          <span data-ttu-id="3831b-1956">
            <see cref="T:System.Byte" /> 陣列，包含作業傳回的輸出資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1956">A <see cref="T:System.Byte" /> array that contains the output data returned by the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1957">使用數值控制碼，設定 <see cref="T:System.Net.Sockets.Socket" /> 的低階作業模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1957">Sets low-level operating modes for the <see cref="T:System.Net.Sockets.Socket" /> using numerical control codes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1958">
            <paramref name="optionOutValue" /> 中的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1958">The number of bytes in the <paramref name="optionOutValue" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1959"><xref:System.Net.Sockets.Socket.IOControl%2A>方法會提供低階作業系統存取權<xref:System.Net.Sockets.Socket>基礎的目前執行個體<xref:System.Net.Sockets.Socket>類別。</span><span class="sxs-lookup"><span data-stu-id="3831b-1959">The <xref:System.Net.Sockets.Socket.IOControl%2A> method provides low-level access to the operating system <xref:System.Net.Sockets.Socket> underlying the current instance of the <xref:System.Net.Sockets.Socket> class.</span></span> <span data-ttu-id="3831b-1960">如需詳細資訊，請參閱 MSDN library 中的 WSAIoctl 文件。</span><span class="sxs-lookup"><span data-stu-id="3831b-1960">For more information, see the WSAIoctl documentation in the MSDN library.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1961">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1961">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1962">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1962">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1963">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1963">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1964">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1964">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1965">下列程式碼範例會比較 FIONREAD 和可用屬性的結果。</span><span class="sxs-lookup"><span data-stu-id="3831b-1965">The following code example compares the results of FIONREAD and the Available property.</span></span>  
  
 [!code-cpp[NCLSocketIoControl#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketIoControl/CPP/iocontrolserver.cpp#1)]
 [!code-csharp[NCLSocketIoControl#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketIoControl/CS/iocontrolserver.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1966">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1966">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1967">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1967">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1968">已嘗試不使用 <see cref="P:System.Net.Sockets.Socket.Blocking" /> 屬性來變更封鎖模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1968">An attempt was made to change the blocking mode without using the <see cref="P:System.Net.Sockets.Socket.Blocking" /> property.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-1969">呼叫堆疊中的呼叫端沒有所需的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1969">A caller in the call stack does not have the required permissions.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="3831b-1970">若要執行 unmanaged 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1970">to execute unmanaged code.</span>
          </span>
          <span data-ttu-id="3831b-1971">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1971">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IOControl">
      <MemberSignature Language="C#" Value="public int IOControl (System.Net.Sockets.IOControlCode ioControlCode, byte[] optionInValue, byte[] optionOutValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IOControl(valuetype System.Net.Sockets.IOControlCode ioControlCode, unsigned int8[] optionInValue, unsigned int8[] optionOutValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.IOControl(System.Net.Sockets.IOControlCode,System.Byte[],System.Byte[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IOControl(System::Net::Sockets::IOControlCode ioControlCode, cli::array &lt;System::Byte&gt; ^ optionInValue, cli::array &lt;System::Byte&gt; ^ optionOutValue);" />
      <MemberSignature Language="F#" Value="member this.IOControl : System.Net.Sockets.IOControlCode * byte[] * byte[] -&gt; int" Usage="socket.IOControl (ioControlCode, optionInValue, optionOutValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ioControlCode" Type="System.Net.Sockets.IOControlCode" />
        <Parameter Name="optionInValue" Type="System.Byte[]" />
        <Parameter Name="optionOutValue" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="ioControlCode">
          <span data-ttu-id="3831b-1972">
            <see cref="T:System.Net.Sockets.IOControlCode" /> 值，指定要執行之作業的控制碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1972">A <see cref="T:System.Net.Sockets.IOControlCode" /> value that specifies the control code of the operation to perform.</span>
          </span>
        </param>
        <param name="optionInValue">
          <span data-ttu-id="3831b-1973">
            <see cref="T:System.Byte" /> 型別的陣列，包含作業所需的輸入資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1973">An array of type <see cref="T:System.Byte" /> that contains the input data required by the operation.</span>
          </span>
        </param>
        <param name="optionOutValue">
          <span data-ttu-id="3831b-1974">
            <see cref="T:System.Byte" /> 型別的陣列，包含作業傳回的輸出資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1974">An array of type <see cref="T:System.Byte" /> that contains the output data returned by the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-1975">使用 <see cref="T:System.Net.Sockets.Socket" /> 列舉型別指定控制碼，以設定 <see cref="T:System.Net.Sockets.IOControlCode" /> 的低階作業模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1975">Sets low-level operating modes for the <see cref="T:System.Net.Sockets.Socket" /> using the <see cref="T:System.Net.Sockets.IOControlCode" /> enumeration to specify control codes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-1976">
            <paramref name="optionOutValue" /> 中的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1976">The number of bytes in the <paramref name="optionOutValue" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1977">這個方法會提供低階作業系統存取權<xref:System.Net.Sockets.Socket>基礎的目前執行個體<xref:System.Net.Sockets.Socket>類別。</span><span class="sxs-lookup"><span data-stu-id="3831b-1977">This method provides low-level access to the operating system <xref:System.Net.Sockets.Socket> underlying the current instance of the <xref:System.Net.Sockets.Socket> class.</span></span> <span data-ttu-id="3831b-1978">如需詳細資訊，請參閱 MSDN library 中的 WSAIoctl 文件。</span><span class="sxs-lookup"><span data-stu-id="3831b-1978">For more, see the WSAIoctl documentation in the MSDN library.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1979">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-1979">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-1980">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-1980">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-1981">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-1981">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-1982">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-1982">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1983">下列程式碼範例會比較呼叫的結果<xref:System.Net.Sockets.Socket.IOControl%2A>具有<xref:System.Net.Sockets.IOControlCode.DataToRead>而<xref:System.Net.Sockets.Socket.Available%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-1983">The following code example compares the results of calling <xref:System.Net.Sockets.Socket.IOControl%2A> with <xref:System.Net.Sockets.IOControlCode.DataToRead> and the <xref:System.Net.Sockets.Socket.Available%2A> property.</span></span>  
  
 [!code-cpp[NCLSocketIoControl1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketIoControl1/CPP/iocontrolcode.cpp#1)]
 [!code-csharp[NCLSocketIoControl1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketIoControl1/CS/iocontrolcode.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-1984">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1984">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-1985">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1985">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-1986">已嘗試不使用 <see cref="P:System.Net.Sockets.Socket.Blocking" /> 屬性來變更封鎖模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1986">An attempt was made to change the blocking mode without using the <see cref="P:System.Net.Sockets.Socket.Blocking" /> property.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="3831b-1987">若要執行 unmanaged 程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1987">to execute unmanaged code.</span>
          </span>
          <span data-ttu-id="3831b-1988">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1988">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsBound">
      <MemberSignature Language="C#" Value="public bool IsBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBound" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.IsBound" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBound { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBound : bool" Usage="System.Net.Sockets.Socket.IsBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1989">取得值，指出 <see cref="T:System.Net.Sockets.Socket" /> 是否繫結至特定的本機通訊埠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1989">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.Socket" /> is bound to a specific local port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-1990">如果 <see cref="T:System.Net.Sockets.Socket" /> 繫結至本機通訊埠，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1990">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> is bound to a local port; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1991">通訊端會被視為本機連接埠的繫結，如果呼叫明確繫結<xref:System.Net.Sockets.Socket.Bind%2A>方法，或以隱含方式繫結所呼叫的成員，像是<xref:System.Net.Sockets.Socket.Connect%2A>， <xref:System.Net.Sockets.Socket.SendTo%2A>，或<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>，其中使用暫時的本機連接埠 （可用的連接埠大於1024，選取作業系統。)伺服器會使用<xref:System.Net.Sockets.Socket.Bind%2A>繫結的已知的連接埠，讓用戶端可以連線到它們的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-1991">A socket is considered bound to a local port if it is explicitly bound by calling the <xref:System.Net.Sockets.Socket.Bind%2A> method, or implicitly bound by calling members like <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.SendTo%2A>, or <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>, which use an ephemeral local port (a free port greater than 1024, selected by the operating system.) Servers use the <xref:System.Net.Sockets.Socket.Bind%2A> method to bind to a well-known port so that clients may connect to them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-1992">下列程式碼範例示範使用<xref:System.Net.Sockets.Socket.IsBound%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-1992">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.IsBound%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LingerState : System.Net.Sockets.LingerOption with get, set" Usage="System.Net.Sockets.Socket.LingerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-1993">取得或設定值，指定 <see cref="T:System.Net.Sockets.Socket" /> 是否會延遲關閉通訊端，以嘗試傳送所有暫止資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1993">Gets or sets a value that specifies whether the <see cref="T:System.Net.Sockets.Socket" /> will delay closing a socket in an attempt to send all pending data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-1994">
            <see cref="T:System.Net.Sockets.LingerOption" />，指定關閉通訊端時如何延遲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-1994">A <see cref="T:System.Net.Sockets.LingerOption" /> that specifies how to linger while closing a socket.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-1995"><xref:System.Net.Sockets.Socket.LingerState%2A>屬性變更的方式<xref:System.Net.Sockets.Socket.Close%2A>方法的行為。</span><span class="sxs-lookup"><span data-stu-id="3831b-1995">The <xref:System.Net.Sockets.Socket.LingerState%2A> property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="3831b-1996">這個屬性時設定修改用以連接可以重設的 Winsock 的條件。</span><span class="sxs-lookup"><span data-stu-id="3831b-1996">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="3831b-1997">連接重設，仍然會根據 IP 通訊協定行為。</span><span class="sxs-lookup"><span data-stu-id="3831b-1997">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="3831b-1998">此屬性控制的連線導向的連線會維持開啟狀態之後呼叫的時間長度<xref:System.Net.Sockets.Socket.Close%2A>資料保持傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-1998">This property controls the length of time that a connection-oriented connection will remain open after a call to <xref:System.Net.Sockets.Socket.Close%2A> when data remains to be sent.</span></span>  
  
 <span data-ttu-id="3831b-1999">當您呼叫方法，以將資料傳送至對等時，這項資料會在傳出的網路緩衝區中。</span><span class="sxs-lookup"><span data-stu-id="3831b-1999">When you call methods to send data to a peer, this data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="3831b-2000">這個屬性可以用來確保這項資料會傳送到遠端主機，才能進行<xref:System.Net.Sockets.TcpClient.Close%2A>方法會卸除連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-2000">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="3831b-2001">若要啟用延遲，請建立<xref:System.Net.Sockets.LingerOption>執行個體包含所需的值，並設定<xref:System.Net.Sockets.Socket.LingerState%2A>，這個執行個體的屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-2001">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the <xref:System.Net.Sockets.Socket.LingerState%2A> property to this instance.</span></span>  
  
 <span data-ttu-id="3831b-2002">下表描述的行為<xref:System.Net.Sockets.Socket.Close%2A>方法的可能值<xref:System.Net.Sockets.LingerOption.Enabled%2A>屬性並<xref:System.Net.Sockets.LingerOption.LingerTime%2A>屬性儲存在<xref:System.Net.Sockets.Socket.LingerState%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-2002">The following table describes the behavior of the <xref:System.Net.Sockets.Socket.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property.</span></span>  
  
|<span data-ttu-id="3831b-2003">LingerState.Enabled</span><span class="sxs-lookup"><span data-stu-id="3831b-2003">LingerState.Enabled</span></span>|<span data-ttu-id="3831b-2004">LingerState.LingerTime</span><span class="sxs-lookup"><span data-stu-id="3831b-2004">LingerState.LingerTime</span></span>|<span data-ttu-id="3831b-2005">行為</span><span class="sxs-lookup"><span data-stu-id="3831b-2005">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="3831b-2006">`false` （已停用），預設值</span><span class="sxs-lookup"><span data-stu-id="3831b-2006">`false` (disabled), the default value</span></span>|<span data-ttu-id="3831b-2007">逾時並不適用，（預設值）。</span><span class="sxs-lookup"><span data-stu-id="3831b-2007">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="3831b-2008">嘗試將預設 IP 通訊協定等候逾時到期之前傳送暫止資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2008">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="3831b-2009">`true` （已啟用）</span><span class="sxs-lookup"><span data-stu-id="3831b-2009">`true` (enabled)</span></span>|<span data-ttu-id="3831b-2010">非零的逾時</span><span class="sxs-lookup"><span data-stu-id="3831b-2010">A nonzero time-out</span></span>|<span data-ttu-id="3831b-2011">嘗試傳送暫止資料，直到指定的逾時到期，但如果嘗試失敗，然後 Winsock 重設連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-2011">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="3831b-2012">`true` （已啟用）</span><span class="sxs-lookup"><span data-stu-id="3831b-2012">`true` (enabled)</span></span>|<span data-ttu-id="3831b-2013">零逾時。</span><span class="sxs-lookup"><span data-stu-id="3831b-2013">A zero timeout.</span></span>|<span data-ttu-id="3831b-2014">會捨棄任何暫止的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2014">Discards any pending data.</span></span> <span data-ttu-id="3831b-2015">連接導向通訊端 (例如 TCP)，Winsock 重設連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-2015">For connection-oriented socket (TCP, for example), Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="3831b-2016">IP 堆疊預設 IP 通訊協定逾時期限，將會根據計算的連線的來回時間。</span><span class="sxs-lookup"><span data-stu-id="3831b-2016">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="3831b-2017">在大部分情況下，堆疊所計算的逾時則是更為相關應用程式所定義的其中一個項目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2017">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="3831b-2018">這是通訊端的預設行為時<xref:System.Net.Sockets.Socket.LingerState%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="3831b-2018">This is the default behavior for a socket when the <xref:System.Net.Sockets.Socket.LingerState%2A> property is not set.</span></span>  
  
 <span data-ttu-id="3831b-2019">當<xref:System.Net.Sockets.LingerOption.LingerTime%2A>屬性會儲存在<xref:System.Net.Sockets.Socket.LingerState%2A>屬性設定為大於預設 IP 通訊協定等候逾時，預設 IP 通訊協定等候逾時仍會在套用，並覆寫。</span><span class="sxs-lookup"><span data-stu-id="3831b-2019">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.Socket.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2020">下列程式碼範例示範使用<xref:System.Net.Sockets.Socket.LingerState%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-2020">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.LingerState%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2021">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2021">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2022">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2022">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Listen">
      <MemberSignature Language="C#" Value="public void Listen (int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Listen(int32 backlog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Listen (backlog As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Listen(int backlog);" />
      <MemberSignature Language="F#" Value="member this.Listen : int -&gt; unit" Usage="socket.Listen backlog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backlog" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="backlog">
          <span data-ttu-id="3831b-2023">暫止連接佇列的最大長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2023">The maximum length of the pending connections queue.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2024">將 <see cref="T:System.Net.Sockets.Socket" /> 置於接聽狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2024">Places a <see cref="T:System.Net.Sockets.Socket" /> in a listening state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2025"><xref:System.Net.Sockets.Socket.Listen%2A> 會導致連線導向<xref:System.Net.Sockets.Socket>來接聽連入連線嘗試。</span><span class="sxs-lookup"><span data-stu-id="3831b-2025"><xref:System.Net.Sockets.Socket.Listen%2A> causes a connection-oriented <xref:System.Net.Sockets.Socket> to listen for incoming connection attempts.</span></span> <span data-ttu-id="3831b-2026">`backlog`參數會指定可排入佇列進行接受度測試的連入連線的數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2026">The `backlog` parameter specifies the number of incoming connections that can be queued for acceptance.</span></span> <span data-ttu-id="3831b-2027">若要判斷您可以指定的連線的最大數目，請擷取<xref:System.Net.Sockets.SocketOptionName.MaxConnections>值。</span><span class="sxs-lookup"><span data-stu-id="3831b-2027">To determine the maximum number of connections you can specify, retrieve the <xref:System.Net.Sockets.SocketOptionName.MaxConnections> value.</span></span> <span data-ttu-id="3831b-2028"><xref:System.Net.Sockets.Socket.Listen%2A> 不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="3831b-2028"><xref:System.Net.Sockets.Socket.Listen%2A> does not block.</span></span>  
  
 <span data-ttu-id="3831b-2029">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2029">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2030">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2030">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span> <span data-ttu-id="3831b-2031">使用<xref:System.Net.Sockets.Socket.Accept%2A>或<xref:System.Net.Sockets.Socket.BeginAccept%2A>接受來自佇列的連接。</span><span class="sxs-lookup"><span data-stu-id="3831b-2031">Use <xref:System.Net.Sockets.Socket.Accept%2A> or <xref:System.Net.Sockets.Socket.BeginAccept%2A> to accept a connection from the queue.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2032">您必須呼叫<xref:System.Net.Sockets.Socket.Bind%2A>方法之前呼叫<xref:System.Net.Sockets.Socket.Listen%2A>，或<xref:System.Net.Sockets.Socket.Listen%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2032">You must call the <xref:System.Net.Sockets.Socket.Bind%2A> method before calling <xref:System.Net.Sockets.Socket.Listen%2A>, or <xref:System.Net.Sockets.Socket.Listen%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2033">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2033">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2034">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2034">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2035">待處理項目參數會限制為不同的值，視作業系統而定。</span><span class="sxs-lookup"><span data-stu-id="3831b-2035">The backlog parameter is limited to different values depending on the Operating System.</span></span> <span data-ttu-id="3831b-2036">您可以指定較高的值，但待處理項目將會限定作業系統為基礎。</span><span class="sxs-lookup"><span data-stu-id="3831b-2036">You may specify a higher value, but the backlog will be limited based on the Operating System.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2037">下列程式碼範例使用<xref:System.Net.Sockets.Socket>來接聽連入連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-2037">The following code example uses <xref:System.Net.Sockets.Socket> to listen for incoming connections.</span></span>  
  
 [!code-cpp[Classic Socket.Listen Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Listen Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Listen Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Listen Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Listen Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Listen Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2038">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2038">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2039">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2039">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.MaxConnections" />
        <altmember cref="M:System.Net.Sockets.Socket.Accept" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint LocalEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint LocalEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.LocalEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndPoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ LocalEndPoint { System::Net::EndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndPoint : System.Net.EndPoint" Usage="System.Net.Sockets.Socket.LocalEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-2040">取得本機端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2040">Gets the local endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-2041">
            <see cref="T:System.Net.EndPoint" />，<see cref="T:System.Net.Sockets.Socket" /> 正將它用於通訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2041">The <see cref="T:System.Net.EndPoint" /> that the <see cref="T:System.Net.Sockets.Socket" /> is using for communications.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2042"><xref:System.Net.Sockets.Socket.LocalEndPoint%2A>屬性會取得<xref:System.Net.EndPoint>本機 IP 位址和連接埠編號，其中包含您<xref:System.Net.Sockets.Socket>繫結。</span><span class="sxs-lookup"><span data-stu-id="3831b-2042">The <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property gets an <xref:System.Net.EndPoint> that contains the local IP address and port number to which your <xref:System.Net.Sockets.Socket> is bound.</span></span> <span data-ttu-id="3831b-2043">您必須將此轉型<xref:System.Net.EndPoint>至<xref:System.Net.IPEndPoint>之前擷取任何資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2043">You must cast this <xref:System.Net.EndPoint> to an <xref:System.Net.IPEndPoint> before retrieving any information.</span></span> <span data-ttu-id="3831b-2044">您可以接著呼叫<xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType>方法來擷取本機<xref:System.Net.IPAddress>，和<xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType>方法來擷取本機連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2044">You can then call the <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> method to retrieve the local <xref:System.Net.IPAddress>, and the <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> method to retrieve the local port number.</span></span>  
  
 <span data-ttu-id="3831b-2045"><xref:System.Net.Sockets.Socket.LocalEndPoint%2A>進行呼叫之後，通常設定屬性<xref:System.Net.Sockets.Socket.Bind%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2045">The <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property is usually set after you make a call to the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span> <span data-ttu-id="3831b-2046">如果您允許系統在將通訊端的本機 IP 位址和連接埠號碼指派<xref:System.Net.Sockets.Socket.LocalEndPoint%2A>之後第一項 I/O 作業將會設定屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-2046">If you allow the system to assign your socket's local IP address and port number, the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property will be set after the first I/O operation.</span></span> <span data-ttu-id="3831b-2047">連線導向的通訊協定，第一項 I/O 作業會呼叫<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2047">For connection-oriented protocols, the first I/O operation would be a call to the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-2048">無連線的通訊協定，第一項 I/O 作業會是任何傳送或接收呼叫。</span><span class="sxs-lookup"><span data-stu-id="3831b-2048">For connectionless protocols, the first I/O operation would be any of the send or receive calls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2049">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2049">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2050">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2050">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2051">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2051">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2052">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2052">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2053">下列程式碼範例會擷取，並顯示本機和遠端端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-2053">The following code example retrieves and displays the local and remote endpoints.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#4)]
 [!code-csharp[Socket_Socket_Options#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#4)]
 [!code-vb[Socket_Socket_Options#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2054">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2054">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2055">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2055">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.EndPoint" />
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastLoopback : bool with get, set" Usage="System.Net.Sockets.Socket.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-2056">取得或設定值，指定輸出多點傳送封包是否會傳遞至傳送應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2056">Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-2057">如果 <see cref="T:System.Net.Sockets.Socket" /> 會接收輸出多點傳送封包，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2057">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> receives outgoing multicast packets; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2058">多點傳送是可擴充的方法，在網際網路上的多對多通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2058">Multicast is a scalable method for many-to-many communication on the Internet.</span></span> <span data-ttu-id="3831b-2059">處理序會訂閱的多點傳送位址;然後，任何已訂閱的程序所傳送的封包都會收到每個訂閱的多點傳送位址的程序。</span><span class="sxs-lookup"><span data-stu-id="3831b-2059">A process subscribes to a multicast address; then, any packets sent by a subscribed process are received by every other process subscribed to the multicast address.</span></span>  
  
 <span data-ttu-id="3831b-2060">傳輸控制通訊協定 (TCP) 通訊端上設定這個屬性會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="3831b-2060">Setting this property on a Transmission Control Protocol (TCP) socket will have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2061">下列程式碼範例示範使用<xref:System.Net.Sockets.Socket.MulticastLoopback%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-2061">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.MulticastLoopback%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#2)]
 [!code-csharp[SocketPropertyTester#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2062">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2062">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2063">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2063">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoDelay : bool with get, set" Usage="System.Net.Sockets.Socket.NoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-2064">取得或設定 <see cref="T:System.Boolean" /> 值，指定資料流 <see cref="T:System.Net.Sockets.Socket" /> 是否使用 Nagle 演算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2064">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the stream <see cref="T:System.Net.Sockets.Socket" /> is using the Nagle algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-2065">如果 <see cref="T:System.Net.Sockets.Socket" /> 使用 Nagle 演算法，則為 <see langword="false" />，否則為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2065">
              <see langword="false" /> if the <see cref="T:System.Net.Sockets.Socket" /> uses the Nagle algorithm; otherwise, <see langword="true" />.</span>
          </span>
          <span data-ttu-id="3831b-2066">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2066">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2067">Nagle 演算法被設計來減少網路流量造成緩衝小型封包然後結合並在某些情況下一個封包傳送給他們的通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-2067">The Nagle algorithm is designed to reduce network traffic by causing the socket to buffer small packets and then combine and send them in one packet under certain circumstances.</span></span> <span data-ttu-id="3831b-2068">TCP 封包是由 40 個位元組的標頭加上所傳送之資料所組成。</span><span class="sxs-lookup"><span data-stu-id="3831b-2068">A TCP packet consists of 40 bytes of header plus the data being sent.</span></span> <span data-ttu-id="3831b-2069">當小型資料封包傳送使用 TCP 時，TCP 標頭所產生的額外負荷可能會變得的網路流量的重要部分。在負載極高的網路中，所產生的這項負擔壅塞會導致遺失的資料包和重新傳輸，以及因壅塞的過多的傳播時間而定。</span><span class="sxs-lookup"><span data-stu-id="3831b-2069">When small packets of data are sent with TCP, the overhead resulting from the TCP header can become a significant part of the network traffic.On heavily loaded networks, the congestion resulting from this overhead can result in lost datagrams and retransmissions, as well as excessive propagation time caused by congestion.</span></span> <span data-ttu-id="3831b-2070">Nagle 演算法禁止傳送新的 TCP segmentswhen 新傳出資料抵達時向使用者如果在連接上的任何 previouslytransmitted 資料會維持未認可。</span><span class="sxs-lookup"><span data-stu-id="3831b-2070">The Nagle algorithm inhibits the sending of new TCP segmentswhen new outgoing data arrives from the user if any previouslytransmitted data on the connection remains unacknowledged.</span></span>  
  
 <span data-ttu-id="3831b-2071">大部分的網路應用程式應該使用 Nagle 演算法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2071">The majority of network applications should use the Nagle algorithm.</span></span>  
  
 <span data-ttu-id="3831b-2072">使用者資料包通訊協定 (UDP) 通訊端上設定這個屬性會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="3831b-2072">Setting this property on a User Datagram Protocol (UDP) socket will have no effect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2073">下列程式碼範例示範使用<xref:System.Net.Sockets.Socket.NoDelay%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-2073">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.NoDelay%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2074">嘗試存取 <see cref="T:System.Net.Sockets.Socket" /> 時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2074">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2075">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2075">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OSSupportsIPv4">
      <MemberSignature Language="C#" Value="public static bool OSSupportsIPv4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool OSSupportsIPv4" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.OSSupportsIPv4" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OSSupportsIPv4 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool OSSupportsIPv4 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.OSSupportsIPv4 : bool" Usage="System.Net.Sockets.Socket.OSSupportsIPv4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-2076">指出基礎作業系統和網路配置器是否支援網際網路通訊協定第 4 版 (IPv4)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2076">Indicates whether the underlying operating system and network adaptors support Internet Protocol version 4 (IPv4).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-2077">如果作業系統和網路配置器支援 IPv4 通訊協定則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2077">
              <see langword="true" /> if the operating system and network adaptors support the IPv4 protocol; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2078">作業系統可支援 IPv4 和 IPv6 通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-2078">The operating system may support both IPv4 and IPv6 protocols.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.OSSupportsIPv6" />
      </Docs>
    </Member>
    <Member MemberName="OSSupportsIPv6">
      <MemberSignature Language="C#" Value="public static bool OSSupportsIPv6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool OSSupportsIPv6" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.OSSupportsIPv6" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property OSSupportsIPv6 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool OSSupportsIPv6 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.OSSupportsIPv6 : bool" Usage="System.Net.Sockets.Socket.OSSupportsIPv6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-2079">指出基礎作業系統和網路配置器是否支援網際網路通訊協定第 6 版 (IPv6)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2079">Indicates whether the underlying operating system and network adaptors support Internet Protocol version 6 (IPv6).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-2080">如果作業系統和網路配置器支援 IPv6 通訊協定則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2080">
              <see langword="true" /> if the operating system and network adaptors support the IPv6 protocol; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2081">作業系統可支援 IPv4 和 IPv6 通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-2081">The operating system may support both IPv4 and IPv6 protocols.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.OSSupportsIPv4" />
      </Docs>
    </Member>
    <Member MemberName="Poll">
      <MemberSignature Language="C#" Value="public bool Poll (int microSeconds, System.Net.Sockets.SelectMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Poll(int32 microSeconds, valuetype System.Net.Sockets.SelectMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Poll (microSeconds As Integer, mode As SelectMode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Poll(int microSeconds, System::Net::Sockets::SelectMode mode);" />
      <MemberSignature Language="F#" Value="member this.Poll : int * System.Net.Sockets.SelectMode -&gt; bool" Usage="socket.Poll (microSeconds, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="microSeconds" Type="System.Int32" />
        <Parameter Name="mode" Type="System.Net.Sockets.SelectMode" />
      </Parameters>
      <Docs>
        <param name="microSeconds">
          <span data-ttu-id="3831b-2082">等待回應的時間，以微秒為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2082">The time to wait for a response, in microseconds.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="3831b-2083">其中一個 <see cref="T:System.Net.Sockets.SelectMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2083">One of the <see cref="T:System.Net.Sockets.SelectMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2084">決定 <see cref="T:System.Net.Sockets.Socket" /> 的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2084">Determines the status of the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2085">
            <see cref="T:System.Net.Sockets.Socket" /> 的狀態，根據從 <paramref name="mode" /> 參數中傳遞的輪詢模式值而定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2085">The status of the <see cref="T:System.Net.Sockets.Socket" /> based on the polling mode value passed in the <paramref name="mode" /> parameter.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="3831b-2086">模式</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2086">Mode</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="3831b-2087">傳回值</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2087">Return Value</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <see cref="F:System.Net.Sockets.SelectMode.SelectRead" />
              </term>
              <description>
                <span data-ttu-id="3831b-2088">如果已呼叫 <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> 且連接暫止時，則為 <see langword="true" />；</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2088">
                    <see langword="true" /> if <see cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" /> has been called and a connection is pending;</span>
                </span>
                <span data-ttu-id="3831b-2089">-或-</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2089">-or-</span>
                </span>
                <span data-ttu-id="3831b-2090">如果資料可供讀取，則為 <see langword="true" />；</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2090">
                    <see langword="true" /> if data is available for reading;</span>
                </span>
                <span data-ttu-id="3831b-2091">-或-</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2091">-or-</span>
                </span>
                <span data-ttu-id="3831b-2092">如果連接已經關閉、重設或結束，則為 <see langword="true" />；</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2092">
                    <see langword="true" /> if the connection has been closed, reset, or terminated;</span>
                </span>
                <span data-ttu-id="3831b-2093">否則，傳回 <see langword="false" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2093">otherwise, returns <see langword="false" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see cref="F:System.Net.Sockets.SelectMode.SelectWrite" />
              </term>
              <description>
                <span data-ttu-id="3831b-2094">如果處理 <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> 且已成功建立連接時，則為 <see langword="true" />；</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2094">
                    <see langword="true" />, if processing a <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />, and the connection has succeeded;</span>
                </span>
                <span data-ttu-id="3831b-2095">-或-</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2095">-or-</span>
                </span>
                <span data-ttu-id="3831b-2096">如果可以傳送資料，則為 <see langword="true" />；</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2096">
                    <see langword="true" /> if data can be sent;</span>
                </span>
                <span data-ttu-id="3831b-2097">否則，傳回 <see langword="false" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2097">otherwise, returns <see langword="false" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <see cref="F:System.Net.Sockets.SelectMode.SelectError" />
              </term>
              <description>
                <span data-ttu-id="3831b-2098">如果處理的 <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> 沒有封鎖且連接已失敗時，則為 <see langword="true" />；</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2098">
                    <see langword="true" /> if processing a <see cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" /> that does not block, and the connection has failed;</span>
                </span>
                <span data-ttu-id="3831b-2099">-或-</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2099">-or-</span>
                </span>
                <span data-ttu-id="3831b-2100">如果未設定 <see cref="F:System.Net.Sockets.SocketOptionName.OutOfBandInline" /> 且 Out-of-Band Data 可用時，則為 <see langword="true" />；</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2100">
                    <see langword="true" /> if <see cref="F:System.Net.Sockets.SocketOptionName.OutOfBandInline" /> is not set and out-of-band data is available;</span>
                </span>
                <span data-ttu-id="3831b-2101">否則，傳回 <see langword="false" />。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="3831b-2101">otherwise, returns <see langword="false" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2102"><xref:System.Net.Sockets.Socket.Poll%2A>方法會檢查的狀態<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2102">The <xref:System.Net.Sockets.Socket.Poll%2A> method will check the state of the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-2103">指定<xref:System.Net.Sockets.SelectMode.SelectRead?displayProperty=nameWithType>for`selectMode`參數，來判斷如果<xref:System.Net.Sockets.Socket>讀取。</span><span class="sxs-lookup"><span data-stu-id="3831b-2103">Specify <xref:System.Net.Sockets.SelectMode.SelectRead?displayProperty=nameWithType> for the `selectMode` parameter to determine if the <xref:System.Net.Sockets.Socket> is readable.</span></span> <span data-ttu-id="3831b-2104">指定<xref:System.Net.Sockets.SelectMode.SelectWrite?displayProperty=nameWithType>判斷<xref:System.Net.Sockets.Socket>是可寫入。</span><span class="sxs-lookup"><span data-stu-id="3831b-2104">Specify <xref:System.Net.Sockets.SelectMode.SelectWrite?displayProperty=nameWithType> to determine if the <xref:System.Net.Sockets.Socket> is writable.</span></span> <span data-ttu-id="3831b-2105">使用<xref:System.Net.Sockets.SelectMode.SelectError?displayProperty=nameWithType>偵測錯誤狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-2105">Use <xref:System.Net.Sockets.SelectMode.SelectError?displayProperty=nameWithType> to detect an error condition.</span></span> <span data-ttu-id="3831b-2106"><xref:System.Net.Sockets.Socket.Poll%2A> 將會封鎖執行，直到指定的時間長度，以測量`microseconds`，經過。</span><span class="sxs-lookup"><span data-stu-id="3831b-2106"><xref:System.Net.Sockets.Socket.Poll%2A> will block execution until the specified time period, measured in `microseconds`, elapses.</span></span> <span data-ttu-id="3831b-2107">設定`microSeconds`負整數，如果您想要無限期地等待回應的參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-2107">Set the `microSeconds` parameter to a negative integer if you would like to wait indefinitely for a response.</span></span> <span data-ttu-id="3831b-2108">如果您想要檢查多個通訊端的狀態，您可能會偏好使用<xref:System.Net.Sockets.Socket.Select%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2108">If you want to check the status of multiple sockets, you might prefer to use the <xref:System.Net.Sockets.Socket.Select%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2109">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2109">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2110">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2110">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2111">這個方法無法偵測某些類型的連線問題，例如中斷的網路纜線，或遠端主機已強制關閉。</span><span class="sxs-lookup"><span data-stu-id="3831b-2111">This method cannot detect certain kinds of connection problems, such as a broken network cable, or that the remote host was shut down ungracefully.</span></span> <span data-ttu-id="3831b-2112">您必須嘗試傳送或接收資料，以偵測這些類型的錯誤。</span><span class="sxs-lookup"><span data-stu-id="3831b-2112">You must attempt to send or receive data to detect these kinds of errors.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2113">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2113">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2114">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2114">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2115">下列程式碼範例會建立通訊端、 連接到伺服器，並使用<xref:System.Net.Sockets.Socket.Poll%2A>檢查通訊端的狀態。</span><span class="sxs-lookup"><span data-stu-id="3831b-2115">The following code example creates a socket, connects to a server, and uses <xref:System.Net.Sockets.Socket.Poll%2A> to check the status of the socket.</span></span>  
  
 [!code-cpp[SelectModeExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SelectModeExample/CPP/source.cpp#1)]
 [!code-csharp[SelectModeExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SelectModeExample/CS/source.cs#1)]
 [!code-vb[SelectModeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SelectModeExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-2116">
            <paramref name="mode" /> 參數不是其中一個 <see cref="T:System.Net.Sockets.SelectMode" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2116">The <paramref name="mode" /> parameter is not one of the <see cref="T:System.Net.Sockets.SelectMode" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2117">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2117">An error occurred when attempting to access the socket.</span>
          </span>
          <span data-ttu-id="3831b-2118">請參閱下面的＜備註＞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2118">See remarks below.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2119">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2119">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.SelectMode" />
        <altmember cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" />
      </Docs>
    </Member>
    <Member MemberName="ProtocolType">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.ProtocolType ProtocolType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.ProtocolType ProtocolType" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.ProtocolType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtocolType As ProtocolType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::ProtocolType ProtocolType { System::Net::Sockets::ProtocolType get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolType : System.Net.Sockets.ProtocolType" Usage="System.Net.Sockets.Socket.ProtocolType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.ProtocolType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-2120">取得 <see cref="T:System.Net.Sockets.Socket" /> 的通訊協定 (Protocol) 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2120">Gets the protocol type of the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-2121">其中一個 <see cref="T:System.Net.Sockets.ProtocolType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2121">One of the <see cref="T:System.Net.Sockets.ProtocolType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2122"><xref:System.Net.Sockets.Socket.ProtocolType%2A>屬性時，會設定<xref:System.Net.Sockets.Socket>會建立，並指定所使用的通訊協定<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2122">The <xref:System.Net.Sockets.Socket.ProtocolType%2A> property is set when the <xref:System.Net.Sockets.Socket> is created, and specifies the protocol used by that <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2123">下列程式碼範例會顯示<xref:System.Net.Sockets.AddressFamily>， <xref:System.Net.Sockets.SocketType>，和<xref:System.Net.Sockets.ProtocolType>到主控台。</span><span class="sxs-lookup"><span data-stu-id="3831b-2123">The following code example displays the <xref:System.Net.Sockets.AddressFamily>, <xref:System.Net.Sockets.SocketType>, and <xref:System.Net.Sockets.ProtocolType> to the console.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#3)]
 [!code-csharp[Socket_Socket_Options#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#3)]
 [!code-vb[Socket_Socket_Options#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Receive">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-2124">從已繫結的 <see cref="T:System.Net.Sockets.Socket" /> 接收資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2124">Receives data from a bound <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (buffer As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.Receive : byte[] -&gt; int" Usage="socket.Receive buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-2125">
            <see cref="T:System.Byte" /> 型別的陣列，為收到資料的存放位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2125">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2126">從已繫結的 <see cref="T:System.Net.Sockets.Socket" /> 接收資料至接收緩衝區中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2126">Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2127">收到的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2127">The number of bytes received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2128"><xref:System.Net.Sockets.Socket.Receive%2A>方法會將資料讀入緩衝區參數並傳回成功讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2128">The <xref:System.Net.Sockets.Socket.Receive%2A> method reads data into the buffer parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="3831b-2129">您可以呼叫<xref:System.Net.Sockets.Socket.Receive%2A>從連線導向和無連線通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-2129">You can call <xref:System.Net.Sockets.Socket.Receive%2A> from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="3831b-2130">這個多載只會要求您提供的接收緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3831b-2130">This overload only requires you to provide a receive buffer.</span></span> <span data-ttu-id="3831b-2131">緩衝區位移的預設值為 0，則大小會預設為參數長度的緩衝區，而<xref:System.Net.Sockets.SocketFlags>值預設為<xref:System.Net.Sockets.SocketFlags.None>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2131">The buffer offset defaults to 0, the size defaults to the length of the buffer parameter, and the <xref:System.Net.Sockets.SocketFlags> value defaults to <xref:System.Net.Sockets.SocketFlags.None>.</span></span>  
  
 <span data-ttu-id="3831b-2132">如果您使用連線導向的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>來連接遠端主機，或是<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線才能呼叫<xref:System.Net.Sockets.Socket.Receive%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2132">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="3831b-2133"><xref:System.Net.Sockets.Socket.Receive%2A>方法只會讀取來自遠端主機中所建立的資料<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2133">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-2134">如果您使用無連接的通訊協定，您也可以使用<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2134">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-2135"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> 可讓您接收任何主機從送達的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2135"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="3831b-2136">如果沒有資料可供讀取，<xref:System.Net.Sockets.Socket.Receive%2A>方法將會封鎖直到資料為止，除非使用已設定的逾時值<xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2136">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available, unless a time-out value was set by using <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-2137">如果已超過逾時值<xref:System.Net.Sockets.Socket.Receive%2A>呼叫會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2137">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2138">如果您是在非封鎖模式中，而且沒有使用中的資料以通訊協定堆疊緩衝區<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2138">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2139">您可以使用<xref:System.Net.Sockets.Socket.Available%2A>屬性來判斷資料是否可供讀取。</span><span class="sxs-lookup"><span data-stu-id="3831b-2139">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="3831b-2140">當<xref:System.Net.Sockets.Socket.Available%2A>是不是零，接收作業重試一次。</span><span class="sxs-lookup"><span data-stu-id="3831b-2140">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="3831b-2141">如果您使用連線導向<xref:System.Net.Sockets.Socket>，則<xref:System.Net.Sockets.Socket.Receive%2A>方法會讀取可供使用，但不超過緩衝區的大小的資料量。</span><span class="sxs-lookup"><span data-stu-id="3831b-2141">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available, up to the size of the buffer.</span></span> <span data-ttu-id="3831b-2142">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>與連接<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以及所有可用的資料已收到，<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-2142">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="3831b-2143">如果您使用無連接<xref:System.Net.Sockets.Socket>，<xref:System.Net.Sockets.Socket.Receive%2A>會從您在中指定的目的地位址讀取第一個加入佇列的資料包<xref:System.Net.Sockets.Socket.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2143">If you are using a connectionless <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> will read the first queued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="3831b-2144">如果您收到的資料包大於的大小`buffer`參數，`buffer`取得填滿與訊息的第一個部分，過多的資料都會遺失，<xref:System.Net.Sockets.SocketException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3831b-2144">If the datagram you receive is larger than the size of the `buffer` parameter, `buffer` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2145">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2145">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2146">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2146">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2147">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2147">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2148">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2148">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2149">下列程式碼範例會接收上已連接的資料<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2149">The following code example receives data on a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#1)]
 [!code-csharp[Socket_Sync_Send_Receive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#1)]
 [!code-vb[Socket_Sync_Send_Receive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2150">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2150">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2151">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2151">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2152">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2152">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-2153">呼叫堆疊中的呼叫端沒有所需的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2153">A caller in the call stack does not have the required permissions.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.SocketPermission">
          <span data-ttu-id="3831b-2154">接受來自網路的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2154">for accepting connections from the network.</span>
          </span>
          <span data-ttu-id="3831b-2155">關聯的列舉型別：<see cref="F:System.Net.NetworkAccess.Accept" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2155">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (buffers As IList(Of ArraySegment(Of Byte))) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers);" />
      <MemberSignature Language="F#" Value="member this.Receive : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; int" Usage="socket.Receive buffers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="buffers">
          <span data-ttu-id="3831b-2156">
            <see cref="T:System.ArraySegment`1" /> 型別的 <see cref="T:System.Byte" /> 清單，包含已接收的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2156">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the received data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2157">從已繫結的 <see cref="T:System.Net.Sockets.Socket" /> 接收資料至接收緩衝區清單中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2157">Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into the list of receive buffers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2158">收到的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2158">The number of bytes received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2159">這個方法會將資料讀入緩衝區參數，並傳回成功讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2159">This method reads data into the buffers parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="3831b-2160">您可以從連線導向和無連線通訊端呼叫。</span><span class="sxs-lookup"><span data-stu-id="3831b-2160">You can call from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="3831b-2161">這個多載會要求您提供一個或多個接收緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3831b-2161">This overload requires you to provide one or more receive buffers.</span></span>  
  
 <span data-ttu-id="3831b-2162">如果您使用連線導向的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>來連接遠端主機，或是<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線才能呼叫<xref:System.Net.Sockets.Socket.Receive%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2162">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="3831b-2163"><xref:System.Net.Sockets.Socket.Receive%2A>方法只會讀取來自中建立的遠端主機連接的資料<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2163">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host connection established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-2164">如果您使用無連接的通訊協定，您也可以使用<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2164">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-2165"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> 可讓您接收任何主機從送達的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2165"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="3831b-2166">如果沒有資料可供讀取，<xref:System.Net.Sockets.Socket.Receive%2A>方法將會封鎖直到資料為止，除非使用已設定的逾時值<xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2166">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available, unless a time-out value was set by using <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-2167">如果已超過逾時值<xref:System.Net.Sockets.Socket.Receive%2A>呼叫會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2167">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2168">如果您是在非封鎖模式中，而且沒有使用中的資料以通訊協定堆疊緩衝區<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2168">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2169">您可以使用<xref:System.Net.Sockets.Socket.Available%2A>屬性來判斷資料是否可供讀取。</span><span class="sxs-lookup"><span data-stu-id="3831b-2169">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="3831b-2170">當<xref:System.Net.Sockets.Socket.Available%2A>是不是零，接收作業重試一次。</span><span class="sxs-lookup"><span data-stu-id="3831b-2170">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="3831b-2171">如果您使用連線導向<xref:System.Net.Sockets.Socket>，則<xref:System.Net.Sockets.Socket.Receive%2A>方法會讀取可供使用，但不超過緩衝區的大小的資料量。</span><span class="sxs-lookup"><span data-stu-id="3831b-2171">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available, up to the size of the buffer.</span></span> <span data-ttu-id="3831b-2172">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>與連接<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以及所有可用的資料已收到，<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-2172">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="3831b-2173">如果您使用無連接<xref:System.Net.Sockets.Socket>，<xref:System.Net.Sockets.Socket.Receive%2A>會從您在中指定的目的地位址讀取第一個加入佇列的資料包<xref:System.Net.Sockets.Socket.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2173">If you are using a connectionless <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> will read the first enqueued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="3831b-2174">如果您收到的資料包大於的大小`buffers`參數，`buffers`取得填滿與訊息的第一個部分，過多的資料都會遺失，<xref:System.Net.Sockets.SocketException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3831b-2174">If the datagram you receive is larger than the size of the `buffers` parameter, `buffers` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2175">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2175">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2176">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2176">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="3831b-2177">**請注意**應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2177">**Note** This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2178">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2178">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Net.Sockets.Socket.Receive(System.Byte[])" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2179">
            <paramref name="buffer" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2179">The <paramref name="buffer" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2180">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2180">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2181">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2181">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="member this.Receive : Span&lt;byte&gt; -&gt; int" Usage="socket.Receive buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (byte[] buffer, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(unsigned int8[] buffer, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(cli::array &lt;System::Byte&gt; ^ buffer, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Receive : byte[] * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Receive (buffer, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-2182">
            <see cref="T:System.Byte" /> 型別的陣列，為收到資料的存放位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2182">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-2183">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2183">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2184">使用指定的 <see cref="T:System.Net.Sockets.Socket" />，從已繫結的 <see cref="T:System.Net.Sockets.SocketFlags" /> 接收資料至接收緩衝區中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2184">Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2185">收到的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2185">The number of bytes received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2186"><xref:System.Net.Sockets.Socket.Receive%2A>方法會將資料讀入緩衝區參數並傳回成功讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2186">The <xref:System.Net.Sockets.Socket.Receive%2A> method reads data into the buffer parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="3831b-2187">您可以呼叫<xref:System.Net.Sockets.Socket.Receive%2A>從連線導向和無連線通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-2187">You can call <xref:System.Net.Sockets.Socket.Receive%2A> from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="3831b-2188">這個多載只需要您提供的接收緩衝區和必要<xref:System.Net.Sockets.SocketFlags>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2188">This overload only requires you to provide a receive buffer and the necessary <xref:System.Net.Sockets.SocketFlags>.</span></span> <span data-ttu-id="3831b-2189">緩衝區位移的預設值為 0，且大小預設值為位元組參數的長度。</span><span class="sxs-lookup"><span data-stu-id="3831b-2189">The buffer offset defaults to 0, and the size defaults to the length of the byte parameter.</span></span>  
  
 <span data-ttu-id="3831b-2190">如果您使用連線導向的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>來連接遠端主機，或是<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線才能呼叫<xref:System.Net.Sockets.Socket.Receive%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2190">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="3831b-2191"><xref:System.Net.Sockets.Socket.Receive%2A>方法只會讀取來自遠端主機中所建立的資料<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2191">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-2192">如果您使用無連接的通訊協定，您也可以使用<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2192">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-2193"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> 可讓您接收任何主機從送達的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2193"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="3831b-2194">如果沒有資料可供讀取，<xref:System.Net.Sockets.Socket.Receive%2A>方法將會封鎖直到資料可供使用。</span><span class="sxs-lookup"><span data-stu-id="3831b-2194">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available.</span></span> <span data-ttu-id="3831b-2195">如果您是在非封鎖模式中，而且沒有可用的通訊協定堆疊緩衝區中的資料<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2195">If you are in non-blocking mode, and there is no data available in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2196">您可以使用<xref:System.Net.Sockets.Socket.Available%2A>屬性來判斷資料是否可供讀取。</span><span class="sxs-lookup"><span data-stu-id="3831b-2196">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="3831b-2197">當<xref:System.Net.Sockets.Socket.Available%2A>是不是零，再試一次您接收作業。</span><span class="sxs-lookup"><span data-stu-id="3831b-2197">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry your receive operation.</span></span>  
  
 <span data-ttu-id="3831b-2198">如果您使用連線導向<xref:System.Net.Sockets.Socket>，則<xref:System.Net.Sockets.Socket.Receive%2A>方法會讀取但不超過緩衝區的大小可用的資料量。</span><span class="sxs-lookup"><span data-stu-id="3831b-2198">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available up to the size of the buffer.</span></span> <span data-ttu-id="3831b-2199">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>與連接<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以及所有可用的資料已收到，<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-2199">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="3831b-2200">如果您使用無連接<xref:System.Net.Sockets.Socket>，<xref:System.Net.Sockets.Socket.Receive%2A>會從您在中指定的目的地位址讀取第一個加入佇列的資料包<xref:System.Net.Sockets.Socket.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2200">If you are using a connectionless <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> will read the first enqueued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="3831b-2201">如果您收到的資料包大於的大小`buffer`參數，`buffer`取得填滿與訊息的第一個部分，過多的資料都會遺失，<xref:System.Net.Sockets.SocketException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3831b-2201">If the datagram you receive is larger than the size of the `buffer` parameter, `buffer` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2202">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2202">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2203">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2203">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2204">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2204">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2205">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2205">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2206">下列程式碼範例會指定資料緩衝區，並<xref:System.Net.Sockets.SocketFlags>接收資料的連接<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2206">The following code example specifies a data buffer, and <xref:System.Net.Sockets.SocketFlags> for receiving data on a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#2)]
 [!code-csharp[Socket_Sync_Send_Receive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#2)]
 [!code-vb[Socket_Sync_Send_Receive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2207">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2207">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2208">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2208">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2209">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2209">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-2210">呼叫堆疊中的呼叫端沒有所需的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2210">A caller in the call stack does not have the required permissions.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.SocketPermission">
          <span data-ttu-id="3831b-2211">接受來自網路的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2211">for accepting connections from the network.</span>
          </span>
          <span data-ttu-id="3831b-2212">關聯的列舉型別：<see cref="F:System.Net.NetworkAccess.Accept" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2212">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Receive : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Receive (buffers, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
      </Parameters>
      <Docs>
        <param name="buffers">
          <span data-ttu-id="3831b-2213">
            <see cref="T:System.ArraySegment`1" /> 型別的 <see cref="T:System.Byte" /> 清單，包含已接收的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2213">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the received data.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-2214">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2214">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2215">使用指定的 <see cref="T:System.Net.Sockets.Socket" />，從已繫結的 <see cref="T:System.Net.Sockets.SocketFlags" /> 接收資料至接收緩衝區清單中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2215">Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into the list of receive buffers, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2216">收到的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2216">The number of bytes received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2217">這個方法會讀取資料到`buffers`參數並傳回成功讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2217">This method reads data into the `buffers` parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="3831b-2218">您可以從連線導向和無連線通訊端呼叫。</span><span class="sxs-lookup"><span data-stu-id="3831b-2218">You can call from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="3831b-2219">這個多載會要求您提供一個或多個接收緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3831b-2219">This overload requires you to provide one or more receive buffers.</span></span> <span data-ttu-id="3831b-2220"><xref:System.Net.Sockets.SocketFlags>值預設為<xref:System.Net.Sockets.SocketFlags.None>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2220">The <xref:System.Net.Sockets.SocketFlags> value defaults to <xref:System.Net.Sockets.SocketFlags.None>.</span></span>  
  
 <span data-ttu-id="3831b-2221">如果您使用連線導向的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>來連接遠端主機，或是<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線才能呼叫<xref:System.Net.Sockets.Socket.Receive%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2221">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="3831b-2222"><xref:System.Net.Sockets.Socket.Receive%2A>方法只會讀取來自中建立的遠端主機連接的資料<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2222">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host connection established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-2223">如果您使用無連接的通訊協定，您也可以使用<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2223">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-2224"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> 可讓您接收任何主機從送達的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2224"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="3831b-2225">如果沒有資料可供讀取，<xref:System.Net.Sockets.Socket.Receive%2A>方法將會封鎖直到資料為止，除非使用已設定的逾時值<xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2225">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available, unless a time-out value was set by using <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-2226">如果已超過逾時值<xref:System.Net.Sockets.Socket.Receive%2A>呼叫會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2226">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> call throws a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2227">如果您是在非封鎖模式中，而且沒有使用中的資料以通訊協定堆疊緩衝區<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2227">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2228">您可以使用<xref:System.Net.Sockets.Socket.Available%2A>屬性來判斷資料是否可供讀取。</span><span class="sxs-lookup"><span data-stu-id="3831b-2228">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="3831b-2229">當<xref:System.Net.Sockets.Socket.Available%2A>是不是零，接收作業重試一次。</span><span class="sxs-lookup"><span data-stu-id="3831b-2229">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="3831b-2230">如果您使用連線導向<xref:System.Net.Sockets.Socket>，則<xref:System.Net.Sockets.Socket.Receive%2A>方法會讀取可供使用，但不超過緩衝區的大小的資料量。</span><span class="sxs-lookup"><span data-stu-id="3831b-2230">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available, up to the size of the buffer.</span></span> <span data-ttu-id="3831b-2231">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>與連接<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以及所有可用的資料已收到，<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-2231">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="3831b-2232">如果您使用無連接<xref:System.Net.Sockets.Socket>，<xref:System.Net.Sockets.Socket.Receive%2A>會從您在中指定的目的地位址讀取第一個加入佇列的資料包<xref:System.Net.Sockets.Socket.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2232">If you are using a connectionless <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> will read the first enqueued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="3831b-2233">如果您收到的資料包大於的大小`buffers`參數，`buffers`取得填滿與訊息的第一個部分，過多的資料都會遺失，<xref:System.Net.Sockets.SocketException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3831b-2233">If the datagram you receive is larger than the size of the `buffers` parameter, `buffers` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2234">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2234">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2235">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2235">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2236">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2236">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2237">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2237">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2238">下列程式碼範例示範如何接收連線的資料<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2238">The following code example demonstrates how to receive data on a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.Socketgenerics#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Socketgenerics/CPP/sendgeneric.cpp#2)]
 [!code-csharp[System.Net.Sockets.Socketgenerics#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Socketgenerics/CS/sendgeneric.cs#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2239">
            <paramref name="buffers" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2239">
              <paramref name="buffers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3831b-2240">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2240">-or-</span>
          </span>
          <span data-ttu-id="3831b-2241">
            <paramref name="buffers" />.Count 為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2241">
              <paramref name="buffers" />.Count is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2242">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2242">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2243">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2243">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.SocketPermission">
          <span data-ttu-id="3831b-2244">接受來自網路的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2244">for accepting connections from the network.</span>
          </span>
          <span data-ttu-id="3831b-2245">關聯的列舉型別：<see cref="F:System.Net.NetworkAccess.Accept" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2245">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (Span&lt;byte&gt; buffer, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(valuetype System.Span`1&lt;unsigned int8&gt; buffer, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(Span&lt;System::Byte&gt; buffer, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Receive : Span&lt;byte&gt; * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Receive (buffer, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="socketFlags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (byte[] buffer, int size, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(unsigned int8[] buffer, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(cli::array &lt;System::Byte&gt; ^ buffer, int size, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Receive : byte[] * int * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Receive (buffer, size, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-2246">
            <see cref="T:System.Byte" /> 型別的陣列，為收到資料的存放位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2246">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-2247">要接收的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2247">The number of bytes to receive.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-2248">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2248">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2249">使用指定的 <see cref="T:System.Net.Sockets.Socket" />，從已繫結的 <see cref="T:System.Net.Sockets.SocketFlags" /> 將指定位元組數的資料接收至接收緩衝區中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2249">Receives the specified number of bytes of data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2250">收到的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2250">The number of bytes received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2251"><xref:System.Net.Sockets.Socket.Receive%2A>方法會讀取資料到`buffer`參數並傳回成功讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2251">The <xref:System.Net.Sockets.Socket.Receive%2A> method reads data into the `buffer` parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="3831b-2252">您可以呼叫<xref:System.Net.Sockets.Socket.Receive%2A>從連線導向和無連線通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-2252">You can call <xref:System.Net.Sockets.Socket.Receive%2A> from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="3831b-2253">這個多載只要求您提供的接收緩衝區中，您想要接收的位元組和必要的數目<xref:System.Net.Sockets.SocketFlags>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2253">This overload only requires you to provide a receive buffer, the number of bytes you want to receive, and the necessary <xref:System.Net.Sockets.SocketFlags>.</span></span>  
  
 <span data-ttu-id="3831b-2254">如果您使用連線導向的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>來連接遠端主機，或是<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線才能呼叫<xref:System.Net.Sockets.Socket.Receive%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2254">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="3831b-2255"><xref:System.Net.Sockets.Socket.Receive%2A>方法只會讀取來自遠端主機中所建立的資料<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2255">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-2256">如果您使用無連接的通訊協定，您也可以使用<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2256">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-2257"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> 可讓您接收任何主機從送達的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2257"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="3831b-2258">如果沒有資料可供讀取，<xref:System.Net.Sockets.Socket.Receive%2A>方法將會封鎖直到資料為止，除非使用已設定的逾時值<xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2258">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available, unless a time-out value was set by using <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-2259">如果已超過逾時值<xref:System.Net.Sockets.Socket.Receive%2A>呼叫會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2259">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2260">如果您是在非封鎖模式中，而且沒有使用中的資料以通訊協定堆疊緩衝區<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2260">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, The <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2261">您可以使用<xref:System.Net.Sockets.Socket.Available%2A>屬性來判斷資料是否可供讀取。</span><span class="sxs-lookup"><span data-stu-id="3831b-2261">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="3831b-2262">當<xref:System.Net.Sockets.Socket.Available%2A>是不是零，再試一次您接收作業。</span><span class="sxs-lookup"><span data-stu-id="3831b-2262">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry your receive operation.</span></span>  
  
 <span data-ttu-id="3831b-2263">如果您使用連線導向<xref:System.Net.Sockets.Socket>，則<xref:System.Net.Sockets.Socket.Receive%2A>方法會讀取可供使用，最多所指定的位元組數目的資料量`size`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-2263">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span> <span data-ttu-id="3831b-2264">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>與連接<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以及所有可用的資料已收到，<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-2264">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="3831b-2265">如果您使用無連接<xref:System.Net.Sockets.Socket>，<xref:System.Net.Sockets.Socket.Receive%2A>會從您在中指定的目的地位址讀取第一個加入佇列的資料包<xref:System.Net.Sockets.Socket.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2265">If you are using a connectionless <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> will read the first queued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="3831b-2266">如果您收到的資料包大於的大小`buffer`參數，`buffer`取得填滿與訊息的第一個部分，過多的資料都會遺失，<xref:System.Net.Sockets.SocketException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3831b-2266">If the datagram you receive is larger than the size of the `buffer` parameter, `buffer` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2267">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2267">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2268">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2268">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2269">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2269">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2270">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2270">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2271">下列接收到找到的資料`buffer`，並指定<xref:System.Net.Sockets.SocketFlags.None>如<xref:System.Net.Sockets.SocketFlags>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2271">The following receives the data found into `buffer`, and specifies <xref:System.Net.Sockets.SocketFlags.None> for <xref:System.Net.Sockets.SocketFlags>.</span></span>  
  
 [!code-cpp[Socket_Send_Recieve#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Send_Recieve/CPP/source.cpp#4)]
 [!code-csharp[Socket_Send_Recieve#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Send_Recieve/CS/source.cs#4)]
 [!code-vb[Socket_Send_Recieve#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Send_Recieve/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2272">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2272">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-2273">
            <paramref name="size" /> 超過 <paramref name="buffer" /> 的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2273">
              <paramref name="size" /> exceeds the size of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2274">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2274">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2275">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2275">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-2276">呼叫堆疊中的呼叫端沒有所需的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2276">A caller in the call stack does not have the required permissions.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.SocketPermission">
          <span data-ttu-id="3831b-2277">接受來自網路的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2277">for accepting connections from the network.</span>
          </span>
          <span data-ttu-id="3831b-2278">關聯的列舉型別：<see cref="F:System.Net.NetworkAccess.Accept" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2278">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.Receive : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.Receive (buffers, socketFlags, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffers">
          <span data-ttu-id="3831b-2279">
            <see cref="T:System.ArraySegment`1" /> 型別的 <see cref="T:System.Byte" /> 清單，包含已接收的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2279">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the received data.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-2280">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2280">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="errorCode">
          <span data-ttu-id="3831b-2281">
            <see cref="T:System.Net.Sockets.SocketError" /> 物件，儲存通訊端錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2281">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2282">使用指定的 <see cref="T:System.Net.Sockets.Socket" />，從已繫結的 <see cref="T:System.Net.Sockets.SocketFlags" /> 接收資料至接收緩衝區清單中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2282">Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into the list of receive buffers, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2283">收到的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2283">The number of bytes received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2284">這個方法會讀取資料到`buffers`參數並傳回成功讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2284">This method reads data into the `buffers` parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="3831b-2285">您可以從連線導向和無連線通訊端呼叫。</span><span class="sxs-lookup"><span data-stu-id="3831b-2285">You can call from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="3831b-2286">這個多載會要求您提供一個或多個接收緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3831b-2286">This overload requires you to provide one or more receive buffers.</span></span> <span data-ttu-id="3831b-2287"><xref:System.Net.Sockets.SocketFlags>值預設為<xref:System.Net.Sockets.SocketFlags.None>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2287">The <xref:System.Net.Sockets.SocketFlags> value defaults to <xref:System.Net.Sockets.SocketFlags.None>.</span></span>  
  
 <span data-ttu-id="3831b-2288">如果您使用連線導向的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>來連接遠端主機，或是<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線才能呼叫<xref:System.Net.Sockets.Socket.Receive%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2288">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="3831b-2289"><xref:System.Net.Sockets.Socket.Receive%2A>方法只會讀取來自中建立的遠端主機連接的資料<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2289">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host connection established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-2290">如果您使用無連接的通訊協定，您也可以使用<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2290">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-2291"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> 可讓您接收任何主機從送達的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2291"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="3831b-2292">如果沒有資料可供讀取，<xref:System.Net.Sockets.Socket.Receive%2A>方法將會封鎖直到資料為止，除非使用已設定的逾時值<xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2292">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available, unless a time-out value was set by using <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-2293">如果已超過逾時值<xref:System.Net.Sockets.Socket.Receive%2A>呼叫會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2293">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> call throws a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2294">如果您是在非封鎖模式中，而且沒有使用中的資料以通訊協定堆疊緩衝區<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2294">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2295">您可以使用<xref:System.Net.Sockets.Socket.Available%2A>屬性來判斷資料是否可供讀取。</span><span class="sxs-lookup"><span data-stu-id="3831b-2295">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="3831b-2296">當<xref:System.Net.Sockets.Socket.Available%2A>是不是零，接收作業重試一次。</span><span class="sxs-lookup"><span data-stu-id="3831b-2296">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="3831b-2297">如果您使用連線導向<xref:System.Net.Sockets.Socket>，則<xref:System.Net.Sockets.Socket.Receive%2A>方法會讀取可供使用，但不超過緩衝區的大小的資料量。</span><span class="sxs-lookup"><span data-stu-id="3831b-2297">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available, up to the size of the buffer.</span></span> <span data-ttu-id="3831b-2298">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>與連接<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以及所有可用的資料已收到，<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-2298">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="3831b-2299">如果您使用無連接<xref:System.Net.Sockets.Socket>，<xref:System.Net.Sockets.Socket.Receive%2A>會從您在中指定的目的地位址讀取第一個加入佇列的資料包<xref:System.Net.Sockets.Socket.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2299">If you are using a connectionless <xref:System.Net.Sockets.Socket>,<xref:System.Net.Sockets.Socket.Receive%2A> will read the first queued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="3831b-2300">如果您收到的資料包大於的大小`buffers`參數，`buffers`取得填滿與訊息的第一個部分，過多的資料都會遺失，<xref:System.Net.Sockets.SocketException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3831b-2300">If the datagram you receive is larger than the size of the `buffers` parameter, `buffers` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2301">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2301">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2302">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2302">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2303">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2303">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2304">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2304">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2305">
            <paramref name="buffers" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2305">
              <paramref name="buffers" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3831b-2306">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2306">-or-</span>
          </span>
          <span data-ttu-id="3831b-2307">
            <paramref name="buffers" />.Count 為零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2307">
              <paramref name="buffers" />.Count is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2308">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2308">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2309">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2309">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.SocketPermission">
          <span data-ttu-id="3831b-2310">接受來自網路的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2310">for accepting connections from the network.</span>
          </span>
          <span data-ttu-id="3831b-2311">關聯的列舉型別：<see cref="F:System.Net.NetworkAccess.Accept" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2311">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (Span&lt;byte&gt; buffer, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(valuetype System.Span`1&lt;unsigned int8&gt; buffer, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Span{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(Span&lt;System::Byte&gt; buffer, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.Receive : Span&lt;byte&gt; * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.Receive (buffer, socketFlags, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="socketFlags">To be added.</param>
        <param name="errorCode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Receive : byte[] * int * int * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Receive (buffer, offset, size, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-2312">類型 <see cref="T:System.Byte" /> 的陣列，此為接收資料的儲存位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2312">An array of type <see cref="T:System.Byte" /> that is the storage location for received data.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3831b-2313">
            <paramref name="buffer" /> 中存放已接收資料的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2313">The location in <paramref name="buffer" /> to store the received data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-2314">要接收的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2314">The number of bytes to receive.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-2315">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2315">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2316">使用指定的 <see cref="T:System.Net.Sockets.Socket" />，從已繫結的 <see cref="T:System.Net.Sockets.SocketFlags" /> 將指定的位元組數接收到接收緩衝區的指定位移位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2316">Receives the specified number of bytes from a bound <see cref="T:System.Net.Sockets.Socket" /> into the specified offset position of the receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2317">收到的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2317">The number of bytes received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2318"><xref:System.Net.Sockets.Socket.Receive%2A>方法會將資料讀入緩衝區參數並傳回成功讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2318">The <xref:System.Net.Sockets.Socket.Receive%2A> method reads data into the buffer parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="3831b-2319">您可以呼叫<xref:System.Net.Sockets.Socket.Receive%2A>從連線導向和無連線通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-2319">You can call <xref:System.Net.Sockets.Socket.Receive%2A> from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="3831b-2320">如果您使用連線導向的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>來連接遠端主機，或是<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線才能呼叫<xref:System.Net.Sockets.Socket.Receive%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2320">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="3831b-2321"><xref:System.Net.Sockets.Socket.Receive%2A>方法只會讀取來自遠端主機中所建立的資料<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2321">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-2322">如果您使用無連接的通訊協定，您也可以使用<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2322">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-2323"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> 可讓您接收任何主機從送達的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2323"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="3831b-2324">如果沒有資料可供讀取，<xref:System.Net.Sockets.Socket.Receive%2A>方法將會封鎖直到資料為止，除非使用已設定的逾時值<xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2324">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available, unless a time-out value was set by using <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-2325">如果已超過逾時值<xref:System.Net.Sockets.Socket.Receive%2A>呼叫會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2325">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2326">如果您是在非封鎖模式中，而且沒有使用中的資料以通訊協定堆疊緩衝區<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2326">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2327">嘗試存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="3831b-2327">An error occurred when attempting to access the socket.</span></span> <span data-ttu-id="3831b-2328">請參閱下方註解。</span><span class="sxs-lookup"><span data-stu-id="3831b-2328">See Remarks below.</span></span> <span data-ttu-id="3831b-2329">您可以使用<xref:System.Net.Sockets.Socket.Available%2A>屬性來判斷資料是否可供讀取。</span><span class="sxs-lookup"><span data-stu-id="3831b-2329">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="3831b-2330">當<xref:System.Net.Sockets.Socket.Available%2A>是不是零，接收作業重試一次。</span><span class="sxs-lookup"><span data-stu-id="3831b-2330">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="3831b-2331">如果您使用連線導向<xref:System.Net.Sockets.Socket>，則<xref:System.Net.Sockets.Socket.Receive%2A>方法會讀取可供使用，最多的 size 參數所指定的位元組數目的資料量。</span><span class="sxs-lookup"><span data-stu-id="3831b-2331">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available, up to the number of bytes specified by the size parameter.</span></span> <span data-ttu-id="3831b-2332">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>與連接<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以及所有可用的資料已收到，<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-2332">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="3831b-2333">如果您使用無連接<xref:System.Net.Sockets.Socket>，<xref:System.Net.Sockets.Socket.Receive%2A>會從您在中指定的目的地位址讀取第一個加入佇列的資料包<xref:System.Net.Sockets.Socket.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2333">If you are using a connectionless <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> will read the first queued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="3831b-2334">如果您收到的資料包大於的大小`buffer`參數，`buffer`取得填滿與訊息的第一個部分，過多的資料都會遺失，<xref:System.Net.Sockets.SocketException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3831b-2334">If the datagram you receive is larger than the size of the `buffer` parameter, `buffer` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2335">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2335">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2336">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2336">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2337">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2337">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2338">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2338">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2339">下列程式碼範例指定資料緩衝區、 位移、 大小和通訊端旗標接收上已連接的資料之前<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2339">The following code example specifies a data buffer, an offset, a size, and a socket flag before receiving data on a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#4)]
 [!code-csharp[Socket_Sync_Send_Receive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#4)]
 [!code-vb[Socket_Sync_Send_Receive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2340">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2340">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-2341">
            <paramref name="offset" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2341">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-2342">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2342">-or-</span>
          </span>
          <span data-ttu-id="3831b-2343">
            <paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2343">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="3831b-2344">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2344">-or-</span>
          </span>
          <span data-ttu-id="3831b-2345">
            <paramref name="size" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2345">
              <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-2346">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2346">-or-</span>
          </span>
          <span data-ttu-id="3831b-2347">
            <paramref name="size" /> 大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2347">
              <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2348">
            <paramref name="socketFlags" /> 不是有效的值組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2348">
              <paramref name="socketFlags" /> is not a valid combination of values.</span>
          </span>
          <span data-ttu-id="3831b-2349">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2349">-or-</span>
          </span>
          <span data-ttu-id="3831b-2350">未設定 <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2350">The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.</span>
          </span>
          <span data-ttu-id="3831b-2351">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2351">-or-</span>
          </span>
          <span data-ttu-id="3831b-2352">在存取 <see cref="T:System.Net.Sockets.Socket" /> 時發生作業系統錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2352">An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2353">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2353">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-2354">呼叫堆疊中的呼叫端沒有所需的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2354">A caller in the call stack does not have the required permissions.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.SocketPermission">
          <span data-ttu-id="3831b-2355">接受來自網路的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2355">for accepting connections from the network.</span>
          </span>
          <span data-ttu-id="3831b-2356">關聯的列舉型別：<see cref="F:System.Net.NetworkAccess.Accept" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2356">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public int Receive (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Receive(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Receive(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.Receive : byte[] * int * int * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.Receive (buffer, offset, size, socketFlags, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-2357">
            <see cref="T:System.Byte" /> 型別的陣列，為收到資料的存放位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2357">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3831b-2358">
            <paramref name="buffer" /> 參數中的位置，可儲存接收的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2358">The position in the <paramref name="buffer" /> parameter to store the received data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-2359">要接收的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2359">The number of bytes to receive.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-2360">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2360">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="errorCode">
          <span data-ttu-id="3831b-2361">
            <see cref="T:System.Net.Sockets.SocketError" /> 物件，儲存通訊端錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2361">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2362">使用指定的 <see cref="T:System.Net.Sockets.Socket" />，從已繫結的 <see cref="T:System.Net.Sockets.SocketFlags" /> 接收資料至接收緩衝區中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2362">Receives data from a bound <see cref="T:System.Net.Sockets.Socket" /> into a receive buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2363">收到的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2363">The number of bytes received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2364"><xref:System.Net.Sockets.Socket.Receive%2A>方法會將資料讀入緩衝區參數並傳回成功讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2364">The <xref:System.Net.Sockets.Socket.Receive%2A> method reads data into the buffer parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="3831b-2365">您可以呼叫<xref:System.Net.Sockets.Socket.Receive%2A>從連線導向和無連線通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-2365">You can call <xref:System.Net.Sockets.Socket.Receive%2A> from both connection-oriented and connectionless sockets.</span></span>  
  
 <span data-ttu-id="3831b-2366">如果您使用連線導向的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>來連接遠端主機，或是<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線才能呼叫<xref:System.Net.Sockets.Socket.Receive%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2366">If you are using a connection-oriented protocol, you must either call <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection prior to calling <xref:System.Net.Sockets.Socket.Receive%2A>.</span></span> <span data-ttu-id="3831b-2367"><xref:System.Net.Sockets.Socket.Receive%2A>方法只會讀取來自遠端主機中所建立的資料<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2367">The <xref:System.Net.Sockets.Socket.Receive%2A> method will only read data that arrives from the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-2368">如果您使用無連接的通訊協定，您也可以使用<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2368">If you are using a connectionless protocol, you can also use the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-2369"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> 可讓您接收任何主機從送達的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2369"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will allow you to receive data arriving from any host.</span></span>  
  
 <span data-ttu-id="3831b-2370">如果沒有資料可供讀取，<xref:System.Net.Sockets.Socket.Receive%2A>方法將會封鎖直到資料為止，除非使用已設定的逾時值<xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2370">If no data is available for reading, the <xref:System.Net.Sockets.Socket.Receive%2A> method will block until data is available, unless a time-out value was set by using <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-2371">如果已超過逾時值<xref:System.Net.Sockets.Socket.Receive%2A>呼叫會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2371">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2372">如果您是在非封鎖模式中，而且沒有使用中的資料以通訊協定堆疊緩衝區<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2372">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2373">嘗試存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="3831b-2373">An error occurred when attempting to access the socket.</span></span> <span data-ttu-id="3831b-2374">請參閱下方註解。</span><span class="sxs-lookup"><span data-stu-id="3831b-2374">See Remarks below.</span></span> <span data-ttu-id="3831b-2375">您可以使用<xref:System.Net.Sockets.Socket.Available%2A>屬性來判斷資料是否可供讀取。</span><span class="sxs-lookup"><span data-stu-id="3831b-2375">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="3831b-2376">當<xref:System.Net.Sockets.Socket.Available%2A>是不是零，接收作業重試一次。</span><span class="sxs-lookup"><span data-stu-id="3831b-2376">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="3831b-2377">如果您使用連線導向<xref:System.Net.Sockets.Socket>，則<xref:System.Net.Sockets.Socket.Receive%2A>方法會讀取可供使用，最多的 size 參數所指定的位元組數目的資料量。</span><span class="sxs-lookup"><span data-stu-id="3831b-2377">If you are using a connection-oriented <xref:System.Net.Sockets.Socket>, the <xref:System.Net.Sockets.Socket.Receive%2A> method will read as much data as is available, up to the number of bytes specified by the size parameter.</span></span> <span data-ttu-id="3831b-2378">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>與連接<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以及所有可用的資料已收到，<xref:System.Net.Sockets.Socket.Receive%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-2378">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.Receive%2A> method will complete immediately and return zero bytes.</span></span>  
  
 <span data-ttu-id="3831b-2379">如果您使用無連接<xref:System.Net.Sockets.Socket>，<xref:System.Net.Sockets.Socket.Receive%2A>會從您在中指定的目的地位址讀取第一個加入佇列的資料包<xref:System.Net.Sockets.Socket.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2379">If you are using a connectionless <xref:System.Net.Sockets.Socket>, <xref:System.Net.Sockets.Socket.Receive%2A> will read the first queued datagram from the destination address you specify in the <xref:System.Net.Sockets.Socket.Connect%2A> method.</span></span> <span data-ttu-id="3831b-2380">如果您收到的資料包大於的大小`buffer`參數，`buffer`取得填滿與訊息的第一個部分，過多的資料都會遺失，<xref:System.Net.Sockets.SocketException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3831b-2380">If the datagram you receive is larger than the size of the `buffer` parameter, `buffer` gets filled with the first part of the message, the excess data is lost and a <xref:System.Net.Sockets.SocketException> is thrown.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2381">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2381">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2382">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2382">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2383">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2383">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2384">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2384">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2385">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2385">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-2386">
            <paramref name="offset" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2386">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-2387">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2387">-or-</span>
          </span>
          <span data-ttu-id="3831b-2388">
            <paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2388">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="3831b-2389">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2389">-or-</span>
          </span>
          <span data-ttu-id="3831b-2390">
            <paramref name="size" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2390">
              <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-2391">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2391">-or-</span>
          </span>
          <span data-ttu-id="3831b-2392">
            <paramref name="size" /> 大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2392">
              <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2393">
            <paramref name="socketFlags" /> 不是有效的值組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2393">
              <paramref name="socketFlags" /> is not a valid combination of values.</span>
          </span>
          <span data-ttu-id="3831b-2394">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2394">-or-</span>
          </span>
          <span data-ttu-id="3831b-2395">未設定 <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2395">The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property is not set.</span>
          </span>
          <span data-ttu-id="3831b-2396">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2396">-or-</span>
          </span>
          <span data-ttu-id="3831b-2397">在存取 <see cref="T:System.Net.Sockets.Socket" /> 時發生作業系統錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2397">An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2398">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2398">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-2399">呼叫堆疊中的呼叫端沒有所需的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2399">A caller in the call stack does not have the required permissions.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.SocketPermission">
          <span data-ttu-id="3831b-2400">接受來自網路的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2400">for accepting connections from the network.</span>
          </span>
          <span data-ttu-id="3831b-2401">關聯的列舉型別：<see cref="F:System.Net.NetworkAccess.Accept" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2401">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public bool ReceiveAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReceiveAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReceiveAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.ReceiveAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.ReceiveAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3831b-2402">
            <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件，用於這個非同步通訊端作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2402">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2403">開始非同步要求，以接收來自已連接的 <see cref="T:System.Net.Sockets.Socket" /> 物件的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2403">Begins an asynchronous request to receive data from a connected <see cref="T:System.Net.Sockets.Socket" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2404">如果 I/O 作業暫止，則傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2404">Returns <see langword="true" /> if the I/O operation is pending.</span>
          </span>
          <span data-ttu-id="3831b-2405">作業完成時會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2405">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span>
          </span>
          <span data-ttu-id="3831b-2406">如果 I/O 作業同步完成，則傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2406">Returns <see langword="false" /> if the I/O operation completed synchronously.</span>
          </span>
          <span data-ttu-id="3831b-2407">在這個情況下，就不會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，而在方法呼叫傳回後會立即檢查做為參數傳遞的 <paramref name="e" /> 物件，以擷取作業的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2407">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2408"><xref:System.Net.Sockets.Socket.ReceiveAsync%2A>方法可在連線通訊端或繫結的無連線通訊端和用來讀取內送資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2408">The <xref:System.Net.Sockets.Socket.ReceiveAsync%2A> method is used on connected sockets or bound connectionless sockets and is used to read incoming data.</span></span> <span data-ttu-id="3831b-2409">必須知道通訊端的本機位址。</span><span class="sxs-lookup"><span data-stu-id="3831b-2409">The socket's local address must be known.</span></span>  
  
 <span data-ttu-id="3831b-2410">繫結的無連線通訊端，此函式會限制已接受已接收的訊息的位址。</span><span class="sxs-lookup"><span data-stu-id="3831b-2410">For bound connectionless sockets, this function restricts the addresses from which received messages are accepted.</span></span> <span data-ttu-id="3831b-2411">函式只會傳回在連接中指定的遠端位址的訊息。</span><span class="sxs-lookup"><span data-stu-id="3831b-2411">The function only returns messages from the remote address specified in the connection.</span></span> <span data-ttu-id="3831b-2412">以無訊息模式已捨棄來自其他位址的訊息。</span><span class="sxs-lookup"><span data-stu-id="3831b-2412">Messages from other addresses are silently discarded.</span></span>  
  
 <span data-ttu-id="3831b-2413"><xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A?displayProperty=nameWithType>屬性上的`e`參數提供的視窗通訊端服務提供者的其他讀取要求的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2413">The <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A?displayProperty=nameWithType> property on the `e` parameter provides the Window Sockets service provider with additional information about the read request.</span></span> <span data-ttu-id="3831b-2414">如需如何使用此參數的詳細資訊，請參閱<xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2414">For more information about how to use this parameter, see <xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3831b-2415">下列的屬性和事件<xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType>物件，才能成功呼叫這個方法：</span><span class="sxs-lookup"><span data-stu-id="3831b-2415">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required to successfully call this method:</span></span>  
  
-   <span data-ttu-id="3831b-2416"><xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> 或 <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3831b-2416"><xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> or <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A?displayProperty=nameWithType></span></span>  
  
-   <span data-ttu-id="3831b-2417"><xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> 如果<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType>設定</span><span class="sxs-lookup"><span data-stu-id="3831b-2417"><xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> if <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> is set</span></span>  
  
-   <span data-ttu-id="3831b-2418"><xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType> 如果<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType>設定</span><span class="sxs-lookup"><span data-stu-id="3831b-2418"><xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType> if <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> is set</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
 <span data-ttu-id="3831b-2419">呼叫端可能會設定<xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType>呼叫之前所需的任何使用者狀態物件的屬性<xref:System.Net.Sockets.Socket.ReceiveAsync%2A>方法，如此會在回呼方法中擷取資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2419">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="3831b-2420">如果回呼需要比單一物件的詳細資訊，就可以建立小型的類別來保存為成員的其他必要的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2420">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="3831b-2421">位元組資料流樣式的通訊端，內送資料被放入緩衝區，直到緩衝區已滿、 關閉連線，或已用完內部緩衝的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2421">For byte stream-style sockets, incoming data is placed into the buffer until the buffer is filled, the connection is closed, or the internally buffered data is exhausted.</span></span>  
  
 <span data-ttu-id="3831b-2422">訊息導向的通訊端，內送訊息會放入之前的相關聯的緩衝區大小總計的緩衝區`e`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-2422">For message-oriented sockets, an incoming message is placed into the buffer up to the total size of the buffer associated with the `e` parameter.</span></span> <span data-ttu-id="3831b-2423">如果訊息大於緩衝區，緩衝區會填入訊息的第一個部分。</span><span class="sxs-lookup"><span data-stu-id="3831b-2423">If the message is larger than the buffer, the buffer is filled with the first part of the message.</span></span>  
  
 <span data-ttu-id="3831b-2424">連線導向的通訊端，<xref:System.Net.Sockets.Socket.ReceiveAsync%2A>方法可以指定其中一種取決於通訊端是位元組資料流或訊息導向的兩個此虛擬電路正常終止。</span><span class="sxs-lookup"><span data-stu-id="3831b-2424">For connection-oriented sockets, the <xref:System.Net.Sockets.Socket.ReceiveAsync%2A> method can indicate the graceful termination of the virtual circuit in one of two ways that depend on whether the socket is byte stream or message oriented.</span></span> <span data-ttu-id="3831b-2425">已讀取的零位元組位元組資料流，表示正常關閉，以往會讀取任何更多的位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-2425">For byte streams, zero bytes having been read indicates graceful closure and that no more bytes will ever be read.</span></span> <span data-ttu-id="3831b-2426">訊息導向通訊端，其中通常是可允許零位元組的訊息，如<xref:System.Net.Sockets.SocketException>與<xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType>設為原生的 Winsock WSAEDISCON 錯誤程式碼 (10101) 用來表示非失誤性結束。</span><span class="sxs-lookup"><span data-stu-id="3831b-2426">For message-oriented sockets, where a zero byte message is often allowable, a <xref:System.Net.Sockets.SocketException> with the <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType> set to the native Winsock WSAEDISCON error code (10101) is used to indicate graceful closure.</span></span> <span data-ttu-id="3831b-2427">在任何情況下，<xref:System.Net.Sockets.SocketException>與<xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType>設為原生的 Winsock WSAECONNRESET 錯誤碼 (10054) 會指出發生失敗的關閉。</span><span class="sxs-lookup"><span data-stu-id="3831b-2427">In any case, a <xref:System.Net.Sockets.SocketException> with the <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType> set to the native Winsock WSAECONNRESET error code (10054) indicates an abortive close has occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-2428">引數無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2428">An argument was invalid.</span>
          </span>
          <span data-ttu-id="3831b-2429">
            <paramref name="e" /> 參數上的 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 或 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 屬性必須參考有效的緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2429">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> or <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> properties on the <paramref name="e" /> parameter must reference valid buffers.</span>
          </span>
          <span data-ttu-id="3831b-2430">這兩個屬性可能有一個已經設定，但不會同時都已設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2430">One or the other of these properties may be set, but not both at the same time.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-2431">通訊端作業已使用 <paramref name="e" /> 參數內指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件正在進行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2431">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-2432">這個方法需要 Windows XP (含) 以後版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2432">Windows XP or later is required for this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2433">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2433">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2434">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2434">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.Socket.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-2435">取得或設定值，指定 <see cref="T:System.Net.Sockets.Socket" /> 之接收緩衝區的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2435">Gets or sets a value that specifies the size of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-2436">
            <see cref="T:System.Int32" />，包含接收緩衝區的大小 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2436">An <see cref="T:System.Int32" /> that contains the size, in bytes, of the receive buffer.</span>
          </span>
          <span data-ttu-id="3831b-2437">預設值為 8192。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2437">The default is 8192.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2438">較大的緩衝區大小可能減少的空白通知 （TCP 封包，沒有資料部分），但也可能會延遲連線困難的辨識。</span><span class="sxs-lookup"><span data-stu-id="3831b-2438">A larger buffer size potentially reduces the number of empty acknowledgements (TCP packets with no data portion), but might also delay the recognition of connection difficulties.</span></span> <span data-ttu-id="3831b-2439">請考慮增加緩衝區大小，如果您正在傳送大型檔案，或您使用的高頻寬、 高延遲連線 （例如衛星寬頻提供者。）</span><span class="sxs-lookup"><span data-stu-id="3831b-2439">Consider increasing the buffer size if you are transferring large files, or you are using a high bandwidth, high latency connection (such as a satellite broadband provider.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2440">下列程式碼範例示範使用<xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-2440">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.ReceiveBufferSize%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2441">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2441">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2442">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2442">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-2443">為設定作業指定的值小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2443">The value specified for a set operation is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReceiveFrom">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-2444">接收資料包以及儲存來源端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2444">Receives a datagram and stores the source endpoint.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReceiveFrom">
      <MemberSignature Language="C#" Value="public int ReceiveFrom (byte[] buffer, ref System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReceiveFrom(unsigned int8[] buffer, class System.Net.EndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveFrom (buffer As Byte(), ByRef remoteEP As EndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReceiveFrom(cli::array &lt;System::Byte&gt; ^ buffer, System::Net::EndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.ReceiveFrom : byte[] *  -&gt; int" Usage="socket.ReceiveFrom (buffer, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-2445">類型 <see cref="T:System.Byte" /> 的陣列，此為接收資料的儲存位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2445">An array of type <see cref="T:System.Byte" /> that is the storage location for received data.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="3831b-2446">以傳址方式傳遞的 <see cref="T:System.Net.EndPoint" />，表示遠端伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2446">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2447">接收資料包至資料緩衝區中，並儲存端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2447">Receives a datagram into the data buffer and stores the endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2448">收到的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2448">The number of bytes received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2449"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法會讀取資料到`buffer`參數，會傳回成功讀取的位元組數目，並擷取資料已傳送遠端主機端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-2449">The <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method reads data into the `buffer` parameter, returns the number of bytes successfully read, and captures the remote host endpoint from which the data was sent.</span></span> <span data-ttu-id="3831b-2450">這個方法很有用，如果您想要收到未知的主機或多個主控件的無連接的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-2450">This method is useful if you intend to receive connectionless datagrams from an unknown host or multiple hosts.</span></span>  
  
 <span data-ttu-id="3831b-2451">這個多載只要求您提供接收`buffer`，並有<xref:System.Net.EndPoint>表示遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-2451">This overload only requires you to provide a receive `buffer`, and an <xref:System.Net.EndPoint> that represents the remote host.</span></span> <span data-ttu-id="3831b-2452">緩衝區位移為 0 的預設值。</span><span class="sxs-lookup"><span data-stu-id="3831b-2452">The buffer offset defaults to 0.</span></span> <span data-ttu-id="3831b-2453">大小的預設值的長度`buffer`參數與`socketFlags`值預設為<xref:System.Net.Sockets.SocketFlags.None>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2453">The size defaults to the length of the `buffer` parameter and the `socketFlags` value defaults to <xref:System.Net.Sockets.SocketFlags.None>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2454">然後再呼叫<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>，您必須明確地繫結<xref:System.Net.Sockets.Socket>本機端點使用<xref:System.Net.Sockets.Socket.Bind%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2454">Before calling <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>, you must explicitly bind the <xref:System.Net.Sockets.Socket> to a local endpoint using the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span> <span data-ttu-id="3831b-2455">如果您未這麼做，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2455">If you do not, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="3831b-2456">無連接的通訊協定，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>會讀取到區域網路緩衝區收到第一個加入佇列的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-2456">With connectionless protocols, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read the first enqueued datagram received into the local network buffer.</span></span> <span data-ttu-id="3831b-2457">如果您收到的資料包大於的大小`buffer`，則<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法將會填滿`buffer`盡可能是盡可能，，並擲回的訊息與<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2457">If the datagram you receive is larger than the size of `buffer`, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will fill `buffer` with as much of the message as is possible, and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2458">如果您使用的不可靠的通訊協定，超過的資料將會遺失。</span><span class="sxs-lookup"><span data-stu-id="3831b-2458">If you are using an unreliable protocol, the excess data will be lost.</span></span> <span data-ttu-id="3831b-2459">如果您使用可靠的通訊協定、 過多的資料會保留由服務提供者，而且您可以呼叫來擷取<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>夠大的緩衝區的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2459">If you are using a reliable protocol, the excess data will be retained by the service provider and you can retrieve it by calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method with a large enough buffer.</span></span>  
  
 <span data-ttu-id="3831b-2460">如果沒有資料可供讀取，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法將會封鎖直到資料可供使用。</span><span class="sxs-lookup"><span data-stu-id="3831b-2460">If no data is available for reading, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will block until data is available.</span></span> <span data-ttu-id="3831b-2461">如果您是在非封鎖模式中，而且沒有使用中的資料以通訊協定堆疊緩衝區<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法會立即完成，並擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2461">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2462">您可以使用<xref:System.Net.Sockets.Socket.Available%2A>屬性來判斷資料是否可供讀取。</span><span class="sxs-lookup"><span data-stu-id="3831b-2462">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="3831b-2463">當<xref:System.Net.Sockets.Socket.Available%2A>是不是零，接收作業重試一次。</span><span class="sxs-lookup"><span data-stu-id="3831b-2463">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="3831b-2464">雖然<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>適用於無連線的通訊協定，您可以使用連線導向的通訊協定以及。</span><span class="sxs-lookup"><span data-stu-id="3831b-2464">Although <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> is intended for connectionless protocols, you can use a connection-oriented protocol as well.</span></span> <span data-ttu-id="3831b-2465">如果您選擇這樣做，您必須先請建立遠端主機連接藉由呼叫<xref:System.Net.Sockets.Socket.Connect%2A>方法，或接受連入遠端主機連線，藉由呼叫<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2465">If you choose to do so, you must first either establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming remote host connection by calling the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-2466">如果您不要建立或接受連接，然後再呼叫<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法，將會取得<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2466">If you do not establish or accept a connection before calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method, you will get a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2467">您也可以建立預設遠端主機的無連線的通訊協定，才能呼叫<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2467">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-2468">在這些情況下，任一<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法將會忽略`remoteEP`參數和只接收來自已連接的資料或預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-2468">In either of these cases, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will ignore the `remoteEP` parameter and only receive data from the connected or default remote host.</span></span>  
  
 <span data-ttu-id="3831b-2469">使用連線導向的通訊端<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>將讀取的大小可用的資料量`buffer`。</span><span class="sxs-lookup"><span data-stu-id="3831b-2469">With connection-oriented sockets, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read as much data as is available up to the size of `buffer`.</span></span> <span data-ttu-id="3831b-2470">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>與連接<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以及所有可用的資料已收到，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-2470">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and return zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2471">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2471">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2472">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2472">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2473"><xref:System.Net.Sockets.AddressFamily>的<xref:System.Net.EndPoint>用於<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>必須符合<xref:System.Net.Sockets.AddressFamily>的<xref:System.Net.EndPoint>用於<xref:System.Net.Sockets.Socket.SendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2473">The <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> needs to match the <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2474">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2474">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2475">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2475">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2476">下列程式碼範例會將無資料包 (datagram) 接收遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-2476">The following code example receives a connectionless datagram from a remote host.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#9](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#9)]
 [!code-csharp[Socket_Sync_Send_Receive#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#9)]
 [!code-vb[Socket_Sync_Send_Receive#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2477">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2477">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3831b-2478">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2478">-or-</span>
          </span>
          <span data-ttu-id="3831b-2479">
            <paramref name="remoteEP" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2479">
              <paramref name="remoteEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2480">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2480">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2481">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2481">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-2482">呼叫堆疊中的呼叫端沒有所需的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2482">A caller in the call stack does not have the required permissions.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.SocketPermission">
          <span data-ttu-id="3831b-2483">接受來自網路的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2483">for accepting connections from the network.</span>
          </span>
          <span data-ttu-id="3831b-2484">關聯的列舉型別：<see cref="F:System.Net.NetworkAccess.Accept" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2484">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveFrom">
      <MemberSignature Language="C#" Value="public int ReceiveFrom (byte[] buffer, System.Net.Sockets.SocketFlags socketFlags, ref System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReceiveFrom(unsigned int8[] buffer, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReceiveFrom(cli::array &lt;System::Byte&gt; ^ buffer, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.ReceiveFrom : byte[] * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.ReceiveFrom (buffer, socketFlags, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-2485">
            <see cref="T:System.Byte" /> 型別的陣列，為收到資料的存放位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2485">An array of type <see cref="T:System.Byte" /> that is the storage location for the received data.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-2486">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2486">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="3831b-2487">以傳址方式傳遞的 <see cref="T:System.Net.EndPoint" />，表示遠端伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2487">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2488">使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" />，接收資料包至資料緩衝區中，並儲存端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2488">Receives a datagram into the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2489">收到的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2489">The number of bytes received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2490"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法會讀取資料到`buffer`參數，會傳回成功讀取的位元組數目，並擷取資料已傳送遠端主機端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-2490">The <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method reads data into the `buffer` parameter, returns the number of bytes successfully read, and captures the remote host endpoint from which the data was sent.</span></span> <span data-ttu-id="3831b-2491">這個方法很有用，如果您想要收到未知的主機或多個主控件的無連接的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-2491">This method is useful if you intend to receive connectionless datagrams from an unknown host or multiple hosts.</span></span>  
  
 <span data-ttu-id="3831b-2492">這個多載只要求您提供必要的接收緩衝區<xref:System.Net.Sockets.SocketFlags>，並有<xref:System.Net.EndPoint>表示遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-2492">This overload only requires you to provide a receive buffer, the necessary <xref:System.Net.Sockets.SocketFlags>, and an <xref:System.Net.EndPoint> that represents the remote host.</span></span> <span data-ttu-id="3831b-2493">位移的預設值為 0，則大小會預設為緩衝區參數的長度。</span><span class="sxs-lookup"><span data-stu-id="3831b-2493">The offset defaults to 0 and the size defaults to the length of the buffer parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2494">然後再呼叫<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>，您必須明確地繫結<xref:System.Net.Sockets.Socket>本機端點使用<xref:System.Net.Sockets.Socket.Bind%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2494">Before calling <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>, you must explicitly bind the <xref:System.Net.Sockets.Socket> to a local endpoint using the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span> <span data-ttu-id="3831b-2495">如果您未這麼做，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2495">If you do not, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="3831b-2496">無連接的通訊協定，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>會讀取到區域網路緩衝區收到第一個加入佇列的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-2496">With connectionless protocols, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read the first enqueued datagram received into the local network buffer.</span></span> <span data-ttu-id="3831b-2497">如果您收到的資料包大於的大小`buffer`，則<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法將會填滿`buffer`盡可能是盡可能，，並擲回的訊息與<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2497">If the datagram you receive is larger than the size of `buffer`, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will fill `buffer` with as much of the message as is possible, and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2498">如果您使用的不可靠的通訊協定，超過的資料將會遺失。</span><span class="sxs-lookup"><span data-stu-id="3831b-2498">If you are using an unreliable protocol, the excess data will be lost.</span></span> <span data-ttu-id="3831b-2499">如果您使用可靠的通訊協定、 過多的資料會保留由服務提供者，而且您可以呼叫來擷取<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>夠大的緩衝區的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2499">If you are using a reliable protocol, the excess data will be retained by the service provider and you can retrieve it by calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method with a large enough buffer.</span></span>  
  
 <span data-ttu-id="3831b-2500">如果沒有資料可供讀取，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法將會封鎖直到資料可供使用。</span><span class="sxs-lookup"><span data-stu-id="3831b-2500">If no data is available for reading, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will block until data is available.</span></span> <span data-ttu-id="3831b-2501">如果您是在非封鎖模式中，而且沒有使用中的資料以通訊協定堆疊緩衝區<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法會立即完成，並擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2501">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2502">您可以使用<xref:System.Net.Sockets.Socket.Available%2A>屬性來判斷資料是否可供讀取。</span><span class="sxs-lookup"><span data-stu-id="3831b-2502">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="3831b-2503">當<xref:System.Net.Sockets.Socket.Available%2A>是不是零，接收作業重試一次。</span><span class="sxs-lookup"><span data-stu-id="3831b-2503">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="3831b-2504">雖然<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>適用於無連線的通訊協定，您可以使用連線導向的通訊協定以及。</span><span class="sxs-lookup"><span data-stu-id="3831b-2504">Although <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> is intended for connectionless protocols, you can use a connection-oriented protocol as well.</span></span> <span data-ttu-id="3831b-2505">如果您選擇這樣做，您必須先請建立遠端主機連接藉由呼叫<xref:System.Net.Sockets.Socket.Connect%2A>方法，或接受連入遠端主機連線，藉由呼叫<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2505">If you choose to do so, you must first either establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming remote host connection by calling the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-2506">如果您不要建立或接受連接，然後再呼叫<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法，將會取得<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2506">If you do not establish or accept a connection before calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method, you will get a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2507">您也可以建立預設遠端主機的無連線的通訊協定，才能呼叫<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2507">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-2508">在這些情況下，任一<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法將會忽略`remoteEP`參數和只接收來自已連接的資料或預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-2508">In either of these cases, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will ignore the `remoteEP` parameter and only receive data from the connected or default remote host.</span></span>  
  
 <span data-ttu-id="3831b-2509">使用連線導向的通訊端<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>將讀取的大小可用的資料量`buffer`。</span><span class="sxs-lookup"><span data-stu-id="3831b-2509">With connection-oriented sockets, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read as much data as is available up to the size of `buffer`.</span></span> <span data-ttu-id="3831b-2510">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>與連接<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以及所有可用的資料已收到，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-2510">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been Received, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and return zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2511">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2511">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2512">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2512">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2513"><xref:System.Net.Sockets.AddressFamily>的<xref:System.Net.EndPoint>用於<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>必須符合<xref:System.Net.Sockets.AddressFamily>的<xref:System.Net.EndPoint>用於<xref:System.Net.Sockets.Socket.SendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2513">The <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> needs to match the <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2514">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2514">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2515">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2515">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2516">下列程式碼範例會將無資料包 (datagram) 接收遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-2516">The following code example receives a connectionless datagram from a remote host.</span></span> <span data-ttu-id="3831b-2517"><xref:System.Net.Sockets.SocketFlags> 傳遞至<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2517"><xref:System.Net.Sockets.SocketFlags> are passed to the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#10)]
 [!code-csharp[Socket_Sync_Send_Receive#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#10)]
 [!code-vb[Socket_Sync_Send_Receive#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2518">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2518">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3831b-2519">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2519">-or-</span>
          </span>
          <span data-ttu-id="3831b-2520">
            <paramref name="remoteEP" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2520">
              <paramref name="remoteEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2521">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2521">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2522">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2522">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-2523">呼叫堆疊中的呼叫端沒有所需的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2523">A caller in the call stack does not have the required permissions.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.SocketPermission">
          <span data-ttu-id="3831b-2524">接受來自網路的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2524">for accepting connections from the network.</span>
          </span>
          <span data-ttu-id="3831b-2525">關聯的列舉型別：<see cref="F:System.Net.NetworkAccess.Accept" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2525">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveFrom">
      <MemberSignature Language="C#" Value="public int ReceiveFrom (byte[] buffer, int size, System.Net.Sockets.SocketFlags socketFlags, ref System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReceiveFrom(unsigned int8[] buffer, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReceiveFrom(cli::array &lt;System::Byte&gt; ^ buffer, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.ReceiveFrom : byte[] * int * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.ReceiveFrom (buffer, size, socketFlags, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-2526">類型 <see cref="T:System.Byte" /> 的陣列，此為接收資料的儲存位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2526">An array of type <see cref="T:System.Byte" /> that is the storage location for received data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-2527">要接收的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2527">The number of bytes to receive.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-2528">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2528">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="3831b-2529">以傳址方式傳遞的 <see cref="T:System.Net.EndPoint" />，表示遠端伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2529">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2530">使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" />，接收指定的位元組數至資料緩衝區中，並儲存端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2530">Receives the specified number of bytes into the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2531">收到的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2531">The number of bytes received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2532"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法會讀取資料到`buffer`參數，會傳回成功讀取的位元組數目，並擷取資料已傳送遠端主機端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-2532">The <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method reads data into the `buffer` parameter, returns the number of bytes successfully read, and captures the remote host endpoint from which the data was sent.</span></span> <span data-ttu-id="3831b-2533">這個方法很有用，如果您想要收到未知的主機或多個主控件的無連接的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-2533">This method is useful if you intend to receive connectionless datagrams from an unknown host or multiple hosts.</span></span>  
  
 <span data-ttu-id="3831b-2534">這個多載只要求您提供接收緩衝區中，您想要接收，必要的位元組數目<xref:System.Net.Sockets.SocketFlags>，並有<xref:System.Net.EndPoint>表示遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-2534">This overload only requires you to provide a receive buffer, the number of bytes you want to receive, the necessary <xref:System.Net.Sockets.SocketFlags>, and an <xref:System.Net.EndPoint> that represents the remote host.</span></span> <span data-ttu-id="3831b-2535">緩衝區位移為 0 的預設值。</span><span class="sxs-lookup"><span data-stu-id="3831b-2535">The buffer offset defaults to 0.</span></span>  
  
 <span data-ttu-id="3831b-2536">無連接的通訊協定，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>會讀取到區域網路緩衝區收到第一個加入佇列的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-2536">With connectionless protocols, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read the first enqueued datagram received into the local network buffer.</span></span> <span data-ttu-id="3831b-2537">如果您收到的資料包大於的大小`buffer`，則<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法將會填滿`buffer`盡可能是盡可能，，並擲回的訊息與<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2537">If the datagram you receive is larger than the size of `buffer`, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will fill `buffer` with as much of the message as is possible, and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2538">如果您使用的不可靠的通訊協定，超過的資料將會遺失。</span><span class="sxs-lookup"><span data-stu-id="3831b-2538">If you are using an unreliable protocol, the excess data will be lost.</span></span> <span data-ttu-id="3831b-2539">如果您使用可靠的通訊協定、 過多的資料會保留由服務提供者，而且您可以呼叫來擷取<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>夠大的緩衝區的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2539">If you are using a reliable protocol, the excess data will be retained by the service provider and you can retrieve it by calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method with a large enough buffer.</span></span>  
  
 <span data-ttu-id="3831b-2540">如果沒有資料可供讀取，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法將會封鎖直到資料可供使用。</span><span class="sxs-lookup"><span data-stu-id="3831b-2540">If no data is available for reading, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will block until data is available.</span></span> <span data-ttu-id="3831b-2541">如果您是在非封鎖模式中，而且沒有使用中的資料以通訊協定堆疊緩衝區<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法會立即完成，並擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2541">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2542">您可以使用<xref:System.Net.Sockets.Socket.Available%2A>屬性來判斷資料是否可供讀取。</span><span class="sxs-lookup"><span data-stu-id="3831b-2542">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="3831b-2543">當<xref:System.Net.Sockets.Socket.Available%2A>是不是零，接收作業重試一次。</span><span class="sxs-lookup"><span data-stu-id="3831b-2543">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="3831b-2544">雖然<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>適用於無連線的通訊協定，您可以使用連線導向的通訊協定以及。</span><span class="sxs-lookup"><span data-stu-id="3831b-2544">Although <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> is intended for connectionless protocols, you can use a connection-oriented protocol as well.</span></span> <span data-ttu-id="3831b-2545">如果您選擇這樣做，您必須先請建立遠端主機連接藉由呼叫<xref:System.Net.Sockets.Socket.Connect%2A>方法，或接受連入遠端主機連線，藉由呼叫<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2545">If you choose to do so, you must first either establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming remote host connection by calling the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-2546">如果您不要建立或接受連接，然後再呼叫<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法，將會取得<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2546">If you do not establish or accept a connection before calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method, you will get a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2547">您也可以建立預設遠端主機的無連線的通訊協定，才能呼叫<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2547">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-2548">在這些情況下，任一<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法將會忽略`remoteEP`參數和只接收來自已連接的資料或預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-2548">In either of these cases, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will ignore the `remoteEP` parameter and only receive data from the connected or default remote host.</span></span>  
  
 <span data-ttu-id="3831b-2549">使用連線導向的通訊端<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>會讀取位於不超過所指定的位元組數目的資料量`size`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-2549">With connection-oriented sockets, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read as much data as is available up to the number of bytes specified by the `size` parameter.</span></span> <span data-ttu-id="3831b-2550">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>與連接<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以及所有可用的資料已收到，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-2550">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been received, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and return zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2551">然後再呼叫<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>，您必須明確地繫結<xref:System.Net.Sockets.Socket>本機端點使用<xref:System.Net.Sockets.Socket.Bind%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2551">Before calling <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>, you must explicitly bind the <xref:System.Net.Sockets.Socket> to a local endpoint using the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span> <span data-ttu-id="3831b-2552">如果您未這麼做，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2552">If you do not, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2553">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2553">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2554">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2554">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2555"><xref:System.Net.Sockets.AddressFamily>的<xref:System.Net.EndPoint>用於<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>必須符合<xref:System.Net.Sockets.AddressFamily>的<xref:System.Net.EndPoint>用於<xref:System.Net.Sockets.Socket.SendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2555">The <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> needs to match the <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2556">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2556">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2557">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2557">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2558">下列程式碼範例會將無資料包 (datagram) 接收遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-2558">The following code example receives a connectionless datagram from a remote host.</span></span> <span data-ttu-id="3831b-2559">緩衝區大小，以及<xref:System.Net.Sockets.SocketFlags>傳遞至<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2559">The buffer size, and <xref:System.Net.Sockets.SocketFlags> are passed to the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#11)]
 [!code-csharp[Socket_Sync_Send_Receive#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#11)]
 [!code-vb[Socket_Sync_Send_Receive#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2560">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2560">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3831b-2561">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2561">-or-</span>
          </span>
          <span data-ttu-id="3831b-2562">
            <paramref name="remoteEP" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2562">
              <paramref name="remoteEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-2563">
            <paramref name="size" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2563">
              <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-2564">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2564">-or-</span>
          </span>
          <span data-ttu-id="3831b-2565">
            <paramref name="size" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2565">
              <paramref name="size" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2566">
            <paramref name="socketFlags" /> 不是有效的值組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2566">
              <paramref name="socketFlags" /> is not a valid combination of values.</span>
          </span>
          <span data-ttu-id="3831b-2567">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2567">-or-</span>
          </span>
          <span data-ttu-id="3831b-2568">未設定 <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2568">The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.</span>
          </span>
          <span data-ttu-id="3831b-2569">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2569">-or-</span>
          </span>
          <span data-ttu-id="3831b-2570">在存取 <see cref="T:System.Net.Sockets.Socket" /> 時發生作業系統錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2570">An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2571">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2571">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-2572">呼叫堆疊中的呼叫端沒有所需的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2572">A caller in the call stack does not have the required permissions.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.SocketPermission">
          <span data-ttu-id="3831b-2573">接受來自網路的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2573">for accepting connections from the network.</span>
          </span>
          <span data-ttu-id="3831b-2574">關聯的列舉型別：<see cref="F:System.Net.NetworkAccess.Accept" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2574">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveFrom">
      <MemberSignature Language="C#" Value="public int ReceiveFrom (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, ref System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReceiveFrom(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReceiveFrom(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.ReceiveFrom : byte[] * int * int * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.ReceiveFrom (buffer, offset, size, socketFlags, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-2575">類型 <see cref="T:System.Byte" /> 的陣列，此為接收資料的儲存位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2575">An array of type <see cref="T:System.Byte" /> that is the storage location for received data.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3831b-2576">
            <paramref name="buffer" /> 參數中的位置，可儲存接收的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2576">The position in the <paramref name="buffer" /> parameter to store the received data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-2577">要接收的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2577">The number of bytes to receive.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-2578">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2578">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="3831b-2579">以傳址方式傳遞的 <see cref="T:System.Net.EndPoint" />，表示遠端伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2579">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2580">使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" />，將指定的資料位元組數目接收至資料緩衝區的指定位置，並儲存端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2580">Receives the specified number of bytes of data into the specified location of the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2581">收到的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2581">The number of bytes received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2582"><xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法會讀取資料到`buffer`參數，會傳回成功讀取的位元組數目，並擷取資料已傳送遠端主機端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-2582">The <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method reads data into the `buffer` parameter, returns the number of bytes successfully read, and captures the remote host endpoint from which the data was sent.</span></span> <span data-ttu-id="3831b-2583">這個方法很有用，如果您想要收到未知的主機或多個主控件的無連接的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-2583">This method is useful if you intend to receive connectionless datagrams from an unknown host or multiple hosts.</span></span>  
  
 <span data-ttu-id="3831b-2584">無連接的通訊協定，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>會讀取到區域網路緩衝區收到第一個加入佇列的資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-2584">With connectionless protocols, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read the first enqueued datagram received into the local network buffer.</span></span> <span data-ttu-id="3831b-2585">如果您收到的資料包大於的大小`buffer`，則<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法將會填滿`buffer`盡可能是盡可能，，並擲回的訊息與<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2585">If the datagram you receive is larger than the size of `buffer`, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will fill `buffer` with as much of the message as is possible, and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2586">如果您使用的不可靠的通訊協定，超過的資料將會遺失。</span><span class="sxs-lookup"><span data-stu-id="3831b-2586">If you are using an unreliable protocol, the excess data will be lost.</span></span> <span data-ttu-id="3831b-2587">如果您使用可靠的通訊協定、 過多的資料會保留由服務提供者，而且您可以呼叫來擷取<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>夠大的緩衝區的方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2587">If you are using a reliable protocol, the excess data will be retained by the service provider and you can retrieve it by calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method with a large enough buffer.</span></span>  
  
 <span data-ttu-id="3831b-2588">如果沒有資料可供讀取，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法將會封鎖直到資料可供使用。</span><span class="sxs-lookup"><span data-stu-id="3831b-2588">If no data is available for reading, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will block until data is available.</span></span> <span data-ttu-id="3831b-2589">如果您是在非封鎖模式中，而且沒有使用中的資料以通訊協定堆疊緩衝區<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法會立即完成，並擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2589">If you are in non-blocking mode, and there is no data available in the in the protocol stack buffer, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2590">您可以使用<xref:System.Net.Sockets.Socket.Available%2A>屬性來判斷資料是否可供讀取。</span><span class="sxs-lookup"><span data-stu-id="3831b-2590">You can use the <xref:System.Net.Sockets.Socket.Available%2A> property to determine if data is available for reading.</span></span> <span data-ttu-id="3831b-2591">當<xref:System.Net.Sockets.Socket.Available%2A>是不是零，接收作業重試一次。</span><span class="sxs-lookup"><span data-stu-id="3831b-2591">When <xref:System.Net.Sockets.Socket.Available%2A> is non-zero, retry the receive operation.</span></span>  
  
 <span data-ttu-id="3831b-2592">雖然<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>適用於無連線的通訊協定，您可以使用連線導向的通訊協定以及。</span><span class="sxs-lookup"><span data-stu-id="3831b-2592">Although <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> is intended for connectionless protocols, you can use a connection-oriented protocol as well.</span></span> <span data-ttu-id="3831b-2593">如果您選擇這樣做，您必須先請建立遠端主機連接藉由呼叫<xref:System.Net.Sockets.Socket.Connect%2A>方法，或接受連入遠端主機連線，藉由呼叫<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2593">If you choose to do so, you must first either establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming remote host connection by calling the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-2594">如果您不要建立或接受連接，然後再呼叫<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法，將會取得<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2594">If you do not establish or accept a connection before calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method, you will get a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2595">您也可以建立預設遠端主機的無連線的通訊協定，才能呼叫<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2595">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span> <span data-ttu-id="3831b-2596">在這些情況下，任一<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法將會忽略`remoteEP`參數和只接收來自已連接的資料或預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-2596">In either of these cases, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will ignore the `remoteEP` parameter and only receive data from the connected or default remote host.</span></span>  
  
 <span data-ttu-id="3831b-2597">使用連線導向的通訊端<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>會讀取位於所指定的位元組之數量為上限的資料量`size`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-2597">With connection-oriented sockets, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will read as much data as is available up to the amount of bytes specified by the `size` parameter.</span></span> <span data-ttu-id="3831b-2598">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>與連接<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，以及所有可用的資料已收到，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-2598">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection with the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, and all available data has been Received, the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method will complete immediately and return zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2599">然後再呼叫<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>，您必須明確地繫結<xref:System.Net.Sockets.Socket>本機端點使用<xref:System.Net.Sockets.Socket.Bind%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2599">Before calling <xref:System.Net.Sockets.Socket.ReceiveFrom%2A>, you must explicitly bind the <xref:System.Net.Sockets.Socket> to a local endpoint using the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span> <span data-ttu-id="3831b-2600">如果您未這麼做，<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2600">If you do not, <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2601">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2601">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2602">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2602">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2603"><xref:System.Net.Sockets.AddressFamily>的<xref:System.Net.EndPoint>用於<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>必須符合<xref:System.Net.Sockets.AddressFamily>的<xref:System.Net.EndPoint>用於<xref:System.Net.Sockets.Socket.SendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2603">The <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> needs to match the <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2604">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2604">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2605">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2605">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2606">下列程式碼範例會將無資料包 (datagram) 接收遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-2606">The following code example receives a connectionless datagram from a remote host.</span></span> <span data-ttu-id="3831b-2607">位移、 緩衝區大小，以及<xref:System.Net.Sockets.SocketFlags>傳遞至<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2607">The offset, buffer size, and <xref:System.Net.Sockets.SocketFlags> are passed to the <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> method.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#12](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#12)]
 [!code-csharp[Socket_Sync_Send_Receive#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#12)]
 [!code-vb[Socket_Sync_Send_Receive#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2608">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2608">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3831b-2609">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2609">-or-</span>
          </span>
          <span data-ttu-id="3831b-2610">
            <paramref name="remoteEP" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2610">
              <paramref name="remoteEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-2611">
            <paramref name="offset" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2611">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-2612">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2612">-or-</span>
          </span>
          <span data-ttu-id="3831b-2613">
            <paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2613">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="3831b-2614">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2614">-or-</span>
          </span>
          <span data-ttu-id="3831b-2615">
            <paramref name="size" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2615">
              <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-2616">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2616">-or-</span>
          </span>
          <span data-ttu-id="3831b-2617">
            <paramref name="size" /> 大於 <paramref name="buffer" /> 的長度減去位移參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2617">
              <paramref name="size" /> is greater than the length of the <paramref name="buffer" /> minus the value of the offset parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2618">
            <paramref name="socketFlags" /> 不是有效的值組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2618">
              <paramref name="socketFlags" /> is not a valid combination of values.</span>
          </span>
          <span data-ttu-id="3831b-2619">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2619">-or-</span>
          </span>
          <span data-ttu-id="3831b-2620">未設定 <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2620">The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.</span>
          </span>
          <span data-ttu-id="3831b-2621">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2621">-or-</span>
          </span>
          <span data-ttu-id="3831b-2622">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2622">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2623">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2623">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.SocketPermission">
          <span data-ttu-id="3831b-2624">接受來自網路的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2624">for accepting connections from the network.</span>
          </span>
          <span data-ttu-id="3831b-2625">關聯的列舉型別：<see cref="F:System.Net.NetworkAccess.Accept" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2625">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveFromAsync">
      <MemberSignature Language="C#" Value="public bool ReceiveFromAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReceiveFromAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveFromAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReceiveFromAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.ReceiveFromAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.ReceiveFromAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3831b-2626">
            <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件，用於這個非同步通訊端作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2626">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2627">開始從指定的網路裝置非同步接收資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2627">Begins to asynchronously receive data from a specified network device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2628">如果 I/O 作業暫止，則傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2628">Returns <see langword="true" /> if the I/O operation is pending.</span>
          </span>
          <span data-ttu-id="3831b-2629">作業完成時會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2629">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span>
          </span>
          <span data-ttu-id="3831b-2630">如果 I/O 作業同步完成，則傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2630">Returns <see langword="false" /> if the I/O operation completed synchronously.</span>
          </span>
          <span data-ttu-id="3831b-2631">在這個情況下，就不會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，而在方法呼叫傳回後會立即檢查做為參數傳遞的 <paramref name="e" /> 物件，以擷取作業的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2631">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2632"><xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A>方法主要用來接收無連線的通訊端上的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2632">The <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A> method is used primarily to receive data on a connectionless socket.</span></span> <span data-ttu-id="3831b-2633">必須知道通訊端的本機位址。</span><span class="sxs-lookup"><span data-stu-id="3831b-2633">The socket's local address must be known.</span></span>  
  
 <span data-ttu-id="3831b-2634">呼叫端必須將<xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>屬性設<xref:System.Net.IPEndPoint>為接收資料來源的遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-2634">The caller must set the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> property to the <xref:System.Net.IPEndPoint> of the remote host from which the data is to be received.</span></span>  
  
 <span data-ttu-id="3831b-2635"><xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A?displayProperty=nameWithType>屬性上的`e`參數提供的視窗通訊端服務提供者的其他讀取要求的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2635">The <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A?displayProperty=nameWithType> property on the `e` parameter provides the Window Sockets service provider with additional information about the read request.</span></span> <span data-ttu-id="3831b-2636">如需如何使用此參數的詳細資訊，請參閱<xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2636">For more information about how to use this parameter, see <xref:System.Net.Sockets.SocketFlags?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="3831b-2637">下列的屬性和事件<xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType>物件，才能成功呼叫這個方法：</span><span class="sxs-lookup"><span data-stu-id="3831b-2637">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required to successfully call this method:</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
 <span data-ttu-id="3831b-2638">呼叫端可能會設定<xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType>呼叫之前所需的任何使用者狀態物件的屬性<xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A>方法，如此會在回呼方法中擷取資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2638">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.ReceiveFromAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="3831b-2639">如果回呼需要比單一物件的詳細資訊，就可以建立小型的類別來保存為成員的其他必要的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2639">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="3831b-2640">訊息導向的通訊端，內送訊息會放入之前將緩衝區的總大小的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3831b-2640">For message-oriented sockets, an incoming message is placed into the buffer up to the total size of the buffer.</span></span> <span data-ttu-id="3831b-2641"><xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType>和<xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType>屬性決定放置資料緩衝區的位置及的資料量。</span><span class="sxs-lookup"><span data-stu-id="3831b-2641">The <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType> properties determine where in the buffer the data is placed and the amount of data.</span></span>  
  
 <span data-ttu-id="3831b-2642">位元組資料流樣式的通訊端，內送資料被放入緩衝區，直到緩衝區已滿、 關閉連線，或已用完內部緩衝的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2642">For byte stream–style sockets, incoming data is placed into the buffer until the buffer is filled, the connection is closed, or the internally buffered data is exhausted.</span></span> <span data-ttu-id="3831b-2643"><xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType>和<xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType>屬性決定放置資料緩衝區的位置及的資料量。</span><span class="sxs-lookup"><span data-stu-id="3831b-2643">The <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType> properties determine where in the buffer the data is placed and the amount of data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2644">
            <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 不可以是 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2644">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-2645">通訊端作業已使用 <paramref name="e" /> 參數內指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件正在進行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2645">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-2646">這個方法需要 Windows XP (含) 以後版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2646">Windows XP or later is required for this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2647">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2647">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2648">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2648">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessageFrom">
      <MemberSignature Language="C#" Value="public int ReceiveMessageFrom (byte[] buffer, int offset, int size, ref System.Net.Sockets.SocketFlags socketFlags, ref System.Net.EndPoint remoteEP, out System.Net.Sockets.IPPacketInformation ipPacketInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReceiveMessageFrom(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags&amp; socketFlags, class System.Net.EndPoint&amp; remoteEP, [out] valuetype System.Net.Sockets.IPPacketInformation&amp; ipPacketInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveMessageFrom (buffer As Byte(), offset As Integer, size As Integer, ByRef socketFlags As SocketFlags, ByRef remoteEP As EndPoint, ByRef ipPacketInformation As IPPacketInformation) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReceiveMessageFrom(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags % socketFlags, System::Net::EndPoint ^ % remoteEP, [Runtime::InteropServices::Out] System::Net::Sockets::IPPacketInformation % ipPacketInformation);" />
      <MemberSignature Language="F#" Value="member this.ReceiveMessageFrom : byte[] * int * int *  *  *  -&gt; int" Usage="socket.ReceiveMessageFrom (buffer, offset, size, socketFlags, remoteEP, ipPacketInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" RefType="ref" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" RefType="ref" />
        <Parameter Name="ipPacketInformation" Type="System.Net.Sockets.IPPacketInformation" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-2649">類型 <see cref="T:System.Byte" /> 的陣列，此為接收資料的儲存位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2649">An array of type <see cref="T:System.Byte" /> that is the storage location for received data.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3831b-2650">
            <paramref name="buffer" /> 參數中的位置，可儲存接收的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2650">The position in the <paramref name="buffer" /> parameter to store the received data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-2651">要接收的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2651">The number of bytes to receive.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-2652">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2652">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="3831b-2653">以傳址方式傳遞的 <see cref="T:System.Net.EndPoint" />，表示遠端伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2653">An <see cref="T:System.Net.EndPoint" />, passed by reference, that represents the remote server.</span>
          </span>
        </param>
        <param name="ipPacketInformation">
          <span data-ttu-id="3831b-2654">保留位址及介面資訊的 <see cref="T:System.Net.Sockets.IPPacketInformation" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2654">An <see cref="T:System.Net.Sockets.IPPacketInformation" /> holding address and interface information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2655">使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" />，將指定的資料位元組數目接收至資料緩衝區的指定位置，並儲存端點及封包資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2655">Receives the specified number of bytes of data into the specified location of the data buffer, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />, and stores the endpoint and packet information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2656">收到的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2656">The number of bytes received.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2657"><xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A>方法會讀取資料到`buffer`參數，會傳回成功讀取的位元組數目，並擷取遠端主機資料已傳送的端點，以及收到的封包的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2657">The <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method reads data into the `buffer` parameter, returns the number of bytes successfully read, and captures the remote host endpoint from which the data was sent, as well as information about the received packet.</span></span>  
  
 <span data-ttu-id="3831b-2658"><xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A>方法主要用來接收無連線的通訊端上的訊息資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2658">The <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method is used primarily to receive message data on a connectionless socket.</span></span> <span data-ttu-id="3831b-2659">必須知道通訊端的本機位址。</span><span class="sxs-lookup"><span data-stu-id="3831b-2659">The socket's local address must be known.</span></span> <span data-ttu-id="3831b-2660">這個方法只會搭配資料包和原始通訊端中。</span><span class="sxs-lookup"><span data-stu-id="3831b-2660">This method can only be used with datagram and raw sockets.</span></span> <span data-ttu-id="3831b-2661">通訊端必須先初始化通訊端類型設定為<xref:System.Net.Sockets.SocketType.Dgram>或<xref:System.Net.Sockets.SocketType.Raw>之前呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2661">The socket must be initialized with the socket type set to <xref:System.Net.Sockets.SocketType.Dgram> or <xref:System.Net.Sockets.SocketType.Raw> before calling this method.</span></span> <span data-ttu-id="3831b-2662">這可以使用建構通訊端時<xref:System.Net.Sockets.Socket.%23ctor%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2662">This can be done when the socket is constructed using <xref:System.Net.Sockets.Socket.%23ctor%2A>.</span></span>  
  
 <span data-ttu-id="3831b-2663">訊息導向的通訊端，內送訊息會放入`buffer`參數中指定的總大小最`size`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-2663">For message-oriented sockets, an incoming message is placed into the `buffer` parameter up to the total size specified in the `size` parameter.</span></span> <span data-ttu-id="3831b-2664">`offset`參數會決定在何處`buffer`將資料放在。</span><span class="sxs-lookup"><span data-stu-id="3831b-2664">The `offset` parameter determines where in the `buffer` the data is placed.</span></span> <span data-ttu-id="3831b-2665">實際的資料量放入`buffer`由<xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2665">The actual amount of data placed into the `buffer` is returned by the <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-2666"><xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A>方法會自動設定方法<xref:System.Net.Sockets.SocketOptionName.PacketInformation>通訊端選項來`true`呼叫的第一次指定<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2666">The <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method automatically method sets the <xref:System.Net.Sockets.SocketOptionName.PacketInformation> socket option to `true` the first time it is called for a given <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-2667">不過，傳回<xref:System.Net.Sockets.IPPacketInformation>物件只會對封包抵達本機電腦，設定通訊端選項之後有效。</span><span class="sxs-lookup"><span data-stu-id="3831b-2667">However, the returned <xref:System.Net.Sockets.IPPacketInformation> object will only be valid for packets which arrive at the local computer after the socket option has been set.</span></span> <span data-ttu-id="3831b-2668">如果通訊端會傳送之間的封包，當它繫結至本機端點 (明確地<xref:System.Net.Sockets.Socket.Bind%2A>方法或由其中一個隱含<xref:System.Net.Sockets.Socket.Connect%2A>， <xref:System.Net.Sockets.Socket.ConnectAsync%2A>， <xref:System.Net.Sockets.Socket.SendTo%2A>，或<xref:System.Net.Sockets.Socket.SendToAsync%2A>方法) 和其第一次呼叫<xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A>若要呼叫的方法，<xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A>方法會傳回無效<xref:System.Net.Sockets.IPPacketInformation>這些封包的物件。</span><span class="sxs-lookup"><span data-stu-id="3831b-2668">If a socket is sent packets between when it is bound to a local endpoint (explicitly by the <xref:System.Net.Sockets.Socket.Bind%2A> method or implicitly by one of the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A>, <xref:System.Net.Sockets.Socket.SendTo%2A>, or <xref:System.Net.Sockets.Socket.SendToAsync%2A> methods) and its first call to the <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method, calls to <xref:System.Net.Sockets.Socket.ReceiveMessageFrom%2A> method will return invalid <xref:System.Net.Sockets.IPPacketInformation> objects for these packets.</span></span>  
  
 <span data-ttu-id="3831b-2669">為了確保所有<xref:System.Net.Sockets.IPPacketInformation>物件有效，而且應用程式應該設定<xref:System.Net.Sockets.SocketOptionName.PacketInformation>通訊端選項來`true`它會繫結至本機端點使用之前<xref:System.Net.Sockets.Socket.SetSocketOption%28System.Net.Sockets.SocketOptionLevel%2CSystem.Net.Sockets.SocketOptionName%2CSystem.Boolean%29>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2669">To ensure that all <xref:System.Net.Sockets.IPPacketInformation> objects are valid, an application should set the <xref:System.Net.Sockets.SocketOptionName.PacketInformation> socket option to `true` before it is bound to a local endpoint using the <xref:System.Net.Sockets.Socket.SetSocketOption%28System.Net.Sockets.SocketOptionLevel%2CSystem.Net.Sockets.SocketOptionName%2CSystem.Boolean%29> method.</span></span>  
  
 <span data-ttu-id="3831b-2670">應用程式可以檢查`ipPacketInformation`參數，如果它需要知道是否資料包所傳送的單點傳播、 多點傳送或廣播位址。</span><span class="sxs-lookup"><span data-stu-id="3831b-2670">An application can examine the `ipPacketInformation` parameter if it needs to know if the datagram was sent using a unicast, multicast, or broadcast address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2671"><xref:System.Net.Sockets.AddressFamily>的<xref:System.Net.EndPoint>用於<xref:System.Net.Sockets.Socket.ReceiveFrom%2A>必須符合<xref:System.Net.Sockets.AddressFamily>的<xref:System.Net.EndPoint>用於<xref:System.Net.Sockets.Socket.SendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2671">The <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.ReceiveFrom%2A> needs to match the <xref:System.Net.Sockets.AddressFamily> of the <xref:System.Net.EndPoint> used in <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2672">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2672">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2673">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2673">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2674">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2674">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3831b-2675">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2675">\- or-</span>
          </span>
          <span data-ttu-id="3831b-2676">
            <paramref name="remoteEP" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2676">
              <paramref name="remoteEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-2677">
            <paramref name="offset" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2677">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-2678">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2678">-or-</span>
          </span>
          <span data-ttu-id="3831b-2679">
            <paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2679">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="3831b-2680">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2680">-or-</span>
          </span>
          <span data-ttu-id="3831b-2681">
            <paramref name="size" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2681">
              <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-2682">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2682">-or-</span>
          </span>
          <span data-ttu-id="3831b-2683">
            <paramref name="size" /> 大於 <paramref name="buffer" /> 的長度減去位移參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2683">
              <paramref name="size" /> is greater than the length of the <paramref name="buffer" /> minus the value of the offset parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2684">
            <paramref name="socketFlags" /> 不是有效的值組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2684">
              <paramref name="socketFlags" /> is not a valid combination of values.</span>
          </span>
          <span data-ttu-id="3831b-2685">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2685">-or-</span>
          </span>
          <span data-ttu-id="3831b-2686">未設定 <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2686">The <see cref="P:System.Net.Sockets.Socket.LocalEndPoint" /> property was not set.</span>
          </span>
          <span data-ttu-id="3831b-2687">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2687">-or-</span>
          </span>
          <span data-ttu-id="3831b-2688">.NET Framework 正在 AMD 64 位元處理器上執行。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2688">The .NET Framework is running on an AMD 64-bit processor.</span>
          </span>
          <span data-ttu-id="3831b-2689">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2689">-or-</span>
          </span>
          <span data-ttu-id="3831b-2690">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2690">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2691">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2691">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-2692">作業系統是 Windows 2000 (含) 以前版本，但這個方法需要的是 Windows XP。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2692">The operating system is Windows 2000 or earlier, and this method requires Windows XP.</span>
          </span>
        </exception>
        <permission cref="T:System.Net.SocketPermission">
          <span data-ttu-id="3831b-2693">接受來自網路的連線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2693">for accepting connections from the network.</span>
          </span>
          <span data-ttu-id="3831b-2694">關聯的列舉型別：<see cref="F:System.Net.NetworkAccess.Accept" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2694">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" />.</span>
          </span>
        </permission>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)" />
        <altmember cref="P:System.Net.Sockets.Socket.Available" />
        <altmember cref="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMessageFromAsync">
      <MemberSignature Language="C#" Value="public bool ReceiveMessageFromAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReceiveMessageFromAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveMessageFromAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReceiveMessageFromAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.ReceiveMessageFromAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.ReceiveMessageFromAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3831b-2695">
            <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件，用於這個非同步通訊端作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2695">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2696">使用指定的 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" />，開始以非同步方式將指定之位元組數目的資料，接收至資料緩衝區的指定位置，並儲存端點和封包資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2696">Begins to asynchronously receive the specified number of bytes of data into the specified location in the data buffer, using the specified <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags" />, and stores the endpoint and packet information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2697">如果 I/O 作業暫止，則傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2697">Returns <see langword="true" /> if the I/O operation is pending.</span>
          </span>
          <span data-ttu-id="3831b-2698">作業完成時會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2698">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span>
          </span>
          <span data-ttu-id="3831b-2699">如果 I/O 作業同步完成，則傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2699">Returns <see langword="false" /> if the I/O operation completed synchronously.</span>
          </span>
          <span data-ttu-id="3831b-2700">在這個情況下，就不會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，而在方法呼叫傳回後會立即檢查做為參數傳遞的 <paramref name="e" /> 物件，以擷取作業的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2700">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2701"><xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A>方法主要用來接收無連線的通訊端上的訊息資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2701">The <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A> method is used primarily to receive message data on a connectionless socket.</span></span> <span data-ttu-id="3831b-2702">必須知道通訊端的本機位址。</span><span class="sxs-lookup"><span data-stu-id="3831b-2702">The socket's local address must be known.</span></span> <span data-ttu-id="3831b-2703">這個方法只會搭配資料包和原始通訊端中。</span><span class="sxs-lookup"><span data-stu-id="3831b-2703">This method can only be used with datagram and raw sockets.</span></span> <span data-ttu-id="3831b-2704">通訊端必須先初始化通訊端類型設定為<xref:System.Net.Sockets.SocketType.Dgram>或<xref:System.Net.Sockets.SocketType.Raw>之前呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2704">The socket must be initialized with the socket type set to <xref:System.Net.Sockets.SocketType.Dgram> or <xref:System.Net.Sockets.SocketType.Raw> before calling this method.</span></span> <span data-ttu-id="3831b-2705">這可以使用建構通訊端時<xref:System.Net.Sockets.Socket.%23ctor%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2705">This can be done when the socket is constructed using <xref:System.Net.Sockets.Socket.%23ctor%2A>.</span></span>  
  
 <span data-ttu-id="3831b-2706">呼叫端必須將<xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>屬性設<xref:System.Net.IPEndPoint>為接收資料來源的遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-2706">The caller must set the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> property to the <xref:System.Net.IPEndPoint> of the remote host from which the data is to be received.</span></span>  
  
 <span data-ttu-id="3831b-2707">下列的屬性和事件<xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType>物件，才能成功呼叫這個方法：</span><span class="sxs-lookup"><span data-stu-id="3831b-2707">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required to successfully call this method:</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
 <span data-ttu-id="3831b-2708">呼叫端可能會設定<xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType>呼叫之前所需的任何使用者狀態物件的屬性<xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A>方法，如此會在回呼方法中擷取資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2708">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="3831b-2709">如果回呼需要比單一物件的詳細資訊，就可以建立小型的類別來保存為成員的其他必要的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2709">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="3831b-2710">訊息導向的通訊端，內送訊息會放入之前將緩衝區的總大小的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3831b-2710">For message-oriented sockets, an incoming message is placed into the buffer up to the total size of the buffer.</span></span> <span data-ttu-id="3831b-2711"><xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType>和<xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType>屬性決定放置資料緩衝區的位置及的資料量。</span><span class="sxs-lookup"><span data-stu-id="3831b-2711">The <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> and <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType> properties determine where in the buffer the data is placed and the amount of data.</span></span>  
  
 <span data-ttu-id="3831b-2712"><xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A>方法會自動設定<xref:System.Net.Sockets.SocketOptionName.PacketInformation>通訊端選項來`true`呼叫的第一次指定<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2712">The <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A> method automatically sets the <xref:System.Net.Sockets.SocketOptionName.PacketInformation> socket option to `true` the first time it is called for a given <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-2713">不過，<xref:System.Net.Sockets.IPPacketInformation>物件只會對封包抵達本機電腦，設定通訊端選項之後有效。</span><span class="sxs-lookup"><span data-stu-id="3831b-2713">However, the <xref:System.Net.Sockets.IPPacketInformation> object will only be valid for packets which arrive at the local computer after the socket option has been set.</span></span> <span data-ttu-id="3831b-2714">如果通訊端通訊端繫結至本機端點時傳送封包之間 (明確地<xref:System.Net.Sockets.Socket.Bind%2A>方法或由其中一個隱含<xref:System.Net.Sockets.Socket.Connect%2A>， <xref:System.Net.Sockets.Socket.ConnectAsync%2A>， <xref:System.Net.Sockets.Socket.SendTo%2A>，或<xref:System.Net.Sockets.Socket.SendToAsync%2A>方法) 和第一個呼叫<xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A>方法，呼叫<xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A>方法將會導致無效<xref:System.Net.Sockets.IPPacketInformation>這些封包的物件。</span><span class="sxs-lookup"><span data-stu-id="3831b-2714">If a socket is sent packets between when the socket is bound to a local endpoint (explicitly by the <xref:System.Net.Sockets.Socket.Bind%2A> method or implicitly by one of the <xref:System.Net.Sockets.Socket.Connect%2A>, <xref:System.Net.Sockets.Socket.ConnectAsync%2A>, <xref:System.Net.Sockets.Socket.SendTo%2A>, or <xref:System.Net.Sockets.Socket.SendToAsync%2A> methods) and the first call to the <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A> method, calls to <xref:System.Net.Sockets.Socket.ReceiveMessageFromAsync%2A> method will result in invalid <xref:System.Net.Sockets.IPPacketInformation> objects for these packets.</span></span>  
  
 <span data-ttu-id="3831b-2715">為了確保所有<xref:System.Net.Sockets.IPPacketInformation>物件有效，而且應用程式應該設定<xref:System.Net.Sockets.SocketOptionName.PacketInformation>通訊端選項來`true`它會繫結至本機端點使用之前<xref:System.Net.Sockets.Socket.SetSocketOption%28System.Net.Sockets.SocketOptionLevel%2CSystem.Net.Sockets.SocketOptionName%2CSystem.Boolean%29>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2715">To ensure that all <xref:System.Net.Sockets.IPPacketInformation> objects are valid, an application should set the <xref:System.Net.Sockets.SocketOptionName.PacketInformation> socket option to`true` before it is bound to a local endpoint using the <xref:System.Net.Sockets.Socket.SetSocketOption%28System.Net.Sockets.SocketOptionLevel%2CSystem.Net.Sockets.SocketOptionName%2CSystem.Boolean%29> method.</span></span>  
  
 <span data-ttu-id="3831b-2716">應用程式可以檢查所產生的<xref:System.Net.Sockets.IPPacketInformation>物件是否需要知道是否資料包所傳送的單點傳播、 多點傳送或廣播位址。</span><span class="sxs-lookup"><span data-stu-id="3831b-2716">An application can examine the resulting <xref:System.Net.Sockets.IPPacketInformation> objects if it needs to know if the datagram was sent using a unicast, multicast, or broadcast address.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2717">
            <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 不可以是 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2717">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-2718">這個方法需要 Windows XP (含) 以後版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2718">Windows XP or later is required for this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2719">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2719">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2720">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2720">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : int with get, set" Usage="System.Net.Sockets.Socket.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-2721">取得或設定值，指定同步 <see cref="Overload:System.Net.Sockets.Socket.Receive" /> 呼叫逾時之前的時間長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2721">Gets or sets a value that specifies the amount of time after which a synchronous <see cref="Overload:System.Net.Sockets.Socket.Receive" /> call will time out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-2722">逾時值 (以毫秒為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2722">The time-out value, in milliseconds.</span>
          </span>
          <span data-ttu-id="3831b-2723">預設值為 0，表示無限的逾時期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2723">The default value is 0, which indicates an infinite time-out period.</span>
          </span>
          <span data-ttu-id="3831b-2724">指定 -1 也表示無限的逾時期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2724">Specifying -1 also indicates an infinite time-out period.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2725">此選項適用於同步<xref:System.Net.Sockets.Socket.Receive%2A>僅呼叫。</span><span class="sxs-lookup"><span data-stu-id="3831b-2725">This option applies to synchronous <xref:System.Net.Sockets.Socket.Receive%2A> calls only.</span></span> <span data-ttu-id="3831b-2726">如果超過逾時期限<xref:System.Net.Sockets.Socket.Receive%2A>方法會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2726">If the time-out period is exceeded, the <xref:System.Net.Sockets.Socket.Receive%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2727">下列程式碼範例示範使用<xref:System.Net.Sockets.Socket.ReceiveTimeout%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-2727">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.ReceiveTimeout%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2728">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2728">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2729">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2729">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-2730">為設定作業指定的值小於 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2730">The value specified for a set operation is less than -1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint RemoteEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteEndPoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ RemoteEndPoint { System::Net::EndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteEndPoint : System.Net.EndPoint" Usage="System.Net.Sockets.Socket.RemoteEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-2731">取得遠端端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2731">Gets the remote endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-2732">
            <see cref="T:System.Net.EndPoint" />，<see cref="T:System.Net.Sockets.Socket" /> 正在與其通訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2732">The <see cref="T:System.Net.EndPoint" /> with which the <see cref="T:System.Net.Sockets.Socket" /> is communicating.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2733">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.RemoteEndPoint%2A>屬性會取得<xref:System.Net.EndPoint>包含遠端 IP 位址和連接埠號碼的<xref:System.Net.Sockets.Socket>連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-2733">If you are using a connection-oriented protocol, the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property gets the <xref:System.Net.EndPoint> that contains the remote IP address and port number to which the <xref:System.Net.Sockets.Socket> is connected.</span></span> <span data-ttu-id="3831b-2734">如果您使用無連接的通訊協定<xref:System.Net.Sockets.Socket.RemoteEndPoint%2A>包含的預設遠端 IP 位址和連接埠號碼與<xref:System.Net.Sockets.Socket>會進行通訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2734">If you are using a connectionless protocol, <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> contains the default remote IP address and port number with which the <xref:System.Net.Sockets.Socket> will communicate.</span></span> <span data-ttu-id="3831b-2735">您必須將此轉型<xref:System.Net.EndPoint>至<xref:System.Net.IPEndPoint>之前擷取任何資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2735">You must cast this <xref:System.Net.EndPoint> to an <xref:System.Net.IPEndPoint> before retrieving any information.</span></span> <span data-ttu-id="3831b-2736">您可以接著呼叫<xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType>方法來擷取遠端<xref:System.Net.IPAddress>，和<xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType>方法來擷取遠端連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2736">You can then call the <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> method to retrieve the remote <xref:System.Net.IPAddress>, and the <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> method to retrieve the remote port number.</span></span>  
  
 <span data-ttu-id="3831b-2737"><xref:System.Net.Sockets.Socket.RemoteEndPoint%2A>設定後呼叫<xref:System.Net.Sockets.Socket.Accept%2A>或<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2737">The <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> is set after a call to either <xref:System.Net.Sockets.Socket.Accept%2A> or <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-2738">如果您嘗試存取此屬性稍早<xref:System.Net.Sockets.Socket.RemoteEndPoint%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2738">If you try to access this property earlier, <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2739">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2739">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2740">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2740">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2741">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2741">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2742">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2742">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2743">下列程式碼範例會擷取，並顯示本機和遠端端點。</span><span class="sxs-lookup"><span data-stu-id="3831b-2743">The following code example retrieves and displays the local and remote endpoints.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#4)]
 [!code-csharp[Socket_Socket_Options#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#4)]
 [!code-vb[Socket_Socket_Options#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2744">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2744">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2745">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2745">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.EndPoint" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Accept" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public static void Select (System.Collections.IList checkRead, System.Collections.IList checkWrite, System.Collections.IList checkError, int microSeconds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Select(class System.Collections.IList checkRead, class System.Collections.IList checkWrite, class System.Collections.IList checkError, int32 microSeconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Select(System.Collections.IList,System.Collections.IList,System.Collections.IList,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Select (checkRead As IList, checkWrite As IList, checkError As IList, microSeconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Select(System::Collections::IList ^ checkRead, System::Collections::IList ^ checkWrite, System::Collections::IList ^ checkError, int microSeconds);" />
      <MemberSignature Language="F#" Value="static member Select : System.Collections.IList * System.Collections.IList * System.Collections.IList * int -&gt; unit" Usage="System.Net.Sockets.Socket.Select (checkRead, checkWrite, checkError, microSeconds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="checkRead" Type="System.Collections.IList" />
        <Parameter Name="checkWrite" Type="System.Collections.IList" />
        <Parameter Name="checkError" Type="System.Collections.IList" />
        <Parameter Name="microSeconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="checkRead">
          <span data-ttu-id="3831b-2746">要檢查可讀性的 <see cref="T:System.Net.Sockets.Socket" /> 執行個體的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2746">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Net.Sockets.Socket" /> instances to check for readability.</span>
          </span>
        </param>
        <param name="checkWrite">
          <span data-ttu-id="3831b-2747">要檢查可寫性的 <see cref="T:System.Net.Sockets.Socket" /> 執行個體的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2747">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Net.Sockets.Socket" /> instances to check for writability.</span>
          </span>
        </param>
        <param name="checkError">
          <span data-ttu-id="3831b-2748">要檢查錯誤的 <see cref="T:System.Net.Sockets.Socket" /> 執行個體的 <see cref="T:System.Collections.IList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2748">An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Net.Sockets.Socket" /> instances to check for errors.</span>
          </span>
        </param>
        <param name="microSeconds">
          <span data-ttu-id="3831b-2749">逾時值 (以微秒為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2749">The time-out value, in microseconds.</span>
          </span>
          <span data-ttu-id="3831b-2750">-1 值表示無限逾時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2750">A -1 value indicates an infinite time-out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2751">判斷一或多個通訊端的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2751">Determines the status of one or more sockets.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2752"><xref:System.Net.Sockets.Socket.Select%2A> 是一種靜態方法，決定一或多個狀態<xref:System.Net.Sockets.Socket>執行個體。</span><span class="sxs-lookup"><span data-stu-id="3831b-2752"><xref:System.Net.Sockets.Socket.Select%2A> is a static method that determines the status of one or more <xref:System.Net.Sockets.Socket> instances.</span></span> <span data-ttu-id="3831b-2753">您必須將放入一或多個通訊端<xref:System.Collections.IList>您可以使用之前<xref:System.Net.Sockets.Socket.Select%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2753">You must place one or more sockets into an <xref:System.Collections.IList> before you can use the <xref:System.Net.Sockets.Socket.Select%2A> method.</span></span> <span data-ttu-id="3831b-2754">藉由呼叫檢查可讀性<xref:System.Net.Sockets.Socket.Select%2A>具有<xref:System.Collections.IList>做為`checkRead`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-2754">Check for readability by calling <xref:System.Net.Sockets.Socket.Select%2A> with the <xref:System.Collections.IList> as the `checkRead` parameter.</span></span> <span data-ttu-id="3831b-2755">若要檢查可寫性通訊端，使用`checkWrite`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-2755">To check your sockets for writability, use the `checkWrite` parameter.</span></span> <span data-ttu-id="3831b-2756">偵測錯誤狀況，使用`checkError`。</span><span class="sxs-lookup"><span data-stu-id="3831b-2756">For detecting error conditions, use `checkError`.</span></span> <span data-ttu-id="3831b-2757">之後呼叫<xref:System.Net.Sockets.Socket.Select%2A>，則<xref:System.Collections.IList>會填滿滿足上述條件的通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-2757">After calling <xref:System.Net.Sockets.Socket.Select%2A>, the <xref:System.Collections.IList> will be filled with only those sockets that satisfy the conditions.</span></span>  
  
 <span data-ttu-id="3831b-2758">如果您是處於接聽狀態，可讀性表示呼叫<xref:System.Net.Sockets.Socket.Accept%2A>而不會封鎖將會成功。</span><span class="sxs-lookup"><span data-stu-id="3831b-2758">If you are in a listening state, readability means that a call to <xref:System.Net.Sockets.Socket.Accept%2A> will succeed without blocking.</span></span> <span data-ttu-id="3831b-2759">如果您已接受連線，可讀性表示資料可供讀取。</span><span class="sxs-lookup"><span data-stu-id="3831b-2759">If you have already accepted the connection, readability means that data is available for reading.</span></span> <span data-ttu-id="3831b-2760">在這些情況下，所有的接收作業會成功，而不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="3831b-2760">In these cases, all receive operations will succeed without blocking.</span></span> <span data-ttu-id="3831b-2761">可讀性也可以指定是否在遠端<xref:System.Net.Sockets.Socket>已關閉連接下，在此情況下呼叫<xref:System.Net.Sockets.Socket.Receive%2A>會立即傳回，以傳回零位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-2761">Readability can also indicate whether the remote <xref:System.Net.Sockets.Socket> has shut down the connection; in that case a call to <xref:System.Net.Sockets.Socket.Receive%2A> will return immediately, with zero bytes returned.</span></span>  
  
 <span data-ttu-id="3831b-2762"><xref:System.Net.Sockets.Socket.Select%2A> 時傳回至少一個感興趣的通訊端 (在通訊端`checkRead`， `checkWrite`，並`checkError`列出) 符合指定的準則，或`microSeconds`超過參數時，視何者先。</span><span class="sxs-lookup"><span data-stu-id="3831b-2762"><xref:System.Net.Sockets.Socket.Select%2A> returns when at least one of the sockets of interest (the sockets in the `checkRead`, `checkWrite`, and `checkError` lists) meets its specified criteria, or the `microSeconds` parameter is exceeded, whichever comes first.</span></span> <span data-ttu-id="3831b-2763">設定`microSeconds`為-1 指定無限逾時。</span><span class="sxs-lookup"><span data-stu-id="3831b-2763">Setting `microSeconds` to -1 specifies an infinite time-out.</span></span>  
  
 <span data-ttu-id="3831b-2764">若要以非封鎖式呼叫<xref:System.Net.Sockets.Socket.Connect%2A>，可寫性表示您已成功連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-2764">If you make a nonblocking call to <xref:System.Net.Sockets.Socket.Connect%2A>, writability means that you have connected successfully.</span></span> <span data-ttu-id="3831b-2765">如果您已經建立連接，可寫性表示，所有傳送作業會成功而不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="3831b-2765">If you already have a connection established, writability means that all send operations will succeed without blocking.</span></span>  
  
 <span data-ttu-id="3831b-2766">如果您所做的非封鎖式呼叫<xref:System.Net.Sockets.Socket.Connect%2A>，則`checkerror`參數會識別尚未成功連線的通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-2766">If you have made a non-blocking call to <xref:System.Net.Sockets.Socket.Connect%2A>, the `checkerror` parameter identifies sockets that have not connected successfully.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2767">使用<xref:System.Net.Sockets.Socket.Poll%2A>方法，如果您只想要判斷的單一狀態<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2767">Use the <xref:System.Net.Sockets.Socket.Poll%2A> method if you only want to determine the status of a single <xref:System.Net.Sockets.Socket>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2768">這個方法無法偵測某些類型的連線問題，例如中斷的網路纜線，或遠端主機已強制關閉。</span><span class="sxs-lookup"><span data-stu-id="3831b-2768">This method cannot detect certain kinds of connection problems, such as a broken network cable, or that the remote host was shut down ungracefully.</span></span> <span data-ttu-id="3831b-2769">您必須嘗試傳送或接收資料，以偵測這些類型的錯誤。</span><span class="sxs-lookup"><span data-stu-id="3831b-2769">You must attempt to send or receive data to detect these kinds of errors.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2770">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2770">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2771">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2771">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2772">下列程式碼範例使用<xref:System.Net.Sockets.Socket.Select%2A>判斷哪一個接聽的通訊端連線要求。</span><span class="sxs-lookup"><span data-stu-id="3831b-2772">The following code example uses <xref:System.Net.Sockets.Socket.Select%2A> to determine which listening sockets have a connection request.</span></span>  
  
 [!code-cpp[Socket_Select#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Select/CPP/source.cpp#1)]
 [!code-csharp[Socket_Select#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Select/CS/source.cs#1)]
 [!code-vb[Socket_Select#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Select/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2773">
            <paramref name="checkRead" /> 參數是 <see langword="null" /> 或空白。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2773">The <paramref name="checkRead" /> parameter is <see langword="null" /> or empty.</span>
          </span>
          <span data-ttu-id="3831b-2774">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2774">-and-</span>
          </span>
          <span data-ttu-id="3831b-2775">
            <paramref name="checkWrite" /> 參數是 <see langword="null" /> 或空白。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2775">The <paramref name="checkWrite" /> parameter is <see langword="null" /> or empty</span>
          </span>
          <span data-ttu-id="3831b-2776">-和-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2776">-and-</span>
          </span>
          <span data-ttu-id="3831b-2777">
            <paramref name="checkError" /> 參數是 <see langword="null" /> 或空白。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2777">The <paramref name="checkError" /> parameter is <see langword="null" /> or empty.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2778">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2778">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Net.Sockets.Socket.Accept" />
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Poll(System.Int32,System.Net.Sockets.SelectMode)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-2779">傳送資料至已連接的 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2779">Sends data to a connected <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (buffer As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] -&gt; int" Usage="socket.Send buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-2780">類型 <see cref="T:System.Byte" /> 的陣列，其中包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2780">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2781">傳送資料至已連接的 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2781">Sends data to a connected <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2782">已傳送到 <see cref="T:System.Net.Sockets.Socket" /> 的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2782">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2783"><xref:System.Net.Sockets.Socket.Send%2A> 以同步方式將資料傳送至遠端主機中指定<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法並傳回成功傳送的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2783"><xref:System.Net.Sockets.Socket.Send%2A> synchronously sends data to the remote host specified in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="3831b-2784"><xref:System.Net.Sockets.Socket.Send%2A> 可用的連線導向和無連線通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-2784"><xref:System.Net.Sockets.Socket.Send%2A> can be used for both connection-oriented and connectionless protocols.</span></span>  
  
 <span data-ttu-id="3831b-2785">這個多載都需要此緩衝區包含您想要傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2785">This overload requires a buffer that contains the data you want to send.</span></span> <span data-ttu-id="3831b-2786"><xref:System.Net.Sockets.SocketFlags>值會預設為 0，緩衝區位移為 0，而且要傳送的緩衝區大小的預設值的位元組數目的預設值。</span><span class="sxs-lookup"><span data-stu-id="3831b-2786">The <xref:System.Net.Sockets.SocketFlags> value defaults to 0, the buffer offset defaults to 0, and the number of bytes to send defaults to the size of the buffer.</span></span>  
  
 <span data-ttu-id="3831b-2787">如果您使用無連接的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>之前呼叫這個方法，或是<xref:System.Net.Sockets.Socket.Send%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2787">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method, or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2788">如果您使用連線導向的通訊協定，您必須使用<xref:System.Net.Sockets.Socket.Connect%2A>建立遠端主機連線，或使用<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-2788">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="3831b-2789">如果您使用無連線的通訊協定和計劃將資料傳送至數個不同的主控件，您應該使用<xref:System.Net.Sockets.Socket.SendTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2789">If you are using a connectionless protocol and plan to send data to several different hosts, you should use the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="3831b-2790">如果您不要使用<xref:System.Net.Sockets.Socket.SendTo%2A>方法中，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>每次呼叫之前<xref:System.Net.Sockets.Socket.Send%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2790">If you do not use the <xref:System.Net.Sockets.Socket.SendTo%2A> method, you will have to call <xref:System.Net.Sockets.Socket.Connect%2A> before each call to <xref:System.Net.Sockets.Socket.Send%2A>.</span></span> <span data-ttu-id="3831b-2791">您可以使用<xref:System.Net.Sockets.Socket.SendTo%2A>即使您已建立預設遠端主機與之後<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2791">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-2792">您也可以變更預設遠端主機，才能呼叫<xref:System.Net.Sockets.Socket.Send%2A>藉由另一個呼叫<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2792">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="3831b-2793">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.Send%2A>將會封鎖直到所有緩衝區的位元組傳送，除非逾時已設定使用<xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2793">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until all of the bytes in the buffer are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-2794">如果已超過逾時值<xref:System.Net.Sockets.Socket.Send%2A>呼叫會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2794">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2795">在未封鎖模式中，<xref:System.Net.Sockets.Socket.Send%2A>即使傳送的位元組數目小於緩衝區中可能會順利完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-2795">In nonblocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes in the buffer.</span></span> <span data-ttu-id="3831b-2796">是記錄傳送的位元組數，以及重試此作業，直到應用程式可將位元組傳送緩衝區中的應用程式的責任。</span><span class="sxs-lookup"><span data-stu-id="3831b-2796">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the bytes in the buffer.</span></span> <span data-ttu-id="3831b-2797">另外還有您傳送的資料就會立即出現在網路不保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-2797">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-2798">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2798">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="3831b-2799">成功完成<xref:System.Net.Sockets.Socket.Send%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-2799">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2800">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2800">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2801">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2801">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2802">成功完成傳送不表示已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2802">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="3831b-2803">如果沒有緩衝區可用空間來保存資料傳輸的傳輸系統內，則除非通訊端已處於未封鎖模式，將會封鎖傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-2803">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2804">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2804">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2805">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2805">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2806">下列程式碼範例示範如何在已連接的資料傳送<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2806">The following code example demonstrates sending data on a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#1)]
 [!code-csharp[Socket_Sync_Send_Receive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#1)]
 [!code-vb[Socket_Sync_Send_Receive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2807">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2807">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2808">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2808">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2809">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2809">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (buffers As IList(Of ArraySegment(Of Byte))) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; -&gt; int" Usage="socket.Send buffers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="buffers">
          <span data-ttu-id="3831b-2810">
            <see cref="T:System.ArraySegment`1" /> 型別的 <see cref="T:System.Byte" /> 清單，其中包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2810">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the data to be sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2811">將清單中的緩衝區集合傳送至連接的 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2811">Sends the set of buffers in the list to a connected <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2812">已傳送到 <see cref="T:System.Net.Sockets.Socket" /> 的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2812">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2813"><xref:System.Net.Sockets.Socket.Send%2A> 可用的連線導向和無連線通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-2813"><xref:System.Net.Sockets.Socket.Send%2A> can be used for both connection-oriented and connectionless protocols.</span></span>  
  
 <span data-ttu-id="3831b-2814">這個多載都需要至少一個緩衝區，其中包含您想要傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2814">This overload requires at least one buffer that contains the data you want to send.</span></span>  
  
 <span data-ttu-id="3831b-2815">如果您使用無連接的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>之前呼叫這個方法，或是<xref:System.Net.Sockets.Socket.Send%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2815">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method, or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2816">如果您使用連線導向的通訊協定，您必須使用<xref:System.Net.Sockets.Socket.Connect%2A>建立遠端主機連線，或使用<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-2816">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="3831b-2817">如果您使用無連線的通訊協定和計劃將資料傳送至數個不同的主控件，您應該使用<xref:System.Net.Sockets.Socket.SendTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2817">If you are using a connectionless protocol and plan to send data to several different hosts, you should use the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="3831b-2818">如果您不要使用<xref:System.Net.Sockets.Socket.SendTo%2A>方法中，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>每次呼叫之前<xref:System.Net.Sockets.Socket.Send%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2818">If you do not use the <xref:System.Net.Sockets.Socket.SendTo%2A> method, you will have to call <xref:System.Net.Sockets.Socket.Connect%2A> before each call to <xref:System.Net.Sockets.Socket.Send%2A>.</span></span> <span data-ttu-id="3831b-2819">您可以使用<xref:System.Net.Sockets.Socket.SendTo%2A>即使您已建立預設遠端主機與之後<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2819">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-2820">您也可以變更預設遠端主機，才能呼叫<xref:System.Net.Sockets.Socket.Send%2A>藉由另一個呼叫<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2820">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="3831b-2821">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.Send%2A>將會封鎖直到所有緩衝區的位元組傳送，除非逾時已設定使用<xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2821">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until all of the bytes in the buffer are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-2822">如果已超過逾時值<xref:System.Net.Sockets.Socket.Send%2A>呼叫會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2822">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2823">在未封鎖模式中，<xref:System.Net.Sockets.Socket.Send%2A>即使傳送的位元組數目小於緩衝區中可能會順利完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-2823">In nonblocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes in the buffer.</span></span> <span data-ttu-id="3831b-2824">是記錄傳送的位元組數，以及重試此作業，直到應用程式可將位元組傳送緩衝區中的應用程式的責任。</span><span class="sxs-lookup"><span data-stu-id="3831b-2824">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the bytes in the buffer.</span></span> <span data-ttu-id="3831b-2825">另外還有您傳送的資料就會立即出現在網路不保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-2825">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-2826">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2826">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="3831b-2827">成功完成<xref:System.Net.Sockets.Socket.Send%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-2827">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2828">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2828">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2829">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2829">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2830">成功完成傳送不表示已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2830">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="3831b-2831">如果沒有緩衝區可用空間來保存資料傳輸的傳輸系統內，則除非通訊端已處於未封鎖模式，將會封鎖傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-2831">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2832">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2832">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2833">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2833">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Net.Sockets.Socket.Send(System.Byte[])" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2834">
            <paramref name="buffers" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2834">
              <paramref name="buffers" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-2835">
            <paramref name="buffers" /> 是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2835">
              <paramref name="buffers" /> is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2836">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2836">An error occurred when attempting to access the socket.</span>
          </span>
          <span data-ttu-id="3831b-2837">請參閱以下註解章節。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2837">See remarks section below.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2838">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2838">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (buffer As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="member this.Send : ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="socket.Send buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] buffer, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] buffer, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ buffer, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Send (buffer, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-2839">類型 <see cref="T:System.Byte" /> 的陣列，其中包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2839">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-2840">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2840">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2841">使用指定的 <see cref="T:System.Net.Sockets.Socket" />，傳送資料至已連接的 <see cref="T:System.Net.Sockets.SocketFlags" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2841">Sends data to a connected <see cref="T:System.Net.Sockets.Socket" /> using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2842">已傳送到 <see cref="T:System.Net.Sockets.Socket" /> 的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2842">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2843"><xref:System.Net.Sockets.Socket.Send%2A> 以同步方式將資料傳送至遠端主機中建立<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法並傳回成功傳送的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2843"><xref:System.Net.Sockets.Socket.Send%2A> synchronously sends data to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="3831b-2844"><xref:System.Net.Sockets.Socket.Send%2A>方法可以用於連接導向和無連線的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-2844">The <xref:System.Net.Sockets.Socket.Send%2A> method can be used for both connection-oriented and connectionless protocols.</span></span>  
  
 <span data-ttu-id="3831b-2845">這個多載都需要此緩衝區包含您想要傳送的資料和的位元組合<xref:System.Net.Sockets.SocketFlags>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2845">This overload requires a buffer that contains the data you want to send and a bitwise combination of <xref:System.Net.Sockets.SocketFlags>.</span></span> <span data-ttu-id="3831b-2846">緩衝區位移為 0，而且要傳送的緩衝區大小的預設值的位元組數目的預設值。</span><span class="sxs-lookup"><span data-stu-id="3831b-2846">The buffer offset defaults to 0, and the number of bytes to send defaults to the size of the buffer.</span></span> <span data-ttu-id="3831b-2847">如果您指定<xref:System.Net.Sockets.SocketFlags.DontRoute>旗標標示為`socketflags`參數值、 您要將不會路由傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2847">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter value, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="3831b-2848">如果您使用無連接的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>之前呼叫這個方法，或是<xref:System.Net.Sockets.Socket.Send%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2848">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method, or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2849">如果您使用連線導向的通訊協定，您必須使用<xref:System.Net.Sockets.Socket.Connect%2A>建立遠端主機連線，或使用<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-2849">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="3831b-2850">如果您使用無連線的通訊協定和計劃將資料傳送至數個不同的主控件，您應該使用<xref:System.Net.Sockets.Socket.SendTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2850">If you are using a connectionless protocol and plan to send data to several different hosts, you should use the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="3831b-2851">如果您不要使用<xref:System.Net.Sockets.Socket.SendTo%2A>方法中，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>方法，然後再每次呼叫<xref:System.Net.Sockets.Socket.Send%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2851">If you do not use the <xref:System.Net.Sockets.Socket.SendTo%2A> method, you will have to call the <xref:System.Net.Sockets.Socket.Connect%2A> method before each call to <xref:System.Net.Sockets.Socket.Send%2A>.</span></span> <span data-ttu-id="3831b-2852">您可以使用<xref:System.Net.Sockets.Socket.SendTo%2A>即使您已建立預設遠端主機與之後<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2852">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-2853">您也可以變更預設遠端主機，才能呼叫<xref:System.Net.Sockets.Socket.Send%2A>藉由另一個呼叫<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2853">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="3831b-2854">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.Send%2A>將會封鎖直到所有緩衝區的位元組傳送，除非逾時已設定使用<xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2854">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until all of the bytes in the buffer are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-2855">如果已超過逾時值<xref:System.Net.Sockets.Socket.Send%2A>呼叫會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2855">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2856">在未封鎖模式中，<xref:System.Net.Sockets.Socket.Send%2A>即使傳送的位元組數目小於緩衝區中可能會順利完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-2856">In nonblocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes in the buffer.</span></span> <span data-ttu-id="3831b-2857">負責您的應用程式來追蹤已傳送的位元組數，以及重試此作業，直到應用程式傳送要求的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2857">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the requested number of bytes.</span></span> <span data-ttu-id="3831b-2858">另外還有您傳送的資料就會立即出現在網路不保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-2858">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-2859">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2859">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="3831b-2860">成功完成<xref:System.Net.Sockets.Socket.Send%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-2860">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2861">您必須確定您的緩衝區大小不會超過基礎的服務提供者的最大的封包。</span><span class="sxs-lookup"><span data-stu-id="3831b-2861">You must ensure that the size of your buffer does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-2862">若是如此，將不會傳送資料包並<xref:System.Net.Sockets.Socket.Send%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2862">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2863">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2863">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2864">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2864">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2865">成功完成傳送不表示已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2865">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="3831b-2866">如果沒有緩衝區可用空間來保存資料傳輸的傳輸系統內，則除非通訊端已處於未封鎖模式，將會封鎖傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-2866">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2867">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2867">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2868">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2868">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2869">下列程式碼範例示範如何在已連接的資料傳送<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2869">The following code example demonstrates sending data on a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#2)]
 [!code-csharp[Socket_Sync_Send_Receive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#2)]
 [!code-vb[Socket_Sync_Send_Receive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2870">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2870">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2871">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2871">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2872">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2872">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Send (buffers, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
      </Parameters>
      <Docs>
        <param name="buffers">
          <span data-ttu-id="3831b-2873">
            <see cref="T:System.ArraySegment`1" /> 型別的 <see cref="T:System.Byte" /> 清單，其中包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2873">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the data to be sent.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-2874">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2874">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2875">使用指定的 <see cref="T:System.Net.Sockets.Socket" />，將清單中的緩衝區集合傳送至連接的 <see cref="T:System.Net.Sockets.SocketFlags" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2875">Sends the set of buffers in the list to a connected <see cref="T:System.Net.Sockets.Socket" />, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2876">已傳送到 <see cref="T:System.Net.Sockets.Socket" /> 的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2876">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2877">這個多載都需要至少一個緩衝區，其中包含您想要傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2877">This overload requires at least one buffer that contains the data you want to send.</span></span> <span data-ttu-id="3831b-2878"><xref:System.Net.Sockets.SocketFlags>值預設為 0。</span><span class="sxs-lookup"><span data-stu-id="3831b-2878">The <xref:System.Net.Sockets.SocketFlags> value defaults to 0.</span></span> <span data-ttu-id="3831b-2879">如果您指定<xref:System.Net.Sockets.SocketFlags.DontRoute>旗標標示為`socketFlags`參數，您要將不會路由傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2879">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketFlags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="3831b-2880">如果您使用無連接的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>之前呼叫這個方法，或是<xref:System.Net.Sockets.Socket.Send%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2880">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method, or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2881">如果您使用連線導向的通訊協定，您必須使用<xref:System.Net.Sockets.Socket.Connect%2A>建立遠端主機連線，或使用<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-2881">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="3831b-2882">如果您使用無連線的通訊協定和計劃將資料傳送至數個不同的主控件，您應該使用<xref:System.Net.Sockets.Socket.SendTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2882">If you are using a connectionless protocol and plan to send data to several different hosts, you should use the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="3831b-2883">如果您不要使用<xref:System.Net.Sockets.Socket.SendTo%2A>方法中，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>每次呼叫之前<xref:System.Net.Sockets.Socket.Send%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2883">If you do not use the <xref:System.Net.Sockets.Socket.SendTo%2A> method, you will have to call <xref:System.Net.Sockets.Socket.Connect%2A> before each call to <xref:System.Net.Sockets.Socket.Send%2A>.</span></span> <span data-ttu-id="3831b-2884">您可以使用<xref:System.Net.Sockets.Socket.SendTo%2A>即使您已建立預設遠端主機與之後<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2884">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-2885">您也可以變更預設遠端主機，才能呼叫<xref:System.Net.Sockets.Socket.Send%2A>藉由另一個呼叫<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2885">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="3831b-2886">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.Send%2A>將會封鎖直到所有緩衝區的位元組傳送，除非逾時已設定使用<xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2886">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until all of the bytes in the buffer are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-2887">如果已超過逾時值<xref:System.Net.Sockets.Socket.Send%2A>呼叫會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2887">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2888">在非封鎖模式中，<xref:System.Net.Sockets.Socket.Send%2A>即使傳送的位元組數目小於緩衝區中可能會順利完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-2888">In non-blocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes in the buffer.</span></span> <span data-ttu-id="3831b-2889">是記錄傳送的位元組數，以及重試此作業，直到應用程式可將位元組傳送緩衝區中的應用程式的責任。</span><span class="sxs-lookup"><span data-stu-id="3831b-2889">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the bytes in the buffer.</span></span> <span data-ttu-id="3831b-2890">另外還有您傳送的資料就會立即出現在網路不保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-2890">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-2891">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2891">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="3831b-2892">成功完成<xref:System.Net.Sockets.Socket.Send%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-2892">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2893">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2893">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2894">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2894">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2895">成功完成傳送不表示已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2895">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="3831b-2896">如果沒有緩衝區可用空間來保存資料傳輸的傳輸系統內，則除非通訊端已處於未封鎖模式，將會封鎖傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-2896">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2897">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2897">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2898">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2898">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2899">
            <paramref name="buffers" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2899">
              <paramref name="buffers" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-2900">
            <paramref name="buffers" /> 是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2900">
              <paramref name="buffers" /> is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2901">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2901">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2902">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2902">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (ReadOnlySpan&lt;byte&gt; buffer, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(ReadOnlySpan&lt;System::Byte&gt; buffer, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Send : ReadOnlySpan&lt;byte&gt; * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Send (buffer, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="socketFlags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] buffer, int size, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] buffer, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ buffer, int size, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Send (buffer, size, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-2903">類型 <see cref="T:System.Byte" /> 的陣列，其中包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2903">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-2904">要傳送的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2904">The number of bytes to send.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-2905">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2905">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2906">使用指定的 <see cref="T:System.Net.Sockets.Socket" />，傳送指定的資料位元組數至已連接的 <see cref="T:System.Net.Sockets.SocketFlags" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2906">Sends the specified number of bytes of data to a connected <see cref="T:System.Net.Sockets.Socket" />, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2907">已傳送到 <see cref="T:System.Net.Sockets.Socket" /> 的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2907">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2908"><xref:System.Net.Sockets.Socket.Send%2A> 以同步方式將資料傳送至遠端主機中建立<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法並傳回成功傳送的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2908"><xref:System.Net.Sockets.Socket.Send%2A> synchronously sends data to the remote host established in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="3831b-2909"><xref:System.Net.Sockets.Socket.Send%2A> 可用的連線導向和無連線通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-2909"><xref:System.Net.Sockets.Socket.Send%2A> can be used for both connection-oriented and connectionless protocols.</span></span>  
  
 <span data-ttu-id="3831b-2910">這個多載都需要包含您想要傳送，您想要傳送的位元組數目的位元組合的任何的資料的緩衝區<xref:System.Net.Sockets.SocketFlags>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2910">This overload requires a buffer that contains the data you want to send, the number of bytes you want to send, and a bitwise combination of any <xref:System.Net.Sockets.SocketFlags>.</span></span> <span data-ttu-id="3831b-2911">如果您指定<xref:System.Net.Sockets.SocketFlags.DontRoute>旗標標示為`socketflags`參數，您要將不會路由傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2911">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="3831b-2912">如果您使用無連接的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>之前呼叫這個方法，或是<xref:System.Net.Sockets.Socket.Send%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2912">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method, or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2913">如果您使用連線導向的通訊協定，您必須使用<xref:System.Net.Sockets.Socket.Connect%2A>建立遠端主機連線，或使用<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-2913">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="3831b-2914">如果您使用無連線的通訊協定和計劃將資料傳送至數個不同的主控件，您應該使用<xref:System.Net.Sockets.Socket.SendTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2914">If you are using a connectionless protocol and plan to send data to several different hosts, you should use the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="3831b-2915">如果您不要使用<xref:System.Net.Sockets.Socket.SendTo%2A>方法中，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>方法，然後再每次呼叫<xref:System.Net.Sockets.Socket.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2915">If you do not use the <xref:System.Net.Sockets.Socket.SendTo%2A> method, you will have to call the <xref:System.Net.Sockets.Socket.Connect%2A> method before each call to the <xref:System.Net.Sockets.Socket.Send%2A> method.</span></span> <span data-ttu-id="3831b-2916">您可以使用<xref:System.Net.Sockets.Socket.SendTo%2A>即使您已建立預設遠端主機與之後<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2916">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-2917">您也可以變更預設遠端主機，才能呼叫<xref:System.Net.Sockets.Socket.Send%2A>藉由另一個呼叫<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2917">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="3831b-2918">使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.Send%2A>將會封鎖直到傳送要求的位元組數目，除非逾時已設定使用<xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2918">With a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until the requested number of bytes are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-2919">如果已超過逾時值<xref:System.Net.Sockets.Socket.Send%2A>呼叫會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2919">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2920">在未封鎖模式中，<xref:System.Net.Sockets.Socket.Send%2A>即使傳送小於您要求的位元組數目可能會順利完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-2920">In nonblocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes you request.</span></span> <span data-ttu-id="3831b-2921">負責您的應用程式來追蹤已傳送的位元組數，以及重試此作業，直到應用程式傳送要求的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2921">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the requested number of bytes.</span></span> <span data-ttu-id="3831b-2922">另外還有您傳送的資料就會立即出現在網路不保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-2922">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-2923">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2923">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="3831b-2924">成功完成<xref:System.Net.Sockets.Socket.Send%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-2924">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2925">您必須確定大小不超過最大的封包大小為基礎的服務提供者。</span><span class="sxs-lookup"><span data-stu-id="3831b-2925">You must ensure that the size does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-2926">若是如此，將不會傳送資料包並<xref:System.Net.Sockets.Socket.Send%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2926">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2927">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2927">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2928">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2928">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2929">成功完成傳送不表示已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2929">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="3831b-2930">如果沒有緩衝區可用空間來保存資料傳輸的傳輸系統內，則除非通訊端已處於未封鎖模式，將會封鎖傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-2930">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2931">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2931">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2932">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2932">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-2933">下列程式碼範例會將傳送緩衝區中找到的資料，並指定<xref:System.Net.Sockets.SocketFlags.None>針對<xref:System.Net.Sockets.SocketFlags>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2933">The following code example sends the data found in buffer, and specifies <xref:System.Net.Sockets.SocketFlags.None> for <xref:System.Net.Sockets.SocketFlags>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#3)]
 [!code-csharp[Socket_Sync_Send_Receive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#3)]
 [!code-vb[Socket_Sync_Send_Receive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2934">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2934">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-2935">
            <paramref name="size" /> 小於 0 或超過緩衝區的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2935">
              <paramref name="size" /> is less than 0 or exceeds the size of the buffer.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2936">
            <paramref name="socketFlags" /> 不是有效的值組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2936">
              <paramref name="socketFlags" /> is not a valid combination of values.</span>
          </span>
          <span data-ttu-id="3831b-2937">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2937">-or-</span>
          </span>
          <span data-ttu-id="3831b-2938">存取通訊端時發生作業系統錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2938">An operating system error occurs while accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2939">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2939">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; buffers, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(class System.Collections.Generic.IList`1&lt;valuetype System.ArraySegment`1&lt;unsigned int8&gt;&gt; buffers, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(System::Collections::Generic::IList&lt;ArraySegment&lt;System::Byte&gt;&gt; ^ buffers, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Collections.Generic.IList&lt;ArraySegment&lt;byte&gt;&gt; * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.Send (buffers, socketFlags, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffers" Type="System.Collections.Generic.IList&lt;System.ArraySegment&lt;System.Byte&gt;&gt;" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffers">
          <span data-ttu-id="3831b-2940">
            <see cref="T:System.ArraySegment`1" /> 型別的 <see cref="T:System.Byte" /> 清單，其中包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2940">A list of <see cref="T:System.ArraySegment`1" />s of type <see cref="T:System.Byte" /> that contains the data to be sent.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-2941">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2941">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="errorCode">
          <span data-ttu-id="3831b-2942">
            <see cref="T:System.Net.Sockets.SocketError" /> 物件，儲存通訊端錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2942">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2943">使用指定的 <see cref="T:System.Net.Sockets.Socket" />，將清單中的緩衝區集合傳送至連接的 <see cref="T:System.Net.Sockets.SocketFlags" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2943">Sends the set of buffers in the list to a connected <see cref="T:System.Net.Sockets.Socket" />, using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2944">已傳送到 <see cref="T:System.Net.Sockets.Socket" /> 的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2944">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2945">這個多載都需要至少一個緩衝區，其中包含您想要傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2945">This overload requires at least one buffer that contains the data you want to send.</span></span> <span data-ttu-id="3831b-2946"><xref:System.Net.Sockets.SocketFlags>值預設為 0。</span><span class="sxs-lookup"><span data-stu-id="3831b-2946">The <xref:System.Net.Sockets.SocketFlags> value defaults to 0.</span></span> <span data-ttu-id="3831b-2947">如果您指定<xref:System.Net.Sockets.SocketFlags.DontRoute>旗標標示為`socketFlags`參數，您要將不會路由傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2947">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketFlags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="3831b-2948">如果您使用無連接的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>之前呼叫這個方法，或是<xref:System.Net.Sockets.Socket.Send%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2948">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method, or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2949">如果您使用連線導向的通訊協定，您必須使用<xref:System.Net.Sockets.Socket.Connect%2A>建立遠端主機連線，或使用<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-2949">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="3831b-2950">如果您使用無連線的通訊協定和計劃將資料傳送至數個不同的主控件，您應該使用<xref:System.Net.Sockets.Socket.SendTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-2950">If you are using a connectionless protocol and plan to send data to several different hosts, you should use the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="3831b-2951">如果您不要使用<xref:System.Net.Sockets.Socket.SendTo%2A>方法中，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>每次呼叫之前<xref:System.Net.Sockets.Socket.Send%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2951">If you do not use the <xref:System.Net.Sockets.Socket.SendTo%2A> method, you will have to call <xref:System.Net.Sockets.Socket.Connect%2A> before each call to <xref:System.Net.Sockets.Socket.Send%2A>.</span></span> <span data-ttu-id="3831b-2952">您可以使用<xref:System.Net.Sockets.Socket.SendTo%2A>即使您已建立預設遠端主機與之後<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2952">You can use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-2953">您也可以變更預設遠端主機，才能呼叫<xref:System.Net.Sockets.Socket.Send%2A>藉由另一個呼叫<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2953">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="3831b-2954">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.Send%2A>將會封鎖直到所有緩衝區的位元組傳送，除非逾時已設定使用<xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2954">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until all of the bytes in the buffer are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-2955">如果已超過逾時值<xref:System.Net.Sockets.Socket.Send%2A>呼叫會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2955">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2956">在非封鎖模式中，<xref:System.Net.Sockets.Socket.Send%2A>即使傳送的位元組數目小於緩衝區中可能會順利完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-2956">In non-blocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes in the buffer.</span></span> <span data-ttu-id="3831b-2957">是記錄傳送的位元組數，以及重試此作業，直到應用程式可將位元組傳送緩衝區中的應用程式的責任。</span><span class="sxs-lookup"><span data-stu-id="3831b-2957">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the bytes in the buffer.</span></span> <span data-ttu-id="3831b-2958">另外還有您傳送的資料就會立即出現在網路不保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-2958">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-2959">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2959">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="3831b-2960">成功完成<xref:System.Net.Sockets.Socket.Send%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-2960">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2961">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2961">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2962">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2962">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2963">成功完成傳送不表示已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2963">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="3831b-2964">如果沒有緩衝區可用空間來保存資料傳輸的傳輸系統內，則除非通訊端已處於未封鎖模式，將會封鎖傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-2964">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2965">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2965">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-2966">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-2966">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-2967">
            <paramref name="buffers" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2967">
              <paramref name="buffers" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-2968">
            <paramref name="buffers" /> 是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2968">
              <paramref name="buffers" /> is empty.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-2969">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2969">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-2970">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2970">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (ReadOnlySpan&lt;byte&gt; buffer, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.ReadOnlySpan{System.Byte},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(ReadOnlySpan&lt;System::Byte&gt; buffer, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.Send : ReadOnlySpan&lt;byte&gt; * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.Send (buffer, socketFlags, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="socketFlags">To be added.</param>
        <param name="errorCode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * int * System.Net.Sockets.SocketFlags -&gt; int" Usage="socket.Send (buffer, offset, size, socketFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-2971">類型 <see cref="T:System.Byte" /> 的陣列，其中包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2971">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3831b-2972">資料緩衝區中要開始傳送資料的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2972">The position in the data buffer at which to begin sending data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-2973">要傳送的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2973">The number of bytes to send.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-2974">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2974">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-2975">從指定位移開始，並使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" />，將資料的指定位元組數傳送到連接的 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2975">Sends the specified number of bytes of data to a connected <see cref="T:System.Net.Sockets.Socket" />, starting at the specified offset, and using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-2976">已傳送到 <see cref="T:System.Net.Sockets.Socket" /> 的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-2976">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-2977"><xref:System.Net.Sockets.Socket.Send%2A> 以同步方式將資料傳送至遠端主機中指定<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法並傳回成功傳送的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2977"><xref:System.Net.Sockets.Socket.Send%2A> synchronously sends data to the remote host specified in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="3831b-2978"><xref:System.Net.Sockets.Socket.Send%2A> 可用的連線導向和無連線通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-2978"><xref:System.Net.Sockets.Socket.Send%2A> can be used for both connection-oriented and connectionless protocols.</span></span>  
  
 <span data-ttu-id="3831b-2979">在這個多載，如果您指定<xref:System.Net.Sockets.SocketFlags.DontRoute>旗標標示為`socketflags`參數，您要將不會路由傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2979">In this overload, if you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="3831b-2980">如果您使用無連接的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>之前呼叫這個方法或<xref:System.Net.Sockets.Socket.Send%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2980">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2981">如果您使用連線導向的通訊協定，您必須使用<xref:System.Net.Sockets.Socket.Connect%2A>建立遠端主機連線，或使用<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-2981">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="3831b-2982">如果您使用無連線的通訊協定和計劃將資料傳送至數個不同的主控件，您應該使用<xref:System.Net.Sockets.Socket.SendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2982">If you are using a connectionless protocol and plan to send data to several different hosts, you should use <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span> <span data-ttu-id="3831b-2983">如果您不要使用<xref:System.Net.Sockets.Socket.SendTo%2A>，您就必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>每次呼叫之前<xref:System.Net.Sockets.Socket.Send%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2983">If you do not use <xref:System.Net.Sockets.Socket.SendTo%2A>, you will have to call <xref:System.Net.Sockets.Socket.Connect%2A> before each call to <xref:System.Net.Sockets.Socket.Send%2A>.</span></span> <span data-ttu-id="3831b-2984">可以使用<xref:System.Net.Sockets.Socket.SendTo%2A>即使您已建立預設遠端主機與之後<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2984">It is okay to use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-2985">您也可以變更預設遠端主機，才能呼叫<xref:System.Net.Sockets.Socket.Send%2A>藉由另一個呼叫<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2985">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="3831b-2986">您也必須確定大小未超過基礎的服務提供者的最大的封包大小。</span><span class="sxs-lookup"><span data-stu-id="3831b-2986">You must also be sure that the size does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-2987">若是如此，將不會傳送資料包並<xref:System.Net.Sockets.Socket.Send%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2987">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="3831b-2988">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.Send%2A>將會封鎖直到傳送要求的位元組數目，除非逾時已設定使用<xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2988">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until the requested number of bytes are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-2989">如果已超過逾時值<xref:System.Net.Sockets.Socket.Send%2A>呼叫會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-2989">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-2990">在未封鎖模式中，<xref:System.Net.Sockets.Socket.Send%2A>即使傳送小於您要求的位元組數目可能會順利完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-2990">In nonblocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes you request.</span></span> <span data-ttu-id="3831b-2991">負責您的應用程式來追蹤已傳送的位元組數，以及重試此作業，直到應用程式傳送要求的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-2991">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the requested number of bytes.</span></span> <span data-ttu-id="3831b-2992">另外還有您傳送的資料就會立即出現在網路不保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-2992">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-2993">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2993">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="3831b-2994">成功完成<xref:System.Net.Sockets.Socket.Send%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-2994">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2995">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-2995">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-2996">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-2996">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2997">成功完成傳送不表示已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-2997">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="3831b-2998">如果沒有緩衝區可用空間來保存資料傳輸的傳輸系統內，則除非通訊端已處於未封鎖模式，將會封鎖傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-2998">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-2999">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-2999">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-3000">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-3000">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3001">下列程式碼範例會指定資料緩衝區、 位移、 大小、 及<xref:System.Net.Sockets.SocketFlags>將資料傳送至已連接<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3001">The following code example specifies the data buffer, an offset, a size, and <xref:System.Net.Sockets.SocketFlags> for sending data to a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#4)]
 [!code-csharp[Socket_Sync_Send_Receive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#4)]
 [!code-vb[Socket_Sync_Send_Receive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-3002">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3002">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-3003">
            <paramref name="offset" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3003">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-3004">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3004">-or-</span>
          </span>
          <span data-ttu-id="3831b-3005">
            <paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3005">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="3831b-3006">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3006">-or-</span>
          </span>
          <span data-ttu-id="3831b-3007">
            <paramref name="size" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3007">
              <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-3008">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3008">-or-</span>
          </span>
          <span data-ttu-id="3831b-3009">
            <paramref name="size" /> 大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3009">
              <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3010">
            <paramref name="socketFlags" /> 不是有效的值組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3010">
              <paramref name="socketFlags" /> is not a valid combination of values.</span>
          </span>
          <span data-ttu-id="3831b-3011">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3011">-or-</span>
          </span>
          <span data-ttu-id="3831b-3012">在存取 <see cref="T:System.Net.Sockets.Socket" /> 時發生作業系統錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3012">An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3013">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3013">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, out System.Net.Sockets.SocketError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, [out] valuetype System.Net.Sockets.SocketError&amp; errorCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, [Runtime::InteropServices::Out] System::Net::Sockets::SocketError % errorCode);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * int * System.Net.Sockets.SocketFlags *  -&gt; int" Usage="socket.Send (buffer, offset, size, socketFlags, errorCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="errorCode" Type="System.Net.Sockets.SocketError" RefType="out" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-3014">類型 <see cref="T:System.Byte" /> 的陣列，其中包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3014">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3831b-3015">資料緩衝區中要開始傳送資料的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3015">The position in the data buffer at which to begin sending data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-3016">要傳送的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3016">The number of bytes to send.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-3017">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3017">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="errorCode">
          <span data-ttu-id="3831b-3018">
            <see cref="T:System.Net.Sockets.SocketError" /> 物件，儲存通訊端錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3018">A <see cref="T:System.Net.Sockets.SocketError" /> object that stores the socket error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3019">從指定的位移開始並使用指定的 <see cref="T:System.Net.Sockets.Socket" />，將指定的資料位元組數傳送至已連接的 <see cref="T:System.Net.Sockets.SocketFlags" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3019">Sends the specified number of bytes of data to a connected <see cref="T:System.Net.Sockets.Socket" />, starting at the specified offset, and using the specified <see cref="T:System.Net.Sockets.SocketFlags" /></span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-3020">已傳送到 <see cref="T:System.Net.Sockets.Socket" /> 的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3020">The number of bytes sent to the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3021"><xref:System.Net.Sockets.Socket.Send%2A> 以同步方式將資料傳送至遠端主機中指定<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法並傳回成功傳送的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-3021"><xref:System.Net.Sockets.Socket.Send%2A> synchronously sends data to the remote host specified in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="3831b-3022"><xref:System.Net.Sockets.Socket.Send%2A> 可用的連線導向和無連線通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-3022"><xref:System.Net.Sockets.Socket.Send%2A> can be used for both connection-oriented and connectionless protocols.</span></span>  
  
 <span data-ttu-id="3831b-3023">在這個多載，如果您指定<xref:System.Net.Sockets.SocketFlags.DontRoute>旗標標示為`socketflags`參數，您要將不會路由傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3023">In this overload, if you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="3831b-3024">如果您使用無連接的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>之前呼叫這個方法或<xref:System.Net.Sockets.Socket.Send%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3024">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method or <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-3025">如果您使用連線導向的通訊協定，您必須使用<xref:System.Net.Sockets.Socket.Connect%2A>建立遠端主機連線，或使用<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-3025">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="3831b-3026">如果您使用無連線的通訊協定和計劃將資料傳送至數個不同的主控件，您應該使用<xref:System.Net.Sockets.Socket.SendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3026">If you are using a connectionless protocol and plan to send data to several different hosts, you should use <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span> <span data-ttu-id="3831b-3027">如果您不要使用<xref:System.Net.Sockets.Socket.SendTo%2A>，您就必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>每次呼叫之前<xref:System.Net.Sockets.Socket.Send%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3027">If you do not use <xref:System.Net.Sockets.Socket.SendTo%2A>, you will have to call <xref:System.Net.Sockets.Socket.Connect%2A> before each call to <xref:System.Net.Sockets.Socket.Send%2A>.</span></span> <span data-ttu-id="3831b-3028">可以使用<xref:System.Net.Sockets.Socket.SendTo%2A>即使您已建立預設遠端主機與之後<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3028">It is okay to use <xref:System.Net.Sockets.Socket.SendTo%2A> even after you have established a default remote host with <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span> <span data-ttu-id="3831b-3029">您也可以變更預設遠端主機，才能呼叫<xref:System.Net.Sockets.Socket.Send%2A>藉由另一個呼叫<xref:System.Net.Sockets.Socket.Connect%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3029">You can also change the default remote host prior to calling <xref:System.Net.Sockets.Socket.Send%2A> by making another call to <xref:System.Net.Sockets.Socket.Connect%2A>.</span></span>  
  
 <span data-ttu-id="3831b-3030">您也必須確定大小未超過基礎的服務提供者的最大的封包大小。</span><span class="sxs-lookup"><span data-stu-id="3831b-3030">You must also be sure that the size does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-3031">若是如此，將不會傳送資料包並<xref:System.Net.Sockets.Socket.Send%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3031">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="3831b-3032">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.Send%2A>將會封鎖直到傳送要求的位元組數目，除非逾時已設定使用<xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3032">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.Send%2A> will block until the requested number of bytes are sent, unless a time-out was set by using <xref:System.Net.Sockets.Socket.SendTimeout%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-3033">如果已超過逾時值<xref:System.Net.Sockets.Socket.Send%2A>呼叫會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3033">If the time-out value was exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> call will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-3034">在未封鎖模式中，<xref:System.Net.Sockets.Socket.Send%2A>即使傳送小於您要求的位元組數目可能會順利完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-3034">In nonblocking mode, <xref:System.Net.Sockets.Socket.Send%2A> may complete successfully even if it sends less than the number of bytes you request.</span></span> <span data-ttu-id="3831b-3035">負責您的應用程式來追蹤已傳送的位元組數，以及重試此作業，直到應用程式傳送要求的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-3035">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the requested number of bytes.</span></span> <span data-ttu-id="3831b-3036">另外還有您傳送的資料就會立即出現在網路不保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-3036">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-3037">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3037">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="3831b-3038">成功完成<xref:System.Net.Sockets.Socket.Send%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-3038">A successful completion of the <xref:System.Net.Sockets.Socket.Send%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3039">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3039">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-3040">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-3040">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3041">成功完成傳送不表示已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3041">The successful completion of a send does not indicate that the data was successfully delivered.</span></span> <span data-ttu-id="3831b-3042">如果沒有緩衝區可用空間來保存資料傳輸的傳輸系統內，則除非通訊端已處於未封鎖模式，將會封鎖傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-3042">If no buffer space is available within the transport system to hold the data to be transmitted, send will block unless the socket has been placed in nonblocking mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3043">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3043">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-3044">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-3044">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3045">下列程式碼範例會指定資料緩衝區、 位移、 大小、 及<xref:System.Net.Sockets.SocketFlags>將資料傳送至已連接<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3045">The following code example specifies the data buffer, an offset, a size, and <xref:System.Net.Sockets.SocketFlags> for sending data to a connected <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#4)]
 [!code-csharp[Socket_Sync_Send_Receive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#4)]
 [!code-vb[Socket_Sync_Send_Receive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-3046">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3046">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-3047">
            <paramref name="offset" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3047">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-3048">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3048">-or-</span>
          </span>
          <span data-ttu-id="3831b-3049">
            <paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3049">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="3831b-3050">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3050">-or-</span>
          </span>
          <span data-ttu-id="3831b-3051">
            <paramref name="size" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3051">
              <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-3052">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3052">-or-</span>
          </span>
          <span data-ttu-id="3831b-3053">
            <paramref name="size" /> 大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3053">
              <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3054">
            <paramref name="socketFlags" /> 不是有效的值組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3054">
              <paramref name="socketFlags" /> is not a valid combination of values.</span>
          </span>
          <span data-ttu-id="3831b-3055">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3055">-or-</span>
          </span>
          <span data-ttu-id="3831b-3056">在存取 <see cref="T:System.Net.Sockets.Socket" /> 時發生作業系統錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3056">An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3057">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3057">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="T:System.Net.Sockets.SocketFlags" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public bool SendAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SendAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SendAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.SendAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3831b-3058">
            <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件，用於這個非同步通訊端作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3058">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3059">將資料以非同步方式傳送至已連接的 <see cref="T:System.Net.Sockets.Socket" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3059">Sends data asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-3060">如果 I/O 作業暫止，則傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3060">Returns <see langword="true" /> if the I/O operation is pending.</span>
          </span>
          <span data-ttu-id="3831b-3061">作業完成時會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3061">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span>
          </span>
          <span data-ttu-id="3831b-3062">如果 I/O 作業同步完成，則傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3062">Returns <see langword="false" /> if the I/O operation completed synchronously.</span>
          </span>
          <span data-ttu-id="3831b-3063">在這個情況下，就不會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，而在方法呼叫傳回後會立即檢查做為參數傳遞的 <paramref name="e" /> 物件，以擷取作業的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3063">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3064"><xref:System.Net.Sockets.Socket.SendAsync%2A>方法用來從連線導向的通訊端上的一個或多個緩衝區寫入輸出資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3064">The <xref:System.Net.Sockets.Socket.SendAsync%2A> method is used to write outgoing data from one or more buffers on a connection-oriented socket.</span></span> <span data-ttu-id="3831b-3065">這個方法也可用，不過，在無連接的通訊端 connect 作業指定遠端主機上。</span><span class="sxs-lookup"><span data-stu-id="3831b-3065">This method can also be used, however, on connectionless sockets that have specified a remote host on a connect operation.</span></span>  
  
 <span data-ttu-id="3831b-3066"><xref:System.Net.Sockets.Socket.SendAsync%2A>方法會啟動非同步傳送作業中所建立的遠端主機<xref:System.Net.Sockets.Socket.Accept%2A>， <xref:System.Net.Sockets.Socket.AcceptAsync%2A>， <xref:System.Net.Sockets.Socket.BeginAccept%2A>， <xref:System.Net.Sockets.Socket.BeginConnect%2A>， <xref:System.Net.Sockets.Socket.Connect%2A>，或<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3066">The <xref:System.Net.Sockets.Socket.SendAsync%2A> method starts an asynchronous send operation to the remote host established in the <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.AcceptAsync%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-3067">下列的屬性和事件<xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType>物件，才能成功呼叫這個方法：</span><span class="sxs-lookup"><span data-stu-id="3831b-3067">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required to successfully call this method:</span></span>  
  
-   <span data-ttu-id="3831b-3068"><xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> 或 <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3831b-3068"><xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> or <xref:System.Net.Sockets.SocketAsyncEventArgs.BufferList%2A?displayProperty=nameWithType></span></span>  
  
-   <span data-ttu-id="3831b-3069"><xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> 如果<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType>設定</span><span class="sxs-lookup"><span data-stu-id="3831b-3069"><xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType> if <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> is set</span></span>  
  
-   <span data-ttu-id="3831b-3070"><xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType> 如果<xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType>設定</span><span class="sxs-lookup"><span data-stu-id="3831b-3070"><xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType> if <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType> is set</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
 <span data-ttu-id="3831b-3071">呼叫端可能會設定<xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType>呼叫之前所需的任何使用者狀態物件的屬性<xref:System.Net.Sockets.Socket.SendAsync%2A>方法，如此會在回呼方法中擷取資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3071">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.SendAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="3831b-3072">如果回呼需要比單一物件的詳細資訊，就可以建立小型的類別來保存為成員的其他必要的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3072">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="3831b-3073"><xref:System.Net.Sockets.Socket.SendAsync%2A>方法會擲回例外狀況，如果您未先呼叫<xref:System.Net.Sockets.Socket.Accept%2A>， <xref:System.Net.Sockets.Socket.AcceptAsync%2A>， <xref:System.Net.Sockets.Socket.BeginAccept%2A> <xref:System.Net.Sockets.Socket.BeginConnect%2A>， <xref:System.Net.Sockets.Socket.Connect%2A>，或<xref:System.Net.Sockets.Socket.ConnectAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3073">The <xref:System.Net.Sockets.Socket.SendAsync%2A> method will throw an exception if you do not first call <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.AcceptAsync%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A><xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.ConnectAsync%2A>.</span></span>  
  
 <span data-ttu-id="3831b-3074">呼叫<xref:System.Net.Sockets.Socket.SendAsync%2A>方法可讓您能夠傳送不同的執行緒中的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3074">Calling the <xref:System.Net.Sockets.Socket.SendAsync%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="3831b-3075">訊息導向的通訊端，不會超過訊息大小上限為基礎的 Windows 通訊端服務提供者。</span><span class="sxs-lookup"><span data-stu-id="3831b-3075">For message-oriented sockets, do not exceed the maximum message size of the underlying Windows sockets service provider.</span></span> <span data-ttu-id="3831b-3076">如果資料太長而無法透過基礎的服務提供者以不可分割方式傳遞，則傳送任何資料而<xref:System.Net.Sockets.Socket.SendAsync%2A>方法會擲回<xref:System.Net.Sockets.SocketException>使用<xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType>設為原生的 Winsock WSAEMSGSIZE 錯誤程式碼 (10040)。</span><span class="sxs-lookup"><span data-stu-id="3831b-3076">If the data is too long to pass atomically through the underlying service provider, no data is transmitted and the <xref:System.Net.Sockets.Socket.SendAsync%2A> method throws a <xref:System.Net.Sockets.SocketException> with the <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketError%2A?displayProperty=nameWithType> set to the native Winsock WSAEMSGSIZE error code (10040).</span></span>  
  
 <span data-ttu-id="3831b-3077">請注意，成功完成<xref:System.Net.Sockets.Socket.SendAsync%2A>方法不會指出已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3077">Note that the successful completion of the <xref:System.Net.Sockets.Socket.SendAsync%2A> method does not indicate that the data was successfully delivered.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-3078">
            <paramref name="e" /> 參數上的 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> 或 <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> 屬性必須參考有效的緩衝區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3078">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" /> or <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" /> properties on the <paramref name="e" /> parameter must reference valid buffers.</span>
          </span>
          <span data-ttu-id="3831b-3079">這兩個屬性可能有一個已經設定，但不會同時都已設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3079">One or the other of these properties may be set, but not both at the same time.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-3080">通訊端作業已使用 <paramref name="e" /> 參數內指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件正在進行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3080">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-3081">這個方法需要 Windows XP (含) 以後版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3081">Windows XP or later is required for this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3082">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3082">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3083">尚未透過 <see cref="T:System.Net.Sockets.Socket" />、<see cref="M:System.Net.Sockets.Socket.Accept" /> 或 <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" /> 方法取得 <see cref="Overload:System.Net.Sockets.Socket.BeginAccept" />，或尚未連接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3083">The <see cref="T:System.Net.Sockets.Socket" /> is not yet connected or was not obtained via an <see cref="M:System.Net.Sockets.Socket.Accept" />, <see cref="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)" />,or <see cref="Overload:System.Net.Sockets.Socket.BeginAccept" />, method.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.BufferList" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.Socket.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-3084">取得或設定值，指定 <see cref="T:System.Net.Sockets.Socket" /> 之傳送緩衝區的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3084">Gets or sets a value that specifies the size of the send buffer of the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-3085">
            <see cref="T:System.Int32" />，包含傳送緩衝區的大小 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3085">An <see cref="T:System.Int32" /> that contains the size, in bytes, of the send buffer.</span>
          </span>
          <span data-ttu-id="3831b-3086">預設值為 8192。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3086">The default is 8192.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3087">較大的緩衝區大小可能會延遲連線困難的辨識。</span><span class="sxs-lookup"><span data-stu-id="3831b-3087">A larger buffer size might delay the recognition of connection difficulties.</span></span> <span data-ttu-id="3831b-3088">請考慮增加緩衝區大小，如果您正在傳送大型檔案，或您使用的高頻寬、 高延遲連線 （例如衛星寬頻提供者。）</span><span class="sxs-lookup"><span data-stu-id="3831b-3088">Consider increasing the buffer size if you are transferring large files, or you are using a high bandwidth, high latency connection (such as a satellite broadband provider.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3089">下列程式碼範例示範使用<xref:System.Net.Sockets.Socket.SendBufferSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-3089">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.SendBufferSize%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3090">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3090">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3091">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3091">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-3092">為設定作業指定的值小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3092">The value specified for a set operation is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendFile">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-3093">將檔案和選擇性資料同步傳送至已連接的 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3093">Sends a file and optional data synchronously to a connected <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendFile">
      <MemberSignature Language="C#" Value="public void SendFile (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendFile(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendFile (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendFile(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.SendFile : string -&gt; unit" Usage="socket.SendFile fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="3831b-3094">包含要傳送之檔案的路徑與名稱的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3094">A <see cref="T:System.String" /> that contains the path and name of the file to be sent.</span>
          </span>
          <span data-ttu-id="3831b-3095">這個參數可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3095">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3096">使用 <see cref="T:System.Net.Sockets.Socket" /> 傳輸旗標，將檔案 <paramref name="fileName" /> 傳送至已連接的 <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3096">Sends the file <paramref name="fileName" /> to a connected <see cref="T:System.Net.Sockets.Socket" /> object with the <see cref="F:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread" /> transmit flag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3097">這個多載會將該檔案傳送`fileName`要連接的通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-3097">This overload sends the file `fileName` to the connected socket.</span></span> <span data-ttu-id="3831b-3098">`flags`參數的預設值<xref:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread>(0)，而`preBuffer`並`postBuffer`參數預設為`null`。</span><span class="sxs-lookup"><span data-stu-id="3831b-3098">The `flags` parameter defaults to <xref:System.Net.Sockets.TransmitFileOptions.UseDefaultWorkerThread> (0), and the `preBuffer` and `postBuffer` parameters default to `null`.</span></span> <span data-ttu-id="3831b-3099">如果`fileName`是在本機目錄中，它可能會用來識別檔案的名稱; 否則必須指定完整路徑和檔案的名稱。</span><span class="sxs-lookup"><span data-stu-id="3831b-3099">If `fileName` is in the local directory, it may be identified with just the name of the file; otherwise, the full path and name of the file must be specified.</span></span> <span data-ttu-id="3831b-3100">萬用字元 ("...\\\myfile.txt") 和 UNC 共用名稱 ("\\\\\\\shared 目錄\\\myfile.txt 」) 支援。</span><span class="sxs-lookup"><span data-stu-id="3831b-3100">Wildcards ("..\\\myfile.txt") and UNC share names ("\\\\\\\shared directory\\\myfile.txt") are supported.</span></span> <span data-ttu-id="3831b-3101">如果檔案找不到，例外狀況<xref:System.IO.FileNotFoundException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3831b-3101">If the file is not found, the exception <xref:System.IO.FileNotFoundException> is thrown.</span></span>  
  
 <span data-ttu-id="3831b-3102">這個方法會使用`TransmitFile`函式位於 Windows Sockets 2 API。</span><span class="sxs-lookup"><span data-stu-id="3831b-3102">This method uses the `TransmitFile` function found in the Windows Sockets 2 API.</span></span> <span data-ttu-id="3831b-3103">如需詳細資訊`TransmitFile`函式和它的旗標，請參閱 MSDN Library 中的 Windows 通訊端文件。</span><span class="sxs-lookup"><span data-stu-id="3831b-3103">For more information about the `TransmitFile` function and its flags, see the Windows Sockets documentation in the MSDN Library.</span></span>  
  
 <span data-ttu-id="3831b-3104"><xref:System.Net.Sockets.Socket.SendFile%2A> 以同步方式將檔案傳送至遠端主機中指定<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3104"><xref:System.Net.Sockets.Socket.SendFile%2A> synchronously sends a file to the remote host specified in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-3105"><xref:System.Net.Sockets.Socket.SendFile%2A> 可用來同時連線導向及無連線的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-3105"><xref:System.Net.Sockets.Socket.SendFile%2A> can be used for both connection-oriented and for connectionless protocols.</span></span>  
  
 <span data-ttu-id="3831b-3106">如果您使用無連接的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>呼叫這個方法之前，否則為<xref:System.Net.Sockets.Socket.SendFile%2A>就會擲回<xref:System.Net.Sockets.SocketException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-3106">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method, otherwise <xref:System.Net.Sockets.Socket.SendFile%2A> throws a <xref:System.Net.Sockets.SocketException> exception.</span></span> <span data-ttu-id="3831b-3107">如果您使用連線導向的通訊協定，您必須使用<xref:System.Net.Sockets.Socket.Connect%2A>來建立連接遠端主機，或使用<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-3107">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="3831b-3108">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.SendFile%2A>封鎖，直到傳送檔案。</span><span class="sxs-lookup"><span data-stu-id="3831b-3108">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.SendFile%2A> blocks until the file is sent.</span></span> <span data-ttu-id="3831b-3109">在未封鎖模式中，<xref:System.Net.Sockets.Socket.SendFile%2A>可能會傳送整個檔案之前順利完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-3109">In nonblocking mode, <xref:System.Net.Sockets.Socket.SendFile%2A> may complete successfully before the entire file has been sent.</span></span> <span data-ttu-id="3831b-3110">則您傳送的資料就會立即出現在網路無法保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-3110">There is no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-3111">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3111">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="3831b-3112">成功完成<xref:System.Net.Sockets.Socket.SendFile%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-3112">A successful completion of the <xref:System.Net.Sockets.Socket.SendFile%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3113">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3113">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-3114">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-3114">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3115">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3115">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-3116">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-3116">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3117">下列程式碼範例會建立和連接通訊端，並再將檔案傳送至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-3117">The following code example creates and connects a socket and then sends a file to the remote host.</span></span> <span data-ttu-id="3831b-3118">檔案"test.txt"位於本機電腦的根目錄。</span><span class="sxs-lookup"><span data-stu-id="3831b-3118">The file "test.txt" is located in the root directory of the local machine.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#3)]
 [!code-csharp[NCLSocketEnhancements#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-3119">通訊端未連線至遠端主機。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3119">The socket is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3120">
            <see cref="T:System.Net.Sockets.Socket" />物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3120">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-3121">
            <see cref="T:System.Net.Sockets.Socket" /> 物件不是處於封鎖模式，而且無法接受此同步呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3121">The <see cref="T:System.Net.Sockets.Socket" /> object is not in blocking mode and cannot accept this synchronous call.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="3831b-3122">找不到檔案 <paramref name="fileName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3122">The file <paramref name="fileName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3123">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3123">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendFile">
      <MemberSignature Language="C#" Value="public void SendFile (string fileName, byte[] preBuffer, byte[] postBuffer, System.Net.Sockets.TransmitFileOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendFile(string fileName, unsigned int8[] preBuffer, unsigned int8[] postBuffer, valuetype System.Net.Sockets.TransmitFileOptions flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendFile (fileName As String, preBuffer As Byte(), postBuffer As Byte(), flags As TransmitFileOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendFile(System::String ^ fileName, cli::array &lt;System::Byte&gt; ^ preBuffer, cli::array &lt;System::Byte&gt; ^ postBuffer, System::Net::Sockets::TransmitFileOptions flags);" />
      <MemberSignature Language="F#" Value="member this.SendFile : string * byte[] * byte[] * System.Net.Sockets.TransmitFileOptions -&gt; unit" Usage="socket.SendFile (fileName, preBuffer, postBuffer, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="preBuffer" Type="System.Byte[]" />
        <Parameter Name="postBuffer" Type="System.Byte[]" />
        <Parameter Name="flags" Type="System.Net.Sockets.TransmitFileOptions" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="3831b-3124">包含要傳送之檔案的路徑與名稱的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3124">A <see cref="T:System.String" /> that contains the path and name of the file to be sent.</span>
          </span>
          <span data-ttu-id="3831b-3125">這個參數可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3125">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="preBuffer">
          <span data-ttu-id="3831b-3126">包含傳送檔案前要傳送之資料的 <see cref="T:System.Byte" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3126">A <see cref="T:System.Byte" /> array that contains data to be sent before the file is sent.</span>
          </span>
          <span data-ttu-id="3831b-3127">這個參數可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3127">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="postBuffer">
          <span data-ttu-id="3831b-3128">包含傳送檔案後要傳送之資料的 <see cref="T:System.Byte" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3128">A <see cref="T:System.Byte" /> array that contains data to be sent after the file is sent.</span>
          </span>
          <span data-ttu-id="3831b-3129">這個參數可以是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3129">This parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <param name="flags">
          <span data-ttu-id="3831b-3130">一或多個 <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3130">One or more of <see cref="T:System.Net.Sockets.TransmitFileOptions" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3131">使用指定的 <see cref="T:System.Net.Sockets.TransmitFileOptions" /> 值，將檔案 <paramref name="fileName" /> 和資料緩衝區傳送到連接的 <see cref="T:System.Net.Sockets.Socket" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3131">Sends the file <paramref name="fileName" /> and buffers of data to a connected <see cref="T:System.Net.Sockets.Socket" /> object using the specified <see cref="T:System.Net.Sockets.TransmitFileOptions" /> value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3132">這個多載都需要您想要傳送的檔案和的位元組合名稱<xref:System.Net.Sockets.TransmitFileOptions>值。</span><span class="sxs-lookup"><span data-stu-id="3831b-3132">This overload requires the name of the file you want to send and a bitwise combination of <xref:System.Net.Sockets.TransmitFileOptions> values.</span></span> <span data-ttu-id="3831b-3133">`preBuffer`參數包含您想要在檔案的所有資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3133">The `preBuffer` parameter contains any data you want to precede the file.</span></span> <span data-ttu-id="3831b-3134">`postBuffer` 包含您想要按照檔案中的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3134">`postBuffer` contains data you want to follow the file.</span></span> <span data-ttu-id="3831b-3135">如果`fileName`是在目前的工作目錄中，它可能會用來識別檔案的名稱; 否則必須指定完整路徑和檔案的名稱。</span><span class="sxs-lookup"><span data-stu-id="3831b-3135">If `fileName` is in the current working directory, it may be identified with just the name of the file; otherwise, the full path and name of the file must be specified.</span></span> <span data-ttu-id="3831b-3136">萬用字元 ("...\\\myfile.txt") 和 UNC 共用名稱 ("\\\\\\\shared 目錄\\\myfile.txt 」) 支援。</span><span class="sxs-lookup"><span data-stu-id="3831b-3136">Wildcards ("..\\\myfile.txt") and UNC share names ("\\\\\\\shared directory\\\myfile.txt") are supported.</span></span>  
  
 <span data-ttu-id="3831b-3137">`flags`參數提供的視窗通訊端服務提供者的檔案傳輸的其他資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3137">The `flags` parameter provides the Window Sockets service provider with additional information about the file transfer.</span></span> <span data-ttu-id="3831b-3138">如需如何使用此參數的詳細資訊，請參閱<xref:System.Net.Sockets.TransmitFileOptions>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3138">For more information about how to use this parameter, see <xref:System.Net.Sockets.TransmitFileOptions>.</span></span>  
  
 <span data-ttu-id="3831b-3139">這個方法會使用`TransmitFile`函式位於 Windows Sockets 2 API。</span><span class="sxs-lookup"><span data-stu-id="3831b-3139">This method uses the `TransmitFile` function found in the Windows Sockets 2 API.</span></span> <span data-ttu-id="3831b-3140">如需詳細資訊`TransmitFile`函式和它的旗標，請參閱 MSDN Library 中的 Windows 通訊端文件。</span><span class="sxs-lookup"><span data-stu-id="3831b-3140">For more information about the `TransmitFile` function and its flags, see the Windows Sockets documentation in the MSDN Library.</span></span>  
  
 <span data-ttu-id="3831b-3141"><xref:System.Net.Sockets.Socket.SendFile%2A> 以同步方式將檔案傳送至遠端主機中指定<xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3141"><xref:System.Net.Sockets.Socket.SendFile%2A> synchronously sends a file to the remote host specified in the <xref:System.Net.Sockets.Socket.Connect%2A> or <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-3142"><xref:System.Net.Sockets.Socket.SendFile%2A> 可用來同時連線導向及無連線的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-3142"><xref:System.Net.Sockets.Socket.SendFile%2A> can be used for both connection-oriented and for connectionless protocols.</span></span>  
  
 <span data-ttu-id="3831b-3143">如果您使用無連接的通訊協定，您必須呼叫<xref:System.Net.Sockets.Socket.Connect%2A>之前呼叫這個方法; 否則為<xref:System.Net.Sockets.Socket.SendFile%2A>就會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3143">If you are using a connectionless protocol, you must call <xref:System.Net.Sockets.Socket.Connect%2A> before calling this method; otherwise <xref:System.Net.Sockets.Socket.SendFile%2A> throws a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-3144">如果您使用連線導向的通訊協定，您必須使用<xref:System.Net.Sockets.Socket.Connect%2A>建立遠端主機連線，或使用<xref:System.Net.Sockets.Socket.Accept%2A>以接受連入連線。</span><span class="sxs-lookup"><span data-stu-id="3831b-3144">If you are using a connection-oriented protocol, you must either use <xref:System.Net.Sockets.Socket.Connect%2A> to establish a remote host connection, or use <xref:System.Net.Sockets.Socket.Accept%2A> to accept an incoming connection.</span></span>  
  
 <span data-ttu-id="3831b-3145">如果您使用連線導向的通訊協定，<xref:System.Net.Sockets.Socket.SendFile%2A>封鎖，直到傳送整個檔案。</span><span class="sxs-lookup"><span data-stu-id="3831b-3145">If you are using a connection-oriented protocol, <xref:System.Net.Sockets.Socket.SendFile%2A> blocks until the entire file is sent.</span></span> <span data-ttu-id="3831b-3146">在未封鎖模式中，<xref:System.Net.Sockets.Socket.SendFile%2A>可能會傳送整個檔案之前順利完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-3146">In nonblocking mode, <xref:System.Net.Sockets.Socket.SendFile%2A> may complete successfully before the entire file has been sent.</span></span> <span data-ttu-id="3831b-3147">則您傳送的資料就會立即出現在網路無法保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-3147">There is no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-3148">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3148">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="3831b-3149">成功完成<xref:System.Net.Sockets.Socket.SendFile%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-3149">A successful completion of the <xref:System.Net.Sockets.Socket.SendFile%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3150">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3150">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-3151">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-3151">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3152">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3152">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-3153">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-3153">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3154">下列程式碼範例會建立並連接通訊端。</span><span class="sxs-lookup"><span data-stu-id="3831b-3154">The following code example creates and connects a socket.</span></span> <span data-ttu-id="3831b-3155">檔案"test.txt"位於本機電腦的根目錄。</span><span class="sxs-lookup"><span data-stu-id="3831b-3155">The file "test.txt" is located in the root directory of the local machine.</span></span> <span data-ttu-id="3831b-3156">在此範例中，我們會建立緩衝和後置的資料，並將它們傳送至遠端主機的檔案。</span><span class="sxs-lookup"><span data-stu-id="3831b-3156">In this example, we create a prebuffer and postbuffer of data and send them to the remote host with the file.</span></span> <span data-ttu-id="3831b-3157">預設值<xref:System.Net.Sockets.TransmitFileOptions>習慣。</span><span class="sxs-lookup"><span data-stu-id="3831b-3157">The default <xref:System.Net.Sockets.TransmitFileOptions> are used.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#4)]
 [!code-csharp[NCLSocketEnhancements#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-3158">作業系統不是 Windows NT (含) 以後版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3158">The operating system is not Windows NT or later.</span>
          </span>
          <span data-ttu-id="3831b-3159">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3159">\- or -</span>
          </span>
          <span data-ttu-id="3831b-3160">通訊端未連線至遠端主機。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3160">The socket is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3161">
            <see cref="T:System.Net.Sockets.Socket" />物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3161">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-3162">
            <see cref="T:System.Net.Sockets.Socket" /> 物件不是處於封鎖模式，而且無法接受此同步呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3162">The <see cref="T:System.Net.Sockets.Socket" /> object is not in blocking mode and cannot accept this synchronous call.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="3831b-3163">找不到檔案 <paramref name="fileName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3163">The file <paramref name="fileName" /> was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3164">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3164">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendPacketsAsync">
      <MemberSignature Language="C#" Value="public bool SendPacketsAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SendPacketsAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendPacketsAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SendPacketsAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.SendPacketsAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.SendPacketsAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3831b-3165">
            <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件，用於這個非同步通訊端作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3165">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3166">以非同步的方式將檔案的集合或記憶體中資料緩衝區傳送至連接的 <see cref="T:System.Net.Sockets.Socket" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3166">Sends a collection of files or in memory data buffers asynchronously to a connected <see cref="T:System.Net.Sockets.Socket" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-3167">如果 I/O 作業暫止，則傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3167">Returns <see langword="true" /> if the I/O operation is pending.</span>
          </span>
          <span data-ttu-id="3831b-3168">作業完成時會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3168">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span>
          </span>
          <span data-ttu-id="3831b-3169">如果 I/O 作業同步完成，則傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3169">Returns <see langword="false" /> if the I/O operation completed synchronously.</span>
          </span>
          <span data-ttu-id="3831b-3170">在這個情況下，就不會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，而在方法呼叫傳回後會立即檢查做為參數傳遞的 <paramref name="e" /> 物件，以擷取作業的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3170">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3171"><xref:System.Net.Sockets.Socket.SendPacketsAsync%2A>方法用來將集合的檔案，或在記憶體中資料緩衝區傳送至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-3171">The <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> method is used to send a collection of files or in memory data buffers to remote host.</span></span> <span data-ttu-id="3831b-3172"><xref:System.Net.Sockets.Socket>必須先連接至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-3172">The <xref:System.Net.Sockets.Socket> must already be connected to the remote host.</span></span>  
  
 <span data-ttu-id="3831b-3173">如果<xref:System.Net.Sockets.SendPacketsElement?displayProperty=nameWithType>參考的工作目錄中的檔案，可能會用來識別它的檔案名稱; 否則必須指定完整路徑和檔案的名稱。</span><span class="sxs-lookup"><span data-stu-id="3831b-3173">If a <xref:System.Net.Sockets.SendPacketsElement?displayProperty=nameWithType> references a file in the working directory, it may be identified with just the name of the file; otherwise, the full path and name of the file must be specified.</span></span> <span data-ttu-id="3831b-3174">支援萬用字元和 UNC 共用名稱。</span><span class="sxs-lookup"><span data-stu-id="3831b-3174">Wildcards and UNC share names are supported.</span></span> <span data-ttu-id="3831b-3175">如果找不到檔案，<xref:System.IO.FileNotFoundException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="3831b-3175">If the file is not found, <xref:System.IO.FileNotFoundException> is thrown.</span></span>  
  
 <span data-ttu-id="3831b-3176">若要完成的通知，您必須建立實作事件處理常式的回呼方法\<SocketAsyncEventArgs > 委派，並將附加的回呼<xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="3831b-3176">To be notified of completion, you must create a callback method that implements the EventHandler\<SocketAsyncEventArgs> delegate and attach the callback to the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> event.</span></span>  
  
 <span data-ttu-id="3831b-3177"><xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A?displayProperty=nameWithType>屬性上的`e`參數提供的視窗通訊端服務提供者的檔案傳輸的其他資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3177">The <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A?displayProperty=nameWithType> property on the `e` parameter provides the Window Sockets service provider with additional information about the file transfer.</span></span> <span data-ttu-id="3831b-3178">如需如何使用此參數的詳細資訊，請參閱<xref:System.Net.Sockets.TransmitFileOptions>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3178">For more information about how to use this parameter, see <xref:System.Net.Sockets.TransmitFileOptions>.</span></span>  
  
 <span data-ttu-id="3831b-3179">下列的屬性和事件<xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType>物件，才能成功呼叫這個方法：</span><span class="sxs-lookup"><span data-stu-id="3831b-3179">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required to successfully call this method:</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
 <span data-ttu-id="3831b-3180">呼叫端可能會設定<xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType>呼叫之前所需的任何使用者狀態物件的屬性<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A>方法，如此會在回呼方法中擷取資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3180">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="3831b-3181">如果回呼需要比單一物件的詳細資訊，就可以建立小型的類別來保存為成員的其他必要的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3181">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="3831b-3182">這個方法會使用位於 Windows Sockets 2 API TransmitPackets 函式。</span><span class="sxs-lookup"><span data-stu-id="3831b-3182">This method uses the TransmitPackets function found in the Windows Sockets 2 API.</span></span> <span data-ttu-id="3831b-3183">如需有關 TransmitPackets 函式和其旗標的詳細資訊，請參閱 MSDN Library 中的 Windows 通訊端文件。</span><span class="sxs-lookup"><span data-stu-id="3831b-3183">For more information about the TransmitPackets function and its flags, see the Windows Sockets documentation in the MSDN Library.</span></span>  
  
 <span data-ttu-id="3831b-3184">適用於連線導向的通訊協定，雖然<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A>方法也適用於無連線的通訊協定，前提是您第一次呼叫<xref:System.Net.Sockets.Socket.BeginConnect%2A>， <xref:System.Net.Sockets.Socket.Connect%2A>，或<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法，以建立預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-3184">Although intended for connection-oriented protocols, the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> method also works for connectionless protocols, provided that you first call the <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method to establish a default remote host.</span></span> <span data-ttu-id="3831b-3185">您也必須確定檔案的大小未超過最大的封包大小為基礎的服務提供者無連接的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-3185">With connectionless protocols, you must also be sure that the size of your file does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-3186">若是如此，不會傳送資料包並<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A>會擲回<xref:System.Net.Sockets.SocketException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="3831b-3186">If it does, the datagram is not sent and <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> throws a <xref:System.Net.Sockets.SocketException> exception.</span></span>  
  
 <span data-ttu-id="3831b-3187"><xref:System.Net.Sockets.Socket.SendPacketsAsync%2A>方法最適合根據在其使用的作業系統。</span><span class="sxs-lookup"><span data-stu-id="3831b-3187">The <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> method is optimized according to the operating system on which it is used.</span></span> <span data-ttu-id="3831b-3188">在 Windows server 版本，<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A>方法最適合用於高效能。</span><span class="sxs-lookup"><span data-stu-id="3831b-3188">On Windows server editions, the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> method is optimized for high performance.</span></span>  
  
 <span data-ttu-id="3831b-3189">在 Windows 用戶端版本，<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A>方法最適合用於最小記憶體和資源使用率。</span><span class="sxs-lookup"><span data-stu-id="3831b-3189">On Windows client editions, the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> method is optimized for minimum memory and resource utilization.</span></span>  
  
 <span data-ttu-id="3831b-3190">使用的<xref:System.Net.Sockets.TransmitFileOptions.UseKernelApc?displayProperty=nameWithType>中的旗標<xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A?displayProperty=nameWithType>屬性上的`e`參數可提供顯著的效能優點。</span><span class="sxs-lookup"><span data-stu-id="3831b-3190">Use of the <xref:System.Net.Sockets.TransmitFileOptions.UseKernelApc?displayProperty=nameWithType> flag in the <xref:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags%2A?displayProperty=nameWithType> property on the `e` parameter can deliver significant performance benefits.</span></span> <span data-ttu-id="3831b-3191">如果執行緒起始<xref:System.Net.Sockets.Socket.SendPacketsAsync%2A>方法呼叫用於大量的計算，您可以，但不太可能，Apc 可能無法啟動。</span><span class="sxs-lookup"><span data-stu-id="3831b-3191">If the thread initiating the <xref:System.Net.Sockets.Socket.SendPacketsAsync%2A> method call is being used for heavy computations, it is possible, though unlikely, that APCs could be prevented from launching.</span></span> <span data-ttu-id="3831b-3192">請注意，核心和使用者模式的 Apc 之間的差異。</span><span class="sxs-lookup"><span data-stu-id="3831b-3192">Note that there is a difference between kernel and user-mode APCs.</span></span> <span data-ttu-id="3831b-3193">當執行緒處於等候狀態時，就會啟動核心 Apc。</span><span class="sxs-lookup"><span data-stu-id="3831b-3193">Kernel APCs launch when a thread is in a wait state.</span></span> <span data-ttu-id="3831b-3194">當執行緒在可警示等待狀態時，會啟動使用者模式 Apc</span><span class="sxs-lookup"><span data-stu-id="3831b-3194">User-mode APCs launch when a thread is in an alertable wait state</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="3831b-3195">找不到 <see cref="P:System.Net.Sockets.SendPacketsElement.FilePath" /> 屬性中指定的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3195">The file specified in the <see cref="P:System.Net.Sockets.SendPacketsElement.FilePath" /> property was not found.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-3196">通訊端作業已使用 <paramref name="e" /> 參數內指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件正在進行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3196">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-3197">這個方法需要 Windows XP (含) 以後版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3197">Windows XP or later is required for this method.</span>
          </span>
          <span data-ttu-id="3831b-3198">如果 <see cref="T:System.Net.Sockets.Socket" /> 未連接至遠端主機，也會發生這個例外狀況。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3198">This exception also occurs if the <see cref="T:System.Net.Sockets.Socket" /> is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3199">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3199">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3200">正在使用無連接的 <see cref="T:System.Net.Sockets.Socket" />，且正在傳送的檔案超出基礎傳輸的封包大小上限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3200">A connectionless <see cref="T:System.Net.Sockets.Socket" /> is being used and the file being sent exceeds the maximum packet size of the underlying transport.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsElements" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.SendPacketsFlags" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : int with get, set" Usage="System.Net.Sockets.Socket.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-3201">取得或設定值，指定同步 <see cref="Overload:System.Net.Sockets.Socket.Send" /> 呼叫逾時之前的時間長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3201">Gets or sets a value that specifies the amount of time after which a synchronous <see cref="Overload:System.Net.Sockets.Socket.Send" /> call will time out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-3202">逾時值 (以毫秒為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3202">The time-out value, in milliseconds.</span>
          </span>
          <span data-ttu-id="3831b-3203">如果您將屬性設為 1 到 499 之間的值，則會將值變更為 500。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3203">If you set the property with a value between 1 and 499, the value will be changed to 500.</span>
          </span>
          <span data-ttu-id="3831b-3204">預設值為 0，表示無限的逾時期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3204">The default value is 0, which indicates an infinite time-out period.</span>
          </span>
          <span data-ttu-id="3831b-3205">指定 -1 也表示無限的逾時期間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3205">Specifying -1 also indicates an infinite time-out period.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3206">此選項適用於同步<xref:System.Net.Sockets.Socket.Send%2A>僅呼叫。</span><span class="sxs-lookup"><span data-stu-id="3831b-3206">This option applies to synchronous <xref:System.Net.Sockets.Socket.Send%2A> calls only.</span></span> <span data-ttu-id="3831b-3207">如果超過逾時期限<xref:System.Net.Sockets.Socket.Send%2A>方法會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3207">If the time-out period is exceeded, the <xref:System.Net.Sockets.Socket.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3208">下列程式碼範例示範使用<xref:System.Net.Sockets.Socket.SendTimeout%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-3208">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.SendTimeout%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3209">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3209">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3210">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3210">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-3211">為設定作業指定的值小於 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3211">The value specified for a set operation is less than -1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendTo">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-3212">傳送資料至特定的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3212">Sends data to a specific endpoint.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendTo">
      <MemberSignature Language="C#" Value="public int SendTo (byte[] buffer, System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SendTo(unsigned int8[] buffer, class System.Net.EndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendTo (buffer As Byte(), remoteEP As EndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SendTo(cli::array &lt;System::Byte&gt; ^ buffer, System::Net::EndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.SendTo : byte[] * System.Net.EndPoint -&gt; int" Usage="socket.SendTo (buffer, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-3213">類型 <see cref="T:System.Byte" /> 的陣列，其中包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3213">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="3831b-3214">
            <see cref="T:System.Net.EndPoint" />，表示資料的目的端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3214">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3215">傳送資料至指定的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3215">Sends data to the specified endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-3216">已傳送的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3216">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3217">在這個多載，緩衝區位移為 0 時，要傳送的大小的預設值的位元組數目的預設值`buffer`參數，而<xref:System.Net.Sockets.SocketFlags>值預設為 0。</span><span class="sxs-lookup"><span data-stu-id="3831b-3217">In this overload, the buffer offset defaults to 0, the number of bytes to send defaults to the size of the `buffer` parameter, and the <xref:System.Net.Sockets.SocketFlags> value defaults to 0.</span></span>  
  
 <span data-ttu-id="3831b-3218">如果您使用無連接的通訊協定，您不需要建立的預設遠端主機<xref:System.Net.Sockets.Socket.Connect%2A>方法之前呼叫<xref:System.Net.Sockets.Socket.SendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3218">If you are using a connectionless protocol, you do not need to establish a default remote host with the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span> <span data-ttu-id="3831b-3219">您只需要這樣做，如果您想要呼叫<xref:System.Net.Sockets.Socket.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3219">You only need to do this if you intend to call the <xref:System.Net.Sockets.Socket.Send%2A> method.</span></span> <span data-ttu-id="3831b-3220">如果您呼叫<xref:System.Net.Sockets.Socket.Connect%2A>方法之前呼叫<xref:System.Net.Sockets.Socket.SendTo%2A>，則`remoteEP`參數會覆寫指定的預設遠端主機，可傳送作業才。</span><span class="sxs-lookup"><span data-stu-id="3831b-3220">If you do call the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>, the `remoteEP` parameter will override the specified default remote host for that send operation only.</span></span> <span data-ttu-id="3831b-3221">您也不需要呼叫<xref:System.Net.Sockets.Socket.Bind%2A>方法，因為基礎的服務提供者會指派最適當的區域網路位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3221">You are also not required to call the <xref:System.Net.Sockets.Socket.Bind%2A> method, because the underlying service provider will assign the most appropriate local network address and port number.</span></span> <span data-ttu-id="3831b-3222">如果您需要識別指派的本機網路位址和連接埠號碼，您可以使用<xref:System.Net.Sockets.Socket.LocalEndPoint%2A>屬性之後<xref:System.Net.Sockets.Socket.SendTo%2A>方法成功完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-3222">If you need to identify the assigned local network address and port number, you can use the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property after the <xref:System.Net.Sockets.Socket.SendTo%2A> method successfully completes.</span></span>  
  
 <span data-ttu-id="3831b-3223">適用於無連線的通訊協定，雖然<xref:System.Net.Sockets.Socket.SendTo%2A>也適用於使用連線導向的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-3223">Although intended for connectionless protocols, <xref:System.Net.Sockets.Socket.SendTo%2A> also works with connection-oriented protocols.</span></span> <span data-ttu-id="3831b-3224">如果您使用連線導向的通訊協定，您必須先透過呼叫建立連接遠端主機<xref:System.Net.Sockets.Socket.Connect%2A>方法，或接受連入的連接要求使用<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3224">If you are using a connection-oriented protocol, you must first establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming connection request using the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-3225">如果您不要建立或接受連接遠端主機<xref:System.Net.Sockets.Socket.SendTo%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3225">If you do not establish or accept a remote host connection, <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-3226">您也可以建立預設遠端主機的無連線的通訊協定，才能呼叫<xref:System.Net.Sockets.Socket.SendTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3226">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="3831b-3227">在這些情況下，任一<xref:System.Net.Sockets.Socket.SendTo%2A>將會忽略`remoteEP`參數並只將資料傳送至已連接或預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-3227">In either of these cases, <xref:System.Net.Sockets.Socket.SendTo%2A> will ignore the `remoteEP` parameter and only send data to the connected or default remote host.</span></span>  
  
 <span data-ttu-id="3831b-3228">封鎖通訊端，將會封鎖直到傳送的所有位元組緩衝區中。</span><span class="sxs-lookup"><span data-stu-id="3831b-3228">Blocking sockets will block until the all of the bytes in the buffer are sent.</span></span> <span data-ttu-id="3831b-3229">因為未封鎖<xref:System.Net.Sockets.Socket>完成立即執行，它可能會不傳送的位元組中的所有`buffer`。</span><span class="sxs-lookup"><span data-stu-id="3831b-3229">Since a nonblocking <xref:System.Net.Sockets.Socket> completes immediately, it might not send all of the bytes in the `buffer`.</span></span> <span data-ttu-id="3831b-3230">您的應用程式必須負責記錄傳送的位元組數，以及重試此作業，直到應用程式傳送的位元組中的所有`buffer`。</span><span class="sxs-lookup"><span data-stu-id="3831b-3230">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends all of the bytes in the `buffer`.</span></span> <span data-ttu-id="3831b-3231">另外還有您傳送的資料就會立即出現在網路不保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-3231">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-3232">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3232">To increase network efficiency, the underlying system may delay transmission until a significant amount of outgoing data is collected.</span></span> <span data-ttu-id="3831b-3233">成功完成<xref:System.Net.Sockets.Socket.SendTo%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-3233">A successful completion of the <xref:System.Net.Sockets.Socket.SendTo%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
 <span data-ttu-id="3831b-3234">如果您在封鎖模式中，使用無連接的通訊協定<xref:System.Net.Sockets.Socket.SendTo%2A>將會封鎖直到傳送資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-3234">If you are using a connectionless protocol in blocking mode, <xref:System.Net.Sockets.Socket.SendTo%2A> will block until the datagram is sent.</span></span> <span data-ttu-id="3831b-3235">如果您想要將資料傳送至的廣播位址，您必須先呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法，並設定通訊端選項設定為<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3235">If you want to send data to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-3236">您也必須確定傳送的位元組數目未超過基礎的服務提供者的最大的封包大小。</span><span class="sxs-lookup"><span data-stu-id="3831b-3236">You must also be sure that the number of bytes sent does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-3237">若是如此，將不會傳送資料包並<xref:System.Net.Sockets.Socket.SendTo%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3237">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3238">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3238">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-3239">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-3239">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3240">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3240">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-3241">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-3241">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3242">下列程式碼範例會將無連線的資料包傳送至指定的遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-3242">The following code example sends a connectionless datagram to the specified remote host.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#5)]
 [!code-csharp[Socket_Sync_Send_Receive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#5)]
 [!code-vb[Socket_Sync_Send_Receive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-3243">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3243">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3831b-3244">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3244">-or-</span>
          </span>
          <span data-ttu-id="3831b-3245">
            <paramref name="remoteEP" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3245">
              <paramref name="remoteEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3246">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3246">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3247">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3247">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.Socket.LocalEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="SendTo">
      <MemberSignature Language="C#" Value="public int SendTo (byte[] buffer, System.Net.Sockets.SocketFlags socketFlags, System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SendTo(unsigned int8[] buffer, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SendTo(cli::array &lt;System::Byte&gt; ^ buffer, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.SendTo : byte[] * System.Net.Sockets.SocketFlags * System.Net.EndPoint -&gt; int" Usage="socket.SendTo (buffer, socketFlags, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-3248">類型 <see cref="T:System.Byte" /> 的陣列，其中包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3248">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-3249">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3249">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="3831b-3250">
            <see cref="T:System.Net.EndPoint" />，表示資料的目的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3250">The <see cref="T:System.Net.EndPoint" /> that represents the destination location for the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3251">使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" />，傳送資料至特定端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3251">Sends data to a specific endpoint using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-3252">已傳送的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3252">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3253">在這個多載，緩衝區位移為 0，並將預設值的大小的位元組數目的預設值`buffer`。</span><span class="sxs-lookup"><span data-stu-id="3831b-3253">In this overload, the buffer offset defaults to 0, and the number of bytes to send defaults to the size of the `buffer`.</span></span> <span data-ttu-id="3831b-3254">如果您指定<xref:System.Net.Sockets.SocketFlags.DontRoute>旗標標示為`socketflags`參數，您要將不會路由傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3254">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="3831b-3255">如果您使用無連接的通訊協定，您不需要建立的預設遠端主機<xref:System.Net.Sockets.Socket.Connect%2A>方法之前呼叫<xref:System.Net.Sockets.Socket.SendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3255">If you are using a connectionless protocol, you do not need to establish a default remote host with the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span> <span data-ttu-id="3831b-3256">您只需要這樣做，如果您想要呼叫<xref:System.Net.Sockets.Socket.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3256">You only need to do this if you intend to call the <xref:System.Net.Sockets.Socket.Send%2A> method.</span></span> <span data-ttu-id="3831b-3257">如果您呼叫<xref:System.Net.Sockets.Socket.Connect%2A>方法之前呼叫<xref:System.Net.Sockets.Socket.SendTo%2A>，則`remoteEP`參數會覆寫指定的預設遠端主機，可傳送作業才。</span><span class="sxs-lookup"><span data-stu-id="3831b-3257">If you do call the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>, the `remoteEP` parameter will override the specified default remote host for that send operation only.</span></span> <span data-ttu-id="3831b-3258">您也不需要呼叫<xref:System.Net.Sockets.Socket.Bind%2A>方法，因為基礎的服務提供者會指派最適當的區域網路位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3258">You are also not required to call the <xref:System.Net.Sockets.Socket.Bind%2A> method, because the underlying service provider will assign the most appropriate local network address and port number.</span></span> <span data-ttu-id="3831b-3259">如果您需要識別指派的本機網路位址和連接埠號碼，您可以使用<xref:System.Net.Sockets.Socket.LocalEndPoint%2A>屬性之後<xref:System.Net.Sockets.Socket.SendTo%2A>方法成功完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-3259">If you need to identify the assigned local network address and port number, you can use the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property after the <xref:System.Net.Sockets.Socket.SendTo%2A> method successfully completes.</span></span>  
  
 <span data-ttu-id="3831b-3260">適用於無連線的通訊協定，雖然<xref:System.Net.Sockets.Socket.SendTo%2A>也適用於使用連線導向的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-3260">Although intended for connectionless protocols, <xref:System.Net.Sockets.Socket.SendTo%2A> also works with connection-oriented protocols.</span></span> <span data-ttu-id="3831b-3261">如果您使用連線導向的通訊協定，您必須先透過呼叫建立連接遠端主機<xref:System.Net.Sockets.Socket.Connect%2A>方法，或接受連入的連接要求使用<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3261">If you are using a connection-oriented protocol, you must first establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming connection request using the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-3262">如果您不要建立或接受連接遠端主機<xref:System.Net.Sockets.Socket.SendTo%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3262">If you do not establish or accept a remote host connection, <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-3263">您也可以建立預設遠端主機的無連線的通訊協定，才能呼叫<xref:System.Net.Sockets.Socket.SendTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3263">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="3831b-3264">在這些情況下，任一<xref:System.Net.Sockets.Socket.SendTo%2A>將會忽略`remoteEP`參數並只將資料傳送至已連接或預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-3264">In either of these cases, <xref:System.Net.Sockets.Socket.SendTo%2A> will ignore the `remoteEP` parameter and only send data to the connected or default remote host.</span></span>  
  
 <span data-ttu-id="3831b-3265">封鎖通訊端將會封鎖直到要求所有位元組的`buffer`傳送。</span><span class="sxs-lookup"><span data-stu-id="3831b-3265">Blocking sockets will block until the requested all of the bytes in the `buffer` are sent.</span></span> <span data-ttu-id="3831b-3266">因為未封鎖<xref:System.Net.Sockets.Socket>完成立即執行，它可能會不傳送的位元組中的所有`buffer`。</span><span class="sxs-lookup"><span data-stu-id="3831b-3266">Since a nonblocking <xref:System.Net.Sockets.Socket> completes immediately, it might not send all of the bytes in the `buffer`.</span></span> <span data-ttu-id="3831b-3267">您的應用程式必須負責記錄傳送的位元組數，以及重試此作業，直到應用程式傳送的位元組中的所有`buffer`。</span><span class="sxs-lookup"><span data-stu-id="3831b-3267">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends all of the bytes in the `buffer`.</span></span> <span data-ttu-id="3831b-3268">另外還有您傳送的資料就會立即出現在網路不保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-3268">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-3269">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3269">To increase network efficiency, the underlying system may delay transmission until a significant amount of out-going data is collected.</span></span> <span data-ttu-id="3831b-3270">成功完成<xref:System.Net.Sockets.Socket.SendTo%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-3270">A successful completion of the <xref:System.Net.Sockets.Socket.SendTo%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
 <span data-ttu-id="3831b-3271">如果您在封鎖模式中，使用無連接的通訊協定<xref:System.Net.Sockets.Socket.SendTo%2A>將會封鎖直到傳送資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-3271">If you are using a connectionless protocol in blocking mode, <xref:System.Net.Sockets.Socket.SendTo%2A> will block until the datagram is sent.</span></span> <span data-ttu-id="3831b-3272">如果您想要將資料傳送至的廣播位址，您必須先呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法，並設定通訊端選項設定為<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3272">If you want to send data to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-3273">您也必須確定傳送的位元組數目未超過基礎的服務提供者的最大的封包大小。</span><span class="sxs-lookup"><span data-stu-id="3831b-3273">You must also be sure that the number of bytes sent does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-3274">若是如此，將不會傳送資料包並<xref:System.Net.Sockets.Socket.SendTo%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3274">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3275">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3275">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-3276">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-3276">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3277">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3277">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-3278">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-3278">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3279">下列程式碼範例會將無連線的資料包傳送至指定的遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-3279">The following code example sends a connectionless datagram to the specified remote host.</span></span> <span data-ttu-id="3831b-3280"><xref:System.Net.Sockets.SocketFlags> 傳遞至<xref:System.Net.Sockets.Socket.SendTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3280"><xref:System.Net.Sockets.SocketFlags> are passed to the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#6](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#6)]
 [!code-csharp[Socket_Sync_Send_Receive#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#6)]
 [!code-vb[Socket_Sync_Send_Receive#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-3281">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3281">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3831b-3282">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3282">-or-</span>
          </span>
          <span data-ttu-id="3831b-3283">
            <paramref name="remoteEP" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3283">
              <paramref name="remoteEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3284">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3284">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3285">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3285">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.Socket.LocalEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="SendTo">
      <MemberSignature Language="C#" Value="public int SendTo (byte[] buffer, int size, System.Net.Sockets.SocketFlags socketFlags, System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SendTo(unsigned int8[] buffer, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SendTo(cli::array &lt;System::Byte&gt; ^ buffer, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.SendTo : byte[] * int * System.Net.Sockets.SocketFlags * System.Net.EndPoint -&gt; int" Usage="socket.SendTo (buffer, size, socketFlags, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-3286">類型 <see cref="T:System.Byte" /> 的陣列，其中包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3286">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-3287">要傳送的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3287">The number of bytes to send.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-3288">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3288">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="3831b-3289">
            <see cref="T:System.Net.EndPoint" />，表示資料的目的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3289">The <see cref="T:System.Net.EndPoint" /> that represents the destination location for the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3290">使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" />，傳送指定位元組數目的資料至指定的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3290">Sends the specified number of bytes of data to the specified endpoint using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-3291">已傳送的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3291">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3292">在這個多載，緩衝區位移為 0 的預設值。</span><span class="sxs-lookup"><span data-stu-id="3831b-3292">In this overload, the buffer offset defaults to 0.</span></span> <span data-ttu-id="3831b-3293">如果您指定<xref:System.Net.Sockets.SocketFlags.DontRoute>旗標標示為`socketflags`參數，您要將不會路由傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3293">If you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="3831b-3294">如果您使用無連接的通訊協定，您不需要建立的預設遠端主機<xref:System.Net.Sockets.Socket.Connect%2A>方法之前呼叫<xref:System.Net.Sockets.Socket.SendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3294">If you are using a connectionless protocol, you do not need to establish a default remote host with the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span> <span data-ttu-id="3831b-3295">您只需要這樣做，如果您想要呼叫<xref:System.Net.Sockets.Socket.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3295">You only need to do this if you intend to call the <xref:System.Net.Sockets.Socket.Send%2A> method.</span></span> <span data-ttu-id="3831b-3296">如果您呼叫<xref:System.Net.Sockets.Socket.Connect%2A>方法之前呼叫<xref:System.Net.Sockets.Socket.SendTo%2A>，則`remoteEP`參數會覆寫指定的預設遠端主機，可傳送作業才。</span><span class="sxs-lookup"><span data-stu-id="3831b-3296">If you do call the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>, the `remoteEP` parameter will override the specified default remote host for that send operation only.</span></span> <span data-ttu-id="3831b-3297">您也不需要呼叫<xref:System.Net.Sockets.Socket.Bind%2A>方法，因為基礎的服務提供者會指派最適當的區域網路位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3297">You are also not required to call the <xref:System.Net.Sockets.Socket.Bind%2A> method, because the underlying service provider will assign the most appropriate local network address and port number.</span></span> <span data-ttu-id="3831b-3298">如果您需要識別指派的本機網路位址和連接埠號碼，您可以使用<xref:System.Net.Sockets.Socket.LocalEndPoint%2A>屬性之後<xref:System.Net.Sockets.Socket.SendTo%2A>方法成功完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-3298">If you need to identify the assigned local network address and port number, you can use the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property after the <xref:System.Net.Sockets.Socket.SendTo%2A> method successfully completes.</span></span>  
  
 <span data-ttu-id="3831b-3299">適用於無連線的通訊協定，雖然<xref:System.Net.Sockets.Socket.SendTo%2A>也適用於使用連線導向的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-3299">Although intended for connectionless protocols, <xref:System.Net.Sockets.Socket.SendTo%2A> also works with connection-oriented protocols.</span></span> <span data-ttu-id="3831b-3300">如果您使用連線導向的通訊協定，您必須先透過呼叫建立連接遠端主機<xref:System.Net.Sockets.Socket.Connect%2A>方法，或接受連入的連接要求使用<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3300">If you are using a connection-oriented protocol, you must first establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming connection request using the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-3301">如果您不要建立或接受連接遠端主機<xref:System.Net.Sockets.Socket.SendTo%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3301">If you do not establish or accept a remote host connection, <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-3302">您也可以建立預設遠端主機的無連線的通訊協定，才能呼叫<xref:System.Net.Sockets.Socket.SendTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3302">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="3831b-3303">在這些情況下，任一<xref:System.Net.Sockets.Socket.SendTo%2A>將會忽略`remoteEP`參數並只將資料傳送至已連接或預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-3303">In either of these cases, <xref:System.Net.Sockets.Socket.SendTo%2A> will ignore the `remoteEP` parameter and only send data to the connected or default remote host.</span></span>  
  
 <span data-ttu-id="3831b-3304">封鎖通訊端，將會封鎖直到傳送要求的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-3304">Blocking sockets will block until the requested number of bytes are sent.</span></span> <span data-ttu-id="3831b-3305">因為未封鎖<xref:System.Net.Sockets.Socket>完成立即執行，它可能會不傳送所有在單一作業中要求的位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-3305">Since a nonblocking <xref:System.Net.Sockets.Socket> completes immediately, it might not send all of the bytes requested in a single operation.</span></span> <span data-ttu-id="3831b-3306">負責您的應用程式來追蹤已傳送的位元組數，以及重試此作業，直到應用程式傳送要求的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-3306">It is your application's responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the requested number of bytes.</span></span> <span data-ttu-id="3831b-3307">另外還有您傳送的資料就會立即出現在網路不保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-3307">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-3308">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3308">To increase network efficiency, the underlying system may delay transmission until a significant amount of out-going data is collected.</span></span> <span data-ttu-id="3831b-3309">成功完成<xref:System.Net.Sockets.Socket.SendTo%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-3309">A successful completion of the <xref:System.Net.Sockets.Socket.SendTo%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
 <span data-ttu-id="3831b-3310">如果您在封鎖模式中，使用無連接的通訊協定<xref:System.Net.Sockets.Socket.SendTo%2A>將會封鎖直到傳送資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-3310">If you are using a connectionless protocol in blocking mode, <xref:System.Net.Sockets.Socket.SendTo%2A> will block until the datagram is sent.</span></span> <span data-ttu-id="3831b-3311">如果您想要將資料傳送至的廣播位址，您必須先呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法，並設定通訊端選項設定為<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3311">If you want to send data to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-3312">您也必須確定傳送的位元組數目未超過基礎的服務提供者的最大的封包大小。</span><span class="sxs-lookup"><span data-stu-id="3831b-3312">You must also be sure that the number of bytes sent does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-3313">若是如此，將不會傳送資料包並<xref:System.Net.Sockets.Socket.SendTo%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3313">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3314">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3314">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-3315">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-3315">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3316">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3316">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-3317">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-3317">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3318">下列程式碼範例會將無連線的資料包傳送至指定的遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-3318">The following code example sends a connectionless datagram to the specified remote host.</span></span> <span data-ttu-id="3831b-3319">大小和<xref:System.Net.Sockets.SocketFlags>傳遞至<xref:System.Net.Sockets.Socket.SendTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3319">The size and <xref:System.Net.Sockets.SocketFlags> are passed to the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#7)]
 [!code-csharp[Socket_Sync_Send_Receive#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#7)]
 [!code-vb[Socket_Sync_Send_Receive#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-3320">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3320">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3831b-3321">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3321">-or-</span>
          </span>
          <span data-ttu-id="3831b-3322">
            <paramref name="remoteEP" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3322">
              <paramref name="remoteEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-3323">指定的 <paramref name="size" /> 超過 <paramref name="buffer" /> 的大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3323">The specified <paramref name="size" /> exceeds the size of <paramref name="buffer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3324">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3324">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3325">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3325">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.Socket.LocalEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="SendTo">
      <MemberSignature Language="C#" Value="public int SendTo (byte[] buffer, int offset, int size, System.Net.Sockets.SocketFlags socketFlags, System.Net.EndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 SendTo(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Net.Sockets.SocketFlags socketFlags, class System.Net.EndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SendTo(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.SendTo : byte[] * int * int * System.Net.Sockets.SocketFlags * System.Net.EndPoint -&gt; int" Usage="socket.SendTo (buffer, offset, size, socketFlags, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="socketFlags" Type="System.Net.Sockets.SocketFlags" />
        <Parameter Name="remoteEP" Type="System.Net.EndPoint" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="3831b-3326">類型 <see cref="T:System.Byte" /> 的陣列，其中包含要傳送的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3326">An array of type <see cref="T:System.Byte" /> that contains the data to be sent.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="3831b-3327">資料緩衝區中要開始傳送資料的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3327">The position in the data buffer at which to begin sending data.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="3831b-3328">要傳送的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3328">The number of bytes to send.</span>
          </span>
        </param>
        <param name="socketFlags">
          <span data-ttu-id="3831b-3329">
            <see cref="T:System.Net.Sockets.SocketFlags" /> 值的位元組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3329">A bitwise combination of the <see cref="T:System.Net.Sockets.SocketFlags" /> values.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="3831b-3330">
            <see cref="T:System.Net.EndPoint" />，表示資料的目的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3330">The <see cref="T:System.Net.EndPoint" /> that represents the destination location for the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3331">從緩衝區中的指定位置開始且使用指定的 <see cref="T:System.Net.Sockets.SocketFlags" />，傳送指定位元組數目的資料至指定的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3331">Sends the specified number of bytes of data to the specified endpoint, starting at the specified location in the buffer, and using the specified <see cref="T:System.Net.Sockets.SocketFlags" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-3332">已傳送的位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3332">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3333">在這個多載，如果您指定<xref:System.Net.Sockets.SocketFlags.DontRoute>旗標標示為`socketflags`參數，您要將不會路由傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3333">In this overload, if you specify the <xref:System.Net.Sockets.SocketFlags.DontRoute> flag as the `socketflags` parameter, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="3831b-3334">如果您使用無連接的通訊協定，您不需要建立的預設遠端主機<xref:System.Net.Sockets.Socket.Connect%2A>方法之前呼叫<xref:System.Net.Sockets.Socket.SendTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3334">If you are using a connectionless protocol, you do not need to establish a default remote host with the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>.</span></span> <span data-ttu-id="3831b-3335">您只需要這樣做，如果您想要呼叫<xref:System.Net.Sockets.Socket.Send%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3335">You only need to do this if you intend to call the <xref:System.Net.Sockets.Socket.Send%2A> method.</span></span> <span data-ttu-id="3831b-3336">如果您呼叫<xref:System.Net.Sockets.Socket.Connect%2A>方法之前呼叫<xref:System.Net.Sockets.Socket.SendTo%2A>，則`remoteEP`參數會覆寫指定的預設遠端主機，可傳送作業才。</span><span class="sxs-lookup"><span data-stu-id="3831b-3336">If you do call the <xref:System.Net.Sockets.Socket.Connect%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendTo%2A>, the `remoteEP` parameter will override the specified default remote host for that send operation only.</span></span> <span data-ttu-id="3831b-3337">您也不需要呼叫<xref:System.Net.Sockets.Socket.Bind%2A>方法，因為基礎的服務提供者會指派最適當的區域網路位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3337">You are also not required to call the <xref:System.Net.Sockets.Socket.Bind%2A> method, because the underlying service provider will assign the most appropriate local network address and port number.</span></span> <span data-ttu-id="3831b-3338">如果您需要識別指派的本機網路位址和連接埠號碼，您可以使用<xref:System.Net.Sockets.Socket.LocalEndPoint%2A>屬性之後<xref:System.Net.Sockets.Socket.SendTo%2A>方法成功完成。</span><span class="sxs-lookup"><span data-stu-id="3831b-3338">If you need to identify the assigned local network address and port number, you can use the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property after the <xref:System.Net.Sockets.Socket.SendTo%2A> method successfully completes.</span></span>  
  
 <span data-ttu-id="3831b-3339">適用於無連線的通訊協定，雖然<xref:System.Net.Sockets.Socket.SendTo%2A>也適用於使用連線導向的通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-3339">Although intended for connectionless protocols, <xref:System.Net.Sockets.Socket.SendTo%2A> also works with connection-oriented protocols.</span></span> <span data-ttu-id="3831b-3340">如果您使用連線導向的通訊協定，您必須先透過呼叫建立連接遠端主機<xref:System.Net.Sockets.Socket.Connect%2A>方法，或接受連入的連接要求使用<xref:System.Net.Sockets.Socket.Accept%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3340">If you are using a connection-oriented protocol, you must first establish a remote host connection by calling the <xref:System.Net.Sockets.Socket.Connect%2A> method or accept an incoming connection request using the <xref:System.Net.Sockets.Socket.Accept%2A> method.</span></span> <span data-ttu-id="3831b-3341">如果您不要建立或接受連接遠端主機<xref:System.Net.Sockets.Socket.SendTo%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3341">If you do not establish or accept a remote host connection, <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-3342">您也可以建立預設遠端主機的無連線的通訊協定，才能呼叫<xref:System.Net.Sockets.Socket.SendTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3342">You can also establish a default remote host for a connectionless protocol prior to calling the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span> <span data-ttu-id="3831b-3343">在這些情況下，任一<xref:System.Net.Sockets.Socket.SendTo%2A>將會忽略`remoteEP`參數並只將資料傳送至已連接或預設遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-3343">In either of these cases, <xref:System.Net.Sockets.Socket.SendTo%2A> will ignore the `remoteEP` parameter and only send data to the connected or default remote host.</span></span>  
  
 <span data-ttu-id="3831b-3344">封鎖通訊端，將會封鎖直到傳送要求的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-3344">Blocking sockets will block until the requested number of bytes are sent.</span></span> <span data-ttu-id="3831b-3345">因為非封鎖<xref:System.Net.Sockets.Socket>完成立即執行，它可能會不傳送所有在單一作業中要求的位元組。</span><span class="sxs-lookup"><span data-stu-id="3831b-3345">Since a non-blocking <xref:System.Net.Sockets.Socket> completes immediately, it might not send all of the bytes requested in a single operation.</span></span> <span data-ttu-id="3831b-3346">您必須負責應用程式來追蹤已傳送的位元組數，以及重試此作業，直到應用程式傳送要求的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="3831b-3346">It is your applications responsibility to keep track of the number of bytes sent and to retry the operation until the application sends the requested number of bytes.</span></span> <span data-ttu-id="3831b-3347">另外還有您傳送的資料就會立即出現在網路不保證。</span><span class="sxs-lookup"><span data-stu-id="3831b-3347">There is also no guarantee that the data you send will appear on the network immediately.</span></span> <span data-ttu-id="3831b-3348">若要提高網路效率，基礎的系統可能會延遲傳輸，直到收集大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3348">To increase network efficiency, the underlying system may delay transmission until a significant amount of out-going data is collected.</span></span> <span data-ttu-id="3831b-3349">成功完成<xref:System.Net.Sockets.Socket.SendTo%2A>方法表示基礎的系統有網路資料傳送的緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="3831b-3349">A successful completion of the <xref:System.Net.Sockets.Socket.SendTo%2A> method means that the underlying system has had room to buffer your data for a network send.</span></span>  
  
 <span data-ttu-id="3831b-3350">如果您在封鎖模式中，使用無連接的通訊協定<xref:System.Net.Sockets.Socket.SendTo%2A>將會封鎖直到傳送資料包。</span><span class="sxs-lookup"><span data-stu-id="3831b-3350">If you are using a connectionless protocol in blocking mode, <xref:System.Net.Sockets.Socket.SendTo%2A> will block until the datagram is sent.</span></span> <span data-ttu-id="3831b-3351">如果您想要將資料傳送至的廣播位址，您必須先呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法，並設定通訊端選項設定為<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3351">If you want to send data to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="3831b-3352">您也必須確定大小未超過基礎的服務提供者的最大的封包大小。</span><span class="sxs-lookup"><span data-stu-id="3831b-3352">You must also be sure that the size does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-3353">若是如此，將不會傳送資料包並<xref:System.Net.Sockets.Socket.SendTo%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3353">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.SendTo%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3354">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3354">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-3355">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-3355">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3356">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3356">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-3357">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-3357">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3358">下列程式碼範例會將無連線的資料包傳送至指定的遠端主機。</span><span class="sxs-lookup"><span data-stu-id="3831b-3358">The following code example sends a connectionless datagram to the specified remote host.</span></span> <span data-ttu-id="3831b-3359">位移、 大小、 及<xref:System.Net.Sockets.SocketFlags>傳遞至<xref:System.Net.Sockets.Socket.SendTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3359">The offset, size, and <xref:System.Net.Sockets.SocketFlags> are passed to the <xref:System.Net.Sockets.Socket.SendTo%2A> method.</span></span>  
  
 [!code-cpp[Socket_Sync_Send_Receive#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CPP/source.cpp#8)]
 [!code-csharp[Socket_Sync_Send_Receive#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Sync_Send_Receive/CS/source.cs#8)]
 [!code-vb[Socket_Sync_Send_Receive#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Sync_Send_Receive/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-3360">
            <paramref name="buffer" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3360">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="3831b-3361">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3361">-or-</span>
          </span>
          <span data-ttu-id="3831b-3362">
            <paramref name="remoteEP" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3362">
              <paramref name="remoteEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-3363">
            <paramref name="offset" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3363">
              <paramref name="offset" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-3364">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3364">-or-</span>
          </span>
          <span data-ttu-id="3831b-3365">
            <paramref name="offset" /> 大於 <paramref name="buffer" /> 的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3365">
              <paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="3831b-3366">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3366">-or-</span>
          </span>
          <span data-ttu-id="3831b-3367">
            <paramref name="size" /> 小於 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3367">
              <paramref name="size" /> is less than 0.</span>
          </span>
          <span data-ttu-id="3831b-3368">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3368">-or-</span>
          </span>
          <span data-ttu-id="3831b-3369">
            <paramref name="size" /> 大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3369">
              <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3370">
            <paramref name="socketFlags" /> 不是有效的值組合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3370">
              <paramref name="socketFlags" /> is not a valid combination of values.</span>
          </span>
          <span data-ttu-id="3831b-3371">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3371">-or-</span>
          </span>
          <span data-ttu-id="3831b-3372">在存取 <see cref="T:System.Net.Sockets.Socket" /> 時發生作業系統錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3372">An operating system error occurs while accessing the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3373">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3373">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="3831b-3374">呼叫堆疊中的呼叫端沒有所需的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3374">A caller in the call stack does not have the required permissions.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.Socket.LocalEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="SendToAsync">
      <MemberSignature Language="C#" Value="public bool SendToAsync (System.Net.Sockets.SocketAsyncEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SendToAsync(class System.Net.Sockets.SocketAsyncEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendToAsync (e As SocketAsyncEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SendToAsync(System::Net::Sockets::SocketAsyncEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.SendToAsync : System.Net.Sockets.SocketAsyncEventArgs -&gt; bool" Usage="socket.SendToAsync e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.Sockets.SocketAsyncEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="3831b-3375">
            <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件，用於這個非同步通訊端作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3375">The <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object to use for this asynchronous socket operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3376">以非同步方式將資料傳送至特定的遠端主機。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3376">Sends data asynchronously to a specific remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3831b-3377">如果 I/O 作業暫止，則傳回 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3377">Returns <see langword="true" /> if the I/O operation is pending.</span>
          </span>
          <span data-ttu-id="3831b-3378">作業完成時會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3378">The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will be raised upon completion of the operation.</span>
          </span>
          <span data-ttu-id="3831b-3379">如果 I/O 作業同步完成，則傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3379">Returns <see langword="false" /> if the I/O operation completed synchronously.</span>
          </span>
          <span data-ttu-id="3831b-3380">在這個情況下，就不會引發與 <paramref name="e" /> 參數有關的 <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> 事件，而在方法呼叫傳回後會立即檢查做為參數傳遞的 <paramref name="e" /> 物件，以擷取作業的結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3380">In this case, The <see cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" /> event on the <paramref name="e" /> parameter will not be raised and the <paramref name="e" /> object passed as a parameter may be examined immediately after the method call returns to retrieve the result of the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3381"><xref:System.Net.Sockets.Socket.SendToAsync%2A>方法會啟動非同步傳送作業中指定遠端主機<xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>屬性`e`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-3381">The <xref:System.Net.Sockets.Socket.SendToAsync%2A> method starts an asynchronous send operation to the remote host specified in the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> property of the `e` parameter.</span></span> <span data-ttu-id="3831b-3382">呼叫<xref:System.Net.Sockets.Socket.SendToAsync%2A>方法可讓您能夠傳送不同的執行緒中的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3382">Calling the <xref:System.Net.Sockets.Socket.SendToAsync%2A> method gives you the ability to send data within a separate execution thread.</span></span> <span data-ttu-id="3831b-3383">雖然此方法適用於無連線的通訊協定，<xref:System.Net.Sockets.Socket.SendToAsync%2A>無連線和連線導向的通訊協定的運作方式。</span><span class="sxs-lookup"><span data-stu-id="3831b-3383">Although this method is intended for connectionless protocols, <xref:System.Net.Sockets.Socket.SendToAsync%2A> works with both connectionless and connection-oriented protocols.</span></span>  
  
 <span data-ttu-id="3831b-3384">若要完成的通知，您必須建立實作事件處理常式的回呼方法\<SocketAsyncEventArgs > 委派，並將附加的回呼<xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="3831b-3384">To be notified of completion, you must create a callback method that implements the EventHandler\<SocketAsyncEventArgs> delegate and attach the callback to the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> event.</span></span>  
  
 <span data-ttu-id="3831b-3385">下列的屬性和事件<xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType>物件，才能成功呼叫這個方法：</span><span class="sxs-lookup"><span data-stu-id="3831b-3385">The following properties and events on the <xref:System.Net.Sockets.SocketAsyncEventArgs?displayProperty=nameWithType> object are required to successfully call this method:</span></span>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Buffer%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Count%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Offset%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>  
  
-   <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>  
  
 <span data-ttu-id="3831b-3386">呼叫端可能會設定<xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType>呼叫之前所需的任何使用者狀態物件的屬性<xref:System.Net.Sockets.Socket.SendToAsync%2A>方法，如此會在回呼方法中擷取資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3386">The caller may set the <xref:System.Net.Sockets.SocketAsyncEventArgs.UserToken%2A?displayProperty=nameWithType> property to any user state object desired before calling the <xref:System.Net.Sockets.Socket.SendToAsync%2A> method, so that the information will be retrievable in the callback method.</span></span> <span data-ttu-id="3831b-3387">如果回呼需要比單一物件的詳細資訊，就可以建立小型的類別來保存為成員的其他必要的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3387">If the callback needs more information than a single object, a small class can be created to hold the other required state information as members.</span></span>  
  
 <span data-ttu-id="3831b-3388">如果您使用連線導向的通訊協定，您必須先呼叫<xref:System.Net.Sockets.Socket.Accept%2A>， <xref:System.Net.Sockets.Socket.AcceptAsync%2A>， <xref:System.Net.Sockets.Socket.BeginAccept%2A>， <xref:System.Net.Sockets.Socket.BeginConnect%2A>， <xref:System.Net.Sockets.Socket.Connect%2A>，或<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3388">If you are using a connection-oriented protocol, you must first call the <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.AcceptAsync%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method.</span></span> <span data-ttu-id="3831b-3389">否則<xref:System.Net.Sockets.Socket.SendToAsync%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3389">Otherwise <xref:System.Net.Sockets.Socket.SendToAsync%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-3390">使用連線導向的通訊協定，當<xref:System.Net.Sockets.Socket.SendToAsync%2A>方法將會忽略<xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>屬性並傳送資料到<xref:System.Net.EndPoint?displayProperty=nameWithType>中所建立<xref:System.Net.Sockets.Socket.Accept%2A>， <xref:System.Net.Sockets.Socket.AcceptAsync%2A>， <xref:System.Net.Sockets.Socket.BeginAccept%2A>， <xref:System.Net.Sockets.Socket.BeginConnect%2A>， <xref:System.Net.Sockets.Socket.Connect%2A>或<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3390">When using a connection-oriented protocol, the <xref:System.Net.Sockets.Socket.SendToAsync%2A> method will ignore the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> property and send data to the <xref:System.Net.EndPoint?displayProperty=nameWithType> established in the <xref:System.Net.Sockets.Socket.Accept%2A>, <xref:System.Net.Sockets.Socket.AcceptAsync%2A>, <xref:System.Net.Sockets.Socket.BeginAccept%2A>, <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-3391">如果您使用無連接的通訊協定，您不需要建立的預設遠端主機<xref:System.Net.Sockets.Socket.BeginConnect%2A>， <xref:System.Net.Sockets.Socket.Connect%2A>，或<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法之前呼叫<xref:System.Net.Sockets.Socket.SendToAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3391">If you are using a connectionless protocol, you do not need to establish a default remote host with the <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendToAsync%2A>.</span></span> <span data-ttu-id="3831b-3392">您只需要這樣做，如果您想要呼叫<xref:System.Net.Sockets.Socket.BeginSend%2A>或<xref:System.Net.Sockets.Socket.SendAsync%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3392">You only need to do this if you intend to call the <xref:System.Net.Sockets.Socket.BeginSend%2A> or <xref:System.Net.Sockets.Socket.SendAsync%2A> methods.</span></span> <span data-ttu-id="3831b-3393">如果您呼叫<xref:System.Net.Sockets.Socket.BeginConnect%2A>， <xref:System.Net.Sockets.Socket.Connect%2A>，或<xref:System.Net.Sockets.Socket.ConnectAsync%2A>方法呼叫之前<xref:System.Net.Sockets.Socket.SendToAsync%2A>，則<xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType>屬性將會覆寫指定的預設遠端主機，可傳送作業才。</span><span class="sxs-lookup"><span data-stu-id="3831b-3393">If you do call the <xref:System.Net.Sockets.Socket.BeginConnect%2A>, <xref:System.Net.Sockets.Socket.Connect%2A>, or <xref:System.Net.Sockets.Socket.ConnectAsync%2A> method prior to calling <xref:System.Net.Sockets.Socket.SendToAsync%2A>, the <xref:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint%2A?displayProperty=nameWithType> property will override the specified default remote host for that send operation only.</span></span> <span data-ttu-id="3831b-3394">您也不需要呼叫<xref:System.Net.Sockets.Socket.Bind%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3394">You are also not required to call the <xref:System.Net.Sockets.Socket.Bind%2A> method.</span></span> <span data-ttu-id="3831b-3395">在此情況下，基礎的服務提供者會指派最適當的區域網路 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3395">In this case, the underlying service provider will assign the most appropriate local network IP address and port number.</span></span> <span data-ttu-id="3831b-3396">如果您想要選取可用的連接埠基礎的服務提供者，請使用連接埠號碼為零。</span><span class="sxs-lookup"><span data-stu-id="3831b-3396">Use a port number of zero if you want the underlying service provider to select a free port.</span></span> <span data-ttu-id="3831b-3397">如果您需要識別已指派的區域網路的 IP 位址和連接埠號碼，您可以使用<xref:System.Net.Sockets.Socket.LocalEndPoint%2A>屬性之後<xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType>事件收到信號，而且會呼叫相關聯的委派。</span><span class="sxs-lookup"><span data-stu-id="3831b-3397">If you need to identify the assigned local network IP address and port number, you can use the <xref:System.Net.Sockets.Socket.LocalEndPoint%2A> property after the <xref:System.Net.Sockets.SocketAsyncEventArgs.Completed?displayProperty=nameWithType> event is signaled and the associated delegates are called.</span></span>  
  
 <span data-ttu-id="3831b-3398">如果您想要將資料傳送至的廣播位址，您必須先呼叫<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法，並設定通訊端選項<xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>設為 true。</span><span class="sxs-lookup"><span data-stu-id="3831b-3398">If you want to send data to a broadcast address, you must first call the <xref:System.Net.Sockets.Socket.SetSocketOption%2A> method and set the socket option for <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> to true.</span></span> <span data-ttu-id="3831b-3399">您也必須確定您的緩衝區的大小未超過基礎的服務提供者的最大的封包大小。</span><span class="sxs-lookup"><span data-stu-id="3831b-3399">You must also be sure that the size of your buffer does not exceed the maximum packet size of the underlying service provider.</span></span> <span data-ttu-id="3831b-3400">若是如此，將不會傳送資料包並<xref:System.Net.Sockets.Socket.SendToAsync%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3400">If it does, the datagram will not be sent and <xref:System.Net.Sockets.Socket.SendToAsync%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
 <span data-ttu-id="3831b-3401">如果您指定的 DontRoute 旗標<xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A?displayProperty=nameWithType>屬性中，您要將不會路由傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3401">If you specify the DontRoute flag in the <xref:System.Net.Sockets.SocketAsyncEventArgs.SocketFlags%2A?displayProperty=nameWithType> property, the data you are sending will not be routed.</span></span>  
  
 <span data-ttu-id="3831b-3402">訊息導向的通訊端，必須小心不能超過訊息大小上限為基礎的傳輸。</span><span class="sxs-lookup"><span data-stu-id="3831b-3402">For message-oriented sockets, care must be taken not to exceed the maximum message size of the underlying transport.</span></span> <span data-ttu-id="3831b-3403">如果緩衝區的大小超過最大的封包大小為基礎的服務提供者，不會傳送資料包並<xref:System.Net.Sockets.Socket.SendToAsync%2A>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3403">If the size of the buffer exceeds the maximum packet size of the underlying service provider, the datagram is not sent and <xref:System.Net.Sockets.Socket.SendToAsync%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="3831b-3404">成功完成<xref:System.Net.Sockets.Socket.SendToAsync%2A>方法不會指出已成功傳遞資料。</span><span class="sxs-lookup"><span data-stu-id="3831b-3404">The successful completion of a <xref:System.Net.Sockets.Socket.SendToAsync%2A> method does not indicate that the data was successfully delivered.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-3405">
            <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> 不可以是 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3405">The <see cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" /> cannot be null.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-3406">通訊端作業已使用 <paramref name="e" /> 參數內指定的 <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> 物件正在進行中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3406">A socket operation was already in progress using the <see cref="T:System.Net.Sockets.SocketAsyncEventArgs" /> object specified in the <paramref name="e" /> parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-3407">這個方法需要 Windows XP (含) 以後版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3407">Windows XP or later is required for this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3408">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3408">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3409">指定的通訊協定是連接導向的，但尚未連接 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3409">The protocol specified is connection-oriented, but the <see cref="T:System.Net.Sockets.Socket" /> is not yet connected.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.SocketAsyncEventArgs" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Buffer" />
        <altmember cref="E:System.Net.Sockets.SocketAsyncEventArgs.Completed" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Count" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.Offset" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.RemoteEndPoint" />
        <altmember cref="P:System.Net.Sockets.SocketAsyncEventArgs.UserToken" />
      </Docs>
    </Member>
    <Member MemberName="SetIPProtectionLevel">
      <MemberSignature Language="C#" Value="public void SetIPProtectionLevel (System.Net.Sockets.IPProtectionLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetIPProtectionLevel(valuetype System.Net.Sockets.IPProtectionLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetIPProtectionLevel (level As IPProtectionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetIPProtectionLevel(System::Net::Sockets::IPProtectionLevel level);" />
      <MemberSignature Language="F#" Value="member this.SetIPProtectionLevel : System.Net.Sockets.IPProtectionLevel -&gt; unit" Usage="socket.SetIPProtectionLevel level" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Net.Sockets.IPProtectionLevel" />
      </Parameters>
      <Docs>
        <param name="level">
          <span data-ttu-id="3831b-3410">要設定在這個通訊端上的 IP 保護層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3410">The IP protection level to set on this socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3411">設定通訊端上的 IP 保護層級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3411">Set the IP protection level on a socket.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3412"><xref:System.Net.Sockets.Socket.SetIPProtectionLevel%2A>方法可讓限制 IPv6 或 IP 通訊端接聽指定的範圍，例如地址的相同連結本機或網站本機首碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3412">The <xref:System.Net.Sockets.Socket.SetIPProtectionLevel%2A> method enables restricting an a IPv6 or IP socket to listen on a specified scope, such as addresses with the same link local or site local prefix.</span></span> <span data-ttu-id="3831b-3413">這個通訊端選項可讓 IPv6 或 IP 的通訊端的存取限制的應用程式。</span><span class="sxs-lookup"><span data-stu-id="3831b-3413">This socket option enables applications to place access restrictions on IPv6 or IP sockets.</span></span> <span data-ttu-id="3831b-3414">這類限制可以讓應用程式在私人 LAN 上執行，簡便又穩當地強化應用程式對外部攻擊的抵禦。</span><span class="sxs-lookup"><span data-stu-id="3831b-3414">Such restrictions enable an application running on a private LAN to simply and robustly harden itself against external attacks.</span></span> <span data-ttu-id="3831b-3415">這個通訊端選項也可用來移除存取限制，如果`level`參數設為<xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3415">This socket option can also be used to remove access restrictions if the `level` parameter is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="3831b-3416">這個通訊端選項可放大或縮小接聽通訊端的範圍，根據需要啟用公用和私用使用者的無限制存取，或視需要限制成僅可存取相同的站台。</span><span class="sxs-lookup"><span data-stu-id="3831b-3416">This socket option widens or narrows the scope of a listening socket, enabling unrestricted access from public and private users when appropriate, or restricting access only to the same site, as required.</span></span>  
  
 <span data-ttu-id="3831b-3417">這個通訊端選項已定義 <xref:System.Net.Sockets.IPProtectionLevel> 列舉中所指定的保護層級。</span><span class="sxs-lookup"><span data-stu-id="3831b-3417">This socket option has defined protection levels specified in the <xref:System.Net.Sockets.IPProtectionLevel> enumeration.</span></span>  
  
 <span data-ttu-id="3831b-3418"><xref:System.Net.Sockets.Socket.SetIPProtectionLevel%2A>方法用來啟用或停用網路位址周遊 (NAT) for<xref:System.Net.Sockets.Socket>執行個體。</span><span class="sxs-lookup"><span data-stu-id="3831b-3418">The <xref:System.Net.Sockets.Socket.SetIPProtectionLevel%2A> method is used to enable or disable Network Address Traversal (NAT) for a <xref:System.Net.Sockets.Socket> instance.</span></span> <span data-ttu-id="3831b-3419">您可以使用 Teredo，6to4 或 ISATAP 通道提供 NAT 周遊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3419">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="3831b-3420">當`level`參數設定為<xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>，或<xref:System.Net.Sockets.IPProtectionLevel.Restricted>，這明確停用 NAT 周遊<xref:System.Net.Sockets.Socket>執行個體。</span><span class="sxs-lookup"><span data-stu-id="3831b-3420">When the `level` parameter is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>, or <xref:System.Net.Sockets.IPProtectionLevel.Restricted>, this explicitly disables NAT traversal for a <xref:System.Net.Sockets.Socket> instance.</span></span>  
  
 <span data-ttu-id="3831b-3421">當`level`參數設定為<xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>，這可能會讓 NAT 周遊<xref:System.Net.Sockets.Socket>根據就地的系統上的防火牆規則。</span><span class="sxs-lookup"><span data-stu-id="3831b-3421">When the `level` parameter is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>, this may allow NAT traversal for a <xref:System.Net.Sockets.Socket> depending on firewall rules in place on the system.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="3831b-3422">
            <paramref name="level" /> 參數不可為 <see cref="F:System.Net.Sockets.IPProtectionLevel.Unspecified" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3422">The <paramref name="level" /> parameter cannot be <see cref="F:System.Net.Sockets.IPProtectionLevel.Unspecified" />.</span>
          </span>
          <span data-ttu-id="3831b-3423">IP 保護層級不能設定為未指定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3423">The IP protection level cannot be set to unspecified.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-3424">通訊端的 <see cref="T:System.Net.Sockets.AddressFamily" /> 必須是 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 或  <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3424">The <see cref="T:System.Net.Sockets.AddressFamily" /> of the socket must be either <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSocketOption">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-3425">設定 <see cref="T:System.Net.Sockets.Socket" /> 選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3425">Sets a <see cref="T:System.Net.Sockets.Socket" /> option.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSocketOption">
      <MemberSignature Language="C#" Value="public void SetSocketOption (System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, bool optionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, bool optionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSocketOption (optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName, bool optionValue);" />
      <MemberSignature Language="F#" Value="member this.SetSocketOption : System.Net.Sockets.SocketOptionLevel * System.Net.Sockets.SocketOptionName * bool -&gt; unit" Usage="socket.SetSocketOption (optionLevel, optionName, optionValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" />
        <Parameter Name="optionValue" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="optionLevel">
          <span data-ttu-id="3831b-3426">其中一個 <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3426">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values.</span>
          </span>
        </param>
        <param name="optionName">
          <span data-ttu-id="3831b-3427">其中一個 <see cref="T:System.Net.Sockets.SocketOptionName" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3427">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values.</span>
          </span>
        </param>
        <param name="optionValue">
          <span data-ttu-id="3831b-3428">選項的值，表示為 <see cref="T:System.Boolean" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3428">The value of the option, represented as a <see cref="T:System.Boolean" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3429">將指定的 <see cref="T:System.Net.Sockets.Socket" /> 選項設為指定的 <see cref="T:System.Boolean" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3429">Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified <see cref="T:System.Boolean" /> value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3430"><xref:System.Net.Sockets.Socket> 選項會決定目前的行為<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3430"><xref:System.Net.Sockets.Socket> options determine the behavior of the current <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-3431">設定`optionValue`要`true`若要啟用的選項，或`false`停用選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3431">Set `optionValue` to `true` to enable the option, or to `false` to disable the option.</span></span>  
  
 <span data-ttu-id="3831b-3432"><xref:System.Net.Sockets.Socket> 選項會依通訊協定支援的層級。</span><span class="sxs-lookup"><span data-stu-id="3831b-3432"><xref:System.Net.Sockets.Socket> options are grouped by level of protocol support.</span></span>  
  
 <span data-ttu-id="3831b-3433">以下列出各種<xref:System.Net.Sockets.Socket>可以使用這個多載來設定的選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3433">Listed below are the various <xref:System.Net.Sockets.Socket> options that can be set using this overload.</span></span> <span data-ttu-id="3831b-3434">這些選項會依適當<xref:System.Net.Sockets.SocketOptionLevel>值。</span><span class="sxs-lookup"><span data-stu-id="3831b-3434">These options are grouped by the appropriate <xref:System.Net.Sockets.SocketOptionLevel> value.</span></span> <span data-ttu-id="3831b-3435">如果您想要設定任何這些選項，請務必使用適當<xref:System.Net.Sockets.SocketOptionLevel>值`optionLevel`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-3435">If you intend to set any of these options, be sure to use the appropriate <xref:System.Net.Sockets.SocketOptionLevel> value for the `optionLevel` parameter.</span></span> <span data-ttu-id="3831b-3436">若要設定您選擇的選項必須指定`optionName`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-3436">The option you choose to set must be specified in the `optionName` parameter.</span></span> <span data-ttu-id="3831b-3437">如果您想要取得任何所列的選項的目前值，請使用<xref:System.Net.Sockets.Socket.GetSocketOption%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3437">If you want to get the current value of any of the options listed, use the <xref:System.Net.Sockets.Socket.GetSocketOption%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-3438"><xref:System.Net.Sockets.SocketOptionLevel.Socket?displayProperty=nameWithType> 您可以使用這個多載設定的選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3438"><xref:System.Net.Sockets.SocketOptionLevel.Socket?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.AcceptConnection>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Broadcast>  
  
-   <xref:System.Net.Sockets.SocketOptionName.DontLinger>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Debug>  
  
-   <xref:System.Net.Sockets.SocketOptionName.KeepAlive>  
  
-   <xref:System.Net.Sockets.SocketOptionName.OutOfBandInline>  
  
-   <xref:System.Net.Sockets.SocketOptionName.ReuseAddress>  
  
 <span data-ttu-id="3831b-3439"><xref:System.Net.Sockets.SocketOptionLevel.IP?displayProperty=nameWithType> 您可以使用這個多載設定的選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3439"><xref:System.Net.Sockets.SocketOptionLevel.IP?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.HeaderIncluded>  
  
-   <xref:System.Net.Sockets.SocketOptionName.MulticastLoopback>  
  
-   <xref:System.Net.Sockets.SocketOptionName.UseLoopback>  
  
 <span data-ttu-id="3831b-3440"><xref:System.Net.Sockets.SocketOptionLevel.Tcp?displayProperty=nameWithType> 您可以使用這個多載設定的選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3440"><xref:System.Net.Sockets.SocketOptionLevel.Tcp?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.BsdUrgent>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Expedited>  
  
-   <xref:System.Net.Sockets.SocketOptionName.NoDelay>  
  
 <span data-ttu-id="3831b-3441"><xref:System.Net.Sockets.SocketOptionLevel.Udp?displayProperty=nameWithType> 您可以使用這個多載設定的選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3441"><xref:System.Net.Sockets.SocketOptionLevel.Udp?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.NoChecksum>  
  
 <span data-ttu-id="3831b-3442">如需有關這些選項的詳細資訊，請參閱<xref:System.Net.Sockets.SocketOptionName>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="3831b-3442">For more information on these options, refer to the <xref:System.Net.Sockets.SocketOptionName> enumeration.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3443">如果您收到<xref:System.Net.Sockets.SocketException>例外狀況，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3443">If you receive a <xref:System.Net.Sockets.SocketException> exception, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-3444">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-3444">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3445">下列程式碼範例會開啟通訊端，並可讓`DontLinger`而`OutOfBandInline`通訊端選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3445">The following code example opens a socket and enables the `DontLinger` and the `OutOfBandInline` socket options.</span></span>  
  
 [!code-cpp[NCLSocketEnhancements#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSocketEnhancements/CPP/nclsocketenhancements.cpp#5)]
 [!code-csharp[NCLSocketEnhancements#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSocketEnhancements/CS/nclsocketenhancements.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3446">
            <see cref="T:System.Net.Sockets.Socket" />物件已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3446">The <see cref="T:System.Net.Sockets.Socket" /> object has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3447">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3447">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetSocketOption">
      <MemberSignature Language="C#" Value="public void SetSocketOption (System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, byte[] optionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, unsigned int8[] optionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSocketOption (optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName, cli::array &lt;System::Byte&gt; ^ optionValue);" />
      <MemberSignature Language="F#" Value="member this.SetSocketOption : System.Net.Sockets.SocketOptionLevel * System.Net.Sockets.SocketOptionName * byte[] -&gt; unit" Usage="socket.SetSocketOption (optionLevel, optionName, optionValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" />
        <Parameter Name="optionValue" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="optionLevel">
          <span data-ttu-id="3831b-3448">其中一個 <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3448">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values.</span>
          </span>
        </param>
        <param name="optionName">
          <span data-ttu-id="3831b-3449">其中一個 <see cref="T:System.Net.Sockets.SocketOptionName" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3449">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values.</span>
          </span>
        </param>
        <param name="optionValue">
          <span data-ttu-id="3831b-3450">
            <see cref="T:System.Byte" /> 型別的陣列，表示選項的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3450">An array of type <see cref="T:System.Byte" /> that represents the value of the option.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3451">將指定的 <see cref="T:System.Net.Sockets.Socket" /> 選項設定為指定值，表示為位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3451">Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified value, represented as a byte array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3452"><xref:System.Net.Sockets.Socket> 選項會決定目前的行為<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3452"><xref:System.Net.Sockets.Socket> options determine the behavior of the current <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-3453">若要設定與使用此多載<xref:System.Net.Sockets.Socket>需要做為選項值的位元組陣列的選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3453">Use this overload to set those <xref:System.Net.Sockets.Socket> options that require a byte array as an option value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3454">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3454">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-3455">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-3455">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3456">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3456">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-3457">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-3457">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3458">下列程式碼範例會設定<xref:System.Net.Sockets.LingerOption>和<xref:System.Net.Sockets.Socket.Send%2A>逾時值。</span><span class="sxs-lookup"><span data-stu-id="3831b-3458">The following code example sets the <xref:System.Net.Sockets.LingerOption> and <xref:System.Net.Sockets.Socket.Send%2A> time-out values.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#1)]
 [!code-csharp[Socket_Socket_Options#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#1)]
 [!code-vb[Socket_Socket_Options#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3459">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3459">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3460">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3460">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.SocketOptionName" />
        <altmember cref="T:System.Net.Sockets.SocketOptionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" />
      </Docs>
    </Member>
    <Member MemberName="SetSocketOption">
      <MemberSignature Language="C#" Value="public void SetSocketOption (System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, int optionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, int32 optionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSocketOption (optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName, int optionValue);" />
      <MemberSignature Language="F#" Value="member this.SetSocketOption : System.Net.Sockets.SocketOptionLevel * System.Net.Sockets.SocketOptionName * int -&gt; unit" Usage="socket.SetSocketOption (optionLevel, optionName, optionValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" />
        <Parameter Name="optionValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="optionLevel">
          <span data-ttu-id="3831b-3461">其中一個 <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3461">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values.</span>
          </span>
        </param>
        <param name="optionName">
          <span data-ttu-id="3831b-3462">其中一個 <see cref="T:System.Net.Sockets.SocketOptionName" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3462">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values.</span>
          </span>
        </param>
        <param name="optionValue">
          <span data-ttu-id="3831b-3463">選項的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3463">A value of the option.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3464">將指定 <see cref="T:System.Net.Sockets.Socket" /> 選項設定為指定的整數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3464">Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified integer value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3465"><xref:System.Net.Sockets.Socket> 選項會決定目前的行為<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3465"><xref:System.Net.Sockets.Socket> options determine the behavior of the current <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-3466">如需使用選項<xref:System.Boolean>資料類型，指定非零的值，以啟用選項和零值以停用此選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3466">For an option with a <xref:System.Boolean> data type, specify a nonzero value to enable the option, and a zero value to disable the option.</span></span> <span data-ttu-id="3831b-3467">如需具有整數資料類型選項，指定適當的值。</span><span class="sxs-lookup"><span data-stu-id="3831b-3467">For an option with an integer data type, specify the appropriate value.</span></span> <span data-ttu-id="3831b-3468"><xref:System.Net.Sockets.Socket> 選項會依通訊協定支援的層級。</span><span class="sxs-lookup"><span data-stu-id="3831b-3468"><xref:System.Net.Sockets.Socket> options are grouped by level of protocol support.</span></span>  
  
 <span data-ttu-id="3831b-3469">以下列出各種<xref:System.Net.Sockets.Socket>可以使用這個多載來設定的選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3469">Listed below are the various <xref:System.Net.Sockets.Socket> options that can be set using this overload.</span></span> <span data-ttu-id="3831b-3470">這些選項會依適當<xref:System.Net.Sockets.SocketOptionLevel>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3470">These options are grouped by the appropriate <xref:System.Net.Sockets.SocketOptionLevel>.</span></span> <span data-ttu-id="3831b-3471">如果您想要設定任何這些選項，請務必使用適當<xref:System.Net.Sockets.SocketOptionLevel>針對`optionLevel`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-3471">If you intend to set any of these options, be sure to use the appropriate <xref:System.Net.Sockets.SocketOptionLevel> for the `optionLevel` parameter.</span></span> <span data-ttu-id="3831b-3472">若要設定您選擇的選項必須指定`optionName`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-3472">The option you choose to set must be specified in the `optionName` parameter.</span></span> <span data-ttu-id="3831b-3473">如果您想要取得任何所列的選項的目前值，請使用<xref:System.Net.Sockets.Socket.GetSocketOption%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3473">If you want to get the current value of any of the options listed, use the <xref:System.Net.Sockets.Socket.GetSocketOption%2A> method.</span></span>  
  
 <span data-ttu-id="3831b-3474"><xref:System.Net.Sockets.SocketOptionLevel.Socket?displayProperty=nameWithType> 您可以使用這個多載設定的選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3474"><xref:System.Net.Sockets.SocketOptionLevel.Socket?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Broadcast>  
  
-   <xref:System.Net.Sockets.SocketOptionName.DontLinger>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Debug>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Error>  
  
-   <xref:System.Net.Sockets.SocketOptionName.KeepAlive>  
  
-   <xref:System.Net.Sockets.SocketOptionName.OutOfBandInline>  
  
-   <xref:System.Net.Sockets.SocketOptionName.ReceiveBuffer>  
  
-   <xref:System.Net.Sockets.SocketOptionName.ReceiveTimeout>  
  
-   <xref:System.Net.Sockets.SocketOptionName.ReuseAddress>  
  
-   <xref:System.Net.Sockets.SocketOptionName.SendBuffer>  
  
-   <xref:System.Net.Sockets.SocketOptionName.SendTimeout>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Type>  
  
 <span data-ttu-id="3831b-3475"><xref:System.Net.Sockets.SocketOptionLevel.IP?displayProperty=nameWithType> 您可以使用這個多載設定的選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3475"><xref:System.Net.Sockets.SocketOptionLevel.IP?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.HeaderIncluded>  
  
-   <xref:System.Net.Sockets.SocketOptionName.IPOptions>  
  
-   <xref:System.Net.Sockets.SocketOptionName.IpTimeToLive>  
  
-   <xref:System.Net.Sockets.SocketOptionName.MulticastInterface>  
  
-   <xref:System.Net.Sockets.SocketOptionName.MulticastLoopback>  
  
-   <xref:System.Net.Sockets.SocketOptionName.MulticastTimeToLive>  
  
-   <xref:System.Net.Sockets.SocketOptionName.TypeOfService>  
  
-   <xref:System.Net.Sockets.SocketOptionName.UseLoopback>  
  
 <span data-ttu-id="3831b-3476"><xref:System.Net.Sockets.SocketOptionLevel.Tcp?displayProperty=nameWithType> 您可以使用這個多載設定的選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3476"><xref:System.Net.Sockets.SocketOptionLevel.Tcp?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.BsdUrgent>  
  
-   <xref:System.Net.Sockets.SocketOptionName.Expedited>  
  
-   <xref:System.Net.Sockets.SocketOptionName.NoDelay>  
  
 <span data-ttu-id="3831b-3477"><xref:System.Net.Sockets.SocketOptionLevel.Udp?displayProperty=nameWithType> 您可以使用這個多載設定的選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3477"><xref:System.Net.Sockets.SocketOptionLevel.Udp?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.ChecksumCoverage>  
  
-   <xref:System.Net.Sockets.SocketOptionName.NoChecksum>  
  
 <span data-ttu-id="3831b-3478"><xref:System.Net.Sockets.SocketOptionLevel.IPv6?displayProperty=nameWithType> 您可以使用這個多載設定的選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3478"><xref:System.Net.Sockets.SocketOptionLevel.IPv6?displayProperty=nameWithType> options that can be set using this overload.</span></span>  
  
-   <xref:System.Net.Sockets.SocketOptionName.HopLimit>  
  
 <span data-ttu-id="3831b-3479">如需有關這些選項的詳細資訊，請參閱<xref:System.Net.Sockets.SocketOptionName>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="3831b-3479">For more information about these options, refer to the <xref:System.Net.Sockets.SocketOptionName> enumeration.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3480">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3480">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-3481">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-3481">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3482">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3482">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-3483">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-3483">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3484">下列程式碼範例會設定<xref:System.Net.Sockets.LingerOption>和<xref:System.Net.Sockets.Socket.Send%2A>逾時值。</span><span class="sxs-lookup"><span data-stu-id="3831b-3484">The following code example sets the <xref:System.Net.Sockets.LingerOption> and <xref:System.Net.Sockets.Socket.Send%2A> time-out values.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#1)]
 [!code-csharp[Socket_Socket_Options#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#1)]
 [!code-vb[Socket_Socket_Options#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3485">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3485">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3486">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3486">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.SocketOptionName" />
        <altmember cref="T:System.Net.Sockets.SocketOptionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" />
      </Docs>
    </Member>
    <Member MemberName="SetSocketOption">
      <MemberSignature Language="C#" Value="public void SetSocketOption (System.Net.Sockets.SocketOptionLevel optionLevel, System.Net.Sockets.SocketOptionName optionName, object optionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSocketOption(valuetype System.Net.Sockets.SocketOptionLevel optionLevel, valuetype System.Net.Sockets.SocketOptionName optionName, object optionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSocketOption (optionLevel As SocketOptionLevel, optionName As SocketOptionName, optionValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName, System::Object ^ optionValue);" />
      <MemberSignature Language="F#" Value="member this.SetSocketOption : System.Net.Sockets.SocketOptionLevel * System.Net.Sockets.SocketOptionName * obj -&gt; unit" Usage="socket.SetSocketOption (optionLevel, optionName, optionValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="optionLevel" Type="System.Net.Sockets.SocketOptionLevel" />
        <Parameter Name="optionName" Type="System.Net.Sockets.SocketOptionName" />
        <Parameter Name="optionValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="optionLevel">
          <span data-ttu-id="3831b-3487">其中一個 <see cref="T:System.Net.Sockets.SocketOptionLevel" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3487">One of the <see cref="T:System.Net.Sockets.SocketOptionLevel" /> values.</span>
          </span>
        </param>
        <param name="optionName">
          <span data-ttu-id="3831b-3488">其中一個 <see cref="T:System.Net.Sockets.SocketOptionName" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3488">One of the <see cref="T:System.Net.Sockets.SocketOptionName" /> values.</span>
          </span>
        </param>
        <param name="optionValue">
          <span data-ttu-id="3831b-3489">
            <see cref="T:System.Net.Sockets.LingerOption" /> 或 <see cref="T:System.Net.Sockets.MulticastOption" />，包含選項值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3489">A <see cref="T:System.Net.Sockets.LingerOption" /> or <see cref="T:System.Net.Sockets.MulticastOption" /> that contains the value of the option.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3490">將指定的 <see cref="T:System.Net.Sockets.Socket" /> 選項設定為指定值，表示為物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3490">Sets the specified <see cref="T:System.Net.Sockets.Socket" /> option to the specified value, represented as an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3491"><xref:System.Net.Sockets.Socket> 選項會決定目前的行為<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3491"><xref:System.Net.Sockets.Socket> options determine the behavior of the current <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-3492">若要設定使用此多載<xref:System.Net.Sockets.SocketOptionName.Linger>， <xref:System.Net.Sockets.SocketOptionName.AddMembership>，並<xref:System.Net.Sockets.SocketOptionName.DropMembership><xref:System.Net.Sockets.Socket>選項。</span><span class="sxs-lookup"><span data-stu-id="3831b-3492">Use this overload to set the <xref:System.Net.Sockets.SocketOptionName.Linger>, <xref:System.Net.Sockets.SocketOptionName.AddMembership>, and <xref:System.Net.Sockets.SocketOptionName.DropMembership><xref:System.Net.Sockets.Socket> options.</span></span> <span data-ttu-id="3831b-3493">針對<xref:System.Net.Sockets.SocketOptionName.Linger>選項，請使用<xref:System.Net.Sockets.Socket>如`optionLevel`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-3493">For the <xref:System.Net.Sockets.SocketOptionName.Linger> option, use <xref:System.Net.Sockets.Socket> for the `optionLevel` parameter.</span></span> <span data-ttu-id="3831b-3494">針對<xref:System.Net.Sockets.SocketOptionName.AddMembership>並<xref:System.Net.Sockets.SocketOptionName.DropMembership>，使用<xref:System.Net.Sockets.SocketOptionLevel.IP>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3494">For <xref:System.Net.Sockets.SocketOptionName.AddMembership> and <xref:System.Net.Sockets.SocketOptionName.DropMembership>, use <xref:System.Net.Sockets.SocketOptionLevel.IP>.</span></span> <span data-ttu-id="3831b-3495">如果您想要取得任何上述選項的目前值，請使用<xref:System.Net.Sockets.Socket.GetSocketOption%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3495">If you want to get the current value of any of the options listed above, use the <xref:System.Net.Sockets.Socket.GetSocketOption%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3496">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3496">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-3497">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-3497">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3498">下列程式碼範例會設定<xref:System.Net.Sockets.LingerOption>和<xref:System.Net.Sockets.Socket.Send%2A>逾時值。</span><span class="sxs-lookup"><span data-stu-id="3831b-3498">The following code example sets the <xref:System.Net.Sockets.LingerOption> and <xref:System.Net.Sockets.Socket.Send%2A> time out values.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#1)]
 [!code-csharp[Socket_Socket_Options#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#1)]
 [!code-vb[Socket_Socket_Options#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3831b-3499">
            <paramref name="optionValue" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3499">
              <paramref name="optionValue" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3500">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3500">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3501">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3501">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.SocketOptionName" />
        <altmember cref="T:System.Net.Sockets.SocketOptionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)" />
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown (System.Net.Sockets.SocketShutdown how);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Shutdown(valuetype System.Net.Sockets.SocketShutdown how) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.Shutdown(System.Net.Sockets.SocketShutdown)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown (how As SocketShutdown)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown(System::Net::Sockets::SocketShutdown how);" />
      <MemberSignature Language="F#" Value="member this.Shutdown : System.Net.Sockets.SocketShutdown -&gt; unit" Usage="socket.Shutdown how" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="how" Type="System.Net.Sockets.SocketShutdown" />
      </Parameters>
      <Docs>
        <param name="how">
          <span data-ttu-id="3831b-3502">其中一個 <see cref="T:System.Net.Sockets.SocketShutdown" /> 值，指定將不再允許的作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3502">One of the <see cref="T:System.Net.Sockets.SocketShutdown" /> values that specifies the operation that will no longer be allowed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3831b-3503">暫停 <see cref="T:System.Net.Sockets.Socket" /> 上的傳送和接收作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3503">Disables sends and receives on a <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3504">當使用連線導向<xref:System.Net.Sockets.Socket>，務必呼叫<xref:System.Net.Sockets.Socket.Shutdown%2A>方法關閉之前<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3504">When using a connection-oriented <xref:System.Net.Sockets.Socket>, always call the <xref:System.Net.Sockets.Socket.Shutdown%2A> method before closing the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-3505">這可確保所有資料都傳送及它在關閉之前，連接的通訊端上接收。</span><span class="sxs-lookup"><span data-stu-id="3831b-3505">This ensures that all data is sent and received on the connected socket before it is closed.</span></span>  
  
 <span data-ttu-id="3831b-3506">呼叫<xref:System.Net.Sockets.Socket.Close%2A>方法來釋放所有 managed 和 unmanaged 資源相關聯<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3506">Call the <xref:System.Net.Sockets.Socket.Close%2A> method to free all managed and unmanaged resources associated with the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-3507">請勿嘗試重複使用<xref:System.Net.Sockets.Socket>結尾後面。</span><span class="sxs-lookup"><span data-stu-id="3831b-3507">Do not attempt to reuse the <xref:System.Net.Sockets.Socket> after closing.</span></span>  
  
 <span data-ttu-id="3831b-3508">下表顯示<xref:System.Net.Sockets.SocketShutdown>列舉值，適用於`how`參數。</span><span class="sxs-lookup"><span data-stu-id="3831b-3508">The following table shows the <xref:System.Net.Sockets.SocketShutdown> enumeration values that are valid for the `how` parameter.</span></span>  
  
|<span data-ttu-id="3831b-3509">值</span><span class="sxs-lookup"><span data-stu-id="3831b-3509">Value</span></span>|<span data-ttu-id="3831b-3510">描述</span><span class="sxs-lookup"><span data-stu-id="3831b-3510">Description</span></span>|  
|-----------|-----------------|  
|<span data-ttu-id="3831b-3511">傳送</span><span class="sxs-lookup"><span data-stu-id="3831b-3511">Send</span></span>|<span data-ttu-id="3831b-3512">停用傳送此<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3512">Disable sending on this <xref:System.Net.Sockets.Socket>.</span></span>|  
|<span data-ttu-id="3831b-3513">接收</span><span class="sxs-lookup"><span data-stu-id="3831b-3513">Receive</span></span>|<span data-ttu-id="3831b-3514">停用此接收<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3514">Disable receiving on this <xref:System.Net.Sockets.Socket>.</span></span>|  
|<span data-ttu-id="3831b-3515">兩種模式</span><span class="sxs-lookup"><span data-stu-id="3831b-3515">Both</span></span>|<span data-ttu-id="3831b-3516">停用傳送和接收此<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3516">Disable both sending and receiving on this <xref:System.Net.Sockets.Socket>.</span></span>|  
  
 <span data-ttu-id="3831b-3517">設定`how`要<xref:System.Net.Sockets.SocketShutdown.Send>指定後續的呼叫<xref:System.Net.Sockets.Socket.Send%2A>不允許。</span><span class="sxs-lookup"><span data-stu-id="3831b-3517">Setting `how` to <xref:System.Net.Sockets.SocketShutdown.Send> specifies that subsequent calls to <xref:System.Net.Sockets.Socket.Send%2A> are not allowed.</span></span> <span data-ttu-id="3831b-3518">如果您使用無連接<xref:System.Net.Sockets.Socket>，並指定<xref:System.Net.Sockets.SocketShutdown.Send>會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="3831b-3518">If you are using a connectionless <xref:System.Net.Sockets.Socket>, specifying <xref:System.Net.Sockets.SocketShutdown.Send> will have no effect.</span></span>  
  
 <span data-ttu-id="3831b-3519">設定`how`要<xref:System.Net.Sockets.SocketShutdown.Receive>指定後續的呼叫<xref:System.Net.Sockets.Socket.Receive%2A>不允許。</span><span class="sxs-lookup"><span data-stu-id="3831b-3519">Setting `how` to <xref:System.Net.Sockets.SocketShutdown.Receive> specifies that subsequent calls to <xref:System.Net.Sockets.Socket.Receive%2A> are not allowed.</span></span> <span data-ttu-id="3831b-3520">這會有較低的通訊協定層級上沒有作用。</span><span class="sxs-lookup"><span data-stu-id="3831b-3520">This has no effect on lower protocol layers.</span></span> <span data-ttu-id="3831b-3521">如果您使用連線導向的通訊協定，則連線會終止，如果下列條件存在之後呼叫<xref:System.Net.Sockets.Socket.Shutdown%2A>:</span><span class="sxs-lookup"><span data-stu-id="3831b-3521">If you are using a connection-oriented protocol, the connection is terminated if either of the following conditions exist after a call to <xref:System.Net.Sockets.Socket.Shutdown%2A> :</span></span>  
  
-   <span data-ttu-id="3831b-3522">資料是在等待接收傳入的網路緩衝區中。</span><span class="sxs-lookup"><span data-stu-id="3831b-3522">Data is in the incoming network buffer waiting to be received.</span></span>  
  
-   <span data-ttu-id="3831b-3523">更多的資料已送達。</span><span class="sxs-lookup"><span data-stu-id="3831b-3523">More data has arrived.</span></span>  
  
 <span data-ttu-id="3831b-3524">如果您使用無連接的通訊協定，資料包所接受並排入佇列。</span><span class="sxs-lookup"><span data-stu-id="3831b-3524">If you are using a connectionless protocol, datagrams are accepted and queued.</span></span> <span data-ttu-id="3831b-3525">不過，如果沒有緩衝區空間可供其他連入的資料包，都會被捨棄，而且會傳回任何錯誤，寄件者。</span><span class="sxs-lookup"><span data-stu-id="3831b-3525">However, if no buffer space is available for additional incoming datagrams, they will be discarded and no error will be returned to the sender.</span></span> <span data-ttu-id="3831b-3526">使用<xref:System.Net.Sockets.Socket.Shutdown%2A>在無連接<xref:System.Net.Sockets.Socket>不建議使用。</span><span class="sxs-lookup"><span data-stu-id="3831b-3526">Using <xref:System.Net.Sockets.Socket.Shutdown%2A> on a connectionless <xref:System.Net.Sockets.Socket> is not recommended.</span></span>  
  
 <span data-ttu-id="3831b-3527">設定`how`至<xref:System.Net.Sockets.SocketShutdown.Both>停用這兩個傳送和接收上面所述。</span><span class="sxs-lookup"><span data-stu-id="3831b-3527">Setting `how` to <xref:System.Net.Sockets.SocketShutdown.Both> disables both sends and receives as described above.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3528">如果您收到<xref:System.Net.Sockets.SocketException>呼叫時<xref:System.Net.Sockets.Socket.Shutdown%2A>方法，請使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3528">If you receive a <xref:System.Net.Sockets.SocketException> when calling the <xref:System.Net.Sockets.Socket.Shutdown%2A> method, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-3529">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-3529">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3831b-3530">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3530">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="3831b-3531">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-3531">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3532">下列程式碼範例會使用<xref:System.Net.Sockets.Socket.Shutdown%2A>若要停用<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3532">The following code example uses <xref:System.Net.Sockets.Socket.Shutdown%2A> to disable the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic Socket.Close Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic Socket.Close Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Socket.Close Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic Socket.Close Example/CS/source.cs#1)]
 [!code-vb[Classic Socket.Close Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic Socket.Close Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3533">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3533">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3534">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3534">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
        <altmember cref="T:System.Net.Sockets.SocketShutdown" />
      </Docs>
    </Member>
    <Member MemberName="SocketType">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.SocketType SocketType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.SocketType SocketType" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.SocketType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SocketType As SocketType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::SocketType SocketType { System::Net::Sockets::SocketType get(); };" />
      <MemberSignature Language="F#" Value="member this.SocketType : System.Net.Sockets.SocketType" Usage="System.Net.Sockets.Socket.SocketType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-3535">取得 <see cref="T:System.Net.Sockets.Socket" /> 的類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3535">Gets the type of the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-3536">其中一個 <see cref="T:System.Net.Sockets.SocketType" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3536">One of the <see cref="T:System.Net.Sockets.SocketType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3537"><xref:System.Net.Sockets.Socket.SocketType%2A> 是唯讀的而且會設定當<xref:System.Net.Sockets.Socket>建立。</span><span class="sxs-lookup"><span data-stu-id="3831b-3537"><xref:System.Net.Sockets.Socket.SocketType%2A> is read-only and is set when the <xref:System.Net.Sockets.Socket> is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3538">下列程式碼範例會顯示<xref:System.Net.Sockets.AddressFamily>， <xref:System.Net.Sockets.SocketType>，和<xref:System.Net.Sockets.ProtocolType>到主控台。</span><span class="sxs-lookup"><span data-stu-id="3831b-3538">The following code example displays the <xref:System.Net.Sockets.AddressFamily>, <xref:System.Net.Sockets.SocketType>, and <xref:System.Net.Sockets.ProtocolType> to the console.</span></span>  
  
 [!code-cpp[Socket_Socket_Options#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#3)]
 [!code-csharp[Socket_Socket_Options#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#3)]
 [!code-vb[Socket_Socket_Options#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.SocketType" />
      </Docs>
    </Member>
    <Member MemberName="SupportsIPv4">
      <MemberSignature Language="C#" Value="public static bool SupportsIPv4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SupportsIPv4" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.SupportsIPv4" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SupportsIPv4 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool SupportsIPv4 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsIPv4 : bool" Usage="System.Net.Sockets.Socket.SupportsIPv4" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use OSSupportsIPv4 instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("SupportsIPv4 is obsoleted for this type, please use OSSupportsIPv4 instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-3539">取得值，指出 IPv4 支援是否可用並在目前的主機上啟用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3539">Gets a value indicating whether IPv4 support is available and enabled on the current host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-3540">如果目前的主機支援 IPv4 通訊協定，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3540">
              <see langword="true" /> if the current host supports the IPv4 protocol; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3541">作業系統可支援 IPv4 和 IPv6 通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-3541">The operating system may support both IPv4 and IPv6 protocols.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.SupportsIPv6" />
      </Docs>
    </Member>
    <Member MemberName="SupportsIPv6">
      <MemberSignature Language="C#" Value="public static bool SupportsIPv6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SupportsIPv6" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.SupportsIPv6" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SupportsIPv6 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool SupportsIPv6 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsIPv6 : bool" Usage="System.Net.Sockets.Socket.SupportsIPv6" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use OSSupportsIPv6 instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("SupportsIPv6 is obsoleted for this type, please use OSSupportsIPv6 instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-3542">取得值，指出「架構」是否對某些已過時 <see cref="T:System.Net.Dns" /> 成員支援 IPv6。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3542">Gets a value that indicates whether the Framework supports IPv6 for certain obsolete <see cref="T:System.Net.Dns" /> members.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-3543">如果「架構」對某些已過時的 <see cref="T:System.Net.Dns" /> 方法支援 IPv6，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3543">
              <see langword="true" /> if the Framework supports IPv6 for certain obsolete <see cref="T:System.Net.Dns" /> methods; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3544">作業系統可支援 IPv4 和 IPv6 通訊協定。</span><span class="sxs-lookup"><span data-stu-id="3831b-3544">The operating system may support both IPv4 and IPv6 protocols.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.OSSupportsIPv6" />
        <altmember cref="P:System.Net.Sockets.Socket.SupportsIPv4" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.Socket.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3831b-3545">釋放 <see cref="T:System.Net.Sockets.Socket" /> 所使用的所有資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3545">Releases all resources used by the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="3831b-3546">當您完成時呼叫 IDisposable.Dispose 使用<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3546">Call IDisposable.Dispose when you are finished using the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-3547">IDisposable.Dispose 方法會使<xref:System.Net.Sockets.Socket>中無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="3831b-3547">The IDisposable.Dispose method leaves the <xref:System.Net.Sockets.Socket> in an unusable state.</span></span> <span data-ttu-id="3831b-3548">在呼叫 IDisposable.Dispose 之後，您必須釋放所有的參考<xref:System.Net.Sockets.Socket>讓記憶體回收行程可以回收記憶體，<xref:System.Net.Sockets.Socket>所佔用。</span><span class="sxs-lookup"><span data-stu-id="3831b-3548">After calling IDisposable.Dispose, you must release all references to the <xref:System.Net.Sockets.Socket> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.Socket> was occupying.</span></span> <span data-ttu-id="3831b-3549">如需詳細資訊，請參閱 <<c0> [ 清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="3831b-3549">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

> [!NOTE] 
> <span data-ttu-id="3831b-3550">請務必在您釋放最後一個參考之前呼叫 IDisposable.Dispose <xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3550">Always call IDisposable.Dispose before you release your last reference to the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="3831b-3551">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Net.Sockets.Socket> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="3831b-3551">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.Socket> object's `Finalize` method.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public short Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Ttl { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.Ttl : int16 with get, set" Usage="System.Net.Sockets.Socket.Ttl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-3552">取得或設定值，指定 <see cref="T:System.Net.Sockets.Socket" /> 傳送之網際網路通訊協定 (IP) 封包的存留時間 (TTL) 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3552">Gets or sets a value that specifies the Time To Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-3553">TTL 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3553">The TTL value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3554">TTL 值會指示之前，路由器會捨棄封包，以及網際網路控制訊息通訊協定 (ICMP) 已超過的 「 TTL 」，將封包可以周遊的路由器數目上限會傳回錯誤訊息寄件者。</span><span class="sxs-lookup"><span data-stu-id="3831b-3554">The TTL value indicates the maximum number of routers the packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</span></span>  
  
 <span data-ttu-id="3831b-3555">TTL 值可能設定的值，從 0 到 255。</span><span class="sxs-lookup"><span data-stu-id="3831b-3555">The TTL value may be set to a value from 0 to 255.</span></span> <span data-ttu-id="3831b-3556">未設定這個屬性，則通訊端的預設 TTL 值為 32。</span><span class="sxs-lookup"><span data-stu-id="3831b-3556">When this property is not set, the default TTL value for a socket is 32.</span></span>  
  
 <span data-ttu-id="3831b-3557">如果已建立成功的連線使用通訊端傳輸控制通訊協定 (TCP) 通訊端上設定這個屬性會忽略的 TCP/IP 堆疊。</span><span class="sxs-lookup"><span data-stu-id="3831b-3557">Setting this property on a Transmission Control Protocol (TCP) socket is ignored by the TCP/IP stack if a successful connection has been established using the socket.</span></span>  
  
 <span data-ttu-id="3831b-3558">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性，以取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="3831b-3558">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="3831b-3559">取得此程式碼之後，請參閱 Windows 通訊端版本 2 API 錯誤碼文件 MSDN library 中的錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="3831b-3559">After you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in the MSDN library for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3831b-3560">下列程式碼範例示範使用<xref:System.Net.Sockets.Socket.Ttl%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3831b-3560">The following code example demonstrates the use of the <xref:System.Net.Sockets.Socket.Ttl%2A> property.</span></span>  
  
 [!code-cpp[SocketPropertyTester#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SocketPropertyTester/CPP/class1.cpp#1)]
 [!code-csharp[SocketPropertyTester#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SocketPropertyTester/CS/class1.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="3831b-3561">TTL 值不能設定為負數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3561">The TTL value can't be set to a negative number.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="3831b-3562">這個屬性只可為 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 家族中的通訊端設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3562">This property can be set only for sockets in the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> families.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="3831b-3563">嘗試存取通訊端時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3563">An error occurred when attempting to access the socket.</span>
          </span>
          <span data-ttu-id="3831b-3564">當嘗試將 TTL 設定為大於 255 的值時，也會傳回這個錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3564">This error is also returned when an attempt was made to set TTL to a value higher than 255.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="3831b-3565">
            <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3565">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UseOnlyOverlappedIO">
      <MemberSignature Language="C#" Value="public bool UseOnlyOverlappedIO { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseOnlyOverlappedIO" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.Socket.UseOnlyOverlappedIO" />
      <MemberSignature Language="VB.NET" Value="Public Property UseOnlyOverlappedIO As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseOnlyOverlappedIO { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseOnlyOverlappedIO : bool with get, set" Usage="System.Net.Sockets.Socket.UseOnlyOverlappedIO" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO("This doesn't do anything on Mono yet")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3831b-3566">指定通訊端是否只應使用重疊的 I/O 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3566">Specifies whether the socket should only use Overlapped I/O mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3831b-3567">如果 <see cref="T:System.Net.Sockets.Socket" /> 只使用重疊的 I/O，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3567">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.Socket" /> uses only overlapped I/O; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="3831b-3568">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3568">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3831b-3569">將此屬性設定為`true`for<xref:System.Net.Sockets.Socket>您想要呼叫<xref:System.Net.Sockets.Socket.DuplicateAndClose%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3569">Set this property to `true` for a <xref:System.Net.Sockets.Socket> you intend to call <xref:System.Net.Sockets.Socket.DuplicateAndClose%2A>.</span></span> <span data-ttu-id="3831b-3570">架構，否則可能會將完成通訊埠指派給通訊端，則會禁止使用<xref:System.Net.Sockets.Socket.DuplicateAndClose%2A>。</span><span class="sxs-lookup"><span data-stu-id="3831b-3570">Otherwise, the Framework may assign a completion port to the socket, which would prohibit the use of <xref:System.Net.Sockets.Socket.DuplicateAndClose%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="3831b-3571">通訊端已繫結至完成通訊埠。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3831b-3571">The socket has been bound to a completion port.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>