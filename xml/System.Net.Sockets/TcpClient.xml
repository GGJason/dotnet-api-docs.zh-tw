<Type Name="TcpClient" FullName="System.Net.Sockets.TcpClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3f522b75d1f24f730339ccccb66549177444e9c4" /><Meta Name="ms.sourcegitcommit" Value="9e7aa84070156026697d2898b5311e6c025a1e6a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/28/2019" /><Meta Name="ms.locfileid" Value="56996846" /></Metadata><TypeSignature Language="C#" Value="public class TcpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type TcpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="58ecf-101">提供 TCP 網路服務的用戶端連接。</span><span class="sxs-lookup"><span data-stu-id="58ecf-101">Provides client connections for TCP network services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-102">`TcpClient`類別提供簡單的方法來連線，傳送，並接收透過同步封鎖模式中的網路進行串流處理資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-102">The `TcpClient` class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</span></span>  
  
 <span data-ttu-id="58ecf-103">為了讓`TcpClient`連接並交換資料，<xref:System.Net.Sockets.TcpListener>或是<xref:System.Net.Sockets.Socket>建立 TCP<xref:System.Net.Sockets.ProtocolType>必須接聽內送連接要求。</span><span class="sxs-lookup"><span data-stu-id="58ecf-103">In order for `TcpClient` to connect and exchange data, a <xref:System.Net.Sockets.TcpListener> or <xref:System.Net.Sockets.Socket> created with the TCP <xref:System.Net.Sockets.ProtocolType> must be listening for incoming connection requests.</span></span> <span data-ttu-id="58ecf-104">您可以連接至此接聽程式在下列兩種方式之一：</span><span class="sxs-lookup"><span data-stu-id="58ecf-104">You can connect to this listener in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="58ecf-105">建立`TcpClient`並呼叫其中一個可用的三個<xref:System.Net.Sockets.TcpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-105">Create a `TcpClient` and call one of the three available <xref:System.Net.Sockets.TcpClient.Connect%2A> methods.</span></span>  
  
-   <span data-ttu-id="58ecf-106">建立`TcpClient`使用主機名稱和連接埠號碼的遠端主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-106">Create a `TcpClient` using the host name and port number of the remote host.</span></span> <span data-ttu-id="58ecf-107">這個建構函式將會自動嘗試連線。</span><span class="sxs-lookup"><span data-stu-id="58ecf-107">This constructor will automatically attempt a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-108">如果您想要將無連接的資料包傳送同步封鎖模式中，使用<xref:System.Net.Sockets.UdpClient>類別。</span><span class="sxs-lookup"><span data-stu-id="58ecf-108">If you want to send connectionless datagrams in synchronous blocking mode, use the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-109">下列程式碼範例會建立`TcpClient`連接。</span><span class="sxs-lookup"><span data-stu-id="58ecf-109">The following code example establishes a `TcpClient` connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CPP/tcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CS/tcpclient.cs#1)]
 [!code-vb[System.Net.Sockets.TcpClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/VB/tcpclient.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="58ecf-110">若要建立傳出連線，或接受連入要求的權限。</span><span class="sxs-lookup"><span data-stu-id="58ecf-110">Permission to establish an outgoing connection or accept an incoming request.</span></span></permission>
    <block subset="none" type="overrides"><para><span data-ttu-id="58ecf-111">若要傳送和接收資料，請使用<see cref="M:System.Net.Sockets.TcpClient.GetStream" />方法，以取得<see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-111">To send and receive data, use the <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> method to obtain a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span> <span data-ttu-id="58ecf-112">呼叫<see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />並<see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />方法<see cref="T:System.Net.Sockets.NetworkStream" />來傳送和接收資料，與遠端主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-112">Call the <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> methods of the <see cref="T:System.Net.Sockets.NetworkStream" /> to send and receive data with the remote host.</span></span> <span data-ttu-id="58ecf-113">使用<see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />方法來釋放相關聯的所有資源<see cref="T:System.Net.Sockets.TcpClient" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-113">Use the <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> method to release all resources associated with the <see cref="T:System.Net.Sockets.TcpClient" />.</span></span></para></block>
    <altmember cref="T:System.Net.Sockets.TcpListener" />
    <altmember cref="T:System.Net.Sockets.NetworkStream" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.IPEndPoint" />
    <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
    <related type="Article" href="~/docs/framework/network-programming/tcp-udp.md"><span data-ttu-id="58ecf-114">TCP-UDP</span><span class="sxs-lookup"><span data-stu-id="58ecf-114">TCP-UDP</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="58ecf-115">初始化 <see cref="T:System.Net.Sockets.TcpClient" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="58ecf-115">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58ecf-116">初始化 <see cref="T:System.Net.Sockets.TcpClient" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="58ecf-116">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-117">這個建構函式會建立新<xref:System.Net.Sockets.TcpClient>，並可讓基礎的服務提供者，將最適當的本機 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-117">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and allows the underlying service provider to assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="58ecf-118">您必須先呼叫<xref:System.Net.Sockets.TcpClient.Connect%2A>方法，然後再傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-118">You must first call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-119">這個建構函式只適用於 IPv4 位址類型。</span><span class="sxs-lookup"><span data-stu-id="58ecf-119">This constructor works only with IPv4 address types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-120">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-120">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58ecf-121">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-121">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-122">下列程式碼範例示範如何使用預設建構函式來建立新的<xref:System.Net.Sockets.TcpClient>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-122">The following code example demonstrates how to use the default constructor to create a new <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP"><span data-ttu-id="58ecf-123">您要繫結 TCP <see cref="T:System.Net.IPEndPoint" /> 的 <see cref="T:System.Net.Sockets.Socket" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-123">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <summary><span data-ttu-id="58ecf-124">初始化 <see cref="T:System.Net.Sockets.TcpClient" /> 類別的新執行個體，並將它繫結至指定的本機端點。</span><span class="sxs-lookup"><span data-stu-id="58ecf-124">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-125">這個建構函式會建立新<xref:System.Net.Sockets.TcpClient>並將它繫結<xref:System.Net.IPEndPoint>所指定`localEP`參數。</span><span class="sxs-lookup"><span data-stu-id="58ecf-125">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="58ecf-126">在呼叫這個建構函式之前，您必須建立`IPEndPoint`使用您想要傳送和接收資料的 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-126">Before you call this constructor, you must create an `IPEndPoint` using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="58ecf-127">您不需要指定連接和通訊之前的本機 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-127">You do not need to specify a local IP address and port number before connecting and communicating.</span></span> <span data-ttu-id="58ecf-128">如果您建立`TcpClient`使用任何其他建構函式，基礎的服務提供者會指派最適當的本機 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-128">If you create a `TcpClient` using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="58ecf-129">您必須呼叫<xref:System.Net.Sockets.TcpClient.Connect%2A>方法，然後再傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-129">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-130">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-130">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58ecf-131">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-131">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-132">下列程式碼範例示範如何建立的執行個體<xref:System.Net.Sockets.TcpClient>類別使用的本機端點。</span><span class="sxs-lookup"><span data-stu-id="58ecf-132">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58ecf-133"><paramref name="localEP" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-133">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family"><span data-ttu-id="58ecf-134">IP 通訊協定的 <see cref="P:System.Net.IPAddress.AddressFamily" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-134">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span></span></param>
        <summary><span data-ttu-id="58ecf-135">使用指定的家族，初始化 <see cref="T:System.Net.Sockets.TcpClient" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="58ecf-135">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-136">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-136">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58ecf-137">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-137">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-138">下列程式碼範例示範如何建立的執行個體<xref:System.Net.Sockets.TcpClient>類別。</span><span class="sxs-lookup"><span data-stu-id="58ecf-138">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="58ecf-139"><paramref name="family" /> 參數不等於 AddressFamily.InterNetwork</span><span class="sxs-lookup"><span data-stu-id="58ecf-139">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork</span></span> 
<span data-ttu-id="58ecf-140">-或-</span><span class="sxs-lookup"><span data-stu-id="58ecf-140">-or-</span></span> 
<span data-ttu-id="58ecf-141"><paramref name="family" /> 參數不等於 AddressFamily.InterNetworkV6</span><span class="sxs-lookup"><span data-stu-id="58ecf-141">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : string * int -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname"><span data-ttu-id="58ecf-142">您要連接之遠端主機的 DNS 名稱。</span><span class="sxs-lookup"><span data-stu-id="58ecf-142">The DNS name of the remote host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="58ecf-143">您要連接之遠端主機的連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-143">The port number of the remote host to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="58ecf-144">初始化 <see cref="T:System.Net.Sockets.TcpClient" /> 類別的新執行個體，並將其連接至指定主機的指定通訊埠。</span><span class="sxs-lookup"><span data-stu-id="58ecf-144">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-145">這個建構函式會建立新<xref:System.Net.Sockets.TcpClient>並使同步連線嘗試提供的主機名稱和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-145">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and makes a synchronous connection attempt to the provided host name and port number.</span></span> <span data-ttu-id="58ecf-146">基礎的服務提供者會指派最適當的本機 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-146">The underlying service provider will assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="58ecf-147">`TcpClient` 將會封鎖直到連接或失敗為止。</span><span class="sxs-lookup"><span data-stu-id="58ecf-147">`TcpClient` will block until it either connects or fails.</span></span> <span data-ttu-id="58ecf-148">這個建構函式可讓您來初始化、 解析 DNS 主機名稱，以及連接在一個方便存取的步驟。</span><span class="sxs-lookup"><span data-stu-id="58ecf-148">This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</span></span>  
  
 <span data-ttu-id="58ecf-149">如果已啟用 IPv6 和<xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>呼叫方法來連線到主機解析為這兩個 IPv6 和 IPv4 位址、 IPv6 位址將會連接嘗試之前的 IPv4 位址的第一個。</span><span class="sxs-lookup"><span data-stu-id="58ecf-149">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="58ecf-150">這可能會有延遲的時間來建立連接，如果主機並未接聽 IPv6 位址的效果。</span><span class="sxs-lookup"><span data-stu-id="58ecf-150">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-151">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-151">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58ecf-152">取得此程式碼之後，您可以參考[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-152">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-153">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-153">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58ecf-154">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-154">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-155">下列程式碼範例示範如何建立的執行個體<xref:System.Net.Sockets.TcpClient>類別使用的主機名稱和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-155">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58ecf-156"><paramref name="hostname" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-156">The <paramref name="hostname" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58ecf-157"><paramref name="port" /> 參數不是介於 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-157">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58ecf-158">存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58ecf-158">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="Overload:System.Net.Sockets.TcpClient.#ctor" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.TcpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58ecf-159">取得或設定值，指出是否已建立連線。</span><span class="sxs-lookup"><span data-stu-id="58ecf-159">Gets or sets a value that indicates whether a connection has been made.</span></span></summary>
        <value><span data-ttu-id="58ecf-160">如果已經建立連接，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-160"><see langword="true" /> if the connection has been made; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-161">類別衍生自<xref:System.Net.Sockets.TcpClient>可以使用這個屬性來判斷是否已成功連線嘗試。</span><span class="sxs-lookup"><span data-stu-id="58ecf-161">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to determine if a connection attempt has succeeded.</span></span> <span data-ttu-id="58ecf-162">它不會監視進行中的連接狀態`TcpClient`。</span><span class="sxs-lookup"><span data-stu-id="58ecf-162">It does not monitor the ongoing connection state of `TcpClient`.</span></span> <span data-ttu-id="58ecf-163">如果遠端主機會關閉連線，`Active`將不會更新。</span><span class="sxs-lookup"><span data-stu-id="58ecf-163">If the remote host closes the connection, `Active` will not be updated.</span></span> <span data-ttu-id="58ecf-164">如果您衍生自`TcpClient`，而且需要更加留意的連接狀態時，使用<xref:System.Net.Sockets.Socket.Connected%2A>屬性<xref:System.Net.Sockets.Socket>所傳回<xref:System.Net.Sockets.TcpClient.Client%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58ecf-164">If you are deriving from `TcpClient` and require closer attention to the connection state, use the <xref:System.Net.Sockets.Socket.Connected%2A> property of the <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpClient.Client%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.Connected" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.TcpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58ecf-165">取得已從網路接收且可供讀取的資料量。</span><span class="sxs-lookup"><span data-stu-id="58ecf-165">Gets the amount of data that has been received from the network and is available to be read.</span></span></summary>
        <value><span data-ttu-id="58ecf-166">從網路收到的和可供讀取的資料位元組數。</span><span class="sxs-lookup"><span data-stu-id="58ecf-166">The number of bytes of data received from the network and available to be read.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="58ecf-167">`Available`屬性是一個方式來判斷資料是否已排入佇列進行讀取。</span><span class="sxs-lookup"><span data-stu-id="58ecf-167">The `Available` property is a way to determine whether data is queued for reading.</span></span> <span data-ttu-id="58ecf-168">如果資料可供使用，呼叫<xref:System.Net.Sockets.NetworkStream.Read%2A>取得的資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-168">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="58ecf-169">可用的資料是總資料量已排入佇列進行讀取的網路緩衝區中。</span><span class="sxs-lookup"><span data-stu-id="58ecf-169">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="58ecf-170">如果沒有資料會排入佇列中的網路緩衝區中，`Available`會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="58ecf-170">If no data is queued in the network buffer, `Available` returns 0.</span></span>  
  
 <span data-ttu-id="58ecf-171">如果遠端主機關機或關閉連接，`Available`可能會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-171">If the remote host shuts down or closes the connection, `Available` may throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="58ecf-172">如果您收到`SocketException`，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-172">If you receive a `SocketException`, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58ecf-173">取得此程式碼之後，您可以參考[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-173">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-174">下列程式碼範例示範使用`Available`屬性。</span><span class="sxs-lookup"><span data-stu-id="58ecf-174">The following code example shows the use of the `Available` property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58ecf-175">嘗試存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58ecf-175">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58ecf-176"><see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58ecf-176">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="58ecf-177">開始遠端主機連接的非同步要求。</span><span class="sxs-lookup"><span data-stu-id="58ecf-177">Begins an asynchronous request for a remote host connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (address, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="58ecf-178">遠端主機的 <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-178">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span></span></param>
        <param name="port"><span data-ttu-id="58ecf-179">遠端主機的連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-179">The port number of the remote host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="58ecf-180"><see cref="T:System.AsyncCallback" /> 委派，會於作業完成時參考要叫用的方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-180">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="58ecf-181">包含連線作業資訊的使用者定義物件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-181">A user-defined object that contains information about the connect operation.</span></span> <span data-ttu-id="58ecf-182">作業完成時會將這個物件傳遞至 <paramref name="requestCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="58ecf-182">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="58ecf-183">開始遠端主機連接的非同步要求。</span><span class="sxs-lookup"><span data-stu-id="58ecf-183">Begins an asynchronous request for a remote host connection.</span></span> <span data-ttu-id="58ecf-184">遠端主機是由 <see cref="T:System.Net.IPAddress" /> 和通訊埠編號 (<see cref="T:System.Int32" />) 指定。</span><span class="sxs-lookup"><span data-stu-id="58ecf-184">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span></span></summary>
        <returns><span data-ttu-id="58ecf-185">參考非同步連接的 <see cref="T:System.IAsyncResult" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-185">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-186">非同步`BeginConnect`作業必須完成呼叫<xref:System.Net.Sockets.TcpClient.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-186">The asynchronous `BeginConnect` operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="58ecf-187">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="58ecf-187">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="58ecf-188">這個方法不會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="58ecf-188">This method does not block until the operation completes.</span></span> <span data-ttu-id="58ecf-189">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Sockets.TcpClient.Connect%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="58ecf-189">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="58ecf-190">如需使用非同步程式設計模型的詳細資訊，請參閱 < [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-190">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-191">下列程式碼範例會建立<xref:System.Net.Sockets.TcpClient>並連接至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-191">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58ecf-192"><paramref name="address" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-192">The <paramref name="address" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58ecf-193">嘗試存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58ecf-193">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58ecf-194"><see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58ecf-194">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="58ecf-195">在呼叫堆疊中位置較高的呼叫端對於要求的作業沒有權限。</span><span class="sxs-lookup"><span data-stu-id="58ecf-195">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58ecf-196">連接埠號碼無效。</span><span class="sxs-lookup"><span data-stu-id="58ecf-196">The port number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (addresses, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addresses"><span data-ttu-id="58ecf-197">至少一個指定遠端主機的 <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-197">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span></span></param>
        <param name="port"><span data-ttu-id="58ecf-198">遠端主機的通訊埠編號。</span><span class="sxs-lookup"><span data-stu-id="58ecf-198">The port number of the remote hosts.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="58ecf-199"><see cref="T:System.AsyncCallback" /> 委派，會於作業完成時參考要叫用的方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-199">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="58ecf-200">包含連線作業資訊的使用者定義物件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-200">A user-defined object that contains information about the connect operation.</span></span> <span data-ttu-id="58ecf-201">作業完成時會將這個物件傳遞至 <paramref name="requestCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="58ecf-201">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="58ecf-202">開始遠端主機連接的非同步要求。</span><span class="sxs-lookup"><span data-stu-id="58ecf-202">Begins an asynchronous request for a remote host connection.</span></span> <span data-ttu-id="58ecf-203">遠端主機是由 <see cref="T:System.Net.IPAddress" /> 陣列和通訊埠編號 (<see cref="T:System.Int32" />) 指定。</span><span class="sxs-lookup"><span data-stu-id="58ecf-203">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span></span></summary>
        <returns><span data-ttu-id="58ecf-204">參考非同步連接的 <see cref="T:System.IAsyncResult" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-204">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-205">非同步`BeginConnect`作業必須完成呼叫<xref:System.Net.Sockets.TcpClient.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-205">The asynchronous `BeginConnect` operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="58ecf-206">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="58ecf-206">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="58ecf-207">這個方法不會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="58ecf-207">This method does not block until the operation completes.</span></span> <span data-ttu-id="58ecf-208">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Sockets.TcpClient.Connect%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="58ecf-208">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="58ecf-209">如需使用非同步程式設計模型的詳細資訊，請參閱 < [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-209">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="58ecf-210">這個方法通常用來呼叫之後立即<xref:System.Net.Dns.BeginGetHostAddresses%2A>方法，可傳回多個 IP 位址的單一主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-210">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-211">下列程式碼範例會建立<xref:System.Net.Sockets.TcpClient>並連接至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-211">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58ecf-212"><paramref name="addresses" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-212">The <paramref name="addresses" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58ecf-213">嘗試存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58ecf-213">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58ecf-214"><see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58ecf-214">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="58ecf-215">在呼叫堆疊中位置較高的呼叫端對於要求的作業沒有權限。</span><span class="sxs-lookup"><span data-stu-id="58ecf-215">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58ecf-216">連接埠號碼無效。</span><span class="sxs-lookup"><span data-stu-id="58ecf-216">The port number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (host, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="58ecf-217">遠端主機的名稱。</span><span class="sxs-lookup"><span data-stu-id="58ecf-217">The name of the remote host.</span></span></param>
        <param name="port"><span data-ttu-id="58ecf-218">遠端主機的連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-218">The port number of the remote host.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="58ecf-219"><see cref="T:System.AsyncCallback" /> 委派，會於作業完成時參考要叫用的方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-219">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="58ecf-220">包含連線作業資訊的使用者定義物件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-220">A user-defined object that contains information about the connect operation.</span></span> <span data-ttu-id="58ecf-221">作業完成時會將這個物件傳遞至 <paramref name="requestCallback" /> 委派。</span><span class="sxs-lookup"><span data-stu-id="58ecf-221">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="58ecf-222">開始遠端主機連接的非同步要求。</span><span class="sxs-lookup"><span data-stu-id="58ecf-222">Begins an asynchronous request for a remote host connection.</span></span> <span data-ttu-id="58ecf-223">遠端主機是由主機名稱 (<see cref="T:System.String" />) 和連接埠號碼 (<see cref="T:System.Int32" />) 指定。</span><span class="sxs-lookup"><span data-stu-id="58ecf-223">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span></span></summary>
        <returns><span data-ttu-id="58ecf-224">參考非同步連接的 <see cref="T:System.IAsyncResult" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-224">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-225">非同步`BeginConnect`作業必須完成呼叫<xref:System.Net.Sockets.TcpClient.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-225">The asynchronous `BeginConnect` operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="58ecf-226">一般而言，會叫用方法`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="58ecf-226">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="58ecf-227">這個方法不會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="58ecf-227">This method does not block until the operation completes.</span></span> <span data-ttu-id="58ecf-228">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Sockets.TcpClient.Connect%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="58ecf-228">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="58ecf-229">如需使用非同步程式設計模型的詳細資訊，請參閱 < [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-229">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-230">下列程式碼範例會建立<xref:System.Net.Sockets.TcpClient>並連接至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-230">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58ecf-231"><paramref name="host" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-231">The <paramref name="host" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58ecf-232">嘗試存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58ecf-232">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58ecf-233"><see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58ecf-233">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="58ecf-234">在呼叫堆疊中位置較高的呼叫端對於要求的作業沒有權限。</span><span class="sxs-lookup"><span data-stu-id="58ecf-234">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58ecf-235">連接埠號碼無效。</span><span class="sxs-lookup"><span data-stu-id="58ecf-235">The port number is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.TcpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58ecf-236">取得或設定基礎 <see cref="T:System.Net.Sockets.Socket" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-236">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="58ecf-237">基礎網路 <see cref="T:System.Net.Sockets.Socket" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-237">The underlying network <see cref="T:System.Net.Sockets.Socket" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-238"><xref:System.Net.Sockets.TcpClient> 建立<xref:System.Net.Sockets.Socket>來傳送和接收資料，透過網路。</span><span class="sxs-lookup"><span data-stu-id="58ecf-238"><xref:System.Net.Sockets.TcpClient> creates a <xref:System.Net.Sockets.Socket> to send and receive data over a network.</span></span> <span data-ttu-id="58ecf-239">類別衍生自`TcpClient`可以使用這個屬性來取得或設定這個`Socket`。</span><span class="sxs-lookup"><span data-stu-id="58ecf-239">Classes deriving from `TcpClient` can use this property to get or set this `Socket`.</span></span> <span data-ttu-id="58ecf-240">使用基礎`Socket`傳回從`Client`如果您需要存取超過其`TcpClient`提供。</span><span class="sxs-lookup"><span data-stu-id="58ecf-240">Use the underlying `Socket` returned from `Client` if you require access beyond that which `TcpClient` provides.</span></span> <span data-ttu-id="58ecf-241">您也可以使用`Client`若要設定的基礎`Socket`的現有`Socket`。</span><span class="sxs-lookup"><span data-stu-id="58ecf-241">You can also use `Client` to set the underlying `Socket` to an existing `Socket`.</span></span> <span data-ttu-id="58ecf-242">這可能很有用，如果您想要利用的簡單性`TcpClient`使用預先存在`Socket`。</span><span class="sxs-lookup"><span data-stu-id="58ecf-242">This might be useful if you want to take advantage of the simplicity of `TcpClient` using a pre-existing `Socket`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-243">下列程式碼範例示範使用`Client`屬性。</span><span class="sxs-lookup"><span data-stu-id="58ecf-243">The following code example demonstrates the use of the `Client` property.</span></span> <span data-ttu-id="58ecf-244">在此範例中，接收緩衝區的大小基礎<xref:System.Net.Sockets.Socket>變更。</span><span class="sxs-lookup"><span data-stu-id="58ecf-244">In this example, the receive buffer size of the underlying <xref:System.Net.Sockets.Socket> is changed.</span></span>  
  
 [!code-csharp[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="tcpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58ecf-245">處置此 <see cref="T:System.Net.Sockets.TcpClient" /> 執行個體，並要求關閉基礎 TCP 連接。</span><span class="sxs-lookup"><span data-stu-id="58ecf-245">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-246">`Close`方法將標示為已處置的執行個體，並要求相關聯<xref:System.Net.Sockets.Socket>關閉 TCP 連線。</span><span class="sxs-lookup"><span data-stu-id="58ecf-246">The `Close` method marks the instance as disposed and requests that the associated <xref:System.Net.Sockets.Socket> close the TCP connection.</span></span> <span data-ttu-id="58ecf-247">根據<xref:System.Net.Sockets.TcpClient.LingerState%2A>屬性，TCP 連線可能會保持開啟一陣子之後`Close`，仍會傳送資料時，會呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-247">Based on the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property, the TCP connection may stay open for some time after the `Close` method is called when data remains to be sent.</span></span> <span data-ttu-id="58ecf-248">沒有基礎連接已完成關閉時提供通知。</span><span class="sxs-lookup"><span data-stu-id="58ecf-248">There is no notification provided when the underlying connection has completed closing.</span></span>  
  
 <span data-ttu-id="58ecf-249">呼叫這個方法最後會關閉相關聯`Socket`也會關閉相關聯<xref:System.Net.Sockets.NetworkStream>用來傳送和接收資料，若已建立。</span><span class="sxs-lookup"><span data-stu-id="58ecf-249">Calling this method will eventually result in the close of the associated `Socket` and will also close the associated <xref:System.Net.Sockets.NetworkStream> that is used to send and receive data if one was created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-250">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-250">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58ecf-251">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-251">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-252">下列程式碼範例示範右<xref:System.Net.Sockets.TcpClient>藉由呼叫`Close`方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-252">The following code example demonstrates closing a <xref:System.Net.Sockets.TcpClient> by calling the `Close` method.</span></span>  
  
 [!code-cpp[NCLTCPClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLTcpClientSync/CPP/tcpclient.cpp#1)]
 [!code-csharp[NCLTCPClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="58ecf-253">使用指定的主機名稱和連接埠號碼將用戶端連接至遠端 TCP 主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-253">Connects the client to a remote TCP host using the specified host name and port number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="tcpClient.Connect remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="remoteEP"><span data-ttu-id="58ecf-254">您想連接到的 <see cref="T:System.Net.IPEndPoint" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-254">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="58ecf-255">使用指定的遠端網路端點將用戶端連接至遠端 TCP 主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-255">Connects the client to a remote TCP host using the specified remote network endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-256">呼叫這個方法來建立指定的同步遠端主機連接<xref:System.Net.IPEndPoint>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-256">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="58ecf-257">在呼叫之前`Connect`，您必須建立的執行個體`IPEndPoint`類別使用的 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-257">Before you call `Connect`, you must create an instance of the `IPEndPoint` class using an IP address and a port number.</span></span> <span data-ttu-id="58ecf-258">使用此`IPEndPoint`做為`remoteEP`參數。</span><span class="sxs-lookup"><span data-stu-id="58ecf-258">Use this `IPEndPoint` as the `remoteEP` parameter.</span></span> <span data-ttu-id="58ecf-259">`Connect`方法將會封鎖直到連接或失敗為止。</span><span class="sxs-lookup"><span data-stu-id="58ecf-259">The `Connect` method will block until it either connects or fails.</span></span> <span data-ttu-id="58ecf-260">連線與遠端主機之後, 使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法，以取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-260">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58ecf-261">使用此`NetworkStream`來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-261">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-262">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-262">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58ecf-263">取得此程式碼之後，您可以參考[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-263">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-264">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-264">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58ecf-265">如需詳細資訊，請參閱[.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)</span><span class="sxs-lookup"><span data-stu-id="58ecf-265">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-266">下列程式碼範例使用<xref:System.Net.IPEndPoint>來連線到遠端主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-266">The following code example uses an <xref:System.Net.IPEndPoint> to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58ecf-267"><paramref name="remoteEp" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-267">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58ecf-268">存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58ecf-268">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58ecf-269"><see cref="T:System.Net.Sockets.TcpClient" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58ecf-269">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span></span></exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="tcpClient.Connect (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="58ecf-270">您想連接到的主機的 <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-270">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="58ecf-271">您想連接的通訊埠編號。</span><span class="sxs-lookup"><span data-stu-id="58ecf-271">The port number to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="58ecf-272">使用指定的 IP 位址和通訊埠編號將用戶端連接至遠端 TCP 主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-272">Connects the client to a remote TCP host using the specified IP address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-273">呼叫這個方法來建立指定的同步遠端主機連接<xref:System.Net.IPAddress>和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-273">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number.</span></span> <span data-ttu-id="58ecf-274"><xref:System.Net.Sockets.TcpClient.Connect%2A>方法將會封鎖直到連接或失敗為止。</span><span class="sxs-lookup"><span data-stu-id="58ecf-274">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="58ecf-275">連線與遠端主機之後, 使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法，以取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-275">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58ecf-276">使用此`NetworkStream`來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-276">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-277">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-277">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58ecf-278">取得此程式碼之後，您可以參考[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-278">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-279">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-279">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58ecf-280">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-280">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-281">下列程式碼範例會使用以連線到遠端主機的 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-281">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58ecf-282"><paramref name="address" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-282">The <paramref name="address" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58ecf-283"><paramref name="port" /> 不在 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之間。</span><span class="sxs-lookup"><span data-stu-id="58ecf-283">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58ecf-284">存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58ecf-284">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58ecf-285"><see cref="T:System.Net.Sockets.TcpClient" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58ecf-285"><see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] ipAddresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] ipAddresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (ipAddresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ ipAddresses, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress[] * int -&gt; unit" Usage="tcpClient.Connect (ipAddresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ipAddresses"><span data-ttu-id="58ecf-286">您想連接之主機的 <see cref="T:System.Net.IPAddress" /> 陣列。</span><span class="sxs-lookup"><span data-stu-id="58ecf-286">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="58ecf-287">您想連接的通訊埠編號。</span><span class="sxs-lookup"><span data-stu-id="58ecf-287">The port number to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="58ecf-288">使用指定的 IP 位址和通訊埠編號，將用戶端連接至遠端 TCP 主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-288">Connects the client to a remote TCP host using the specified IP addresses and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-289">這個方法通常用來呼叫之後立即<xref:System.Net.Dns.BeginGetHostAddresses%2A>方法，可傳回多個 IP 位址的單一主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-289">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="58ecf-290">呼叫`Connect`方法，以建立同步的遠端主機連接的陣列所指定的主控件<xref:System.Net.IPAddress>項目和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-290">Call the `Connect` method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number.</span></span> <span data-ttu-id="58ecf-291">`Connect`方法將會封鎖直到連接或失敗為止。</span><span class="sxs-lookup"><span data-stu-id="58ecf-291">The `Connect` method will block until it either connects or fails.</span></span> <span data-ttu-id="58ecf-292">連線與遠端主機之後, 使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法，以取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-292">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58ecf-293">使用此`NetworkStream`來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-293">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-294">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-294">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58ecf-295">取得此程式碼之後，您可以參考[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-295">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-296">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-296">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58ecf-297">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-297">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-298">下列程式碼範例會使用以連線到遠端主機的 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-298">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#8)]
 [!code-csharp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58ecf-299"><paramref name="ipAddresses" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-299">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58ecf-300">連接埠號碼無效。</span><span class="sxs-lookup"><span data-stu-id="58ecf-300">The port number is not valid.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58ecf-301">嘗試存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58ecf-301">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58ecf-302"><see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58ecf-302">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="58ecf-303">在呼叫堆疊中位置較高的呼叫端對於要求的作業沒有權限。</span><span class="sxs-lookup"><span data-stu-id="58ecf-303">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="58ecf-304">這個方法對使用 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 旗標或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 旗標的通訊端有效。</span><span class="sxs-lookup"><span data-stu-id="58ecf-304">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="tcpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname"><span data-ttu-id="58ecf-305">您要連接之遠端主機的 DNS 名稱。</span><span class="sxs-lookup"><span data-stu-id="58ecf-305">The DNS name of the remote host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="58ecf-306">您要連接之遠端主機的連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-306">The port number of the remote host to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="58ecf-307">將用戶端連接到所指定主機上的指定連接埠。</span><span class="sxs-lookup"><span data-stu-id="58ecf-307">Connects the client to the specified port on the specified host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-308">呼叫這個方法來建立同步的遠端主機連線到指定的主機名稱和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-308">Call this method to establish a synchronous remote host connection to the specified host name and port number.</span></span> <span data-ttu-id="58ecf-309">`Connect`方法將會封鎖直到連接或失敗為止。</span><span class="sxs-lookup"><span data-stu-id="58ecf-309">The `Connect` method will block until it either connects or fails.</span></span> <span data-ttu-id="58ecf-310">連線與遠端主機之後, 使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法，以取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-310">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58ecf-311">使用此`NetworkStream`來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-311">Use this  `NetworkStream` to send and receive data.</span></span>  
  
 <span data-ttu-id="58ecf-312">如果已啟用 IPv6 和`Connect(String, Int32)`呼叫方法來連線到主機解析為這兩個 IPv6 和 IPv4 位址、 IPv6 位址將會連接嘗試之前的 IPv4 位址的第一個。</span><span class="sxs-lookup"><span data-stu-id="58ecf-312">If IPv6 is enabled and the `Connect(String, Int32)` method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="58ecf-313">這可能會有延遲的時間來建立連接，如果主機並未接聽 IPv6 位址的效果。</span><span class="sxs-lookup"><span data-stu-id="58ecf-313">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-314">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-314">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58ecf-315">取得此程式碼之後，您可以參考[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-315">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-316">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-316">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58ecf-317">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-317">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-318">下列程式碼範例使用的主機名稱和連接埠編號來連線到遠端主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-318">The following code example uses the host name and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58ecf-319"><paramref name="hostname" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-319">The <paramref name="hostname" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58ecf-320"><paramref name="port" /> 參數不是介於 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-320">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58ecf-321">存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58ecf-321">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58ecf-322"><see cref="T:System.Net.Sockets.TcpClient" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58ecf-322"><see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="58ecf-323">使用指定的主機名稱和連接埠號碼，以非同步作業方式將用戶端連接至遠端 TCP 主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-323">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (address As IPAddress, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="58ecf-324">您想連接到的主機的 <see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-324">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="58ecf-325">您想連接的通訊埠編號。</span><span class="sxs-lookup"><span data-stu-id="58ecf-325">The port number to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="58ecf-326">使用指定的 IP 位址和連接埠號碼，以非同步作業方式將用戶端連接至遠端 TCP 主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-326">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="58ecf-327">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="58ecf-327">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-328">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="58ecf-328">This operation will not block.</span></span> <span data-ttu-id="58ecf-329">傳回的傳回<xref:System.Threading.Tasks.Task>TCP 連線建立之後，物件會完成。</span><span class="sxs-lookup"><span data-stu-id="58ecf-329">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="58ecf-330">這個方法不會封鎖呼叫執行緒，而連線要求正在進行中。</span><span class="sxs-lookup"><span data-stu-id="58ecf-330">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="58ecf-331">呼叫這個方法來建立指定的同步遠端主機連接<xref:System.Net.IPAddress>和連接埠號碼，以非同步作業。</span><span class="sxs-lookup"><span data-stu-id="58ecf-331">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number as an asynchronous operation.</span></span> <span data-ttu-id="58ecf-332">連線與遠端主機之後, 使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法，以取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-332">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58ecf-333">使用此`NetworkStream`來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-333">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-334">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-334">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58ecf-335">取得此程式碼之後，您可以參考[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-335">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-336">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-336">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58ecf-337">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-337">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58ecf-338"><paramref name="address" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-338">The <paramref name="address" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58ecf-339"><paramref name="port" /> 不在 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" /> 之間。</span><span class="sxs-lookup"><span data-stu-id="58ecf-339">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58ecf-340">存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58ecf-340">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58ecf-341"><see cref="T:System.Net.Sockets.TcpClient" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58ecf-341"><see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (addresses As IPAddress(), port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress[] * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (addresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addresses"><span data-ttu-id="58ecf-342">您想連接之主機的 <see cref="T:System.Net.IPAddress" /> 陣列。</span><span class="sxs-lookup"><span data-stu-id="58ecf-342">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="58ecf-343">您想連接的通訊埠編號。</span><span class="sxs-lookup"><span data-stu-id="58ecf-343">The port number to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="58ecf-344">使用指定的 IP 位址和連接埠號碼，以非同步作業方式將用戶端連接至遠端 TCP 主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-344">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="58ecf-345">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="58ecf-345">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-346">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="58ecf-346">This operation will not block.</span></span> <span data-ttu-id="58ecf-347">傳回的傳回<xref:System.Threading.Tasks.Task>TCP 連線建立之後，物件會完成。</span><span class="sxs-lookup"><span data-stu-id="58ecf-347">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="58ecf-348">這個方法不會封鎖呼叫執行緒，而連線要求正在進行中。</span><span class="sxs-lookup"><span data-stu-id="58ecf-348">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="58ecf-349">這個方法通常用來呼叫之後立即<xref:System.Net.Dns.BeginGetHostAddresses%2A>方法，可傳回多個 IP 位址的單一主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-349">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="58ecf-350">呼叫這個方法來建立的陣列所指定的主控件的同步遠端主機連接<xref:System.Net.IPAddress>項目和連接埠號碼，以非同步作業。</span><span class="sxs-lookup"><span data-stu-id="58ecf-350">Call this method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number as an asynchronous operation.</span></span> <span data-ttu-id="58ecf-351">連線與遠端主機之後, 使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法，以取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-351">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58ecf-352">使用此`NetworkStream`來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-352">Use this `NetworkStream` to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-353">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-353">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58ecf-354">取得此程式碼之後，您可以參考[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-354">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-355">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-355">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58ecf-356">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-356">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58ecf-357"><paramref name="ipAddresses" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-357">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58ecf-358">連接埠號碼無效。</span><span class="sxs-lookup"><span data-stu-id="58ecf-358">The port number is not valid.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58ecf-359">嘗試存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58ecf-359">An error occurred when attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58ecf-360"><see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58ecf-360">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="58ecf-361">在呼叫堆疊中位置較高的呼叫端對於要求的作業沒有權限。</span><span class="sxs-lookup"><span data-stu-id="58ecf-361">A caller higher in the call stack does not have permission for the requested operation.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="58ecf-362">這個方法對使用 <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> 旗標或 <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> 旗標的通訊端有效。</span><span class="sxs-lookup"><span data-stu-id="58ecf-362">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (host As String, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : string * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="58ecf-363">您要連接之遠端主機的 DNS 名稱。</span><span class="sxs-lookup"><span data-stu-id="58ecf-363">The DNS name of the remote host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="58ecf-364">您要連接之遠端主機的連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-364">The port number of the remote host to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="58ecf-365">以非同步作業的方式將用戶端連接至指定主機上的指定 TCP 連接埠。</span><span class="sxs-lookup"><span data-stu-id="58ecf-365">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="58ecf-366">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="58ecf-366">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-367">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="58ecf-367">This operation will not block.</span></span> <span data-ttu-id="58ecf-368">傳回的傳回<xref:System.Threading.Tasks.Task>TCP 連線建立之後，物件會完成。</span><span class="sxs-lookup"><span data-stu-id="58ecf-368">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="58ecf-369">這個方法不會封鎖呼叫執行緒，而連線要求正在進行中。</span><span class="sxs-lookup"><span data-stu-id="58ecf-369">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="58ecf-370">呼叫這個方法來建立同步的遠端主機連線到指定的主機名稱和連接埠號碼，以非同步作業。</span><span class="sxs-lookup"><span data-stu-id="58ecf-370">Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</span></span> <span data-ttu-id="58ecf-371">連線與遠端主機之後, 使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法，以取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-371">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58ecf-372">使用此`NetworkStream`來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-372">Use this `NetworkStream` to send and receive data.</span></span>  
  
 <span data-ttu-id="58ecf-373">如果已啟用 IPv6 和<xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29>呼叫方法來連線到主機解析為這兩個 IPv6 和 IPv4 位址、 IPv6 位址將會連接嘗試之前的 IPv4 位址的第一個。</span><span class="sxs-lookup"><span data-stu-id="58ecf-373">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="58ecf-374">這可能會有延遲的時間來建立連接，如果主機並未接聽 IPv6 位址的效果。</span><span class="sxs-lookup"><span data-stu-id="58ecf-374">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-375">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-375">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58ecf-376">取得此程式碼之後，您可以參考[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-376">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-377">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-377">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58ecf-378">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-378">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58ecf-379"><paramref name="hostname" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-379">The <paramref name="hostname" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58ecf-380"><paramref name="port" /> 參數不是介於 <see cref="F:System.Net.IPEndPoint.MinPort" /> 和 <see cref="F:System.Net.IPEndPoint.MaxPort" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-380">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58ecf-381">存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58ecf-381">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58ecf-382"><see cref="T:System.Net.Sockets.TcpClient" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58ecf-382"><see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Connected : bool" Usage="System.Net.Sockets.TcpClient.Connected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58ecf-383">取得值，指出 <see cref="T:System.Net.Sockets.Socket" /> 的基礎 <see cref="T:System.Net.Sockets.TcpClient" /> 是否已連接至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-383">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span></span></summary>
        <value><span data-ttu-id="58ecf-384">如果最近一次的作業是將 <see cref="P:System.Net.Sockets.TcpClient.Client" /> 通訊端連接至遠端資源，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-384"><see langword="true" /> if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-385">`Connected`屬性取得的連接狀態<xref:System.Net.Sockets.TcpClient.Client%2A>截至最後一個 I/O 作業的通訊端。</span><span class="sxs-lookup"><span data-stu-id="58ecf-385">The `Connected` property gets the connection state of the <xref:System.Net.Sockets.TcpClient.Client%2A> socket as of the last I/O operation.</span></span> <span data-ttu-id="58ecf-386">當它傳回`false`，則`Client`通訊端永遠不會連接，或已中斷連線。</span><span class="sxs-lookup"><span data-stu-id="58ecf-386">When it returns `false`, the `Client` socket was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="58ecf-387">因為`Connected`屬性只會反映最新的作業連接的狀態，您應該嘗試傳送或接收訊息，以判斷目前的狀態。</span><span class="sxs-lookup"><span data-stu-id="58ecf-387">Because the `Connected` property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</span></span> <span data-ttu-id="58ecf-388">這個屬性的訊息傳送失敗之後，不會再傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="58ecf-388">After the message send fails, this property no longer returns `true`.</span></span> <span data-ttu-id="58ecf-389">請注意，此行為是經過設計。</span><span class="sxs-lookup"><span data-stu-id="58ecf-389">Note that this behavior is by design.</span></span> <span data-ttu-id="58ecf-390">您無法可靠地測試連接的狀態，因為在測試與傳送/接收之間的時間，連接可能已遺失。</span><span class="sxs-lookup"><span data-stu-id="58ecf-390">You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</span></span> <span data-ttu-id="58ecf-391">通訊端連線，並小心處理傳輸失敗，則應該假設您的程式碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-391">Your code should assume the socket is connected, and gracefully handle failed transmissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-392">下列程式碼範例會連線到遠端端點，然後驗證該連接。</span><span class="sxs-lookup"><span data-stu-id="58ecf-392">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="tcpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58ecf-393">釋放 <see cref="T:System.Net.Sockets.TcpClient" /> 使用的受控與非受控資源。</span><span class="sxs-lookup"><span data-stu-id="58ecf-393">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="tcpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="58ecf-394">設定為 <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，設定為 <see langword="false" /> 表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="58ecf-394">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="58ecf-395">釋放 <see cref="T:System.Net.Sockets.TcpClient" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="58ecf-395">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-396">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-396">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="58ecf-397">`Dispose()` 使用這個方法會叫用`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="58ecf-397">`Dispose()` invokes this method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="58ecf-398">`Finalize` 使用這個方法會叫用`disposing`設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="58ecf-398">`Finalize` invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="58ecf-399">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Net.Sockets.TcpClient> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="58ecf-399">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.TcpClient> references.</span></span> <span data-ttu-id="58ecf-400">其做法是叫用`Dispose()`每個參考物件的方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-400">It does this by invoking the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-401">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-401">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58ecf-402">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-402">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="58ecf-403">
            <see langword="Dispose" /> 可以被其他物件呼叫多次。</span><span class="sxs-lookup"><span data-stu-id="58ecf-403">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="58ecf-404">覆寫 <see langword="Dispose(Boolean)" /> 時，請小心不要參考到先前已在對 <see langword="Dispose" /> 的早期呼叫中被處置 (Dispose) 的物件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-404">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="58ecf-405">如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 &lt;&lt;c2&gt; [ 實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-405">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="58ecf-406">如需詳細資訊<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)並[覆寫 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="58ecf-406">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndConnect : IAsyncResult -&gt; unit" Usage="tcpClient.EndConnect asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="58ecf-407"><see cref="T:System.IAsyncResult" /> 物件，由對 <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> 的呼叫傳回。</span><span class="sxs-lookup"><span data-stu-id="58ecf-407">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span></span></param>
        <summary><span data-ttu-id="58ecf-408">結束擱置的非同步連接嘗試。</span><span class="sxs-lookup"><span data-stu-id="58ecf-408">Ends a pending asynchronous connection attempt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-409">這個方法會封鎖直到作業完成。</span><span class="sxs-lookup"><span data-stu-id="58ecf-409">This method blocks until the operation is complete.</span></span> <span data-ttu-id="58ecf-410">若要以同步方式執行這項作業，使用<xref:System.Net.Sockets.TcpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-410">To perform this operation synchronously, use a <xref:System.Net.Sockets.TcpClient.Connect%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-411">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-411">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58ecf-412">取得此程式碼之後，您可以參考[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-412">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-413">下列程式碼範例會結束非同步的連線嘗試。</span><span class="sxs-lookup"><span data-stu-id="58ecf-413">The following code example ends the asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58ecf-414"><paramref name="asyncResult" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-414">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="58ecf-415">對 <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> 方法的呼叫未傳回<paramref name="asyncResult" /> 參數。</span><span class="sxs-lookup"><span data-stu-id="58ecf-415">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="58ecf-416">先前已呼叫 <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> 方法進行非同步連接。</span><span class="sxs-lookup"><span data-stu-id="58ecf-416">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58ecf-417">嘗試存取 <see cref="T:System.Net.Sockets.Socket" /> 時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58ecf-417">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58ecf-418">基礎 <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58ecf-418">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58ecf-419">取得或設定 <see cref="T:System.Boolean" /> 值，指定 <see cref="T:System.Net.Sockets.TcpClient" /> 是否只允許一個用戶端使用通訊埠。</span><span class="sxs-lookup"><span data-stu-id="58ecf-419">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span></span></summary>
        <value><span data-ttu-id="58ecf-420">如果 <see cref="T:System.Net.Sockets.TcpClient" /> 只允許一個用戶端使用特定通訊埠則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-420"><see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="58ecf-421">若為 Windows Server 2003 和 Windows XP Service Pack 2 (含) 以後版本，則預設值為 <see langword="true" />，若為所有其他版本，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-421">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-422">根據預設，多個用戶端可以使用特定的連接埠;不過，只有其中一個用戶端可以執行網路流量傳送至連接埠的作業。</span><span class="sxs-lookup"><span data-stu-id="58ecf-422">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="58ecf-423">您可以使用`ExclusiveAddressUse`防止多個用戶端使用特定連接埠的屬性。</span><span class="sxs-lookup"><span data-stu-id="58ecf-423">You can use the `ExclusiveAddressUse` property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="58ecf-424">基礎通訊端繫結至用戶端連接埠之前，必須設定這個屬性。</span><span class="sxs-lookup"><span data-stu-id="58ecf-424">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="58ecf-425">如果您呼叫<xref:System.Net.Sockets.TcpClient.Connect%2A>， <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>， <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>，或<xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>用戶端連接埠會繫結為方法的副作用，您之後不能設定`ExclusiveAddressUse`屬性。</span><span class="sxs-lookup"><span data-stu-id="58ecf-425">If you call <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, or <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, the client port is bound as a side effect of the method, and you cannot subsequently set the `ExclusiveAddressUse` property.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="58ecf-426">下列程式碼範例會建立<xref:System.Net.Sockets.TcpClient>取得和設定的值`ExclusiveAddressUse`屬性。</span><span class="sxs-lookup"><span data-stu-id="58ecf-426">The following code example creates a <xref:System.Net.Sockets.TcpClient> and gets and sets the value of the `ExclusiveAddressUse` property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58ecf-427">嘗試存取基礎通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58ecf-427">An error occurred when attempting to access the underlying socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58ecf-428">基礎 <see cref="T:System.Net.Sockets.Socket" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58ecf-428">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58ecf-429">釋放 <see cref="T:System.Net.Sockets.TcpClient" /> 類別所使用的資源。</span><span class="sxs-lookup"><span data-stu-id="58ecf-429">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-430">這個方法覆寫 <xref:System.Object.Finalize%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-430">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="58ecf-431">應用程式程式碼不應該呼叫這個方法。物件的`Finalize`方法會自動叫用記憶體回收期間，除非呼叫已停用記憶體回收行程的最終處理<xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-431">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="58ecf-432"><xref:System.Net.Sockets.TcpClient>類別完成項關閉 TCP 連接，並與相關聯的 managed 的資源全部釋出`TcpClient`。</span><span class="sxs-lookup"><span data-stu-id="58ecf-432">The <xref:System.Net.Sockets.TcpClient> class finalizer closes the TCP connection and releases all managed resources associated with the `TcpClient`.</span></span> <span data-ttu-id="58ecf-433">這些資源包括基礎<xref:System.Net.Sockets.Socket>用來與遠端主機、 連接和<xref:System.Net.Sockets.NetworkStream>用來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-433">These resources include the underlying <xref:System.Net.Sockets.Socket> used for connecting with the remote host, and the <xref:System.Net.Sockets.NetworkStream> used to send and receive data.</span></span> <span data-ttu-id="58ecf-434">完成項並不會釋放任何 unmanaged 的資源。</span><span class="sxs-lookup"><span data-stu-id="58ecf-434">The finalizer does not release any unmanaged resources.</span></span>  
  
 <span data-ttu-id="58ecf-435">如需詳細資訊，請參閱 < [Finalize 方法和解構函式](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))，[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)，並[覆寫 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="58ecf-435">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <related type="Article" href="~/docs/standard/garbage-collection/index.md"><span data-ttu-id="58ecf-436">記憶體回收</span><span class="sxs-lookup"><span data-stu-id="58ecf-436">Garbage Collection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.NetworkStream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.NetworkStream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As NetworkStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::NetworkStream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.Net.Sockets.NetworkStream" Usage="tcpClient.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.NetworkStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58ecf-437">傳回 <see cref="T:System.Net.Sockets.NetworkStream" />，用來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-437">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span></span></summary>
        <returns><span data-ttu-id="58ecf-438">基礎 <see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-438">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="58ecf-439">`GetStream`方法會傳回<xref:System.Net.Sockets.NetworkStream>可用來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-439">The `GetStream` method returns a <xref:System.Net.Sockets.NetworkStream> that you can use to send and receive data.</span></span> <span data-ttu-id="58ecf-440">`NetworkStream`類別繼承自<xref:System.IO.Stream>類別，可提供豐富的方法和屬性可用來協助進行網路通訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-440">The `NetworkStream` class inherits from the <xref:System.IO.Stream> class, which provides a rich collection of methods and properties used to facilitate network communications.</span></span>  
  
 <span data-ttu-id="58ecf-441">您必須呼叫<xref:System.Net.Sockets.TcpClient.Connect%2A>方法第一次，或有<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-441">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method first, or the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="58ecf-442">取得後`NetworkStream`，呼叫<xref:System.Net.Sockets.NetworkStream.Write%2A>方法，以將資料傳送至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-442">After you have obtained the `NetworkStream`, call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method to send data to the remote host.</span></span> <span data-ttu-id="58ecf-443">呼叫<xref:System.Net.Sockets.NetworkStream.Read%2A>方法以接收來自遠端主機抵達的資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-443">Call the <xref:System.Net.Sockets.NetworkStream.Read%2A> method to receive data arriving from the remote host.</span></span> <span data-ttu-id="58ecf-444">這兩種方法會封鎖直到執行指定的作業。</span><span class="sxs-lookup"><span data-stu-id="58ecf-444">Both of these methods block until the specified operation is performed.</span></span> <span data-ttu-id="58ecf-445">您可以避免在讀取作業封鎖藉由檢查<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58ecf-445">You can avoid blocking on a read operation by checking the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property.</span></span> <span data-ttu-id="58ecf-446">A`true`值表示資料的遠端主機已收到，且可供讀取。</span><span class="sxs-lookup"><span data-stu-id="58ecf-446">A `true` value means that data has arrived from the remote host and is available for reading.</span></span> <span data-ttu-id="58ecf-447">在此情況下，<xref:System.Net.Sockets.NetworkStream.Read%2A>一定會立即完成。</span><span class="sxs-lookup"><span data-stu-id="58ecf-447">In this case, <xref:System.Net.Sockets.NetworkStream.Read%2A> is guaranteed to complete immediately.</span></span> <span data-ttu-id="58ecf-448">如果遠端主機已關閉其連線，<xref:System.Net.Sockets.NetworkStream.Read%2A>會立即傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="58ecf-448">If the remote host has shutdown its connection, <xref:System.Net.Sockets.NetworkStream.Read%2A> will immediately return with zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-449">您必須先關閉`NetworkStream`時透過傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-449">You must close the `NetworkStream` when you are through sending and receiving data.</span></span> <span data-ttu-id="58ecf-450">關閉<xref:System.Net.Sockets.TcpClient>不會釋放`NetworkStream`。</span><span class="sxs-lookup"><span data-stu-id="58ecf-450">Closing <xref:System.Net.Sockets.TcpClient> does not release the `NetworkStream`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-451">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58ecf-451">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58ecf-452">取得此程式碼之後，您可以參考[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-452">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58ecf-453">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-453">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58ecf-454">如需詳細資訊，請參閱 < [.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-454">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-455">下列程式碼範例會使用`GetStream`以取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-455">The following code example uses `GetStream` to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58ecf-456">取得之後<xref:System.Net.Sockets.NetworkStream>，傳送與接收使用其<xref:System.Net.Sockets.NetworkStream.Write%2A>和<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-456">After obtaining the <xref:System.Net.Sockets.NetworkStream>, it sends and receives using its <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#14)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#14)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="58ecf-457"><see cref="T:System.Net.Sockets.TcpClient" /> 未連接至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="58ecf-457">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58ecf-458"><see cref="T:System.Net.Sockets.TcpClient" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58ecf-458">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LingerState : System.Net.Sockets.LingerOption with get, set" Usage="System.Net.Sockets.TcpClient.LingerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58ecf-459">取得或設定關聯通訊端持續狀態的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="58ecf-459">Gets or sets information about the linger state of the associated socket.</span></span></summary>
        <value><span data-ttu-id="58ecf-460"><see cref="T:System.Net.Sockets.LingerOption" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-460">A <see cref="T:System.Net.Sockets.LingerOption" />.</span></span> <span data-ttu-id="58ecf-461">根據預設，會停用延遲。</span><span class="sxs-lookup"><span data-stu-id="58ecf-461">By default, lingering is disabled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-462">`LingerState`屬性變更的方式<xref:System.Net.Sockets.Socket.Close%2A>方法的行為。</span><span class="sxs-lookup"><span data-stu-id="58ecf-462">The `LingerState` property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="58ecf-463">這個屬性時設定修改用以連接可以重設的 Winsock 的條件。</span><span class="sxs-lookup"><span data-stu-id="58ecf-463">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="58ecf-464">連接重設，仍然會根據 IP 通訊協定行為。</span><span class="sxs-lookup"><span data-stu-id="58ecf-464">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="58ecf-465">此屬性控制的 TCP 連線會維持開啟狀態之後呼叫的時間長度<xref:System.Net.Sockets.TcpClient.Close%2A>資料保持傳送。</span><span class="sxs-lookup"><span data-stu-id="58ecf-465">This property controls the length of time that the TCP connection will remain open after a call to <xref:System.Net.Sockets.TcpClient.Close%2A> when data remains to be sent.</span></span> <span data-ttu-id="58ecf-466">當您呼叫<xref:System.Net.Sockets.NetworkStream.Write%2A>方法中，資料會放在傳出的網路緩衝區中。</span><span class="sxs-lookup"><span data-stu-id="58ecf-466">When you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="58ecf-467">這個屬性可以用來確保這項資料會傳送到遠端主機，才能進行<xref:System.Net.Sockets.TcpClient.Close%2A>方法會卸除連接。</span><span class="sxs-lookup"><span data-stu-id="58ecf-467">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="58ecf-468">若要啟用延遲，請建立<xref:System.Net.Sockets.LingerOption>執行個體包含所需的值，並設定`LingerState`，這個執行個體的屬性。</span><span class="sxs-lookup"><span data-stu-id="58ecf-468">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the `LingerState` property to this instance.</span></span>  
  
 <span data-ttu-id="58ecf-469">下表描述的行為<xref:System.Net.Sockets.TcpClient.Close%2A>方法的可能值<xref:System.Net.Sockets.LingerOption.Enabled%2A>屬性並<xref:System.Net.Sockets.LingerOption.LingerTime%2A>屬性儲存在`LingerState`屬性。</span><span class="sxs-lookup"><span data-stu-id="58ecf-469">The following table describes the behavior of the <xref:System.Net.Sockets.TcpClient.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the `LingerState` property.</span></span>  
  
|<span data-ttu-id="58ecf-470">LingerState.Enabled</span><span class="sxs-lookup"><span data-stu-id="58ecf-470">LingerState.Enabled</span></span>|<span data-ttu-id="58ecf-471">LingerState.LingerTime</span><span class="sxs-lookup"><span data-stu-id="58ecf-471">LingerState.LingerTime</span></span>|<span data-ttu-id="58ecf-472">行為</span><span class="sxs-lookup"><span data-stu-id="58ecf-472">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="58ecf-473">`false` （已停用），預設值</span><span class="sxs-lookup"><span data-stu-id="58ecf-473">`false` (disabled), the default value</span></span>|<span data-ttu-id="58ecf-474">逾時並不適用，（預設值）。</span><span class="sxs-lookup"><span data-stu-id="58ecf-474">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="58ecf-475">嘗試將預設 IP 通訊協定等候逾時到期之前傳送暫止資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-475">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="58ecf-476">`true` （已啟用）</span><span class="sxs-lookup"><span data-stu-id="58ecf-476">`true` (enabled)</span></span>|<span data-ttu-id="58ecf-477">非零的逾時</span><span class="sxs-lookup"><span data-stu-id="58ecf-477">A nonzero time-out</span></span>|<span data-ttu-id="58ecf-478">嘗試傳送暫止資料，直到指定的逾時到期，但如果嘗試失敗，然後 Winsock 重設連接。</span><span class="sxs-lookup"><span data-stu-id="58ecf-478">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="58ecf-479">`true` （已啟用）</span><span class="sxs-lookup"><span data-stu-id="58ecf-479">`true` (enabled)</span></span>|<span data-ttu-id="58ecf-480">零逾時。</span><span class="sxs-lookup"><span data-stu-id="58ecf-480">A zero timeout.</span></span>|<span data-ttu-id="58ecf-481">會捨棄任何暫止的資料和 Winsock 重設連接。</span><span class="sxs-lookup"><span data-stu-id="58ecf-481">Discards any pending data and Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="58ecf-482">IP 堆疊預設 IP 通訊協定逾時期限，將會根據計算的連線的來回時間。</span><span class="sxs-lookup"><span data-stu-id="58ecf-482">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="58ecf-483">在大部分情況下，堆疊所計算的逾時則是更為相關應用程式所定義的其中一個項目。</span><span class="sxs-lookup"><span data-stu-id="58ecf-483">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="58ecf-484">這是通訊端的預設行為時`LingerState`屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="58ecf-484">This is the default behavior for a socket when the `LingerState` property is not set.</span></span>  
  
 <span data-ttu-id="58ecf-485">當<xref:System.Net.Sockets.LingerOption.LingerTime%2A>屬性會儲存在`LingerState`屬性設定為大於預設 IP 通訊協定等候逾時，預設 IP 通訊協定等候逾時仍會在套用，並覆寫。</span><span class="sxs-lookup"><span data-stu-id="58ecf-485">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the `LingerState` property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-486">下列程式碼範例會設定並取得通訊端的延遲時間。</span><span class="sxs-lookup"><span data-stu-id="58ecf-486">The following code example sets and gets the sockets linger time.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#12)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#12)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.LingerOption" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoDelay : bool with get, set" Usage="System.Net.Sockets.TcpClient.NoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58ecf-487">取得或設定數值，在傳送或接收緩衝區未滿時停用延遲。</span><span class="sxs-lookup"><span data-stu-id="58ecf-487">Gets or sets a value that disables a delay when send or receive buffers are not full.</span></span></summary>
        <value><span data-ttu-id="58ecf-488"><see langword="true" /> 如果已停用延遲;否則， <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-488"><see langword="true" /> if the delay is disabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="58ecf-489">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58ecf-489">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-490">當`NoDelay`已`false`、<xref:System.Net.Sockets.TcpClient>不會傳送封包透過網路之前就已收集了大量的傳出的資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-490">When `NoDelay` is `false`, a <xref:System.Net.Sockets.TcpClient> does not send a packet over the network until it has collected a significant amount of outgoing data.</span></span> <span data-ttu-id="58ecf-491">因為在 TCP 區段的負擔量，而傳送少量資料沒有效率。</span><span class="sxs-lookup"><span data-stu-id="58ecf-491">Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</span></span> <span data-ttu-id="58ecf-492">不過，並存在的情況下，您要傳送的資料量很少或預期來自您所傳送的每個封包的立即回應。</span><span class="sxs-lookup"><span data-stu-id="58ecf-492">However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</span></span> <span data-ttu-id="58ecf-493">您應該衡量網路效率和應用程式需求的相對重要性。</span><span class="sxs-lookup"><span data-stu-id="58ecf-493">Your decision should weigh the relative importance of network efficiency versus application requirements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-494">下列程式碼範例會停用延遲。</span><span class="sxs-lookup"><span data-stu-id="58ecf-494">The following code example disables the delay.</span></span> <span data-ttu-id="58ecf-495">接著它會檢查值`NoDelay`若要確認已成功設定的屬性。</span><span class="sxs-lookup"><span data-stu-id="58ecf-495">It then checks the value of `NoDelay` to verify that the property was successfully set.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58ecf-496">取得或設定接收緩衝區的大小。</span><span class="sxs-lookup"><span data-stu-id="58ecf-496">Gets or sets the size of the receive buffer.</span></span></summary>
        <value><span data-ttu-id="58ecf-497">接收緩衝區的大小，以位元組為單位。</span><span class="sxs-lookup"><span data-stu-id="58ecf-497">The size of the receive buffer, in bytes.</span></span> <span data-ttu-id="58ecf-498">預設值為 8192 位元組。</span><span class="sxs-lookup"><span data-stu-id="58ecf-498">The default value is 8192 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-499">`ReceiveBufferSize`屬性會取得或設定您預期接收緩衝區中儲存以供每個讀取作業的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="58ecf-499">The `ReceiveBufferSize` property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</span></span> <span data-ttu-id="58ecf-500">此屬性實際上則會配置用來接收內送資料的網路緩衝區空間操作。</span><span class="sxs-lookup"><span data-stu-id="58ecf-500">This property actually manipulates the network buffer space allocated for receiving incoming data.</span></span>  
  
 <span data-ttu-id="58ecf-501">您的網路緩衝區應該至少與您的應用程式緩衝區，以確保，當您呼叫的所需的資料都是可用一樣大<xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-501">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="58ecf-502">使用<xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A>屬性來設定這個大小。</span><span class="sxs-lookup"><span data-stu-id="58ecf-502">Use the <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="58ecf-503">如果您的應用程式將會接收大量資料，您應該傳遞`Read`方法非常大的應用程式的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="58ecf-503">If your application will be receiving bulk data, you should pass the `Read` method a very large application buffer.</span></span>  
  
 <span data-ttu-id="58ecf-504">如果網路緩衝區的資料量小於您要求在`Read`方法，將無法擷取所需的一個讀取作業中的資料量。</span><span class="sxs-lookup"><span data-stu-id="58ecf-504">If the network buffer is smaller than the amount of data you request in the `Read` method, you will not be able to retrieve the desired amount of data in one read operation.</span></span> <span data-ttu-id="58ecf-505">這會造成其他呼叫的額外負荷`Read`方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-505">This incurs the overhead of additional calls to the `Read` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-506">下列程式碼範例設定，並取得接收緩衝區的大小。</span><span class="sxs-lookup"><span data-stu-id="58ecf-506">The following code example sets and gets the receive buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58ecf-507">設定緩衝區大小時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58ecf-507">An error occurred when setting the buffer size.</span></span>  
  
<span data-ttu-id="58ecf-508">-或-</span><span class="sxs-lookup"><span data-stu-id="58ecf-508">-or-</span></span> 
<span data-ttu-id="58ecf-509">在 .NET Compact Framework 應用程式中，您無法設定這個屬性。</span><span class="sxs-lookup"><span data-stu-id="58ecf-509">In .NET Compact Framework applications, you cannot set this property.</span></span> <span data-ttu-id="58ecf-510">如需解決方法，請參閱＜註解＞中的＜平台注意事項＞。</span><span class="sxs-lookup"><span data-stu-id="58ecf-510">For a workaround, see the Platform Note in Remarks.</span></span></exception>
        <altmember cref="P:System.Net.Sockets.TcpClient.SendBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58ecf-511">取得或設定時間值，<see cref="T:System.Net.Sockets.TcpClient" /> 一旦啟始讀取作業後，將據此等待以接收資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-511">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span></span></summary>
        <value><span data-ttu-id="58ecf-512">連接的逾時值，以毫秒為單位。</span><span class="sxs-lookup"><span data-stu-id="58ecf-512">The time-out value of the connection in milliseconds.</span></span> <span data-ttu-id="58ecf-513">預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="58ecf-513">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-514">`ReceiveTimeout`屬性會決定的時間量，<xref:System.Net.Sockets.NetworkStream.Read%2A>方法將會封鎖，直到它能接收資料。</span><span class="sxs-lookup"><span data-stu-id="58ecf-514">The `ReceiveTimeout` property determines the amount of time that the <xref:System.Net.Sockets.NetworkStream.Read%2A> method will block until it is able to receive data.</span></span> <span data-ttu-id="58ecf-515">此時間被測量以毫秒為單位。</span><span class="sxs-lookup"><span data-stu-id="58ecf-515">This time is measured in milliseconds.</span></span> <span data-ttu-id="58ecf-516">如果在逾時到期之前`Read`成功完成時，<xref:System.Net.Sockets.TcpClient>就會擲回<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-516">If the time-out expires before `Read` successfully completes, <xref:System.Net.Sockets.TcpClient> throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="58ecf-517">依預設沒有任何逾時。</span><span class="sxs-lookup"><span data-stu-id="58ecf-517">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-518">下列程式碼範例會設定並取得接收逾時。</span><span class="sxs-lookup"><span data-stu-id="58ecf-518">The following code example sets and gets the receive time out.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.SendTimeout" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58ecf-519">取得或設定傳送緩衝區的大小。</span><span class="sxs-lookup"><span data-stu-id="58ecf-519">Gets or sets the size of the send buffer.</span></span></summary>
        <value><span data-ttu-id="58ecf-520">傳送緩衝區的大小，以位元組為單位。</span><span class="sxs-lookup"><span data-stu-id="58ecf-520">The size of the send buffer, in bytes.</span></span> <span data-ttu-id="58ecf-521">預設值為 8192 位元組。</span><span class="sxs-lookup"><span data-stu-id="58ecf-521">The default value is 8192 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-522">`SendBufferSize`屬性會取得或設定必須要有在每次呼叫中傳送的位元組數目<xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-522">The `SendBufferSize` property gets or sets the number of bytes that you are expecting to send in each call to the <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="58ecf-523">此屬性實際上會管理傳送作業所配置的網路緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="58ecf-523">This property actually manipulates the network buffer space allocated for send operation.</span></span>  
  
 <span data-ttu-id="58ecf-524">您的網路緩衝區應該至少與您的應用程式緩衝區，以確保所需的資料會儲存，並在單一作業中傳送一樣大。</span><span class="sxs-lookup"><span data-stu-id="58ecf-524">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</span></span> <span data-ttu-id="58ecf-525">使用<xref:System.Net.Sockets.TcpClient.SendBufferSize%2A>屬性來設定這個大小。</span><span class="sxs-lookup"><span data-stu-id="58ecf-525">Use the <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="58ecf-526">如果您的應用程式將用來傳送大量資料，您應該傳遞`Write`方法非常大的應用程式的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="58ecf-526">If your application will be sending bulk data, you should pass the `Write` method a very large application buffer.</span></span>  
  
 <span data-ttu-id="58ecf-527">如果您的網路緩衝區的資料量小於您提供`Write`方法，由數個網路的傳送您對每個呼叫將會執行作業`Write`方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-527">If the network buffer is smaller than the amount of data you provide the `Write` method, several network send operations will be performed for every call you make to the `Write` method.</span></span> <span data-ttu-id="58ecf-528">您可以確保您的網路緩衝區至少與您的應用程式緩衝區一樣大，以達到更高的資料輸送量。</span><span class="sxs-lookup"><span data-stu-id="58ecf-528">You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-529">下列程式碼範例設定，並取得傳送緩衝區大小。</span><span class="sxs-lookup"><span data-stu-id="58ecf-529">The following code example sets and gets the send buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58ecf-530">取得或設定時間值，<see cref="T:System.Net.Sockets.TcpClient" /> 將據此等候傳送作業成功完成。</span><span class="sxs-lookup"><span data-stu-id="58ecf-530">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span></span></summary>
        <value><span data-ttu-id="58ecf-531">傳送的逾時值，以毫秒為單位。</span><span class="sxs-lookup"><span data-stu-id="58ecf-531">The send time-out value, in milliseconds.</span></span> <span data-ttu-id="58ecf-532">預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="58ecf-532">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58ecf-533">`SendTimeout`屬性會決定的時間量，<xref:System.Net.Sockets.Socket.Send%2A>方法將會封鎖，直到它能成功地傳回。</span><span class="sxs-lookup"><span data-stu-id="58ecf-533">The `SendTimeout` property determines the amount of time that the <xref:System.Net.Sockets.Socket.Send%2A> method will block until it is able to return successfully.</span></span> <span data-ttu-id="58ecf-534">此時間被測量以毫秒為單位。</span><span class="sxs-lookup"><span data-stu-id="58ecf-534">This time is measured in milliseconds.</span></span>  
  
 <span data-ttu-id="58ecf-535">在您呼叫後<xref:System.Net.Sockets.NetworkStream.Write%2A>方法時，基礎<xref:System.Net.Sockets.Socket>傳回的實際傳送至主機的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="58ecf-535">After you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, the underlying <xref:System.Net.Sockets.Socket> returns the number of bytes actually sent to the host.</span></span> <span data-ttu-id="58ecf-536">`SendTimeout`屬性會決定的時間量<xref:System.Net.Sockets.TcpClient>接收的位元組數目在傳回之前會等候。</span><span class="sxs-lookup"><span data-stu-id="58ecf-536">The `SendTimeout` property determines the amount of time a <xref:System.Net.Sockets.TcpClient> will wait before receiving the number of bytes returned.</span></span> <span data-ttu-id="58ecf-537">如果在逾時到期之前`Send`方法成功完成`TcpClient`將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-537">If the time-out expires before the `Send` method successfully completes, `TcpClient` will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="58ecf-538">依預設沒有任何逾時。</span><span class="sxs-lookup"><span data-stu-id="58ecf-538">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58ecf-539">下列程式碼範例會設定並取得`SendTimeout`值。</span><span class="sxs-lookup"><span data-stu-id="58ecf-539">The following code example sets and gets the `SendTimeout` value.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58ecf-540">釋放 <see cref="T:System.Net.Sockets.TcpClient" /> 所使用的所有資源。</span><span class="sxs-lookup"><span data-stu-id="58ecf-540">Releases all resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="58ecf-541">當您完成時呼叫 IDisposable.Dispose 使用<xref:System.Net.Sockets.TcpClient>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-541">Call IDisposable.Dispose when you are finished using the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="58ecf-542">IDisposable.Dispose 方法會使<xref:System.Net.Sockets.TcpClient>中無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="58ecf-542">The IDisposable.Dispose method leaves the <xref:System.Net.Sockets.TcpClient> in an unusable state.</span></span> <span data-ttu-id="58ecf-543">在呼叫 IDisposable.Dispose 之後，您必須釋放所有的參考<xref:System.Net.Sockets.TcpClient>讓記憶體回收行程可以回收記憶體，<xref:System.Net.Sockets.TcpClient>所佔用。</span><span class="sxs-lookup"><span data-stu-id="58ecf-543">After calling IDisposable.Dispose, you must release all references to the <xref:System.Net.Sockets.TcpClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.TcpClient> was occupying.</span></span> <span data-ttu-id="58ecf-544">如需詳細資訊，請參閱 <<c0> [ 清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="58ecf-544">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

> [!NOTE] 
> <span data-ttu-id="58ecf-545">請務必在您釋放最後一個參考之前呼叫 IDisposable.Dispose <xref:System.Net.Sockets.TcpClient>。</span><span class="sxs-lookup"><span data-stu-id="58ecf-545">Always call IDisposable.Dispose before you release your last reference to the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="58ecf-546">否則，它所使用的資源將之前不會釋放記憶體回收行程呼叫<xref:System.Net.Sockets.TcpClient>物件的**Finalize**方法。</span><span class="sxs-lookup"><span data-stu-id="58ecf-546">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.TcpClient> object's **Finalize** method.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>