<Type Name="TcpClient" FullName="System.Net.Sockets.TcpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f9f771b6b7efaf3bac363c5bc85b2f8e27033f3c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36473955" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type TcpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="58a19-101">Provides client connections for TCP network services.</span>
      <span class="sxs-lookup">
        <span data-stu-id="58a19-101">Provides client connections for TCP network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-102"><xref:System.Net.Sockets.TcpClient>類別會提供簡單的方法來連接，傳送和接收串流資料在同步模式中封鎖在網路上。</span><span class="sxs-lookup"><span data-stu-id="58a19-102">The <xref:System.Net.Sockets.TcpClient> class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</span></span>  
  
 <span data-ttu-id="58a19-103">為了讓<xref:System.Net.Sockets.TcpClient>連接，並交換資料，<xref:System.Net.Sockets.TcpListener>或<xref:System.Net.Sockets.Socket>建立 TCP<xref:System.Net.Sockets.ProtocolType>必須接聽內送連接要求。</span><span class="sxs-lookup"><span data-stu-id="58a19-103">In order for <xref:System.Net.Sockets.TcpClient> to connect and exchange data, a <xref:System.Net.Sockets.TcpListener> or <xref:System.Net.Sockets.Socket> created with the TCP <xref:System.Net.Sockets.ProtocolType> must be listening for incoming connection requests.</span></span> <span data-ttu-id="58a19-104">您可以連接至此接聽程式，在下列兩種方式之一：</span><span class="sxs-lookup"><span data-stu-id="58a19-104">You can connect to this listener in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="58a19-105">建立<xref:System.Net.Sockets.TcpClient>並呼叫其中一個可用的三個<xref:System.Net.Sockets.TcpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-105">Create a <xref:System.Net.Sockets.TcpClient> and call one of the three available <xref:System.Net.Sockets.TcpClient.Connect%2A> methods.</span></span>  
  
-   <span data-ttu-id="58a19-106">建立<xref:System.Net.Sockets.TcpClient>使用主機名稱和連接埠號碼遠端主機。</span><span class="sxs-lookup"><span data-stu-id="58a19-106">Create a <xref:System.Net.Sockets.TcpClient> using the host name and port number of the remote host.</span></span> <span data-ttu-id="58a19-107">這個建構函式將會自動嘗試連線。</span><span class="sxs-lookup"><span data-stu-id="58a19-107">This constructor will automatically attempt a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-108">如果您想要將無連接的資料包傳送同步封鎖模式中，使用<xref:System.Net.Sockets.UdpClient>類別。</span><span class="sxs-lookup"><span data-stu-id="58a19-108">If you want to send connectionless datagrams in synchronous blocking mode, use the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-109">下列程式碼範例會建立<xref:System.Net.Sockets.TcpClient>連線。</span><span class="sxs-lookup"><span data-stu-id="58a19-109">The following code example establishes a <xref:System.Net.Sockets.TcpClient> connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CPP/tcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CS/tcpclient.cs#1)]
 [!code-vb[System.Net.Sockets.TcpClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/VB/tcpclient.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="58a19-110">建立傳出連線，或接受連入要求的權限。</span>
      <span class="sxs-lookup">
        <span data-stu-id="58a19-110">Permission to establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <span data-ttu-id="58a19-111">
        <para>若要傳送和接收資料，使用<see cref="M:System.Net.Sockets.TcpClient.GetStream" />方法，以取得<see cref="T:System.Net.Sockets.NetworkStream" />。呼叫<see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />和<see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />方法<see cref="T:System.Net.Sockets.NetworkStream" />來傳送和接收資料的遠端主機。使用<see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />方法釋放相關聯的所有資源<see cref="T:System.Net.Sockets.TcpClient" />。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="58a19-111">
          <para>To send and receive data, use the <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> method to obtain a <see cref="T:System.Net.Sockets.NetworkStream" />. Call the <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> methods of the <see cref="T:System.Net.Sockets.NetworkStream" /> to send and receive data with the remote host. Use the <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> method to release all resources associated with the <see cref="T:System.Net.Sockets.TcpClient" />.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Net.Sockets.TcpListener" />
    <altmember cref="T:System.Net.Sockets.NetworkStream" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.IPEndPoint" />
    <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58a19-112">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-112">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="58a19-113">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-113">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-114">這個建構函式會建立新<xref:System.Net.Sockets.TcpClient>並允許基礎的服務提供者指派最適當的本機 IP 位址和通訊埠編號。</span><span class="sxs-lookup"><span data-stu-id="58a19-114">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and allows the underlying service provider to assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="58a19-115">您必須先呼叫<xref:System.Net.Sockets.TcpClient.Connect%2A>方法，再傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-115">You must first call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-116">這個建構函式只適用於 IPv4 位址類型。</span><span class="sxs-lookup"><span data-stu-id="58a19-116">This constructor works only with IPv4 address types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-117">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58a19-117">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58a19-118">如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-118">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-119">下列程式碼範例示範如何使用預設建構函式來建立新的<xref:System.Net.Sockets.TcpClient>。</span><span class="sxs-lookup"><span data-stu-id="58a19-119">The following code example demonstrates how to use the default constructor to create a new <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="58a19-120">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-120">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58a19-121">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-121">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-122">這個建構函式會建立新<xref:System.Net.Sockets.TcpClient>和繫結至<xref:System.Net.IPEndPoint>所指定`localEP`參數。</span><span class="sxs-lookup"><span data-stu-id="58a19-122">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="58a19-123">在呼叫這個建構函式之前，您必須建立<xref:System.Net.IPEndPoint>使用您想要傳送和接收資料的 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-123">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="58a19-124">您不需要連接和通訊之前指定本機 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-124">You do not need to specify a local IP address and port number before connecting and communicating.</span></span> <span data-ttu-id="58a19-125">如果您建立<xref:System.Net.Sockets.TcpClient>使用任何其他建構函式，基礎的服務提供者會指派最適合的本機 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-125">If you create a <xref:System.Net.Sockets.TcpClient> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="58a19-126">您必須呼叫<xref:System.Net.Sockets.TcpClient.Connect%2A>方法，再傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-126">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-127">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58a19-127">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58a19-128">如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-128">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-129">下列程式碼範例示範如何建立執行個體<xref:System.Net.Sockets.TcpClient>類別使用的本機端點。</span><span class="sxs-lookup"><span data-stu-id="58a19-129">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58a19-130">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-130">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="58a19-131">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-131">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58a19-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="58a19-133">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58a19-133">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58a19-134">如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-134">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-135">下列程式碼範例示範如何建立執行個體<xref:System.Net.Sockets.TcpClient>類別。</span><span class="sxs-lookup"><span data-stu-id="58a19-135">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58a19-136">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork  -or-  The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-136">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork  -or-  The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : string * int -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="58a19-137">The DNS name of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-137">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="58a19-138">The port number of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-138">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58a19-139">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-139">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-140">這個建構函式會建立新<xref:System.Net.Sockets.TcpClient>並使同步連線嘗試提供的主機名稱和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-140">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and makes a synchronous connection attempt to the provided host name and port number.</span></span> <span data-ttu-id="58a19-141">基礎服務提供者將會指派最適合的本機 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-141">The underlying service provider will assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="58a19-142"><xref:System.Net.Sockets.TcpClient> 將會封鎖，直到連接或失敗為止。</span><span class="sxs-lookup"><span data-stu-id="58a19-142"><xref:System.Net.Sockets.TcpClient> will block until it either connects or fails.</span></span> <span data-ttu-id="58a19-143">這個建構函式可讓您來初始化、 解析的 DNS 主機名稱，以及連接在一個方便的步驟。</span><span class="sxs-lookup"><span data-stu-id="58a19-143">This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</span></span>  
  
 <span data-ttu-id="58a19-144">如果已啟用 IPv6 和<xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>呼叫方法來連線到主機解析為這兩個 IPv6 和 IPv4 位址，來嘗試連接到 IPv6 位址將會先的 IPv4 位址。</span><span class="sxs-lookup"><span data-stu-id="58a19-144">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="58a19-145">這可能會有延遲的時間來建立連接，如果主機並未接聽 IPv6 位址的效果。</span><span class="sxs-lookup"><span data-stu-id="58a19-145">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-146">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-146">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58a19-147">取得這個程式碼之後，您可以參考 Windows Sockets 第 2 版 API 錯誤的程式碼中的文件 MSDN 如需詳細的錯誤說明。</span><span class="sxs-lookup"><span data-stu-id="58a19-147">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-148">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58a19-148">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58a19-149">如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-149">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-150">下列程式碼範例示範如何建立執行個體<xref:System.Net.Sockets.TcpClient>類別使用主機名稱和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-150">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58a19-151">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-151">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58a19-152">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-152">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="58a19-153">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-153">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.Sockets.TcpClient.#ctor" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.TcpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58a19-154">Gets or set a value that indicates whether a connection has been made.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-154">Gets or set a value that indicates whether a connection has been made.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58a19-155">如果已經建立連接，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-155">
              <see langword="true" /> if the connection has been made; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-156">類別衍生自<xref:System.Net.Sockets.TcpClient>可以使用這個屬性來判斷是否已成功連線嘗試。</span><span class="sxs-lookup"><span data-stu-id="58a19-156">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to determine if a connection attempt has succeeded.</span></span> <span data-ttu-id="58a19-157">不會監視的進行中的連接狀態<xref:System.Net.Sockets.TcpClient>。</span><span class="sxs-lookup"><span data-stu-id="58a19-157">It does not monitor the ongoing connection state of <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="58a19-158">如果遠端主機關閉的連接，<xref:System.Net.Sockets.TcpClient.Active%2A>將不會更新。</span><span class="sxs-lookup"><span data-stu-id="58a19-158">If the remote host closes the connection, <xref:System.Net.Sockets.TcpClient.Active%2A> will not be updated.</span></span> <span data-ttu-id="58a19-159">如果您衍生自<xref:System.Net.Sockets.TcpClient>，需要注意的連接狀態，而使用<xref:System.Net.Sockets.Socket.Connected%2A>屬性<xref:System.Net.Sockets.Socket>傳回<xref:System.Net.Sockets.TcpClient.Client%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-159">If you are deriving from <xref:System.Net.Sockets.TcpClient> and require closer attention to the connection state, use the <xref:System.Net.Sockets.Socket.Connected%2A> property of the <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpClient.Client%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.Connected" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.TcpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58a19-160">Gets the amount of data that has been received from the network and is available to be read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-160">Gets the amount of data that has been received from the network and is available to be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58a19-161">從網路收到的和可供讀取的資料位元組數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-161">The number of bytes of data received from the network and available to be read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-162"><xref:System.Net.Sockets.TcpClient.Available%2A> 是一個方式來判斷資料是否會排入佇列進行讀取。</span><span class="sxs-lookup"><span data-stu-id="58a19-162"><xref:System.Net.Sockets.TcpClient.Available%2A> is a way to determine whether data is queued for reading.</span></span> <span data-ttu-id="58a19-163">如果資料是提供，呼叫<xref:System.Net.Sockets.NetworkStream.Read%2A>取得的資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-163">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="58a19-164">可用的資料時的資料總量排入佇列進行讀取的網路緩衝區中。</span><span class="sxs-lookup"><span data-stu-id="58a19-164">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="58a19-165">如果沒有資料會排入佇列中的網路緩衝區，<xref:System.Net.Sockets.TcpClient.Available%2A>傳回 0。</span><span class="sxs-lookup"><span data-stu-id="58a19-165">If no data is queued in the network buffer, <xref:System.Net.Sockets.TcpClient.Available%2A> returns 0.</span></span>  
  
 <span data-ttu-id="58a19-166">如果遠端主機關機或關閉連接，<xref:System.Net.Sockets.TcpClient.Available%2A>可能會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="58a19-166">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.TcpClient.Available%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="58a19-167">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-167">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58a19-168">取得此程式碼之後，您可以參閱 Windows Sockets 第 2 版 API 錯誤程式碼中的文件位於 MSDN library [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)如需詳細的錯誤說明。</span><span class="sxs-lookup"><span data-stu-id="58a19-168">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-169">下列程式碼範例示範使用<xref:System.Net.Sockets.TcpClient.Available%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58a19-169">The following code example shows the use of the <xref:System.Net.Sockets.TcpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="58a19-170">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-170">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="58a19-171">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-171">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58a19-172">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-172">Begins an asynchronous request for a remote host connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (address, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="58a19-173">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-173">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="58a19-174">The port number of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-174">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="58a19-175">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-175">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="58a19-176">A user-defined object that contains information about the connect operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-176">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="58a19-177">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-177">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58a19-178">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-178">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="58a19-179">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-179">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58a19-180">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-180">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-181">非同步<xref:System.Net.Sockets.TcpClient.BeginConnect%2A>作業必須完成呼叫<xref:System.Net.Sockets.TcpClient.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-181">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="58a19-182">一般而言，方法由叫用`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="58a19-182">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="58a19-183">這個方法不會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="58a19-183">This method does not block until the operation completes.</span></span> <span data-ttu-id="58a19-184">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Sockets.TcpClient.Connect%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="58a19-184">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="58a19-185">如需使用非同步程式設計模型的詳細資訊，請參閱[呼叫同步方法以非同步方式](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-185">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-186">下列程式碼範例會建立<xref:System.Net.Sockets.TcpClient>並連接至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="58a19-186">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58a19-187">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-187">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="58a19-188">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-188">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="58a19-189">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-189">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="58a19-190">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-190">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58a19-191">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-191">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (addresses, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="58a19-192">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-192">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="58a19-193">The port number of the remote hosts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-193">The port number of the remote hosts.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="58a19-194">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-194">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="58a19-195">A user-defined object that contains information about the connect operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-195">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="58a19-196">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-196">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58a19-197">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-197">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="58a19-198">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-198">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58a19-199">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-199">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-200">非同步<xref:System.Net.Sockets.TcpClient.BeginConnect%2A>作業必須完成呼叫<xref:System.Net.Sockets.TcpClient.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-200">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="58a19-201">一般而言，方法由叫用`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="58a19-201">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="58a19-202">這個方法不會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="58a19-202">This method does not block until the operation completes.</span></span> <span data-ttu-id="58a19-203">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Sockets.TcpClient.Connect%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="58a19-203">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="58a19-204">如需使用非同步程式設計模型的詳細資訊，請參閱[呼叫同步方法以非同步方式](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-204">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="58a19-205">這個方法通常用來呼叫之後立即<xref:System.Net.Dns.BeginGetHostAddresses%2A>方法，可傳回多個 IP 位址的單一主機。</span><span class="sxs-lookup"><span data-stu-id="58a19-205">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-206">下列程式碼範例會建立<xref:System.Net.Sockets.TcpClient>並連接至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="58a19-206">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58a19-207">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-207">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="58a19-208">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-208">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="58a19-209">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-209">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="58a19-210">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-210">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58a19-211">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-211">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (host, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="58a19-212">The name of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-212">The name of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="58a19-213">The port number of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-213">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="58a19-214">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-214">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="58a19-215">A user-defined object that contains information about the connect operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-215">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="58a19-216">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-216">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58a19-217">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-217">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="58a19-218">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-218">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58a19-219">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-219">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-220">非同步<xref:System.Net.Sockets.TcpClient.BeginConnect%2A>作業必須完成呼叫<xref:System.Net.Sockets.TcpClient.EndConnect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-220">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="58a19-221">一般而言，方法由叫用`asyncCallback`委派。</span><span class="sxs-lookup"><span data-stu-id="58a19-221">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="58a19-222">這個方法不會封鎖直到作業完成為止。</span><span class="sxs-lookup"><span data-stu-id="58a19-222">This method does not block until the operation completes.</span></span> <span data-ttu-id="58a19-223">若要封鎖直到作業完成為止，使用其中一種<xref:System.Net.Sockets.TcpClient.Connect%2A>方法多載。</span><span class="sxs-lookup"><span data-stu-id="58a19-223">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="58a19-224">如需使用非同步程式設計模型的詳細資訊，請參閱[呼叫同步方法以非同步方式](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-224">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-225">下列程式碼範例會建立<xref:System.Net.Sockets.TcpClient>並連接至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="58a19-225">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58a19-226">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-226">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="58a19-227">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-227">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="58a19-228">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-228">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="58a19-229">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-229">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58a19-230">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-230">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.TcpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58a19-231">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-231">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58a19-232">基礎網路 <see cref="T:System.Net.Sockets.Socket" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-232">The underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-233"><xref:System.Net.Sockets.TcpClient> 建立<xref:System.Net.Sockets.Socket>來傳送和接收資料透過網路。</span><span class="sxs-lookup"><span data-stu-id="58a19-233"><xref:System.Net.Sockets.TcpClient> creates a <xref:System.Net.Sockets.Socket> to send and receive data over a network.</span></span> <span data-ttu-id="58a19-234">類別衍生自<xref:System.Net.Sockets.TcpClient>可以使用這個屬性來取得或設定此<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58a19-234">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="58a19-235">使用基礎<xref:System.Net.Sockets.Socket>從傳回<xref:System.Net.Sockets.TcpClient.Client%2A>如果您需要存取超過其<xref:System.Net.Sockets.TcpClient>提供。</span><span class="sxs-lookup"><span data-stu-id="58a19-235">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.TcpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.TcpClient> provides.</span></span> <span data-ttu-id="58a19-236">您也可以使用<xref:System.Net.Sockets.TcpClient.Client%2A>設基礎<xref:System.Net.Sockets.Socket>至現有<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58a19-236">You can also use <xref:System.Net.Sockets.TcpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="58a19-237">這可能是很有用，如果您想要充分利用的簡易性<xref:System.Net.Sockets.TcpClient>使用預先存在<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58a19-237">This might be useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.TcpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-238">下列程式碼範例示範如何使用<xref:System.Net.Sockets.TcpClient.Client%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58a19-238">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpClient.Client%2A> property.</span></span> <span data-ttu-id="58a19-239">在此範例中，接收緩衝區的大小基礎<xref:System.Net.Sockets.Socket>變更。</span><span class="sxs-lookup"><span data-stu-id="58a19-239">In this example, the receive buffer size of the underlying <xref:System.Net.Sockets.Socket> is changed.</span></span>  
  
 [!code-csharp[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="tcpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="58a19-240">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-240">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-241"><xref:System.Net.Sockets.TcpClient.Close%2A>方法標示為已處置的執行個體與要求相關聯<xref:System.Net.Sockets.Socket>關閉 TCP 連線。</span><span class="sxs-lookup"><span data-stu-id="58a19-241">The <xref:System.Net.Sockets.TcpClient.Close%2A> method marks the instance as disposed and requests that the associated <xref:System.Net.Sockets.Socket> close the TCP connection.</span></span> <span data-ttu-id="58a19-242">根據<xref:System.Net.Sockets.TcpClient.LingerState%2A>屬性，TCP 連線可能會維持開啟後一些時間<xref:System.Net.Sockets.TcpClient.Close%2A>呼叫方法時，要傳送的資料會保留。</span><span class="sxs-lookup"><span data-stu-id="58a19-242">Based on the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property, the TCP connection may stay open for some time after the <xref:System.Net.Sockets.TcpClient.Close%2A> method is called when data remains to be sent.</span></span> <span data-ttu-id="58a19-243">不沒有提供 「 基礎連接完成後關閉任何通知。</span><span class="sxs-lookup"><span data-stu-id="58a19-243">There is no notification provided when the underlying connection has completed closing.</span></span>  
  
 <span data-ttu-id="58a19-244">呼叫這個方法最終會導致相關聯的關閉<xref:System.Net.Sockets.Socket>和也會關閉相關聯<xref:System.Net.Sockets.NetworkStream>用來傳送和接收資料，如果建立一個。</span><span class="sxs-lookup"><span data-stu-id="58a19-244">Calling this method will eventually result in the close of the associated <xref:System.Net.Sockets.Socket> and will also close the associated <xref:System.Net.Sockets.NetworkStream> that is used to send and receive data if one was created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-245">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58a19-245">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58a19-246">如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-246">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-247">下列程式碼範例示範如何關閉<xref:System.Net.Sockets.TcpClient>藉由呼叫<xref:System.Net.Sockets.TcpClient.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-247">The following code example demonstrates closing a <xref:System.Net.Sockets.TcpClient> by calling the <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[NCLTCPClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLTcpClientSync/CPP/tcpclient.cpp#1)]
 [!code-csharp[NCLTCPClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58a19-248">Connects the client to a remote TCP host using the specified host name and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-248">Connects the client to a remote TCP host using the specified host name and port number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="tcpClient.Connect remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="58a19-249">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-249">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58a19-250">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-250">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-251">呼叫這個方法來建立指定的同步遠端主機連接<xref:System.Net.IPEndPoint>。</span><span class="sxs-lookup"><span data-stu-id="58a19-251">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="58a19-252">之前先呼叫<xref:System.Net.Sockets.TcpClient.Connect%2A>您必須建立的執行個體<xref:System.Net.IPEndPoint>類別使用的 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-252">Before you call <xref:System.Net.Sockets.TcpClient.Connect%2A> you must create an instance of the <xref:System.Net.IPEndPoint> class using an IP address and a port number.</span></span> <span data-ttu-id="58a19-253">使用此<xref:System.Net.IPEndPoint>為`remoteEP`參數。</span><span class="sxs-lookup"><span data-stu-id="58a19-253">Use this <xref:System.Net.IPEndPoint> as the `remoteEP` parameter.</span></span> <span data-ttu-id="58a19-254"><xref:System.Net.Sockets.TcpClient.Connect%2A>方法將會封鎖，直到連接或失敗為止。</span><span class="sxs-lookup"><span data-stu-id="58a19-254">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="58a19-255">連接的遠端主機之後, 使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法，以取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58a19-255">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58a19-256">使用此<xref:System.Net.Sockets.NetworkStream>來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-256">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-257">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-257">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58a19-258">取得這個程式碼之後，您可以參考 Windows Sockets 第 2 版 API 錯誤的程式碼中的文件 MSDN 如需詳細的錯誤說明。</span><span class="sxs-lookup"><span data-stu-id="58a19-258">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-259">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58a19-259">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58a19-260">如需詳細資訊，請參閱[.NET Framework 中的網路追蹤](~/docs/framework/network-programming/network-tracing.md)</span><span class="sxs-lookup"><span data-stu-id="58a19-260">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-261">下列程式碼範例使用<xref:System.Net.IPEndPoint>與遠端主機連接。</span><span class="sxs-lookup"><span data-stu-id="58a19-261">The following code example uses an <xref:System.Net.IPEndPoint> to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58a19-262">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-262">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="58a19-263">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-263">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="58a19-264">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-264">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="tcpClient.Connect (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="58a19-265">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-265">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="58a19-266">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-266">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58a19-267">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-267">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-268">呼叫這個方法來建立指定的同步遠端主機連接<xref:System.Net.IPAddress>和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-268">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number.</span></span> <span data-ttu-id="58a19-269"><xref:System.Net.Sockets.TcpClient.Connect%2A>方法將會封鎖，直到連接或失敗為止。</span><span class="sxs-lookup"><span data-stu-id="58a19-269">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="58a19-270">連接的遠端主機之後, 使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法，以取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58a19-270">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58a19-271">使用此<xref:System.Net.Sockets.NetworkStream>來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-271">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-272">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-272">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58a19-273">取得這個程式碼之後，您可以參考 Windows Sockets 第 2 版 API 錯誤的程式碼中的文件 MSDN 如需詳細的錯誤說明。</span><span class="sxs-lookup"><span data-stu-id="58a19-273">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-274">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58a19-274">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58a19-275">如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-275">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-276">下列程式碼範例會使用與遠端主機連接的 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-276">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58a19-277">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-277">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58a19-278">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-278">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="58a19-279">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-279">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="58a19-280">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-280">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] ipAddresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] ipAddresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (ipAddresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ ipAddresses, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress[] * int -&gt; unit" Usage="tcpClient.Connect (ipAddresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ipAddresses">
          <span data-ttu-id="58a19-281">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-281">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="58a19-282">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-282">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58a19-283">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-283">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-284">這個方法通常用來呼叫之後立即<xref:System.Net.Dns.BeginGetHostAddresses%2A>方法，可傳回多個 IP 位址的單一主機。</span><span class="sxs-lookup"><span data-stu-id="58a19-284">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="58a19-285">呼叫<xref:System.Net.Sockets.TcpClient.Connect%2A>方法，以建立同步的遠端主機連接到指定的陣列的主機<xref:System.Net.IPAddress>項目和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-285">Call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number.</span></span> <span data-ttu-id="58a19-286"><xref:System.Net.Sockets.TcpClient.Connect%2A>方法將會封鎖，直到連接或失敗為止。</span><span class="sxs-lookup"><span data-stu-id="58a19-286">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="58a19-287">連接的遠端主機之後, 使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法，以取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58a19-287">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58a19-288">使用此<xref:System.Net.Sockets.NetworkStream>來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-288">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-289">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-289">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58a19-290">取得此程式碼之後，您可以參閱 Windows Sockets 第 2 版 API 錯誤程式碼中的文件位於 MSDN library [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)如需詳細的錯誤說明。</span><span class="sxs-lookup"><span data-stu-id="58a19-290">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-291">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58a19-291">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58a19-292">如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-292">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-293">下列程式碼範例會使用與遠端主機連接的 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-293">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#8)]
 [!code-csharp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58a19-294">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-294">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58a19-295">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-295">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="58a19-296">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-296">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="58a19-297">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-297">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="58a19-298">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-298">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58a19-299">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-299">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="tcpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="58a19-300">The DNS name of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-300">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="58a19-301">The port number of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-301">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58a19-302">Connects the client to the specified port on the specified host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-302">Connects the client to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-303">呼叫這個方法來建立同步的遠端主機連線到指定的主機名稱和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-303">Call this method to establish a synchronous remote host connection to the specified host name and port number.</span></span> <span data-ttu-id="58a19-304"><xref:System.Net.Sockets.TcpClient.Connect%2A>方法將會封鎖，直到連接或失敗為止。</span><span class="sxs-lookup"><span data-stu-id="58a19-304">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="58a19-305">連接的遠端主機之後, 使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法，以取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58a19-305">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58a19-306">使用此<xref:System.Net.Sockets.NetworkStream>來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-306">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="58a19-307">如果已啟用 IPv6 和<xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29>呼叫方法來連線到主機解析為這兩個 IPv6 和 IPv4 位址，來嘗試連接到 IPv6 位址將會先的 IPv4 位址。</span><span class="sxs-lookup"><span data-stu-id="58a19-307">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="58a19-308">這可能會有延遲的時間來建立連接，如果主機並未接聽 IPv6 位址的效果。</span><span class="sxs-lookup"><span data-stu-id="58a19-308">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-309">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-309">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58a19-310">取得這個程式碼之後，您可以參考 Windows Sockets 第 2 版 API 錯誤的程式碼中的文件 MSDN 如需詳細的錯誤說明。</span><span class="sxs-lookup"><span data-stu-id="58a19-310">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-311">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58a19-311">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58a19-312">如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-312">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-313">下列程式碼範例使用的主機名稱和連接埠編號來與遠端主機連接。</span><span class="sxs-lookup"><span data-stu-id="58a19-313">The following code example uses the host name and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58a19-314">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-314">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58a19-315">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-315">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="58a19-316">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-316">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="58a19-317">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-317">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="58a19-318">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-318">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (address As IPAddress, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="58a19-319">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-319">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="58a19-320">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-320">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58a19-321">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-321">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58a19-322">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-322">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-323">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="58a19-323">This operation will not block.</span></span> <span data-ttu-id="58a19-324">傳回的傳回<xref:System.Threading.Tasks.Task>TCP 連線建立之後，物件會完成。</span><span class="sxs-lookup"><span data-stu-id="58a19-324">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="58a19-325">這個方法不在連線要求正在進行中時封鎖呼叫執行緒。</span><span class="sxs-lookup"><span data-stu-id="58a19-325">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="58a19-326">呼叫這個方法來建立指定的同步遠端主機連接<xref:System.Net.IPAddress>和連接埠號碼，以非同步作業。</span><span class="sxs-lookup"><span data-stu-id="58a19-326">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number as an asynchronous operation.</span></span> <span data-ttu-id="58a19-327">連接的遠端主機之後, 使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法，以取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58a19-327">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58a19-328">使用此<xref:System.Net.Sockets.NetworkStream>來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-328">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-329">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-329">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58a19-330">取得這個程式碼之後，您可以參考 Windows Sockets 第 2 版 API 錯誤的程式碼中的文件 MSDN 如需詳細的錯誤說明。</span><span class="sxs-lookup"><span data-stu-id="58a19-330">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-331">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58a19-331">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58a19-332">如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-332">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58a19-333">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-333">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58a19-334">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-334">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="58a19-335">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-335">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="58a19-336">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-336">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (addresses As IPAddress(), port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress[] * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (addresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="58a19-337">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-337">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="58a19-338">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-338">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58a19-339">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-339">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58a19-340">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-340">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-341">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="58a19-341">This operation will not block.</span></span> <span data-ttu-id="58a19-342">傳回的傳回<xref:System.Threading.Tasks.Task>TCP 連線建立之後，物件會完成。</span><span class="sxs-lookup"><span data-stu-id="58a19-342">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="58a19-343">這個方法不在連線要求正在進行中時封鎖呼叫執行緒。</span><span class="sxs-lookup"><span data-stu-id="58a19-343">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="58a19-344">這個方法通常用來呼叫之後立即<xref:System.Net.Dns.BeginGetHostAddresses%2A>方法，可傳回多個 IP 位址的單一主機。</span><span class="sxs-lookup"><span data-stu-id="58a19-344">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="58a19-345">呼叫這個方法來建立同步的遠端主機連線到指定的陣列的主機<xref:System.Net.IPAddress>項目和連接埠號碼，以非同步作業。</span><span class="sxs-lookup"><span data-stu-id="58a19-345">Call this method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number as an asynchronous operation.</span></span> <span data-ttu-id="58a19-346">連接的遠端主機之後, 使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法，以取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58a19-346">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58a19-347">使用此<xref:System.Net.Sockets.NetworkStream>來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-347">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-348">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-348">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58a19-349">取得此程式碼之後，您可以參閱 Windows Sockets 第 2 版 API 錯誤程式碼中的文件位於 MSDN library [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)如需詳細的錯誤說明。</span><span class="sxs-lookup"><span data-stu-id="58a19-349">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-350">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58a19-350">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58a19-351">如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-351">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58a19-352">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-352">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58a19-353">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-353">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="58a19-354">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-354">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="58a19-355">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-355">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="58a19-356">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-356">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="58a19-357">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-357">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (host As String, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : string * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="58a19-358">The DNS name of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-358">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="58a19-359">The port number of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-359">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58a19-360">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-360">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58a19-361">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-361">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-362">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="58a19-362">This operation will not block.</span></span> <span data-ttu-id="58a19-363">傳回的傳回<xref:System.Threading.Tasks.Task>TCP 連線建立之後，物件會完成。</span><span class="sxs-lookup"><span data-stu-id="58a19-363">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="58a19-364">這個方法不在連線要求正在進行中時封鎖呼叫執行緒。</span><span class="sxs-lookup"><span data-stu-id="58a19-364">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="58a19-365">呼叫這個方法來建立同步的遠端主機連線到指定的主機名稱和連接埠號碼，以非同步作業。</span><span class="sxs-lookup"><span data-stu-id="58a19-365">Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</span></span> <span data-ttu-id="58a19-366">連接的遠端主機之後, 使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法，以取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58a19-366">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58a19-367">使用此<xref:System.Net.Sockets.NetworkStream>來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-367">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="58a19-368">如果已啟用 IPv6 和<xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29>呼叫方法來連線到主機解析為這兩個 IPv6 和 IPv4 位址，來嘗試連接到 IPv6 位址將會先的 IPv4 位址。</span><span class="sxs-lookup"><span data-stu-id="58a19-368">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="58a19-369">這可能會有延遲的時間來建立連接，如果主機並未接聽 IPv6 位址的效果。</span><span class="sxs-lookup"><span data-stu-id="58a19-369">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-370">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-370">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58a19-371">取得這個程式碼之後，您可以參考 Windows Sockets 第 2 版 API 錯誤的程式碼中的文件 MSDN 如需詳細的錯誤說明。</span><span class="sxs-lookup"><span data-stu-id="58a19-371">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-372">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58a19-372">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58a19-373">如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-373">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58a19-374">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-374">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="58a19-375">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-375">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="58a19-376">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-376">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="58a19-377">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-377">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Connected : bool" Usage="System.Net.Sockets.TcpClient.Connected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58a19-378">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-378">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58a19-379">如果最近一次的作業是將 <see cref="P:System.Net.Sockets.TcpClient.Client" /> 通訊端連接至遠端資源，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-379">
              <see langword="true" /> if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-380"><xref:System.Net.Sockets.TcpClient.Connected%2A>屬性取得的連接狀態<xref:System.Net.Sockets.TcpClient.Client%2A>最後一次的 I/O 作業的通訊端。</span><span class="sxs-lookup"><span data-stu-id="58a19-380">The <xref:System.Net.Sockets.TcpClient.Connected%2A> property gets the connection state of the <xref:System.Net.Sockets.TcpClient.Client%2A> socket as of the last I/O operation.</span></span> <span data-ttu-id="58a19-381">當它傳回`false`、<xref:System.Net.Sockets.TcpClient.Client%2A>通訊端可能永遠不會連線，或已中斷連線。</span><span class="sxs-lookup"><span data-stu-id="58a19-381">When it returns `false`, the <xref:System.Net.Sockets.TcpClient.Client%2A> socket was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="58a19-382">因為<xref:System.Net.Sockets.TcpClient.Connected%2A>屬性只會反映最新的作業連接的狀態，您應該嘗試傳送或接收訊息來判斷目前的狀態。</span><span class="sxs-lookup"><span data-stu-id="58a19-382">Because the <xref:System.Net.Sockets.TcpClient.Connected%2A> property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</span></span> <span data-ttu-id="58a19-383">這個屬性將訊息傳送失敗之後，不會再傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="58a19-383">After the message send fails, this property no longer returns `true`.</span></span> <span data-ttu-id="58a19-384">請注意，此行為是經過設計。</span><span class="sxs-lookup"><span data-stu-id="58a19-384">Note that this behavior is by design.</span></span> <span data-ttu-id="58a19-385">您無法可靠地測試連接的狀態，因為測試與傳送/接收之間的時間，連線可能已遺失。</span><span class="sxs-lookup"><span data-stu-id="58a19-385">You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</span></span> <span data-ttu-id="58a19-386">通訊端連線，並依正常程序處理傳輸失敗的應該假設您的程式碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-386">Your code should assume the socket is connected, and gracefully handle failed transmissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-387">下列程式碼範例會連接到遠端端點，然後驗證該連接。</span><span class="sxs-lookup"><span data-stu-id="58a19-387">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="tcpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="58a19-388">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-388">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="tcpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="58a19-389">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-389">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58a19-390">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-390">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-391">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-391">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="58a19-392">`Dispose()` 這個方法會叫用`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="58a19-392">`Dispose()` invokes this method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="58a19-393"><xref:System.Object.Finalize%2A> 這個方法會叫用`disposing`設`false`。</span><span class="sxs-lookup"><span data-stu-id="58a19-393"><xref:System.Object.Finalize%2A> invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="58a19-394">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Net.Sockets.TcpClient> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="58a19-394">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.TcpClient> references.</span></span> <span data-ttu-id="58a19-395">其做法是叫用`Dispose()`每個參考物件的方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-395">It does this by invoking the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-396">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58a19-396">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58a19-397">如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-397">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="58a19-398">
            <para>
              <see langword="Dispose" /> 可以被其他物件呼叫多次。覆寫 <see langword="Dispose(Boolean)" /> 時，請小心不要參考到先前已在對 <see langword="Dispose" /> 的早期呼叫中被處置 (Dispose) 的物件。如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 [實作 Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)。如需有關<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱 [清理 Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) 上和 [覆寫 Finalize 方法] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-398">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndConnect : IAsyncResult -&gt; unit" Usage="tcpClient.EndConnect asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="58a19-399">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-399">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="58a19-400">Ends a pending asynchronous connection attempt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-400">Ends a pending asynchronous connection attempt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-401">這個方法會封鎖直到作業完成。</span><span class="sxs-lookup"><span data-stu-id="58a19-401">This method blocks until the operation is complete.</span></span> <span data-ttu-id="58a19-402">若要以同步方式執行這項作業，使用<xref:System.Net.Sockets.TcpClient.Connect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-402">To perform this operation synchronously, use a <xref:System.Net.Sockets.TcpClient.Connect%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-403">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-403">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58a19-404">取得此程式碼之後，您可以參閱 Windows Sockets 第 2 版 API 錯誤程式碼中的文件位於 MSDN library [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)如需詳細的錯誤說明。</span><span class="sxs-lookup"><span data-stu-id="58a19-404">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-405">下列程式碼範例會結束非同步的連接嘗試。</span><span class="sxs-lookup"><span data-stu-id="58a19-405">The following code example ends the asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="58a19-406">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-406">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="58a19-407">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-407">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="58a19-408">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-408">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="58a19-409">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-409">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="58a19-410">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-410">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58a19-411">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-411">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58a19-412">如果 <see cref="T:System.Net.Sockets.TcpClient" /> 只允許一個用戶端使用特定通訊埠則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-412">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="58a19-413">若為 Windows Server 2003 和 Windows XP Service Pack 2 (含) 以後版本，則預設值為 <see langword="true" />；若為所有其他版本，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-413">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-414">根據預設，多個用戶端可以使用特定通訊埠。不過，只有其中一個用戶端可以執行網路流量傳送至連接埠的作業。</span><span class="sxs-lookup"><span data-stu-id="58a19-414">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="58a19-415">您可以使用<xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A>防止多個用戶端使用特定通訊埠的屬性。</span><span class="sxs-lookup"><span data-stu-id="58a19-415">You can use the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="58a19-416">基礎通訊端的用戶端連接埠繫結之前，必須設定這個屬性。</span><span class="sxs-lookup"><span data-stu-id="58a19-416">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="58a19-417">如果您呼叫<xref:System.Net.Sockets.TcpClient.Connect%2A>， <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>， <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>，或<xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>用戶端連接埠會繫結為之方法的副作用，您之後無法設定<xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A>屬性</span><span class="sxs-lookup"><span data-stu-id="58a19-417">If you call <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, or <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, the client port is bound as a side effect of the method, and you cannot subsequently set the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-418">下列程式碼範例會建立<xref:System.Net.Sockets.TcpClient>取得和設定的值<xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58a19-418">The following code example creates a <xref:System.Net.Sockets.TcpClient> and gets and sets the value of the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="58a19-419">An error occurred when attempting to access the underlying socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-419">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="58a19-420">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-420">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="58a19-421">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-421">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-422">這個方法會覆寫<xref:System.Object.Finalize%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="58a19-422">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="58a19-423">應用程式程式碼不應該呼叫這個方法。物件的<xref:System.Object.Finalize%2A>方法會自動叫用記憶體回收期間，除非已停用記憶體回收行程的最終處理的呼叫所<xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-423">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="58a19-424"><xref:System.Net.Sockets.TcpClient>類別完成項關閉 TCP 連接，並與相關聯的 managed 的資源全部釋出<xref:System.Net.Sockets.TcpClient>。</span><span class="sxs-lookup"><span data-stu-id="58a19-424">The <xref:System.Net.Sockets.TcpClient> class finalizer closes the TCP connection and releases all managed resources associated with the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="58a19-425">這些資源包含基礎<xref:System.Net.Sockets.Socket>用來連線的遠端主機，而<xref:System.Net.Sockets.NetworkStream>用來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-425">These resources include the underlying <xref:System.Net.Sockets.Socket> used for connecting with the remote host, and the <xref:System.Net.Sockets.NetworkStream> used to send and receive data.</span></span> <span data-ttu-id="58a19-426">完成項不會釋放任何 unmanaged 的資源。</span><span class="sxs-lookup"><span data-stu-id="58a19-426">The finalizer does not release any unmanaged resources.</span></span>  
  
 <span data-ttu-id="58a19-427">如需詳細資訊，請參閱[Finalize 方法和解構函式](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)，[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)，和[覆寫 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span><span class="sxs-lookup"><span data-stu-id="58a19-427">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.NetworkStream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.NetworkStream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As NetworkStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::NetworkStream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.Net.Sockets.NetworkStream" Usage="tcpClient.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.NetworkStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="58a19-428">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-428">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="58a19-429">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-429">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-430"><xref:System.Net.Sockets.TcpClient.GetStream%2A> 傳回<xref:System.Net.Sockets.NetworkStream>可用來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-430"><xref:System.Net.Sockets.TcpClient.GetStream%2A> returns a <xref:System.Net.Sockets.NetworkStream> that you can use to send and receive data.</span></span> <span data-ttu-id="58a19-431"><xref:System.Net.Sockets.NetworkStream>類別繼承自<xref:System.IO.Stream>類別，可提供豐富的方法和屬性可用來協助進行網路通訊的集合。</span><span class="sxs-lookup"><span data-stu-id="58a19-431">The <xref:System.Net.Sockets.NetworkStream> class inherits from the <xref:System.IO.Stream> class, which provides a rich collection of methods and properties used to facilitate network communications.</span></span>  
  
 <span data-ttu-id="58a19-432">您必須呼叫<xref:System.Net.Sockets.TcpClient.Connect%2A>方法第一次，或<xref:System.Net.Sockets.TcpClient.GetStream%2A>方法會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="58a19-432">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method first, or the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="58a19-433">取得後<xref:System.Net.Sockets.NetworkStream>，呼叫<xref:System.Net.Sockets.NetworkStream.Write%2A>將資料傳送至遠端主機的方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-433">After you have obtained the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method to send data to the remote host.</span></span> <span data-ttu-id="58a19-434">呼叫<xref:System.Net.Sockets.NetworkStream.Read%2A>方法，以接收來自遠端主機抵達的資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-434">Call the <xref:System.Net.Sockets.NetworkStream.Read%2A> method to receive data arriving from the remote host.</span></span> <span data-ttu-id="58a19-435">這兩種方法阻擋，直到指定的作業會執行。</span><span class="sxs-lookup"><span data-stu-id="58a19-435">Both of these methods block until the specified operation is performed.</span></span> <span data-ttu-id="58a19-436">您可以避免在讀取作業封鎖藉由檢查<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58a19-436">You can avoid blocking on a read operation by checking the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property.</span></span> <span data-ttu-id="58a19-437">A`true`值表示資料來自遠端主機已送達，而且可供讀取。</span><span class="sxs-lookup"><span data-stu-id="58a19-437">A `true` value means that data has arrived from the remote host and is available for reading.</span></span> <span data-ttu-id="58a19-438">在此情況下，<xref:System.Net.Sockets.NetworkStream.Read%2A>保證立即完成。</span><span class="sxs-lookup"><span data-stu-id="58a19-438">In this case, <xref:System.Net.Sockets.NetworkStream.Read%2A> is guaranteed to complete immediately.</span></span> <span data-ttu-id="58a19-439">如果遠端主機已關閉連線，<xref:System.Net.Sockets.NetworkStream.Read%2A>便會立即傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="58a19-439">If the remote host has shutdown its connection, <xref:System.Net.Sockets.NetworkStream.Read%2A> will immediately return with zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-440">您必須先關閉<xref:System.Net.Sockets.NetworkStream>當您已透過傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-440">You must close the <xref:System.Net.Sockets.NetworkStream> when you are through sending and receiving data.</span></span> <span data-ttu-id="58a19-441">關閉<xref:System.Net.Sockets.TcpClient>不會釋放<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58a19-441">Closing <xref:System.Net.Sockets.TcpClient> does not release the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-442">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>來取得特定的錯誤碼。</span><span class="sxs-lookup"><span data-stu-id="58a19-442">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="58a19-443">取得這個程式碼之後，您可以參考 Windows Sockets 第 2 版 API 錯誤的程式碼中的文件 MSDN 如需詳細的錯誤說明。</span><span class="sxs-lookup"><span data-stu-id="58a19-443">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58a19-444">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="58a19-444">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="58a19-445">如需詳細資訊，請參閱[網路追蹤.NET Framework 中](~/docs/framework/network-programming/network-tracing.md)。</span><span class="sxs-lookup"><span data-stu-id="58a19-445">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-446">下列程式碼範例使用<xref:System.Net.Sockets.TcpClient.GetStream%2A>取得基礎<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58a19-446">The following code example uses <xref:System.Net.Sockets.TcpClient.GetStream%2A> to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58a19-447">取得之後<xref:System.Net.Sockets.NetworkStream>，傳送及接收使用其<xref:System.Net.Sockets.NetworkStream.Write%2A>和<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-447">After obtaining the <xref:System.Net.Sockets.NetworkStream>, it sends and receives using its <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#14)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#14)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="58a19-448">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-448">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="58a19-449">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-449">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LingerState : System.Net.Sockets.LingerOption with get, set" Usage="System.Net.Sockets.TcpClient.LingerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58a19-450">Gets or sets information about the linger state of the associated socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-450">Gets or sets information about the linger state of the associated socket.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58a19-451">
            <see cref="T:System.Net.Sockets.LingerOption" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-451">A <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          </span>
          <span data-ttu-id="58a19-452">根據預設，會停用延遲。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-452">By default, lingering is disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-453"><xref:System.Net.Sockets.TcpClient.LingerState%2A>屬性變更的方式<xref:System.Net.Sockets.Socket.Close%2A>方法的行為。</span><span class="sxs-lookup"><span data-stu-id="58a19-453">The <xref:System.Net.Sockets.TcpClient.LingerState%2A> property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="58a19-454">這個屬性集修改的條件的連線可以來重設 Winsock 時。</span><span class="sxs-lookup"><span data-stu-id="58a19-454">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="58a19-455">連接重設仍可能是根據 IP 通訊協定行為。</span><span class="sxs-lookup"><span data-stu-id="58a19-455">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="58a19-456">這個屬性會控制的呼叫之後，TCP 連接將維持開啟的時間長度<xref:System.Net.Sockets.TcpClient.Close%2A>時仍可傳送資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-456">This property controls the length of time that the TCP connection will remain open after a call to <xref:System.Net.Sockets.TcpClient.Close%2A> when data remains to be sent.</span></span> <span data-ttu-id="58a19-457">當您呼叫<xref:System.Net.Sockets.NetworkStream.Write%2A>方法時，資料會在傳出的網路緩衝區中。</span><span class="sxs-lookup"><span data-stu-id="58a19-457">When you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="58a19-458">這個屬性可以用來確保這些資料會傳送至遠端主機之前<xref:System.Net.Sockets.TcpClient.Close%2A>方法會卸除連接。</span><span class="sxs-lookup"><span data-stu-id="58a19-458">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="58a19-459">若要啟用延遲，請建立<xref:System.Net.Sockets.LingerOption>執行個體包含所需的值，並設定<xref:System.Net.Sockets.TcpClient.LingerState%2A>屬性與這個執行個體。</span><span class="sxs-lookup"><span data-stu-id="58a19-459">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property to this instance.</span></span>  
  
 <span data-ttu-id="58a19-460">下表描述的行為<xref:System.Net.Sockets.TcpClient.Close%2A>的可能值的方法<xref:System.Net.Sockets.LingerOption.Enabled%2A>屬性和<xref:System.Net.Sockets.LingerOption.LingerTime%2A>屬性儲存在<xref:System.Net.Sockets.TcpClient.LingerState%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58a19-460">The following table describes the behavior of the <xref:System.Net.Sockets.TcpClient.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property.</span></span>  
  
|<span data-ttu-id="58a19-461">LingerState.Enabled</span><span class="sxs-lookup"><span data-stu-id="58a19-461">LingerState.Enabled</span></span>|<span data-ttu-id="58a19-462">LingerState.LingerTime</span><span class="sxs-lookup"><span data-stu-id="58a19-462">LingerState.LingerTime</span></span>|<span data-ttu-id="58a19-463">行為</span><span class="sxs-lookup"><span data-stu-id="58a19-463">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="58a19-464">`false` （已停用），預設值</span><span class="sxs-lookup"><span data-stu-id="58a19-464">`false` (disabled), the default value</span></span>|<span data-ttu-id="58a19-465">不適用，在逾時 （預設值）。</span><span class="sxs-lookup"><span data-stu-id="58a19-465">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="58a19-466">嘗試將預設 IP 通訊協定等候逾時到期之前傳送暫止的資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-466">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="58a19-467">`true` （已啟用）</span><span class="sxs-lookup"><span data-stu-id="58a19-467">`true` (enabled)</span></span>|<span data-ttu-id="58a19-468">非零的逾時</span><span class="sxs-lookup"><span data-stu-id="58a19-468">A nonzero time-out</span></span>|<span data-ttu-id="58a19-469">嘗試傳送暫止資料，直到指定的逾時到期，而如果嘗試失敗，則 Winsock 重設連接。</span><span class="sxs-lookup"><span data-stu-id="58a19-469">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="58a19-470">`true` （已啟用）</span><span class="sxs-lookup"><span data-stu-id="58a19-470">`true` (enabled)</span></span>|<span data-ttu-id="58a19-471">零逾時。</span><span class="sxs-lookup"><span data-stu-id="58a19-471">A zero timeout.</span></span>|<span data-ttu-id="58a19-472">會捨棄任何暫止的資料和 Winsock 重設連接。</span><span class="sxs-lookup"><span data-stu-id="58a19-472">Discards any pending data and Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="58a19-473">IP 堆疊計算預設 IP 通訊協定逾時期間，若要使用的連線的來回時間為基礎。</span><span class="sxs-lookup"><span data-stu-id="58a19-473">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="58a19-474">在大部分情況下，堆疊計算的逾時值為更有相關性比其中一個應用程式所定義的。</span><span class="sxs-lookup"><span data-stu-id="58a19-474">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="58a19-475">這是預設行為是通訊端時<xref:System.Net.Sockets.TcpClient.LingerState%2A>屬性未設定。</span><span class="sxs-lookup"><span data-stu-id="58a19-475">This is the default behavior for a socket when the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is not set.</span></span>  
  
 <span data-ttu-id="58a19-476">當<xref:System.Net.Sockets.LingerOption.LingerTime%2A>屬性儲存在<xref:System.Net.Sockets.TcpClient.LingerState%2A>屬性設定大於預設 IP 通訊協定等候逾時，仍將套用的預設 IP 通訊協定逾時，覆寫。</span><span class="sxs-lookup"><span data-stu-id="58a19-476">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-477">下列程式碼範例會設定並取得通訊端的延遲時間。</span><span class="sxs-lookup"><span data-stu-id="58a19-477">The following code example sets and gets the sockets linger time.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#12)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#12)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.LingerOption" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoDelay : bool with get, set" Usage="System.Net.Sockets.TcpClient.NoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58a19-478">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-478">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58a19-479">如果停用延遲，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-479">
              <see langword="true" /> if the delay is disabled, otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="58a19-480">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-480">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-481">當<xref:System.Net.Sockets.TcpClient.NoDelay%2A>是`false`、<xref:System.Net.Sockets.TcpClient>不會傳送封包透過網路直到它已經收集大量的連出的資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-481">When <xref:System.Net.Sockets.TcpClient.NoDelay%2A> is `false`, a <xref:System.Net.Sockets.TcpClient> does not send a packet over the network until it has collected a significant amount of outgoing data.</span></span> <span data-ttu-id="58a19-482">大量的 TCP 區段中的額外負荷，傳送小量的資料沒有效率。</span><span class="sxs-lookup"><span data-stu-id="58a19-482">Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</span></span> <span data-ttu-id="58a19-483">不過，還存在的情況下，您要傳送非常少量的資料或預期從您傳送的每個封包的立即回應。</span><span class="sxs-lookup"><span data-stu-id="58a19-483">However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</span></span> <span data-ttu-id="58a19-484">您應該衡量網路效率和應用程式需求的相對重要性。</span><span class="sxs-lookup"><span data-stu-id="58a19-484">Your decision should weigh the relative importance of network efficiency versus application requirements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-485">下列程式碼範例會停用延遲。</span><span class="sxs-lookup"><span data-stu-id="58a19-485">The following code example disables the delay.</span></span> <span data-ttu-id="58a19-486">接著它會檢查值<xref:System.Net.Sockets.TcpClient.NoDelay%2A>若要確認已成功設定的屬性。</span><span class="sxs-lookup"><span data-stu-id="58a19-486">It then checks the value of <xref:System.Net.Sockets.TcpClient.NoDelay%2A> to verify that the property was successfully set.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58a19-487">Gets or sets the size of the receive buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-487">Gets or sets the size of the receive buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58a19-488">接收緩衝區的大小，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-488">The size of the receive buffer, in bytes.</span>
          </span>
          <span data-ttu-id="58a19-489">預設值為 8192 位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-489">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-490"><xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A>屬性取得或設定您預期會針對每個讀取作業，接收緩衝區中儲存的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="58a19-490">The <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</span></span> <span data-ttu-id="58a19-491">這個屬性實際上則會配置用來接收內送資料的網路緩衝區空間操作。</span><span class="sxs-lookup"><span data-stu-id="58a19-491">This property actually manipulates the network buffer space allocated for receiving incoming data.</span></span>  
  
 <span data-ttu-id="58a19-492">您的網路緩衝區應該要有至少以確保，當您呼叫的所需的資料都是可用的應用程式緩衝區一樣大<xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-492">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="58a19-493">使用<xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A>屬性來設定此大小。</span><span class="sxs-lookup"><span data-stu-id="58a19-493">Use the <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="58a19-494">如果您的應用程式將會收到大量資料，您應該將<xref:System.Net.Sockets.NetworkStream.Read%2A>方法非常大的應用程式緩衝區。</span><span class="sxs-lookup"><span data-stu-id="58a19-494">If your application will be receiving bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Read%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="58a19-495">如果網路緩衝區的資料量小於您要求中<xref:System.Net.Sockets.NetworkStream.Read%2A>方法，將無法擷取所需的一個讀取作業中的資料數量。</span><span class="sxs-lookup"><span data-stu-id="58a19-495">If the network buffer is smaller than the amount of data you request in the <xref:System.Net.Sockets.NetworkStream.Read%2A> method, you will not be able to retrieve the desired amount of data in one read operation.</span></span> <span data-ttu-id="58a19-496">這樣會導致其他呼叫的額外負荷<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-496">This incurs the overhead of additional calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-497">下列程式碼範例會設定，並取得接收緩衝區的大小。</span><span class="sxs-lookup"><span data-stu-id="58a19-497">The following code example sets and gets the receive buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="58a19-498">An error occurred when setting the buffer size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-498">An error occurred when setting the buffer size.</span>
          </span>
          <span data-ttu-id="58a19-499">-or-  In .NET Compact Framework applications, you cannot set this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-499">-or-  In .NET Compact Framework applications, you cannot set this property.</span>
          </span>
          <span data-ttu-id="58a19-500">For a workaround, see the Platform Note in Remarks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-500">For a workaround, see the Platform Note in Remarks.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.TcpClient.SendBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58a19-501">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-501">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58a19-502">連接的逾時值，以毫秒為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-502">The time-out value of the connection in milliseconds.</span>
          </span>
          <span data-ttu-id="58a19-503">預設值為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-503">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-504"><xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A>屬性決定的時間量，<xref:System.Net.Sockets.NetworkStream.Read%2A>方法將會封鎖，直到它能接收資料。</span><span class="sxs-lookup"><span data-stu-id="58a19-504">The <xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.NetworkStream.Read%2A> method will block until it is able to receive data.</span></span> <span data-ttu-id="58a19-505">此時間的測量以毫秒為單位。</span><span class="sxs-lookup"><span data-stu-id="58a19-505">This time is measured in milliseconds.</span></span> <span data-ttu-id="58a19-506">如果在逾時到期前<xref:System.Net.Sockets.NetworkStream.Read%2A>成功完成，<xref:System.Net.Sockets.TcpClient>會擲回<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="58a19-506">If the time-out expires before <xref:System.Net.Sockets.NetworkStream.Read%2A> successfully completes, <xref:System.Net.Sockets.TcpClient> throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="58a19-507">根據預設沒有逾時。</span><span class="sxs-lookup"><span data-stu-id="58a19-507">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-508">下列程式碼範例會設定並取得接收逾時。</span><span class="sxs-lookup"><span data-stu-id="58a19-508">The following code example sets and gets the receive time out.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.SendTimeout" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58a19-509">Gets or sets the size of the send buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-509">Gets or sets the size of the send buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58a19-510">傳送緩衝區的大小，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-510">The size of the send buffer, in bytes.</span>
          </span>
          <span data-ttu-id="58a19-511">預設值為 8192 位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-511">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-512"><xref:System.Net.Sockets.TcpClient.SendBufferSize%2A>屬性取得或設定您預期會在每次呼叫中傳送的位元組數目<xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-512">The <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property gets or sets the number of bytes that you are expecting to send in each call to the <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="58a19-513">這個屬性實際操作配置來傳送作業的網路緩衝區空間。</span><span class="sxs-lookup"><span data-stu-id="58a19-513">This property actually manipulates the network buffer space allocated for send operation.</span></span>  
  
 <span data-ttu-id="58a19-514">您的網路緩衝區應該至少與您的應用程式緩衝區，以確保所需的資料會儲存並傳送一個作業中一樣大。</span><span class="sxs-lookup"><span data-stu-id="58a19-514">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</span></span> <span data-ttu-id="58a19-515">使用<xref:System.Net.Sockets.TcpClient.SendBufferSize%2A>屬性來設定此大小。</span><span class="sxs-lookup"><span data-stu-id="58a19-515">Use the <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="58a19-516">如果您的應用程式將用來傳送大量資料，您應該將<xref:System.Net.Sockets.NetworkStream.Write%2A>方法非常大的應用程式緩衝區。</span><span class="sxs-lookup"><span data-stu-id="58a19-516">If your application will be sending bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Write%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="58a19-517">如果網路緩衝區的資料量小於提供<xref:System.Net.Sockets.NetworkStream.Write%2A>數個網路的傳送您對每個呼叫將會執行作業的方法，<xref:System.Net.Sockets.NetworkStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58a19-517">If the network buffer is smaller than the amount of data you provide the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, several network send operations will be performed for every call you make to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="58a19-518">您可以達到較大的資料輸送量，方法是確保您的網路緩衝區為至少和應用程式緩衝區一樣大。</span><span class="sxs-lookup"><span data-stu-id="58a19-518">You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-519">下列程式碼範例會設定，並取得傳送緩衝區大小。</span><span class="sxs-lookup"><span data-stu-id="58a19-519">The following code example sets and gets the send buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="58a19-520">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-520">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="58a19-521">傳送的逾時值，以毫秒為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-521">The send time-out value, in milliseconds.</span>
          </span>
          <span data-ttu-id="58a19-522">預設值為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="58a19-522">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58a19-523"><xref:System.Net.Sockets.TcpClient.SendTimeout%2A>屬性決定的時間量，<xref:System.Net.Sockets.Socket.Send%2A>方法將會封鎖，直到它能成功地傳回。</span><span class="sxs-lookup"><span data-stu-id="58a19-523">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.Socket.Send%2A> method will block until it is able to return successfully.</span></span> <span data-ttu-id="58a19-524">此時間的測量以毫秒為單位。</span><span class="sxs-lookup"><span data-stu-id="58a19-524">This time is measured in milliseconds.</span></span>  
  
 <span data-ttu-id="58a19-525">在您呼叫後<xref:System.Net.Sockets.NetworkStream.Write%2A>方法時，基礎<xref:System.Net.Sockets.Socket>傳回實際傳送至主機的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="58a19-525">After you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, the underlying <xref:System.Net.Sockets.Socket> returns the number of bytes actually sent to the host.</span></span> <span data-ttu-id="58a19-526"><xref:System.Net.Sockets.TcpClient.SendTimeout%2A>屬性決定的時間量<xref:System.Net.Sockets.TcpClient>接收的位元組數傳回之前會先等待。</span><span class="sxs-lookup"><span data-stu-id="58a19-526">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time a <xref:System.Net.Sockets.TcpClient> will wait before receiving the number of bytes returned.</span></span> <span data-ttu-id="58a19-527">如果在逾時到期前<xref:System.Net.Sockets.Socket.Send%2A>方法已成功完成，<xref:System.Net.Sockets.TcpClient>將會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="58a19-527">If the time-out expires before the <xref:System.Net.Sockets.Socket.Send%2A> method successfully completes, <xref:System.Net.Sockets.TcpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="58a19-528">根據預設沒有逾時。</span><span class="sxs-lookup"><span data-stu-id="58a19-528">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58a19-529">下列程式碼範例會設定並取得<xref:System.Net.Sockets.TcpClient.SendTimeout%2A>值。</span><span class="sxs-lookup"><span data-stu-id="58a19-529">The following code example sets and gets the <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> value.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>