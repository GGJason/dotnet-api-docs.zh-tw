<Type Name="LingerOption" FullName="System.Net.Sockets.LingerOption">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa3b5a0c61a16eefd0401f21d8f0736cd2719249" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460722" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LingerOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LingerOption extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.LingerOption" />
  <TypeSignature Language="VB.NET" Value="Public Class LingerOption" />
  <TypeSignature Language="C++ CLI" Value="public ref class LingerOption" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>指定呼叫 <see cref="T:System.Net.Sockets.Socket" /> 或 <see cref="M:System.Net.Sockets.Socket.Close" /> 方法之後，<see cref="M:System.Net.Sockets.TcpClient.Close" /> 是否仍保持連接，以及在資料保持傳送的情況下持續連線的時間長度。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可能仍有資料可用的傳出的網路緩衝區中應用程式呼叫之後<xref:System.Net.Sockets.Socket>或<xref:System.Net.Sockets.TcpClient>方法。 如果您想要指定的時間<xref:System.Net.Sockets.Socket>會嘗試關閉後傳送未傳送的資料，請建立<xref:System.Net.Sockets.LingerOption>與`enable`參數設定為`true`，而`seconds`參數設定為所需的時間量. `seconds`參數用來指出您想要的時間長度<xref:System.Net.Sockets.Socket>來維持連線逾時之前。如果您不想<xref:System.Net.Sockets.Socket>保持連線的任何長度的時間結束後，建立<xref:System.Net.Sockets.LingerOption>執行個體，其`enable`參數設定為`true`和`seconds`參數設定為零。 在此情況下，<xref:System.Net.Sockets.Socket>會立即關閉，而未傳送的資料將會遺失。 一旦建立之後，傳遞<xref:System.Net.Sockets.LingerOption>至<xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=nameWithType>方法。 如果您正在傳送及接收資料與<xref:System.Net.Sockets.TcpClient>，然後設定<xref:System.Net.Sockets.LingerOption>執行個體中<xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType>屬性。  
  
 IP 堆疊計算預設 IP 通訊協定逾時期間，若要使用的連線的來回時間為基礎。 在大部分情況下，堆疊計算的逾時值為更有相關性比其中一個應用程式所定義的。 這是預設行為，如<xref:System.Net.Sockets.Socket>時<xref:System.Net.Sockets.Socket.LingerState%2A>屬性未設定以及<xref:System.Net.Sockets.TcpClient>時<xref:System.Net.Sockets.TcpClient.LingerState%2A>屬性未設定。  
  
   
  
## Examples  
 下列範例會設定先前建立<xref:System.Net.Sockets.Socket>停留一秒之後呼叫<xref:System.Net.Sockets.Socket.Close%2A>方法。  
  
 [!code-cpp[Classic LingerOption Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic LingerOption Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LingerOption Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic LingerOption Example/CS/source.cs#1)]
 [!code-vb[Classic LingerOption Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic LingerOption Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LingerOption (bool enable, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enable, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enable As Boolean, seconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LingerOption(bool enable, int seconds);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enable">
          要在呼叫 <see cref="M:System.Net.Sockets.Socket.Close" /> 方法之後保持連接，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="seconds">秒數，呼叫 <see cref="M:System.Net.Sockets.Socket.Close" /> 方法之後要保持連接的時間。</param>
        <summary>初始化 <see cref="T:System.Net.Sockets.LingerOption" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 可能仍有資料可用的傳出的網路緩衝區中關閉後<xref:System.Net.Sockets.Socket>。 使用`enable`參數來指定您是否想要<xref:System.Net.Sockets.Socket>繼續呼叫 close 方法之後，傳輸未傳送的資料。 使用`seconds`參數，以指定您想要的時間長度<xref:System.Net.Sockets.Socket>嘗試傳送逾時之前的未傳送的資料。如果您指定`true`如`enable`參數以 0 代表`seconds`參數，<xref:System.Net.Sockets.Socket>將嘗試傳送資料，直到傳出的網路緩衝區中沒有資料的左邊。 如果您指定`false`如`enable`參數，<xref:System.Net.Sockets.Socket>會立即關閉，而未傳送的資料將會遺失。  
  
 下表描述的行為上<xref:System.Net.Sockets.Socket.Close%2A?displayProperty=nameWithType>和<xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=nameWithType>方法為基礎的可能值`enable`和`seconds`T:System.Net.Sockets.LingerOption 執行個體時建立，並在中設定的參數<xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=nameWithType>或<xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType>屬性。  
  
|`enable`|`seconds`|行為|  
|--------------|---------------|--------------|  
|`false` （已停用），預設值|不適用，在逾時 （預設值）。|嘗試傳送暫止資料是連線導向的通訊端 (例如 TCP，) 直到預設 IP 通訊協定逾時到期。|  
|`true` （已啟用）|非零的逾時|嘗試傳送暫止資料，直到指定的逾時到期，而如果嘗試失敗，則 Winsock 重設連接。|  
|`true` （已啟用）|零逾時。|會捨棄任何暫止的資料。 連接導向通訊端 (例如 TCP)，Winsock 重設連接。|  
  
 IP 堆疊計算預設 IP 通訊協定逾時期間，若要使用的連線的來回時間為基礎。 在大部分情況下，堆疊計算的逾時值為更有相關性比其中一個應用程式所定義的。 這是預設行為是通訊端時<xref:System.Net.Sockets.Socket.LingerState%2A>屬性未設定。  
  
 當<xref:System.Net.Sockets.LingerOption.LingerTime%2A>屬性儲存在<xref:System.Net.Sockets.Socket.LingerState%2A>屬性設定大於預設 IP 通訊協定等候逾時，仍將套用的預設 IP 通訊協定逾時，覆寫。  
  
   
  
## Examples  
 下列範例會設定先前建立<xref:System.Net.Sockets.Socket>停留一秒之後呼叫<xref:System.Net.Sockets.Socket.Close%2A>方法。  
  
 [!code-cpp[Classic LingerOption Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic LingerOption Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LingerOption Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic LingerOption Example/CS/source.cs#1)]
 [!code-vb[Classic LingerOption Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic LingerOption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.LingerOption.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否要在關閉 <see cref="T:System.Net.Sockets.Socket" /> 之後持續。</summary>
        <value>
          如果 <see cref="T:System.Net.Sockets.Socket" /> 應該在呼叫 <see cref="M:System.Net.Sockets.Socket.Close" /> 之後持續則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用<xref:System.Net.Sockets.LingerOption.Enabled%2A>屬性來判斷是否<xref:System.Net.Sockets.Socket>將 linger 關閉後。 變更此值可`true`或`false`，並將變更傳遞<xref:System.Net.Sockets.LingerOption>至<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法或一組<xref:System.Net.Sockets.TcpClient.LingerState%2A>或<xref:System.Net.Sockets.Socket.LingerState%2A>property.to 停用或啟用延遲。  
  
 下表描述的可能值的行為<xref:System.Net.Sockets.LingerOption.Enabled%2A>屬性和<xref:System.Net.Sockets.LingerOption.LingerTime%2A>屬性儲存在<xref:System.Net.Sockets.Socket.LingerState%2A>屬性。  
  
|`enable`|`seconds`|行為|  
|--------------|---------------|--------------|  
|`false` （已停用），預設值|不適用，在逾時 （預設值）。|嘗試傳送暫止資料是連線導向的通訊端 (例如 TCP，) 直到預設 IP 通訊協定逾時到期。|  
|`true` （已啟用）|非零的逾時|嘗試傳送暫止資料，直到指定的逾時到期，而如果嘗試失敗，則 Winsock 重設連接。|  
|`true` （已啟用）|零逾時。|會捨棄任何暫止的資料。 連接導向通訊端 (例如 TCP)，Winsock 重設連接。|  
  
 IP 堆疊計算預設 IP 通訊協定逾時期間，若要使用的連線的來回時間為基礎。 在大部分情況下，堆疊計算的逾時值為更有相關性比其中一個應用程式所定義的。 這是預設行為是通訊端時<xref:System.Net.Sockets.Socket.LingerState%2A>屬性未設定。  
  
 當<xref:System.Net.Sockets.LingerOption.LingerTime%2A>屬性儲存在<xref:System.Net.Sockets.Socket.LingerState%2A>屬性設定大於預設 IP 通訊協定等候逾時，仍將套用的預設 IP 通訊協定逾時，覆寫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LingerTime">
      <MemberSignature Language="C#" Value="public int LingerTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LingerTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.LingerOption.LingerTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LingerTime { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要在呼叫 <see cref="M:System.Net.Sockets.Socket.Close" /> 方法之後保持連接的時間值 (如果還有資料要傳送的話)。</summary>
        <value>在呼叫 <see cref="M:System.Net.Sockets.Socket.Close" /> 之後要保持連接的時間量 (以秒為單位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此值，如果您想要判斷如何長關閉<xref:System.Net.Sockets.Socket>將會嘗試傳輸逾時前未傳送的資料。您也可以設定此值到所需的逾時期間，以秒為單位。  
  
 如果<xref:System.Net.Sockets.LingerOption.Enabled%2A>屬性是`true`，而且您將<xref:System.Net.Sockets.LingerOption.LingerTime%2A>為 0，<xref:System.Net.Sockets.Socket>就會捨棄任何暫止傳送傳出的網路緩衝區中的資料。 如果您變更此值時，您必須傳遞改變<xref:System.Net.Sockets.LingerOption>執行個體<xref:System.Net.Sockets.Socket.SetSocketOption%2A>方法或一組<xref:System.Net.Sockets.TcpClient.LingerState%2A>或<xref:System.Net.Sockets.Socket.LingerState%2A>屬性。  
  
 下表描述的可能值的行為<xref:System.Net.Sockets.LingerOption.Enabled%2A>屬性和<xref:System.Net.Sockets.LingerOption.LingerTime%2A>屬性儲存在<xref:System.Net.Sockets.Socket.LingerState%2A>屬性。  
  
|`enable`|`seconds`|行為|  
|--------------|---------------|--------------|  
|`false` （已停用），預設值|不適用，在逾時 （預設值）。|嘗試傳送暫止資料是連線導向的通訊端 (例如 TCP，) 直到預設 IP 通訊協定逾時到期。|  
|`true` （已啟用）|非零的逾時|嘗試傳送暫止資料，直到指定的逾時到期，而如果嘗試失敗，則 Winsock 重設連接。|  
|`true` （已啟用）|零逾時。|會捨棄任何暫止的資料。 連接導向通訊端 (例如 TCP)，Winsock 重設連接。|  
  
 IP 堆疊計算預設 IP 通訊協定逾時期間，若要使用的連線的來回時間為基礎。 在大部分情況下，堆疊計算的逾時值為更有相關性比其中一個應用程式所定義的。 這是預設行為是通訊端時<xref:System.Net.Sockets.Socket.LingerState%2A>屬性未設定。  
  
 當<xref:System.Net.Sockets.LingerOption.LingerTime%2A>屬性儲存在<xref:System.Net.Sockets.Socket.LingerState%2A>屬性設定大於預設 IP 通訊協定等候逾時，仍將套用的預設 IP 通訊協定逾時，覆寫。  
  
   
  
## Examples  
 下列範例會顯示這個屬性的值。  
  
 [!code-cpp[Socket_Socket_Options#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#2)]
 [!code-csharp[Socket_Socket_Options#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#2)]
 [!code-vb[Socket_Socket_Options#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>