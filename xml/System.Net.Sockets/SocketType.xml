<Type Name="SocketType" FullName="System.Net.Sockets.SocketType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="59a4f2bc78d0362a266cd20872232210031507d3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SocketType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SocketType extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.SocketType" />
  <TypeSignature Language="VB.NET" Value="Public Enum SocketType" />
  <TypeSignature Language="C++ CLI" Value="public enum class SocketType" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="fff04-101">指定 <see cref="T:System.Net.Sockets.Socket" /> 類別的執行個體 (Instance) 所表示的通訊端 (Socket) 類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="fff04-101">Specifies the type of socket that an instance of the <see cref="T:System.Net.Sockets.Socket" /> class represents.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff04-102">之前<xref:System.Net.Sockets.Socket>可以傳送和接收資料，它必須先建立使用<xref:System.Net.Sockets.AddressFamily>、 <xref:System.Net.Sockets.SocketType>，和<xref:System.Net.Sockets.ProtocolType>。</span><span class="sxs-lookup"><span data-stu-id="fff04-102">Before a <xref:System.Net.Sockets.Socket> can send and receive data, it must first be created using an <xref:System.Net.Sockets.AddressFamily>, a <xref:System.Net.Sockets.SocketType>, and a <xref:System.Net.Sockets.ProtocolType>.</span></span> <span data-ttu-id="fff04-103"><xref:System.Net.Sockets.SocketType>列舉型別提供數個選項來定義的型別<xref:System.Net.Sockets.Socket>您想要開啟。</span><span class="sxs-lookup"><span data-stu-id="fff04-103">The <xref:System.Net.Sockets.SocketType> enumeration provides several options for defining the type of <xref:System.Net.Sockets.Socket> that you intend to open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fff04-104"><xref:System.Net.Sockets.SocketType> 有時隱含指出哪些<xref:System.Net.Sockets.ProtocolType>用於<xref:System.Net.Sockets.AddressFamily>。</span><span class="sxs-lookup"><span data-stu-id="fff04-104"><xref:System.Net.Sockets.SocketType> sometimes implicitly indicates which <xref:System.Net.Sockets.ProtocolType> is used within an <xref:System.Net.Sockets.AddressFamily>.</span></span> <span data-ttu-id="fff04-105">例如，當<xref:System.Net.Sockets.SocketType?displayProperty=nameWithType>是<xref:System.Net.Sockets.SocketType.Dgram?displayProperty=nameWithType>、<xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType>一律<xref:System.Net.Sockets.ProtocolType.Udp?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fff04-105">For example, when the <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> is <xref:System.Net.Sockets.SocketType.Dgram?displayProperty=nameWithType>, the <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> is always <xref:System.Net.Sockets.ProtocolType.Udp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fff04-106">當<xref:System.Net.Sockets.SocketType?displayProperty=nameWithType>是<xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType>、<xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType>一律<xref:System.Net.Sockets.ProtocolType.Tcp?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="fff04-106">When the <xref:System.Net.Sockets.SocketType?displayProperty=nameWithType> is <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType>, the <xref:System.Net.Sockets.ProtocolType?displayProperty=nameWithType> is always <xref:System.Net.Sockets.ProtocolType.Tcp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="fff04-107">如果您嘗試建立<xref:System.Net.Sockets.Socket>與不相容的組合，<xref:System.Net.Sockets.Socket>會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="fff04-107">If you try to create a <xref:System.Net.Sockets.Socket> with an incompatible combination, <xref:System.Net.Sockets.Socket> throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff04-108">下列範例會使用<xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType>當做參數<xref:System.Net.Sockets.Socket>建構函式。</span><span class="sxs-lookup"><span data-stu-id="fff04-108">The following example uses <xref:System.Net.Sockets.SocketType.Stream?displayProperty=nameWithType> as a parameter to the <xref:System.Net.Sockets.Socket> constructor.</span></span>  
  
 [!code-cpp[SelectModeExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SelectModeExample/CPP/source.cpp#1)]
 [!code-csharp[SelectModeExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SelectModeExample/CS/source.cs#1)]
 [!code-vb[SelectModeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SelectModeExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.AddressFamily" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.Sockets.Socket" />
  </Docs>
  <Members>
    <Member MemberName="Dgram">
      <MemberSignature Language="C#" Value="Dgram" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Dgram = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Dgram" />
      <MemberSignature Language="VB.NET" Value="Dgram" />
      <MemberSignature Language="C++ CLI" Value="Dgram" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="fff04-109">支援資料包 (Datagram)，這些資料包是固定 (一般為小型) 最大長度的無連線、不可靠訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-109">Supports datagrams, which are connectionless, unreliable messages of a fixed (typically small) maximum length.</span>
          </span>
          <span data-ttu-id="fff04-110">訊息可能會遺失或重複而抵達的順序也可能會混亂。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-110">Messages might be lost or duplicated and might arrive out of order.</span>
          </span>
          <span data-ttu-id="fff04-111">
            <see cref="T:System.Net.Sockets.Socket" /> 類型的 <see cref="F:System.Net.Sockets.SocketType.Dgram" /> 在傳送和接收資料之前並不需要先連線，並且可以與多個對等端通訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-111">A <see cref="T:System.Net.Sockets.Socket" /> of type <see cref="F:System.Net.Sockets.SocketType.Dgram" /> requires no connection prior to sending and receiving data, and can communicate with multiple peers.</span>
          </span>
          <span data-ttu-id="fff04-112">
            <see cref="F:System.Net.Sockets.SocketType.Dgram" /> 會使用資料包通訊協定 (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) 以及 <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-112">
              <see cref="F:System.Net.Sockets.SocketType.Dgram" /> uses the Datagram Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Udp" />) and the <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span>
          </span>
          <span data-ttu-id="fff04-113">位址系列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-113">address family.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Raw">
      <MemberSignature Language="C#" Value="Raw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Raw = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Raw" />
      <MemberSignature Language="VB.NET" Value="Raw" />
      <MemberSignature Language="C++ CLI" Value="Raw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="fff04-114">支援存取基礎傳輸通訊協定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-114">Supports access to the underlying transport protocol.</span>
          </span>
          <span data-ttu-id="fff04-115">藉由使用 <see cref="F:System.Net.Sockets.SocketType.Raw" />，您即可使用網際網路控制訊息通訊協定 (ICMP) (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) 和網際網路群組管理通訊協定 (IGMP) (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />) 之類的通訊協定來通訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-115">Using <see cref="F:System.Net.Sockets.SocketType.Raw" />, you can communicate using protocols like Internet Control Message Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Icmp" />) and Internet Group Management Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Igmp" />).</span>
          </span>
          <span data-ttu-id="fff04-116">您的應用程式在傳送時必須提供完整的 IP 表頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-116">Your application must provide a complete IP header when sending.</span>
          </span>
          <span data-ttu-id="fff04-117">接收的資料包也會傳回原來的 IP 表頭和選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-117">Received datagrams return with the IP header and options intact.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Rdm">
      <MemberSignature Language="C#" Value="Rdm" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Rdm = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Rdm" />
      <MemberSignature Language="VB.NET" Value="Rdm" />
      <MemberSignature Language="C++ CLI" Value="Rdm" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="fff04-118">支援無連線、訊息導向、可靠傳遞的訊息，以及保留資料中的訊息界限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-118">Supports connectionless, message-oriented, reliably delivered messages, and preserves message boundaries in data.</span>
          </span>
          <span data-ttu-id="fff04-119">Rdm (可靠傳遞的訊息，Reliably Delivered Message) 訊息不會重複且依照順序抵達。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-119">Rdm (Reliably Delivered Messages) messages arrive unduplicated and in order.</span>
          </span>
          <span data-ttu-id="fff04-120">此外，當訊息遺失時也會通知寄件人。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-120">Furthermore, the sender is notified if messages are lost.</span>
          </span>
          <span data-ttu-id="fff04-121">如果您使用 <see cref="F:System.Net.Sockets.SocketType.Rdm" /> 初始化 <see cref="T:System.Net.Sockets.Socket" />，在傳送和接收資料之前並不需要連接遠端主機。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-121">If you initialize a <see cref="T:System.Net.Sockets.Socket" /> using <see cref="F:System.Net.Sockets.SocketType.Rdm" />, you do not require a remote host connection before sending and receiving data.</span>
          </span>
          <span data-ttu-id="fff04-122">利用 <see cref="F:System.Net.Sockets.SocketType.Rdm" />，您可以與多個對等端通訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-122">With <see cref="F:System.Net.Sockets.SocketType.Rdm" />, you can communicate with multiple peers.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Seqpacket">
      <MemberSignature Language="C#" Value="Seqpacket" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Seqpacket = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Seqpacket" />
      <MemberSignature Language="VB.NET" Value="Seqpacket" />
      <MemberSignature Language="C++ CLI" Value="Seqpacket" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="fff04-123">提供跨越網路定序式位元組資料流的連接導向和可靠的雙向傳輸。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-123">Provides connection-oriented and reliable two-way transfer of ordered byte streams across a network.</span>
          </span>
          <span data-ttu-id="fff04-124">
            <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> 並不會複製資料，但會保留資料流中的邊界。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-124">
              <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> does not duplicate data, and it preserves boundaries within the data stream.</span>
          </span>
          <span data-ttu-id="fff04-125">類型為 <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> 的 <see cref="T:System.Net.Sockets.Socket" /> 可與單一對等端通訊，而在可以開始通訊之前必須連接遠端主機。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-125">A <see cref="T:System.Net.Sockets.Socket" /> of type <see cref="F:System.Net.Sockets.SocketType.Seqpacket" /> communicates with a single peer and requires a remote host connection before communication can begin.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="Stream" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Stream = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Stream" />
      <MemberSignature Language="VB.NET" Value="Stream" />
      <MemberSignature Language="C++ CLI" Value="Stream" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="fff04-126">支援可靠、雙向、連接架構的位元組資料流，而不會導致資料重複且不需保留界限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-126">Supports reliable, two-way, connection-based byte streams without the duplication of data and without preservation of boundaries.</span>
          </span>
          <span data-ttu-id="fff04-127">這個類型的 <see cref="T:System.Net.Sockets.Socket" /> 可與單一對等端通訊，而在可以開始通訊之前必須連接遠端主機。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-127">A <see cref="T:System.Net.Sockets.Socket" /> of this type communicates with a single peer and requires a remote host connection before communication can begin.</span>
          </span>
          <span data-ttu-id="fff04-128">
            <see cref="F:System.Net.Sockets.SocketType.Stream" /> 會使用「傳輸控制通訊協定」(<see langword="ProtocolType" />) <see cref="F:System.Net.Sockets.ProtocolType.Tcp" /> 以及 <see langword="AddressFamily" /><see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-128">
              <see cref="F:System.Net.Sockets.SocketType.Stream" /> uses the Transmission Control Protocol (<see langword="ProtocolType" />.<see cref="F:System.Net.Sockets.ProtocolType.Tcp" />) and the <see langword="AddressFamily" />.<see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /></span>
          </span>
          <span data-ttu-id="fff04-129">位址系列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-129">address family.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Net.Sockets.SocketType Unknown = int32(-1)" />
      <MemberSignature Language="DocId" Value="F:System.Net.Sockets.SocketType.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.SocketType</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="fff04-130">指定未知的 <see cref="Socket" /> 類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="fff04-130">Specifies an unknown <see cref="Socket" /> type.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>