<Type Name="NetworkStream" FullName="System.Net.Sockets.NetworkStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ec3dfbba227fd23ea100bde76cba1b9a9e92fbb" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55367074" /></Metadata><TypeSignature Language="C#" Value="public class NetworkStream : System.IO.Stream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetworkStream extends System.IO.Stream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.NetworkStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NetworkStream&#xA;Inherits Stream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetworkStream : System::IO::Stream" />
  <TypeSignature Language="F#" Value="type NetworkStream = class&#xA;    inherit Stream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary><span data-ttu-id="58d8a-101">提供基礎資料流以進行網路存取。</span><span class="sxs-lookup"><span data-stu-id="58d8a-101">Provides the underlying stream of data for network access.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-102"><xref:System.Net.Sockets.NetworkStream>類別提供方法來傳送和接收資料，透過<xref:System.Net.Sockets.SocketType.Stream>處於封鎖模式通訊端。</span><span class="sxs-lookup"><span data-stu-id="58d8a-102">The <xref:System.Net.Sockets.NetworkStream> class provides methods for sending and receiving data over <xref:System.Net.Sockets.SocketType.Stream> sockets in blocking mode.</span></span> <span data-ttu-id="58d8a-103">如需有關封鎖與封鎖<xref:System.Net.Sockets.Socket>s，請參閱 <<c2> [ 使用非同步用戶端通訊端](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md)。</span><span class="sxs-lookup"><span data-stu-id="58d8a-103">For more information about blocking versus nonblocking <xref:System.Net.Sockets.Socket>s, see [Using an Asynchronous Client Socket](~/docs/framework/network-programming/using-an-asynchronous-client-socket.md).</span></span> <span data-ttu-id="58d8a-104">您可以使用<xref:System.Net.Sockets.NetworkStream>這兩個同步和非同步資料傳輸的類別。</span><span class="sxs-lookup"><span data-stu-id="58d8a-104">You can use the <xref:System.Net.Sockets.NetworkStream> class for both synchronous and asynchronous data transfer.</span></span> <span data-ttu-id="58d8a-105">如需有關同步和非同步通訊的詳細資訊，請參閱 <<c0> [ 通訊端](~/docs/framework/network-programming/sockets.md)。</span><span class="sxs-lookup"><span data-stu-id="58d8a-105">For more information about synchronous and asynchronous communication, see [Sockets](~/docs/framework/network-programming/sockets.md).</span></span>  
  
 <span data-ttu-id="58d8a-106">若要建立<xref:System.Net.Sockets.NetworkStream>，您必須提供連接<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-106">To create a <xref:System.Net.Sockets.NetworkStream>, you must provide a connected <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="58d8a-107">您也可以指定哪些<xref:System.IO.FileAccess>權限<xref:System.Net.Sockets.NetworkStream>高於提供<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-107">You can also specify what <xref:System.IO.FileAccess> permission the <xref:System.Net.Sockets.NetworkStream> has over the provided <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="58d8a-108">根據預設，關閉<xref:System.Net.Sockets.NetworkStream>不會關閉提供<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-108">By default, closing the <xref:System.Net.Sockets.NetworkStream> does not close the provided <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="58d8a-109">如果您想<xref:System.Net.Sockets.NetworkStream>能夠關閉所提供的權限<xref:System.Net.Sockets.Socket>，您必須指定`true`值的`ownsSocket`參數。</span><span class="sxs-lookup"><span data-stu-id="58d8a-109">If you want the <xref:System.Net.Sockets.NetworkStream> to have permission to close the provided <xref:System.Net.Sockets.Socket>, you must specify `true` for the value of the `ownsSocket` parameter.</span></span>  
  
 <span data-ttu-id="58d8a-110">使用<xref:System.Net.Sockets.NetworkStream.Write%2A>和<xref:System.Net.Sockets.NetworkStream.Read%2A>方法簡單的單一執行緒同步封鎖的 I/O。</span><span class="sxs-lookup"><span data-stu-id="58d8a-110">Use the <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods for simple single thread synchronous blocking I/O.</span></span> <span data-ttu-id="58d8a-111">如果您想要處理您使用個別執行緒的 I/O，請考慮使用<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>並<xref:System.Net.Sockets.NetworkStream.EndWrite%2A>方法，或有<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>和<xref:System.Net.Sockets.NetworkStream.EndRead%2A>進行通訊的方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-111">If you want to process your I/O using separate threads, consider using the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> and <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> methods, or the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> and <xref:System.Net.Sockets.NetworkStream.EndRead%2A> methods for communication.</span></span>  
  
 <span data-ttu-id="58d8a-112"><xref:System.Net.Sockets.NetworkStream>不支援隨機存取的網路資料流。</span><span class="sxs-lookup"><span data-stu-id="58d8a-112">The <xref:System.Net.Sockets.NetworkStream> does not support random access to the network data stream.</span></span> <span data-ttu-id="58d8a-113">值<xref:System.Net.Sockets.NetworkStream.CanSeek%2A>屬性，指出資料流是否支援搜尋，總是`false`; 讀取<xref:System.Net.Sockets.NetworkStream.Position%2A>屬性，讀取<xref:System.Net.Sockets.NetworkStream.Length%2A>屬性或呼叫<xref:System.Net.Sockets.NetworkStream.Seek%2A>方法會擲回<xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="58d8a-113">The value of the <xref:System.Net.Sockets.NetworkStream.CanSeek%2A> property, which indicates whether the stream supports seeking, is always `false`; reading the <xref:System.Net.Sockets.NetworkStream.Position%2A> property, reading the <xref:System.Net.Sockets.NetworkStream.Length%2A> property, or calling the <xref:System.Net.Sockets.NetworkStream.Seek%2A> method will throw a <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="58d8a-114">讀取和寫入作業可以同時執行的執行個體上<xref:System.Net.Sockets.NetworkStream>類別，而不需要同步處理。</span><span class="sxs-lookup"><span data-stu-id="58d8a-114">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="58d8a-115">只要沒有 「 寫入 」 操作專用的執行緒和一個唯一的執行緒，讀取作業，讀取之間會有不互相干擾，就需要寫入執行緒與任何同步處理。</span><span class="sxs-lookup"><span data-stu-id="58d8a-115">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-116">下列程式碼範例示範如何建立<xref:System.Net.Sockets.NetworkStream>從已連線<xref:System.Net.Sockets.SocketType.Stream><xref:System.Net.Sockets.Socket>並執行基本的同步封鎖 I/O。</span><span class="sxs-lookup"><span data-stu-id="58d8a-116">The following code example demonstrates how to create a <xref:System.Net.Sockets.NetworkStream> from a connected <xref:System.Net.Sockets.SocketType.Stream><xref:System.Net.Sockets.Socket> and perform basic synchronous blocking I/O.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="58d8a-117">建立 <see cref="T:System.Net.Sockets.NetworkStream" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="58d8a-117">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream socket" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="58d8a-118"><see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 會利用它來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-118">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <summary><span data-ttu-id="58d8a-119">為指定的 <see cref="T:System.Net.Sockets.NetworkStream" /> 建立 <see cref="T:System.Net.Sockets.Socket" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="58d8a-119">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-120"><xref:System.Net.Sockets.NetworkStream>會建立指定的讀取/寫入存取<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-120">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="58d8a-121"><xref:System.Net.Sockets.NetworkStream>並未擁有基礎<xref:System.Net.Sockets.Socket>，因此呼叫<xref:System.Net.Sockets.NetworkStream.Close%2A>方法，不會關閉<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-121">The <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-122">下列程式碼範例說明如何建立<xref:System.Net.Sockets.NetworkStream>與<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-122">The following code example illustrates how to create a <xref:System.Net.Sockets.NetworkStream> with a <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58d8a-123"><paramref name="socket" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-123">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="58d8a-124"><paramref name="socket" /> 參數未連接。</span><span class="sxs-lookup"><span data-stu-id="58d8a-124">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="58d8a-125">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-125">-or-</span></span> 
<span data-ttu-id="58d8a-126"><paramref name="socket" /> 參數的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 屬性不是 <see cref="F:System.Net.Sockets.SocketType.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-126">The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="58d8a-127">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-127">-or-</span></span> 
<span data-ttu-id="58d8a-128"><paramref name="socket" /> 參數處於未封鎖的狀態。</span><span class="sxs-lookup"><span data-stu-id="58d8a-128">The <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md"><span data-ttu-id="58d8a-129">在網路上使用資料流</span><span class="sxs-lookup"><span data-stu-id="58d8a-129">Using Streams on the Network</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="58d8a-130"><see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 會利用它來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-130">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <param name="ownsSocket"><span data-ttu-id="58d8a-131">設定為 <see langword="true" />，表示 <see cref="T:System.Net.Sockets.NetworkStream" /> 將取得 <see cref="T:System.Net.Sockets.Socket" /> 的擁有權，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-131">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="58d8a-132">使用指定的 <see cref="T:System.Net.Sockets.NetworkStream" /> 擁有權，為指定的 <see cref="T:System.Net.Sockets.Socket" /> 初始化 <see cref="T:System.Net.Sockets.Socket" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="58d8a-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-133"><xref:System.Net.Sockets.NetworkStream>會建立指定的讀取/寫入存取<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-133">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="58d8a-134">如果值`ownsSocket`參數是`true`，則<xref:System.Net.Sockets.NetworkStream>會取得擁有權的基礎<xref:System.Net.Sockets.Socket>，然後呼叫<xref:System.Net.Sockets.NetworkStream.Close%2A>方法也會關閉基礎<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-134">If the value of `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-135">下列程式碼範例會建立<xref:System.Net.Sockets.NetworkStream>的擁有權與<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-135">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with ownership of the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58d8a-136"><paramref name="socket" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-136">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="58d8a-137"><paramref name="socket" /> 參數未連接。</span><span class="sxs-lookup"><span data-stu-id="58d8a-137">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="58d8a-138">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-138">-or-</span></span> 
<span data-ttu-id="58d8a-139"><paramref name="socket" /> 參數的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 屬性值不是 <see cref="F:System.Net.Sockets.SocketType.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-139">the value of the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="58d8a-140">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-140">-or-</span></span> 
<span data-ttu-id="58d8a-141"><paramref name="socket" /> 參數處於未封鎖的狀態。</span><span class="sxs-lookup"><span data-stu-id="58d8a-141">the <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="58d8a-142"><see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 會利用它來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-142">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <param name="access"><span data-ttu-id="58d8a-143"><see cref="T:System.IO.FileAccess" /> 值的位元組合，指定透過所提供之 <see cref="T:System.Net.Sockets.NetworkStream" /> 授與 <see cref="T:System.Net.Sockets.Socket" /> 的存取類型。</span><span class="sxs-lookup"><span data-stu-id="58d8a-143">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specify the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <summary><span data-ttu-id="58d8a-144">使用指定的存取權限，建立指定 <see cref="T:System.Net.Sockets.NetworkStream" /> 的 <see cref="T:System.Net.Sockets.Socket" /> 類別新執行個體。</span><span class="sxs-lookup"><span data-stu-id="58d8a-144">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-145"><xref:System.Net.Sockets.NetworkStream>建立具有指定的存取權指定<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-145">The <xref:System.Net.Sockets.NetworkStream> is created with the specified access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="58d8a-146">使用這個建構函式，<xref:System.Net.Sockets.NetworkStream>並未擁有基礎<xref:System.Net.Sockets.Socket>，因此呼叫<xref:System.Net.Sockets.NetworkStream.Close%2A>方法不會關閉基礎<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-146">With this constructor, the <xref:System.Net.Sockets.NetworkStream> does not own the underlying <xref:System.Net.Sockets.Socket>, so calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method does not close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="58d8a-147">`access`參數集<xref:System.Net.Sockets.NetworkStream.CanRead%2A>並<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>的屬性<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-147">The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58d8a-148">如果您指定<xref:System.IO.FileAccess.Write>，則<xref:System.Net.Sockets.NetworkStream>可讓呼叫<xref:System.Net.Sockets.NetworkStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-148">If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="58d8a-149">如果您指定<xref:System.IO.FileAccess.Read>，則<xref:System.Net.Sockets.NetworkStream>可讓呼叫<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-149">If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="58d8a-150">如果您指定<xref:System.IO.FileAccess.ReadWrite>，允許兩個方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="58d8a-150">If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-151">下列程式碼範例會建立<xref:System.Net.Sockets.NetworkStream>能夠讀取和寫入<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-151">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58d8a-152"><paramref name="socket" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-152">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="58d8a-153"><paramref name="socket" /> 參數未連接。</span><span class="sxs-lookup"><span data-stu-id="58d8a-153">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="58d8a-154">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-154">-or-</span></span> 
<span data-ttu-id="58d8a-155"><paramref name="socket" /> 參數的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 屬性不是 <see cref="F:System.Net.Sockets.SocketType.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-155">the <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="58d8a-156">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-156">-or-</span></span> 
<span data-ttu-id="58d8a-157"><paramref name="socket" /> 參數處於未封鎖的狀態。</span><span class="sxs-lookup"><span data-stu-id="58d8a-157">the <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetworkStream (System.Net.Sockets.Socket socket, System.IO.FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.Sockets.Socket socket, valuetype System.IO.FileAccess access, bool ownsSocket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetworkStream(System::Net::Sockets::Socket ^ socket, System::IO::FileAccess access, bool ownsSocket);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.NetworkStream : System.Net.Sockets.Socket * System.IO.FileAccess * bool -&gt; System.Net.Sockets.NetworkStream" Usage="new System.Net.Sockets.NetworkStream (socket, access, ownsSocket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="socket" Type="System.Net.Sockets.Socket" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="ownsSocket" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket"><span data-ttu-id="58d8a-158"><see cref="T:System.Net.Sockets.Socket" />，<see cref="T:System.Net.Sockets.NetworkStream" /> 會利用它來傳送和接收資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-158">The <see cref="T:System.Net.Sockets.Socket" /> that the <see cref="T:System.Net.Sockets.NetworkStream" /> will use to send and receive data.</span></span></param>
        <param name="access"><span data-ttu-id="58d8a-159"><see cref="T:System.IO.FileAccess" /> 值的位元組合，指定存取的類型；這個存取會指定給提供的 <see cref="T:System.Net.Sockets.NetworkStream" /> 上的 <see cref="T:System.Net.Sockets.Socket" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-159">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values that specifies the type of access given to the <see cref="T:System.Net.Sockets.NetworkStream" /> over the provided <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <param name="ownsSocket"><span data-ttu-id="58d8a-160">設定為 <see langword="true" />，表示 <see cref="T:System.Net.Sockets.NetworkStream" /> 將取得 <see cref="T:System.Net.Sockets.Socket" /> 的擁有權，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-160">Set to <see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> will take ownership of the <see cref="T:System.Net.Sockets.Socket" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="58d8a-161">使用指定的存取權限和指定的 <see cref="T:System.Net.Sockets.NetworkStream" /> 擁有權，建立指定 <see cref="T:System.Net.Sockets.Socket" /> 的 <see cref="T:System.Net.Sockets.Socket" /> 類別新執行個體。</span><span class="sxs-lookup"><span data-stu-id="58d8a-161">Creates a new instance of the <see cref="T:System.Net.Sockets.NetworkStream" /> class for the specified <see cref="T:System.Net.Sockets.Socket" /> with the specified access rights and the specified <see cref="T:System.Net.Sockets.Socket" /> ownership.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-162"><xref:System.Net.Sockets.NetworkStream>會建立指定的讀取/寫入存取<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-162">The <xref:System.Net.Sockets.NetworkStream> is created with read/write access to the specified <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="58d8a-163">如果值`ownsSocket`參數是`true`，則<xref:System.Net.Sockets.NetworkStream>會取得擁有權的基礎<xref:System.Net.Sockets.Socket>，然後呼叫<xref:System.Net.Sockets.NetworkStream.Close%2A>方法也會關閉基礎<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-163">If the value of the `ownsSocket` parameter is `true`, the <xref:System.Net.Sockets.NetworkStream> takes ownership of the underlying <xref:System.Net.Sockets.Socket>, and calling the <xref:System.Net.Sockets.NetworkStream.Close%2A> method also closes the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 <span data-ttu-id="58d8a-164">`access`參數集<xref:System.Net.Sockets.NetworkStream.CanRead%2A>並<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>的屬性<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-164">The `access` parameter sets the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> and <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> properties of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58d8a-165">如果您指定<xref:System.IO.FileAccess.Write>，則<xref:System.Net.Sockets.NetworkStream>可讓呼叫<xref:System.Net.Sockets.NetworkStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-165">If you specify <xref:System.IO.FileAccess.Write>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="58d8a-166">如果您指定<xref:System.IO.FileAccess.Read>，則<xref:System.Net.Sockets.NetworkStream>可讓呼叫<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-166">If you specify <xref:System.IO.FileAccess.Read>, then the <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="58d8a-167">如果您指定<xref:System.IO.FileAccess.ReadWrite>，允許兩個方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="58d8a-167">If you specify <xref:System.IO.FileAccess.ReadWrite>, both method calls are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-168">下列程式碼範例會建立<xref:System.Net.Sockets.NetworkStream>能夠讀取和寫入<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-168">The following code example creates a <xref:System.Net.Sockets.NetworkStream> with the ability to read and write to the <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="58d8a-169">擁有權<xref:System.Net.Sockets.Socket>提供給這<xref:System.Net.Sockets.NetworkStream>藉由指定`true`如`ownsSocket`參數。</span><span class="sxs-lookup"><span data-stu-id="58d8a-169">Ownership of the <xref:System.Net.Sockets.Socket> is given to this <xref:System.Net.Sockets.NetworkStream> by specifying `true` for the `ownsSocket` parameter.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#1)]
 [!code-vb[NetworkStream_Async_SendAndReceive#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58d8a-170"><paramref name="socket" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-170">The <paramref name="socket" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="58d8a-171"><paramref name="socket" /> 參數未連接。</span><span class="sxs-lookup"><span data-stu-id="58d8a-171">The <paramref name="socket" /> parameter is not connected.</span></span>  
  
<span data-ttu-id="58d8a-172">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-172">-or-</span></span> 
<span data-ttu-id="58d8a-173"><paramref name="socket" /> 參數的 <see cref="P:System.Net.Sockets.Socket.SocketType" /> 屬性不是 <see cref="F:System.Net.Sockets.SocketType.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-173">The <see cref="P:System.Net.Sockets.Socket.SocketType" /> property of the <paramref name="socket" /> parameter is not <see cref="F:System.Net.Sockets.SocketType.Stream" />.</span></span>  
  
<span data-ttu-id="58d8a-174">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-174">-or-</span></span> 
<span data-ttu-id="58d8a-175"><paramref name="socket" /> 參數處於未封鎖的狀態。</span><span class="sxs-lookup"><span data-stu-id="58d8a-175">The <paramref name="socket" /> parameter is in a nonblocking state.</span></span></exception>
        <altmember cref="T:System.IO.FileAccess" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginRead (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="58d8a-176"><see cref="T:System.Byte" /> 型別的陣列，這是存放讀取自 <see cref="T:System.Net.Sockets.NetworkStream" /> 的資料的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="58d8a-176">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="58d8a-177"><paramref name="buffer" /> 中的位置，要在此處開始存放資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-177">The location in <paramref name="buffer" /> to begin storing the data.</span></span></param>
        <param name="size"><span data-ttu-id="58d8a-178">要從 <see cref="T:System.Net.Sockets.NetworkStream" /> 讀取的位元組數。</span><span class="sxs-lookup"><span data-stu-id="58d8a-178">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="callback"><span data-ttu-id="58d8a-179"><see cref="T:System.AsyncCallback" /> 委派，會在 <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 完成時加以執行。</span><span class="sxs-lookup"><span data-stu-id="58d8a-179">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span></span></param>
        <param name="state"><span data-ttu-id="58d8a-180">物件，包含任何額外的使用者定義資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-180">An object that contains any additional user-defined data.</span></span></param>
        <summary><span data-ttu-id="58d8a-181">開始從 <see cref="T:System.Net.Sockets.NetworkStream" /> 進行非同步讀取。</span><span class="sxs-lookup"><span data-stu-id="58d8a-181">Begins an asynchronous read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <returns><span data-ttu-id="58d8a-182"><see cref="T:System.IAsyncResult" />，表示非同步呼叫。</span><span class="sxs-lookup"><span data-stu-id="58d8a-182">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-183"><xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法會開始以非同步方式讀取連入的網路緩衝區中的資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-183">The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method starts asynchronously reading data from the incoming network buffers.</span></span> <span data-ttu-id="58d8a-184">呼叫<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法可讓您能夠接收不同的執行緒內的資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-184">Calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method gives you the ability to receive data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="58d8a-185">您必須建立回呼方法可實作<xref:System.AsyncCallback>委派，並將其名稱來傳遞<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-185">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="58d8a-186">至少，您`state`參數必須包含<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-186">At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58d8a-187">因為您會想要取得已接收的資料，您的回呼方法中，您應該建立小型的類別或結構存放讀取的緩衝區和其他有用的資訊。</span><span class="sxs-lookup"><span data-stu-id="58d8a-187">Because you will want to obtain the received data within your callback method, you should create a small class or structure to hold a read buffer and any other useful information.</span></span> <span data-ttu-id="58d8a-188">若要將結構或類別執行個體傳遞<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法，透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="58d8a-188">Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="58d8a-189">您的回呼方法應該呼叫<xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-189">Your callback method should call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method.</span></span> <span data-ttu-id="58d8a-190">當您的應用程式呼叫<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>，系統會等候，直到收到資料或發生錯誤，然後系統會使用個別的執行緒來執行指定的回呼方法和上的區塊<xref:System.Net.Sockets.NetworkStream.EndRead%2A>直到提供<xref:System.Net.Sockets.NetworkStream>讀取資料或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="58d8a-190">When your application calls <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, the system will wait until data is received or an error occurs, and then the system will use a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndRead%2A> until the provided <xref:System.Net.Sockets.NetworkStream> reads data or throws an exception.</span></span> <span data-ttu-id="58d8a-191">如果您想封鎖之後呼叫的原始執行緒<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法，請使用<xref:System.Threading.WaitHandle.WaitOne%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-191">If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="58d8a-192">呼叫<xref:System.Threading.EventWaitHandle.Set%2A>在回呼方法，當您想要繼續執行的原始執行緒時。</span><span class="sxs-lookup"><span data-stu-id="58d8a-192">Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="58d8a-193">如需撰寫回呼方法的詳細資訊，請參閱 <<c0> [ 封送處理為回呼方法的委派](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="58d8a-193">For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
 <span data-ttu-id="58d8a-194"><xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法會讀取可供使用，最多所指定的位元組數目的資料量`size`參數。</span><span class="sxs-lookup"><span data-stu-id="58d8a-194">The <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58d8a-195">如果您收到<xref:System.IO.IOException>，檢查<xref:System.Exception.InnerException%2A>屬性來判斷如果它因<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-195">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="58d8a-196">如果是，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A>屬性取得特定的錯誤碼，並參照[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58d8a-196">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="58d8a-197">讀取和寫入作業可以同時執行的執行個體上<xref:System.Net.Sockets.NetworkStream>類別，而不需要同步處理。</span><span class="sxs-lookup"><span data-stu-id="58d8a-197">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="58d8a-198">只要沒有 「 寫入 」 操作專用的執行緒和一個唯一的執行緒，讀取作業，讀取之間會有不互相干擾，就需要寫入執行緒與任何同步處理。</span><span class="sxs-lookup"><span data-stu-id="58d8a-198">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-199">下列程式碼範例使用<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>從網路資料流，以非同步方式讀取資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-199">The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> to read data asynchronously from the network stream.</span></span> <span data-ttu-id="58d8a-200">`myReadCallBack`方法實作<xref:System.AsyncCallback>委派，而且由系統呼叫時<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="58d8a-200">The `myReadCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Async_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58d8a-201"><paramref name="buffer" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-201">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58d8a-202"><paramref name="offset" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="58d8a-202">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="58d8a-203">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-203">-or-</span></span> 
<span data-ttu-id="58d8a-204"><paramref name="offset" /> 參數大於 <paramref name="buffer" /> 參數的長度。</span><span class="sxs-lookup"><span data-stu-id="58d8a-204">The <paramref name="offset" /> parameter is greater than the length of the <paramref name="buffer" /> paramater.</span></span>  
  
<span data-ttu-id="58d8a-205">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-205">-or-</span></span> 
<span data-ttu-id="58d8a-206"><paramref name="size" /> 小於 0。</span><span class="sxs-lookup"><span data-stu-id="58d8a-206">The <paramref name="size" /> is less than 0.</span></span>  
  
<span data-ttu-id="58d8a-207">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-207">-or-</span></span> 
<span data-ttu-id="58d8a-208"><paramref name="size" /> 大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數值。</span><span class="sxs-lookup"><span data-stu-id="58d8a-208">The <paramref name="size" /> is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="58d8a-209">基礎 <see cref="T:System.Net.Sockets.Socket" /> 已經關閉。</span><span class="sxs-lookup"><span data-stu-id="58d8a-209">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="58d8a-210">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-210">-or-</span></span> 
<span data-ttu-id="58d8a-211">從網路讀取時發生失敗。</span><span class="sxs-lookup"><span data-stu-id="58d8a-211">There was a failure while reading from the network.</span></span>  
  
<span data-ttu-id="58d8a-212">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-212">-or-</span></span> 
<span data-ttu-id="58d8a-213">存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58d8a-213">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58d8a-214"><see cref="T:System.Net.Sockets.NetworkStream" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58d8a-214">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int size, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 size, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, size As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="networkStream.BeginWrite (buffer, offset, size, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="58d8a-215"><see cref="T:System.Byte" /> 型別的陣列，包含要寫入至 <see cref="T:System.Net.Sockets.NetworkStream" /> 的資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-215">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="58d8a-216"><paramref name="buffer" /> 中的位置，要從此處開始傳送資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-216">The location in <paramref name="buffer" /> to begin sending the data.</span></span></param>
        <param name="size"><span data-ttu-id="58d8a-217">要寫入至 <see cref="T:System.Net.Sockets.NetworkStream" /> 的位元組數。</span><span class="sxs-lookup"><span data-stu-id="58d8a-217">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="callback"><span data-ttu-id="58d8a-218"><see cref="T:System.AsyncCallback" /> 委派，會在 <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 完成時加以執行。</span><span class="sxs-lookup"><span data-stu-id="58d8a-218">The <see cref="T:System.AsyncCallback" /> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> completes.</span></span></param>
        <param name="state"><span data-ttu-id="58d8a-219">物件，包含任何額外的使用者定義資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-219">An object that contains any additional user-defined data.</span></span></param>
        <summary><span data-ttu-id="58d8a-220">開始非同步寫入資料流。</span><span class="sxs-lookup"><span data-stu-id="58d8a-220">Begins an asynchronous write to a stream.</span></span></summary>
        <returns><span data-ttu-id="58d8a-221"><see cref="T:System.IAsyncResult" />，表示非同步呼叫。</span><span class="sxs-lookup"><span data-stu-id="58d8a-221">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-222"><xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法會啟動非同步傳送作業至遠端主機。</span><span class="sxs-lookup"><span data-stu-id="58d8a-222">The <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method starts an asynchronous send operation to the remote host.</span></span> <span data-ttu-id="58d8a-223">呼叫<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法可讓您能夠傳送不同的執行緒中的資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-223">Calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method gives you the ability to send data within a separate execution thread.</span></span>  
  
 <span data-ttu-id="58d8a-224">您必須建立回呼方法可實作<xref:System.AsyncCallback>委派，並將其名稱來傳遞<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-224">You must create a callback method that implements the <xref:System.AsyncCallback> delegate and pass its name to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.</span></span> <span data-ttu-id="58d8a-225">至少，您`state`參數必須包含<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-225">At the very minimum, your `state` parameter must contain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58d8a-226">如果回呼需要更多的資訊時，您可以建立的小型類別或結構以容納<xref:System.Net.Sockets.NetworkStream>和其他必要的資訊。</span><span class="sxs-lookup"><span data-stu-id="58d8a-226">If your callback needs more information, you can create a small class or structure to hold the <xref:System.Net.Sockets.NetworkStream> and the other required information.</span></span> <span data-ttu-id="58d8a-227">若要將結構或類別執行個體傳遞<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法，透過`state`參數。</span><span class="sxs-lookup"><span data-stu-id="58d8a-227">Pass the structure or class instance to the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method through the `state` parameter.</span></span>  
  
 <span data-ttu-id="58d8a-228">您的回呼方法應該實作<xref:System.Net.Sockets.NetworkStream.EndWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-228">Your callback method should implement the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method.</span></span> <span data-ttu-id="58d8a-229">當您的應用程式呼叫<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>，系統會使用個別的執行緒來執行指定的回呼方法，並封鎖<xref:System.Net.Sockets.NetworkStream.EndWrite%2A>直到<xref:System.Net.Sockets.NetworkStream>傳送要求的位元組數目，或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="58d8a-229">When your application calls <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, the system uses a separate thread to execute the specified callback method, and blocks on <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> until the <xref:System.Net.Sockets.NetworkStream> sends the number of bytes requested or throws an exception.</span></span> <span data-ttu-id="58d8a-230">如果您想封鎖之後呼叫的原始執行緒<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法，請使用<xref:System.Threading.WaitHandle.WaitOne%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-230">If you want the original thread to block after you call the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method, use the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="58d8a-231">呼叫<xref:System.Threading.EventWaitHandle.Set%2A>在回呼方法，當您想要繼續執行的原始執行緒時。</span><span class="sxs-lookup"><span data-stu-id="58d8a-231">Call <xref:System.Threading.EventWaitHandle.Set%2A> in the callback method when you want the original thread to continue executing.</span></span> <span data-ttu-id="58d8a-232">如需撰寫回呼方法的詳細資訊，請參閱 <<c0> [ 封送處理為回呼方法的委派](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md)。</span><span class="sxs-lookup"><span data-stu-id="58d8a-232">For additional information about writing callback methods, see [Marshaling a Delegate as a Callback Method](~/docs/framework/interop/marshaling-a-delegate-as-a-callback-method.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58d8a-233">如果您收到<xref:System.IO.IOException>，檢查<xref:System.Exception.InnerException%2A>屬性來判斷如果它因<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-233">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="58d8a-234">如果是，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A>屬性取得特定的錯誤碼，並參照[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58d8a-234">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="58d8a-235">讀取和寫入作業可以同時執行的執行個體上<xref:System.Net.Sockets.NetworkStream>類別，而不需要同步處理。</span><span class="sxs-lookup"><span data-stu-id="58d8a-235">Read and write operations can be performed simultaneously on an instance of the <xref:System.Net.Sockets.NetworkStream> class without the need for synchronization.</span></span> <span data-ttu-id="58d8a-236">只要沒有 「 寫入 」 操作專用的執行緒和一個唯一的執行緒，讀取作業，讀取之間會有不互相干擾，就需要寫入執行緒與任何同步處理。</span><span class="sxs-lookup"><span data-stu-id="58d8a-236">As long as there is one unique thread for the write operations and one unique thread for the read operations, there will be no cross-interference between read and write threads and no synchronization is required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-237">下列程式碼範例使用<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>將資料以非同步方式寫入的網路資料流。</span><span class="sxs-lookup"><span data-stu-id="58d8a-237">The following code example uses <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> to write data asynchronously to a network stream.</span></span> <span data-ttu-id="58d8a-238">`myWriteCallBack`方法實作<xref:System.AsyncCallback>委派，而且由系統呼叫時<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="58d8a-238">The `myWriteCallBack` method implements the <xref:System.AsyncCallback> delegate and is called by the system when <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#2)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#2)]
 [!code-vb[NetworkStream_Async_SendAndReceive#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58d8a-239"><paramref name="buffer" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-239">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58d8a-240"><paramref name="offset" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="58d8a-240">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="58d8a-241">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-241">-or-</span></span> 
<span data-ttu-id="58d8a-242"><paramref name="offset" /> 參數大於 <paramref name="buffer" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="58d8a-242">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="58d8a-243">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-243">-or-</span></span> 
<span data-ttu-id="58d8a-244"><paramref name="size" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="58d8a-244">The <paramref name="size" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="58d8a-245">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-245">-or-</span></span> 
<span data-ttu-id="58d8a-246"><paramref name="size" /> 參數大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數值。</span><span class="sxs-lookup"><span data-stu-id="58d8a-246">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="58d8a-247">基礎 <see cref="T:System.Net.Sockets.Socket" /> 已經關閉。</span><span class="sxs-lookup"><span data-stu-id="58d8a-247">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="58d8a-248">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-248">-or-</span></span> 
<span data-ttu-id="58d8a-249">寫入網路時發生失敗。</span><span class="sxs-lookup"><span data-stu-id="58d8a-249">There was a failure while writing to the network.</span></span>  
  
<span data-ttu-id="58d8a-250">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-250">-or-</span></span> 
<span data-ttu-id="58d8a-251">存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58d8a-251">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58d8a-252"><see cref="T:System.Net.Sockets.NetworkStream" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58d8a-252">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Sockets.NetworkStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d8a-253">取得值，指出 <see cref="T:System.Net.Sockets.NetworkStream" /> 是否支援讀取。</span><span class="sxs-lookup"><span data-stu-id="58d8a-253">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports reading.</span></span></summary>
        <value><span data-ttu-id="58d8a-254">如果可以從資料流讀取資料，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-254"><see langword="true" /> if data can be read from the stream; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="58d8a-255">預設值為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-255">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-256">如果<xref:System.Net.Sockets.NetworkStream.CanRead%2A>已`true`，<xref:System.Net.Sockets.NetworkStream>可讓呼叫<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-256">If <xref:System.Net.Sockets.NetworkStream.CanRead%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="58d8a-257">提供適當<xref:System.IO.FileAccess>列舉值來設定的可讀性和可寫性的建構函式中<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-257">Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58d8a-258"><xref:System.Net.Sockets.NetworkStream.CanRead%2A>屬性時，會設定<xref:System.Net.Sockets.NetworkStream>初始化。</span><span class="sxs-lookup"><span data-stu-id="58d8a-258">The <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-259">下列程式碼範例會檢查<xref:System.Net.Sockets.NetworkStream.CanRead%2A>來確認<xref:System.Net.Sockets.NetworkStream>讀取。</span><span class="sxs-lookup"><span data-stu-id="58d8a-259">The following code example checks <xref:System.Net.Sockets.NetworkStream.CanRead%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is readable.</span></span> <span data-ttu-id="58d8a-260">然後執行讀取的作業上<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-260">It then performs a read operation on the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Sockets.NetworkStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d8a-261">取得值，指出資料流是否支援搜尋。</span><span class="sxs-lookup"><span data-stu-id="58d8a-261">Gets a value that indicates whether the stream supports seeking.</span></span> <span data-ttu-id="58d8a-262">目前不支援這個屬性。這個屬性永遠會傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-262">This property is not currently supported.This property always returns <see langword="false" />.</span></span></summary>
        <value><span data-ttu-id="58d8a-263"><see langword="false" /> 永遠表示 <see cref="T:System.Net.Sockets.NetworkStream" /> 無法搜尋資料流中的特定位置。</span><span class="sxs-lookup"><span data-stu-id="58d8a-263"><see langword="false" /> in all cases to indicate that <see cref="T:System.Net.Sockets.NetworkStream" /> cannot seek a specific location in the stream.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Sockets.NetworkStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d8a-264">指出逾時屬性是否適用於 <see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-264">Indicates whether timeout properties are usable for <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <value><span data-ttu-id="58d8a-265">所有情況下都是 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-265"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-266">這個屬性是存在，因為它繼承自<xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-266">This property is present because it is inherited from <xref:System.IO.Stream>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Sockets.NetworkStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d8a-267">取得值，指出 <see cref="T:System.Net.Sockets.NetworkStream" /> 是否支援寫入。</span><span class="sxs-lookup"><span data-stu-id="58d8a-267">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> supports writing.</span></span></summary>
        <value><span data-ttu-id="58d8a-268">如果可以寫入資料至 <see cref="T:System.Net.Sockets.NetworkStream" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-268"><see langword="true" /> if data can be written to the <see cref="T:System.Net.Sockets.NetworkStream" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="58d8a-269">預設值為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-269">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-270">如果<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>已`true`，<xref:System.Net.Sockets.NetworkStream>可讓呼叫<xref:System.Net.Sockets.NetworkStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-270">If <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="58d8a-271">提供適當<xref:System.IO.FileAccess>列舉值來設定的可讀性和可寫性的建構函式中<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-271">Provide the appropriate <xref:System.IO.FileAccess> enumerated value in the constructor to set the readability and writability of the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58d8a-272"><xref:System.Net.Sockets.NetworkStream.CanWrite%2A>屬性時，會設定<xref:System.Net.Sockets.NetworkStream>初始化。</span><span class="sxs-lookup"><span data-stu-id="58d8a-272">The <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-273">下列程式碼範例會檢查<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>來確認<xref:System.Net.Sockets.NetworkStream>是可寫入。</span><span class="sxs-lookup"><span data-stu-id="58d8a-273">The following code example checks <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> to verify that the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span> <span data-ttu-id="58d8a-274">然後執行寫入作業上<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-274">It then performs a write operation on the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
        <altmember cref="T:System.IO.FileAccess" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="networkStream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58d8a-275">關閉 <see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-275">Closes the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="58d8a-276">`Close`方法會釋放相關聯的非受控和受控資源<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-276">The `Close` method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58d8a-277">如果<xref:System.Net.Sockets.NetworkStream>擁有基礎<xref:System.Net.Sockets.Socket>，它也會關閉。</span><span class="sxs-lookup"><span data-stu-id="58d8a-277">If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.</span></span>

<span data-ttu-id="58d8a-278">如果<xref:System.Net.Sockets.NetworkStream>與相關聯<xref:System.Net.Sockets.TcpClient>，則`Close`方法會關閉 TCP 連線，但未處置相關聯的<xref:System.Net.Sockets.TcpClient>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-278">If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the `Close` method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>.</span></span>

## Examples  
<span data-ttu-id="58d8a-279">下列程式碼範例會關閉<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-279">The following code example closes the <xref:System.Net.Sockets.NetworkStream>.</span></span>

```vb
' Example for closing the NetworkStream.
' Close the NetworkStream
myNetworkStream.Close()
```

```csharp
// Example for closing the NetworkStream.

// Close the NetworkStream
myNetworkStream.Close();
```

```cpp
// Example for closing the NetworkStream.
// Close the NetworkStream
myNetworkStream->Close();
```

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(int timeout);" />
      <MemberSignature Language="F#" Value="override this.Close : int -&gt; unit" Usage="networkStream.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="58d8a-280">32 位元帶正負號的整數，其指定在關閉之前等待傳送剩餘資料的毫秒數。</span><span class="sxs-lookup"><span data-stu-id="58d8a-280">A 32-bit signed integer that specifies the number of milliseconds to wait to send any remaining data before closing.</span></span></param>
        <summary><span data-ttu-id="58d8a-281">在等待了指定的時間以允許傳送資料後，關閉 <see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-281">Closes the <see cref="T:System.Net.Sockets.NetworkStream" /> after waiting the specified time to allow data to be sent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-282"><xref:System.Net.Sockets.NetworkStream.Close%2A>方法會釋放相關聯的非受控和受控資源<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-282">The <xref:System.Net.Sockets.NetworkStream.Close%2A> method frees both unmanaged and managed resources associated with the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58d8a-283">如果<xref:System.Net.Sockets.NetworkStream>擁有基礎<xref:System.Net.Sockets.Socket>，它也會關閉。</span><span class="sxs-lookup"><span data-stu-id="58d8a-283">If the <xref:System.Net.Sockets.NetworkStream> owns the underlying <xref:System.Net.Sockets.Socket>, it is closed as well.</span></span>  
  
 <span data-ttu-id="58d8a-284">如果<xref:System.Net.Sockets.NetworkStream>與相關聯<xref:System.Net.Sockets.TcpClient>，則<xref:System.Net.Sockets.NetworkStream.Close%2A>方法會關閉 TCP 連線，但未處置相關聯的<xref:System.Net.Sockets.TcpClient>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-284">If a <xref:System.Net.Sockets.NetworkStream> was associated with a <xref:System.Net.Sockets.TcpClient>, the <xref:System.Net.Sockets.NetworkStream.Close%2A> method will close the TCP connection, but not dispose of the associated <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58d8a-285"><paramref name="timeout" /> 參數小於 -1。</span><span class="sxs-lookup"><span data-stu-id="58d8a-285">The <paramref name="timeout" /> parameter is less than -1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DataAvailable">
      <MemberSignature Language="C#" Value="public virtual bool DataAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DataAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataAvailable : bool" Usage="System.Net.Sockets.NetworkStream.DataAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d8a-286">取得值，指出 <see cref="T:System.Net.Sockets.NetworkStream" /> 上的資料是否可供讀取。</span><span class="sxs-lookup"><span data-stu-id="58d8a-286">Gets a value that indicates whether data is available on the <see cref="T:System.Net.Sockets.NetworkStream" /> to be read.</span></span></summary>
        <value><span data-ttu-id="58d8a-287">如果資料流上的資料可供讀取，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-287"><see langword="true" /> if data is available on the stream to be read; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-288">使用<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A>屬性來判斷資料是否可供讀取。</span><span class="sxs-lookup"><span data-stu-id="58d8a-288">Use the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property to determine if data is ready to be read.</span></span> <span data-ttu-id="58d8a-289">如果<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A>已`true`，以呼叫<xref:System.Net.Sockets.NetworkStream.Read%2A>會立即傳回。</span><span class="sxs-lookup"><span data-stu-id="58d8a-289">If <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> is `true`, a call to <xref:System.Net.Sockets.NetworkStream.Read%2A> returns immediately.</span></span> <span data-ttu-id="58d8a-290">如果遠端主機關機或關閉連接，<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A>可能會擲回<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-290">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-291">下列程式碼範例會從讀取<xref:System.Net.Sockets.NetworkStream>，只要資料可供使用。</span><span class="sxs-lookup"><span data-stu-id="58d8a-291">The following code example reads from the <xref:System.Net.Sockets.NetworkStream> as long as data is available.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58d8a-292"><see cref="T:System.Net.Sockets.NetworkStream" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58d8a-292">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="58d8a-293">基礎 <see cref="T:System.Net.Sockets.Socket" /> 已經關閉。</span><span class="sxs-lookup"><span data-stu-id="58d8a-293">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="58d8a-294">您可以使用 <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> 屬性取得特定的錯誤碼，並參閱 <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets 第 2 版 API 錯誤碼</see>文件，以取得錯誤的詳細描述。</span><span class="sxs-lookup"><span data-stu-id="58d8a-294">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code and refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="networkStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="58d8a-295"><see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="58d8a-295"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="58d8a-296">釋放 <see cref="T:System.Net.Sockets.NetworkStream" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="58d8a-296">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.NetworkStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-297">這個方法會呼叫公用`Dispose`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-297">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="58d8a-298">`Dispose` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設為`true`。</span><span class="sxs-lookup"><span data-stu-id="58d8a-298">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="58d8a-299"><xref:System.Object.Finalize%2A> 叫用`Dispose`具有`disposing`設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="58d8a-299"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="58d8a-300">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Net.Sockets.NetworkStream> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="58d8a-300">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.NetworkStream> references.</span></span> <span data-ttu-id="58d8a-301">這個方法會叫用每個參考物件的 `Dispose` 方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-301">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="58d8a-302">
            <see langword="Dispose" /> 可以被其他物件呼叫多次。</span><span class="sxs-lookup"><span data-stu-id="58d8a-302">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="58d8a-303">覆寫 <see langword="Dispose(Boolean)" /> 時，請小心不要參考到先前已在對 <see langword="Dispose" /> 的早期呼叫中被處置 (Dispose) 的物件。</span><span class="sxs-lookup"><span data-stu-id="58d8a-303">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="58d8a-304">如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 &lt;&lt;c2&gt; [ 實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="58d8a-304">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="58d8a-305">如需詳細資訊<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)並[覆寫 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="58d8a-305">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="networkStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="58d8a-306"><see cref="T:System.IAsyncResult" />，表示非同步呼叫。</span><span class="sxs-lookup"><span data-stu-id="58d8a-306">An <see cref="T:System.IAsyncResult" /> that represents an asynchronous call.</span></span></param>
        <summary><span data-ttu-id="58d8a-307">處理非同步讀取的結束。</span><span class="sxs-lookup"><span data-stu-id="58d8a-307">Handles the end of an asynchronous read.</span></span></summary>
        <returns><span data-ttu-id="58d8a-308">從 <see cref="T:System.Net.Sockets.NetworkStream" /> 讀取的位元組數。</span><span class="sxs-lookup"><span data-stu-id="58d8a-308">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-309"><xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法完成非同步的讀取的作業，以啟動<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-309">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes the asynchronous read operation started in the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span>  
  
 <span data-ttu-id="58d8a-310">然後再呼叫<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>，您必須建立實作的回呼方法<xref:System.AsyncCallback>委派。</span><span class="sxs-lookup"><span data-stu-id="58d8a-310">Before calling <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="58d8a-311">這個回呼方法會在個別的執行緒中執行之後, 系統便會呼叫<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="58d8a-311">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> returns.</span></span> <span data-ttu-id="58d8a-312">回呼方法必須接受<xref:System.IAsyncResult>傳回<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>做為參數的方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-312">The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="58d8a-313">在回呼方法中，呼叫<xref:System.IAsyncResult.AsyncState%2A>的屬性<xref:System.IAsyncResult>取得狀態物件傳遞至<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-313">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult> to obtain the state object passed to the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="58d8a-314">擷取接收<xref:System.Net.Sockets.NetworkStream>從這個狀態物件。</span><span class="sxs-lookup"><span data-stu-id="58d8a-314">Extract the receiving <xref:System.Net.Sockets.NetworkStream> from this state object.</span></span> <span data-ttu-id="58d8a-315">取得之後<xref:System.Net.Sockets.NetworkStream>，呼叫<xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法成功完成讀取的作業，並傳回讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="58d8a-315">After obtaining the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method to successfully complete the read operation and return the number of bytes read.</span></span>  
  
 <span data-ttu-id="58d8a-316"><xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法會封鎖直到資料可供使用。</span><span class="sxs-lookup"><span data-stu-id="58d8a-316">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method blocks until data is available.</span></span> <span data-ttu-id="58d8a-317"><xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法會讀取位於不超過指定的位元組數目的資料量`size`參數<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-317">The <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method reads as much data as is available up to the number of bytes specified in the `size` parameter of the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span> <span data-ttu-id="58d8a-318">如果遠端主機已關閉<xref:System.Net.Sockets.Socket>已經收到連線並將所有可用的資料，<xref:System.Net.Sockets.NetworkStream.EndRead%2A>方法立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="58d8a-318">If the remote host shuts down the <xref:System.Net.Sockets.Socket> connection and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.EndRead%2A> method completes immediately and returns zero bytes.</span></span>  
  
 <span data-ttu-id="58d8a-319">若要取得已接收的資料，請呼叫<xref:System.IAsyncResult.AsyncState%2A>屬性<xref:System.IAsyncResult>，並將解壓縮所產生的狀態物件中所含的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="58d8a-319">To obtain the received data, call the <xref:System.IAsyncResult.AsyncState%2A> property of the <xref:System.IAsyncResult>, and extract the buffer contained in the resulting state object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58d8a-320">如果您收到<xref:System.IO.IOException>，檢查<xref:System.Exception.InnerException%2A>屬性來判斷如果它因<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-320">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="58d8a-321">如果是，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A>屬性取得特定的錯誤碼，並參照[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58d8a-321">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-322">在下列程式碼範例中，`myReadCallback`提供給<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>做為回呼方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-322">In the following code example, `myReadCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> as the callback method.</span></span> <span data-ttu-id="58d8a-323"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> 在中實作`myReadCallback`來完成非同步讀取呼叫啟動<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-323"><xref:System.Net.Sockets.NetworkStream.EndRead%2A> is implemented in `myReadCallback` to complete the asynchronous read call started by <xref:System.Net.Sockets.NetworkStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#5)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#5)]
 [!code-vb[NetworkStream_Async_SendAndReceive#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="58d8a-324"><paramref name="asyncResult" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-324">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="58d8a-325">基礎 <see cref="T:System.Net.Sockets.Socket" /> 已經關閉。</span><span class="sxs-lookup"><span data-stu-id="58d8a-325">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="58d8a-326">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-326">-or-</span></span> 
<span data-ttu-id="58d8a-327">存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58d8a-327">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58d8a-328"><see cref="T:System.Net.Sockets.NetworkStream" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58d8a-328">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="networkStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="58d8a-329"><see cref="T:System.IAsyncResult" />，表示非同步呼叫。</span><span class="sxs-lookup"><span data-stu-id="58d8a-329">The <see cref="T:System.IAsyncResult" /> that represents the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="58d8a-330">處理非同步寫入的結束。</span><span class="sxs-lookup"><span data-stu-id="58d8a-330">Handles the end of an asynchronous write.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-331"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 完成非同步傳送作業中啟動<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-331"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> completes the asynchronous send operation started in <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="58d8a-332">然後再呼叫<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>，您必須建立實作的回呼方法<xref:System.AsyncCallback>委派。</span><span class="sxs-lookup"><span data-stu-id="58d8a-332">Before calling <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>, you need to create a callback method that implements the <xref:System.AsyncCallback> delegate.</span></span> <span data-ttu-id="58d8a-333">這個回呼方法會在個別的執行緒中執行之後, 系統便會呼叫<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="58d8a-333">This callback method executes in a separate thread and is called by the system after <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> returns.</span></span> <span data-ttu-id="58d8a-334">回呼方法必須接受<xref:System.IAsyncResult>傳回<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>做為參數的方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-334">The callback method must accept the <xref:System.IAsyncResult> returned from the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method as a parameter.</span></span>  
  
 <span data-ttu-id="58d8a-335">在回呼方法中，呼叫<xref:System.IAsyncResult.AsyncState%2A>的屬性`IAsyncResult`參數來取得<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-335">Within the callback method, call the <xref:System.IAsyncResult.AsyncState%2A> property of the `IAsyncResult` parameter to obtain the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58d8a-336">取得之後<xref:System.Net.Sockets.NetworkStream>，您可以呼叫<xref:System.Net.Sockets.NetworkStream.EndWrite%2A>方法成功完成傳送作業，並傳回傳送的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="58d8a-336">After obtaining the <xref:System.Net.Sockets.NetworkStream>, you can call the <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method to successfully complete the send operation and return the number of bytes sent.</span></span>  
  
 <span data-ttu-id="58d8a-337"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A>方法封鎖，直到傳送要求的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="58d8a-337">The <xref:System.Net.Sockets.NetworkStream.EndWrite%2A> method blocks until the requested number of bytes are sent.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58d8a-338">如果您收到<xref:System.IO.IOException>，檢查<xref:System.Exception.InnerException%2A>屬性來判斷如果它因<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-338">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="58d8a-339">如果是，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A>屬性取得特定的錯誤碼，並參照[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58d8a-339">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-340">在下列程式碼範例中，`myWriteCallback`提供給<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>做為回呼方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-340">In the following code example, `myWriteCallback` is provided to <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> as the callback method.</span></span> <span data-ttu-id="58d8a-341"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> 在中實作`myWriteCallback`完成啟動的非同步寫入呼叫<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-341"><xref:System.Net.Sockets.NetworkStream.EndWrite%2A> is implemented in `myWriteCallback` to complete the asynchronous write call started by <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>.</span></span>  
  
 [!code-cpp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Async_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Async_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58d8a-342"><paramref name="asyncResult" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-342">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="58d8a-343">基礎 <see cref="T:System.Net.Sockets.Socket" /> 已經關閉。</span><span class="sxs-lookup"><span data-stu-id="58d8a-343">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span>  
  
<span data-ttu-id="58d8a-344">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-344">-or-</span></span> 
<span data-ttu-id="58d8a-345">寫入網路時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58d8a-345">An error occurred while writing to the network.</span></span>  
  
<span data-ttu-id="58d8a-346">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-346">-or-</span></span> 
<span data-ttu-id="58d8a-347">存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58d8a-347">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58d8a-348"><see cref="T:System.Net.Sockets.NetworkStream" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58d8a-348">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NetworkStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NetworkStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="networkStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58d8a-349">釋放 <see cref="T:System.Net.Sockets.NetworkStream" /> 所使用的所有資源。</span><span class="sxs-lookup"><span data-stu-id="58d8a-349">Releases all resources used by the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-350">這個方法會覆寫 <xref:System.Object.Finalize%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-350">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="58d8a-351">應用程式程式碼不應該呼叫這個方法。物件的<xref:System.Object.Finalize%2A>方法會自動叫用記憶體回收期間，除非呼叫已停用記憶體回收行程的最終處理<xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-351">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="58d8a-352">如需使用 Finalize 方法的詳細資訊，請參閱[Finalize 方法和解構函式](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))，[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)，並[覆寫 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="58d8a-352">For more information about using the Finalize method, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="networkStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58d8a-353">清除資料流的資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-353">Flushes data from the stream.</span></span> <span data-ttu-id="58d8a-354">這個方法是保留供日後使用。</span><span class="sxs-lookup"><span data-stu-id="58d8a-354">This method is reserved for future use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-355"><xref:System.Net.Sockets.NetworkStream.Flush%2A>方法實作<xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType>方法，但是因為<xref:System.Net.Sockets.NetworkStream>是未經緩衝處理，其不會影響網路資料流。</span><span class="sxs-lookup"><span data-stu-id="58d8a-355">The <xref:System.Net.Sockets.NetworkStream.Flush%2A> method implements the <xref:System.IO.Stream.Flush%2A?displayProperty=nameWithType> method; however, because <xref:System.Net.Sockets.NetworkStream> is not buffered, it has no effect on network streams.</span></span> <span data-ttu-id="58d8a-356">呼叫<xref:System.Net.Sockets.NetworkStream.Flush%2A>方法不會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="58d8a-356">Calling the <xref:System.Net.Sockets.NetworkStream.Flush%2A> method does not throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="58d8a-357">用來傳播應該取消這項作業之通知的取消語彙基元。</span><span class="sxs-lookup"><span data-stu-id="58d8a-357">A cancellation token used to propagate notification that this  operation should be canceled.</span></span></param>
        <summary><span data-ttu-id="58d8a-358">以非同步作業的方式，清除資料流的資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-358">Flushes data from the stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="58d8a-359">工作物件，表示非同步作業。</span><span class="sxs-lookup"><span data-stu-id="58d8a-359">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-360">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="58d8a-360">This operation will not block.</span></span> <span data-ttu-id="58d8a-361">傳回<xref:System.Threading.Tasks.Task>物件會完成之後已排清資料的資料流從<xref:System.Net.Sockets.NetworkStream>執行個體。</span><span class="sxs-lookup"><span data-stu-id="58d8a-361">The returned <xref:System.Threading.Tasks.Task> object will complete after data has been flushed from the stream for the <xref:System.Net.Sockets.NetworkStream> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Sockets.NetworkStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d8a-362">取得資料流上可以使用之資料的長度。</span><span class="sxs-lookup"><span data-stu-id="58d8a-362">Gets the length of the data available on the stream.</span></span> <span data-ttu-id="58d8a-363">這個屬性目前不受支援，而且永遠會擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-363">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="58d8a-364">資料流上可以使用之資料的長度。</span><span class="sxs-lookup"><span data-stu-id="58d8a-364">The length of the data available on the stream.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="58d8a-365">對這個屬性的任何使用。</span><span class="sxs-lookup"><span data-stu-id="58d8a-365">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Sockets.NetworkStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d8a-366">取得或設定資料流中目前的位置。</span><span class="sxs-lookup"><span data-stu-id="58d8a-366">Gets or sets the current position in the stream.</span></span> <span data-ttu-id="58d8a-367">這個屬性目前不受支援，而且永遠會擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-367">This property is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <value><span data-ttu-id="58d8a-368">在資料流中的目前位置。</span><span class="sxs-lookup"><span data-stu-id="58d8a-368">The current position in the stream.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="58d8a-369">對這個屬性的任何使用。</span><span class="sxs-lookup"><span data-stu-id="58d8a-369">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read([out] unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, size As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="networkStream.Read (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="58d8a-370"><see cref="T:System.Byte" /> 型別的陣列，這是存放讀取自 <see cref="T:System.Net.Sockets.NetworkStream" /> 的資料的記憶體位置。</span><span class="sxs-lookup"><span data-stu-id="58d8a-370">An array of type <see cref="T:System.Byte" /> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="58d8a-371"><paramref name="buffer" /> 中的位置，開始將資料儲存至其中。</span><span class="sxs-lookup"><span data-stu-id="58d8a-371">The location in <paramref name="buffer" /> to begin storing the data to.</span></span></param>
        <param name="size"><span data-ttu-id="58d8a-372">要從 <see cref="T:System.Net.Sockets.NetworkStream" /> 讀取的位元組數。</span><span class="sxs-lookup"><span data-stu-id="58d8a-372">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <summary><span data-ttu-id="58d8a-373">從 <see cref="T:System.Net.Sockets.NetworkStream" /> 讀取資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-373">Reads data from the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <returns><span data-ttu-id="58d8a-374">從 <see cref="T:System.Net.Sockets.NetworkStream" /> 讀取的位元組數，如關閉通訊端則為 0。</span><span class="sxs-lookup"><span data-stu-id="58d8a-374">The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream" />, or 0 if the socket is closed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-375">這個方法會讀取資料到`buffer`參數並傳回成功讀取的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="58d8a-375">This method reads data into the `buffer` parameter and returns the number of bytes successfully read.</span></span> <span data-ttu-id="58d8a-376">如果已關閉通訊端，<xref:System.Net.Sockets.NetworkStream.Read%2A>方法會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="58d8a-376">If the socket is closed, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method returns 0.</span></span> <span data-ttu-id="58d8a-377"><xref:System.Net.Sockets.NetworkStream.Read%2A>作業會讀取可供使用，最多所指定的位元組數目的資料量`size`參數。</span><span class="sxs-lookup"><span data-stu-id="58d8a-377">The <xref:System.Net.Sockets.NetworkStream.Read%2A> operation reads as much data as is available, up to the number of bytes specified by the `size` parameter.</span></span> <span data-ttu-id="58d8a-378">如果遠端主機關閉連線，且已收到所有可用的資料，<xref:System.Net.Sockets.NetworkStream.Read%2A>方法會立即完成，並傳回零個位元組。</span><span class="sxs-lookup"><span data-stu-id="58d8a-378">If the remote host shuts down the connection, and all available data has been received, the <xref:System.Net.Sockets.NetworkStream.Read%2A> method completes immediately and return zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58d8a-379">檢查是否<xref:System.Net.Sockets.NetworkStream>是可讀取呼叫<xref:System.Net.Sockets.NetworkStream.CanRead%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58d8a-379">Check to see if the <xref:System.Net.Sockets.NetworkStream> is readable by calling the <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property.</span></span> <span data-ttu-id="58d8a-380">如果您嘗試讀取<xref:System.Net.Sockets.NetworkStream>不是可讀取，就會發生<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-380">If you attempt to read from a <xref:System.Net.Sockets.NetworkStream> that is not readable, you will get an <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58d8a-381">如果您收到<xref:System.IO.IOException>，檢查<xref:System.Exception.InnerException%2A>屬性來判斷如果它因<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-381">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="58d8a-382">如果是，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A>屬性取得特定的錯誤碼，並參照[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58d8a-382">If so, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-383">下列程式碼範例使用<xref:System.Net.Sockets.NetworkStream.DataAvailable%2A>來判斷資料是否可供讀取。</span><span class="sxs-lookup"><span data-stu-id="58d8a-383">The following code example uses <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> to determine if data is available to be read.</span></span> <span data-ttu-id="58d8a-384">如果資料可供使用，它會讀取從<xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-384">If data is available, it reads from the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#4)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#4)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58d8a-385"><paramref name="buffer" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-385">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58d8a-386"><paramref name="offset" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="58d8a-386">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="58d8a-387">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-387">-or-</span></span> 
<span data-ttu-id="58d8a-388"><paramref name="offset" /> 參數大於 <paramref name="buffer" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="58d8a-388">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="58d8a-389">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-389">-or-</span></span> 
<span data-ttu-id="58d8a-390"><paramref name="size" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="58d8a-390">The <paramref name="size" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="58d8a-391">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-391">-or-</span></span> 
<span data-ttu-id="58d8a-392"><paramref name="size" /> 參數大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數值。</span><span class="sxs-lookup"><span data-stu-id="58d8a-392">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span>  
  
<span data-ttu-id="58d8a-393">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-393">-or-</span></span> 
<span data-ttu-id="58d8a-394">存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58d8a-394">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="58d8a-395">基礎 <see cref="T:System.Net.Sockets.Socket" /> 已經關閉。</span><span class="sxs-lookup"><span data-stu-id="58d8a-395">The underlying <see cref="T:System.Net.Sockets.Socket" /> is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58d8a-396"><see cref="T:System.Net.Sockets.NetworkStream" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58d8a-396">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span>  
  
<span data-ttu-id="58d8a-397">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-397">-or-</span></span> 
<span data-ttu-id="58d8a-398">從網路讀取時有失敗產生。</span><span class="sxs-lookup"><span data-stu-id="58d8a-398">There is a failure reading from the network.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <related type="Article" href="~/docs/framework/network-programming/using-streams-on-the-network.md"><span data-ttu-id="58d8a-399">在網路上使用資料流</span><span class="sxs-lookup"><span data-stu-id="58d8a-399">Using Streams on the Network</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Readable">
      <MemberSignature Language="C#" Value="protected bool Readable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Readable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Readable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Readable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Readable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Readable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Readable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d8a-400">取得或設定值，指出是否可以讀取 <see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-400">Gets or sets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read.</span></span></summary>
        <value><span data-ttu-id="58d8a-401">若要指示可以讀取 <see cref="T:System.Net.Sockets.NetworkStream" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-401"><see langword="true" /> to indicate that the <see cref="T:System.Net.Sockets.NetworkStream" /> can be read; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="58d8a-402">預設值為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-402">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-403">您必須衍生自<xref:System.Net.Sockets.NetworkStream>類別，以使用<xref:System.Net.Sockets.NetworkStream.Readable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58d8a-403">You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property.</span></span> <span data-ttu-id="58d8a-404">如果<xref:System.Net.Sockets.NetworkStream.Readable%2A>已`true`，<xref:System.Net.Sockets.NetworkStream>可讓呼叫<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-404">If <xref:System.Net.Sockets.NetworkStream.Readable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="58d8a-405">您也可以判斷是否<xref:System.Net.Sockets.NetworkStream>藉由檢查可公開存取是可讀取<xref:System.Net.Sockets.NetworkStream.CanRead%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58d8a-405">You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is readable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanRead%2A> property.</span></span>  
  
 <span data-ttu-id="58d8a-406"><xref:System.Net.Sockets.NetworkStream.Readable%2A>屬性時，會設定<xref:System.Net.Sockets.NetworkStream>初始化。</span><span class="sxs-lookup"><span data-stu-id="58d8a-406">The <xref:System.Net.Sockets.NetworkStream.Readable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-407">在下列程式碼範例中，`CanCommunicate`屬性檢查<xref:System.Net.Sockets.NetworkStream.Readable%2A>屬性來判斷<xref:System.Net.Sockets.NetworkStream>讀取。</span><span class="sxs-lookup"><span data-stu-id="58d8a-407">In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Readable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is readable.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanRead" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="networkStream.ReadAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="size">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d8a-408">取得或設定讀取作業封鎖等待資料的時間長度。</span><span class="sxs-lookup"><span data-stu-id="58d8a-408">Gets or sets the amount of time that a read operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="58d8a-409"><see cref="T:System.Int32" />，指定讀取作業失敗前經過的時間長度 (以毫秒為單位)。</span><span class="sxs-lookup"><span data-stu-id="58d8a-409">A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a read operation fails.</span></span> <span data-ttu-id="58d8a-410">預設值 <see cref="F:System.Threading.Timeout.Infinite" /> 會指定讀取作業不逾時。</span><span class="sxs-lookup"><span data-stu-id="58d8a-410">The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the read operation does not time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-411">如果這個屬性所指定的時間內沒有完成讀取的作業，讀取的作業會擲回<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-411">If the read operation does not complete within the time specified by this property, the read operation throws an <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58d8a-412">這個屬性會影響執行所呼叫的僅同步讀取<xref:System.Net.Sockets.NetworkStream.Read%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-412">This property affects only synchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span> <span data-ttu-id="58d8a-413">這個屬性不會影響執行所呼叫的非同步讀取<xref:System.Net.Sockets.NetworkStream.BeginRead%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-413">This property does not affect asynchronous reads performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-414">下列程式碼範例會設定為 10 毫秒的網路資料流的讀取逾時。</span><span class="sxs-lookup"><span data-stu-id="58d8a-414">The following code example sets the read time-out for a network stream to 10 milliseconds.</span></span>  
  
 [!code-csharp[NCLTcpClientSync#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58d8a-415">指定的值小於或等於零，並且不是 <see cref="F:System.Threading.Timeout.Infinite" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-415">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="networkStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="58d8a-416">不使用這個參數。</span><span class="sxs-lookup"><span data-stu-id="58d8a-416">This parameter is not used.</span></span></param>
        <param name="origin"><span data-ttu-id="58d8a-417">不使用這個參數。</span><span class="sxs-lookup"><span data-stu-id="58d8a-417">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="58d8a-418">設定資料流的目前位置為指定的數值。</span><span class="sxs-lookup"><span data-stu-id="58d8a-418">Sets the current position of the stream to the given value.</span></span> <span data-ttu-id="58d8a-419">這個方法目前不受支援，而且永遠會擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-419">This method is not currently supported and always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="58d8a-420">資料流中的位置。</span><span class="sxs-lookup"><span data-stu-id="58d8a-420">The position in the stream.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="58d8a-421">對這個屬性的任何使用。</span><span class="sxs-lookup"><span data-stu-id="58d8a-421">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="networkStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="58d8a-422">不使用這個參數。</span><span class="sxs-lookup"><span data-stu-id="58d8a-422">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="58d8a-423">設定資料流的長度。</span><span class="sxs-lookup"><span data-stu-id="58d8a-423">Sets the length of the stream.</span></span> <span data-ttu-id="58d8a-424">這個方法永遠會擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-424">This method always throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="58d8a-425">對這個屬性的任何使用。</span><span class="sxs-lookup"><span data-stu-id="58d8a-425">Any use of this property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Socket">
      <MemberSignature Language="C#" Value="protected System.Net.Sockets.Socket Socket { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Socket" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Socket" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Socket As Socket" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Net::Sockets::Socket ^ Socket { System::Net::Sockets::Socket ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Socket : System.Net.Sockets.Socket" Usage="System.Net.Sockets.NetworkStream.Socket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d8a-426">取得基礎 <see cref="T:System.Net.Sockets.Socket" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-426">Gets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="58d8a-427">表示基礎網路連接的 <see cref="T:System.Net.Sockets.Socket" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-427">A <see cref="T:System.Net.Sockets.Socket" /> that represents the underlying network connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-428">類別衍生自<xref:System.Net.Sockets.NetworkStream>可以使用這個屬性，以取得基礎<xref:System.Net.Sockets.Socket>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-428">Classes deriving from <xref:System.Net.Sockets.NetworkStream> can use this property to get the underlying <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="58d8a-429">使用基礎<xref:System.Net.Sockets.Socket>傳回從<xref:System.Net.Sockets.NetworkStream.Socket%2A>屬性，如果您需要存取超過其<xref:System.Net.Sockets.NetworkStream>提供。</span><span class="sxs-lookup"><span data-stu-id="58d8a-429">Use the underlying <xref:System.Net.Sockets.Socket> returned from the <xref:System.Net.Sockets.NetworkStream.Socket%2A> property if you require access beyond that which <xref:System.Net.Sockets.NetworkStream> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58d8a-430">這個屬性就只能透過此類別或衍生的類別存取。</span><span class="sxs-lookup"><span data-stu-id="58d8a-430">This property is accessible only through this class or a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-431">下列程式碼範例會擷取基礎<xref:System.Net.Sockets.Socket>確認作用中連線。</span><span class="sxs-lookup"><span data-stu-id="58d8a-431">The following code example retrieves the underlying <xref:System.Net.Sockets.Socket> to verify an active connection.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="58d8a-432">釋放 <see cref="T:System.Net.Sockets.NetworkStream" /> 所使用的所有資源。</span><span class="sxs-lookup"><span data-stu-id="58d8a-432">Releases all resources used by the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="58d8a-433">`Dispose` 使用完畢時，請呼叫 <xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-433">Call `Dispose` when you are finished using the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58d8a-434">`Dispose` 方法會將 <xref:System.Net.Sockets.NetworkStream> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="58d8a-434">The `Dispose` method leaves the <xref:System.Net.Sockets.NetworkStream> in an unusable state.</span></span> <span data-ttu-id="58d8a-435">之後呼叫`Dispose`，您必須釋放所有的參考<xref:System.Net.Sockets.NetworkStream>讓記憶體回收行程可以回收記憶體，<xref:System.Net.Sockets.NetworkStream>所佔用。</span><span class="sxs-lookup"><span data-stu-id="58d8a-435">After calling `Dispose`, you must release all references to the <xref:System.Net.Sockets.NetworkStream> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.NetworkStream> was occupying.</span></span> <span data-ttu-id="58d8a-436">如需使用 Dispose 方法的詳細資訊，請參閱[清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="58d8a-436">For more information about using the Dispose method, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

> [!NOTE]
> <span data-ttu-id="58d8a-437">在您釋放最後一個 `Dispose` 參考之前，請務必呼叫 <xref:System.Net.Sockets.NetworkStream>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-437">Always call `Dispose` before you release your last reference to the <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="58d8a-438">否則，它所使用的資源不會釋放記憶體回收行程呼叫之前<xref:System.Net.Sockets.NetworkStream>物件的 Finalize 方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-438">Otherwise, the resources it is using are not freed until the garbage collector calls the <xref:System.Net.Sockets.NetworkStream> object's Finalize method.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="networkStream.Write (buffer, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="58d8a-439"><see cref="T:System.Byte" /> 型別的陣列，包含要寫入至 <see cref="T:System.Net.Sockets.NetworkStream" /> 的資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-439">An array of type <see cref="T:System.Byte" /> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <param name="offset"><span data-ttu-id="58d8a-440"><paramref name="buffer" /> 中的位置，要開始自該處寫入資料。</span><span class="sxs-lookup"><span data-stu-id="58d8a-440">The location in <paramref name="buffer" /> from which to start writing data.</span></span></param>
        <param name="size"><span data-ttu-id="58d8a-441">要寫入至 <see cref="T:System.Net.Sockets.NetworkStream" /> 的位元組數。</span><span class="sxs-lookup"><span data-stu-id="58d8a-441">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></param>
        <summary><span data-ttu-id="58d8a-442">寫入資料至 <see cref="T:System.Net.Sockets.NetworkStream" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-442">Writes data to the <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-443"><xref:System.Net.Sockets.NetworkStream.Write%2A>方法會啟動位於指定之`offset`，並將傳送`size`位元組的內容從`buffer`到網路。</span><span class="sxs-lookup"><span data-stu-id="58d8a-443">The <xref:System.Net.Sockets.NetworkStream.Write%2A> method starts at the specified `offset` and sends `size` bytes from the contents of `buffer` to the network.</span></span> <span data-ttu-id="58d8a-444"><xref:System.Net.Sockets.NetworkStream.Write%2A>方法會封鎖，直到在傳送要求的位元組數目或<xref:System.Net.Sockets.SocketException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="58d8a-444">The <xref:System.Net.Sockets.NetworkStream.Write%2A> method blocks until the requested number of bytes is sent or a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="58d8a-445">如果您收到<xref:System.Net.Sockets.SocketException>，使用<xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>屬性取得特定的錯誤碼，並參照[Windows Sockets 第 2 版 API 錯誤碼](/windows/desktop/winsock/windows-sockets-error-codes-2)錯誤的詳細描述的文件。</span><span class="sxs-lookup"><span data-stu-id="58d8a-445">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58d8a-446">檢查是否<xref:System.Net.Sockets.NetworkStream>是可寫入存取<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58d8a-446">Check to see if the <xref:System.Net.Sockets.NetworkStream> is writable by accessing the <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property.</span></span> <span data-ttu-id="58d8a-447">如果您嘗試寫入<xref:System.Net.Sockets.NetworkStream>不是可寫入，就會發生<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-447">If you attempt to write to a <xref:System.Net.Sockets.NetworkStream> that is not writable, you will get an <xref:System.IO.IOException>.</span></span> <span data-ttu-id="58d8a-448">如果您收到<xref:System.IO.IOException>，檢查<xref:System.Exception.InnerException%2A>屬性來判斷如果它因<xref:System.Net.Sockets.SocketException>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-448">If you receive an <xref:System.IO.IOException>, check the <xref:System.Exception.InnerException%2A> property to determine if it was caused by a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-449">下列程式碼範例會檢查以查看是否<xref:System.Net.Sockets.NetworkStream>是可寫入。</span><span class="sxs-lookup"><span data-stu-id="58d8a-449">The following code example checks to see whether the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span> <span data-ttu-id="58d8a-450">如果是，然後<xref:System.Net.Sockets.NetworkStream.Write%2A>用來寫入小型訊息。</span><span class="sxs-lookup"><span data-stu-id="58d8a-450">If it is, then <xref:System.Net.Sockets.NetworkStream.Write%2A> is used to write a small message.</span></span>  
  
 [!code-cpp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CPP/source.cpp#3)]
 [!code-csharp[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/CS/source.cs#3)]
 [!code-vb[NetworkStream_Synch_SendAndReceive#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Synch_SendAndReceive/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="58d8a-451"><paramref name="buffer" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-451">The <paramref name="buffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58d8a-452"><paramref name="offset" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="58d8a-452">The <paramref name="offset" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="58d8a-453">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-453">-or-</span></span> 
<span data-ttu-id="58d8a-454"><paramref name="offset" /> 參數大於 <paramref name="buffer" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="58d8a-454">The <paramref name="offset" /> parameter is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="58d8a-455">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-455">-or-</span></span> 
<span data-ttu-id="58d8a-456"><paramref name="size" /> 參數小於 0。</span><span class="sxs-lookup"><span data-stu-id="58d8a-456">The <paramref name="size" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="58d8a-457">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-457">-or-</span></span> 
<span data-ttu-id="58d8a-458"><paramref name="size" /> 參數大於 <paramref name="buffer" /> 的長度減去 <paramref name="offset" /> 參數值。</span><span class="sxs-lookup"><span data-stu-id="58d8a-458">The <paramref name="size" /> parameter is greater than the length of <paramref name="buffer" /> minus the value of the <paramref name="offset" /> parameter.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="58d8a-459">寫入網路時發生失敗。</span><span class="sxs-lookup"><span data-stu-id="58d8a-459">There was a failure while writing to the network.</span></span>  
  
<span data-ttu-id="58d8a-460">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-460">-or-</span></span> 
<span data-ttu-id="58d8a-461">存取通訊端時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="58d8a-461">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="58d8a-462"><see cref="T:System.Net.Sockets.NetworkStream" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="58d8a-462">The <see cref="T:System.Net.Sockets.NetworkStream" /> is closed.</span></span>  
  
<span data-ttu-id="58d8a-463">-或-</span><span class="sxs-lookup"><span data-stu-id="58d8a-463">-or-</span></span> 
<span data-ttu-id="58d8a-464">從網路進行讀取時發生失敗。</span><span class="sxs-lookup"><span data-stu-id="58d8a-464">There was a failure reading from the network.</span></span></exception>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Writeable" />
      </Docs>
    </Member>
    <Member MemberName="Writeable">
      <MemberSignature Language="C#" Value="protected bool Writeable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Writeable" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.Writeable" />
      <MemberSignature Language="VB.NET" Value="Protected Property Writeable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Writeable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Writeable : bool with get, set" Usage="System.Net.Sockets.NetworkStream.Writeable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d8a-465">取得值，指出 <see cref="T:System.Net.Sockets.NetworkStream" /> 是否可寫入。</span><span class="sxs-lookup"><span data-stu-id="58d8a-465">Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream" /> is writable.</span></span></summary>
        <value><span data-ttu-id="58d8a-466">如果可以寫入資料至資料流，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-466"><see langword="true" /> if data can be written to the stream; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="58d8a-467">預設值為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-467">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-468">您必須衍生自<xref:System.Net.Sockets.NetworkStream>類別，以使用<xref:System.Net.Sockets.NetworkStream.Writeable%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58d8a-468">You must derive from the <xref:System.Net.Sockets.NetworkStream> class to use the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property.</span></span> <span data-ttu-id="58d8a-469">如果<xref:System.Net.Sockets.NetworkStream.Writeable%2A>已`true`，<xref:System.Net.Sockets.NetworkStream>可讓呼叫<xref:System.Net.Sockets.NetworkStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-469">If <xref:System.Net.Sockets.NetworkStream.Writeable%2A> is `true`, <xref:System.Net.Sockets.NetworkStream> allows calls to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="58d8a-470">您也可以判斷是否<xref:System.Net.Sockets.NetworkStream>是藉由檢查可公開存取的可寫入<xref:System.Net.Sockets.NetworkStream.CanWrite%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="58d8a-470">You can also determine whether a <xref:System.Net.Sockets.NetworkStream> is writable by checking the publicly accessible <xref:System.Net.Sockets.NetworkStream.CanWrite%2A> property.</span></span>  
  
 <span data-ttu-id="58d8a-471"><xref:System.Net.Sockets.NetworkStream.Writeable%2A>屬性時，會設定<xref:System.Net.Sockets.NetworkStream>初始化。</span><span class="sxs-lookup"><span data-stu-id="58d8a-471">The <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property is set when the <xref:System.Net.Sockets.NetworkStream> is initialized.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-472">在下列程式碼範例中，`CanCommunicate`屬性檢查<xref:System.Net.Sockets.NetworkStream.Writeable%2A>屬性來判斷<xref:System.Net.Sockets.NetworkStream>是可寫入。</span><span class="sxs-lookup"><span data-stu-id="58d8a-472">In the following code example, the `CanCommunicate` property checks the <xref:System.Net.Sockets.NetworkStream.Writeable%2A> property to determine if the <xref:System.Net.Sockets.NetworkStream> is writable.</span></span>  
  
 [!code-cpp[NetworkStream_Protected_Members#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CPP/source.cpp#1)]
 [!code-csharp[NetworkStream_Protected_Members#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NetworkStream_Protected_Members/CS/source.cs#1)]
 [!code-vb[NetworkStream_Protected_Members#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NetworkStream_Protected_Members/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.NetworkStream.CanWrite" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.Readable" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int size, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 size, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.NetworkStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int size, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="networkStream.WriteAsync (buffer, offset, size, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="size">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Sockets.NetworkStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="58d8a-473">取得或設定寫入作業封鎖等待資料的時間長度。</span><span class="sxs-lookup"><span data-stu-id="58d8a-473">Gets or sets the amount of time that a write operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="58d8a-474"><see cref="T:System.Int32" />，指定寫入作業失敗前經過的時間長度 (以毫秒為單位)。</span><span class="sxs-lookup"><span data-stu-id="58d8a-474">A <see cref="T:System.Int32" /> that specifies the amount of time, in milliseconds, that will elapse before a write operation fails.</span></span> <span data-ttu-id="58d8a-475">預設值 <see cref="F:System.Threading.Timeout.Infinite" /> 會指定寫入作業不逾時。</span><span class="sxs-lookup"><span data-stu-id="58d8a-475">The default value, <see cref="F:System.Threading.Timeout.Infinite" />, specifies that the write operation does not time out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="58d8a-476">如果這個屬性所指定的時間內沒有完成寫入作業，寫入作業會擲回<xref:System.IO.IOException>。</span><span class="sxs-lookup"><span data-stu-id="58d8a-476">If the write operation does not complete within the time specified by this property, the write operation throws a <xref:System.IO.IOException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="58d8a-477">這個屬性會影響執行藉由呼叫只同步寫入作業<xref:System.Net.Sockets.NetworkStream.Write%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-477">This property affects only synchronous write operations performed by calling the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="58d8a-478">這個屬性不會影響執行所呼叫的非同步寫入<xref:System.Net.Sockets.NetworkStream.BeginWrite%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="58d8a-478">This property does not affect asynchronous writes performed by calling the <xref:System.Net.Sockets.NetworkStream.BeginWrite%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="58d8a-479">下列程式碼範例會設定為 10 毫秒的網路資料流的寫入逾時。</span><span class="sxs-lookup"><span data-stu-id="58d8a-479">The following code example sets the write time-out for a network stream to 10 milliseconds.</span></span>  
  
 [!code-cpp[NCLTcpServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclTcpServerSync/cpp/tcplistener.cpp#0)]
 [!code-csharp[NCLTcpServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclTcpServerSync/CS/tcplistener.cs#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="58d8a-480">指定的值小於或等於零，並且不是 <see cref="F:System.Threading.Timeout.Infinite" />。</span><span class="sxs-lookup"><span data-stu-id="58d8a-480">The value specified is less than or equal to zero and is not <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>