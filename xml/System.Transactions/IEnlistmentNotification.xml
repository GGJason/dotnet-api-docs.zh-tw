<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0dcde52862800efd6574c0aa26e24371b65d56c6" /><Meta Name="ms.sourcegitcommit" Value="3efce15f3841385ee3ba24bd71ff0c0cf9a47815" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="04/03/2019" /><Meta Name="ms.locfileid" Value="58873913" /></Metadata><TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <TypeSignature Language="F#" Value="type IEnlistmentNotification = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="10a61-101">描述資源管理員應該實作的介面，可提供兩階段認可告知回呼，讓交易管理員用來登記參與。</span><span class="sxs-lookup"><span data-stu-id="10a61-101">Describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10a61-102">為了讓資源管理員以參與交易，它必須在透過交易管理員在交易中登記。</span><span class="sxs-lookup"><span data-stu-id="10a61-102">In order for a resource manager to participate in a transaction, it must enlist in the transaction through the transaction manager.</span></span> <span data-ttu-id="10a61-103"><xref:System.Transactions.Transaction> 類別會定義一組提供這個功能的方法，其名稱開頭為 `Enlist`。</span><span class="sxs-lookup"><span data-stu-id="10a61-103">The <xref:System.Transactions.Transaction> class defines a set of methods whose names begin with `Enlist` that provide this functionality.</span></span> <span data-ttu-id="10a61-104">不同的 `Enlist` 方法會對應至資源管理員可能具有之不同型別的登記。</span><span class="sxs-lookup"><span data-stu-id="10a61-104">The different `Enlist` methods correspond to the different types of enlistment that a resource manager may have.</span></span>  
  
 <span data-ttu-id="10a61-105">這個類別描述資源管理員應該實作提供兩階段認可告知回呼來登記參與交易管理員的介面。</span><span class="sxs-lookup"><span data-stu-id="10a61-105">This class describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</span></span> <span data-ttu-id="10a61-106">每個資源管理員的實作<xref:System.Transactions.IEnlistmentNotification>介面，您應該將它登錄使用<xref:System.Transactions.Transaction.EnlistVolatile%2A>方法或<xref:System.Transactions.Transaction.EnlistDurable%2A>方法<xref:System.Transactions.Transaction>類別，根據您的資源是永久性或變動性。</span><span class="sxs-lookup"><span data-stu-id="10a61-106">For each resource manager's implementation of the <xref:System.Transactions.IEnlistmentNotification> interface, you should enlist it using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method or the <xref:System.Transactions.Transaction.EnlistDurable%2A> method of the <xref:System.Transactions.Transaction> class, depending on whether your resource is volatile or durable.</span></span> <span data-ttu-id="10a61-107">如需有關登記和 2PC 的詳細資訊，請參閱[在交易中的參與者登記的資源](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md)並[認可交易，以在單一階段和多重階段](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md)分別。</span><span class="sxs-lookup"><span data-stu-id="10a61-107">For more information on enlistment and 2PC, see [Enlisting Resources as Participants in a Transaction](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md) and [Committing a Transaction in Single-Phase and Multi-Phase](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md) respectively.</span></span>  
  
 <span data-ttu-id="10a61-108">交易管理員在不同的兩階段交易認可通訊協定階段告知登記的物件，遵循以下方法。</span><span class="sxs-lookup"><span data-stu-id="10a61-108">The transaction manager notifies the enlisted object at different phases of the Two Phase Commit Protocol by the following methods.</span></span>  
  
|<span data-ttu-id="10a61-109">方法</span><span class="sxs-lookup"><span data-stu-id="10a61-109">Method</span></span>|<span data-ttu-id="10a61-110">描述</span><span class="sxs-lookup"><span data-stu-id="10a61-110">Description</span></span>|  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|<span data-ttu-id="10a61-111">這個方法的登記的物件回呼，交易管理員的交易，在第一階段時用作交易管理員會要求參與者是否能認可的交易。</span><span class="sxs-lookup"><span data-stu-id="10a61-111">This method of an enlisted object is used as a callback by the Transaction Manager during the first phase of a transaction, when the transaction manager asks participants whether they can commit the transaction.</span></span>|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|<span data-ttu-id="10a61-112">如果交易已認可，交易管理員會在交易的第二個階段內，使用這個方法的登記的物件來當做回呼。</span><span class="sxs-lookup"><span data-stu-id="10a61-112">This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is committed.</span></span>|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|<span data-ttu-id="10a61-113">如果交易已中止 （亦即已回復），交易管理員會在交易的第二個階段內，使用這個方法的登記的物件來當做回呼。</span><span class="sxs-lookup"><span data-stu-id="10a61-113">This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is aborted (that is, rolled back).</span></span>|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|<span data-ttu-id="10a61-114">這種登記的物件的方法如果會使用當做回呼，交易管理員在交易的第二個階段 transakce je zpochybněn。</span><span class="sxs-lookup"><span data-stu-id="10a61-114">This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is in doubt.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="10a61-115">您應該注意循序或以特定順序，不可能會傳送通知。</span><span class="sxs-lookup"><span data-stu-id="10a61-115">You should be aware that notifications might not be sent sequentially, or in a particular order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10a61-116">下列範例示範實作這個介面，以及將物件登記在交易中使用的參與者<xref:System.Transactions.Transaction.EnlistVolatile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="10a61-116">The following example shows an implementation of this interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.</span></span>  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
    <related type="Article" href="https://msdn.microsoft.com/library/786a12c2-d530-49f4-9c59-5c973e15a11d"><span data-ttu-id="10a61-117">將資源登記成為交易中的參與者</span><span class="sxs-lookup"><span data-stu-id="10a61-117">Enlisting Resources as Participants in a Transaction</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/694ea153-e4db-41ae-96ac-9ac66dcb69a9"><span data-ttu-id="10a61-118">在單一階段和多重階段中認可交易</span><span class="sxs-lookup"><span data-stu-id="10a61-118">Committing a Transaction in Single-Phase and Multi-Phase</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Commit enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment"><span data-ttu-id="10a61-119"><see cref="T:System.Transactions.Enlistment" /> 物件，用來傳送回應給交易管理員。</span><span class="sxs-lookup"><span data-stu-id="10a61-119">An <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span></span></param>
        <summary><span data-ttu-id="10a61-120">告知登記的物件正在認可交易。</span><span class="sxs-lookup"><span data-stu-id="10a61-120">Notifies an enlisted object that a transaction is being committed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10a61-121">它會指示所有參與者都認可交易時，交易管理員會呼叫這個方法的登記的物件承諾，第二個階段。</span><span class="sxs-lookup"><span data-stu-id="10a61-121">The transaction manager calls this method of an enlisted object during the second phase of a commitment, when it instructs all participants to commit the transaction.</span></span>  
  
 <span data-ttu-id="10a61-122">資源管理員應該執行任何必要的工作以完成交易，並接著通知 TM 已完成藉由呼叫<xref:System.Transactions.Enlistment.Done%2A>方法`enlistment`參數。</span><span class="sxs-lookup"><span data-stu-id="10a61-122">The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the <xref:System.Transactions.Enlistment.Done%2A> method on the `enlistment` parameter.</span></span>  
  
 <span data-ttu-id="10a61-123">如果資源管理員已永久，登錄，但不會回應呼叫<xref:System.Transactions.Enlistment.Done%2A>方法中，交易管理員會確定資源管理員已收到<xref:System.Transactions.IEnlistmentNotification.Commit%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="10a61-123">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the <xref:System.Transactions.IEnlistmentNotification.Commit%2A> call.</span></span> <span data-ttu-id="10a61-124">此情況下，交易管理員會等候回應，並維護此交易的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="10a61-124">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="10a61-125">如果<xref:System.Transactions.Enlistment.Done%2A>是絕不會呼叫，這項資訊是有關無限期保留在記憶體中或全系統資源。</span><span class="sxs-lookup"><span data-stu-id="10a61-125">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="10a61-126">這會導致無法回收資源。</span><span class="sxs-lookup"><span data-stu-id="10a61-126">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="10a61-127">如果是分散式的交易，這可能最終會填滿突然停止 MSDTC 程序的 MSDTC 記錄檔。</span><span class="sxs-lookup"><span data-stu-id="10a61-127">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="10a61-128">在所管理的交易的情況下<xref:System.Transactions>，這會導致資源管理員的程序的記憶體耗用量漸進且持續增加。</span><span class="sxs-lookup"><span data-stu-id="10a61-128">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="10a61-129">因此，很重要，您可以呼叫<xref:System.Transactions.Enlistment.Done%2A>方法，您的資源管理員完成後您準備工作。</span><span class="sxs-lookup"><span data-stu-id="10a61-129">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member InDoubt : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.InDoubt enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment"><span data-ttu-id="10a61-130"><see cref="T:System.Transactions.Enlistment" /> 物件，用來傳送回應給交易管理員。</span><span class="sxs-lookup"><span data-stu-id="10a61-130">An <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span></span></param>
        <summary><span data-ttu-id="10a61-131">告知登記的物件交易的狀態不確定。</span><span class="sxs-lookup"><span data-stu-id="10a61-131">Notifies an enlisted object that the status of a transaction is in doubt.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10a61-132">當交易管理員已叫用的單一永久性資源的單一階段認可作業，並接著永久性資源的連線中斷之前取得交易結果時，此方法稱為動態資源。</span><span class="sxs-lookup"><span data-stu-id="10a61-132">This method is called for volatile resources when the transaction manager has invoked a single phase commit operation to a single durable resource, and then connection to the durable resource was lost prior to getting the transaction result.</span></span> <span data-ttu-id="10a61-133">此時，您無法安全地判斷這項交易的結果。</span><span class="sxs-lookup"><span data-stu-id="10a61-133">At that point, the transaction outcome cannot be safely determined.</span></span>  
  
 <span data-ttu-id="10a61-134">作為<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>是視為最終狀態的交易，您不應該呼叫<xref:System.Transactions.IEnlistmentNotification.Commit%2A>或是<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>之後呼叫<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>。</span><span class="sxs-lookup"><span data-stu-id="10a61-134">As <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> is considered to be a final state for a transaction, you should not call <xref:System.Transactions.IEnlistmentNotification.Commit%2A> or <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> after calling <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="10a61-135">變動性資源的這個方法的實作應該執行任何修復或內含項目作業它了解在受影響的資料。</span><span class="sxs-lookup"><span data-stu-id="10a61-135">Your implementation of this method for the volatile resource should perform whatever recovery or containment operation it understands on the affected data.</span></span>  <span data-ttu-id="10a61-136">它還必須呼叫<xref:System.Transactions.Enlistment.Done%2A>上的方法上`enlistment`完成其工作時的參數。</span><span class="sxs-lookup"><span data-stu-id="10a61-136">It must also call the <xref:System.Transactions.Enlistment.Done%2A> method on the on the `enlistment` parameter when it has finished its work.</span></span>  
  
 <span data-ttu-id="10a61-137">如果資源管理員已永久，登錄，但不會回應呼叫<xref:System.Transactions.Enlistment.Done%2A>方法中，交易管理員會確定資源管理員已收到<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="10a61-137">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> call.</span></span> <span data-ttu-id="10a61-138">此情況下，交易管理員會等候回應，並維護此交易的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="10a61-138">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="10a61-139">如果<xref:System.Transactions.Enlistment.Done%2A>是絕不會呼叫，這項資訊是有關無限期保留在記憶體中或全系統資源。</span><span class="sxs-lookup"><span data-stu-id="10a61-139">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="10a61-140">這會導致無法回收資源。</span><span class="sxs-lookup"><span data-stu-id="10a61-140">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="10a61-141">如果是分散式的交易，這可能最終會填滿突然停止 MSDTC 程序的 MSDTC 記錄檔。</span><span class="sxs-lookup"><span data-stu-id="10a61-141">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="10a61-142">在所管理的交易的情況下<xref:System.Transactions>，這會導致資源管理員的程序的記憶體耗用量漸進且持續增加。</span><span class="sxs-lookup"><span data-stu-id="10a61-142">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="10a61-143">因此，很重要，您可以呼叫<xref:System.Transactions.Enlistment.Done%2A>方法，您的資源管理員完成後您準備工作。</span><span class="sxs-lookup"><span data-stu-id="10a61-143">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberSignature Language="F#" Value="abstract member Prepare : System.Transactions.PreparingEnlistment -&gt; unit" Usage="iEnlistmentNotification.Prepare preparingEnlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment"><span data-ttu-id="10a61-144"><see cref="T:System.Transactions.PreparingEnlistment" /> 物件，用來傳送回應給交易管理員。</span><span class="sxs-lookup"><span data-stu-id="10a61-144">A <see cref="T:System.Transactions.PreparingEnlistment" /> object used to send a response to the transaction manager.</span></span></param>
        <summary><span data-ttu-id="10a61-145">告知登記的物件正在準備認可交易。</span><span class="sxs-lookup"><span data-stu-id="10a61-145">Notifies an enlisted object that a transaction is being prepared for commitment.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10a61-146">交易管理員時呼叫這個方法的登記的資源管理員在階段 1 的承諾，它會要求參與者是否能認可的交易。</span><span class="sxs-lookup"><span data-stu-id="10a61-146">The transaction manager calls this method of an enlisted resource manager during the phase 1 of a commitment, when it asks participants whether they can commit the transaction.</span></span>  
  
 <span data-ttu-id="10a61-147">當您實作永久性資源管理員時，您應該記錄您在這個階段期間準備記錄。</span><span class="sxs-lookup"><span data-stu-id="10a61-147">When you are implementing a durable resource manager, you should log your prepare record during this phase.</span></span> <span data-ttu-id="10a61-148">該記錄應該包含所有必要的資訊，以便執行復原。</span><span class="sxs-lookup"><span data-stu-id="10a61-148">The record should contain all the necessary information to perform recovery.</span></span> <span data-ttu-id="10a61-149">這包括<xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A>屬性，它會傳遞至中的交易管理員<xref:System.Transactions.TransactionManager.Reenlist%2A>在復原期間的方法。</span><span class="sxs-lookup"><span data-stu-id="10a61-149">This includes the <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> property, which is passed to the transaction manager in the <xref:System.Transactions.TransactionManager.Reenlist%2A> method during recovery.</span></span> <span data-ttu-id="10a61-150">如需有關復原的詳細資訊，請參閱[執行復原](https://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)。</span><span class="sxs-lookup"><span data-stu-id="10a61-150">For more information on recovery, see [Performing Recovery](https://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).</span></span>  
  
 <span data-ttu-id="10a61-151">您的資源管理員應該完成所有工作，必須完成之前呼叫<xref:System.Transactions.PreparingEnlistment.Prepared%2A>方法的`preparingEnlistment`參數來指出它已投票認可。</span><span class="sxs-lookup"><span data-stu-id="10a61-151">Your resource manager should complete all work that must be finished before calling the <xref:System.Transactions.PreparingEnlistment.Prepared%2A> method of the `preparingEnlistment` parameter to indicate its vote for commitment.</span></span> <span data-ttu-id="10a61-152">您應該要確定這完成之前，認可、 復原或不確定接收任何第 2 階段通知這類項目。</span><span class="sxs-lookup"><span data-stu-id="10a61-152">You should make sure that this is accomplished before receiving any phase 2 notification such as commit, rollback or in doubt.</span></span> <span data-ttu-id="10a61-153">這是因為第 2 階段告知會發生並內嵌呼叫的相同執行緒上<xref:System.Transactions.PreparingEnlistment.Prepared%2A>第 1 階段中的方法。</span><span class="sxs-lookup"><span data-stu-id="10a61-153">This is because phase 2 notifications can happen inline on the same thread that called the <xref:System.Transactions.PreparingEnlistment.Prepared%2A> method in phase 1.</span></span> <span data-ttu-id="10a61-154">因此，當您預期在收到第二階段告知之前會完成 <xref:System.Transactions.PreparingEnlistment.Prepared%2A> 呼叫時，請勿在此呼叫之後執行任何工作 (例如，釋放鎖定)。</span><span class="sxs-lookup"><span data-stu-id="10a61-154">As such, you should not do any work after the <xref:System.Transactions.PreparingEnlistment.Prepared%2A> call (for example, releasing locks) that you would expect to have completed before receiving the phase 2 notifications.</span></span>  
  
 <span data-ttu-id="10a61-155">您也可以呼叫的方法`preparingEnlistment`參數，以指定為可復原的投票。</span><span class="sxs-lookup"><span data-stu-id="10a61-155">You can also call the method of the `preparingEnlistment` parameter to indicate a vote for rollback.</span></span>  
  
 <span data-ttu-id="10a61-156">如果您想要觀察，並做出回應的交易，進度物件沒有參與它，此方法的實作應該呼叫<xref:System.Transactions.Enlistment.Done%2A>方法的`preparingEnlistment`完成其工作時的參數。</span><span class="sxs-lookup"><span data-stu-id="10a61-156">If you want the object to merely observe and react to the progress of the transaction, without participating in it, your implementation of this method should call the <xref:System.Transactions.Enlistment.Done%2A> method of the `preparingEnlistment` parameter when it has finished its work.</span></span> <span data-ttu-id="10a61-157">如此一來，您的資源管理員不會收到任何第 2 階段通知。</span><span class="sxs-lookup"><span data-stu-id="10a61-157">By doing so, your resource manager would not receive any phase 2 notification.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Rollback : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Rollback enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment"><span data-ttu-id="10a61-158"><see cref="T:System.Transactions.Enlistment" /> 物件，用來傳送回應給交易管理員。</span><span class="sxs-lookup"><span data-stu-id="10a61-158">A <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span></span></param>
        <summary><span data-ttu-id="10a61-159">告知登記的物件正在復原 (中止) 交易。</span><span class="sxs-lookup"><span data-stu-id="10a61-159">Notifies an enlisted object that a transaction is being rolled back (aborted).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10a61-160">當交易正在復原 （中止），因為一或多個交易參與者無法認可交易時，交易管理員會呼叫此方法登記的物件。</span><span class="sxs-lookup"><span data-stu-id="10a61-160">The transaction manager calls this method of an enlisted object when the transaction is being rolled back (aborted) due to the inability of one or more transaction participants to commit the transaction.</span></span>  
  
 <span data-ttu-id="10a61-161">資源管理員應該執行任何必要的工作以完成交易，並接著通知 TM 已完成藉由呼叫<xref:System.Transactions.Enlistment.Done%2A>方法`enlistment`參數。</span><span class="sxs-lookup"><span data-stu-id="10a61-161">The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the <xref:System.Transactions.Enlistment.Done%2A> method on the `enlistment` parameter.</span></span>  
  
 <span data-ttu-id="10a61-162">如果資源管理員已永久，登錄，但不會回應呼叫<xref:System.Transactions.Enlistment.Done%2A>方法中，交易管理員會確定資源管理員已收到<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="10a61-162">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> call.</span></span> <span data-ttu-id="10a61-163">此情況下，交易管理員會等候回應，並維護此交易的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="10a61-163">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="10a61-164">如果<xref:System.Transactions.Enlistment.Done%2A>是絕不會呼叫，這項資訊是有關無限期保留在記憶體中或全系統資源。</span><span class="sxs-lookup"><span data-stu-id="10a61-164">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="10a61-165">這會導致無法回收資源。</span><span class="sxs-lookup"><span data-stu-id="10a61-165">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="10a61-166">如果是分散式的交易，這可能最終會填滿突然停止 MSDTC 程序的 MSDTC 記錄檔。</span><span class="sxs-lookup"><span data-stu-id="10a61-166">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="10a61-167">在所管理的交易的情況下<xref:System.Transactions>，這會導致資源管理員的程序的記憶體耗用量漸進且持續增加。</span><span class="sxs-lookup"><span data-stu-id="10a61-167">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="10a61-168">因此，很重要，您可以呼叫<xref:System.Transactions.Enlistment.Done%2A>方法，您的資源管理員完成後您準備工作。</span><span class="sxs-lookup"><span data-stu-id="10a61-168">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>