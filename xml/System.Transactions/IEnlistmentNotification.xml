<Type Name="IEnlistmentNotification" FullName="System.Transactions.IEnlistmentNotification">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ce7c186bfa7974506e6f23870b923c6bfab1a333" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36406443" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IEnlistmentNotification" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEnlistmentNotification" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.IEnlistmentNotification" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEnlistmentNotification" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEnlistmentNotification" />
  <TypeSignature Language="F#" Value="type IEnlistmentNotification = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9fe94-101">Describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9fe94-101">Describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe94-102">資源管理員可以參與交易的順序，它必須在交易管理員的交易中登記。</span><span class="sxs-lookup"><span data-stu-id="9fe94-102">In order for a resource manager to participate in a transaction, it must enlist in the transaction through the transaction manager.</span></span> <span data-ttu-id="9fe94-103"><xref:System.Transactions.Transaction> 類別會定義一組提供這個功能的方法，其名稱開頭為 `Enlist`。</span><span class="sxs-lookup"><span data-stu-id="9fe94-103">The <xref:System.Transactions.Transaction> class defines a set of methods whose names begin with `Enlist` that provide this functionality.</span></span> <span data-ttu-id="9fe94-104">不同`Enlist`方法會對應至不同類型的資源管理員可能具有的編列。</span><span class="sxs-lookup"><span data-stu-id="9fe94-104">The different `Enlist` methods correspond to the different types of enlistment that a resource maanger may have.</span></span>  
  
 <span data-ttu-id="9fe94-105">這個類別描述資源管理員應該在登記參與時，交易管理員提供兩階段認可通知回呼實作的介面。</span><span class="sxs-lookup"><span data-stu-id="9fe94-105">This class describes an interface that a resource manager should implement to provide two phase commit notification callbacks for the transaction manager upon enlisting for participation.</span></span> <span data-ttu-id="9fe94-106">每個資源管理員的實作<xref:System.Transactions.IEnlistmentNotification>介面，您應該將它登錄使用<xref:System.Transactions.Transaction.EnlistVolatile%2A>方法或<xref:System.Transactions.Transaction.EnlistDurable%2A>方法<xref:System.Transactions.Transaction>類別，根據您的資源是變動性或永久性。</span><span class="sxs-lookup"><span data-stu-id="9fe94-106">For each resource manager's implementation of the <xref:System.Transactions.IEnlistmentNotification> interface, you should enlist it using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method or the <xref:System.Transactions.Transaction.EnlistDurable%2A> method of the <xref:System.Transactions.Transaction> class, depending on whether your resource is volatile or durable.</span></span> <span data-ttu-id="9fe94-107">登記和 2PC 的詳細資訊，請參閱[編列的資源，以在交易中的參與者身分](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md)和[認可的交易中單一和多重階段](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md)分別。</span><span class="sxs-lookup"><span data-stu-id="9fe94-107">For more information on enlistment and 2PC, see [Enlisting Resources as Participants in a Transaction](~/docs/framework/data/transactions/enlisting-resources-as-participants-in-a-transaction.md) and [Committing a Transaction in Single-Phase and Multi-Phase](~/docs/framework/data/transactions/committing-a-transaction-in-single-phase-and-multi-phase.md) respectively.</span></span>  
  
 <span data-ttu-id="9fe94-108">交易管理員在兩階段認可通訊協定的不同階段告知登記的物件，透過下列方法。</span><span class="sxs-lookup"><span data-stu-id="9fe94-108">The transaction manager notifies the enlisted object at different phases of the Two Phase Commit Protocol by the following methods.</span></span>  
  
|<span data-ttu-id="9fe94-109">方法</span><span class="sxs-lookup"><span data-stu-id="9fe94-109">Method</span></span>|<span data-ttu-id="9fe94-110">描述</span><span class="sxs-lookup"><span data-stu-id="9fe94-110">Description</span></span>|  
|------------|-----------------|  
|<xref:System.Transactions.IEnlistmentNotification.Prepare%2A>|<span data-ttu-id="9fe94-111">已登錄的物件的方法回呼，交易管理員的交易，在第一階段時用作交易管理員詢問參與者是否能認可的交易。</span><span class="sxs-lookup"><span data-stu-id="9fe94-111">This method of an enlisted object is used as a callback by the Transaction Manager during the first phase of a transaction, when the transaction manager asks participants whether they can commit the transaction.</span></span>|  
|<xref:System.Transactions.IEnlistmentNotification.Commit%2A>|<span data-ttu-id="9fe94-112">這個方法的已登錄的物件作為回呼，交易管理員在交易的第二個階段交易已認可。</span><span class="sxs-lookup"><span data-stu-id="9fe94-112">This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is commited.</span></span>|  
|<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>|<span data-ttu-id="9fe94-113">這個方法的已登錄的物件作為回呼由交易管理員在交易的第二個階段交易已中止 （亦即已回復）。</span><span class="sxs-lookup"><span data-stu-id="9fe94-113">This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is aborted (that is, rolled back).</span></span>|  
|<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>|<span data-ttu-id="9fe94-114">這個方法的已登錄的物件作為回呼，交易管理員交易的第二個階段的交易處於不確定。</span><span class="sxs-lookup"><span data-stu-id="9fe94-114">This method of an enlisted object is used as a callback by the Transaction Manager during the second phase of a transaction if the transaction is in doubt.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="9fe94-115">您應該注意，循序或依特定順序，不可能會傳送通知。</span><span class="sxs-lookup"><span data-stu-id="9fe94-115">You should be aware that notifications might not be sent sequentially, or in a particular order.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9fe94-116">下列範例示範實作這個介面，以及為交易使用中參與者登記物件<xref:System.Transactions.Transaction.EnlistVolatile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9fe94-116">The following example shows an implementation of this interface, as well as enlisting the object as a participant in a transaction using the <xref:System.Transactions.Transaction.EnlistVolatile%2A> method.</span></span>  
  
 [!code-csharp[Tx_Enlist#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_enlist/cs/enlist.cs#1)]
 [!code-vb[Tx_Enlist#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_enlist/vb/enlist.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Transactions.ISinglePhaseNotification" />
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Commit(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Commit enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">
          <span data-ttu-id="9fe94-117">An <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe94-117">An <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fe94-118">Notifies an enlisted object that a transaction is being committed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe94-118">Notifies an enlisted object that a transaction is being committed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe94-119">它會指示所有參與者都来認可的交易時，交易管理員會呼叫這個方法登記之物件的承諾，第二個階段。</span><span class="sxs-lookup"><span data-stu-id="9fe94-119">The transaction manager calls this method of an enlisted object during the second phase of a commitment, when it instructs all participants to commit the transaction.</span></span>  
  
 <span data-ttu-id="9fe94-120">資源管理員應該執行任何工作需要完成交易，然後通知完成藉由呼叫 TM<xref:System.Transactions.Enlistment.Done%2A>方法`enlistment`參數。</span><span class="sxs-lookup"><span data-stu-id="9fe94-120">The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the <xref:System.Transactions.Enlistment.Done%2A> method on the `enlistment` parameter.</span></span>  
  
 <span data-ttu-id="9fe94-121">如果資源管理員已登錄永久，但不會回應呼叫<xref:System.Transactions.Enlistment.Done%2A>方法時，交易管理員不確定資源管理員已收到<xref:System.Transactions.IEnlistmentNotification.Commit%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="9fe94-121">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the <xref:System.Transactions.IEnlistmentNotification.Commit%2A> call.</span></span> <span data-ttu-id="9fe94-122">因此，交易管理員會持續等候回應，以及維護與此交易相關資訊。</span><span class="sxs-lookup"><span data-stu-id="9fe94-122">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="9fe94-123">如果<xref:System.Transactions.Enlistment.Done%2A>是永遠不會呼叫，此項資訊是周圍無限期地保留在記憶體中或在整個系統資源。</span><span class="sxs-lookup"><span data-stu-id="9fe94-123">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="9fe94-124">這會導致無法回收資源。</span><span class="sxs-lookup"><span data-stu-id="9fe94-124">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="9fe94-125">如果是分散式交易，這可能最後會填滿中止 MSDTC 程序的 MSDTC 記錄檔。</span><span class="sxs-lookup"><span data-stu-id="9fe94-125">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="9fe94-126">如果是交易受<xref:System.Transactions>，這會導致記憶體耗用量，資源管理員的程序的漸進式且持續增加。</span><span class="sxs-lookup"><span data-stu-id="9fe94-126">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="9fe94-127">因此，很重要，您呼叫<xref:System.Transactions.Enlistment.Done%2A>方法，一旦您的資源管理員透過您準備工作。</span><span class="sxs-lookup"><span data-stu-id="9fe94-127">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InDoubt">
      <MemberSignature Language="C#" Value="public void InDoubt (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InDoubt(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.InDoubt(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InDoubt(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member InDoubt : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.InDoubt enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">
          <span data-ttu-id="9fe94-128">An <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe94-128">An <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fe94-129">Notifies an enlisted object that the status of a transaction is in doubt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe94-129">Notifies an enlisted object that the status of a transaction is in doubt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe94-130">這個方法是針對動態資源呼叫，當交易管理員已叫用單一長期的資源，以單一階段認可作業，然後長期的資源的連線中斷之前取得交易結果。</span><span class="sxs-lookup"><span data-stu-id="9fe94-130">This method is called for volatile resources when the transaction manager has invoked a single phase commit operation to a single durable resource, and then connection to the durable resource was lost prior to getting the transaction result.</span></span> <span data-ttu-id="9fe94-131">此時，無法安全地判定交易結果。</span><span class="sxs-lookup"><span data-stu-id="9fe94-131">At that point, the transaction outcome cannot be safely determined.</span></span>  
  
 <span data-ttu-id="9fe94-132">做為<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>會被視為交易的最後狀態，您不應該呼叫<xref:System.Transactions.IEnlistmentNotification.Commit%2A>或<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>之後呼叫<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>。</span><span class="sxs-lookup"><span data-stu-id="9fe94-132">As <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> is considered to be a final state for a transaction, you should not call <xref:System.Transactions.IEnlistmentNotification.Commit%2A> or <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> after calling <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9fe94-133">動態資源的這個方法的實作應該執行任何修復或內含項目作業其了解上受影響的資料。</span><span class="sxs-lookup"><span data-stu-id="9fe94-133">Your implementation of this method for the volatile resource should perform whatever recovery or containment operation it understands on the affected data.</span></span>  <span data-ttu-id="9fe94-134">它也必須呼叫<xref:System.Transactions.Enlistment.Done%2A>上的方法上`enlistment`完成其工作時的參數。</span><span class="sxs-lookup"><span data-stu-id="9fe94-134">It must also call the <xref:System.Transactions.Enlistment.Done%2A> method on the on the `enlistment` parameter when it has finished its work.</span></span>  
  
 <span data-ttu-id="9fe94-135">如果資源管理員已登錄永久，但不會回應呼叫<xref:System.Transactions.Enlistment.Done%2A>方法時，交易管理員不確定資源管理員已收到<xref:System.Transactions.IEnlistmentNotification.InDoubt%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="9fe94-135">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the <xref:System.Transactions.IEnlistmentNotification.InDoubt%2A> call.</span></span> <span data-ttu-id="9fe94-136">因此，交易管理員會持續等候回應，以及維護與此交易相關資訊。</span><span class="sxs-lookup"><span data-stu-id="9fe94-136">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="9fe94-137">如果<xref:System.Transactions.Enlistment.Done%2A>是永遠不會呼叫，此項資訊是周圍無限期地保留在記憶體中或在整個系統資源。</span><span class="sxs-lookup"><span data-stu-id="9fe94-137">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="9fe94-138">這會導致無法回收資源。</span><span class="sxs-lookup"><span data-stu-id="9fe94-138">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="9fe94-139">如果是分散式交易，這可能最後會填滿中止 MSDTC 程序的 MSDTC 記錄檔。</span><span class="sxs-lookup"><span data-stu-id="9fe94-139">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="9fe94-140">如果是交易受<xref:System.Transactions>，這會導致記憶體耗用量，資源管理員的程序的漸進式且持續增加。</span><span class="sxs-lookup"><span data-stu-id="9fe94-140">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="9fe94-141">因此，很重要，您呼叫<xref:System.Transactions.Enlistment.Done%2A>方法，一旦您的資源管理員透過您準備工作。</span><span class="sxs-lookup"><span data-stu-id="9fe94-141">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare (System.Transactions.PreparingEnlistment preparingEnlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare(class System.Transactions.PreparingEnlistment preparingEnlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Prepare(System.Transactions.PreparingEnlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare(System::Transactions::PreparingEnlistment ^ preparingEnlistment);" />
      <MemberSignature Language="F#" Value="abstract member Prepare : System.Transactions.PreparingEnlistment -&gt; unit" Usage="iEnlistmentNotification.Prepare preparingEnlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preparingEnlistment" Type="System.Transactions.PreparingEnlistment" />
      </Parameters>
      <Docs>
        <param name="preparingEnlistment">
          <span data-ttu-id="9fe94-142">A <see cref="T:System.Transactions.PreparingEnlistment" /> object used to send a response to the transaction manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe94-142">A <see cref="T:System.Transactions.PreparingEnlistment" /> object used to send a response to the transaction manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fe94-143">Notifies an enlisted object that a transaction is being prepared for commitment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe94-143">Notifies an enlisted object that a transaction is being prepared for commitment.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe94-144">交易管理員時呼叫這個方法的已登錄的資源管理員的階段 1 承諾，它會要求參與者是否能認可的交易。</span><span class="sxs-lookup"><span data-stu-id="9fe94-144">The transaction manager calls this method of an enlisted resource manager during the phase 1 of a commitment, when it asks participants whether they can commit the transaction.</span></span>  
  
 <span data-ttu-id="9fe94-145">當您在實作長期的資源管理員時，您應該記錄您在這個階段準備記錄。</span><span class="sxs-lookup"><span data-stu-id="9fe94-145">When you are implementing a durable resource manager, you should log your prepare record during this phase.</span></span> <span data-ttu-id="9fe94-146">記錄應該包含所有必要的資訊來執行復原。</span><span class="sxs-lookup"><span data-stu-id="9fe94-146">The record should contain all the necessary information to perform recovery.</span></span> <span data-ttu-id="9fe94-147">這包括<xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A>屬性，傳遞至中的交易管理員<xref:System.Transactions.TransactionManager.Reenlist%2A>在復原期間的方法。</span><span class="sxs-lookup"><span data-stu-id="9fe94-147">This includes the <xref:System.Transactions.PreparingEnlistment.RecoveryInformation%2A> property, which is passed to the transaction manager in the <xref:System.Transactions.TransactionManager.Reenlist%2A> method during recovery.</span></span> <span data-ttu-id="9fe94-148">如需復原的詳細資訊，請參閱[執行復原](http://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691)。</span><span class="sxs-lookup"><span data-stu-id="9fe94-148">For more information on recovery, see [Performing Recovery](http://msdn.microsoft.com/library/d342c5c7-da64-4a4c-8e63-b52f4fbf2691).</span></span>  
  
 <span data-ttu-id="9fe94-149">資源管理員應該先完成所有工作都必須完成之前先呼叫<xref:System.Transactions.PreparingEnlistment.Prepared%2A>方法`preparingEnlistment`參數，以指定其承諾投票。</span><span class="sxs-lookup"><span data-stu-id="9fe94-149">Your resource manager should complete all work that must be finished before calling the <xref:System.Transactions.PreparingEnlistment.Prepared%2A> method of the `preparingEnlistment` parameter to indicate its vote for commitment.</span></span> <span data-ttu-id="9fe94-150">您應該確定這接收認可、 復原或在不確定的任何第 2 階段通知這類之前完成。</span><span class="sxs-lookup"><span data-stu-id="9fe94-150">You should make sure that this is accomplished before receiving any phase 2 notification such as commit, rollback or in doubt.</span></span> <span data-ttu-id="9fe94-151">這是因為第 2 階段通知只能在呼叫相同執行緒上的內嵌<xref:System.Transactions.PreparingEnlistment.Prepared%2A>階段 1 中的方法。</span><span class="sxs-lookup"><span data-stu-id="9fe94-151">This is because phase 2 notifications can happen inline on the same thread that called the <xref:System.Transactions.PreparingEnlistment.Prepared%2A> method in phase 1.</span></span> <span data-ttu-id="9fe94-152">因此，當您預期在收到第二階段告知之前會完成 <xref:System.Transactions.PreparingEnlistment.Prepared%2A> 呼叫時，請勿在此呼叫之後執行任何工作 (例如，釋放鎖定)。</span><span class="sxs-lookup"><span data-stu-id="9fe94-152">As such, you should not do any work after the <xref:System.Transactions.PreparingEnlistment.Prepared%2A> call (for example, releasing locks) that you would expect to have completed before receiving the phase 2 notifications.</span></span>  
  
 <span data-ttu-id="9fe94-153">您也可以呼叫的方法`preparingEnlistment`參數來指出投票，以進行回復。</span><span class="sxs-lookup"><span data-stu-id="9fe94-153">You can also call the method of the `preparingEnlistment` parameter to indicate a vote for rollback.</span></span>  
  
 <span data-ttu-id="9fe94-154">如果您想要觀察，並做出回應的交易，進度的物件不參與它，此方法的實作應該呼叫<xref:System.Transactions.Enlistment.Done%2A>方法`preparingEnlistment`完成其工作時的參數。</span><span class="sxs-lookup"><span data-stu-id="9fe94-154">If you want the object to merely observe and react to the progress of the transaction, without participating in it, your implementation of this method should call the <xref:System.Transactions.Enlistment.Done%2A> method of the `preparingEnlistment` parameter when it has finished its work.</span></span> <span data-ttu-id="9fe94-155">如此一來，您的資源管理員不會收到任何第 2 個階段的通知。</span><span class="sxs-lookup"><span data-stu-id="9fe94-155">By doing so, your resource manager would not receive any phase 2 notification.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rollback">
      <MemberSignature Language="C#" Value="public void Rollback (System.Transactions.Enlistment enlistment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rollback(class System.Transactions.Enlistment enlistment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.IEnlistmentNotification.Rollback(System.Transactions.Enlistment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rollback(System::Transactions::Enlistment ^ enlistment);" />
      <MemberSignature Language="F#" Value="abstract member Rollback : System.Transactions.Enlistment -&gt; unit" Usage="iEnlistmentNotification.Rollback enlistment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enlistment" Type="System.Transactions.Enlistment" />
      </Parameters>
      <Docs>
        <param name="enlistment">
          <span data-ttu-id="9fe94-156">A <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe94-156">A <see cref="T:System.Transactions.Enlistment" /> object used to send a response to the transaction manager.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9fe94-157">Notifies an enlisted object that a transaction is being rolled back (aborted).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9fe94-157">Notifies an enlisted object that a transaction is being rolled back (aborted).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fe94-158">當交易正在回復 （中止），因為一個或多個交易參與者無法認可交易時，交易管理員會呼叫這個方法的登記的物件。</span><span class="sxs-lookup"><span data-stu-id="9fe94-158">The transaction manager calls this method of an enlisted object when the transaction is being rolled back (aborted) due to the inability of one or more transaction participants to commit the transaction.</span></span>  
  
 <span data-ttu-id="9fe94-159">資源管理員應該執行任何工作需要完成交易，然後通知完成藉由呼叫 TM<xref:System.Transactions.Enlistment.Done%2A>方法`enlistment`參數。</span><span class="sxs-lookup"><span data-stu-id="9fe94-159">The resource manager should perform any work necessary to finish the transaction and then inform the TM that it has finished by calling the <xref:System.Transactions.Enlistment.Done%2A> method on the `enlistment` parameter.</span></span>  
  
 <span data-ttu-id="9fe94-160">如果資源管理員已登錄永久，但不會回應呼叫<xref:System.Transactions.Enlistment.Done%2A>方法時，交易管理員不確定資源管理員已收到<xref:System.Transactions.IEnlistmentNotification.Rollback%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="9fe94-160">If the resource manager has enlisted durably, but does not respond by calling <xref:System.Transactions.Enlistment.Done%2A> method, the transaction manager is unsure that the resource manager has received the <xref:System.Transactions.IEnlistmentNotification.Rollback%2A> call.</span></span> <span data-ttu-id="9fe94-161">因此，交易管理員會持續等候回應，以及維護與此交易相關資訊。</span><span class="sxs-lookup"><span data-stu-id="9fe94-161">As such, the transaction manager keeps waiting for a response, and maintains information relevant to this transaction.</span></span>  <span data-ttu-id="9fe94-162">如果<xref:System.Transactions.Enlistment.Done%2A>是永遠不會呼叫，此項資訊是周圍無限期地保留在記憶體中或在整個系統資源。</span><span class="sxs-lookup"><span data-stu-id="9fe94-162">If <xref:System.Transactions.Enlistment.Done%2A> is never called, this piece of information is kept around indefinitely in memory or in a system-wide resource.</span></span> <span data-ttu-id="9fe94-163">這會導致無法回收資源。</span><span class="sxs-lookup"><span data-stu-id="9fe94-163">This results in resources not being able to be reclaimed.</span></span> <span data-ttu-id="9fe94-164">如果是分散式交易，這可能最後會填滿中止 MSDTC 程序的 MSDTC 記錄檔。</span><span class="sxs-lookup"><span data-stu-id="9fe94-164">In the case of a distributed transaction, this could eventually fill the MSDTC log which halts the MSDTC process.</span></span> <span data-ttu-id="9fe94-165">如果是交易受<xref:System.Transactions>，這會導致記憶體耗用量，資源管理員的程序的漸進式且持續增加。</span><span class="sxs-lookup"><span data-stu-id="9fe94-165">In the case of a transaction managed by <xref:System.Transactions>, this results in a gradual and continual increase in the memory consumption of the resource manager's process.</span></span> <span data-ttu-id="9fe94-166">因此，很重要，您呼叫<xref:System.Transactions.Enlistment.Done%2A>方法，一旦您的資源管理員透過您準備工作。</span><span class="sxs-lookup"><span data-stu-id="9fe94-166">Therefore, it is crucial that you call the <xref:System.Transactions.Enlistment.Done%2A> method once your resource manager is done with your prepare work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>