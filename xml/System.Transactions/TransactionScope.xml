<Type Name="TransactionScope" FullName="System.Transactions.TransactionScope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f29d48f4f9752db6a94feeb31d5858061fcba6a5" />
    <Meta Name="ms.sourcegitcommit" Value="254e16ae65e82f4aa59360cd8572b36b6b5b2f80" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/05/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TransactionScope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TransactionScope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.TransactionScope" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TransactionScope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TransactionScope sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="8b5c7-101">使程式碼區塊成為異動式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b5c7-101">Makes a code block transactional.</span>
      </span>
      <span data-ttu-id="8b5c7-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b5c7-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b5c7-103"><xref:System.Transactions>基礎結構提供的明確程式設計模型根據<xref:System.Transactions.Transaction>類別，以及隱含程式設計模型使用<xref:System.Transactions.TransactionScope>，交易自動管理基礎結構的類別。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-103">The <xref:System.Transactions> infrastructure provides both an explicit programming model based on the <xref:System.Transactions.Transaction> class, as well as an implicit programming model using the <xref:System.Transactions.TransactionScope> class, in which transactions are automatically managed by the infrastructure.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8b5c7-104">我們建議您建立隱含的交易使用<xref:System.Transactions.TransactionScope>類別，以便為您自動管理的環境交易內容。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-104">We recommend that you create implicit transactions using the <xref:System.Transactions.TransactionScope> class, so that the ambient transaction context is automatically managed for you.</span></span> <span data-ttu-id="8b5c7-105">您也應該使用<xref:System.Transactions.TransactionScope>和<xref:System.Transactions.DependentTransaction>跨多個函式呼叫或多個執行緒呼叫需要使用的相同交易的應用程式的類別。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-105">You should also use the <xref:System.Transactions.TransactionScope> and <xref:System.Transactions.DependentTransaction> class for applications that require the use of the same transaction across multiple function calls or multiple thread calls.</span></span> <span data-ttu-id="8b5c7-106">如需有關此模型的詳細資訊，請參閱[實作隱含交易使用交易範圍](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)主題。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-106">For more information on this model, see the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span> <span data-ttu-id="8b5c7-107">如需撰寫交易應用程式的詳細資訊，請參閱[撰寫交易應用程式](~/docs/framework/data/transactions/writing-a-transactional-application.md)。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-107">For more information on writing a transactional application, see [Writing A Transactional Application](~/docs/framework/data/transactions/writing-a-transactional-application.md).</span></span>  
  
 <span data-ttu-id="8b5c7-108">在具現化<xref:System.Transactions.TransactionScope>由`new`陳述式中，交易管理員決定要參與交易。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-108">Upon instantiating a <xref:System.Transactions.TransactionScope> by the `new` statement, the transaction manager determines which transaction to participate in.</span></span> <span data-ttu-id="8b5c7-109">一旦決定後，範圍永遠會參與該異動。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-109">Once determined, the scope always participates in that transaction.</span></span> <span data-ttu-id="8b5c7-110">此決策是根據兩個因素而定：環境交易是否存在，以及建構函式中的 `TransactionScopeOption` 參數值。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-110">The decision is based on two factors: whether an ambient transaction is present and the value of the `TransactionScopeOption` parameter in the constructor.</span></span>  <span data-ttu-id="8b5c7-111">環境交易是您的程式碼中執行的交易。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-111">The ambient transaction is the transaction your code executes in.</span></span> <span data-ttu-id="8b5c7-112">您可以呼叫 <xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> 類別的靜態 <xref:System.Transactions.Transaction> 屬性，取得環境交易的參考。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-112">You can obtain a reference to the ambient transaction by calling the static <xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> property of the <xref:System.Transactions.Transaction> class.</span></span> <span data-ttu-id="8b5c7-113">如需有關如何使用這個參數的詳細資訊，請參閱 < 交易流程管理 > 一節[實作隱含交易使用交易範圍](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)主題。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-113">For more information on how this parameter is used, see the "Transaction Flow Management" section of the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span>  
  
 <span data-ttu-id="8b5c7-114">如果交易範圍內不發生任何例外狀況 (也就是之間的初始化<xref:System.Transactions.TransactionScope>物件和呼叫其<xref:System.Transactions.TransactionScope.Dispose%2A>方法)，則範圍所參與的交易就可以繼續。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-114">If no exception occurs within the transaction scope (that is, between the initialization of the <xref:System.Transactions.TransactionScope> object and the calling of its <xref:System.Transactions.TransactionScope.Dispose%2A> method), then the transaction in which the scope participates is allowed to proceed.</span></span> <span data-ttu-id="8b5c7-115">如果在異動範圍內，未發生例外狀況，它所參與的交易將回復。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-115">If an exception does occur within the transaction scope, the transaction in which it participates will be rolled back.</span></span>  
  
 <span data-ttu-id="8b5c7-116">當您的應用程式完成所有工作要在交易中執行，您應該呼叫<xref:System.Transactions.TransactionScope.Complete%2A>方法一次，以通知該交易管理員是可接受要認可的交易。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-116">When your application completes all work it wants to perform in a transaction, you should call the <xref:System.Transactions.TransactionScope.Complete%2A> method only once to inform that transaction manager that it is acceptable to commit the transaction.</span></span> <span data-ttu-id="8b5c7-117">無法呼叫這個方法會中止交易。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-117">Failing to call this method aborts the transaction.</span></span>  
  
 <span data-ttu-id="8b5c7-118">呼叫<xref:System.Transactions.TransactionScope.Dispose%2A>方法標示的交易範圍結尾。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-118">A call to the <xref:System.Transactions.TransactionScope.Dispose%2A> method marks the end of the transaction scope.</span></span> <span data-ttu-id="8b5c7-119">在呼叫這個方法後發生的例外狀況不太可能會影響交易。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-119">Exceptions that occur after calling this method may not affect the transaction.</span></span>  
  
 <span data-ttu-id="8b5c7-120">如果您修改的值<xref:System.Transactions.Transaction.Current%2A>範圍中，內部例外狀況時擲回<xref:System.Transactions.TransactionScope.Dispose%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-120">If you modify the value of <xref:System.Transactions.Transaction.Current%2A> inside a scope, an exception is thrown when <xref:System.Transactions.TransactionScope.Dispose%2A> is called.</span></span> <span data-ttu-id="8b5c7-121">不過，在結束範圍時，會還原先前的值。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-121">However, at the end of the scope, the previous value is restored.</span></span> <span data-ttu-id="8b5c7-122">此外，如果您呼叫<xref:System.Transactions.TransactionScope.Dispose%2A>上<xref:System.Transactions.Transaction.Current%2A>的交易範圍內，建立交易，交易中止的範圍結尾。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-122">In addition, if you call <xref:System.Transactions.TransactionScope.Dispose%2A> on <xref:System.Transactions.Transaction.Current%2A> inside a transaction scope that created the transaction, the transaction aborts at the end of the scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b5c7-123">下列範例示範如何使用<xref:System.Transactions.TransactionScope>類別來定義參與交易的程式碼區塊。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-123">The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.</span></span>  
  
 [!code-csharp[TransactionScope#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TransactionScope/cs/ScopeWithSQL.cs#1)]
 [!code-vb[TransactionScope#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TransactionScope/vb/ScopeWithSQL.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="8b5c7-124">此型別具備執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8b5c7-124">This type is thread safe.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8b5c7-125">初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-125">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b5c7-126">初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-126">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b5c7-127">這個建構函式會建立新的交易範圍的交易範圍選項等於<xref:System.Transactions.TransactionScopeOption.Required>。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-127">This constructor creates a new transaction scope with the transaction scope option equal to <xref:System.Transactions.TransactionScopeOption.Required>.</span></span> <span data-ttu-id="8b5c7-128">這表示交易需要新的範圍，而且如果已經存在，會使用環境交易。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-128">This means that a transaction is required by the new scope and the ambient transaction is used if one already exists.</span></span> <span data-ttu-id="8b5c7-129">否則會在進入範圍前建立新的交易。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-129">Otherwise, it creates a new transaction before entering the scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transaction, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transaction, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transaction, TimeSpan timeout);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="transaction">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transactionToUse);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transactionToUse) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionToUse As Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transactionToUse);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transaction);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transaction) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction)" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transaction);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transactionToUse" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="transaction" Type="System.Transactions.Transaction" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="transactionToUse">To be added.</param>
        <summary>
          <span data-ttu-id="8b5c7-130">初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體，並將指定的異動設定為環境異動，以便在範圍內執行的異動式工作使用這個異動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-130">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transactionToUse, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transactionToUse, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionToUse As Transaction, asyncFlowOption As TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transactionToUse, System::Transactions::TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transactionToUse" Type="System.Transactions.Transaction" />
        <Parameter Name="asyncFlowOption" Type="System.Transactions.TransactionScopeAsyncFlowOption" />
      </Parameters>
      <Docs>
        <param name="transactionToUse">
          <span data-ttu-id="8b5c7-131">要設定為環境異動的異動，以便在範圍內執行的異動式工作使用這個異動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-131">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span>
          </span>
        </param>
        <param name="asyncFlowOption">
          <span data-ttu-id="8b5c7-132">
            <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 列舉執行個體，這個執行個體描述異動範圍相關聯的環境異動是否會在使用 Task 或 async/await .NET 非同步程式設計模式時，跨執行緒接續流動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-132">An instance of the <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b5c7-133">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-133">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="8b5c7-134">初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體，並將指定的異動設定為環境異動，以便在範圍內執行的異動式工作使用這個異動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-134">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (asyncFlowOption As TransactionScopeAsyncFlowOption)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeAsyncFlowOption asyncFlowOption);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeAsyncFlowOption asyncFlow);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlow) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeAsyncFlowOption)" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (asyncFlow As TransactionScopeAsyncFlowOption)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeAsyncFlowOption asyncFlow);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="asyncFlowOption" Type="System.Transactions.TransactionScopeAsyncFlowOption" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="asyncFlow" Type="System.Transactions.TransactionScopeAsyncFlowOption" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="asyncFlowOption">To be added.</param>
        <summary>
          <span data-ttu-id="8b5c7-135">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-135">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="8b5c7-136">使用指定的非同步流程選項，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-136">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified asynchronous flow option.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption option, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption option, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As TransactionScopeOption, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption option, TimeSpan timeout);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="option" Type="System.Transactions.TransactionScopeOption" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="option">To be added.</param>
        <param name="timeout">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption option, System.Transactions.TransactionScopeAsyncFlowOption asyncFlow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption option, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As TransactionScopeOption, asyncFlow As TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption option, System::Transactions::TransactionScopeAsyncFlowOption asyncFlow);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="option" Type="System.Transactions.TransactionScopeOption" />
        <Parameter Name="asyncFlow" Type="System.Transactions.TransactionScopeAsyncFlowOption" />
      </Parameters>
      <Docs>
        <param name="option">To be added.</param>
        <param name="asyncFlow">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopeOption As TransactionScopeOption)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption option);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption option) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption)" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As TransactionScopeOption)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption option);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopeOption" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="option" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="scopeOption">To be added.</param>
        <summary>
          <span data-ttu-id="8b5c7-137">使用指定的需求，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-137">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified requirements.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transaction, TimeSpan timeout, System.Transactions.EnterpriseServicesInteropOption opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transaction, valuetype System.TimeSpan timeout, valuetype System.Transactions.EnterpriseServicesInteropOption opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transaction, TimeSpan timeout, System::Transactions::EnterpriseServicesInteropOption opt);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="opt" Type="System.Transactions.EnterpriseServicesInteropOption" />
      </Parameters>
      <Docs>
        <param name="transaction">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="opt">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.Transaction transactionToUse, TimeSpan scopeTimeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Transactions.Transaction transactionToUse, valuetype System.TimeSpan scopeTimeout, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionToUse As Transaction, scopeTimeout As TimeSpan, asyncFlowOption As TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::Transaction ^ transactionToUse, TimeSpan scopeTimeout, System::Transactions::TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transactionToUse" Type="System.Transactions.Transaction" />
        <Parameter Name="scopeTimeout" Type="System.TimeSpan" />
        <Parameter Name="asyncFlowOption" Type="System.Transactions.TransactionScopeAsyncFlowOption" />
      </Parameters>
      <Docs>
        <param name="transactionToUse">
          <span data-ttu-id="8b5c7-138">要設定為環境異動的異動，以便在範圍內執行的異動式工作使用這個異動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-138">The transaction to be set as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span>
          </span>
        </param>
        <param name="scopeTimeout">
          <span data-ttu-id="8b5c7-139">在 <see cref="T:System.TimeSpan" /> 之後，異動範圍將逾時而中止異動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-139">The <see cref="T:System.TimeSpan" /> after which the transaction scope times out and aborts the transaction.</span>
          </span>
        </param>
        <param name="asyncFlowOption">
          <span data-ttu-id="8b5c7-140">
            <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 列舉執行個體，這個執行個體描述異動範圍相關聯的環境異動是否會在使用 Task 或 async/await .NET 非同步程式設計模式時，跨執行緒接續流動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-140">An instance of the <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b5c7-141">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-141">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="8b5c7-142">使用指定的逾時值，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體，並將指定的異動設定為環境異動，以便在範圍內執行的異動式工作使用這個異動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-142">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified timeout value, and sets the specified transaction as the ambient transaction, so that transactional work done inside the scope uses this transaction.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption option, TimeSpan timeout, System.Transactions.TransactionScopeAsyncFlowOption asyncFlow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption option, valuetype System.TimeSpan timeout, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan,System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As TransactionScopeOption, timeout As TimeSpan, asyncFlow As TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption option, TimeSpan timeout, System::Transactions::TransactionScopeAsyncFlowOption asyncFlow);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="option" Type="System.Transactions.TransactionScopeOption" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="asyncFlow" Type="System.Transactions.TransactionScopeAsyncFlowOption" />
      </Parameters>
      <Docs>
        <param name="option">To be added.</param>
        <param name="timeout">To be added.</param>
        <param name="asyncFlow">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions options, System.Transactions.EnterpriseServicesInteropOption opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.Transactions.TransactionOptions options, valuetype System.Transactions.EnterpriseServicesInteropOption opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopeOption As TransactionScopeOption, options As TransactionOptions, opt As EnterpriseServicesInteropOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, System::Transactions::TransactionOptions options, System::Transactions::EnterpriseServicesInteropOption opt);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopeOption" Type="System.Transactions.TransactionScopeOption" />
        <Parameter Name="options" Type="System.Transactions.TransactionOptions" />
        <Parameter Name="opt" Type="System.Transactions.EnterpriseServicesInteropOption" />
      </Parameters>
      <Docs>
        <param name="scopeOption">To be added.</param>
        <param name="options">To be added.</param>
        <param name="opt">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions, System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.Transactions.TransactionOptions transactionOptions, valuetype System.Transactions.TransactionScopeAsyncFlowOption asyncFlowOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.TransactionScopeAsyncFlowOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, System::Transactions::TransactionOptions transactionOptions, System::Transactions::TransactionScopeAsyncFlowOption asyncFlowOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopeOption" Type="System.Transactions.TransactionScopeOption" />
        <Parameter Name="transactionOptions" Type="System.Transactions.TransactionOptions" />
        <Parameter Name="asyncFlowOption" Type="System.Transactions.TransactionScopeAsyncFlowOption" />
      </Parameters>
      <Docs>
        <param name="scopeOption">
          <span data-ttu-id="8b5c7-143">
            <see cref="T:System.Transactions.TransactionScopeOption" /> 列舉的執行個體，會描述與此異動範圍有關聯的異動需求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-143">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span>
          </span>
        </param>
        <param name="transactionOptions">
          <span data-ttu-id="8b5c7-144">
            <see cref="T:System.Transactions.TransactionOptions" /> 結構，描述建立新異動時要使用的異動選項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-144">A <see cref="T:System.Transactions.TransactionOptions" /> structure that describes the transaction options to use if a new transaction is created.</span>
          </span>
          <span data-ttu-id="8b5c7-145">如果使用現有的異動，則這個參數中的逾時值會套用至異動範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-145">If an existing transaction is used, the timeout value in this parameter applies to the transaction scope.</span>
          </span>
          <span data-ttu-id="8b5c7-146">如果該時間在處置範圍之前過期，則會中止異動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-146">If that time expires before the scope is disposed, the transaction is aborted.</span>
          </span>
        </param>
        <param name="asyncFlowOption">
          <span data-ttu-id="8b5c7-147">
            <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> 列舉執行個體，這個執行個體描述異動範圍相關聯的環境異動是否會在使用 Task 或 async/await .NET 非同步程式設計模式時，跨執行緒接續流動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-147">An instance of the <see cref="T:System.Transactions.TransactionScopeAsyncFlowOption" /> enumeration that describes whether the ambient transaction associated with the transaction scope will flow across thread continuations when using Task or async/await .NET async programming patterns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8b5c7-148">[在 .NET Framework 4.5.1 及更新版本中支援]</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-148">[Supported in the .NET Framework 4.5.1 and later versions]</span>
          </span>
          <span data-ttu-id="8b5c7-149">使用指定的需求和非同步流程選項，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-149">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified requirements and asynchronous flow option.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions transactionOptions);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.Transactions.TransactionOptions transactionOptions) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, System::Transactions::TransactionOptions transactionOptions);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
      <MemberSignature Language="C#" Value="public TransactionScope (System.Transactions.TransactionScopeOption scopeOption, System.Transactions.TransactionOptions options);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionScopeOption scopeOption, valuetype System.Transactions.TransactionOptions options) cil managed" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)" FrameworkAlternate="xamarinandroid-7.1;netcore-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scopeOption As TransactionScopeOption, options As TransactionOptions)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;xamarinandroid-7.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TransactionScope(System::Transactions::TransactionScopeOption scopeOption, System::Transactions::TransactionOptions options);" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (option As TransactionScopeOption)" FrameworkAlternate="xamarinios-10.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scopeOption" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;xamarinandroid-7.1" />
        <Parameter Name="option" Type="System.Transactions.TransactionScopeOption" Index="0" FrameworkAlternate="xamarinios-10.8" />
        <Parameter Name="transactionOptions" Type="System.Transactions.TransactionOptions" Index="1" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0" />
        <Parameter Name="options" Type="System.Transactions.TransactionOptions" Index="2" FrameworkAlternate="xamarinandroid-7.1" />
      </Parameters>
      <Docs>
        <param name="scopeOption">
          <span data-ttu-id="8b5c7-150">
            <see cref="T:System.Transactions.TransactionScopeOption" /> 列舉的執行個體，會描述與此異動範圍有關聯的異動需求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-150">An instance of the <see cref="T:System.Transactions.TransactionScopeOption" /> enumeration that describes the transaction requirements associated with this transaction scope.</span>
          </span>
        </param>
        <param name="option">To be added.</param>
        <param name="transactionOptions">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
          <span data-ttu-id="8b5c7-151">使用指定的需求，初始化 <see cref="T:System.Transactions.TransactionScope" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-151">Initializes a new instance of the <see cref="T:System.Transactions.TransactionScope" /> class with the specified requirements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b5c7-152">當您使用`transactionOptions`參數來指定<xref:System.Transactions.IsolationLevel>，和範圍會建立交易更新版本、 新的交易都與指定之隔離等級。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-152">When you use the `transactionOptions` parameter to specify an <xref:System.Transactions.IsolationLevel>, and the scope creates a transaction later, the new transaction is associated with the specified isolation level.</span></span> <span data-ttu-id="8b5c7-153">如果傳入的隔離層級以及交易，交易必須具有相同的隔離等級，或擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-153">If an isolation level is passed in together with a transaction, the transaction must have an identical isolation level, or an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b5c7-154">表示範圍內的所有作業都已成功完成。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-154">Indicates that all operations within the scope are completed successfully.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b5c7-155">當您滿意，範圍內的所有作業都已成功都完成，您應該呼叫這個方法一次通知該交易管理員之間的所有資源的狀態一致，且可以認可交易。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-155">When you are satisfied that all operations within the scope are completed successfully, you should call this method only once to inform that transaction manager that the state across all resources is consistent, and the transaction can be committed.</span></span> <span data-ttu-id="8b5c7-156">它是很好的作法將與最後一個陳述式中呼叫`using`區塊。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-156">It is very good practice to put the call as the last statement in the `using` block.</span></span>  
  
 <span data-ttu-id="8b5c7-157">如需有關如何使用這個方法的詳細資訊，請參閱[實作隱含交易使用交易範圍](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)主題。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-157">For more information on how this method is used, see the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span>  
  
 <span data-ttu-id="8b5c7-158">無法呼叫這個方法會中止交易，因為交易管理員會將此解譯系統失敗，或在交易範圍中擲回的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-158">Failing to call this method aborts the transaction, because the transaction manager interprets this as a system failure, or exceptions thrown within the scope of transaction.</span></span> <span data-ttu-id="8b5c7-159">不過，您也必須注意，呼叫這個方法時，不會保證交易的認可。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-159">However, you should also note that calling this method does not guarantee a commit of the transaction.</span></span> <span data-ttu-id="8b5c7-160">這只是將您的狀態告知交易管理員的方式。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-160">It is merely a way of informing the transaction manager of your status.</span></span> <span data-ttu-id="8b5c7-161">呼叫這個方法之後, 您就無法再存取環境交易透過<xref:System.Transactions.Transaction.Current%2A>屬性，並嘗試這樣所擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-161">After calling this method, you can no longer access the ambient transaction via the <xref:System.Transactions.Transaction.Current%2A> property, and trying to do so results in an exception being thrown.</span></span>  
  
 <span data-ttu-id="8b5c7-162">認可資源管理員之間的實際工作會發生在`End Using`陳述式如果<xref:System.Transactions.TransactionScope>建立交易物件。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-162">The actual work of commit between the resources manager happens at the `End Using` statement if the <xref:System.Transactions.TransactionScope> object created the transaction.</span></span> <span data-ttu-id="8b5c7-163">如果該物件沒有建立交易，則每當 <xref:System.Transactions.CommittableTransaction.Commit%2A> 物件的擁有者呼叫 <xref:System.Transactions.CommittableTransaction> 時，便會發生認可。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-163">If it did not create the transaction, the commit occurs whenever <xref:System.Transactions.CommittableTransaction.Commit%2A> is called by the owner of the <xref:System.Transactions.CommittableTransaction> object.</span></span> <span data-ttu-id="8b5c7-164">交易管理員在該點呼叫資源管理員，通知他們認可或回復，根據是否在呼叫這個方法<xref:System.Transactions.TransactionScope>物件。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-164">At that point the Transaction Manager calls the resource managers and informs them to either commit or rollback, based on whether this method was called on the <xref:System.Transactions.TransactionScope> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b5c7-165">下列範例示範如何使用<xref:System.Transactions.TransactionScope>類別來定義參與交易的程式碼區塊。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-165">The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.</span></span>  
  
 [!code-csharp[TransactionScope#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TransactionScope/cs/ScopeWithSQL.cs#1)]
 [!code-vb[TransactionScope#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TransactionScope/vb/ScopeWithSQL.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8b5c7-166">已經呼叫這個方法一次。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-166">This method has already been called once.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.TransactionScope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8b5c7-167">結束交易範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8b5c7-167">Ends the transaction scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b5c7-168">呼叫這個方法會將標示交易範圍的結束。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-168">Calling this method marks the end of the transaction scope.</span></span> <span data-ttu-id="8b5c7-169">如果<xref:System.Transactions.TransactionScope>建立交易物件和<xref:System.Transactions.TransactionScope.Complete%2A>範圍上呼叫<xref:System.Transactions.TransactionScope>物件嘗試認可交易，在呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-169">If the <xref:System.Transactions.TransactionScope> object created the transaction and <xref:System.Transactions.TransactionScope.Complete%2A> was called on the scope, the <xref:System.Transactions.TransactionScope> object attempts to commit the transaction when this method is called.</span></span>  
  
 <span data-ttu-id="8b5c7-170">使用 C#`using`建構可確保即使發生例外狀況，呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-170">The use of the C# `using` construction ensures that this method is called even if an exception occurs.</span></span> <span data-ttu-id="8b5c7-171">在呼叫這個方法後發生的例外狀況不太可能會影響異動。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-171">Exceptions that occur after calling this method may not affect the transaction.</span></span> <span data-ttu-id="8b5c7-172">這個方法也會還原環境交易其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-172">This method also restores the ambient transaction to it original state.</span></span> <span data-ttu-id="8b5c7-173">A<xref:System.Transactions.TransactionAbortedException>無法實際認可交易時就會擲回。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-173">A <xref:System.Transactions.TransactionAbortedException> is thrown if the transaction is not actually committed.</span></span>  
  
 <span data-ttu-id="8b5c7-174">這個方法是同步，並封鎖，直到認可或中止交易。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-174">This method is synchronous and blocks until the transaction has been committed or aborted.</span></span> <span data-ttu-id="8b5c7-175">因為這個緣故，您必須非常小心，在 Windows Form (WinForm) 應用程式中，使用這個方法時，或會發生死結。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-175">Because of this, you should be extremely careful when using this method in a Windows Form (WinForm) application, or a deadlock can occur.</span></span> <span data-ttu-id="8b5c7-176">如果您呼叫這個方法內一個 WinForm 控制項事件 （例如按一下按鈕），並使用同步<xref:System.Windows.Forms.Control.Invoke%2A>方法來直接執行中間處理異動時，部分 UI 工作 （例如變更色彩） 控制項將會發生死結。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-176">If you call this method inside one WinForm Control event (for example, clicking a button), and use the synchronous <xref:System.Windows.Forms.Control.Invoke%2A> method to direct the control to perform some UI tasks (for example, changing colors) in the middle of processing the transaction, a deadlock will happen.</span></span> <span data-ttu-id="8b5c7-177">這是因為<xref:System.Windows.Forms.Control.Invoke%2A>方法是同步，背景工作執行緒，直到 UI 執行緒完成其工作。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-177">This is because the <xref:System.Windows.Forms.Control.Invoke%2A> method is synchronous and blocks the worker thread until the UI thread finishes its job.</span></span> <span data-ttu-id="8b5c7-178">不過，在我們的案例中，UI 執行緒正在也等候背景工作執行緒来認可的交易。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-178">However, in our scenario, the UI thread is also waiting for the worker thread to commit the transaction.</span></span> <span data-ttu-id="8b5c7-179">結果是它們都無法繼續進行，而範圍會無限期地等候認可完成。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-179">The result is that none is able to proceed and the scope waits indefinitely for the Commit to finish.</span></span> <span data-ttu-id="8b5c7-180">您應該使用<xref:System.Windows.Forms.Control.BeginInvoke%2A>而不是<xref:System.Windows.Forms.Control.Invoke%2A>只要做得到，因為它是非同步，因此較不容易發生死結。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-180">You should use <xref:System.Windows.Forms.Control.BeginInvoke%2A> rather than <xref:System.Windows.Forms.Control.Invoke%2A> wherever possible, because it is asynchronous and thus less prone to deadlock.</span></span>  
  
 <span data-ttu-id="8b5c7-181">如需有關如何使用這個方法的詳細資訊，請參閱[實作隱含交易使用交易範圍](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md)主題。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-181">For more information on how this method is used, see the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8b5c7-182">下列範例示範如何使用<xref:System.Transactions.TransactionScope>類別來定義參與交易的程式碼區塊。</span><span class="sxs-lookup"><span data-stu-id="8b5c7-182">The following example demonstrates how to use the <xref:System.Transactions.TransactionScope> class to define a block of code to participate in a transaction.</span></span>  
  
 [!code-csharp[TransactionScope#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TransactionScope/cs/ScopeWithSQL.cs#1)]
 [!code-vb[TransactionScope#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TransactionScope/vb/ScopeWithSQL.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>