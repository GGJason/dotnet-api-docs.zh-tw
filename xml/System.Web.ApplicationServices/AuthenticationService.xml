<Type Name="AuthenticationService" FullName="System.Web.ApplicationServices.AuthenticationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="705eabb8216ef01103fa810f679bce7ed77a3050" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39811313" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AuthenticationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.ApplicationServices.AuthenticationService" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationService" />
  <TypeSignature Language="F#" Value="type AuthenticationService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>允許使用 Web 服務存取 ASP.NET 表單驗證。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService>物件可讓您透過 Windows Communication Foundation (WCF) 服務驗證使用者。 您必須驗證的使用者可透過 ASP.NET 成員資格從外部儲存的使用者認證的 Web 應用程式的應用程式時，您可以使用 WCF 驗證服務。 應用程式必須能夠傳送及取用 SOAP 格式的訊息。 透過<xref:System.Web.ApplicationServices.AuthenticationService>類別，您可以記錄使用者、 記錄使用者 out、 驗證認證、 檢查驗證狀態、 自訂驗證，以及設定驗證 cookie。  
  
 <xref:System.Web.ApplicationServices.AuthenticationService>類別包含您應該只透過 WCF 服務存取的四種方法： <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>， <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>， <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>，和<xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>方法。 若要呼叫這些方法，啟用網頁伺服器上的驗證服務，然後再連接到 Web 服務的 WCF 相容用戶端應用程式。 如需有關如何設定驗證服務的資訊，請參閱[如何： 啟用 WCF 驗證服務](http://msdn.microsoft.com/library/f7913259-762e-4a73-a771-ac9e42903f44)。  
  
 若要登入的使用者，您會傳遞使用者認證，<xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>方法。 如果認證有效，<xref:System.Web.ApplicationServices.AuthenticationService>類別會建立驗證 cookie。 如果驗證 cookie 不過期，就會知道已驗證使用者的認證，而您又沒有來再次驗證認證。 (無 cookie 驗證不是可透過<xref:System.Web.ApplicationServices.AuthenticationService>類別。)  
  
 <xref:System.Web.ApplicationServices.AuthenticationService>可能會引發兩個事件︰<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>和<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>。 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>正在驗證的使用者認證時，就會發生事件。 建立事件處理常式<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>事件，以自訂方式會驗證使用者認證。 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>之後已驗證使用者認證所設定的驗證 cookie 時，就會發生事件。 建立事件處理常式<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>自訂驗證 cookie 的事件。  
  
 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>方法會檢查使用者認證進行驗證，但它不會傳回驗證票券。 使用<xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>當使用者先前已登入，您必須檢查認證是否仍然有效，在新的應用程式工作階段開始。  
  
 如需使用主控台應用程式的 WCF 驗證服務的範例，請參閱 <<c0> [ 逐步解說： 使用 ASP.NET 應用程式服務](http://msdn.microsoft.com/library/f3f394f0-20d6-4361-aa8f-4b21bf4933eb)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthenticationService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthenticationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.ApplicationServices.AuthenticationService" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticating">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.Authenticating" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Authenticating As EventHandler(Of AuthenticatingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::AuthenticatingEventArgs ^&gt; ^ Authenticating;" />
      <MemberSignature Language="F#" Value="member this.Authenticating : EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " Usage="member this.Authenticating : System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>會在驗證使用者認證時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>正在驗證使用者認證時，會引發事件。 建立事件處理常式<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>事件，以自訂方式會驗證使用者認證。  
  
   
  
## Examples  
 下列範例示範如何繫結的事件處理常式<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>中的事件`Application_Start`Global.asax 檔案的方法。  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#1)]  
  
 下列範例顯示的事件處理常式<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>Global.asax 檔案中的事件。 事件處理常式讀取兩個驗證值從<xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>屬性，並傳遞它們的使用者名稱和密碼的自訂驗證類別以及名為`StudentAuthentication`。  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.AuthenticatingEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="CreatingCookie">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CreatingCookie As EventHandler(Of CreatingCookieEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::CreatingCookieEventArgs ^&gt; ^ CreatingCookie;" />
      <MemberSignature Language="F#" Value="member this.CreatingCookie : EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " Usage="member this.CreatingCookie : System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>會在設定驗證 Cookie 時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>之後已驗證使用者認證所設定的驗證 cookie 時，會引發事件。 建立事件處理常式<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>自訂驗證 cookie 的事件。  
  
   
  
## Examples  
 下列範例示範如何繫結的事件處理常式<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>中的事件`Application_Start`Global.asax 檔案的方法。  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#1)]  
  
 下列範例顯示的事件處理常式<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>Global.asax 檔案中的事件。 事件處理常式中的值，加自訂驗證 cookie<xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A>屬性設<xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A>屬性。 存放區<xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A>在 cookie 中只有您知道屬性中的資料不是機密的屬性。 惡意使用者可以存取 cookie 中的值。  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.CreatingCookieEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="IsLoggedIn">
      <MemberSignature Language="C#" Value="public bool IsLoggedIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsLoggedIn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLoggedIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLoggedIn();" />
      <MemberSignature Language="F#" Value="member this.IsLoggedIn : unit -&gt; bool" Usage="authenticationService.IsLoggedIn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>判斷目前的使用者是否已驗證。</summary>
        <returns>如果使用者已經驗證，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>方法會檢查目前使用者是否經過檢查<xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>.property。  
  
> [!NOTE]
>  請勿呼叫<xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>從 Web 伺服器執行的程式碼的方法。 您呼叫<xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>只為一部分的 WCF 服務的方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Login">
      <MemberSignature Language="C#" Value="public bool Login (string username, string password, string customCredential, bool isPersistent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Login(string username, string password, string customCredential, bool isPersistent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Login (username As String, password As String, customCredential As String, isPersistent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Login(System::String ^ username, System::String ^ password, System::String ^ customCredential, bool isPersistent);" />
      <MemberSignature Language="F#" Value="member this.Login : string * string * string * bool -&gt; bool" Usage="authenticationService.Login (username, password, customCredential, isPersistent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">要驗證的使用者名稱。</param>
        <param name="password">指定之使用者的密碼。</param>
        <param name="customCredential">除了 <c>userName</c> 和 <c>password</c> 以外要驗證的值 (如果有的話)。</param>
        <param name="isPersistent">值，表示驗證票證在工作階段之間是否仍有效。</param>
        <summary>檢查使用者認證，如果認證有效，則建立驗證票證 (Cookie)。</summary>
        <returns>如果使用者認證有效則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>方法會驗證使用者認證，透過成員資格提供者。 您可以使用預設的成員資格提供者，或在執行階段指定自訂成員資格提供者。 <xref:System.Web.ApplicationServices.AuthenticationService>類別傳遞`userName`並`password`到成員資格提供者<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>方法，但不會通過`customCredential`。 如果<xref:System.Web.Security.MembershipProvider.ValidateUser%2A>會傳回`true`，<xref:System.Web.ApplicationServices.AuthenticationService>建立驗證票證來當做 cookie。 設定`isPersistent`參數來`true`建立驗證票證的持續時間超過目前的工作階段。  
  
> [!NOTE]
>  請一律使用安全通訊端層 (SSL，藉由使用 HTTPS) 以及驗證服務來保護機密資料。  
  
 <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>方法會引發<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>事件和<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>事件。 建立事件處理常式<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>自訂驗證，例如檢查的值`customCredential`或驗證透過非預設的成員資格提供者的認證。 中的值`customCredential`不會驗證預設的成員資格提供者。 若要自訂驗證 cookie，建立事件處理常式<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>。  
  
> [!NOTE]
>  請勿呼叫<xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>從 Web 伺服器執行的程式碼的方法。 您呼叫<xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>只為一部分的 WCF 服務的方法。 如需詳細資訊，請參閱 < [ASP.NET 驗證](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userName" /> 或 <paramref name="password" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Logout">
      <MemberSignature Language="C#" Value="public void Logout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Logout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Logout" />
      <MemberSignature Language="VB.NET" Value="Public Sub Logout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Logout();" />
      <MemberSignature Language="F#" Value="member this.Logout : unit -&gt; unit" Usage="authenticationService.Logout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除瀏覽器中的驗證票證 (Cookie)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>方法會清除瀏覽器的 cookie 集合中的驗證 cookie。 使用者必須登入一次進行驗證。  
  
 <xref:System.Web.ApplicationServices.AuthenticationService>類別不會儲存有關的驗證票證已清除的伺服器上的資訊。  
  
> [!NOTE]
>  請勿呼叫<xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>從 Web 伺服器執行的程式碼的方法。 您呼叫<xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>只為一部分的 WCF 服務的方法。 如需詳細資訊，請參閱 < [ASP.NET 驗證](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1)。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Security.FormsAuthentication.SignOut" />
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public bool ValidateUser (string username, string password, string customCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateUser(string username, string password, string customCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateUser (username As String, password As String, customCredential As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateUser(System::String ^ username, System::String ^ password, System::String ^ customCredential);" />
      <MemberSignature Language="F#" Value="member this.ValidateUser : string * string * string -&gt; bool" Usage="authenticationService.ValidateUser (username, password, customCredential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">要驗證的使用者名稱。</param>
        <param name="password">指定之使用者的密碼。</param>
        <param name="customCredential">除了 <c>userName</c> 和 <c>password</c> 以外要驗證的值 (如果有的話)。</param>
        <summary>驗證使用者認證，但不會發出驗證票證。</summary>
        <returns>如果使用者認證有效則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>方法會驗證使用者認證，但未設定的驗證 cookie。 而不需要驗證 cookie，使用者將不會記錄即使認證有效。  
  
 使用<xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>方法時您必須檢查使用者的認證是否有效，而不會收到的驗證 cookie。 例如，您可能會執行這項操作如果驗證 cookie 儲存在用戶端應用程式，但您想要驗證使用者的認證仍然有效，新的工作階段啟動時。  
  
 <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>方法會引發<xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>事件，但不會引發<xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>事件。  
  
> [!NOTE]
>  請勿呼叫<xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>從 Web 伺服器執行的程式碼的方法。 您呼叫<xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>只為一部分的 WCF 服務的方法。 如需詳細資訊，請參閱 < [ASP.NET 驗證](http://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userName" /> 或 <paramref name="password" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>