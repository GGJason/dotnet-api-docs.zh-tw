<Type Name="TextFieldParser" FullName="Microsoft.VisualBasic.FileIO.TextFieldParser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e7a8fe81e991510b9cfbdad834108d4b8c21608" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52208303" /></Metadata><TypeSignature Language="C#" Value="public class TextFieldParser : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TextFieldParser extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
  <TypeSignature Language="VB.NET" Value="Public Class TextFieldParser&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextFieldParser : IDisposable" />
  <TypeSignature Language="F#" Value="type TextFieldParser = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8afd2-101">提供用於剖析結構化文字檔的方法和屬性。</span><span class="sxs-lookup"><span data-stu-id="8afd2-101">Provides methods and properties for parsing structured text files.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-102">`TextFieldParser`物件會提供方法和屬性剖析結構化文字檔。</span><span class="sxs-lookup"><span data-stu-id="8afd2-102">The `TextFieldParser` object provides methods and properties for parsing structured text files.</span></span> <span data-ttu-id="8afd2-103">剖析文字檔`TextFieldParser`類似於逐一查看文字檔案，而`ReadFields`方法來擷取文字欄位是類似於分割的字串。</span><span class="sxs-lookup"><span data-stu-id="8afd2-103">Parsing a text file with the `TextFieldParser` is similar to iterating over a text file, while the `ReadFields` method to extract fields of text is similar to splitting the strings.</span></span>  
  
 <span data-ttu-id="8afd2-104">`TextFieldParser`可以剖析兩種檔案類型： 分隔或固定寬度。</span><span class="sxs-lookup"><span data-stu-id="8afd2-104">The `TextFieldParser` can parse two types of files: delimited or fixed-width.</span></span> <span data-ttu-id="8afd2-105">某些屬性，例如`Delimiters`並`HasFieldsEnclosedInQuotes`才有意義時使用分隔的檔案，而`FieldWidths`屬性使用固定寬度檔案時，才有意義。</span><span class="sxs-lookup"><span data-stu-id="8afd2-105">Some properties, such as `Delimiters` and `HasFieldsEnclosedInQuotes` are meaningful only when working with delimited files, while the `FieldWidths` property is meaningful only when working with fixed-width files.</span></span>  
  
 <span data-ttu-id="8afd2-106">下表列出與工作的範例`Microsoft.VisualBasic.FileIO.TextFieldParser`物件。</span><span class="sxs-lookup"><span data-stu-id="8afd2-106">The following table lists examples of tasks involving the `Microsoft.VisualBasic.FileIO.TextFieldParser` object.</span></span>  
  
|<span data-ttu-id="8afd2-107">以</span><span class="sxs-lookup"><span data-stu-id="8afd2-107">To</span></span>|<span data-ttu-id="8afd2-108">請參閱</span><span class="sxs-lookup"><span data-stu-id="8afd2-108">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="8afd2-109">從分隔的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-109">Read from a delimited text file</span></span>|[<span data-ttu-id="8afd2-110">如何：從逗號分隔文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-110">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="8afd2-111">從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-111">Read from a fixed-width text file</span></span>|[<span data-ttu-id="8afd2-112">如何：從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-112">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="8afd2-113">從以多種格式的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-113">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="8afd2-114">如何：以多種格式從文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-114">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-115">此範例會剖析 tab 鍵分隔的文字檔，透過`Bigfile`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-115">This example parses through a tab-delimited text file, `Bigfile`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#17](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#17)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-116">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-116">Objects (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="8afd2-117">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-117">Parsing Text Files with the TextFieldParser Object</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2ewecs64(v=vs.85)"><span data-ttu-id="8afd2-118">疑難排解例外狀況：Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span><span class="sxs-lookup"><span data-stu-id="8afd2-118">Troubleshooting Exceptions: Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8afd2-119">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8afd2-119">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-120">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-120">Objects (Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="8afd2-121"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-121"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="8afd2-122">要剖析的資料流。</span><span class="sxs-lookup"><span data-stu-id="8afd2-122">The stream to be parsed.</span></span></param>
        <summary><span data-ttu-id="8afd2-123">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8afd2-123">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-124">建立新`TextFieldParser`剖析的檔案或資料流的物件由`stream`參數。</span><span class="sxs-lookup"><span data-stu-id="8afd2-124">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8afd2-125"><paramref name="stream" /> 為 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-125"><paramref name="stream" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8afd2-126">無法從 <paramref name="stream" /> 讀取。</span><span class="sxs-lookup"><span data-stu-id="8afd2-126"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-127">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-127">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-128">如何：在 Visual Basic 中從逗號分隔文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-128">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="8afd2-129">如何：在 Visual Basic 中從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-129">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="8afd2-130">如何：在 Visual Basic 中以多種格式從文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-130">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.TextReader -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="8afd2-131"><see cref="T:System.IO.TextReader" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-131"><see cref="T:System.IO.TextReader" />.</span></span> <span data-ttu-id="8afd2-132">要進行剖析的 <see cref="T:System.IO.TextReader" /> 資料流。</span><span class="sxs-lookup"><span data-stu-id="8afd2-132">The <see cref="T:System.IO.TextReader" /> stream to be parsed.</span></span></param>
        <summary><span data-ttu-id="8afd2-133">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8afd2-133">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-134">建立新`TextFieldParser`剖析的檔案或資料流的物件由`reader`參數。</span><span class="sxs-lookup"><span data-stu-id="8afd2-134">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `reader` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8afd2-135"><paramref name="reader" /> 為 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-135"><paramref name="reader" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-136">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-136">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-137">如何：在 Visual Basic 中從逗號分隔文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-137">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="8afd2-138">如何：在 Visual Basic 中從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-138">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="8afd2-139">如何：在 Visual Basic 中以多種格式從文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-139">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : string -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="8afd2-140"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-140"><see langword="String" />.</span></span> <span data-ttu-id="8afd2-141">要進行剖析的完整檔案路徑。</span><span class="sxs-lookup"><span data-stu-id="8afd2-141">The complete path of the file to be parsed.</span></span></param>
        <summary><span data-ttu-id="8afd2-142">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8afd2-142">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-143">建立新`TextFieldParser`剖析所指定的檔案物件`path`參數。</span><span class="sxs-lookup"><span data-stu-id="8afd2-143">Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8afd2-144"><paramref name="path" /> 為空字串。</span><span class="sxs-lookup"><span data-stu-id="8afd2-144"><paramref name="path" /> is an empty string.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-145">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-145">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-146">如何：在 Visual Basic 中從逗號分隔文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-146">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="8afd2-147">如何：在 Visual Basic 中從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-147">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="8afd2-148">如何：在 Visual Basic 中以多種格式從文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-148">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding defaultEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream, System::Text::Encoding ^ defaultEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream * System.Text.Encoding -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (stream, defaultEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="8afd2-149"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-149"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="8afd2-150">要剖析的資料流。</span><span class="sxs-lookup"><span data-stu-id="8afd2-150">The stream to be parsed.</span></span></param>
        <param name="defaultEncoding"><span data-ttu-id="8afd2-151"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-151"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="8afd2-152">如果編碼不是從檔案中決定，則為要使用的字元編碼。</span><span class="sxs-lookup"><span data-stu-id="8afd2-152">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="8afd2-153">預設為 <see cref="P:System.Text.Encoding.UTF8" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-153">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <summary><span data-ttu-id="8afd2-154">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8afd2-154">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-155">建立新`TextFieldParser`剖析的檔案或資料流的物件由`stream`參數。</span><span class="sxs-lookup"><span data-stu-id="8afd2-155">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8afd2-156">當您編譯以特定的文化特性設定的一組字元，並擷取這些相同的字元，以不同的文化特性設定時，可能會無法解譯字元，並可能會導致擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8afd2-156">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8afd2-157"><paramref name="stream" /> 或 <paramref name="defaultEncoding" /> 為 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-157"><paramref name="stream" /> or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8afd2-158">無法從 <paramref name="stream" /> 讀取。</span><span class="sxs-lookup"><span data-stu-id="8afd2-158"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-159">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-159">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-160">如何：在 Visual Basic 中從逗號分隔文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-160">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="8afd2-161">如何：在 Visual Basic 中從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-161">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="8afd2-162">如何：在 Visual Basic 中以多種格式從文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-162">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (string path, System.Text.Encoding defaultEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding defaultEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, defaultEncoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::String ^ path, System::Text::Encoding ^ defaultEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : string * System.Text.Encoding -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (path, defaultEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="8afd2-163"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-163"><see langword="String" />.</span></span> <span data-ttu-id="8afd2-164">要進行剖析的完整檔案路徑。</span><span class="sxs-lookup"><span data-stu-id="8afd2-164">The complete path of the file to be parsed.</span></span></param>
        <param name="defaultEncoding"><span data-ttu-id="8afd2-165"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-165"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="8afd2-166">如果編碼不是從檔案中決定，則為要使用的字元編碼。</span><span class="sxs-lookup"><span data-stu-id="8afd2-166">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="8afd2-167">預設為 <see cref="P:System.Text.Encoding.UTF8" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-167">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <summary><span data-ttu-id="8afd2-168">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8afd2-168">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-169">建立新`TextFieldParser`剖析所指定的檔案物件`path`參數。</span><span class="sxs-lookup"><span data-stu-id="8afd2-169">Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8afd2-170">當您編譯以特定的文化特性設定的一組字元，並擷取這些相同的字元，以不同的文化特性設定時，可能會無法解譯字元，並可能會導致擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8afd2-170">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8afd2-171"><paramref name="path" /> 為空字串，或 <paramref name="defaultEncoding" /> 為 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-171"><paramref name="path" /> is an empty string or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-172">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-172">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-173">如何：在 Visual Basic 中從逗號分隔文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-173">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="8afd2-174">如何：在 Visual Basic 中從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-174">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="8afd2-175">如何：在 Visual Basic 中以多種格式從文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-175">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding defaultEncoding, bool detectEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream, System::Text::Encoding ^ defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream * System.Text.Encoding * bool -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (stream, defaultEncoding, detectEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncoding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="8afd2-176"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-176"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="8afd2-177">要剖析的資料流。</span><span class="sxs-lookup"><span data-stu-id="8afd2-177">The stream to be parsed.</span></span></param>
        <param name="defaultEncoding"><span data-ttu-id="8afd2-178"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-178"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="8afd2-179">如果編碼不是從檔案中決定，則為要使用的字元編碼。</span><span class="sxs-lookup"><span data-stu-id="8afd2-179">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="8afd2-180">預設為 <see cref="P:System.Text.Encoding.UTF8" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-180">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <param name="detectEncoding"><span data-ttu-id="8afd2-181"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-181"><see langword="Boolean" />.</span></span> <span data-ttu-id="8afd2-182">表示是否在檔案開頭尋找位元組順序標記。</span><span class="sxs-lookup"><span data-stu-id="8afd2-182">Indicates whether to look for byte order marks at the beginning of the file.</span></span> <span data-ttu-id="8afd2-183">預設為 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-183">Default is <see langword="True" />.</span></span></param>
        <summary><span data-ttu-id="8afd2-184">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8afd2-184">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-185">建立新`TextFieldParser`剖析的檔案或資料流的物件由`stream`參數。</span><span class="sxs-lookup"><span data-stu-id="8afd2-185">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
 <span data-ttu-id="8afd2-186">如果`detectEncoding`參數是`True`，這個建構函式會嘗試偵測藉由查看檔案或資料流的前三個位元組的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="8afd2-186">If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</span></span> <span data-ttu-id="8afd2-187">它會自動識別 utf-8、 big-endian Unicode 與 big endian Unicode 文字如果檔案的開頭適當的位元組順序標記。</span><span class="sxs-lookup"><span data-stu-id="8afd2-187">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</span></span> <span data-ttu-id="8afd2-188">否則，請指定編碼的`defaultEncoding`用。</span><span class="sxs-lookup"><span data-stu-id="8afd2-188">Otherwise, the encoding specified by `defaultEncoding` is used.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8afd2-189">當您編譯以特定的文化特性設定的一組字元，並擷取這些相同的字元，以不同的文化特性設定時，可能會無法解譯字元，並可能會導致擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8afd2-189">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8afd2-190"><paramref name="stream" /> 或 <paramref name="defaultEncoding" /> 為 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-190"><paramref name="stream" /> or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8afd2-191">無法從 <paramref name="stream" /> 讀取。</span><span class="sxs-lookup"><span data-stu-id="8afd2-191"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-192">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-192">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-193">如何：在 Visual Basic 中從逗號分隔文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-193">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="8afd2-194">如何：在 Visual Basic 中從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-194">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="8afd2-195">如何：在 Visual Basic 中以多種格式從文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-195">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (string path, System.Text.Encoding defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string path, class System.Text.Encoding defaultEncoding, bool detectEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, defaultEncoding As Encoding, detectEncoding As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::String ^ path, System::Text::Encoding ^ defaultEncoding, bool detectEncoding);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : string * System.Text.Encoding * bool -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (path, defaultEncoding, detectEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncoding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="8afd2-196"><see langword="String" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-196"><see langword="String" />.</span></span> <span data-ttu-id="8afd2-197">要進行剖析的完整檔案路徑。</span><span class="sxs-lookup"><span data-stu-id="8afd2-197">The complete path of the file to be parsed.</span></span></param>
        <param name="defaultEncoding"><span data-ttu-id="8afd2-198"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-198"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="8afd2-199">如果編碼不是從檔案中決定，則為要使用的字元編碼。</span><span class="sxs-lookup"><span data-stu-id="8afd2-199">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="8afd2-200">預設為 <see cref="P:System.Text.Encoding.UTF8" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-200">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <param name="detectEncoding"><span data-ttu-id="8afd2-201"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-201"><see langword="Boolean" />.</span></span> <span data-ttu-id="8afd2-202">表示是否在檔案開頭尋找位元組順序標記。</span><span class="sxs-lookup"><span data-stu-id="8afd2-202">Indicates whether to look for byte order marks at the beginning of the file.</span></span> <span data-ttu-id="8afd2-203">預設為 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-203">Default is <see langword="True" />.</span></span></param>
        <summary><span data-ttu-id="8afd2-204">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8afd2-204">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-205">建立新`TextFieldParser`剖析所指定的檔案物件`path`參數。</span><span class="sxs-lookup"><span data-stu-id="8afd2-205">Creates a new `TextFieldParser` object to parse the file specified by the `path` parameter.</span></span>  
  
 <span data-ttu-id="8afd2-206">如果`detectEncoding`參數是`True`，這個建構函式會嘗試偵測藉由查看檔案或資料流的前三個位元組的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="8afd2-206">If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</span></span> <span data-ttu-id="8afd2-207">它會自動識別 utf-8、 big-endian Unicode 與 big endian Unicode 文字如果檔案的開頭適當的位元組順序標記。</span><span class="sxs-lookup"><span data-stu-id="8afd2-207">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</span></span> <span data-ttu-id="8afd2-208">否則，請指定編碼的`defaultEncoding`用。</span><span class="sxs-lookup"><span data-stu-id="8afd2-208">Otherwise, the encoding specified by `defaultEncoding` is used.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8afd2-209">當您編譯以特定的文化特性設定的一組字元，並擷取這些相同的字元，以不同的文化特性設定時，可能會無法解譯字元，並可能會導致擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8afd2-209">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8afd2-210"><paramref name="path" /> 為空字串，或 <paramref name="defaultEncoding" /> 為 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-210"><paramref name="path" /> is an empty string or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-211">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-211">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-212">如何：在 Visual Basic 中從逗號分隔文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-212">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="8afd2-213">如何：在 Visual Basic 中從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-213">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="8afd2-214">如何：在 Visual Basic 中以多種格式從文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-214">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextFieldParser (System.IO.Stream stream, System.Text.Encoding defaultEncoding, bool detectEncoding, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Text.Encoding defaultEncoding, bool detectEncoding, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextFieldParser(System::IO::Stream ^ stream, System::Text::Encoding ^ defaultEncoding, bool detectEncoding, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.FileIO.TextFieldParser : System.IO.Stream * System.Text.Encoding * bool * bool -&gt; Microsoft.VisualBasic.FileIO.TextFieldParser" Usage="new Microsoft.VisualBasic.FileIO.TextFieldParser (stream, defaultEncoding, detectEncoding, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="defaultEncoding" Type="System.Text.Encoding" />
        <Parameter Name="detectEncoding" Type="System.Boolean" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="8afd2-215"><see cref="T:System.IO.Stream" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-215"><see cref="T:System.IO.Stream" />.</span></span> <span data-ttu-id="8afd2-216">要剖析的資料流。</span><span class="sxs-lookup"><span data-stu-id="8afd2-216">The stream to be parsed.</span></span></param>
        <param name="defaultEncoding"><span data-ttu-id="8afd2-217"><see cref="T:System.Text.Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-217"><see cref="T:System.Text.Encoding" />.</span></span> <span data-ttu-id="8afd2-218">如果編碼不是從檔案中決定，則為要使用的字元編碼。</span><span class="sxs-lookup"><span data-stu-id="8afd2-218">The character encoding to use if encoding is not determined from file.</span></span> <span data-ttu-id="8afd2-219">預設為 <see cref="P:System.Text.Encoding.UTF8" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-219">Default is <see cref="P:System.Text.Encoding.UTF8" />.</span></span></param>
        <param name="detectEncoding"><span data-ttu-id="8afd2-220"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-220"><see langword="Boolean" />.</span></span> <span data-ttu-id="8afd2-221">表示是否在檔案開頭尋找位元組順序標記。</span><span class="sxs-lookup"><span data-stu-id="8afd2-221">Indicates whether to look for byte order marks at the beginning of the file.</span></span> <span data-ttu-id="8afd2-222">預設為 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-222">Default is <see langword="True" />.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="8afd2-223"><see langword="Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-223"><see langword="Boolean" />.</span></span> <span data-ttu-id="8afd2-224">指出是否在 <see langword="TextFieldParser" /> 物件關閉時保持 <paramref name="stream" /> 開啟。</span><span class="sxs-lookup"><span data-stu-id="8afd2-224">Indicates whether to leave <paramref name="stream" /> open when the <see langword="TextFieldParser" /> object is closed.</span></span> <span data-ttu-id="8afd2-225">預設為 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-225">Default is <see langword="False" />.</span></span></param>
        <summary><span data-ttu-id="8afd2-226">初始化 <see langword="TextFieldParser" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8afd2-226">Initializes a new instance of the <see langword="TextFieldParser" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-227">建立新`TextFieldParser`剖析的檔案或資料流的物件由`stream`參數。</span><span class="sxs-lookup"><span data-stu-id="8afd2-227">Creates a new `TextFieldParser` object to parse the file or stream that is represented by the `stream` parameter.</span></span>  
  
 <span data-ttu-id="8afd2-228">如果`detectEncoding`參數是`True`，這個建構函式會嘗試偵測藉由查看檔案或資料流的前三個位元組的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="8afd2-228">If the `detectEncoding` parameter is `True`, this constructor attempts to detect the encoding by looking at the first three bytes of the file or stream.</span></span> <span data-ttu-id="8afd2-229">它會自動識別 utf-8、 big-endian Unicode 與 big endian Unicode 文字如果檔案的開頭適當的位元組順序標記。</span><span class="sxs-lookup"><span data-stu-id="8afd2-229">It automatically recognizes UTF-8, little-endian Unicode, and big-endian Unicode text if the file starts with the appropriate byte-order marks.</span></span> <span data-ttu-id="8afd2-230">否則，請指定編碼的`defaultEncoding`用。</span><span class="sxs-lookup"><span data-stu-id="8afd2-230">Otherwise, the encoding specified by `defaultEncoding` is used.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="8afd2-231">當您編譯以特定的文化特性設定的一組字元，並擷取這些相同的字元，以不同的文化特性設定時，可能會無法解譯字元，並可能會導致擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8afd2-231">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and could cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8afd2-232"><paramref name="stream" /> 或 <paramref name="defaultEncoding" /> 為 <see langword="Nothing" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-232"><paramref name="stream" /> or <paramref name="defaultEncoding" /> is <see langword="Nothing" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8afd2-233">無法從 <paramref name="stream" /> 讀取。</span><span class="sxs-lookup"><span data-stu-id="8afd2-233"><paramref name="stream" /> cannot be read from.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-234">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-234">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-235">如何：在 Visual Basic 中從逗號分隔文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-235">How to: Read From Comma-Delimited Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="8afd2-236">如何：在 Visual Basic 中從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-236">How to: Read From Fixed-width Text Files in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="8afd2-237">如何：在 Visual Basic 中以多種格式從文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-237">How to: Read From Text Files with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="textFieldParser.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8afd2-238">關閉目前的 <see langword="TextFieldParser" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="8afd2-238">Closes the current <see langword="TextFieldParser" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8afd2-239">此範例會關閉`TextFieldParser.FileReader`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-239">This example closes the `TextFieldParser.FileReader`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-240">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-240">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="8afd2-241">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-241">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CommentTokens">
      <MemberSignature Language="C#" Value="public string[] CommentTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] CommentTokens" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property CommentTokens As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ CommentTokens { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommentTokens : string[] with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afd2-242">定義註解語彙基元 (Token)。</span><span class="sxs-lookup"><span data-stu-id="8afd2-242">Defines comment tokens.</span></span> <span data-ttu-id="8afd2-243">註解語彙基元是一個字串，當置於一行的開頭時，表示該行為註解，剖析器 (Parser) 應當忽略。</span><span class="sxs-lookup"><span data-stu-id="8afd2-243">A comment token is a string that, when placed at the beginning of a line, indicates that the line is a comment and should be ignored by the parser.</span></span></summary>
        <value><span data-ttu-id="8afd2-244">字串陣列，其中包含 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物件的所有註解語彙基元。</span><span class="sxs-lookup"><span data-stu-id="8afd2-244">A string array that contains all of the comment tokens for the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-245">這是進階的成員;它不會顯示在 IntelliSense 中除非您按一下 [**所有**] 索引標籤。</span><span class="sxs-lookup"><span data-stu-id="8afd2-245">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="8afd2-246">長度為零的註解語彙基元會被忽略。</span><span class="sxs-lookup"><span data-stu-id="8afd2-246">Zero-length comment tokens are ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-247">這個範例會指定基於`TextFieldParser`，`FileReader`單引號 （'） 為開頭的行會應該予以忽略。</span><span class="sxs-lookup"><span data-stu-id="8afd2-247">This example specifies that for the `TextFieldParser`, `FileReader` lines beginning with a single quotation mark (') should be ignored.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8afd2-248">註解語彙基元包含空白字元。</span><span class="sxs-lookup"><span data-stu-id="8afd2-248">A comment token includes white space.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-249">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-249">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-250">如何： 從逗號分隔的文字檔案，在 Visual Basic 中讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-250">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="8afd2-251">如何： 從固定寬度文字檔案，在 Visual Basic 中讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-251">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="8afd2-252">如何： 從以多種格式，在 Visual Basic 中的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-252">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Delimiters">
      <MemberSignature Language="C#" Value="public string[] Delimiters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Delimiters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiters As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Delimiters { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiters : string[] with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afd2-253">定義文字檔的分隔符號。</span><span class="sxs-lookup"><span data-stu-id="8afd2-253">Defines the delimiters for a text file.</span></span></summary>
        <value><span data-ttu-id="8afd2-254">字串陣列，其中包含 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物件的所有欄位分隔符號。</span><span class="sxs-lookup"><span data-stu-id="8afd2-254">A string array that contains all of the field delimiters for the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-255">此屬性才有意義才<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A>屬性設定為`FieldType.Delimited`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-255">This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.Delimited`.</span></span>  
  
 <span data-ttu-id="8afd2-256">定義分隔符號文字檔也可以使用完成<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8afd2-256">Defining the delimiters for a text file can also be accomplished with the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters%2A> method.</span></span>  
  
 <span data-ttu-id="8afd2-257">下表列出的工作，包含範例`Delimiters`屬性。</span><span class="sxs-lookup"><span data-stu-id="8afd2-257">The following table lists an example of a task involving the `Delimiters` property.</span></span>  
  
|<span data-ttu-id="8afd2-258">以</span><span class="sxs-lookup"><span data-stu-id="8afd2-258">To</span></span>|<span data-ttu-id="8afd2-259">請參閱</span><span class="sxs-lookup"><span data-stu-id="8afd2-259">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="8afd2-260">從分隔的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-260">Read from a delimited text file</span></span>|[<span data-ttu-id="8afd2-261">如何：從逗號分隔文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-261">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-262">這個範例會指定的分隔符號`TextFieldParser`物件， `FileReader`，是逗號 （，）。</span><span class="sxs-lookup"><span data-stu-id="8afd2-262">This example specifies that the delimiter for the `TextFieldParser` object, `FileReader`, is a comma (,).</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8afd2-263">設定為新行字元、空字串或 <see langword="Nothing" /> 的分隔符號值。</span><span class="sxs-lookup"><span data-stu-id="8afd2-263">A delimiter value is set to a newline character, an empty string, or <see langword="Nothing" />.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-264">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-264">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="8afd2-265">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-265">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8afd2-266">釋放由 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物件使用的資源。</span><span class="sxs-lookup"><span data-stu-id="8afd2-266">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></summary>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-267">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-267">Objects (Visual Basic)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textFieldParser.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8afd2-268">釋放由 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物件使用的資源。</span><span class="sxs-lookup"><span data-stu-id="8afd2-268">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-269">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-269">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familynewslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="textFieldParser.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="8afd2-270">布林值。</span><span class="sxs-lookup"><span data-stu-id="8afd2-270">Boolean.</span></span> <span data-ttu-id="8afd2-271"><see langword="True" /> 表示同時釋放 Managed 和 Unmanaged 資源，<see langword="False" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="8afd2-271"><see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="8afd2-272">釋放由 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物件使用的資源。</span><span class="sxs-lookup"><span data-stu-id="8afd2-272">Releases resources used by the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-273">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-273">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndOfData">
      <MemberSignature Language="C#" Value="public bool EndOfData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EndOfData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndOfData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EndOfData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EndOfData : bool" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afd2-274">如果目前的游標位置和檔案結尾之間沒有非空白的非註解行，則會傳回 <see langword="True" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-274">Returns <see langword="True" /> if there are no non-blank, non-comment lines between the current cursor position and the end of the file.</span></span></summary>
        <value><span data-ttu-id="8afd2-275">如果沒有任何資料可供讀取則為 <see langword="True" />，否則為 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-275"><see langword="True" /> if there is no more data to read; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-276">這個屬性可以從檔案讀取時用來判斷正在讀取資料的結尾。</span><span class="sxs-lookup"><span data-stu-id="8afd2-276">This property can be used when reading from files to determine the end of the data being read.</span></span>  
  
 <span data-ttu-id="8afd2-277">下表列出與工作的範例`EndOfData`屬性。</span><span class="sxs-lookup"><span data-stu-id="8afd2-277">The following table lists examples of tasks involving the `EndOfData` property.</span></span>  
  
|<span data-ttu-id="8afd2-278">以</span><span class="sxs-lookup"><span data-stu-id="8afd2-278">To</span></span>|<span data-ttu-id="8afd2-279">請參閱</span><span class="sxs-lookup"><span data-stu-id="8afd2-279">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="8afd2-280">從分隔的檔案讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-280">Read from a delimited file</span></span>|[<span data-ttu-id="8afd2-281">如何：從逗號分隔文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-281">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="8afd2-282">從固定寬度檔案讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-282">Read from a fixed-width file</span></span>|[<span data-ttu-id="8afd2-283">如何：從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-283">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-284">這個範例會使用`EndofData`循環檔案中的所有欄位的屬性`TextFieldReader`， `FileReader`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-284">This example uses the `EndofData` property to loop through all the fields in the file with the `TextFieldReader`, `FileReader`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-285">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-285">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ErrorLine">
      <MemberSignature Language="C#" Value="public string ErrorLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorLine { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorLine : string" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afd2-286">傳回造成最新 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 例外狀況的行。</span><span class="sxs-lookup"><span data-stu-id="8afd2-286">Returns the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></summary>
        <value><span data-ttu-id="8afd2-287">行，其造成最近的 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8afd2-287">The line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-288">如果沒有<xref:Microsoft.VisualBasic.FileIO.MalformedLineException>擲回例外狀況，則傳回空的字串。</span><span class="sxs-lookup"><span data-stu-id="8afd2-288">If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, an empty string is returned.</span></span>  
  
 <span data-ttu-id="8afd2-289"><xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A>屬性可以用來顯示造成此例外狀況的行號。</span><span class="sxs-lookup"><span data-stu-id="8afd2-289">The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber%2A> property can be used to display the number of the line that caused the exception.</span></span>  
  
 <span data-ttu-id="8afd2-290">下表列出與工作的範例`ErrorLine`屬性。</span><span class="sxs-lookup"><span data-stu-id="8afd2-290">The following table lists examples of tasks involving the `ErrorLine` property.</span></span>  
  
|<span data-ttu-id="8afd2-291">以</span><span class="sxs-lookup"><span data-stu-id="8afd2-291">To</span></span>|<span data-ttu-id="8afd2-292">請參閱</span><span class="sxs-lookup"><span data-stu-id="8afd2-292">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="8afd2-293">從分隔的檔案讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-293">Read from a delimited file</span></span>|[<span data-ttu-id="8afd2-294">如何：從逗號分隔文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-294">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="8afd2-295">從固定寬度檔案讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-295">Read from a fixed-width file</span></span>|[<span data-ttu-id="8afd2-296">如何：從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-296">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-297">這個範例會使用`ErrorLine`屬性來顯示導致目前的行<xref:Microsoft.VisualBasic.FileIO.MalformedLineException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8afd2-297">This example uses the `ErrorLine` property to display the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-298">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-298">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="8afd2-299">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-299">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="8afd2-300">如何： 從以多種格式，在 Visual Basic 中的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-300">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="8afd2-301">如何： 從固定寬度文字檔案，在 Visual Basic 中讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-301">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-302">如何： 從逗號分隔的文字檔案，在 Visual Basic 中讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-302">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="8afd2-303">Try...Catch...Finally 陳述式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-303">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ErrorLineNumber">
      <MemberSignature Language="C#" Value="public long ErrorLineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ErrorLineNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorLineNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ErrorLineNumber { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorLineNumber : int64" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afd2-304">傳回造成最新 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 例外狀況的行號。</span><span class="sxs-lookup"><span data-stu-id="8afd2-304">Returns the number of the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></summary>
        <value><span data-ttu-id="8afd2-305">造成最近 <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> 例外狀況之行的號碼。</span><span class="sxs-lookup"><span data-stu-id="8afd2-305">The number of the line that caused the most recent <see cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException" /> exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-306">如果沒有<xref:Microsoft.VisualBasic.FileIO.MalformedLineException>擲回例外狀況，則傳回-1。</span><span class="sxs-lookup"><span data-stu-id="8afd2-306">If no <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exceptions have been thrown, -1 is returned.</span></span>  
  
 <span data-ttu-id="8afd2-307"><xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A>屬性可以用來顯示造成此例外狀況的行號。</span><span class="sxs-lookup"><span data-stu-id="8afd2-307">The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine%2A> property can be used to display the number of the line that caused the exception.</span></span> <span data-ttu-id="8afd2-308">判斷的行號時，會忽略空白行和註解。</span><span class="sxs-lookup"><span data-stu-id="8afd2-308">Blank lines and comments are not ignored when determining the line number.</span></span>  
  
 <span data-ttu-id="8afd2-309">下表列出與工作的範例`ErrorLineNumber`屬性。</span><span class="sxs-lookup"><span data-stu-id="8afd2-309">The following table lists examples of tasks involving the `ErrorLineNumber` property.</span></span>  
  
|<span data-ttu-id="8afd2-310">以</span><span class="sxs-lookup"><span data-stu-id="8afd2-310">To</span></span>|<span data-ttu-id="8afd2-311">請參閱</span><span class="sxs-lookup"><span data-stu-id="8afd2-311">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="8afd2-312">從分隔的檔案讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-312">Read from a delimited file</span></span>|[<span data-ttu-id="8afd2-313">如何：從逗號分隔文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-313">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="8afd2-314">從固定寬度檔案讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-314">Read from a fixed-width file</span></span>|[<span data-ttu-id="8afd2-315">如何：從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-315">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-316">這個範例會使用`ErrorLineNumber`屬性來顯示導致目前的行位置<xref:Microsoft.VisualBasic.FileIO.MalformedLineException>例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8afd2-316">This example uses the `ErrorLineNumber` property to display the location of the line causing the current <xref:Microsoft.VisualBasic.FileIO.MalformedLineException> exception.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-317">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-317">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="8afd2-318">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-318">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="8afd2-319">如何： 從以多種格式，在 Visual Basic 中的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-319">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="8afd2-320">如何： 從固定寬度文字檔案，在 Visual Basic 中讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-320">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-321">如何： 從逗號分隔的文字檔案，在 Visual Basic 中讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-321">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="8afd2-322">Try...Catch...Finally 陳述式 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-322">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FieldWidths">
      <MemberSignature Language="C#" Value="public int[] FieldWidths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32[] FieldWidths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldWidths As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;int&gt; ^ FieldWidths { cli::array &lt;int&gt; ^ get(); void set(cli::array &lt;int&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FieldWidths : int[] with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afd2-323">代表正在剖析文字檔中每一個資料行的寬度。</span><span class="sxs-lookup"><span data-stu-id="8afd2-323">Denotes the width of each column in the text file being parsed.</span></span></summary>
        <value><span data-ttu-id="8afd2-324">整數陣列，其中包含正在剖析之文字檔中每一個資料行的寬度。</span><span class="sxs-lookup"><span data-stu-id="8afd2-324">An integer array that contains the width of each column in the text file that is being parsed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-325">此屬性才有意義才<xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A>屬性設定為`FieldType.FixedWidth`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-325">This property is meaningful only if the <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType%2A> property is set to `FieldType.FixedWidth`.</span></span> <span data-ttu-id="8afd2-326">如果陣列中的最後一個項目小於或等於零，則會將欄位假設為可變寬度。</span><span class="sxs-lookup"><span data-stu-id="8afd2-326">If the last entry in the array is less than or equal to zero, the field is assumed to be of variable width.</span></span>  
  
 <span data-ttu-id="8afd2-327"><xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A>方法也可用來設定欄位寬度。</span><span class="sxs-lookup"><span data-stu-id="8afd2-327">The <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths%2A> method can also be used to set field widths.</span></span>  
  
 <span data-ttu-id="8afd2-328">下表列出與工作的範例`FieldWidths`屬性。</span><span class="sxs-lookup"><span data-stu-id="8afd2-328">The following table lists examples of tasks involving the `FieldWidths` property.</span></span>  
  
|<span data-ttu-id="8afd2-329">以</span><span class="sxs-lookup"><span data-stu-id="8afd2-329">To</span></span>|<span data-ttu-id="8afd2-330">請參閱</span><span class="sxs-lookup"><span data-stu-id="8afd2-330">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="8afd2-331">從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-331">Read from a fixed-width text file</span></span>|[<span data-ttu-id="8afd2-332">如何：從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-332">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-333">這個範例會讀取檔案`ParserText.txt`，指定的寬度; 第一個資料行是 5 個字元寬、 第二個是 10，第三個為 11，以及第四個則為可變寬度</span><span class="sxs-lookup"><span data-stu-id="8afd2-333">This example reads the file `ParserText.txt`, specifying the widths; the first column is 5 characters wide, the second is 10, the third is 11, and the fourth is of variable width</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#16](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8afd2-334">任何位置 (除了陣列的最後一個項目以外) 中的寬度值會小於或等於零。</span><span class="sxs-lookup"><span data-stu-id="8afd2-334">A width value in any location other than the last entry of the array is less than or equal to zero.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FieldType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-335">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-335">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="8afd2-336">如何： 從固定寬度文字檔案，在 Visual Basic 中讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-336">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-337">如何： 從逗號分隔的文字檔案，在 Visual Basic 中讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-337">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="8afd2-338">如何： 從以多種格式，在 Visual Basic 中的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-338">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="8afd2-339">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-339">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2ewecs64(v=vs.85)"><span data-ttu-id="8afd2-340">疑難排解例外狀況：Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span><span class="sxs-lookup"><span data-stu-id="8afd2-340">Troubleshooting Exceptions: Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TextFieldParser ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TextFieldParser ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="textFieldParser.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8afd2-341">在記憶體回收 (GC) 回收 <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> 物件前，允許其嘗試釋放資源並執行其他清除作業。</span><span class="sxs-lookup"><span data-stu-id="8afd2-341">Allows the <see cref="T:Microsoft.VisualBasic.FileIO.TextFieldParser" /> object to attempt to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-342">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-342">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HasFieldsEnclosedInQuotes">
      <MemberSignature Language="C#" Value="public bool HasFieldsEnclosedInQuotes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFieldsEnclosedInQuotes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes" />
      <MemberSignature Language="VB.NET" Value="Public Property HasFieldsEnclosedInQuotes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFieldsEnclosedInQuotes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HasFieldsEnclosedInQuotes : bool with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afd2-343">代表分隔的檔案進行剖析時，欄位是否加上引號。</span><span class="sxs-lookup"><span data-stu-id="8afd2-343">Denotes whether fields are enclosed in quotation marks when a delimited file is being parsed.</span></span></summary>
        <value><span data-ttu-id="8afd2-344">如果欄位要以引號括住則為 <see langword="True" />，否則為 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-344"><see langword="True" /> if fields are enclosed in quotation marks; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-345">這是進階的成員;它不會顯示在 IntelliSense 中除非您按一下 [**所有**] 索引標籤。</span><span class="sxs-lookup"><span data-stu-id="8afd2-345">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="8afd2-346">如果屬性是`True`，剖析器會假設欄位會括在引號 ("")，而且可能會包含行尾結束符號。</span><span class="sxs-lookup"><span data-stu-id="8afd2-346">If the property is `True`, the parser assumes that fields are enclosed in quotation marks (" ") and may contain line endings.</span></span>  
  
 <span data-ttu-id="8afd2-347">如果欄位以引號括住，例如`abc, "field2a,field2b", field3`這個屬性，而且`True`，則會傳回所有以引號括住的文字，因為; 此範例會傳回`abc|field2a,field2b|field3`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-347">If a field is enclosed in quotation marks, for example, `abc, "field2a,field2b", field3` and this property is `True`, then all text enclosed in quotation marks will be returned as is; this example would return `abc|field2a,field2b|field3`.</span></span> <span data-ttu-id="8afd2-348">將此屬性設定為`False`讓此範例會傳回`abc|"field2a|field2b"|field3`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-348">Setting this property to `False` would make this example return `abc|"field2a|field2b"|field3`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-349">此範例會設定`HasFieldsEnclosedInQuotes`屬性，以`True`如`myReader`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-349">This example sets the `HasFieldsEnclosedInQuotes` property to `True` for `myReader`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#18](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-350">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-350">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public long LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LineNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LineNumber { long get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int64" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afd2-351">傳回目前的行號，如果資料流中已沒有可用的字元，則會傳回 -1。</span><span class="sxs-lookup"><span data-stu-id="8afd2-351">Returns the current line number, or returns -1 if no more characters are available in the stream.</span></span></summary>
        <value><span data-ttu-id="8afd2-352">目前的行號。</span><span class="sxs-lookup"><span data-stu-id="8afd2-352">The current line number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-353">這是進階的成員;它不會顯示在 IntelliSense 中除非您按一下 [**所有**] 索引標籤。</span><span class="sxs-lookup"><span data-stu-id="8afd2-353">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="8afd2-354">判斷的行號時，會忽略空白行和註解。</span><span class="sxs-lookup"><span data-stu-id="8afd2-354">Blank lines and comments are not ignored when determining the line number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-355">這個範例會在文字檔案中搜尋"Jones"的名稱，並報告上哪一行。</span><span class="sxs-lookup"><span data-stu-id="8afd2-355">This example searches for the name "Jones" in the text file and reports what line(s) it occurs on.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-356">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-356">Objects (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PeekChars">
      <MemberSignature Language="C#" Value="public string PeekChars (int numberOfChars);" />
      <MemberSignature Language="ILAsm" Value=".method public instance string PeekChars(int32 numberOfChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekChars (numberOfChars As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PeekChars(int numberOfChars);" />
      <MemberSignature Language="F#" Value="member this.PeekChars : int -&gt; string" Usage="textFieldParser.PeekChars numberOfChars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfChars" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberOfChars"><span data-ttu-id="8afd2-357"><see langword="Int32" />.</span><span class="sxs-lookup"><span data-stu-id="8afd2-357"><see langword="Int32" />.</span></span> <span data-ttu-id="8afd2-358">要讀取的字元數。</span><span class="sxs-lookup"><span data-stu-id="8afd2-358">Number of characters to read.</span></span> <span data-ttu-id="8afd2-359">必要。</span><span class="sxs-lookup"><span data-stu-id="8afd2-359">Required.</span></span></param>
        <summary><span data-ttu-id="8afd2-360">讀取指定數目的字元而不使游標前進。</span><span class="sxs-lookup"><span data-stu-id="8afd2-360">Reads the specified number of characters without advancing the cursor.</span></span></summary>
        <returns><span data-ttu-id="8afd2-361">字串，包含指定的已讀取字元數。</span><span class="sxs-lookup"><span data-stu-id="8afd2-361">A string that contains the specified number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-362">`numberOfChars`值必須小於行中的字元總數。</span><span class="sxs-lookup"><span data-stu-id="8afd2-362">The `numberOfChars` value must be less than the total number of characters in the line.</span></span> <span data-ttu-id="8afd2-363">如果不是，所傳回的字串`PeekChars`會截斷成列的長度。</span><span class="sxs-lookup"><span data-stu-id="8afd2-363">If it is not, the string returned by `PeekChars` will be truncated to the length of the line.</span></span>  
  
 <span data-ttu-id="8afd2-364">空白行會遭到忽略。</span><span class="sxs-lookup"><span data-stu-id="8afd2-364">Blank lines are ignored.</span></span>  
  
 <span data-ttu-id="8afd2-365">不會傳回行結尾字元。</span><span class="sxs-lookup"><span data-stu-id="8afd2-365">End-of-line characters are not returned.</span></span>  
  
 <span data-ttu-id="8afd2-366">`PeekChars`方法會執行不需要剖析; 行尾字元分隔欄位中的會解譯為實際尾。</span><span class="sxs-lookup"><span data-stu-id="8afd2-366">The `PeekChars` method performs no parsing; an end-of- line character within a delimited field is interpreted as the actual end of the line.</span></span>  
  
 <span data-ttu-id="8afd2-367">下表列出與工作的範例`PeekChars`方法。</span><span class="sxs-lookup"><span data-stu-id="8afd2-367">The following table lists examples of tasks involving the `PeekChars` method.</span></span>  
  
|<span data-ttu-id="8afd2-368">以</span><span class="sxs-lookup"><span data-stu-id="8afd2-368">To</span></span>|<span data-ttu-id="8afd2-369">請參閱</span><span class="sxs-lookup"><span data-stu-id="8afd2-369">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="8afd2-370">判斷剖析它之前的欄位的格式</span><span class="sxs-lookup"><span data-stu-id="8afd2-370">Determine the format of a field before parsing it</span></span>|[<span data-ttu-id="8afd2-371">如何：以多種格式從文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-371">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-372">這個範例會使用`PeekChars`尋找資料的結尾，並停止在該點剖析檔案。</span><span class="sxs-lookup"><span data-stu-id="8afd2-372">This example uses `PeekChars` to find the end of the data and stop parsing the file at that point.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8afd2-373"><paramref name="numberOfChars" /> 小於 0。</span><span class="sxs-lookup"><span data-stu-id="8afd2-373"><paramref name="numberOfChars" /> is less than 0.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-374">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-374">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="8afd2-375">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-375">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/reading-from-files.md"><span data-ttu-id="8afd2-376">在 Visual Basic 中讀取檔案</span><span class="sxs-lookup"><span data-stu-id="8afd2-376">Reading from Files in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadFields">
      <MemberSignature Language="C#" Value="public string[] ReadFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string[] ReadFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadFields () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ ReadFields();" />
      <MemberSignature Language="F#" Value="member this.ReadFields : unit -&gt; string[]" Usage="textFieldParser.ReadFields " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8afd2-377">讀取目前行上的所有欄位，將它們傳回為字串陣列，並將游標前進至包含資料的下一行。</span><span class="sxs-lookup"><span data-stu-id="8afd2-377">Reads all fields on the current line, returns them as an array of strings, and advances the cursor to the next line containing data.</span></span></summary>
        <returns><span data-ttu-id="8afd2-378">字串陣列，包含目前行的欄位值。</span><span class="sxs-lookup"><span data-stu-id="8afd2-378">An array of strings that contains field values for the current line.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-379">若要允許使用者剖析多個格式的文字檔`ReadFields`方法會檢查的值`TextFieldType`， `Delimiters`，和`FieldWidths`、 如果有指定，每次呼叫時。</span><span class="sxs-lookup"><span data-stu-id="8afd2-379">In order to allow users to parse text files in multiple formats, the `ReadFields` method examines the values of `TextFieldType`, `Delimiters`, and `FieldWidths`, if they are specified, each time it is called.</span></span> <span data-ttu-id="8afd2-380">使用者必須正確設定`TextFieldType`並`FieldWidths`或`Delimiters`適當的屬性。</span><span class="sxs-lookup"><span data-stu-id="8afd2-380">Users need to correctly configure the `TextFieldType` and `FieldWidths` or `Delimiters` properties, as appropriate.</span></span> <span data-ttu-id="8afd2-381">如果`TextFieldType`設為`Delimited`，並`Delimiters`未設定，或如果`TextFieldType`設定為`FixedWidth`和`FieldWidths`，擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="8afd2-381">If `TextFieldType` is set to `Delimited`, and `Delimiters` is not set, or if `TextFieldType` is set to `FixedWidth` and `FieldWidths`, an exception is thrown.</span></span>  
  
 <span data-ttu-id="8afd2-382">如果`ReadFields`遇到空白列，則會略過，而且會傳回下一個非空白列。</span><span class="sxs-lookup"><span data-stu-id="8afd2-382">If `ReadFields` encounters blank lines, they are skipped and the next non-blank line is returned.</span></span>  
  
 <span data-ttu-id="8afd2-383">如果`ReadFields`方法無法剖析目前這一行時，會引發例外狀況並不會移動到下一行。</span><span class="sxs-lookup"><span data-stu-id="8afd2-383">If the `ReadFields` method cannot parse the current line, it raises an exception and does not move to the next line.</span></span> <span data-ttu-id="8afd2-384">這可讓您的應用程式，以嘗試剖析列一次。</span><span class="sxs-lookup"><span data-stu-id="8afd2-384">This enables your application to attempt to parse the line again.</span></span>  
  
 <span data-ttu-id="8afd2-385">下表列出與工作的範例`ReadFields`方法。</span><span class="sxs-lookup"><span data-stu-id="8afd2-385">The following table lists examples of tasks involving the `ReadFields` method.</span></span>  
  
|<span data-ttu-id="8afd2-386">以</span><span class="sxs-lookup"><span data-stu-id="8afd2-386">To</span></span>|<span data-ttu-id="8afd2-387">請參閱</span><span class="sxs-lookup"><span data-stu-id="8afd2-387">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="8afd2-388">從分隔的檔案讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-388">Read from a delimited file</span></span>|[<span data-ttu-id="8afd2-389">如何：從逗號分隔文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-389">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="8afd2-390">從固定寬度檔案讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-390">Read from a fixed-width file</span></span>|[<span data-ttu-id="8afd2-391">如何：從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-391">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-392">這個範例會使用`ReadFields`方法從逗號分隔的檔案讀取`ParserText.txt`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-392">This example uses the `ReadFields` method to read from the comma-delimited file `ParserText.txt`.</span></span> <span data-ttu-id="8afd2-393">範例會寫入至欄位`Testfile.txt`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-393">The example writes the fields to `Testfile.txt`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.VisualBasic.FileIO.MalformedLineException"><span data-ttu-id="8afd2-394">欄位無法使用指定的格式進行剖析。</span><span class="sxs-lookup"><span data-stu-id="8afd2-394">A field cannot be parsed by using the specified format.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="8afd2-395">關聯的列舉型別：<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-395">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="8afd2-396">關聯的列舉型別：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-396">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span></span></permission>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
        <altmember cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
        <altmember cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-397">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-397">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-398">如何： 從逗號分隔的文字檔案，在 Visual Basic 中讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-398">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="8afd2-399">如何： 從固定寬度文字檔案，在 Visual Basic 中讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-399">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="8afd2-400">如何： 從以多種格式，在 Visual Basic 中的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-400">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="8afd2-401">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-401">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="member this.ReadLine : unit -&gt; string" Usage="textFieldParser.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8afd2-402">將目前的行以字串傳回，並將游標前進至下一行。</span><span class="sxs-lookup"><span data-stu-id="8afd2-402">Returns the current line as a string and advances the cursor to the next line.</span></span></summary>
        <returns><span data-ttu-id="8afd2-403">取自檔案或資料流的目前行。</span><span class="sxs-lookup"><span data-stu-id="8afd2-403">The current line from the file or stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-404">`ReadLine`方法會執行不需要剖析; 行尾字元分隔欄位中的會解譯為實際尾。</span><span class="sxs-lookup"><span data-stu-id="8afd2-404">The `ReadLine` method performs no parsing; an end-of-line character within a delimited field is interpreted as the actual end of the line.</span></span>  
  
 <span data-ttu-id="8afd2-405">`Nothing` 如果已到達檔案結尾傳回的。</span><span class="sxs-lookup"><span data-stu-id="8afd2-405">`Nothing` is returned if the end of the file is reached.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-406">這個範例會讀取整個檔案`ParserText.txt`並將它寫入`Testfile.txt`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-406">This example reads through the file `ParserText.txt` and writes it to `Testfile.txt`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#15)]  
  
 <span data-ttu-id="8afd2-407">如果`Testfile.txt`不存在，它由`WriteAllText`方法。</span><span class="sxs-lookup"><span data-stu-id="8afd2-407">If `Testfile.txt` does not exist, it is created by the `WriteAllText` method.</span></span>  
  
 <span data-ttu-id="8afd2-408">此範例會寫入欄位做為單一字串。將每一行顯示的那一行，在目的地檔案中，`VbCrLf`應該在每一行的結尾附加字元。</span><span class="sxs-lookup"><span data-stu-id="8afd2-408">This example writes the fields as a single string; to have each line display on its own line in the destination file, a `VbCrLf` character should be appended at the end of each line.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-409">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-409">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="8afd2-410">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-410">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="member this.ReadToEnd : unit -&gt; string" Usage="textFieldParser.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8afd2-411">讀取文字檔的其餘部分，並將其以字串傳回。</span><span class="sxs-lookup"><span data-stu-id="8afd2-411">Reads the remainder of the text file and returns it as a string.</span></span></summary>
        <returns><span data-ttu-id="8afd2-412">取自檔案或資料流的其餘文字。</span><span class="sxs-lookup"><span data-stu-id="8afd2-412">The remaining text from the file or stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-413">這是進階的成員;它不會顯示在 IntelliSense 中除非您按一下 [**所有**] 索引標籤。</span><span class="sxs-lookup"><span data-stu-id="8afd2-413">This is an advanced member; it does not show in IntelliSense unless you click the **All** tab.</span></span>  
  
 <span data-ttu-id="8afd2-414">如果沒有任何多個讀取，因為已達到檔案結尾，`Nothing`會傳回。</span><span class="sxs-lookup"><span data-stu-id="8afd2-414">If there is nothing more to read because the end of the file has been reached, `Nothing` is returned.</span></span>  
  
 <span data-ttu-id="8afd2-415">`ReadToEnd`方法不會忽略空白行和註解。</span><span class="sxs-lookup"><span data-stu-id="8afd2-415">The `ReadToEnd` method does not ignore blank lines and comments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-416">這個範例會使用`ReadToEnd`方法來讀取整個檔案`ParserText.txt`並將它寫入檔案`Testfile.txt`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-416">This example uses the `ReadToEnd` method to read the entire file `ParserText.txt` and write it to the file `Testfile.txt`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#10)]  
  
 <span data-ttu-id="8afd2-417">如果`Testfile.txt`不存在，它由`WriteAllText`方法。</span><span class="sxs-lookup"><span data-stu-id="8afd2-417">If `Testfile.txt` does not exist, it is created by the `WriteAllText` method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-418">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-418">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="8afd2-419">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-419">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetDelimiters">
      <MemberSignature Language="C#" Value="public void SetDelimiters (params string[] delimiters);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetDelimiters(string[] delimiters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDelimiters (ParamArray delimiters As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDelimiters(... cli::array &lt;System::String ^&gt; ^ delimiters);" />
      <MemberSignature Language="F#" Value="member this.SetDelimiters : string[] -&gt; unit" Usage="textFieldParser.SetDelimiters delimiters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delimiters" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="delimiters"><span data-ttu-id="8afd2-420">型別 <see langword="String" /> 的陣列。</span><span class="sxs-lookup"><span data-stu-id="8afd2-420">Array of type <see langword="String" />.</span></span></param>
        <summary><span data-ttu-id="8afd2-421">將讀取器 (Reader) 的分隔符號設為指定的值，並將欄位型別 (Field Type) 設為 <see langword="Delimited" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-421">Sets the delimiters for the reader to the specified values, and sets the field type to <see langword="Delimited" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-422">現有的內容`Delimiters`當設定這個方法時，會清除屬性。</span><span class="sxs-lookup"><span data-stu-id="8afd2-422">The existing contents of the `Delimiters` property are cleared when this method is set.</span></span>  
  
 <span data-ttu-id="8afd2-423">這個方法可用來設定分隔符號，而不需要建立陣列。</span><span class="sxs-lookup"><span data-stu-id="8afd2-423">This method provides a way to set delimiters without creating an array.</span></span>  
  
 <span data-ttu-id="8afd2-424">下表列出的工作，包含範例`SetDelimiters`方法。</span><span class="sxs-lookup"><span data-stu-id="8afd2-424">The following table lists an example of a task involving the `SetDelimiters` method.</span></span>  
  
|<span data-ttu-id="8afd2-425">以</span><span class="sxs-lookup"><span data-stu-id="8afd2-425">To</span></span>|<span data-ttu-id="8afd2-426">請參閱</span><span class="sxs-lookup"><span data-stu-id="8afd2-426">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="8afd2-427">剖析文字檔案</span><span class="sxs-lookup"><span data-stu-id="8afd2-427">Parse a text file</span></span>|[<span data-ttu-id="8afd2-428">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-428">Parsing Text Files with the TextFieldParser Object</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-429">這個範例會開啟文字欄位的剖析器，並定義做為分隔符號`vbTab`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-429">This example opens a text field parser and defines the delimiter as `vbTab`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#4)]  
  
 <span data-ttu-id="8afd2-430">將路徑`C:\logs\test.log`與您想要剖析的檔案名稱與路徑。</span><span class="sxs-lookup"><span data-stu-id="8afd2-430">Replace the path `C:\logs\test.log` with the path and name of the file you wish to parse.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8afd2-431">分隔符號長度為零。</span><span class="sxs-lookup"><span data-stu-id="8afd2-431">A delimiter is zero-length.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-432">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-432">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="8afd2-433">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-433">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-434">如何： 從逗號分隔的文字檔案，在 Visual Basic 中讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-434">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetFieldWidths">
      <MemberSignature Language="C#" Value="public void SetFieldWidths (params int[] fieldWidths);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetFieldWidths(int32[] fieldWidths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFieldWidths (ParamArray fieldWidths As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFieldWidths(... cli::array &lt;int&gt; ^ fieldWidths);" />
      <MemberSignature Language="F#" Value="member this.SetFieldWidths : int[] -&gt; unit" Usage="textFieldParser.SetFieldWidths fieldWidths" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldWidths" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fieldWidths"><span data-ttu-id="8afd2-435"><see langword="Integer" /> 的陣列。</span><span class="sxs-lookup"><span data-stu-id="8afd2-435">Array of <see langword="Integer" />.</span></span></param>
        <summary><span data-ttu-id="8afd2-436">將讀取器 (Reader) 的分隔符號設定為指定的值。</span><span class="sxs-lookup"><span data-stu-id="8afd2-436">Sets the delimiters for the reader to the specified values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-437">現有的內容`Delimiters`設定完成後，會清除屬性。</span><span class="sxs-lookup"><span data-stu-id="8afd2-437">The existing contents of the `Delimiters` property are cleared when this is set.</span></span>  
  
 <span data-ttu-id="8afd2-438">這個方法可用來設定分隔符號，而不需要建立陣列。</span><span class="sxs-lookup"><span data-stu-id="8afd2-438">This method provides a way to set delimiters without creating an array.</span></span>  
  
 <span data-ttu-id="8afd2-439">下表列出範例中的工作涉及`SetFieldWidths`方法。</span><span class="sxs-lookup"><span data-stu-id="8afd2-439">The following table lists example of tasks involving the `SetFieldWidths` method.</span></span>  
  
|<span data-ttu-id="8afd2-440">以</span><span class="sxs-lookup"><span data-stu-id="8afd2-440">To</span></span>|<span data-ttu-id="8afd2-441">請參閱</span><span class="sxs-lookup"><span data-stu-id="8afd2-441">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="8afd2-442">剖析文字檔案。</span><span class="sxs-lookup"><span data-stu-id="8afd2-442">Parse a text file.</span></span>|[<span data-ttu-id="8afd2-443">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-443">Parsing Text Files with the TextFieldParser Object</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-444">這個範例會開啟文字欄位的剖析器，並定義欄位寬度為`5`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-444">This example opens a text-field parser and defines the field width as `5`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#12)]  
  
 <span data-ttu-id="8afd2-445">將路徑`C:\logs\test.log`與您想要剖析的檔案名稱與路徑。</span><span class="sxs-lookup"><span data-stu-id="8afd2-445">Replace the path `C:\logs\test.log` with the path and name of the file you wish to parse.</span></span>  
  
 <span data-ttu-id="8afd2-446">下列範例會開啟文字欄位的剖析器，並定義為欄位寬度`5`， `10`，和變數。</span><span class="sxs-lookup"><span data-stu-id="8afd2-446">The following example opens a text-field parser and defines the field widths as `5`, `10`, and variable.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#13)]  
  
 <span data-ttu-id="8afd2-447">將路徑`C:\logs\test.log`與您想要剖析的檔案名稱與路徑。</span><span class="sxs-lookup"><span data-stu-id="8afd2-447">Replace the path `C:\logs\test.log` with the path and name of the file you wish to parse.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-448">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-448">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="8afd2-449">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-449">Parsing Text Files with the TextFieldParser Object</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TextFieldType">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.FileIO.FieldType TextFieldType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.FileIO.FieldType TextFieldType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
      <MemberSignature Language="VB.NET" Value="Public Property TextFieldType As FieldType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::FileIO::FieldType TextFieldType { Microsoft::VisualBasic::FileIO::FieldType get(); void set(Microsoft::VisualBasic::FileIO::FieldType value); };" />
      <MemberSignature Language="F#" Value="member this.TextFieldType : Microsoft.VisualBasic.FileIO.FieldType with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.FieldType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afd2-450">指出剖析的檔案是分隔的檔案，還是固定寬度的檔案。</span><span class="sxs-lookup"><span data-stu-id="8afd2-450">Indicates whether the file to be parsed is delimited or fixed-width.</span></span></summary>
        <value><span data-ttu-id="8afd2-451"><see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> 值，指出要剖析的檔案是分隔的檔案，還是固定寬度的檔案。</span><span class="sxs-lookup"><span data-stu-id="8afd2-451">A <see cref="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" /> value that indicates whether the file to be parsed is delimited or fixed-width.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-452">這個屬性的預設值被分隔。</span><span class="sxs-lookup"><span data-stu-id="8afd2-452">The default value of this property is delimited.</span></span>  
  
 <span data-ttu-id="8afd2-453">下表列出與工作的範例`TextFieldType`屬性。</span><span class="sxs-lookup"><span data-stu-id="8afd2-453">The following table lists examples of tasks involving the `TextFieldType` property.</span></span>  
  
|<span data-ttu-id="8afd2-454">以</span><span class="sxs-lookup"><span data-stu-id="8afd2-454">To</span></span>|<span data-ttu-id="8afd2-455">請參閱</span><span class="sxs-lookup"><span data-stu-id="8afd2-455">See</span></span>|  
|--------|---------|  
|<span data-ttu-id="8afd2-456">從分隔的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-456">Read from a delimited text file</span></span>|[<span data-ttu-id="8afd2-457">如何：從逗號分隔文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-457">How to: Read From Comma-Delimited Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md)|  
|<span data-ttu-id="8afd2-458">從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-458">Read from a fixed-width text file</span></span>|[<span data-ttu-id="8afd2-459">如何：從固定寬度的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-459">How to: Read From Fixed-width Text Files</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md)|  
|<span data-ttu-id="8afd2-460">從以多種格式的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-460">Read from a text file with multiple formats</span></span>|[<span data-ttu-id="8afd2-461">如何：以多種格式從文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-461">How to: Read From Text Files with Multiple Formats</span></span>](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md)|  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-462">這個範例會建立`TextFieldParser`， `FileReader`，並指定它分隔。</span><span class="sxs-lookup"><span data-stu-id="8afd2-462">This example creates a `TextFieldParser`, `FileReader`, and specifies that it is delimited.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#19](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#19)]  
  
 <span data-ttu-id="8afd2-463">這個範例會建立`TextFieldParser`， `FileReader`，並指定它是固定寬度。</span><span class="sxs-lookup"><span data-stu-id="8afd2-463">This example creates a `TextFieldParser`, `FileReader`, and specifies that it is fixed-width.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#20](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FieldType" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-464">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-464">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="8afd2-465">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-465">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-466">如何： 從逗號分隔的文字檔案，在 Visual Basic 中讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-466">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="8afd2-467">如何： 從固定寬度文字檔案，在 Visual Basic 中讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-467">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="8afd2-468">如何： 從以多種格式，在 Visual Basic 中的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-468">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2ewecs64(v=vs.85)"><span data-ttu-id="8afd2-469">疑難排解例外狀況：Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span><span class="sxs-lookup"><span data-stu-id="8afd2-469">Troubleshooting Exceptions: Microsoft.VisualBasic.FileIO.TextFieldParser.MalformedLineException</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TrimWhiteSpace">
      <MemberSignature Language="C#" Value="public bool TrimWhiteSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimWhiteSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property TrimWhiteSpace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimWhiteSpace { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TrimWhiteSpace : bool with get, set" Usage="Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8afd2-470">指出是否應當去除欄位值中前置和結尾的空白字元。</span><span class="sxs-lookup"><span data-stu-id="8afd2-470">Indicates whether leading and trailing white space should be trimmed from field values.</span></span></summary>
        <value><span data-ttu-id="8afd2-471">如果應去除欄位值的前置和結尾空白字元則為 <see langword="True" />，否則為 <see langword="False" />。</span><span class="sxs-lookup"><span data-stu-id="8afd2-471"><see langword="True" /> if leading and trailing white space should be trimmed from field values; otherwise, <see langword="False" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8afd2-472">這個屬性的預設值為 `True`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-472">The default value for this property is `True`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8afd2-473">這個範例會建立`TextFieldParser`， `FileReader`，並設定`TrimWhiteSpace`屬性設`True`。</span><span class="sxs-lookup"><span data-stu-id="8afd2-473">This example creates a `TextFieldParser`, `FileReader`, and sets the `TrimWhiteSpace` property to `True`.</span></span>  
  
 [!code-vb[VbVbalrTextFieldParser#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrTextFieldParser/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md"><span data-ttu-id="8afd2-474">物件 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="8afd2-474">Objects (Visual Basic)</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/parsing-text-files-with-the-textfieldparser-object.md"><span data-ttu-id="8afd2-475">使用 TextFieldParser 物件剖析文字檔</span><span class="sxs-lookup"><span data-stu-id="8afd2-475">Parsing Text Files with the TextFieldParser Object</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-comma-delimited-text-files.md"><span data-ttu-id="8afd2-476">如何： 從逗號分隔的文字檔案，在 Visual Basic 中讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-476">How to: Read From a Comma-Delimited Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-fixed-width-text-files.md"><span data-ttu-id="8afd2-477">如何： 從固定寬度文字檔案，在 Visual Basic 中讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-477">How to: Read From a Fixed-width Text File in Visual Basic</span></span></related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-read-from-text-files-with-multiple-formats.md"><span data-ttu-id="8afd2-478">如何： 從以多種格式，在 Visual Basic 中的文字檔讀取</span><span class="sxs-lookup"><span data-stu-id="8afd2-478">How to: Read From a Text File with Multiple Formats in Visual Basic</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>