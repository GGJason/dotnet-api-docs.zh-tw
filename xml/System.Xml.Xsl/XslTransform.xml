<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e528edbe87062a2b9dbb17cc8ed4ea0d2f4638a" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64996489" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cb4fa-101">轉換使用可延伸樣式表語言轉換 (XSLT) 樣式表的 XML 資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-102"><xref:System.Xml.Xsl.XslTransform>類別是 Microsoft.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-103"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-104">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-105"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-106">XSLT 樣式表必須使用命名空間`http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-107">其他引數也可以加入至樣式表使用<xref:System.Xml.Xsl.XsltArgumentList>類別。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="cb4fa-108">這個類別包含樣式表和擴充物件可從樣式表呼叫的輸入的參數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="cb4fa-109">若要將 XML 資料的轉換：</span><span class="sxs-lookup"><span data-stu-id="cb4fa-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="cb4fa-110">建立<xref:System.Xml.Xsl.XslTransform>物件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="cb4fa-111">使用<xref:System.Xml.Xsl.XslTransform.Load%2A>方法來載入樣式表轉換。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="cb4fa-112">此方法有數個多載，可以載入樣式表 using <xref:System.Xml.XmlReader>， <xref:System.Xml.XPath.XPathNavigator>， <xref:System.Xml.XPath.IXPathNavigable>，或使用檔案的位置 URL。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="cb4fa-113">使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>來轉換 XML 資料的方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="cb4fa-114">這個方法有數個多載，以及可處理不同類型的輸入和輸出。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="cb4fa-115">您也可以指定<xref:System.Xml.Xsl.XsltArgumentList>包含要在轉換期間使用做為輸入的其他引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="cb4fa-116">**安全性考量**</span><span class="sxs-lookup"><span data-stu-id="cb4fa-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="cb4fa-117">建立使用 <xref:System.Xml.Xsl.XslTransform> 類別的應用程式時，您應留意下列項目及其含意：</span><span class="sxs-lookup"><span data-stu-id="cb4fa-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="cb4fa-118">依預設會啟用擴充物件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="cb4fa-119">如果將包含擴充物件的 <xref:System.Xml.Xsl.XsltArgumentList> 物件傳遞到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，則會加以利用。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="cb4fa-120">XSLT 樣式表可以包含其他檔案及內嵌指令碼區塊的參考。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="cb4fa-121">惡意使用者可以利用這一點，藉由提供給您的資料或樣式表執行時將會導致您的系統處理，直到電腦資源不足。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="cb4fa-122">在混合的信任環境中執行的 XSLT 應用程式，會產生用於詐騙的樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="cb4fa-123">例如，居心不良的使用者可載入含有害樣式表的物件，然後將其傳遞給另一使用者，該使用者隨後會呼叫 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法並執行轉換。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="cb4fa-124">您可以降低這些安全性問題不接受<xref:System.Xml.Xsl.XslTransform>物件、 XSLT 樣式表或從不受信任來源的 XML 來源資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="cb4fa-125">**指令碼支援**</span><span class="sxs-lookup"><span data-stu-id="cb4fa-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="cb4fa-126">此類別支援使用內嵌指令碼`msxsl:script`項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="cb4fa-127">在.NET Framework 版本 1.1，樣式表的辨識項會決定哪些權限都各有內嵌的指令碼。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="cb4fa-128">如果樣式表載入從統一資源識別元 (URI)，則 URI 用來建立辨識項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="cb4fa-129">這個辨識項包括加上其站台和區域的 URI。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="cb4fa-130">如果使用其他來源載入樣式表，您還可以提供辨識項，藉由傳遞<xref:System.Security.Policy.Evidence?displayProperty=nameWithType>物件至<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="cb4fa-131">否則，指令碼組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="cb4fa-132">非完全信任呼叫端：`UnmanagedCode`權限，才能編譯內嵌的指令碼。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="cb4fa-133">`ControlEvidence` 權限，才能提供<xref:System.Security.Policy.Evidence>至<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="cb4fa-134">A<xref:System.Security.SecurityException>如果呼叫端沒有必要的權限，就會擲回。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="cb4fa-135">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> 和 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="cb4fa-136">`msxsl:script`項目具有下列需求：</span><span class="sxs-lookup"><span data-stu-id="cb4fa-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="cb4fa-137">`msxsl:script`項目屬於`urn:schemas-microsoft-com:xslt`命名空間。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="cb4fa-138">樣式表必須包含命名空間宣告`xmlns:msxsl=urn:schemas-microsoft-com:xslt`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="cb4fa-139">`msxsl:script`元素可以包含`language`屬性，指定要使用的指令碼語言。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="cb4fa-140">值`language`屬性必須是下列其中之一：C#、 CSharp、 VB、 VisualBasic、 JScript 或 JavaScript。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="cb4fa-141">語言名稱不區分大小寫，因為 JavaScript 和 javascript 都有效。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="cb4fa-142">如果`language`屬性未指定，則會預設為 JScript。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="cb4fa-143">`msxsl:script`元素必須包含`implements-prefix`包含表示指令碼區塊相關聯的命名空間的前置詞的屬性。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="cb4fa-144">此命名空間必須定義樣式表中。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="cb4fa-145">樣式表可以包含多個指令碼區塊會依命名空間。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="cb4fa-146">您不能有相同的命名空間內的多個語言的指令碼區塊。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="cb4fa-147">指令碼區塊可以呼叫另一個的指令碼區塊中定義的函式，提供指令碼區塊會位於相同的命名空間。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="cb4fa-148">根據規則和指令碼語言的語法會剖析指令碼區塊的內容 (藉由提供`language`屬性)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="cb4fa-149">例如，如果您有 C# 指令碼區塊，註解會加上`//`字元。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="cb4fa-150">註解必須是有效的 XML 內容。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-150">The comments must be valid XML content.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="cb4fa-151">建議您將指令碼區塊包裝在 CDATA 區段。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-151">It is recommended that you wrap script blocks in a CDATA section.</span></span>
  
 [!INCLUDE [xsltransform-script](~/includes/xsltransform-script.md)] 
   
 <span data-ttu-id="cb4fa-152">函式可在 `msxsl:script` 項目內進行宣告。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-152">Functions can be declared within the `msxsl:script` element.</span></span> <span data-ttu-id="cb4fa-153">下表顯示根據預設所支援的命名空間。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-153">The following table shows the namespaces that are supported by default.</span></span>  
  
|<span data-ttu-id="cb4fa-154">支援的命名空間</span><span class="sxs-lookup"><span data-stu-id="cb4fa-154">Supported Namespaces</span></span>|<span data-ttu-id="cb4fa-155">描述</span><span class="sxs-lookup"><span data-stu-id="cb4fa-155">Description</span></span>|  
|--------------------------|-----------------|  
|`System`|<span data-ttu-id="cb4fa-156">系統類別。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-156">System classes.</span></span>|  
|`System.Collection`|<span data-ttu-id="cb4fa-157">集合類別。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-157">Collection classes.</span></span>|  
|`System.Text`|<span data-ttu-id="cb4fa-158">文字處理的類別。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-158">Text handling classes.</span></span>|  
|`System.Xml`|<span data-ttu-id="cb4fa-159">核心 XML 類別。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-159">Core XML classes.</span></span>|  
|`System.Xml.Xsl`|<span data-ttu-id="cb4fa-160">XSLT 類別。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-160">XSLT classes.</span></span>|  
|`System.Xml.XPath`|<span data-ttu-id="cb4fa-161">XML 路徑語言 (XPath) 類別。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-161">XML Path Language (XPath) classes.</span></span>|  
  
 <span data-ttu-id="cb4fa-162">提供的引數和傳回指令碼函式所定義的值必須是其中一個下面所列的 World Wide Web Consortium (W3C) 型別。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-162">The supplied arguments and return values defined by the script functions must be one of the World Wide Web Consortium (W3C) types listed below.</span></span> <span data-ttu-id="cb4fa-163">下表詳述 W3C 型別、 XPath 或 XSLT 之間的對應和對應的.NET Framework 類別。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-163">The following table details the mapping between the W3C types, either XPath or XSLT, and the corresponding .NET Framework classes.</span></span>  
  
|<span data-ttu-id="cb4fa-164">W3C 型別</span><span class="sxs-lookup"><span data-stu-id="cb4fa-164">W3C Type</span></span>|<span data-ttu-id="cb4fa-165">對等的.NET 類別</span><span class="sxs-lookup"><span data-stu-id="cb4fa-165">Equivalent .NET class</span></span>|  
|--------------|---------------------------|  
|<span data-ttu-id="cb4fa-166">字串 (XPath)</span><span class="sxs-lookup"><span data-stu-id="cb4fa-166">String (XPath)</span></span>|`System.String`|  
|<span data-ttu-id="cb4fa-167">布林值 (XPath)</span><span class="sxs-lookup"><span data-stu-id="cb4fa-167">Boolean (XPath)</span></span>|`System.Boolean`|  
|<span data-ttu-id="cb4fa-168">數字 (XPath)</span><span class="sxs-lookup"><span data-stu-id="cb4fa-168">Number (XPath)</span></span>|`System.Double`|  
|<span data-ttu-id="cb4fa-169">Result Tree Fragment (XSLT)</span><span class="sxs-lookup"><span data-stu-id="cb4fa-169">Result Tree Fragment (XSLT)</span></span>|`System.Xml.XPath.XPathNavigator`|  
|<span data-ttu-id="cb4fa-170">節點集 (XPath)</span><span class="sxs-lookup"><span data-stu-id="cb4fa-170">Node Set (XPath)</span></span>|`System.Xml.XPath.XPathNodeIterator`|  
  
 <span data-ttu-id="cb4fa-171">如果指令碼函式使用下列其中一個數字型別：這些型別的 Int16、 UInt16、 Int32、 UInt32、 Int64、 UInt64、 Single 或 Decimal，強制轉成 Double，其對應至 W3C XPath 型別數目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-171">If the script function utilizes one of the following numeric types: Int16, UInt16, Int32, UInt32, Int64, UInt64, Single, or Decimal, these types are coerced to Double, which maps to the W3C XPath type number.</span></span>  
  
 <span data-ttu-id="cb4fa-172">發生例外狀況時呼叫的函式不能將引數的結果轉換成其中一個必要的型別。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-172">An exception is thrown when a function is called that cannot convert the argument result to one of the required types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-173">`msxsl:script` 並`msxsl:node-list`都是唯一的函式，從`urn:schemas-microsoft-com:xslt`所支援的命名空間<xref:System.Xml.Xsl.XslTransform>類別。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-173">`msxsl:script` and `msxsl:node-list` are the only functions from the `urn:schemas-microsoft-com:xslt` namespace that are supported by the <xref:System.Xml.Xsl.XslTransform> class.</span></span>  
  
 <span data-ttu-id="cb4fa-174"><xref:System.Xml.Xsl.XslTransform> 能夠利用 common language runtime (CLR) 程式碼，做為延伸模組機制。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-174"><xref:System.Xml.Xsl.XslTransform> has the ability to utilize common language runtime (CLR) code as an extension mechanism.</span></span> <span data-ttu-id="cb4fa-175">這可以藉由傳遞至類別的執行個體<xref:System.Xml.Xsl.XslTransform>類別，然後呼叫它的 XSLT 樣式表中的公用方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-175">This is accomplished by passing an instance of a class to the <xref:System.Xml.Xsl.XslTransform> class and calling its public methods within an XSLT style sheet.</span></span> <span data-ttu-id="cb4fa-176">方法所定義的`params`關鍵字，以允許未指定要傳遞的參數數目，無法在此案例中正常運作。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-176">Methods that are defined with the `params` keyword, which allows an unspecified number of parameters to be passed, do not work correctly in this scenario.</span></span> <span data-ttu-id="cb4fa-177">請參閱[params](~/docs/csharp/language-reference/keywords/params.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-177">See [params](~/docs/csharp/language-reference/keywords/params.md) for more details.</span></span>  
  
 <span data-ttu-id="cb4fa-178">如需詳細資訊，請參閱[XSLT 轉換使用 XslTransform 類別](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-178">For more information see [XSLT Transformations with the XslTransform Class](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb4fa-179">下列範例會轉換指定的 XML 文件，並將結果輸出至主控台。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-179">The following example transforms the specified XML document and outputs the result to the console.</span></span>  
  
 [!code-csharp[Classic WebData XslTransform Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="cb4fa-180"><see cref="T:System.Xml.Xsl.XslTransform" /> 物件是只轉換作業的執行緒安全。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-180"><see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span></span> <span data-ttu-id="cb4fa-181">其他作業不保證是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-181">Other operations are not guaranteed to be thread-safe.</span></span> <span data-ttu-id="cb4fa-182">您必須確定沒有其他方法，會在載入作業期間在物件上呼叫。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-182">You must ensure that no other methods are called on the object during load operations.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb4fa-183">初始化 <see cref="T:System.Xml.Xsl.XslTransform" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-183">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb4fa-184">載入 XSLT 樣式表，包括中參考的樣式表<see langword="xsl:include" />和<see langword="xsl:import" />項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-184">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-185"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-185">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-186"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-186">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-187">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-187">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="cb4fa-188">指定要載入的 XSLT 樣式表的 URL。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-188">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <summary><span data-ttu-id="cb4fa-189">載入 URL 指定的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-189">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-190"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-190">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-191"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-191">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-192">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-192">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-193"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-193"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-194">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-194">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="cb4fa-195">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-195">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="cb4fa-196">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-196">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="cb4fa-197">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-197">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="cb4fa-198">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-198">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="cb4fa-199">樣式表的 URI 用來建立辨識項，會套用至組件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-199">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-200">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-200">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="cb4fa-201">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-201">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb4fa-202">下列範例會將 XML 文件轉換成 HTML 文件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-202">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="cb4fa-203">它會在資料表中顯示 ISBN、 標題和每本書籍的價格。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-203">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="cb4fa-204">範例會使用下列兩個輸入檔案。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-204">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="cb4fa-205">載入的資源不是有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-205">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb4fa-206">樣式表包含內嵌的指令碼，而且呼叫端沒有<see langword="UnmanagedCode" />權限。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-206">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="cb4fa-207"><see cref="T:System.Xml.XmlReader" />物件，包含 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-207">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="cb4fa-208">載入 XSLT 樣式表中所包含<see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-208">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-209"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-209">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-210"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-210">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-211">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-211">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-212"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-212"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-213">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-213">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-214">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-214">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="cb4fa-215">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-215">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="cb4fa-216">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-216">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="cb4fa-217">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過其所有子系。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-217">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="cb4fa-218">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-218">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="cb4fa-219">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XmlReader>位於樣式表的結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-219">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="cb4fa-220">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-220">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="cb4fa-221">如果樣式表包含實體，您應該指定<xref:System.Xml.XmlReader>，可解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-221">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="cb4fa-222">在此情況下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-222">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="cb4fa-223">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-223">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="cb4fa-224">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-224">The assembly has full trust.</span></span> <span data-ttu-id="cb4fa-225">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-225">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-226">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-226">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="cb4fa-227">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-227">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb4fa-228">下列範例會將轉換依標題排序所有書籍的 XML 檔案。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-228">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="cb4fa-229">此範例會使用下列的資料檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-229">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="cb4fa-230">目前的節點不符合有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-230">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb4fa-231">樣式表包含內嵌的指令碼，而且呼叫端沒有<see langword="UnmanagedCode" />權限。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-231">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="cb4fa-232">物件，實作<see cref="T:System.Xml.XPath.IXPathNavigable" />介面。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-232">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="cb4fa-233">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />) 或包含 XSLT 樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-233">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="cb4fa-234">載入 XSLT 樣式表中所包含<see cref="T:System.Xml.XPath.IXPathNavigable" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-234">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-235"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-235">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-236"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-236">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-237">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-237">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-238"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-238"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-239">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-239">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-240">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-240">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="cb4fa-241">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-241">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="cb4fa-242">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-242">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="cb4fa-243">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-243">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="cb4fa-244">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-244">The assembly has full trust.</span></span> <span data-ttu-id="cb4fa-245">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-245">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-246">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-246">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="cb4fa-247">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-247">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="cb4fa-248">載入的資源不是有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-248">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb4fa-249">樣式表包含內嵌的指令碼，而且呼叫端沒有<see langword="UnmanagedCode" />權限。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-249">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="cb4fa-250"><see cref="T:System.Xml.XPath.XPathNavigator" />物件，包含 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-250">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="cb4fa-251">載入 XSLT 樣式表中所包含<see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-251">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-252"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-252">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-253"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-253">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-254">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-254">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-255"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-255"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-256">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-256">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-257">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-257">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="cb4fa-258">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-258">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="cb4fa-259">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-259">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="cb4fa-260">從目前的位置載入樣式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-260">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="cb4fa-261">若要使用載入的文件的一部分做為樣式表，瀏覽至樣式表開頭所對應的節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-261">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="cb4fa-262">在後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XPath.XPathNavigator>位於樣式表開頭 (上`xsl:style sheet`節點)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-262">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="cb4fa-263">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-263">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="cb4fa-264">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-264">The assembly has full trust.</span></span> <span data-ttu-id="cb4fa-265">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-265">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-266">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-266">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="cb4fa-267">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-267">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="cb4fa-268">目前的節點不符合有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-268">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb4fa-269">樣式表包含內嵌的指令碼，而且呼叫端沒有<see langword="UnmanagedCode" />權限。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-269">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="cb4fa-270">指定要載入的 XSLT 樣式表的 URL。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-270">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-271"><see cref="T:System.Xml.XmlResolver" /> 用來載入樣式表和 <c>xsl:import</c> 與 <c>xsl:include</c> 元素中參考的任何樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-271">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span>  
  
<span data-ttu-id="cb4fa-272">如果是這<see langword="null" />，預設值<see cref="T:System.Xml.XmlUrlResolver" />不需要使用者的認證用來開啟樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-272">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span></span> <span data-ttu-id="cb4fa-273">因為沒有使用預設的 <see cref="T:System.Xml.XmlUrlResolver" /> 解析樣式表中的任何外部資源，所以不會解析 <c>xsl:import</c> 和 <c>xsl:include</c> 元素。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-273">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-274"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-274">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="cb4fa-275">載入 URL 指定的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-275">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-276"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-276">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-277"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-277">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-278">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-278">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-279"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-279"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-280">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-280">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-281">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-281">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="cb4fa-282">樣式表的 URI 用來建立辨識項，會套用至組件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-282">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-283">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-283">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="cb4fa-284">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-284">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb4fa-285">下列範例會將 XML 文件轉換成 HTML 文件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-285">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="cb4fa-286">此範例會載入 XSLT 樣式表包含`xsl:include`參考另一個樣式表的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-286">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="cb4fa-287"><xref:System.Xml.XmlUrlResolver>傳遞至<xref:System.Xml.Xsl.XslTransform.Load%2A>設定的認證存取網路資源，包含的樣式表所需的方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-287">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="cb4fa-288">此範例會使用下列的資料檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-288">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="cb4fa-289">載入的資源不是有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-289">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb4fa-290">樣式表包含內嵌的指令碼，而且呼叫端沒有<see langword="UnmanagedCode" />權限。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-290">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="cb4fa-291"><see cref="T:System.Xml.XmlReader" />物件，包含 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-291">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-292"><see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-292">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="cb4fa-293">如果這是<see langword="null" />，就不會解析外部資源。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-293">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-294"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-294">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="cb4fa-295">載入 XSLT 樣式表中所包含<see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-295">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-296"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-296">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-297"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-297">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-298">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-298">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-299"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-299"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-300">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-300">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-301">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-301">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="cb4fa-302">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過其所有子系。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-302">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="cb4fa-303">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-303">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="cb4fa-304">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XmlReader>位於樣式表的結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-304">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="cb4fa-305">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-305">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="cb4fa-306">如果樣式表包含實體，您應該指定<xref:System.Xml.XmlReader>，可解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-306">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="cb4fa-307">在此情況下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-307">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="cb4fa-308">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-308">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="cb4fa-309">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-309">The assembly has full trust.</span></span> <span data-ttu-id="cb4fa-310">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-310">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-311">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-311">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="cb4fa-312">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-312">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="cb4fa-313">目前的節點不符合有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-313">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb4fa-314">樣式表包含內嵌的指令碼，而且呼叫端沒有<see langword="UnmanagedCode" />權限。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-314">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="cb4fa-315">物件，實作<see cref="T:System.Xml.XPath.IXPathNavigable" />介面。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-315">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="cb4fa-316">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />) 或包含 XSLT 樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-316">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-317"><see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-317">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="cb4fa-318">如果這是<see langword="null" />，就不會解析外部資源。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-318">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-319"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="Overload:System.Xml.Xsl.XslTransform.Load" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-319">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="cb4fa-320">載入 XSLT 樣式表中所包含<see cref="T:System.Xml.XPath.IXPathNavigable" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-320">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-321"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-321">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-322"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-322">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-323">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-323">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-324"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-324"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-325">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-325">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-326">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-326">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="cb4fa-327">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-327">The assembly has full trust.</span></span> <span data-ttu-id="cb4fa-328">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-328">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-329">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-329">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="cb4fa-330">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-330">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="cb4fa-331">載入的資源不是有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-331">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb4fa-332">樣式表包含內嵌的指令碼，而且呼叫端沒有<see langword="UnmanagedCode" />權限。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-332">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="cb4fa-333"><see cref="T:System.Xml.XPath.XPathNavigator" />物件，包含 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-333">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-334"><see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-334">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="cb4fa-335">如果這是<see langword="null" />，就不會解析外部資源。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-335">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-336"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="Overload:System.Xml.Xsl.XslTransform.Load" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-336">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="cb4fa-337">載入 XSLT 樣式表中所包含<see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-337">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-338"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-338">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-339"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-339">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-340">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-340">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-341"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-341"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-342">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-342">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-343">從目前的位置載入樣式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-343">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="cb4fa-344">若要使用載入的文件的一部分做為樣式表，瀏覽至樣式表開頭所對應的節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-344">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="cb4fa-345">在後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XPath.XPathNavigator>位於樣式表開頭 (上`xsl:style sheet`節點)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-345">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="cb4fa-346">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-346">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="cb4fa-347">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-347">The assembly has full trust.</span></span> <span data-ttu-id="cb4fa-348">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-348">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-349">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-349">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="cb4fa-350">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-350">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="cb4fa-351">目前的節點不符合有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-351">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb4fa-352">樣式表包含內嵌的指令碼，而且呼叫端沒有<see langword="UnmanagedCode" />權限。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-352">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="cb4fa-353"><see cref="T:System.Xml.XmlReader" />物件，其中包含要載入的樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-353">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-354"><see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-354">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="cb4fa-355">如果這是<see langword="null" />，就不會解析外部資源。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-355">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-356"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="Overload:System.Xml.Xsl.XslTransform.Load" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-356">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="cb4fa-357"><see cref="T:System.Security.Policy.Evidence" /> XSLT 樣式表中的指令碼區塊所產生的組件上設定。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-357">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="cb4fa-358">如果此為 <see langword="null" />則不會處理指令碼區塊、不支援 XSLT <c>document()</c> 函式，且不允許特殊權限的擴充物件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-358">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="cb4fa-359">呼叫端必須具有<see langword="ControlEvidence" />權限，才能提供指令碼組件辨識項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-359">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="cb4fa-360">非完全信任呼叫端可以將此參數設定為<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-360">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="cb4fa-361">載入 XSLT 樣式表中所包含<see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-361">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="cb4fa-362">這個方法可讓您藉由指定辨識項，限制樣式表的權限。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-362">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-363"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-363">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-364"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-364">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-365">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-365">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-366"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-366"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-367">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-367">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-368">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-368">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="cb4fa-369">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過其所有子系。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-369">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="cb4fa-370">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-370">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="cb4fa-371">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XmlReader>位於樣式表的結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-371">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="cb4fa-372">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-372">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="cb4fa-373">如果樣式表包含實體，您應該指定<xref:System.Xml.XmlReader>，可解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-373">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="cb4fa-374">在此情況下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-374">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  

  
 <span data-ttu-id="cb4fa-375">有不同的方式，提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-375">There are different ways to provide evidence.</span></span> <span data-ttu-id="cb4fa-376">下表描述何種辨識項，以便提供一般使用者案例。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-376">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="cb4fa-377">情節</span><span class="sxs-lookup"><span data-stu-id="cb4fa-377">Scenario</span></span>|<span data-ttu-id="cb4fa-378">若要提供的辨識項型別</span><span class="sxs-lookup"><span data-stu-id="cb4fa-378">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="cb4fa-379">XSLT 樣式表是獨立的或來自您信任的程式碼基底。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-379">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="cb4fa-380">使用您的組件的來源辨識項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-380">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslReader, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="cb4fa-381">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-381">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="cb4fa-382">已知來源的源頭，而且沒有可驗證的 URL。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-382">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="cb4fa-383">建立辨識項使用的 URL。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-383">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform();&#13;&#10; Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(stylesheetURL); &#13;&#10;xslt.Load(xslReader,resolver,evidence);</code></pre>|  
|<span data-ttu-id="cb4fa-384">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-384">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="cb4fa-385">來源的源頭未知。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-385">The origin of the source is not known.</span></span>|<span data-ttu-id="cb4fa-386">將辨識項設為 `null`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-386">Set evidence to `null`.</span></span> <span data-ttu-id="cb4fa-387">不會處理指令碼區塊、不支援 XSLT `document()` 函式，且不允許已授權的擴充物件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-387">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="cb4fa-388">此外，您也可以設定`resolver`參數來`null`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-388">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="cb4fa-389">這可確保`xsl:import`和`xsl:include`不會處理元素。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-389">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="cb4fa-390">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-390">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="cb4fa-391">來源的源頭未知，但是您需要指令碼支援。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-391">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="cb4fa-392">自呼叫端要求識別項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-392">Request evidence from the caller.</span></span> <span data-ttu-id="cb4fa-393">API 的呼叫端必須提供一個方法，通常提供辨識項，<xref:System.Security.Policy.Evidence>類別。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-393">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
     
## Examples  
 <span data-ttu-id="cb4fa-394">下列範例會執行 XSLT 轉換所在`xsltReader`是<xref:System.Xml.XmlReader>包含樣式表並`secureURL`是受信任的 URL，可用來建立<xref:System.Security.Policy.Evidence>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-394">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="cb4fa-395"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType>方法用來建立<xref:System.Security.Policy.Evidence>套用至樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-395">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="cb4fa-396">目前的節點不符合有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-396">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb4fa-397">參考的樣式表需要提供的辨識項不允許的功能。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-397">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="cb4fa-398">呼叫端嘗試提供辨識項，而且沒有<see langword="ControlEvidence" />權限。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-398">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="cb4fa-399">提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-399">for providing evidence.</span></span> <span data-ttu-id="cb4fa-400">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="cb4fa-400">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="cb4fa-401">物件，實作<see cref="T:System.Xml.XPath.IXPathNavigable" />介面。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-401">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="cb4fa-402">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />) 或包含 XSLT 樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-402">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-403"><see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-403">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="cb4fa-404">如果這是<see langword="null" />，就不會解析外部資源。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-404">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-405"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="Overload:System.Xml.Xsl.XslTransform.Load" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-405">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="cb4fa-406"><see cref="T:System.Security.Policy.Evidence" /> XSLT 樣式表中的指令碼區塊所產生的組件上設定。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-406">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="cb4fa-407">如果此為 <see langword="null" />則不會處理指令碼區塊、不支援 XSLT <c>document()</c> 函式，且不允許特殊權限的擴充物件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-407">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="cb4fa-408">呼叫端必須具有<see langword="ControlEvidence" />權限，才能提供指令碼組件辨識項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-408">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="cb4fa-409">非完全信任呼叫端可以將此參數設定為<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-409">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="cb4fa-410">載入 XSLT 樣式表中所包含<see cref="T:System.Xml.XPath.IXPathNavigable" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-410">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="cb4fa-411">這個方法可讓您藉由指定辨識項，限制樣式表的權限。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-411">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-412"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-412">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-413"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-413">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-414">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-414">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-415"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-415"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-416">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-416">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  

  
 <span data-ttu-id="cb4fa-417">有不同的方式，提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-417">There are different ways to provide evidence.</span></span> <span data-ttu-id="cb4fa-418">下表描述何種辨識項，以便提供一般使用者案例。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-418">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="cb4fa-419">情節</span><span class="sxs-lookup"><span data-stu-id="cb4fa-419">Scenario</span></span>|<span data-ttu-id="cb4fa-420">若要提供的辨識項型別</span><span class="sxs-lookup"><span data-stu-id="cb4fa-420">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="cb4fa-421">XSLT 樣式表是獨立的或來自您信任的程式碼基底。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-421">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="cb4fa-422">使用您的組件的來源辨識項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-422">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(style sheet, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="cb4fa-423">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-423">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="cb4fa-424">已知來源的源頭，而且沒有可驗證的 URL。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-424">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="cb4fa-425">建立辨識項使用的 URL。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-425">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(style sheet,resolver,evidence);</code></pre>|  
|<span data-ttu-id="cb4fa-426">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-426">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="cb4fa-427">來源的源頭未知。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-427">The origin of the source is not known.</span></span>|<span data-ttu-id="cb4fa-428">將辨識項設為 `null`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-428">Set evidence to `null`.</span></span> <span data-ttu-id="cb4fa-429">不會處理指令碼區塊、不支援 XSLT `document()` 函式，且不允許已授權的擴充物件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-429">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="cb4fa-430">此外，您也可以設定`resolver`參數來`null`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-430">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="cb4fa-431">這可確保`xsl:import`和`xsl:include`不會處理元素。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-431">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="cb4fa-432">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-432">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="cb4fa-433">來源的源頭未知，但是您需要指令碼支援。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-433">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="cb4fa-434">自呼叫端要求識別項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-434">Request evidence from the caller.</span></span> <span data-ttu-id="cb4fa-435">API 的呼叫端必須提供一個方法，通常提供辨識項，<xref:System.Security.Policy.Evidence>類別。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-435">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="cb4fa-436">載入的資源不是有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-436">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb4fa-437">參考的樣式表需要提供的辨識項不允許的功能。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-437">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="cb4fa-438">呼叫端嘗試提供辨識項，而且沒有<see langword="ControlEvidence" />權限。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-438">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="cb4fa-439">提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-439">for providing evidence.</span></span> <span data-ttu-id="cb4fa-440">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="cb4fa-440">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="cb4fa-441"><see cref="T:System.Xml.XPath.XPathNavigator" />物件，其中包含要載入的樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-441">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-442"><see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-442">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="cb4fa-443">如果這是<see langword="null" />，就不會解析外部資源。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-443">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-444"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="Overload:System.Xml.Xsl.XslTransform.Load" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-444">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="cb4fa-445"><see cref="T:System.Security.Policy.Evidence" /> XSLT 樣式表中的指令碼區塊所產生的組件上設定。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-445">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="cb4fa-446">如果此為 <see langword="null" />則不會處理指令碼區塊、不支援 XSLT <c>document()</c> 函式，且不允許特殊權限的擴充物件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-446">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="cb4fa-447">呼叫端必須具有<see langword="ControlEvidence" />權限，才能提供指令碼組件辨識項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-447">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="cb4fa-448">非完全信任呼叫端可以將此參數設定為<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-448">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="cb4fa-449">載入 XSLT 樣式表中所包含<see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-449">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span> <span data-ttu-id="cb4fa-450">這個方法可讓您藉由指定辨識項，限制樣式表的權限。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-450">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-451"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-451">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-452"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-452">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-453">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-453">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-454"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-454"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-455">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-455">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-456">從目前的位置載入樣式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-456">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="cb4fa-457">若要使用載入的文件的一部分做為樣式表，瀏覽至樣式表開頭所對應的節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-457">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="cb4fa-458">在後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XPath.XPathNavigator>位於樣式表開頭 (上`xsl:style sheet`節點)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-458">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  

  
 <span data-ttu-id="cb4fa-459">有不同的方式，提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-459">There are different ways to provide evidence.</span></span> <span data-ttu-id="cb4fa-460">下表描述何種辨識項，以便提供一般使用者案例。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-460">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="cb4fa-461">情節</span><span class="sxs-lookup"><span data-stu-id="cb4fa-461">Scenario</span></span>|<span data-ttu-id="cb4fa-462">若要提供的辨識項型別</span><span class="sxs-lookup"><span data-stu-id="cb4fa-462">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="cb4fa-463">XSLT 樣式表是獨立的或來自您信任的程式碼基底。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-463">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="cb4fa-464">使用您的組件的來源辨識項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-464">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslNav, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="cb4fa-465">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-465">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="cb4fa-466">已知來源的源頭，而且沒有可驗證的 URL。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-466">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="cb4fa-467">建立辨識項使用的 URL。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-467">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(xslNav,resolver,evidence);</code></pre>|  
|<span data-ttu-id="cb4fa-468">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-468">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="cb4fa-469">來源的源頭未知。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-469">The origin of the source is not known.</span></span>|<span data-ttu-id="cb4fa-470">將辨識項設為 `null`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-470">Set evidence to `null`.</span></span> <span data-ttu-id="cb4fa-471">不會處理指令碼區塊、不支援 XSLT `document()` 函式，且不允許已授權的擴充物件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-471">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="cb4fa-472">此外，您也可以設定`resolver`參數來`null`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-472">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="cb4fa-473">這可確保`xsl:import`和`xsl:include`不會處理元素。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-473">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="cb4fa-474">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-474">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="cb4fa-475">來源的源頭未知，但是您需要指令碼支援。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-475">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="cb4fa-476">自呼叫端要求識別項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-476">Request evidence from the caller.</span></span> <span data-ttu-id="cb4fa-477">API 的呼叫端必須提供一個方法，通常提供辨識項，`Evidence`類別。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-477">The API of the caller must provide a way to provide evidence, typically the `Evidence` class.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="cb4fa-478">下列範例會使用從外部來源的樣式表的 XSLT 轉換。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-478">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="cb4fa-479">樣式表來自受信任的來源，因為`resolver`並`evidence`參數會設定為`null`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-479">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
 
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="cb4fa-480">目前的節點不符合有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-480">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cb4fa-481">參考的樣式表需要提供的辨識項不允許的功能。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-481">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="cb4fa-482">呼叫端嘗試提供辨識項，而且沒有<see langword="ControlEvidence" />權限。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-482">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="cb4fa-483">提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-483">for providing evidence.</span></span> <span data-ttu-id="cb4fa-484">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="cb4fa-484">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cb4fa-485">使用轉換 XML 資料載入的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-485">Transforms the XML data using the loaded XSLT style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-486"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-486">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-487"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-487">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-488">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-488">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="cb4fa-489">要轉換的來源文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-489">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="cb4fa-490">輸出檔案的 URL。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-490">The URL of the output file.</span></span></param>
        <summary><span data-ttu-id="cb4fa-491">轉換的輸入檔中的 XML 資料，並將結果輸出至輸出檔。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-491">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-492"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-492">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-493"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-493">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-494">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-494">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-495"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-495"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-496">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-496">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-497">這個方法是在.NET Framework 1.1 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-497">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="cb4fa-498">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-498">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="cb4fa-499">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-499">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb4fa-500">下列範例會轉換`books.xml`檔案中，使用`output.xsl`樣式表並將結果輸出至`books.html`檔案。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-500">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="cb4fa-501">此範例會使用下列兩個輸入的檔案：</span><span class="sxs-lookup"><span data-stu-id="cb4fa-501">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-502">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-502">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="cb4fa-503">XslTransform 的輸出</span><span class="sxs-lookup"><span data-stu-id="cb4fa-503">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-504">物件，實作<see cref="T:System.Xml.XPath.IXPathNavigable" />介面。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-504">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="cb4fa-505">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-505">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-506"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-506">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="cb4fa-507">中的 XML 資料轉換<see cref="T:System.Xml.XPath.IXPathNavigable" />使用指定<paramref name="args" />並將結果輸出至<see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-507">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="cb4fa-508"><see cref="T:System.Xml.XmlReader" />包含轉換的結果。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-508">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-509"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-509">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-510"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-510">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-511">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-511">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-512"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-512"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-513">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-513">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-514">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-514">This method is now obsolete.</span></span> <span data-ttu-id="cb4fa-515">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-515">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="cb4fa-516">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-516">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="cb4fa-517">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-517">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="cb4fa-518">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlReader>(`xsl:output`項目會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-518">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="cb4fa-519">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-519">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="cb4fa-520">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-520">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="cb4fa-521">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-521">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-522">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-522">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-523">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-523">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="cb4fa-524">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-524">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="cb4fa-525">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-525">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-526">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-526">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="cb4fa-527">XslTransform 的輸出</span><span class="sxs-lookup"><span data-stu-id="cb4fa-527">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-528"><see cref="T:System.Xml.XPath.XPathNavigator" />包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-528">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-529"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-529">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="cb4fa-530">中的 XML 資料轉換<see cref="T:System.Xml.XPath.XPathNavigator" />使用指定<paramref name="args" />並將結果輸出至<see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-530">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="cb4fa-531"><see cref="T:System.Xml.XmlReader" />包含轉換的結果。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-531">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-532"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-532">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-533"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-533">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-534">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-534">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-535"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-535"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-536">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-536">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-537">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-537">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="cb4fa-538">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-538">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-539">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-539">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-540">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-540">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="cb4fa-541">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-541">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="cb4fa-542">因為<xref:System.Xml.XmlReader>提供唯讀的輸出，`xsl:output`項目會被忽略。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-542">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="cb4fa-543">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-543">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="cb4fa-544">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-544">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-545">這個方法已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-545">This method is obsolete.</span></span> <span data-ttu-id="cb4fa-546">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT document （） 函式已解決。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-546">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="cb4fa-547">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-547">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb4fa-548">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-548">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="cb4fa-549">注意:這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-549">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="cb4fa-550">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-550">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-551">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-551">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="cb4fa-552">要轉換的來源文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-552">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="cb4fa-553">輸出檔案的 URL。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-553">The URL of the output file.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-554"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-554">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="cb4fa-555">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-555">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-556"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-556">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="cb4fa-557">轉換的輸入檔中的 XML 資料，並將結果輸出至輸出檔。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-557">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-558"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-558">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-559"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-559">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-560">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-560">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-561"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-561"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-562">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-562">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb4fa-563">下列範例會執行 XSLT 轉換，並輸出至檔案。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-563">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="cb4fa-564"><xref:System.Xml.XmlUrlResolver>認證會使用有預設外部資源解析。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-564">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="cb4fa-565">如需詳細資訊，請參閱<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-565">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-566">物件，實作<see cref="T:System.Xml.XPath.IXPathNavigable" />介面。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-566">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="cb4fa-567">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-567">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-568"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-568">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="cb4fa-569">要輸出至的資料流。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-569">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="cb4fa-570">中的 XML 資料轉換<see cref="T:System.Xml.XPath.IXPathNavigable" />使用指定<paramref name="args" />並將結果輸出至<see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-570">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-571"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-571">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-572"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-572">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-573">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-573">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-574"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-574"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-575">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-575">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-576">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-576">This method is now obsolete.</span></span> <span data-ttu-id="cb4fa-577">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-577">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="cb4fa-578">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-578">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="cb4fa-579">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-579">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="cb4fa-580">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-580">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-581">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-581">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-582">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-582">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="cb4fa-583">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-583">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="cb4fa-584">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-584">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb4fa-585">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-585">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="cb4fa-586">注意:這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-586">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="cb4fa-587">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-587">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-588">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-588">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="cb4fa-589">XslTransform 的輸出</span><span class="sxs-lookup"><span data-stu-id="cb4fa-589">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-590">物件，實作<see cref="T:System.Xml.XPath.IXPathNavigable" />介面。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-590">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="cb4fa-591">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-591">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-592"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-592">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="cb4fa-593">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-593">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="cb4fa-594">中的 XML 資料轉換<see cref="T:System.Xml.XPath.IXPathNavigable" />使用指定<paramref name="args" />並將結果輸出至<see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-594">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-595"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-595">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-596"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-596">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-597">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-597">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-598"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-598"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-599">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-599">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-600">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-600">This method is now obsolete.</span></span> <span data-ttu-id="cb4fa-601">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-601">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="cb4fa-602">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-602">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="cb4fa-603">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-603">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="cb4fa-604">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-604">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="cb4fa-605">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-605">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="cb4fa-606">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-606">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-607">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-607">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-608">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-608">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="cb4fa-609">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-609">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="cb4fa-610">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-610">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb4fa-611">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-611">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="cb4fa-612">注意:這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-612">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="cb4fa-613">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-613">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-614">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-614">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="cb4fa-615">XslTransform 的輸出</span><span class="sxs-lookup"><span data-stu-id="cb4fa-615">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-616">物件，實作<see cref="T:System.Xml.XPath.IXPathNavigable" />介面。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-616">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="cb4fa-617">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-617">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-618"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-618">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-619"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-619">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="cb4fa-620">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-620">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-621"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-621">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="cb4fa-622">中的 XML 資料轉換<see cref="T:System.Xml.XPath.IXPathNavigable" />使用指定<paramref name="args" />並將結果輸出至<see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-622">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="cb4fa-623"><see cref="T:System.Xml.XmlReader" />包含轉換的結果。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-623">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-624"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-624">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-625"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-625">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-626">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-626">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-627"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-627"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-628">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-628">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-629">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-629">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="cb4fa-630">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlReader>(`xsl:output`項目會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-630">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="cb4fa-631">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-631">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="cb4fa-632">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-632">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="cb4fa-633">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-633">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-634">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-634">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-635">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-635">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="cb4fa-636">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-636">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="cb4fa-637">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-637">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="cb4fa-638">下列範例會將轉換 XML 文件，並將結果輸出至`XmlReader`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-638">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="cb4fa-639"><xref:System.Xml.XmlUrlResolver>具有必要認證用來處理所有 XSLT`document()`函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-639">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-640">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-640">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="cb4fa-641">XslTransform 的輸出</span><span class="sxs-lookup"><span data-stu-id="cb4fa-641">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-642">物件，實作<see cref="T:System.Xml.XPath.IXPathNavigable" />介面。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-642">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="cb4fa-643">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-643">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-644"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-644">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="cb4fa-645">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-645">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="cb4fa-646">中的 XML 資料轉換<see cref="T:System.Xml.XPath.IXPathNavigable" />使用指定<paramref name="args" />並將結果輸出至<see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-646">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-647"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-647">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-648"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-648">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-649">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-649">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-650"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-650"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-651">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-651">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-652">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-652">This method is now obsolete.</span></span> <span data-ttu-id="cb4fa-653">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-653">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="cb4fa-654">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-654">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="cb4fa-655">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-655">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="cb4fa-656">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-656">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="cb4fa-657">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-657">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="cb4fa-658">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-658">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-659">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-659">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-660">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-660">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="cb4fa-661">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-661">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="cb4fa-662">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-662">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb4fa-663">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-663">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="cb4fa-664">注意:這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-664">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="cb4fa-665">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-665">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-666">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-666">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="cb4fa-667">XslTransform 的輸出</span><span class="sxs-lookup"><span data-stu-id="cb4fa-667">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-668"><see cref="T:System.Xml.XPath.XPathNavigator" />包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-668">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-669"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-669">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="cb4fa-670">要輸出至的資料流。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-670">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="cb4fa-671">中的 XML 資料轉換<see cref="T:System.Xml.XPath.XPathNavigator" />使用指定<paramref name="args" />並將結果輸出至<see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-671">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-672"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-672">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-673"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-673">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-674">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-674">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-675"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-675"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-676">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-676">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-677">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-677">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="cb4fa-678">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-678">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-679">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-679">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-680">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-680">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="cb4fa-681">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-681">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="cb4fa-682">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-682">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-683">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-683">This method is now obsolete.</span></span> <span data-ttu-id="cb4fa-684">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-684">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="cb4fa-685">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-685">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb4fa-686">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-686">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="cb4fa-687">注意:這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-687">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="cb4fa-688">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-688">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-689">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-689">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-690"><see cref="T:System.Xml.XPath.XPathNavigator" />包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-690">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-691"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-691">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="cb4fa-692">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-692">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="cb4fa-693">中的 XML 資料轉換<see cref="T:System.Xml.XPath.XPathNavigator" />使用指定<paramref name="args" />並將結果輸出至<see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-693">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-694"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-694">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-695"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-695">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-696">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-696">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-697"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-697"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-698">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-698">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-699">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-699">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="cb4fa-700">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-700">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-701">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-701">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-702">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-702">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="cb4fa-703">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-703">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="cb4fa-704">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-704">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="cb4fa-705">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-705">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-706">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-706">This method is now obsolete.</span></span> <span data-ttu-id="cb4fa-707">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-707">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="cb4fa-708">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-708">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb4fa-709">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-709">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="cb4fa-710">注意:這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-710">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="cb4fa-711">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-711">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-712">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-712">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-713"><see cref="T:System.Xml.XPath.XPathNavigator" />包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-713">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-714"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-714">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-715"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-715">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="cb4fa-716">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-716">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-717"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-717">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="cb4fa-718">中的 XML 資料轉換<see cref="T:System.Xml.XPath.XPathNavigator" />使用指定<paramref name="args" />並將結果輸出至<see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-718">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="cb4fa-719"><see cref="T:System.Xml.XmlReader" />包含轉換的結果。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-719">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-720"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-720">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-721"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-721">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-722">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-722">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-723"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-723"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-724">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-724">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-725">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-725">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="cb4fa-726">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-726">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-727">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-727">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-728">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-728">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="cb4fa-729">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-729">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="cb4fa-730">因為<xref:System.Xml.XmlReader>提供唯讀的輸出，`xsl:output`項目會被忽略。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-730">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="cb4fa-731">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-731">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="cb4fa-732">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-732">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb4fa-733">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-733">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="cb4fa-734">注意:這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-734">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="cb4fa-735">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-735">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-736">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-736">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-737"><see cref="T:System.Xml.XPath.XPathNavigator" />包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-737">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-738"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-738">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="cb4fa-739">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-739">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="cb4fa-740">中的 XML 資料轉換<see cref="T:System.Xml.XPath.XPathNavigator" />使用指定的引數，並將結果輸出至<see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-740">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-741"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-741">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-742"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-742">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-743">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-743">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-744"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-744"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-745">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-745">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-746">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-746">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="cb4fa-747">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-747">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-748">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-748">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-749">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-749">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="cb4fa-750">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-750">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="cb4fa-751">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-751">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="cb4fa-752">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-752">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-753">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-753">This method is now obsolete.</span></span> <span data-ttu-id="cb4fa-754">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-754">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="cb4fa-755">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-755">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb4fa-756">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-756">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="cb4fa-757">注意:這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-757">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="cb4fa-758">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-758">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-759">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-759">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-760">物件，實作<see cref="T:System.Xml.XPath.IXPathNavigable" />介面。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-760">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="cb4fa-761">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-761">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-762"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-762">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="cb4fa-763">要輸出至的資料流。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-763">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-764"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-764">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="cb4fa-765">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-765">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-766"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-766">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="cb4fa-767">中的 XML 資料轉換<see cref="T:System.Xml.XPath.IXPathNavigable" />使用指定<paramref name="args" />並將結果輸出至<see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-767">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-768"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-768">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-769"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-769">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-770">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-770">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-771"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-771"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-772">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-772">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-773">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-773">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="cb4fa-774">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-774">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-775">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-775">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-776">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-776">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="cb4fa-777">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-777">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="cb4fa-778">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-778">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="cb4fa-779">下列範例會執行 ASP.NET 頁面內的轉換。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-779">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb4fa-780">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-780">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="cb4fa-781">注意:這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-781">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="cb4fa-782">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-782">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-783">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-783">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="cb4fa-784">XslTransform 的輸出</span><span class="sxs-lookup"><span data-stu-id="cb4fa-784">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-785">物件，實作<see cref="T:System.Xml.XPath.IXPathNavigable" />介面。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-785">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="cb4fa-786">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-786">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-787"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-787">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="cb4fa-788">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-788">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-789"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-789">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="cb4fa-790">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-790">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-791"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-791">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="cb4fa-792">中的 XML 資料轉換<see cref="T:System.Xml.XPath.IXPathNavigable" />使用指定<paramref name="args" />並將結果輸出至<see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-792">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-793"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-793">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-794"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-794">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-795">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-795">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-796"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-796"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-797">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-797">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-798">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-798">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="cb4fa-799">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-799">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="cb4fa-800">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-800">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="cb4fa-801">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-801">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-802">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-802">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-803">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-803">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="cb4fa-804">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-804">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="cb4fa-805">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-805">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="cb4fa-806">下列範例會轉換為 XML 檔案，並將輸出 HTML 字串。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-806">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="cb4fa-807"><xref:System.IO.StringReader>和<xref:System.IO.StringWriter>類別用來讀取和寫入字串。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-807">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="cb4fa-808">該範例使用 `books.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-808">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb4fa-809">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-809">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="cb4fa-810">注意:這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-810">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="cb4fa-811">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-811">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-812">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-812">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="cb4fa-813">XslTransform 的輸出</span><span class="sxs-lookup"><span data-stu-id="cb4fa-813">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-814">物件，實作<see cref="T:System.Xml.XPath.IXPathNavigable" />介面。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-814">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="cb4fa-815">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-815">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-816"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-816">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="cb4fa-817">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-817">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-818"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-818">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="cb4fa-819">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-819">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-820"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-820">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="cb4fa-821">中的 XML 資料轉換<see cref="T:System.Xml.XPath.IXPathNavigable" />使用指定<paramref name="args" />並將結果輸出至<see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-821">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-822"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-822">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-823"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-823">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-824">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-824">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-825"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-825"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-826">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-826">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-827">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-827">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="cb4fa-828">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-828">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="cb4fa-829">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-829">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="cb4fa-830">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-830">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-831">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-831">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-832">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-832">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="cb4fa-833">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-833">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="cb4fa-834">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-834">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="cb4fa-835">下列範例會將 XML 文件轉換成 HTML 文件。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-835">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="cb4fa-836">它會在資料表中顯示 ISBN、 標題和每本書籍的價格。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-836">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="cb4fa-837">範例會使用下列兩個輸入檔案。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-837">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb4fa-838">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-838">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="cb4fa-839">注意:這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-839">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="cb4fa-840">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-840">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-841">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-841">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="cb4fa-842">XslTransform 的輸出</span><span class="sxs-lookup"><span data-stu-id="cb4fa-842">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-843"><see cref="T:System.Xml.XPath.XPathNavigator" />包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-843">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-844"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-844">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="cb4fa-845">要輸出至的資料流。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-845">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-846"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-846">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="cb4fa-847">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-847">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-848"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-848">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="cb4fa-849">中的 XML 資料轉換<see cref="T:System.Xml.XPath.XPathNavigator" />使用指定<paramref name="args" />並將結果輸出至<see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-849">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-850"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-850">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-851"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-851">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-852">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-852">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-853"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-853"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-854">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-854">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-855">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-855">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="cb4fa-856">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-856">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-857">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-857">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-858">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-858">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="cb4fa-859">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-859">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="cb4fa-860">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-860">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb4fa-861">下列範例會載入至 customer 資料表<xref:System.Xml.XmlDataDocument>和執行 XSLT 轉換成 HTML 表提取客戶資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-861">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="cb4fa-862">此範例會使用 Microsoft SQL Server 2000 的 Northwind 資料庫。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-862">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="cb4fa-863">該範例使用 `customers.xsl` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-863">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb4fa-864">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-864">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="cb4fa-865">注意:這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-865">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="cb4fa-866">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-866">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-867">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-867">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-868"><see cref="T:System.Xml.XPath.XPathNavigator" />包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-868">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-869"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-869">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="cb4fa-870">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-870">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-871"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-871">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="cb4fa-872">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-872">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-873"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-873">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="cb4fa-874">中的 XML 資料轉換<see cref="T:System.Xml.XPath.XPathNavigator" />使用指定<paramref name="args" />並將結果輸出至<see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-874">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-875"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-875">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-876"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-876">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-877">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-877">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-878"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-878"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-879">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-879">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-880">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-880">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="cb4fa-881">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-881">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-882">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-882">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-883">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-883">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="cb4fa-884">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-884">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="cb4fa-885">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-885">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="cb4fa-886">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-886">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb4fa-887">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-887">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="cb4fa-888">注意:這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-888">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="cb4fa-889">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-889">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-890">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-890">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="cb4fa-891"><see cref="T:System.Xml.XPath.XPathNavigator" />包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-891">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="cb4fa-892"><see cref="T:System.Xml.Xsl.XsltArgumentList" />包含用來當做轉換輸入符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-892">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="cb4fa-893">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-893">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="cb4fa-894"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-894">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="cb4fa-895">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-895">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="cb4fa-896"><see cref="T:System.Xml.XmlResolver" />不會快取之後<see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-896">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="cb4fa-897">中的 XML 資料轉換<see cref="T:System.Xml.XPath.XPathNavigator" />使用指定的引數，並將結果輸出至<see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-897">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-898"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-898">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-899"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-899">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-900">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-900">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-901"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-901"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="cb4fa-902">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-902">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="cb4fa-903">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-903">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="cb4fa-904">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-904">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="cb4fa-905">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-905">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="cb4fa-906">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-906">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="cb4fa-907">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-907">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="cb4fa-908">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-908">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="cb4fa-909">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-909">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb4fa-910">下列範例會載入並編輯 XML 文件執行 XSLT 轉換之前。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-910">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cb4fa-911">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-911">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="cb4fa-912">注意:這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-912">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="cb4fa-913">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-913">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="cb4fa-914">XslTransform 類別中的 Discretionary 行為實作</span><span class="sxs-lookup"><span data-stu-id="cb4fa-914">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cb4fa-915">設定組<see cref="T:System.Xml.XmlResolver" />用來解析外部資源時<see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-915">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span></span></summary>
        <value><span data-ttu-id="cb4fa-916"><see cref="T:System.Xml.XmlResolver" />在轉換期間使用。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-916">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span></span> <span data-ttu-id="cb4fa-917">如果設定為<see langword="null" />，XSLT <c>document （)</c>函式不會解析。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-917">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-918"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-918">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="cb4fa-919"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-919">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="cb4fa-920">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-920">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="cb4fa-921">在 1.1 版的.NET framework，應用程式的信任層級會決定預設的行為：</span><span class="sxs-lookup"><span data-stu-id="cb4fa-921">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="cb4fa-922">`Fully trusted code:` 預設值<xref:System.Xml.XmlUrlResolver>不需要使用者的認證用來解析`document()`函式。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-922">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="cb4fa-923">如果驗證才能存取外部資源，使用這個屬性來指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-923">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="cb4fa-924">`Semi-trusted code:` 屬性設定為`null`，這表示`document()`函式不會解析。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-924">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="cb4fa-925">由於完全信任，才能指定<xref:System.Xml.XmlResolver>，這個屬性也無法設定。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-925">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="cb4fa-926">使用這個解析程式時 XSLT`document()`函式會叫用。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-926">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="cb4fa-927">它將不會用來解決`xsl:import`和`xsl:include`樣式表中所參考的項目。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-927">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="cb4fa-928">指定<xref:System.Xml.XmlResolver>要用來解析`xsl:import`並`xsl:include`樣式表中所參考的項目會使用<xref:System.Xml.Xsl.XslTransform.Load%2A>多載，這個方法會接受<xref:System.Xml.XmlResolver>為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-928">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb4fa-929">這個屬性是在.NET Framework 1.1 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-929">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="cb4fa-930">指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法是建議的做法。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-930">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="cb4fa-931">在此情況下，<xref:System.Xml.XmlResolver>不會快取之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法完成。</span><span class="sxs-lookup"><span data-stu-id="cb4fa-931">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>