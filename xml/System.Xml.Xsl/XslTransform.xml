<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="296765fecc976fe335c8d3335d4aba7c79b601ba" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49132456" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0">
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="38e1f-101">使用可延伸樣式表語言轉換 (XSLT) 樣式表，轉換 XML 資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="38e1f-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-102"><xref:System.Xml.Xsl.XslTransform>類別是 Microsoft.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-103"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-104">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-105"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-106">XSLT 樣式表必須使用命名空間`http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-107">其他引數也可以加入至樣式表使用<xref:System.Xml.Xsl.XsltArgumentList>類別。</span><span class="sxs-lookup"><span data-stu-id="38e1f-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="38e1f-108">這個類別包含樣式表和擴充物件可從樣式表呼叫的輸入的參數。</span><span class="sxs-lookup"><span data-stu-id="38e1f-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="38e1f-109">若要將 XML 資料的轉換：</span><span class="sxs-lookup"><span data-stu-id="38e1f-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="38e1f-110">建立<xref:System.Xml.Xsl.XslTransform>物件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="38e1f-111">使用<xref:System.Xml.Xsl.XslTransform.Load%2A>方法來載入樣式表轉換。</span><span class="sxs-lookup"><span data-stu-id="38e1f-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="38e1f-112">此方法有數個多載，可以載入樣式表 using <xref:System.Xml.XmlReader>， <xref:System.Xml.XPath.XPathNavigator>， <xref:System.Xml.XPath.IXPathNavigable>，或使用檔案的位置 URL。</span><span class="sxs-lookup"><span data-stu-id="38e1f-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="38e1f-113">使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>來轉換 XML 資料的方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="38e1f-114">這個方法有數個多載，以及可處理不同類型的輸入和輸出。</span><span class="sxs-lookup"><span data-stu-id="38e1f-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="38e1f-115">您也可以指定<xref:System.Xml.Xsl.XsltArgumentList>包含要在轉換期間使用做為輸入的其他引數。</span><span class="sxs-lookup"><span data-stu-id="38e1f-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="38e1f-116">**安全性考量**</span><span class="sxs-lookup"><span data-stu-id="38e1f-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="38e1f-117">建立使用 <xref:System.Xml.Xsl.XslTransform> 類別的應用程式時，您應留意下列項目及其含意：</span><span class="sxs-lookup"><span data-stu-id="38e1f-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="38e1f-118">依預設會啟用擴充物件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="38e1f-119">如果將包含擴充物件的 <xref:System.Xml.Xsl.XsltArgumentList> 物件傳遞到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，則會加以利用。</span><span class="sxs-lookup"><span data-stu-id="38e1f-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="38e1f-120">XSLT 樣式表可以包含其他檔案及內嵌指令碼區塊的參考。</span><span class="sxs-lookup"><span data-stu-id="38e1f-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="38e1f-121">惡意使用者可以利用這一點，藉由提供給您的資料或樣式表執行時將會導致您的系統處理，直到電腦資源不足。</span><span class="sxs-lookup"><span data-stu-id="38e1f-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="38e1f-122">在混合的信任環境中執行的 XSLT 應用程式，會產生用於詐騙的樣式表。</span><span class="sxs-lookup"><span data-stu-id="38e1f-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="38e1f-123">例如，居心不良的使用者可載入含有害樣式表的物件，然後將其傳遞給另一使用者，該使用者隨後會呼叫 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法並執行轉換。</span><span class="sxs-lookup"><span data-stu-id="38e1f-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="38e1f-124">您可以降低這些安全性問題不接受<xref:System.Xml.Xsl.XslTransform>物件、 XSLT 樣式表或從不受信任來源的 XML 來源資料。</span><span class="sxs-lookup"><span data-stu-id="38e1f-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="38e1f-125">**指令碼支援**</span><span class="sxs-lookup"><span data-stu-id="38e1f-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="38e1f-126">此類別支援使用內嵌指令碼`msxsl:script`項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="38e1f-127">在.NET Framework 版本 1.1，樣式表的辨識項會決定哪些權限都各有內嵌的指令碼。</span><span class="sxs-lookup"><span data-stu-id="38e1f-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="38e1f-128">如果樣式表載入從統一資源識別元 (URI)，則 URI 用來建立辨識項。</span><span class="sxs-lookup"><span data-stu-id="38e1f-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="38e1f-129">這個辨識項包括加上其站台和區域的 URI。</span><span class="sxs-lookup"><span data-stu-id="38e1f-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="38e1f-130">如果使用其他來源載入樣式表，您還可以提供辨識項，藉由傳遞<xref:System.Security.Policy.Evidence?displayProperty=nameWithType>物件至<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="38e1f-131">否則，指令碼組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="38e1f-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="38e1f-132">非完全信任呼叫端：`UnmanagedCode`權限，才能編譯內嵌的指令碼。</span><span class="sxs-lookup"><span data-stu-id="38e1f-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="38e1f-133">`ControlEvidence` 權限，才能提供<xref:System.Security.Policy.Evidence>至<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="38e1f-134">A<xref:System.Security.SecurityException>如果呼叫端沒有必要的權限，就會擲回。</span><span class="sxs-lookup"><span data-stu-id="38e1f-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="38e1f-135">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> 和 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="38e1f-136">`msxsl:script`項目具有下列需求：</span><span class="sxs-lookup"><span data-stu-id="38e1f-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="38e1f-137">`msxsl:script`項目屬於`urn:schemas-microsoft-com:xslt`命名空間。</span><span class="sxs-lookup"><span data-stu-id="38e1f-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="38e1f-138">樣式表必須包含命名空間宣告`xmlns:msxsl=urn:schemas-microsoft-com:xslt`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="38e1f-139">`msxsl:script`元素可以包含`language`屬性，指定要使用的指令碼語言。</span><span class="sxs-lookup"><span data-stu-id="38e1f-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="38e1f-140">值`language`屬性必須是下列其中之一： C#、 CSharp、 VB、 VisualBasic、 JScript 或 JavaScript。</span><span class="sxs-lookup"><span data-stu-id="38e1f-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="38e1f-141">語言名稱不區分大小寫，因為 JavaScript 和 javascript 都有效。</span><span class="sxs-lookup"><span data-stu-id="38e1f-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="38e1f-142">如果`language`屬性未指定，則會預設為 JScript。</span><span class="sxs-lookup"><span data-stu-id="38e1f-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="38e1f-143">`msxsl:script`元素必須包含`implements-prefix`包含表示指令碼區塊相關聯的命名空間的前置詞的屬性。</span><span class="sxs-lookup"><span data-stu-id="38e1f-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="38e1f-144">此命名空間必須定義樣式表中。</span><span class="sxs-lookup"><span data-stu-id="38e1f-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="38e1f-145">樣式表可以包含多個指令碼區塊會依命名空間。</span><span class="sxs-lookup"><span data-stu-id="38e1f-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="38e1f-146">您不能有相同的命名空間內的多個語言的指令碼區塊。</span><span class="sxs-lookup"><span data-stu-id="38e1f-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="38e1f-147">指令碼區塊可以呼叫另一個的指令碼區塊中定義的函式，提供指令碼區塊會位於相同的命名空間。</span><span class="sxs-lookup"><span data-stu-id="38e1f-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="38e1f-148">根據規則和指令碼語言的語法會剖析指令碼區塊的內容 (藉由提供`language`屬性)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="38e1f-149">例如，如果您有 C# 指令碼區塊，註解會加上`//`字元。</span><span class="sxs-lookup"><span data-stu-id="38e1f-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="38e1f-150">註解必須是有效的 XML 內容。</span><span class="sxs-lookup"><span data-stu-id="38e1f-150">The comments must be valid XML content.</span></span>  
  
 <span data-ttu-id="38e1f-151">`Note` 建議您將指令碼區塊包裝在 CDATA 區段。</span><span class="sxs-lookup"><span data-stu-id="38e1f-151">`Note` It is recommended that you wrap script blocks in a CDATA section.</span></span>  
  
```  
<msxsl:script implements-prefix='xy' language='C#'>  
  <![CDATA[  
  // Add code here.  
  ]]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="38e1f-152">
        <see cref="T:System.Xml.Xsl.XslTransform" /> 物件是只轉換作業的執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="38e1f-152">
          <see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span>
      </span>
      <span data-ttu-id="38e1f-153">其他作業不保證是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="38e1f-153">Other operations are not guaranteed to be thread-safe.</span>
      </span>
      <span data-ttu-id="38e1f-154">您必須確定沒有其他方法，會在載入作業期間在物件上呼叫。</span>
      <span class="sxs-lookup">
        <span data-stu-id="38e1f-154">You must ensure that no other methods are called on the object during load operations.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="38e1f-155">初始化 <see cref="T:System.Xml.Xsl.XslTransform" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-155">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="38e1f-156">載入 XSLT 樣式表，包括 <see langword="xsl:include" /> 和 <see langword="xsl:import" /> 項目中參考的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-156">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-157"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-157">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-158"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-158">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-159">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-159">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="38e1f-160">URL，指定要載入的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-160">The URL that specifies the XSLT style sheet to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-161">載入 URL 指定的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-161">Loads the XSLT style sheet specified by a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-162"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-162">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-163"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-163">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-164">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-164">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-165"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-165"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-166">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-166">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="38e1f-167">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-167">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="38e1f-168">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="38e1f-168">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="38e1f-169">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="38e1f-169">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="38e1f-170">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="38e1f-170">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="38e1f-171">樣式表的 URI 用來建立辨識項，會套用至組件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-171">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span> <span data-ttu-id="38e1f-172">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="38e1f-172">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-173">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="38e1f-173">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="38e1f-174">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-174">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38e1f-175">下列範例會將 XML 文件轉換成 HTML 文件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-175">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="38e1f-176">它會在資料表中顯示 ISBN、 標題和每本書籍的價格。</span><span class="sxs-lookup"><span data-stu-id="38e1f-176">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="38e1f-177">範例會使用下列兩個輸入檔案。</span><span class="sxs-lookup"><span data-stu-id="38e1f-177">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="38e1f-178">載入的資源不是有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-178">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="38e1f-179">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-179">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="38e1f-180">
            <see cref="T:System.Xml.XmlReader" /> 物件，包含 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-180">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-181">載入 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-181">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-182"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-182">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-183"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-183">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-184">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-184">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-185"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-185"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-186">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-186">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-187">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-187">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="38e1f-188">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="38e1f-188">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="38e1f-189">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="38e1f-189">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="38e1f-190">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過其所有子系。</span><span class="sxs-lookup"><span data-stu-id="38e1f-190">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="38e1f-191">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="38e1f-191">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="38e1f-192">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XmlReader>位於樣式表的結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-192">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="38e1f-193">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-193">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="38e1f-194">如果樣式表包含實體，您應該指定<xref:System.Xml.XmlReader>，可解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-194">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="38e1f-195">在此情況下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="38e1f-195">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="38e1f-196">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="38e1f-196">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="38e1f-197">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="38e1f-197">The assembly has full trust.</span></span> <span data-ttu-id="38e1f-198">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-198">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="38e1f-199">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="38e1f-199">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-200">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="38e1f-200">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="38e1f-201">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-201">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38e1f-202">下列範例會將轉換依標題排序所有書籍的 XML 檔案。</span><span class="sxs-lookup"><span data-stu-id="38e1f-202">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="38e1f-203">此範例會使用下列的資料檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="38e1f-203">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="38e1f-204">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-204">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="38e1f-205">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-205">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="38e1f-206">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-206">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="38e1f-207">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />) 或包含 XSLT 樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-207">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-208">載入 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-208">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-209"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-209">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-210"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-210">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-211">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-211">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-212"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-212"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-213">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-213">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-214">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-214">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="38e1f-215">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="38e1f-215">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="38e1f-216">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="38e1f-216">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="38e1f-217">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="38e1f-217">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="38e1f-218">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="38e1f-218">The assembly has full trust.</span></span> <span data-ttu-id="38e1f-219">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-219">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="38e1f-220">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="38e1f-220">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-221">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="38e1f-221">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="38e1f-222">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-222">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="38e1f-223">載入的資源不是有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-223">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="38e1f-224">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-224">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="38e1f-225">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，包含 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-225">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-226">載入 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-226">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-227"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-227">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-228"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-228">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-229">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-229">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-230"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-230"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-231">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-231">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-232">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-232">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="38e1f-233">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="38e1f-233">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="38e1f-234">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="38e1f-234">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="38e1f-235">從目前的位置載入樣式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-235">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="38e1f-236">若要使用載入的文件的一部分做為樣式表，瀏覽至樣式表開頭所對應的節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-236">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="38e1f-237">在後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XPath.XPathNavigator>位於樣式表開頭 (上`xsl:style sheet`節點)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-237">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="38e1f-238">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="38e1f-238">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="38e1f-239">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="38e1f-239">The assembly has full trust.</span></span> <span data-ttu-id="38e1f-240">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-240">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="38e1f-241">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="38e1f-241">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-242">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="38e1f-242">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="38e1f-243">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-243">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="38e1f-244">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-244">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="38e1f-245">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-245">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="38e1f-246">URL，指定要載入的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-246">The URL that specifies the XSLT style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-247">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入樣式表和 <c>xsl:import</c> 與 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-247">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="38e1f-248">如果值為 <see langword="null" />，則會使用不具有使用者認證的預設 <see cref="T:System.Xml.XmlUrlResolver" />，開啟樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-248">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span>
          </span>
          <span data-ttu-id="38e1f-249">因為沒有使用預設的 <see cref="T:System.Xml.XmlUrlResolver" /> 解析樣式表中的任何外部資源，所以不會解析 <c>xsl:import</c> 和 <c>xsl:include</c> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-249">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-250">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-250">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-251">載入 URL 指定的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-251">Loads the XSLT style sheet specified by a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-252"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-252">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-253"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-253">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-254">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-254">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-255"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-255"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-256">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-256">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-257">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="38e1f-257">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="38e1f-258">樣式表的 URI 用來建立辨識項，會套用至組件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-258">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span> <span data-ttu-id="38e1f-259">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="38e1f-259">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-260">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="38e1f-260">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="38e1f-261">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-261">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38e1f-262">下列範例會將 XML 文件轉換成 HTML 文件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-262">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="38e1f-263">此範例會載入 XSLT 樣式表包含`xsl:include`參考另一個樣式表的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-263">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="38e1f-264"><xref:System.Xml.XmlUrlResolver>傳遞至<xref:System.Xml.Xsl.XslTransform.Load%2A>設定的認證存取網路資源，包含的樣式表所需的方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-264">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="38e1f-265">此範例會使用下列的資料檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="38e1f-265">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="38e1f-266">載入的資源不是有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-266">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="38e1f-267">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-267">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="38e1f-268">
            <see cref="T:System.Xml.XmlReader" /> 物件，包含 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-268">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-269">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-269">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="38e1f-270">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-270">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-271">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-271">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-272">載入 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-272">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-273"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-273">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-274"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-274">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-275">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-275">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-276"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-276"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-277">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-277">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-278">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-278">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="38e1f-279">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過其所有子系。</span><span class="sxs-lookup"><span data-stu-id="38e1f-279">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="38e1f-280">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="38e1f-280">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="38e1f-281">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XmlReader>位於樣式表的結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-281">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="38e1f-282">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-282">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="38e1f-283">如果樣式表包含實體，您應該指定<xref:System.Xml.XmlReader>，可解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-283">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="38e1f-284">在此情況下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="38e1f-284">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="38e1f-285">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="38e1f-285">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="38e1f-286">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="38e1f-286">The assembly has full trust.</span></span> <span data-ttu-id="38e1f-287">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-287">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="38e1f-288">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>內嵌指令碼的方法和樣式表，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="38e1f-288">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-289">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="38e1f-289">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="38e1f-290">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-290">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="38e1f-291">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-291">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="38e1f-292">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-292">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="38e1f-293">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-293">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="38e1f-294">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />) 或包含 XSLT 樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-294">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-295">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-295">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="38e1f-296">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-296">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-297">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-297">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-298">載入 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-298">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-299"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-299">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-300"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-300">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-301">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-301">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-302"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-302"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-303">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-303">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-304">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="38e1f-304">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="38e1f-305">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="38e1f-305">The assembly has full trust.</span></span> <span data-ttu-id="38e1f-306">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-306">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="38e1f-307">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="38e1f-307">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-308">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="38e1f-308">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="38e1f-309">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-309">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="38e1f-310">載入的資源不是有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-310">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="38e1f-311">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-311">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="38e1f-312">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，包含 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-312">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-313">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-313">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="38e1f-314">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-314">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-315">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-315">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-316">載入 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-316">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-317"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-317">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-318"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-318">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-319">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-319">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-320"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-320"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-321">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-321">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-322">從目前的位置載入樣式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-322">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="38e1f-323">若要使用載入的文件的一部分做為樣式表，瀏覽至樣式表開頭所對應的節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-323">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="38e1f-324">在後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XPath.XPathNavigator>位於樣式表開頭 (上`xsl:style sheet`節點)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-324">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="38e1f-325">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="38e1f-325">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="38e1f-326">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="38e1f-326">The assembly has full trust.</span></span> <span data-ttu-id="38e1f-327">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-327">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span> <span data-ttu-id="38e1f-328">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="38e1f-328">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-329">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="38e1f-329">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="38e1f-330">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-330">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="38e1f-331">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-331">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="38e1f-332">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-332">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="38e1f-333">
            <see cref="T:System.Xml.XmlReader" /> 物件，包含要載入的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-333">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-334">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-334">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="38e1f-335">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-335">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-336">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-336">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="38e1f-337">
            <see cref="T:System.Security.Policy.Evidence" />，設定在 XSLT 樣式表中針對指令碼區塊所產生的組件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-337">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="38e1f-338">如果此為 <see langword="null" />則不會處理指令碼區塊、不支援 XSLT <c>document()</c> 函式，且不允許特殊權限的擴充物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-338">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="38e1f-339">為了提供指令碼組件的辨識項，呼叫端必須擁有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-339">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="38e1f-340">非完全信任呼叫端可以設定這個參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-340">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-341">載入 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-341">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
          <span data-ttu-id="38e1f-342">這個方法可讓您指定辨識項，限制樣式表的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-342">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-343"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-343">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-344"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-344">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-345">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-345">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-346"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-346"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-347">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-347">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-348">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-348">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="38e1f-349">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過其所有子系。</span><span class="sxs-lookup"><span data-stu-id="38e1f-349">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="38e1f-350">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="38e1f-350">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="38e1f-351">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XmlReader>位於樣式表的結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-351">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="38e1f-352">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-352">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="38e1f-353">如果樣式表包含實體，您應該指定<xref:System.Xml.XmlReader>，可解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-353">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="38e1f-354">在此情況下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="38e1f-354">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="38e1f-355">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="38e1f-355">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="38e1f-356">有不同的方式，提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="38e1f-356">There are different ways to provide evidence.</span></span> <span data-ttu-id="38e1f-357">下表描述何種辨識項，以便提供一般使用者案例。</span><span class="sxs-lookup"><span data-stu-id="38e1f-357">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="38e1f-358">情節</span><span class="sxs-lookup"><span data-stu-id="38e1f-358">Scenario</span></span>|<span data-ttu-id="38e1f-359">若要提供的辨識項型別</span><span class="sxs-lookup"><span data-stu-id="38e1f-359">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="38e1f-360">XSLT 樣式表是獨立的或來自您信任的程式碼基底。</span><span class="sxs-lookup"><span data-stu-id="38e1f-360">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="38e1f-361">使用您的組件的來源辨識項。</span><span class="sxs-lookup"><span data-stu-id="38e1f-361">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslReader, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="38e1f-362">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="38e1f-362">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="38e1f-363">已知來源的源頭，而且沒有可驗證的 URL。</span><span class="sxs-lookup"><span data-stu-id="38e1f-363">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="38e1f-364">建立辨識項使用的 URL。</span><span class="sxs-lookup"><span data-stu-id="38e1f-364">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform();&#13;&#10; Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(stylesheetURL); &#13;&#10;xslt.Load(xslReader,resolver,evidence);</code></pre>|  
|<span data-ttu-id="38e1f-365">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="38e1f-365">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="38e1f-366">來源的源頭未知。</span><span class="sxs-lookup"><span data-stu-id="38e1f-366">The origin of the source is not known.</span></span>|<span data-ttu-id="38e1f-367">將辨識項設為 `null`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-367">Set evidence to `null`.</span></span> <span data-ttu-id="38e1f-368">不會處理指令碼區塊、不支援 XSLT `document()` 函式，且不允許已授權的擴充物件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-368">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="38e1f-369">此外，您也可以設定`resolver`參數來`null`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-369">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="38e1f-370">這可確保`xsl:import`和`xsl:include`不會處理元素。</span><span class="sxs-lookup"><span data-stu-id="38e1f-370">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="38e1f-371">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="38e1f-371">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="38e1f-372">來源的源頭未知，但是您需要指令碼支援。</span><span class="sxs-lookup"><span data-stu-id="38e1f-372">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="38e1f-373">自呼叫端要求識別項。</span><span class="sxs-lookup"><span data-stu-id="38e1f-373">Request evidence from the caller.</span></span> <span data-ttu-id="38e1f-374">API 的呼叫端必須提供一個方法，通常提供辨識項，<xref:System.Security.Policy.Evidence>類別。</span><span class="sxs-lookup"><span data-stu-id="38e1f-374">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
     
## Examples  
 <span data-ttu-id="38e1f-375">下列範例會執行 XSLT 轉換所在`xsltReader`是<xref:System.Xml.XmlReader>包含樣式表並`secureURL`是受信任的 URL，可用來建立<xref:System.Security.Policy.Evidence>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-375">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="38e1f-376"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType>方法用來建立<xref:System.Security.Policy.Evidence>套用至樣式表。</span><span class="sxs-lookup"><span data-stu-id="38e1f-376">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="38e1f-377">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-377">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="38e1f-378">參考的樣式表需要功能，而提供的辨識項不允許此功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-378">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="38e1f-379">呼叫端嘗試提供辨識項，但沒有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-379">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="38e1f-380">提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-380">for providing evidence.</span>
          </span>
          <span data-ttu-id="38e1f-381">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-381">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="38e1f-382">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-382">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="38e1f-383">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />) 或包含 XSLT 樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-383">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-384">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-384">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="38e1f-385">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-385">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-386">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-386">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="38e1f-387">
            <see cref="T:System.Security.Policy.Evidence" />，設定在 XSLT 樣式表中針對指令碼區塊所產生的組件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-387">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="38e1f-388">如果此為 <see langword="null" />則不會處理指令碼區塊、不支援 XSLT <c>document()</c> 函式，且不允許特殊權限的擴充物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-388">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="38e1f-389">為了提供指令碼組件的辨識項，呼叫端必須擁有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-389">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="38e1f-390">非完全信任呼叫端可以設定這個參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-390">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-391">載入 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-391">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
          <span data-ttu-id="38e1f-392">這個方法可讓您指定辨識項，限制樣式表的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-392">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-393"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-393">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-394"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-394">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-395">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-395">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-396"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-396"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-397">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-397">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-398">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="38e1f-398">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="38e1f-399">有不同的方式，提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="38e1f-399">There are different ways to provide evidence.</span></span> <span data-ttu-id="38e1f-400">下表描述何種辨識項，以便提供一般使用者案例。</span><span class="sxs-lookup"><span data-stu-id="38e1f-400">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="38e1f-401">情節</span><span class="sxs-lookup"><span data-stu-id="38e1f-401">Scenario</span></span>|<span data-ttu-id="38e1f-402">若要提供的辨識項型別</span><span class="sxs-lookup"><span data-stu-id="38e1f-402">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="38e1f-403">XSLT 樣式表是獨立的或來自您信任的程式碼基底。</span><span class="sxs-lookup"><span data-stu-id="38e1f-403">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="38e1f-404">使用您的組件的來源辨識項。</span><span class="sxs-lookup"><span data-stu-id="38e1f-404">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(style sheet, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="38e1f-405">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="38e1f-405">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="38e1f-406">已知來源的源頭，而且沒有可驗證的 URL。</span><span class="sxs-lookup"><span data-stu-id="38e1f-406">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="38e1f-407">建立辨識項使用的 URL。</span><span class="sxs-lookup"><span data-stu-id="38e1f-407">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(style sheet,resolver,evidence);</code></pre>|  
|<span data-ttu-id="38e1f-408">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="38e1f-408">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="38e1f-409">來源的源頭未知。</span><span class="sxs-lookup"><span data-stu-id="38e1f-409">The origin of the source is not known.</span></span>|<span data-ttu-id="38e1f-410">將辨識項設為 `null`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-410">Set evidence to `null`.</span></span> <span data-ttu-id="38e1f-411">不會處理指令碼區塊、不支援 XSLT `document()` 函式，且不允許已授權的擴充物件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-411">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="38e1f-412">此外，您也可以設定`resolver`參數來`null`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-412">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="38e1f-413">這可確保`xsl:import`和`xsl:include`不會處理元素。</span><span class="sxs-lookup"><span data-stu-id="38e1f-413">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="38e1f-414">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="38e1f-414">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="38e1f-415">來源的源頭未知，但是您需要指令碼支援。</span><span class="sxs-lookup"><span data-stu-id="38e1f-415">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="38e1f-416">自呼叫端要求識別項。</span><span class="sxs-lookup"><span data-stu-id="38e1f-416">Request evidence from the caller.</span></span> <span data-ttu-id="38e1f-417">API 的呼叫端必須提供一個方法，通常提供辨識項，<xref:System.Security.Policy.Evidence>類別。</span><span class="sxs-lookup"><span data-stu-id="38e1f-417">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="38e1f-418">載入的資源不是有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-418">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="38e1f-419">參考的樣式表需要功能，而提供的辨識項不允許此功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-419">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="38e1f-420">呼叫端嘗試提供辨識項，但沒有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-420">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="38e1f-421">提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-421">for providing evidence.</span>
          </span>
          <span data-ttu-id="38e1f-422">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-422">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="38e1f-423">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，包含要載入的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-423">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-424">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-424">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="38e1f-425">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-425">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-426">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-426">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="38e1f-427">
            <see cref="T:System.Security.Policy.Evidence" />，設定在 XSLT 樣式表中針對指令碼區塊所產生的組件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-427">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="38e1f-428">如果此為 <see langword="null" />則不會處理指令碼區塊、不支援 XSLT <c>document()</c> 函式，且不允許特殊權限的擴充物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-428">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="38e1f-429">為了提供指令碼組件的辨識項，呼叫端必須擁有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-429">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="38e1f-430">非完全信任呼叫端可以設定這個參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-430">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-431">載入 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-431">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
          <span data-ttu-id="38e1f-432">這個方法可讓您指定辨識項，限制樣式表的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-432">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-433"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-433">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-434"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-434">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-435">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-435">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-436"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-436"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-437">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-437">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-438">從目前的位置載入樣式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-438">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="38e1f-439">若要使用載入的文件的一部分做為樣式表，瀏覽至樣式表開頭所對應的節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-439">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="38e1f-440">在後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XPath.XPathNavigator>位於樣式表開頭 (上`xsl:style sheet`節點)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-440">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="38e1f-441">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="38e1f-441">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="38e1f-442">有不同的方式，提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="38e1f-442">There are different ways to provide evidence.</span></span> <span data-ttu-id="38e1f-443">下表描述何種辨識項，以便提供一般使用者案例。</span><span class="sxs-lookup"><span data-stu-id="38e1f-443">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="38e1f-444">情節</span><span class="sxs-lookup"><span data-stu-id="38e1f-444">Scenario</span></span>|<span data-ttu-id="38e1f-445">若要提供的辨識項型別</span><span class="sxs-lookup"><span data-stu-id="38e1f-445">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="38e1f-446">XSLT 樣式表是獨立的或來自您信任的程式碼基底。</span><span class="sxs-lookup"><span data-stu-id="38e1f-446">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="38e1f-447">使用您的組件的來源辨識項。</span><span class="sxs-lookup"><span data-stu-id="38e1f-447">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslNav, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="38e1f-448">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="38e1f-448">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="38e1f-449">已知來源的源頭，而且沒有可驗證的 URL。</span><span class="sxs-lookup"><span data-stu-id="38e1f-449">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="38e1f-450">建立辨識項使用的 URL。</span><span class="sxs-lookup"><span data-stu-id="38e1f-450">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(xslNav,resolver,evidence);</code></pre>|  
|<span data-ttu-id="38e1f-451">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="38e1f-451">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="38e1f-452">來源的源頭未知。</span><span class="sxs-lookup"><span data-stu-id="38e1f-452">The origin of the source is not known.</span></span>|<span data-ttu-id="38e1f-453">將辨識項設為 `null`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-453">Set evidence to `null`.</span></span> <span data-ttu-id="38e1f-454">不會處理指令碼區塊、不支援 XSLT `document()` 函式，且不允許已授權的擴充物件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-454">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="38e1f-455">此外，您也可以設定`resolver`參數來`null`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-455">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="38e1f-456">這可確保`xsl:import`和`xsl:include`不會處理元素。</span><span class="sxs-lookup"><span data-stu-id="38e1f-456">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="38e1f-457">XSLT 樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="38e1f-457">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="38e1f-458">來源的源頭未知，但是您需要指令碼支援。</span><span class="sxs-lookup"><span data-stu-id="38e1f-458">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="38e1f-459">自呼叫端要求識別項。</span><span class="sxs-lookup"><span data-stu-id="38e1f-459">Request evidence from the caller.</span></span> <span data-ttu-id="38e1f-460">API 的呼叫端必須提供一個方法，通常提供辨識項，`Evidence`類別。</span><span class="sxs-lookup"><span data-stu-id="38e1f-460">The API of the caller must provide a way to provide evidence, typically the `Evidence` class.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="38e1f-461">下列範例會使用從外部來源的樣式表的 XSLT 轉換。</span><span class="sxs-lookup"><span data-stu-id="38e1f-461">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="38e1f-462">樣式表來自受信任的來源，因為`resolver`並`evidence`參數會設定為`null`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-462">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
 
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="38e1f-463">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-463">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="38e1f-464">參考的樣式表需要功能，而提供的辨識項不允許此功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-464">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="38e1f-465">呼叫端嘗試提供辨識項，但沒有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-465">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="38e1f-466">提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-466">for providing evidence.</span>
          </span>
          <span data-ttu-id="38e1f-467">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-467">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="38e1f-468">使用載入的 XSLT 樣式表轉換 XML 資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-468">Transforms the XML data using the loaded XSLT style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-469"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-469">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-470"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-470">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-471">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-471">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile">
          <span data-ttu-id="38e1f-472">要轉換之來源文件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-472">The URL of the source document to be transformed.</span>
          </span>
        </param>
        <param name="outputfile">
          <span data-ttu-id="38e1f-473">輸出檔案的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-473">The URL of the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-474">在輸入檔案中轉換 XML 資料，並將結果輸出至輸出檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-474">Transforms the XML data in the input file and outputs the result to an output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-475"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-475">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-476"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-476">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-477">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-477">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-478"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-478"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-479">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-479">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-480">這個方法是在.NET Framework 1.1 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-480">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="38e1f-481">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="38e1f-481">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="38e1f-482">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="38e1f-482">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38e1f-483">下列範例會轉換`books.xml`檔案中，使用`output.xsl`樣式表並將結果輸出至`books.html`檔案。</span><span class="sxs-lookup"><span data-stu-id="38e1f-483">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="38e1f-484">此範例會使用下列兩個輸入的檔案：</span><span class="sxs-lookup"><span data-stu-id="38e1f-484">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-485">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-485">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="38e1f-486">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-486">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-487">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-487">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="38e1f-488">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-488">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-489">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-489">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-490">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-490">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="38e1f-491">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-491">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-492"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-492">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-493"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-493">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-494">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-494">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-495"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-495"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-496">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-496">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-497">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-497">This method is now obsolete.</span></span> <span data-ttu-id="38e1f-498">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="38e1f-498">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="38e1f-499">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="38e1f-499">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="38e1f-500">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-500">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="38e1f-501">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlReader>(`xsl:output`項目會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-501">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="38e1f-502">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="38e1f-502">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="38e1f-503">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-503">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="38e1f-504">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-504">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-505">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-505">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-506">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-506">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="38e1f-507">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="38e1f-507">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="38e1f-508">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="38e1f-508">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-509">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-509">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="38e1f-510">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-510">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-511">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-511">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-512">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-512">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-513">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-513">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="38e1f-514">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-514">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-515"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-515">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-516"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-516">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-517">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-517">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-518"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-518"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-519">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-519">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-520">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-520">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="38e1f-521">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-521">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-522">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-522">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-523">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="38e1f-523">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="38e1f-524">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-524">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="38e1f-525">因為<xref:System.Xml.XmlReader>提供唯讀的輸出，`xsl:output`項目會被忽略。</span><span class="sxs-lookup"><span data-stu-id="38e1f-525">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="38e1f-526">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="38e1f-526">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="38e1f-527">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-527">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-528">這個方法已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-528">This method is obsolete.</span></span> <span data-ttu-id="38e1f-529">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT document （） 函式已解決。</span><span class="sxs-lookup"><span data-stu-id="38e1f-529">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="38e1f-530">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="38e1f-530">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="38e1f-531">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-531">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="38e1f-532">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-532">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="38e1f-533">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-533">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-534">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-534">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile">
          <span data-ttu-id="38e1f-535">要轉換之來源文件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-535">The URL of the source document to be transformed.</span>
          </span>
        </param>
        <param name="outputfile">
          <span data-ttu-id="38e1f-536">輸出檔案的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-536">The URL of the output file.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-537">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-537">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="38e1f-538">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-538">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-539">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-539">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-540">在輸入檔案中轉換 XML 資料，並將結果輸出至輸出檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-540">Transforms the XML data in the input file and outputs the result to an output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-541"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-541">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-542"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-542">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-543">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-543">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-544"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-544"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-545">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-545">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38e1f-546">下列範例會執行 XSLT 轉換，並輸出至檔案。</span><span class="sxs-lookup"><span data-stu-id="38e1f-546">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="38e1f-547"><xref:System.Xml.XmlUrlResolver>認證會使用有預設外部資源解析。</span><span class="sxs-lookup"><span data-stu-id="38e1f-547">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="38e1f-548">如需詳細資訊，請參閱<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-548">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-549">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-549">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="38e1f-550">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-550">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-551">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-551">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="38e1f-552">要輸出至的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-552">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-553">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-553">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-554"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-554">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-555"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-555">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-556">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-556">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-557"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-557"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-558">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-558">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-559">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-559">This method is now obsolete.</span></span> <span data-ttu-id="38e1f-560">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="38e1f-560">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="38e1f-561">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="38e1f-561">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="38e1f-562">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-562">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="38e1f-563">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-563">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-564">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-564">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-565">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-565">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="38e1f-566">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="38e1f-566">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="38e1f-567">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="38e1f-567">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="38e1f-568">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-568">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="38e1f-569">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-569">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="38e1f-570">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-570">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-571">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-571">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="38e1f-572">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-572">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-573">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-573">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="38e1f-574">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-574">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-575">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-575">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="38e1f-576">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-576">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-577">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-577">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-578"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-578">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-579"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-579">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-580">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-580">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-581"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-581"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-582">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-582">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-583">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-583">This method is now obsolete.</span></span> <span data-ttu-id="38e1f-584">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="38e1f-584">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="38e1f-585">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="38e1f-585">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="38e1f-586">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-586">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="38e1f-587">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-587">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="38e1f-588">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="38e1f-588">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="38e1f-589">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-589">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-590">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-590">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-591">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-591">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="38e1f-592">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="38e1f-592">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="38e1f-593">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="38e1f-593">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="38e1f-594">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-594">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="38e1f-595">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-595">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="38e1f-596">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-596">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-597">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-597">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="38e1f-598">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-598">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-599">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-599">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="38e1f-600">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-600">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-601">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-601">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-602">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-602">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="38e1f-603">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-603">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-604">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-604">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-605">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-605">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="38e1f-606">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-606">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-607"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-607">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-608"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-608">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-609">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-609">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-610"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-610"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-611">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-611">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-612">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-612">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="38e1f-613">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlReader>(`xsl:output`項目會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-613">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="38e1f-614">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="38e1f-614">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="38e1f-615">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-615">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="38e1f-616">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-616">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-617">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-617">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-618">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-618">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="38e1f-619">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="38e1f-619">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="38e1f-620">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="38e1f-620">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="38e1f-621">下列範例會將轉換 XML 文件，並將結果輸出至`XmlReader`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-621">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="38e1f-622"><xref:System.Xml.XmlUrlResolver>具有必要認證用來處理所有 XSLT`document()`函式。</span><span class="sxs-lookup"><span data-stu-id="38e1f-622">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-623">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-623">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="38e1f-624">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-624">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-625">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-625">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="38e1f-626">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-626">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-627">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-627">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="38e1f-628">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-628">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-629">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-629">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-630"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-630">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-631"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-631">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-632">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-632">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-633"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-633"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-634">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-634">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-635">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-635">This method is now obsolete.</span></span> <span data-ttu-id="38e1f-636">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="38e1f-636">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="38e1f-637">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="38e1f-637">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="38e1f-638">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-638">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="38e1f-639">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-639">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="38e1f-640">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="38e1f-640">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="38e1f-641">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-641">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-642">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-642">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-643">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-643">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="38e1f-644">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="38e1f-644">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="38e1f-645">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="38e1f-645">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="38e1f-646">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-646">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="38e1f-647">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-647">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="38e1f-648">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-648">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-649">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-649">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="38e1f-650">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-650">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-651">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-651">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-652">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-652">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="38e1f-653">要輸出至的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-653">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-654">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-654">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-655"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-655">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-656"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-656">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-657">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-657">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-658"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-658"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-659">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-659">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-660">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-660">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="38e1f-661">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-661">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-662">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-662">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-663">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="38e1f-663">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="38e1f-664">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-664">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="38e1f-665">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="38e1f-665">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-666">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-666">This method is now obsolete.</span></span> <span data-ttu-id="38e1f-667">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="38e1f-667">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="38e1f-668">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="38e1f-668">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="38e1f-669">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-669">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="38e1f-670">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-670">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="38e1f-671">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-671">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-672">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-672">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-673">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-673">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-674">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-674">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="38e1f-675">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-675">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-676">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-676">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-677"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-677">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-678"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-678">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-679">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-679">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-680"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-680"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-681">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-681">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-682">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-682">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="38e1f-683">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-683">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-684">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-684">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-685">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="38e1f-685">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="38e1f-686">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-686">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="38e1f-687">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-687">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="38e1f-688">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="38e1f-688">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-689">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-689">This method is now obsolete.</span></span> <span data-ttu-id="38e1f-690">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="38e1f-690">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="38e1f-691">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="38e1f-691">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="38e1f-692">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-692">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="38e1f-693">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-693">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="38e1f-694">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-694">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-695">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-695">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-696">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-696">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-697">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-697">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-698">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-698">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="38e1f-699">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-699">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-700">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-700">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-701">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-701">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="38e1f-702">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-702">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-703"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-703">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-704"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-704">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-705">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-705">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-706"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-706"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-707">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-707">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-708">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-708">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="38e1f-709">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-709">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-710">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-710">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-711">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="38e1f-711">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="38e1f-712">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-712">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="38e1f-713">因為<xref:System.Xml.XmlReader>提供唯讀的輸出，`xsl:output`項目會被忽略。</span><span class="sxs-lookup"><span data-stu-id="38e1f-713">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="38e1f-714">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="38e1f-714">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="38e1f-715">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-715">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="38e1f-716">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-716">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="38e1f-717">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-717">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="38e1f-718">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-718">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-719">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-719">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-720">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-720">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-721">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-721">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="38e1f-722">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-722">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-723">使用指定的引數來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-723">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-724"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-724">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-725"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-725">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-726">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-726">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-727"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-727"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-728">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-728">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-729">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-729">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="38e1f-730">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-730">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-731">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-731">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-732">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="38e1f-732">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="38e1f-733">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-733">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="38e1f-734">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-734">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="38e1f-735">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="38e1f-735">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-736">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-736">This method is now obsolete.</span></span> <span data-ttu-id="38e1f-737">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="38e1f-737">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="38e1f-738">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="38e1f-738">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="38e1f-739">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-739">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="38e1f-740">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-740">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="38e1f-741">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-741">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-742">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-742">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-743">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-743">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="38e1f-744">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-744">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-745">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-745">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="38e1f-746">要輸出至的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-746">The stream to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-747">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-747">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="38e1f-748">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-748">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-749">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-749">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-750">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-750">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-751"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-751">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-752"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-752">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-753">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-753">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-754"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-754"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-755">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-755">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-756">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-756">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="38e1f-757">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-757">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-758">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-758">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-759">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-759">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="38e1f-760">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="38e1f-760">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="38e1f-761">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="38e1f-761">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="38e1f-762">下列範例會執行 ASP.NET 頁面內的轉換。</span><span class="sxs-lookup"><span data-stu-id="38e1f-762">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="38e1f-763">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-763">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="38e1f-764">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-764">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="38e1f-765">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-765">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-766">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-766">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="38e1f-767">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-767">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-768">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-768">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="38e1f-769">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-769">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-770">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-770">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="38e1f-771">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-771">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-772">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-772">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="38e1f-773">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-773">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-774">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-774">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-775">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-775">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-776"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-776">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-777"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-777">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-778">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-778">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-779"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-779"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-780">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-780">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-781">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-781">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="38e1f-782">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-782">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="38e1f-783">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="38e1f-783">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="38e1f-784">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-784">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-785">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-785">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-786">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-786">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="38e1f-787">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="38e1f-787">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="38e1f-788">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="38e1f-788">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="38e1f-789">下列範例會轉換為 XML 檔案，並將輸出 HTML 字串。</span><span class="sxs-lookup"><span data-stu-id="38e1f-789">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="38e1f-790"><xref:System.IO.StringReader>和<xref:System.IO.StringWriter>類別用來讀取和寫入字串。</span><span class="sxs-lookup"><span data-stu-id="38e1f-790">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="38e1f-791">該範例使用 `books.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="38e1f-791">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="38e1f-792">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-792">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="38e1f-793">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-793">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="38e1f-794">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-794">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-795">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-795">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="38e1f-796">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-796">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-797">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-797">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="38e1f-798">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-798">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-799">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-799">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="38e1f-800">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-800">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-801">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-801">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="38e1f-802">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-802">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-803">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-803">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-804">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-804">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-805"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-805">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-806"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-806">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-807">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-807">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-808"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-808"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-809">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-809">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-810">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-810">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="38e1f-811">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-811">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="38e1f-812">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="38e1f-812">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="38e1f-813">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-813">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-814">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-814">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-815">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-815">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="38e1f-816">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="38e1f-816">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="38e1f-817">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="38e1f-817">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="38e1f-818">下列範例會將 XML 文件轉換成 HTML 文件。</span><span class="sxs-lookup"><span data-stu-id="38e1f-818">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="38e1f-819">它會在資料表中顯示 ISBN、 標題和每本書籍的價格。</span><span class="sxs-lookup"><span data-stu-id="38e1f-819">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="38e1f-820">範例會使用下列兩個輸入檔案。</span><span class="sxs-lookup"><span data-stu-id="38e1f-820">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="38e1f-821">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-821">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="38e1f-822">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-822">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="38e1f-823">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-823">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-824">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-824">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
        <related type="Article" href="http://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde">
          <span data-ttu-id="38e1f-825">XslTransform 的輸出</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-825">Outputs from an XslTransform</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-826">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-826">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-827">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-827">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="38e1f-828">要輸出至的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-828">The stream to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-829">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-829">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="38e1f-830">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-830">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-831">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-831">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-832">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-832">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-833"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-833">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-834"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-834">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-835">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-835">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-836"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-836"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-837">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-837">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-838">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-838">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="38e1f-839">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-839">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-840">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-840">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-841">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="38e1f-841">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="38e1f-842">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-842">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="38e1f-843">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="38e1f-843">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38e1f-844">下列範例會載入至 customer 資料表<xref:System.Xml.XmlDataDocument>和執行 XSLT 轉換成 HTML 表提取客戶資料。</span><span class="sxs-lookup"><span data-stu-id="38e1f-844">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="38e1f-845">此範例會使用 Microsoft SQL Server 2000 的 Northwind 資料庫。</span><span class="sxs-lookup"><span data-stu-id="38e1f-845">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="38e1f-846">該範例使用 `customers.xsl` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="38e1f-846">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="38e1f-847">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-847">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="38e1f-848">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-848">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="38e1f-849">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-849">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-850">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-850">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-851">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-851">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-852">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-852">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="38e1f-853">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-853">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-854">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-854">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="38e1f-855">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-855">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-856">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-856">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-857">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-857">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-858"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-858">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-859"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-859">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-860">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-860">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-861"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-861"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-862">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-862">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-863">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-863">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="38e1f-864">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-864">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-865">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-865">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-866">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="38e1f-866">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="38e1f-867">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-867">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="38e1f-868">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="38e1f-868">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="38e1f-869">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="38e1f-869">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="38e1f-870">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-870">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="38e1f-871">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-871">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="38e1f-872">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-872">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-873">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-873">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="38e1f-874">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-874">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="38e1f-875">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-875">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="38e1f-876">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-876">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="38e1f-877">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-877">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="38e1f-878">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-878">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="38e1f-879">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-879">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="38e1f-880">使用指定的引數來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-880">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-881"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-881">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-882"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-882">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-883">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-883">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-884"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-884"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="38e1f-885">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="38e1f-885">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="38e1f-886">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-886">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="38e1f-887">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-887">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="38e1f-888">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="38e1f-888">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="38e1f-889">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="38e1f-889">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="38e1f-890">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-890">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="38e1f-891">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-891">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="38e1f-892">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="38e1f-892">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="38e1f-893">下列範例會載入並編輯 XML 文件執行 XSLT 轉換之前。</span><span class="sxs-lookup"><span data-stu-id="38e1f-893">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="38e1f-894">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-894">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="38e1f-895">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-895">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="38e1f-896">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-896">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="http://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab">
          <span data-ttu-id="38e1f-897">XslTransform 類別中的 Discretionary 行為實作</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-897">Implementation of Discretionary Behaviors in the XslTransform Class</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="38e1f-898">呼叫 <see cref="T:System.Xml.XmlResolver" /> 方法時，設定用來解析外部資源的 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-898">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="38e1f-899">轉換期間所使用的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-899">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span>
          </span>
          <span data-ttu-id="38e1f-900">如果設定為<see langword="null" />，XSLT <c>document （)</c>函式不會解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="38e1f-900">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-901"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-901">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="38e1f-902"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="38e1f-902">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="38e1f-903">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="38e1f-903">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="38e1f-904">在 1.1 版的.NET framework，應用程式的信任層級會決定預設的行為：</span><span class="sxs-lookup"><span data-stu-id="38e1f-904">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="38e1f-905">`Fully trusted code:` 預設值<xref:System.Xml.XmlUrlResolver>不需要使用者的認證用來解析`document()`函式。</span><span class="sxs-lookup"><span data-stu-id="38e1f-905">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="38e1f-906">如果驗證才能存取外部資源，使用這個屬性來指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="38e1f-906">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="38e1f-907">`Semi-trusted code:` 屬性設定為`null`，這表示`document()`函式不會解析。</span><span class="sxs-lookup"><span data-stu-id="38e1f-907">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="38e1f-908">由於完全信任，才能指定<xref:System.Xml.XmlResolver>，這個屬性也無法設定。</span><span class="sxs-lookup"><span data-stu-id="38e1f-908">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="38e1f-909">使用這個解析程式時 XSLT`document()`函式會叫用。</span><span class="sxs-lookup"><span data-stu-id="38e1f-909">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="38e1f-910">它將不會用來解決`xsl:import`和`xsl:include`樣式表中所參考的項目。</span><span class="sxs-lookup"><span data-stu-id="38e1f-910">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="38e1f-911">指定<xref:System.Xml.XmlResolver>要用來解析`xsl:import`並`xsl:include`樣式表中所參考的項目會使用<xref:System.Xml.Xsl.XslTransform.Load%2A>多載，這個方法會接受<xref:System.Xml.XmlResolver>為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="38e1f-911">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="38e1f-912">這個屬性是在.NET Framework 1.1 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="38e1f-912">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="38e1f-913">指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法是建議的做法。</span><span class="sxs-lookup"><span data-stu-id="38e1f-913">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="38e1f-914">在此情況下，<xref:System.Xml.XmlResolver>不會快取之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法完成。</span><span class="sxs-lookup"><span data-stu-id="38e1f-914">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>