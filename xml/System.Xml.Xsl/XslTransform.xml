<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="43060-101">使用可延伸樣式表語言轉換 (XSLT) 樣式表，轉換 XML 資料。</span><span class="sxs-lookup"><span data-stu-id="43060-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-102"><xref:System.Xml.Xsl.XslTransform>類別是在 Microsoft.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-103"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-104">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-105"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-106">XSLT 樣式表必須使用命名空間`http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-107">其他引數也可以加入至樣式表使用<xref:System.Xml.Xsl.XsltArgumentList>類別。</span><span class="sxs-lookup"><span data-stu-id="43060-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="43060-108">這個類別包含可從樣式表呼叫的樣式表和擴充物件的輸入的參數。</span><span class="sxs-lookup"><span data-stu-id="43060-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="43060-109">將 XML 資料的轉換：</span><span class="sxs-lookup"><span data-stu-id="43060-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="43060-110">建立<xref:System.Xml.Xsl.XslTransform>物件。</span><span class="sxs-lookup"><span data-stu-id="43060-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="43060-111">使用<xref:System.Xml.Xsl.XslTransform.Load%2A>方法來載入樣式表的轉換。</span><span class="sxs-lookup"><span data-stu-id="43060-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="43060-112">此方法有數個多載，可以載入樣式表使用<xref:System.Xml.XmlReader>， <xref:System.Xml.XPath.XPathNavigator>， <xref:System.Xml.XPath.IXPathNavigable>，或使用檔案的位置的 URL。</span><span class="sxs-lookup"><span data-stu-id="43060-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="43060-113">使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>來轉換 XML 資料的方法。</span><span class="sxs-lookup"><span data-stu-id="43060-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="43060-114">這個方法有數個多載，而且可以處理不同類型的輸入和輸出。</span><span class="sxs-lookup"><span data-stu-id="43060-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="43060-115">您也可以指定<xref:System.Xml.Xsl.XsltArgumentList>包含要在轉換期間使用做為輸入的其他引數。</span><span class="sxs-lookup"><span data-stu-id="43060-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="43060-116">**安全性考量**</span><span class="sxs-lookup"><span data-stu-id="43060-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="43060-117">建立使用 <xref:System.Xml.Xsl.XslTransform> 類別的應用程式時，您應留意下列項目及其含意：</span><span class="sxs-lookup"><span data-stu-id="43060-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="43060-118">依預設會啟用擴充物件。</span><span class="sxs-lookup"><span data-stu-id="43060-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="43060-119">如果將包含擴充物件的 <xref:System.Xml.Xsl.XsltArgumentList> 物件傳遞到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，則會加以利用。</span><span class="sxs-lookup"><span data-stu-id="43060-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="43060-120">XSLT 樣式表可以包含其他檔案及內嵌指令碼區塊的參考。</span><span class="sxs-lookup"><span data-stu-id="43060-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="43060-121">惡意使用者可以利用這一點，藉由提供您資料或樣式表執行時將會導致您的系統處理，直到電腦資源不足。</span><span class="sxs-lookup"><span data-stu-id="43060-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="43060-122">在混合的信任環境中執行的 XSLT 應用程式，會產生用於詐騙的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="43060-123">例如，居心不良的使用者可載入含有害樣式表的物件，然後將其傳遞給另一使用者，該使用者隨後會呼叫 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法並執行轉換。</span><span class="sxs-lookup"><span data-stu-id="43060-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="43060-124">可減輕這些安全性問題不接受<xref:System.Xml.Xsl.XslTransform>物件、 XSLT 樣式表或來自不受信任來源的 XML 來源資料。</span><span class="sxs-lookup"><span data-stu-id="43060-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="43060-125">**指令碼支援**</span><span class="sxs-lookup"><span data-stu-id="43060-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="43060-126">這個類別支援使用內嵌指令碼`msxsl:script`項目。</span><span class="sxs-lookup"><span data-stu-id="43060-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="43060-127">在 1.1 版的.NET framework，樣式表的辨識項會決定哪些權限會指派給 內嵌指令碼。</span><span class="sxs-lookup"><span data-stu-id="43060-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="43060-128">如果樣式表載入從統一資源識別元 (URI)，URI 用來建立辨識項。</span><span class="sxs-lookup"><span data-stu-id="43060-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="43060-129">此辨識項會包含 URI 以及與其網站和區域。</span><span class="sxs-lookup"><span data-stu-id="43060-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="43060-130">如果使用其他來源載入樣式表，您可以藉由傳遞提供辨識項<xref:System.Security.Policy.Evidence?displayProperty=nameWithType>物件<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="43060-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="43060-131">否則，指令碼組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="43060-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="43060-132">非完全信任呼叫端：`UnmanagedCode`權限，才能編譯內嵌指令碼。</span><span class="sxs-lookup"><span data-stu-id="43060-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="43060-133">`ControlEvidence` 權限，才能提供<xref:System.Security.Policy.Evidence>至<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="43060-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="43060-134">A<xref:System.Security.SecurityException>如果呼叫端沒有必要的權限，會擲回。</span><span class="sxs-lookup"><span data-stu-id="43060-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="43060-135">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> 和 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="43060-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="43060-136">`msxsl:script`項目具有下列需求：</span><span class="sxs-lookup"><span data-stu-id="43060-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="43060-137">`msxsl:script`元素屬於`urn:schemas-microsoft-com:xslt`命名空間。</span><span class="sxs-lookup"><span data-stu-id="43060-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="43060-138">樣式表必須包含命名空間宣告`xmlns:msxsl=urn:schemas-microsoft-com:xslt`。</span><span class="sxs-lookup"><span data-stu-id="43060-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="43060-139">`msxsl:script`元素可以包含`language`屬性來指定要使用的指令碼語言。</span><span class="sxs-lookup"><span data-stu-id="43060-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="43060-140">值`language`屬性必須是下列其中之一： C#、 CSharp、 VB、 VisualBasic、 JScript、 或 JavaScript。</span><span class="sxs-lookup"><span data-stu-id="43060-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="43060-141">語言名稱不區分大小寫，因為 JavaScript 和 javascript 都有效。</span><span class="sxs-lookup"><span data-stu-id="43060-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="43060-142">如果`language`未指定屬性，則預設為 JScript。</span><span class="sxs-lookup"><span data-stu-id="43060-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="43060-143">`msxsl:script`元素必須包含`implements-prefix`屬性，其中包含代表指令碼區塊相關聯的命名空間的前置詞。</span><span class="sxs-lookup"><span data-stu-id="43060-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="43060-144">此命名空間必須定義樣式表中。</span><span class="sxs-lookup"><span data-stu-id="43060-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="43060-145">樣式表可以包含多個命名空間所分組的指令碼區塊。</span><span class="sxs-lookup"><span data-stu-id="43060-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="43060-146">您不能有相同的命名空間內的多種語言的指令碼區塊。</span><span class="sxs-lookup"><span data-stu-id="43060-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="43060-147">提供指令碼區塊會位於相同的命名空間，指令碼區塊可以呼叫另一個的指令碼區塊中定義的函式。</span><span class="sxs-lookup"><span data-stu-id="43060-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="43060-148">根據規則和語法的指令碼語言來剖析的指令碼區塊的內容 (由提供`language`屬性)。</span><span class="sxs-lookup"><span data-stu-id="43060-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="43060-149">例如，如果您在 C# 指令碼區塊，註解會加上`//`字元。</span><span class="sxs-lookup"><span data-stu-id="43060-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="43060-150">註解必須是有效的 XML 內容。</span><span class="sxs-lookup"><span data-stu-id="43060-150">The comments must be valid XML content.</span></span>  
  
 <span data-ttu-id="43060-151">`Note` 建議您將指令碼區塊包裝在 CDATA 區段。</span><span class="sxs-lookup"><span data-stu-id="43060-151">`Note` It is recommended that you wrap script blocks in a CDATA section.</span></span>  
  
```  
<msxsl:script implements-prefix='xy' language='C#'>  
  <![CDATA[  
  // Add code here.  
  ]]]><![CDATA[]>  
</msxsl:script>  
```  
  
 <span data-ttu-id="43060-152">函式可在 `msxsl:script` 項目內進行宣告。</span><span class="sxs-lookup"><span data-stu-id="43060-152">Functions can be declared within the `msxsl:script` element.</span></span> <span data-ttu-id="43060-153">下表顯示根據預設所支援的命名空間。</span><span class="sxs-lookup"><span data-stu-id="43060-153">The following table shows the namespaces that are supported by default.</span></span>  
  
|<span data-ttu-id="43060-154">支援的命名空間</span><span class="sxs-lookup"><span data-stu-id="43060-154">Supported Namespaces</span></span>|<span data-ttu-id="43060-155">描述</span><span class="sxs-lookup"><span data-stu-id="43060-155">Description</span></span>|  
|--------------------------|-----------------|  
|`System`|<span data-ttu-id="43060-156">系統類別。</span><span class="sxs-lookup"><span data-stu-id="43060-156">System classes.</span></span>|  
|`System.Collection`|<span data-ttu-id="43060-157">集合類別。</span><span class="sxs-lookup"><span data-stu-id="43060-157">Collection classes.</span></span>|  
|`System.Text`|<span data-ttu-id="43060-158">文字處理類別。</span><span class="sxs-lookup"><span data-stu-id="43060-158">Text handling classes.</span></span>|  
|`System.Xml`|<span data-ttu-id="43060-159">核心 XML 類別。</span><span class="sxs-lookup"><span data-stu-id="43060-159">Core XML classes.</span></span>|  
|`System.Xml.Xsl`|<span data-ttu-id="43060-160">XSLT 類別。</span><span class="sxs-lookup"><span data-stu-id="43060-160">XSLT classes.</span></span>|  
|`System.Xml.XPath`|<span data-ttu-id="43060-161">XML 路徑語言 (XPath) 類別。</span><span class="sxs-lookup"><span data-stu-id="43060-161">XML Path Language (XPath) classes.</span></span>|  
  
 <span data-ttu-id="43060-162">提供的引數和傳回指令碼函式所定義的值必須是其中一個下面所列的 World Wide Web Consortium (W3C) 型別。</span><span class="sxs-lookup"><span data-stu-id="43060-162">The supplied arguments and return values defined by the script functions must be one of the World Wide Web Consortium (W3C) types listed below.</span></span> <span data-ttu-id="43060-163">下表詳細說明 W3C 型別、 XPath 或 XSLT 之間的對應和對應的.NET Framework 類別。</span><span class="sxs-lookup"><span data-stu-id="43060-163">The following table details the mapping between the W3C types, either XPath or XSLT, and the corresponding .NET Framework classes.</span></span>  
  
|<span data-ttu-id="43060-164">W3C 型別</span><span class="sxs-lookup"><span data-stu-id="43060-164">W3C Type</span></span>|<span data-ttu-id="43060-165">對等的.NET 類別</span><span class="sxs-lookup"><span data-stu-id="43060-165">Equivalent .NET class</span></span>|  
|--------------|---------------------------|  
|<span data-ttu-id="43060-166">字串 (XPath)</span><span class="sxs-lookup"><span data-stu-id="43060-166">String (XPath)</span></span>|`System.String`|  
|<span data-ttu-id="43060-167">布林值 (XPath)</span><span class="sxs-lookup"><span data-stu-id="43060-167">Boolean (XPath)</span></span>|`System.Boolean`|  
|<span data-ttu-id="43060-168">數字 (XPath)</span><span class="sxs-lookup"><span data-stu-id="43060-168">Number (XPath)</span></span>|`System.Double`|  
|<span data-ttu-id="43060-169">Result Tree Fragment (XSLT)</span><span class="sxs-lookup"><span data-stu-id="43060-169">Result Tree Fragment (XSLT)</span></span>|`System.Xml.XPath.XPathNavigator`|  
|<span data-ttu-id="43060-170">節點集 (XPath)</span><span class="sxs-lookup"><span data-stu-id="43060-170">Node Set (XPath)</span></span>|`System.Xml.XPath.XPathNodeIterator`|  
  
 <span data-ttu-id="43060-171">如果指令碼函式會利用其中下列數字型別： Int16、 UInt16、 Int32、 UInt32、 Int64、 UInt64、 單一、 或 Decimal，這些類型會強制轉成 Double，其對應至 W3C XPath 型別數值。</span><span class="sxs-lookup"><span data-stu-id="43060-171">If the script function utilizes one of the following numeric types: Int16, UInt16, Int32, UInt32, Int64, UInt64, Single, or Decimal, these types are coerced to Double, which maps to the W3C XPath type number.</span></span>  
  
 <span data-ttu-id="43060-172">擲回例外狀況時呼叫的函式不能將引數結果轉換成其中一個必要的型別。</span><span class="sxs-lookup"><span data-stu-id="43060-172">An exception is thrown when a function is called that cannot convert the argument result to one of the required types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-173">`msxsl:script` 和`msxsl:node-list`都是唯一的函式，從`urn:schemas-microsoft-com:xslt`所支援的命名空間<xref:System.Xml.Xsl.XslTransform>類別。</span><span class="sxs-lookup"><span data-stu-id="43060-173">`msxsl:script` and `msxsl:node-list` are the only functions from the `urn:schemas-microsoft-com:xslt` namespace that are supported by the <xref:System.Xml.Xsl.XslTransform> class.</span></span>  
  
 <span data-ttu-id="43060-174"><xref:System.Xml.Xsl.XslTransform> 能夠利用 common language runtime (CLR) 程式碼，做為副檔名的機制。</span><span class="sxs-lookup"><span data-stu-id="43060-174"><xref:System.Xml.Xsl.XslTransform> has the ability to utilize common language runtime (CLR) code as an extension mechanism.</span></span> <span data-ttu-id="43060-175">這是藉由傳遞至類別的執行個體<xref:System.Xml.Xsl.XslTransform>類別並呼叫它的 XSLT 樣式表中的公用方法。</span><span class="sxs-lookup"><span data-stu-id="43060-175">This is accomplished by passing an instance of a class to the <xref:System.Xml.Xsl.XslTransform> class and calling its public methods within an XSLT style sheet.</span></span> <span data-ttu-id="43060-176">方法所定義的`params`關鍵字，以允許未指定要傳遞的參數數目，無法在此案例中正常運作。</span><span class="sxs-lookup"><span data-stu-id="43060-176">Methods that are defined with the `params` keyword, which allows an unspecified number of parameters to be passed, do not work correctly in this scenario.</span></span> <span data-ttu-id="43060-177">請參閱[params](~/docs/csharp/language-reference/keywords/params.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="43060-177">See [params](~/docs/csharp/language-reference/keywords/params.md) for more details.</span></span>  
  
 <span data-ttu-id="43060-178">如需詳細資訊，請參閱[使用 XslTransform 類別進行 XSLT 轉換](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-178">For more information see [XSLT Transformations with the XslTransform Class](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43060-179">下列範例會轉換指定的 XML 文件，並將結果輸出至主控台。</span><span class="sxs-lookup"><span data-stu-id="43060-179">The following example transforms the specified XML document and outputs the result to the console.</span></span>  
  
 [!code-csharp[Classic WebData XslTransform Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="43060-180"><see cref="T:System.Xml.Xsl.XslTransform" /> 物件是用於轉換作業的唯一執行緒安全。</span><span class="sxs-lookup"><span data-stu-id="43060-180"><see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span></span> <span data-ttu-id="43060-181">其他作業並非都是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="43060-181">Other operations are not guaranteed to be thread-safe.</span></span> <span data-ttu-id="43060-182">您必須確定沒有其他方法，會在載入作業期間在物件上呼叫。</span><span class="sxs-lookup"><span data-stu-id="43060-182">You must ensure that no other methods are called on the object during load operations.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="43060-183">初始化 <see cref="T:System.Xml.Xsl.XslTransform" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="43060-183">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43060-184">載入 XSLT 樣式表，包括 <see langword="xsl:include" /> 和 <see langword="xsl:import" /> 項目中參考的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-184">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-185"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-185">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-186"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-186">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-187">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-187">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="43060-188">URL，指定要載入的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-188">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <summary><span data-ttu-id="43060-189">載入 URL 指定的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-189">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-190"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-190">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-191"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-191">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-192">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-192">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-193"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-193"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-194">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`。</span><span class="sxs-lookup"><span data-stu-id="43060-194">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="43060-195">這個方法會載入 XSLT 樣式表，包括任何參考中的樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="43060-195">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="43060-196">使用解析外部資源<xref:System.Xml.XmlUrlResolver>不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="43060-196">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="43060-197">如果樣式表位於需要驗證的網路資源，使用的多載，<xref:System.Xml.XmlResolver>做為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="43060-197">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="43060-198">如果樣式表包含內嵌指令碼，指令碼會編譯至組件。</span><span class="sxs-lookup"><span data-stu-id="43060-198">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="43060-199">樣式表的 URI 用來建立套用至組件辨識項。</span><span class="sxs-lookup"><span data-stu-id="43060-199">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span> <span data-ttu-id="43060-200">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱 Q316755 在 Microsoft 知識庫文件在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="43060-200">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-201">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="43060-201">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="43060-202">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="43060-202">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43060-203">下列範例會將 XML 文件轉換成 HTML 文件。</span><span class="sxs-lookup"><span data-stu-id="43060-203">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="43060-204">它會在資料表中顯示 ISBN、 標題和每本書的價格。</span><span class="sxs-lookup"><span data-stu-id="43060-204">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="43060-205">範例會使用下列兩個輸入檔案。</span><span class="sxs-lookup"><span data-stu-id="43060-205">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="43060-206">載入的資源不是有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-206">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="43060-207">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-207">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="43060-208"><see cref="T:System.Xml.XmlReader" /> 物件，包含 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-208">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="43060-209">載入 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-209">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-210"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-210">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-211"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-211">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-212">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-212">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-213"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-213"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-214">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-214">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-215">這個方法會載入 XSLT 樣式表，包括任何參考中的樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="43060-215">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="43060-216">使用解析外部資源<xref:System.Xml.XmlUrlResolver>不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="43060-216">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="43060-217">如果樣式表位於需要驗證的網路資源，使用的多載，<xref:System.Xml.XmlResolver>做為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="43060-217">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="43060-218">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過所有子系。</span><span class="sxs-lookup"><span data-stu-id="43060-218">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="43060-219">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="43060-219">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="43060-220">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XmlReader>位於樣式表結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="43060-220">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="43060-221">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="43060-221">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="43060-222">如果樣式表包含實體，您應該指定<xref:System.Xml.XmlReader>，可以解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="43060-222">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="43060-223">在此情況下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="43060-223">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="43060-224">如果樣式表包含內嵌指令碼，指令碼會編譯至組件。</span><span class="sxs-lookup"><span data-stu-id="43060-224">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="43060-225">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="43060-225">The assembly has full trust.</span></span> <span data-ttu-id="43060-226">建議的作法是要提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="43060-226">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="43060-227">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱 Q316755 在 Microsoft 知識庫文件在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="43060-227">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-228">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="43060-228">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="43060-229">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="43060-229">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43060-230">下列範例會轉換為 XML 檔案，依標題排序所有書籍。</span><span class="sxs-lookup"><span data-stu-id="43060-230">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="43060-231">這個範例會使用下列的資料檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="43060-231">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="43060-232">目前的節點不符合有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-232">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="43060-233">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-233">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="43060-234">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="43060-234">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="43060-235">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />) 或包含 XSLT 樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="43060-235">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="43060-236">載入 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-236">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-237"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-237">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-238"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-238">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-239">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-239">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-240"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-240"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-241">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-241">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-242">這個方法會載入 XSLT 樣式表，包括任何參考中的樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="43060-242">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="43060-243">使用解析外部資源<xref:System.Xml.XmlUrlResolver>不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="43060-243">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="43060-244">如果樣式表位於需要驗證的網路資源，使用的多載，<xref:System.Xml.XmlResolver>做為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="43060-244">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="43060-245">如果樣式表包含內嵌指令碼，指令碼會編譯至組件。</span><span class="sxs-lookup"><span data-stu-id="43060-245">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="43060-246">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="43060-246">The assembly has full trust.</span></span> <span data-ttu-id="43060-247">建議的作法是要提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="43060-247">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="43060-248">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱 Q316755 在 Microsoft 知識庫文件在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="43060-248">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-249">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="43060-249">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="43060-250">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="43060-250">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="43060-251">載入的資源不是有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-251">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="43060-252">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-252">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="43060-253"><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，包含 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-253">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="43060-254">載入 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-254">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-255"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-255">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-256"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-256">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-257">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-257">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-258"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-258"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-259">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-259">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-260">這個方法會載入 XSLT 樣式表，包括任何參考中的樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="43060-260">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="43060-261">使用解析外部資源<xref:System.Xml.XmlUrlResolver>不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="43060-261">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="43060-262">如果樣式表位於需要驗證的網路資源，使用的多載，<xref:System.Xml.XmlResolver>做為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="43060-262">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="43060-263">從目前的位置載入樣式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="43060-263">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="43060-264">若要載入之文件部分為樣式表，瀏覽至樣式表的開頭對應的節點。</span><span class="sxs-lookup"><span data-stu-id="43060-264">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="43060-265">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XPath.XPathNavigator>定位於樣式表的開頭 (上`xsl:style sheet`節點)。</span><span class="sxs-lookup"><span data-stu-id="43060-265">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="43060-266">如果樣式表包含內嵌指令碼，指令碼會編譯至組件。</span><span class="sxs-lookup"><span data-stu-id="43060-266">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="43060-267">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="43060-267">The assembly has full trust.</span></span> <span data-ttu-id="43060-268">建議的作法是要提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="43060-268">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="43060-269">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱 Q316755 在 Microsoft 知識庫文件在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="43060-269">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-270">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="43060-270">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="43060-271">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="43060-271">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="43060-272">目前的節點不符合有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-272">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="43060-273">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-273">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="43060-274">URL，指定要載入的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-274">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-275"><see cref="T:System.Xml.XmlResolver" /> 用來載入樣式表和 <c>xsl:import</c> 與 <c>xsl:include</c> 元素中參考的任何樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-275">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span>  
  
 <span data-ttu-id="43060-276">如果值為 <see langword="null" />，則會使用不具有使用者認證的預設 <see cref="T:System.Xml.XmlUrlResolver" />，開啟樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-276">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span></span> <span data-ttu-id="43060-277">因為沒有使用預設的 <see cref="T:System.Xml.XmlUrlResolver" /> 解析樣式表中的任何外部資源，所以不會解析 <c>xsl:import</c> 和 <c>xsl:include</c> 元素。</span><span class="sxs-lookup"><span data-stu-id="43060-277">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span></span>  
  
 <span data-ttu-id="43060-278"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-278">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="43060-279">載入 URL 指定的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-279">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-280"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-280">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-281"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-281">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-282">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-282">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-283"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-283"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-284">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-284">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-285">如果樣式表包含內嵌指令碼，指令碼會編譯至組件。</span><span class="sxs-lookup"><span data-stu-id="43060-285">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="43060-286">樣式表的 URI 用來建立套用至組件辨識項。</span><span class="sxs-lookup"><span data-stu-id="43060-286">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span> <span data-ttu-id="43060-287">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱 Q316755 在 Microsoft 知識庫文件在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="43060-287">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-288">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="43060-288">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="43060-289">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="43060-289">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43060-290">下列範例會將 XML 文件轉換成 HTML 文件。</span><span class="sxs-lookup"><span data-stu-id="43060-290">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="43060-291">此範例會載入 XSLT 樣式表包含`xsl:include`參考另一個樣式表的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-291">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="43060-292"><xref:System.Xml.XmlUrlResolver>傳遞至<xref:System.Xml.Xsl.XslTransform.Load%2A>設定的認證存取網路資源，內含的樣式表的所需的方法。</span><span class="sxs-lookup"><span data-stu-id="43060-292">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="43060-293">這個範例會使用下列的資料檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="43060-293">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="43060-294">載入的資源不是有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-294">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="43060-295">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-295">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="43060-296"><see cref="T:System.Xml.XmlReader" /> 物件，包含 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-296">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-297"><see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-297">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="43060-298">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span><span class="sxs-lookup"><span data-stu-id="43060-298">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
 <span data-ttu-id="43060-299"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-299">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="43060-300">載入 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-300">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-301"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-301">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-302"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-302">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-303">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-303">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-304"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-304"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-305">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-305">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-306">這個方法會載入 XSLT 樣式表，包括任何參考中的樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="43060-306">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="43060-307">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過所有子系。</span><span class="sxs-lookup"><span data-stu-id="43060-307">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="43060-308">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="43060-308">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="43060-309">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XmlReader>位於樣式表結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="43060-309">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="43060-310">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="43060-310">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="43060-311">如果樣式表包含實體，您應該指定<xref:System.Xml.XmlReader>，可以解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="43060-311">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="43060-312">在此情況下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="43060-312">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="43060-313">如果樣式表包含內嵌指令碼，指令碼會編譯至組件。</span><span class="sxs-lookup"><span data-stu-id="43060-313">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="43060-314">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="43060-314">The assembly has full trust.</span></span> <span data-ttu-id="43060-315">建議的作法是要提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="43060-315">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="43060-316">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>內嵌指令碼的方法與樣式表，請參閱 Q316755 在 Microsoft 知識庫文件在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="43060-316">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-317">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="43060-317">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="43060-318">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="43060-318">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="43060-319">目前的節點不符合有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-319">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="43060-320">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-320">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="43060-321">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="43060-321">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="43060-322">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />) 或包含 XSLT 樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="43060-322">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-323"><see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-323">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="43060-324">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span><span class="sxs-lookup"><span data-stu-id="43060-324">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
 <span data-ttu-id="43060-325"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-325">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="43060-326">載入 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-326">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-327"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-327">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-328"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-328">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-329">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-329">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-330"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-330"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-331">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-331">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-332">如果樣式表包含內嵌指令碼，指令碼會編譯至組件。</span><span class="sxs-lookup"><span data-stu-id="43060-332">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="43060-333">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="43060-333">The assembly has full trust.</span></span> <span data-ttu-id="43060-334">建議的作法是要提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="43060-334">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="43060-335">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱 Q316755 在 Microsoft 知識庫文件在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="43060-335">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-336">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="43060-336">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="43060-337">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="43060-337">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="43060-338">載入的資源不是有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-338">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="43060-339">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-339">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="43060-340"><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，包含 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-340">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-341"><see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-341">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="43060-342">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span><span class="sxs-lookup"><span data-stu-id="43060-342">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
 <span data-ttu-id="43060-343"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-343">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="43060-344">載入 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-344">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-345"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-345">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-346"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-346">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-347">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-347">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-348"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-348"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-349">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-349">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-350">從目前的位置載入樣式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="43060-350">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="43060-351">若要載入之文件的部分為樣式表，瀏覽至樣式表的開頭對應的節點。</span><span class="sxs-lookup"><span data-stu-id="43060-351">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="43060-352">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XPath.XPathNavigator>定位於樣式表的開頭 (上`xsl:style sheet`節點)。</span><span class="sxs-lookup"><span data-stu-id="43060-352">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="43060-353">如果樣式表包含內嵌指令碼，指令碼會編譯至組件。</span><span class="sxs-lookup"><span data-stu-id="43060-353">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="43060-354">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="43060-354">The assembly has full trust.</span></span> <span data-ttu-id="43060-355">建議的作法是要提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>。</span><span class="sxs-lookup"><span data-stu-id="43060-355">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span> <span data-ttu-id="43060-356">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱 Q316755 在 Microsoft 知識庫文件在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="43060-356">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-357">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="43060-357">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="43060-358">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="43060-358">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="43060-359">目前的節點不符合有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-359">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="43060-360">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-360">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="43060-361"><see cref="T:System.Xml.XmlReader" /> 物件，包含要載入的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-361">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-362"><see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-362">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="43060-363">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span><span class="sxs-lookup"><span data-stu-id="43060-363">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
 <span data-ttu-id="43060-364"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-364">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="43060-365"><see cref="T:System.Security.Policy.Evidence" />，設定在 XSLT 樣式表中針對指令碼區塊所產生的組件上。</span><span class="sxs-lookup"><span data-stu-id="43060-365">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
 <span data-ttu-id="43060-366">如果此為 <see langword="null" />則不會處理指令碼區塊、不支援 XSLT <c>document()</c> 函式，且不允許特殊權限的擴充物件。</span><span class="sxs-lookup"><span data-stu-id="43060-366">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
 <span data-ttu-id="43060-367">為了提供指令碼組件的辨識項，呼叫端必須擁有 <see langword="ControlEvidence" /> 使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-367">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="43060-368">非完全信任呼叫端可以設定這個參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43060-368">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="43060-369">載入 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-369">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="43060-370">這個方法可讓您指定辨識項，限制樣式表的使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-370">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-371"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-371">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-372"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-372">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-373">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-373">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-374"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-374"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-375">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-375">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-376">這個方法會載入 XSLT 樣式表，包括任何參考中的樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="43060-376">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="43060-377">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過所有子系。</span><span class="sxs-lookup"><span data-stu-id="43060-377">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="43060-378">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="43060-378">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="43060-379">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XmlReader>位於樣式表結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="43060-379">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="43060-380">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="43060-380">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="43060-381">如果樣式表包含實體，您應該指定<xref:System.Xml.XmlReader>，可以解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="43060-381">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="43060-382">在此情況下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="43060-382">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="43060-383">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱 Q316755 在 Microsoft 知識庫文件在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="43060-383">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="43060-384">有不同的方式提供的辨識項。</span><span class="sxs-lookup"><span data-stu-id="43060-384">There are different ways to provide evidence.</span></span> <span data-ttu-id="43060-385">下表描述何種辨識項，以便提供一般使用者案例。</span><span class="sxs-lookup"><span data-stu-id="43060-385">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
    
  
## Examples  
 <span data-ttu-id="43060-386">下列範例會將 XSLT 轉換其中`xsltReader`是<xref:System.Xml.XmlReader>包含樣式表和`secureURL`是受信任的 URL，可以用來建立<xref:System.Security.Policy.Evidence>。</span><span class="sxs-lookup"><span data-stu-id="43060-386">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="43060-387"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType>方法用來建立<xref:System.Security.Policy.Evidence>套用的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-387">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="43060-388">目前的節點不符合有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-388">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="43060-389">參考的樣式表需要功能，而提供的辨識項不允許此功能。</span><span class="sxs-lookup"><span data-stu-id="43060-389">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
 <span data-ttu-id="43060-390">呼叫端嘗試提供辨識項，但沒有 <see langword="ControlEvidence" /> 使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-390">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="43060-391">提供的辨識項。</span><span class="sxs-lookup"><span data-stu-id="43060-391">for providing evidence.</span></span> <span data-ttu-id="43060-392">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="43060-392">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="43060-393">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="43060-393">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="43060-394">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />) 或包含 XSLT 樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="43060-394">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-395"><see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-395">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="43060-396">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span><span class="sxs-lookup"><span data-stu-id="43060-396">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
 <span data-ttu-id="43060-397"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-397">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="43060-398"><see cref="T:System.Security.Policy.Evidence" />，設定在 XSLT 樣式表中針對指令碼區塊所產生的組件上。</span><span class="sxs-lookup"><span data-stu-id="43060-398">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
 <span data-ttu-id="43060-399">如果此為 <see langword="null" />則不會處理指令碼區塊、不支援 XSLT <c>document()</c> 函式，且不允許特殊權限的擴充物件。</span><span class="sxs-lookup"><span data-stu-id="43060-399">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
 <span data-ttu-id="43060-400">為了提供指令碼組件的辨識項，呼叫端必須擁有 <see langword="ControlEvidence" /> 使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-400">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="43060-401">非完全信任呼叫端可以設定這個參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43060-401">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="43060-402">載入 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-402">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="43060-403">這個方法可讓您指定辨識項，限制樣式表的使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-403">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-404"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-404">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-405"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-405">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-406">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-406">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-407"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-407"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-408">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-408">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-409">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱 Q316755 在 Microsoft 知識庫文件在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="43060-409">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="43060-410">有不同的方式提供的辨識項。</span><span class="sxs-lookup"><span data-stu-id="43060-410">There are different ways to provide evidence.</span></span> <span data-ttu-id="43060-411">下表描述何種辨識項，以便提供一般使用者案例。</span><span class="sxs-lookup"><span data-stu-id="43060-411">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
  ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="43060-412">載入的資源不是有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-412">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="43060-413">參考的樣式表需要功能，而提供的辨識項不允許此功能。</span><span class="sxs-lookup"><span data-stu-id="43060-413">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
 <span data-ttu-id="43060-414">呼叫端嘗試提供辨識項，但沒有 <see langword="ControlEvidence" /> 使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-414">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="43060-415">提供的辨識項。</span><span class="sxs-lookup"><span data-stu-id="43060-415">for providing evidence.</span></span> <span data-ttu-id="43060-416">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="43060-416">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="43060-417"><see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，包含要載入的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-417">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-418"><see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-418">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="43060-419">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span><span class="sxs-lookup"><span data-stu-id="43060-419">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
 <span data-ttu-id="43060-420"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-420">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="43060-421"><see cref="T:System.Security.Policy.Evidence" />，設定在 XSLT 樣式表中針對指令碼區塊所產生的組件上。</span><span class="sxs-lookup"><span data-stu-id="43060-421">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
 <span data-ttu-id="43060-422">如果此為 <see langword="null" />則不會處理指令碼區塊、不支援 XSLT <c>document()</c> 函式，且不允許特殊權限的擴充物件。</span><span class="sxs-lookup"><span data-stu-id="43060-422">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
 <span data-ttu-id="43060-423">為了提供指令碼組件的辨識項，呼叫端必須擁有 <see langword="ControlEvidence" /> 使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-423">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="43060-424">非完全信任呼叫端可以設定這個參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="43060-424">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="43060-425">載入 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-425">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span> <span data-ttu-id="43060-426">這個方法可讓您指定辨識項，限制樣式表的使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-426">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-427"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-427">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-428"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-428">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-429">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-429">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-430"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-430"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-431">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-431">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-432">從目前的位置載入樣式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="43060-432">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="43060-433">若要載入之文件的部分為樣式表，瀏覽至樣式表的開頭對應的節點。</span><span class="sxs-lookup"><span data-stu-id="43060-433">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="43060-434">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XPath.XPathNavigator>定位於樣式表的開頭 (上`xsl:style sheet`節點)。</span><span class="sxs-lookup"><span data-stu-id="43060-434">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="43060-435">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱 Q316755 在 Microsoft 知識庫文件在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="43060-435">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="43060-436">有不同的方式提供的辨識項。</span><span class="sxs-lookup"><span data-stu-id="43060-436">There are different ways to provide evidence.</span></span> <span data-ttu-id="43060-437">下表描述何種辨識項，以便提供一般使用者案例。</span><span class="sxs-lookup"><span data-stu-id="43060-437">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
    
  
## Examples  
 <span data-ttu-id="43060-438">下列範例會執行 XSLT 轉換使用的樣式表來自外部來源。</span><span class="sxs-lookup"><span data-stu-id="43060-438">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="43060-439">樣式表來自受信任的來源，因為`resolver`和`evidence`參數已設為`null`。</span><span class="sxs-lookup"><span data-stu-id="43060-439">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
  
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="43060-440">目前的節點不符合有效的樣式表。</span><span class="sxs-lookup"><span data-stu-id="43060-440">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="43060-441">參考的樣式表需要功能，而提供的辨識項不允許此功能。</span><span class="sxs-lookup"><span data-stu-id="43060-441">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
 <span data-ttu-id="43060-442">呼叫端嘗試提供辨識項，但沒有 <see langword="ControlEvidence" /> 使用權限。</span><span class="sxs-lookup"><span data-stu-id="43060-442">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="43060-443">提供的辨識項。</span><span class="sxs-lookup"><span data-stu-id="43060-443">for providing evidence.</span></span> <span data-ttu-id="43060-444">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="43060-444">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="43060-445">使用載入的 XSLT 樣式表轉換 XML 資料。</span><span class="sxs-lookup"><span data-stu-id="43060-445">Transforms the XML data using the loaded XSLT style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-446"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-446">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-447"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-447">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-448">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-448">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="43060-449">要轉換之來源文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="43060-449">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="43060-450">輸出檔案的 URL。</span><span class="sxs-lookup"><span data-stu-id="43060-450">The URL of the output file.</span></span></param>
        <summary><span data-ttu-id="43060-451">在輸入檔案中轉換 XML 資料，並將結果輸出至輸出檔案。</span><span class="sxs-lookup"><span data-stu-id="43060-451">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-452"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-452">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-453"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-453">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-454">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-454">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-455"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-455"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-456">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-456">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-457">這個方法是.NET Framework 1.1 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-457">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="43060-458">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="43060-458">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="43060-459">建議的作法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法會採用<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="43060-459">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43060-460">下列範例會轉換`books.xml`檔案使用`output.xsl`樣式表並將結果輸出至`books.html`檔案。</span><span class="sxs-lookup"><span data-stu-id="43060-460">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="43060-461">此範例會使用下列兩個輸入的檔案：</span><span class="sxs-lookup"><span data-stu-id="43060-461">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-462">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="43060-462">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="43060-463">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="43060-463">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-464"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-464">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="43060-465">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="43060-465">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="43060-466">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="43060-466">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-467"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-467">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-468"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-468">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-469">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-469">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-470"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-470"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-471">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-471">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-472">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-472">This method is now obsolete.</span></span> <span data-ttu-id="43060-473">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="43060-473">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="43060-474">建議的作法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法會採用<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="43060-474">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="43060-475">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-475">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="43060-476">`xsl:output`輸出至時，不支援項目<xref:System.Xml.XmlReader>(`xsl:output`便會忽略元素)。</span><span class="sxs-lookup"><span data-stu-id="43060-476">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="43060-477">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="43060-477">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="43060-478">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="43060-478">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="43060-479">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="43060-479">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="43060-480">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-480">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-481">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>至<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="43060-481">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="43060-482">下列範例會執行轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="43060-482">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="43060-483">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並輸出至主控台。</span><span class="sxs-lookup"><span data-stu-id="43060-483">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-484">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="43060-484">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-485"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-485">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="43060-486">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="43060-486">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="43060-487">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="43060-487">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-488"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-488">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-489"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-489">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-490">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-490">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-491"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-491"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-492">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-492">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-493">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-493">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="43060-494">整體套用至文件轉換範圍。</span><span class="sxs-lookup"><span data-stu-id="43060-494">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="43060-495">換句話說，如果目前節點不是文件根節點的節點樹狀結構上設定，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-495">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-496">在執行轉換之後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="43060-496">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="43060-497">這表示節點，這是目前轉換程序之前，會維持目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="43060-497">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="43060-498">因為<xref:System.Xml.XmlReader>提供唯讀的輸出，`xsl:output`項目會被忽略。</span><span class="sxs-lookup"><span data-stu-id="43060-498">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="43060-499">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="43060-499">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="43060-500">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="43060-500">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-501">這個方法已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-501">This method is obsolete.</span></span> <span data-ttu-id="43060-502">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定 XSLT document （） 函式的解決方式。</span><span class="sxs-lookup"><span data-stu-id="43060-502">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="43060-503">建議的作法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法會採用<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="43060-503">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43060-504">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="43060-504">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="43060-505">注意：這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="43060-505">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="43060-506">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="43060-506">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="43060-507">要轉換之來源文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="43060-507">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="43060-508">輸出檔案的 URL。</span><span class="sxs-lookup"><span data-stu-id="43060-508">The URL of the output file.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-509"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-509">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="43060-510">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-510">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="43060-511"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-511">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="43060-512">在輸入檔案中轉換 XML 資料，並將結果輸出至輸出檔案。</span><span class="sxs-lookup"><span data-stu-id="43060-512">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-513"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-513">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-514"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-514">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-515">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-515">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-516"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-516"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-517">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-517">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43060-518">下列範例會執行 XSLT 轉換，並輸出至檔案。</span><span class="sxs-lookup"><span data-stu-id="43060-518">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="43060-519"><xref:System.Xml.XmlUrlResolver>會使用預設認證的外部資源解析。</span><span class="sxs-lookup"><span data-stu-id="43060-519">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="43060-520">如需詳細資訊，請參閱<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="43060-520">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-521">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="43060-521">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="43060-522">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="43060-522">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-523"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-523">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="43060-524">要輸出至的資料流。</span><span class="sxs-lookup"><span data-stu-id="43060-524">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="43060-525">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="43060-525">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-526"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-526">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-527"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-527">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-528">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-528">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-529"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-529"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-530">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-530">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-531">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-531">This method is now obsolete.</span></span> <span data-ttu-id="43060-532">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="43060-532">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="43060-533">建議的作法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法會採用<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="43060-533">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="43060-534">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-534">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="43060-535">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="43060-535">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="43060-536">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-536">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-537">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>至<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="43060-537">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="43060-538">下列範例會執行轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="43060-538">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="43060-539">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並輸出至主控台。</span><span class="sxs-lookup"><span data-stu-id="43060-539">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43060-540">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="43060-540">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="43060-541">注意：這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="43060-541">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="43060-542">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="43060-542">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-543">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="43060-543">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="43060-544">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="43060-544">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-545"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-545">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="43060-546">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-546">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="43060-547">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-547">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-548"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-548">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-549"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-549">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-550">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-550">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-551"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-551"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-552">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-552">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-553">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-553">This method is now obsolete.</span></span> <span data-ttu-id="43060-554">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="43060-554">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="43060-555">建議的作法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法會採用<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="43060-555">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="43060-556">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-556">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="43060-557">上的編碼屬性`xsl:output`輸出至時，不支援項目<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="43060-557">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="43060-558">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)針對所在特性`xsl:output`支援屬性。</span><span class="sxs-lookup"><span data-stu-id="43060-558">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="43060-559">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="43060-559">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="43060-560">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-560">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-561">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>至<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="43060-561">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="43060-562">下列範例會執行轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="43060-562">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="43060-563">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並輸出至主控台。</span><span class="sxs-lookup"><span data-stu-id="43060-563">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43060-564">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="43060-564">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="43060-565">注意：這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="43060-565">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="43060-566">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="43060-566">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-567">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="43060-567">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="43060-568">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="43060-568">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-569"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-569">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-570"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-570">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="43060-571">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-571">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="43060-572"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-572">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="43060-573">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="43060-573">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="43060-574">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="43060-574">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-575"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-575">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-576"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-576">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-577">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-577">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-578"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-578"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-579">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-579">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-580">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-580">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="43060-581">`xsl:output`輸出至時，不支援項目<xref:System.Xml.XmlReader>(`xsl:output`便會忽略元素)。</span><span class="sxs-lookup"><span data-stu-id="43060-581">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="43060-582">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="43060-582">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="43060-583">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="43060-583">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="43060-584">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="43060-584">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="43060-585">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-585">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-586">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>至<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="43060-586">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="43060-587">下列範例會執行轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="43060-587">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="43060-588">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並輸出至主控台。</span><span class="sxs-lookup"><span data-stu-id="43060-588">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="43060-589">下列範例會將轉換 XML 文件，並將結果輸出至`XmlReader`。</span><span class="sxs-lookup"><span data-stu-id="43060-589">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="43060-590"><xref:System.Xml.XmlUrlResolver>所需的認證用來處理任何 XSLT`document()`函式。</span><span class="sxs-lookup"><span data-stu-id="43060-590">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-591">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="43060-591">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="43060-592">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="43060-592">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-593"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-593">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="43060-594">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-594">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="43060-595">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-595">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-596"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-596">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-597"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-597">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-598">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-598">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-599"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-599"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-600">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-600">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-601">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-601">This method is now obsolete.</span></span> <span data-ttu-id="43060-602">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="43060-602">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="43060-603">建議的作法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法會採用<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="43060-603">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="43060-604">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-604">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="43060-605">`xsl:output`輸出至時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="43060-605">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="43060-606">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="43060-606">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="43060-607">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="43060-607">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="43060-608">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-608">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-609">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>至<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="43060-609">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="43060-610">下列範例會執行轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="43060-610">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="43060-611">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並輸出至主控台。</span><span class="sxs-lookup"><span data-stu-id="43060-611">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43060-612">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="43060-612">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="43060-613">注意：這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="43060-613">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="43060-614">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="43060-614">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-615">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="43060-615">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-616"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-616">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="43060-617">要輸出至的資料流。</span><span class="sxs-lookup"><span data-stu-id="43060-617">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="43060-618">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="43060-618">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-619"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-619">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-620"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-620">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-621">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-621">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-622"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-622"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-623">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-623">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-624">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-624">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="43060-625">整體套用至文件轉換範圍。</span><span class="sxs-lookup"><span data-stu-id="43060-625">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="43060-626">換句話說，如果目前節點不是文件根節點的節點樹狀結構上設定，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-626">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-627">在執行轉換之後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="43060-627">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="43060-628">這表示節點，這是目前轉換程序之前，會維持目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="43060-628">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="43060-629">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)針對所在特性`xsl:output`支援屬性。</span><span class="sxs-lookup"><span data-stu-id="43060-629">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-630">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-630">This method is now obsolete.</span></span> <span data-ttu-id="43060-631">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="43060-631">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="43060-632">建議的作法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法會採用<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="43060-632">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43060-633">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="43060-633">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="43060-634">注意：這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="43060-634">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="43060-635">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="43060-635">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-636">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="43060-636">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-637"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-637">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="43060-638">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-638">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="43060-639">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-639">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-640"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-640">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-641"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-641">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-642">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-642">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-643"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-643"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-644">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-644">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-645">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-645">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="43060-646">整體套用至文件轉換範圍。</span><span class="sxs-lookup"><span data-stu-id="43060-646">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="43060-647">換句話說，如果目前節點不是文件根節點的節點樹狀結構上設定，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-647">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-648">在執行轉換之後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="43060-648">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="43060-649">這表示節點，這是目前轉換程序之前，會維持目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="43060-649">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="43060-650">上的編碼屬性`xsl:output`輸出至時，不支援項目<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="43060-650">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="43060-651">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)針對所在特性`xsl:output`支援屬性。</span><span class="sxs-lookup"><span data-stu-id="43060-651">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-652">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-652">This method is now obsolete.</span></span> <span data-ttu-id="43060-653">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="43060-653">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="43060-654">建議的作法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法會採用<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="43060-654">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43060-655">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="43060-655">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="43060-656">注意：這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="43060-656">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="43060-657">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="43060-657">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-658">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="43060-658">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-659"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-659">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-660"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-660">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="43060-661">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-661">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="43060-662"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-662">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="43060-663">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="43060-663">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="43060-664">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="43060-664">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-665"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-665">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-666"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-666">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-667">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-667">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-668"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-668"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-669">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-669">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-670">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-670">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="43060-671">整體套用至文件轉換範圍。</span><span class="sxs-lookup"><span data-stu-id="43060-671">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="43060-672">換句話說，如果目前節點不是文件根節點的節點樹狀結構上設定，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-672">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-673">在執行轉換之後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="43060-673">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="43060-674">這表示節點，這是目前轉換程序之前，會維持目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="43060-674">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="43060-675">因為<xref:System.Xml.XmlReader>提供唯讀的輸出，`xsl:output`項目會被忽略。</span><span class="sxs-lookup"><span data-stu-id="43060-675">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="43060-676">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="43060-676">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="43060-677">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="43060-677">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43060-678">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="43060-678">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="43060-679">注意：這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="43060-679">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="43060-680">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="43060-680">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-681">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="43060-681">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-682"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-682">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="43060-683">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-683">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="43060-684">使用指定的引數來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-684">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-685"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-685">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-686"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-686">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-687">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-687">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-688"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-688"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-689">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-689">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-690">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-690">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="43060-691">整體套用至文件轉換範圍。</span><span class="sxs-lookup"><span data-stu-id="43060-691">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="43060-692">換句話說，如果目前節點不是文件根節點的節點樹狀結構上設定，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-692">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-693">在執行轉換之後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="43060-693">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="43060-694">這表示的節點是最新的轉換程序之前，會維持目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="43060-694">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="43060-695">`xsl:output`輸出至時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="43060-695">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="43060-696">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="43060-696">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-697">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-697">This method is now obsolete.</span></span> <span data-ttu-id="43060-698">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="43060-698">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="43060-699">建議的作法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法會採用<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="43060-699">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43060-700">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="43060-700">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="43060-701">注意：這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="43060-701">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="43060-702">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="43060-702">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-703">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="43060-703">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="43060-704">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="43060-704">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-705"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-705">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="43060-706">要輸出至的資料流。</span><span class="sxs-lookup"><span data-stu-id="43060-706">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-707"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-707">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="43060-708">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-708">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="43060-709"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-709">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="43060-710">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="43060-710">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-711"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-711">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-712"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-712">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-713">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-713">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-714"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-714"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-715">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-715">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-716">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-716">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="43060-717">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="43060-717">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="43060-718">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-718">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-719">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>至<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="43060-719">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="43060-720">下列範例會執行轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="43060-720">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="43060-721">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並輸出至主控台。</span><span class="sxs-lookup"><span data-stu-id="43060-721">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="43060-722">下列範例會執行 ASP.NET 頁面內的轉換。</span><span class="sxs-lookup"><span data-stu-id="43060-722">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43060-723">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="43060-723">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="43060-724">注意：這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="43060-724">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="43060-725">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="43060-725">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-726">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="43060-726">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="43060-727">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="43060-727">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-728"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-728">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="43060-729">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-729">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-730"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-730">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="43060-731">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-731">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="43060-732"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-732">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="43060-733">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-733">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-734"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-734">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-735"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-735">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-736">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-736">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-737"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-737"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-738">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-738">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-739">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-739">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="43060-740">上的編碼屬性`xsl:output`輸出至時，不支援項目<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="43060-740">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="43060-741">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)針對所在特性`xsl:output`支援屬性。</span><span class="sxs-lookup"><span data-stu-id="43060-741">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="43060-742">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="43060-742">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="43060-743">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-743">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-744">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>至<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="43060-744">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="43060-745">下列範例會執行轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="43060-745">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="43060-746">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並輸出至主控台。</span><span class="sxs-lookup"><span data-stu-id="43060-746">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="43060-747">下列範例會轉換為 XML 檔案，並輸出 HTML 字串。</span><span class="sxs-lookup"><span data-stu-id="43060-747">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="43060-748"><xref:System.IO.StringReader>和<xref:System.IO.StringWriter>類別可用來讀取和寫入的字串。</span><span class="sxs-lookup"><span data-stu-id="43060-748">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="43060-749">該範例使用 `books.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="43060-749">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43060-750">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="43060-750">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="43060-751">注意：這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="43060-751">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="43060-752">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="43060-752">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-753">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span><span class="sxs-lookup"><span data-stu-id="43060-753">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="43060-754">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span><span class="sxs-lookup"><span data-stu-id="43060-754">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-755"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-755">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="43060-756">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-756">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-757"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-757">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="43060-758">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-758">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="43060-759"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-759">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="43060-760">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-760">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-761"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-761">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-762"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-762">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-763">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-763">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-764"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-764"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-765">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-765">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-766">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-766">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="43060-767">`xsl:output`輸出至時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="43060-767">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="43060-768">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="43060-768">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="43060-769">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="43060-769">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="43060-770">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-770">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-771">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>至<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="43060-771">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="43060-772">下列範例會執行轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="43060-772">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="43060-773">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並輸出至主控台。</span><span class="sxs-lookup"><span data-stu-id="43060-773">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="43060-774">下列範例會將 XML 文件轉換成 HTML 文件。</span><span class="sxs-lookup"><span data-stu-id="43060-774">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="43060-775">它會在資料表中顯示 ISBN、 標題和每本書的價格。</span><span class="sxs-lookup"><span data-stu-id="43060-775">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="43060-776">範例會使用下列兩個輸入檔案。</span><span class="sxs-lookup"><span data-stu-id="43060-776">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43060-777">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="43060-777">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="43060-778">注意：這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="43060-778">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="43060-779">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="43060-779">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-780">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="43060-780">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-781"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-781">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="43060-782">要輸出至的資料流。</span><span class="sxs-lookup"><span data-stu-id="43060-782">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-783"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-783">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="43060-784">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-784">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="43060-785"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-785">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="43060-786">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="43060-786">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-787"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-787">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-788"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-788">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-789">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-789">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-790"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-790"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-791">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-791">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-792">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-792">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="43060-793">整體套用至文件轉換範圍。</span><span class="sxs-lookup"><span data-stu-id="43060-793">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="43060-794">換句話說，如果目前節點不是文件根節點的節點樹狀結構上設定，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-794">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-795">在執行轉換之後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="43060-795">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="43060-796">這表示節點，這是目前轉換程序之前，會維持目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="43060-796">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="43060-797">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)針對所在特性`xsl:output`支援屬性。</span><span class="sxs-lookup"><span data-stu-id="43060-797">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43060-798">下列範例會載入至 customer 資料表<xref:System.Xml.XmlDataDocument>和執行 XSLT 轉換，將客戶資料提取到 HTML 表格。</span><span class="sxs-lookup"><span data-stu-id="43060-798">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="43060-799">此範例會使用 Microsoft SQL Server 2000 的 Northwind 資料庫。</span><span class="sxs-lookup"><span data-stu-id="43060-799">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="43060-800">該範例使用 `customers.xsl` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="43060-800">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43060-801">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="43060-801">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="43060-802">注意：這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="43060-802">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="43060-803">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="43060-803">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-804">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="43060-804">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-805"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-805">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="43060-806">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-806">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-807"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-807">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="43060-808">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-808">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="43060-809"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-809">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="43060-810">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-810">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-811"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-811">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-812"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-812">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-813">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-813">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-814"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-814"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-815">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-815">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-816">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-816">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="43060-817">整體套用至文件轉換範圍。</span><span class="sxs-lookup"><span data-stu-id="43060-817">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="43060-818">換句話說，如果目前節點不是文件根節點的節點樹狀結構上設定，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-818">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-819">在執行轉換之後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="43060-819">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="43060-820">這表示節點，這是目前轉換程序之前，會維持目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="43060-820">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="43060-821">上的編碼屬性`xsl:output`輸出至時，不支援項目<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="43060-821">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="43060-822">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)針對所在特性`xsl:output`支援屬性。</span><span class="sxs-lookup"><span data-stu-id="43060-822">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43060-823">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="43060-823">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="43060-824">注意：這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="43060-824">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="43060-825">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="43060-825">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="43060-826">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span><span class="sxs-lookup"><span data-stu-id="43060-826">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="43060-827"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span><span class="sxs-lookup"><span data-stu-id="43060-827">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="43060-828">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-828">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="43060-829"><see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-829">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="43060-830">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span><span class="sxs-lookup"><span data-stu-id="43060-830">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
 <span data-ttu-id="43060-831"><see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span><span class="sxs-lookup"><span data-stu-id="43060-831">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="43060-832">使用指定的引數來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="43060-832">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-833"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-833">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-834"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-834">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-835">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-835">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-836"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="43060-836"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="43060-837">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="43060-837">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="43060-838">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-838">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="43060-839">整體套用至文件轉換範圍。</span><span class="sxs-lookup"><span data-stu-id="43060-839">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="43060-840">換句話說，如果目前節點不是文件根節點的節點樹狀結構上設定，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="43060-840">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="43060-841">在執行轉換之後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="43060-841">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="43060-842">這表示的節點是最新的轉換程序之前，會維持目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="43060-842">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="43060-843">`xsl:output`輸出至時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="43060-843">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="43060-844">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="43060-844">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43060-845">下列範例會載入並執行 XSLT 轉換之前先編輯 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="43060-845">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="43060-846">處理 XSLT 轉換時發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="43060-846">There was an error processing the XSLT transformation.</span></span>  
  
 <span data-ttu-id="43060-847">注意：這是先前版本的行為變更之一。</span><span class="sxs-lookup"><span data-stu-id="43060-847">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="43060-848">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="43060-848">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="43060-849">呼叫 <see cref="T:System.Xml.XmlResolver" /> 方法時，設定用來解析外部資源的 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span><span class="sxs-lookup"><span data-stu-id="43060-849">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span></span></summary>
        <value><span data-ttu-id="43060-850">轉換期間所使用的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="43060-850">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span></span> <span data-ttu-id="43060-851">如果設定為<see langword="null" />，XSLT <c>document （)</c>函式仍未解決。</span><span class="sxs-lookup"><span data-stu-id="43060-851">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="43060-852"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-852">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="43060-853"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="43060-853">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="43060-854">如需詳細資訊，請參閱[使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[移轉從 XslTransform 類別](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="43060-854">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="43060-855">在 1.1 版的.NET framework，應用程式的信任層級會決定預設的行為：</span><span class="sxs-lookup"><span data-stu-id="43060-855">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="43060-856">`Fully trusted code:` 預設值<xref:System.Xml.XmlUrlResolver>沒有使用者認證用來解析`document()`函式。</span><span class="sxs-lookup"><span data-stu-id="43060-856">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="43060-857">如果需要驗證存取外部資源，使用這個屬性來指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="43060-857">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="43060-858">`Semi-trusted code:` 屬性設定為`null`，這表示`document()`函式仍未解決。</span><span class="sxs-lookup"><span data-stu-id="43060-858">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="43060-859">由於完全信任，才能指定<xref:System.Xml.XmlResolver>，這個屬性也無法設定。</span><span class="sxs-lookup"><span data-stu-id="43060-859">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="43060-860">使用這個解析程式時 XSLT`document()`函式會叫用。</span><span class="sxs-lookup"><span data-stu-id="43060-860">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="43060-861">它不用來解析`xsl:import`和`xsl:include`樣式表中所參考的項目。</span><span class="sxs-lookup"><span data-stu-id="43060-861">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="43060-862">若要指定<xref:System.Xml.XmlResolver>要用來解析`xsl:import`和`xsl:include`樣式表中所參考的項目使用<xref:System.Xml.Xsl.XslTransform.Load%2A>多載，這個方法會接受<xref:System.Xml.XmlResolver>做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="43060-862">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="43060-863">這個屬性是.NET Framework 1.1 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="43060-863">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="43060-864">指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法是建議的做法。</span><span class="sxs-lookup"><span data-stu-id="43060-864">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="43060-865">在此情況下，<xref:System.Xml.XmlResolver>不會快取之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法完成。</span><span class="sxs-lookup"><span data-stu-id="43060-865">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>