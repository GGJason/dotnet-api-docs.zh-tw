<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bde6eef3e191bd0a25d4c462afa81d1cbfd131ba" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37733111" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e9df5-101">使用可延伸樣式表語言轉換 (XSLT) 樣式表，轉換 XML 資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e9df5-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-102"><xref:System.Xml.Xsl.XslTransform>類別是 Microsoft.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-103"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-104">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-105"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-106">XSLT 樣式表必須使用命名空間`http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-107">其他引數也可以加入至樣式表使用<xref:System.Xml.Xsl.XsltArgumentList>類別。</span><span class="sxs-lookup"><span data-stu-id="e9df5-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="e9df5-108">這個類別包含樣式表和擴充物件可從樣式表呼叫的輸入的參數。</span><span class="sxs-lookup"><span data-stu-id="e9df5-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="e9df5-109">若要將 XML 資料的轉換：</span><span class="sxs-lookup"><span data-stu-id="e9df5-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="e9df5-110">建立<xref:System.Xml.Xsl.XslTransform>物件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="e9df5-111">使用<xref:System.Xml.Xsl.XslTransform.Load%2A>方法來載入樣式表轉換。</span><span class="sxs-lookup"><span data-stu-id="e9df5-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="e9df5-112">此方法有數個多載，可以載入樣式表 using <xref:System.Xml.XmlReader>， <xref:System.Xml.XPath.XPathNavigator>， <xref:System.Xml.XPath.IXPathNavigable>，或使用檔案的位置 URL。</span><span class="sxs-lookup"><span data-stu-id="e9df5-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="e9df5-113">使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>來轉換 XML 資料的方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="e9df5-114">這個方法有數個多載，以及可處理不同類型的輸入和輸出。</span><span class="sxs-lookup"><span data-stu-id="e9df5-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="e9df5-115">您也可以指定<xref:System.Xml.Xsl.XsltArgumentList>包含要在轉換期間使用做為輸入的其他引數。</span><span class="sxs-lookup"><span data-stu-id="e9df5-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="e9df5-116">**安全性考量**</span><span class="sxs-lookup"><span data-stu-id="e9df5-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="e9df5-117">建立使用 <xref:System.Xml.Xsl.XslTransform> 類別的應用程式時，您應留意下列項目及其含意：</span><span class="sxs-lookup"><span data-stu-id="e9df5-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="e9df5-118">依預設會啟用擴充物件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="e9df5-119">如果將包含擴充物件的 <xref:System.Xml.Xsl.XsltArgumentList> 物件傳遞到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，則會加以利用。</span><span class="sxs-lookup"><span data-stu-id="e9df5-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="e9df5-120">XSLT 樣式表可以包含其他檔案及內嵌指令碼區塊的參考。</span><span class="sxs-lookup"><span data-stu-id="e9df5-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="e9df5-121">惡意使用者可以利用這一點，藉由提供給您的資料或樣式表執行時將會導致您的系統處理，直到電腦資源不足。</span><span class="sxs-lookup"><span data-stu-id="e9df5-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="e9df5-122">在混合的信任環境中執行的 XSLT 應用程式，會產生用於詐騙的樣式表。</span><span class="sxs-lookup"><span data-stu-id="e9df5-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="e9df5-123">例如，居心不良的使用者可載入含有害樣式表的物件，然後將其傳遞給另一使用者，該使用者隨後會呼叫 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法並執行轉換。</span><span class="sxs-lookup"><span data-stu-id="e9df5-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="e9df5-124">您可以降低這些安全性問題不接受<xref:System.Xml.Xsl.XslTransform>物件、 XSLT 樣式表或從不受信任來源的 XML 來源資料。</span><span class="sxs-lookup"><span data-stu-id="e9df5-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="e9df5-125">**指令碼支援**</span><span class="sxs-lookup"><span data-stu-id="e9df5-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="e9df5-126">此類別支援使用內嵌指令碼`msxsl:script`項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="e9df5-127">在.NET Framework 版本 1.1，樣式表的辨識項會決定哪些權限都各有內嵌的指令碼。</span><span class="sxs-lookup"><span data-stu-id="e9df5-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="e9df5-128">如果樣式表載入從統一資源識別元 (URI)，則 URI 用來建立辨識項。</span><span class="sxs-lookup"><span data-stu-id="e9df5-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="e9df5-129">這個辨識項包括加上其站台和區域的 URI。</span><span class="sxs-lookup"><span data-stu-id="e9df5-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="e9df5-130">如果使用其他來源載入樣式表，您還可以提供辨識項，藉由傳遞<xref:System.Security.Policy.Evidence?displayProperty=nameWithType>物件至<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="e9df5-131">否則，指令碼組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="e9df5-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="e9df5-132">非完全信任呼叫端：`UnmanagedCode`權限，才能編譯內嵌的指令碼。</span><span class="sxs-lookup"><span data-stu-id="e9df5-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="e9df5-133">`ControlEvidence` 權限，才能提供<xref:System.Security.Policy.Evidence>至<xref:System.Xml.Xsl.XslTransform.Load%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="e9df5-134">A<xref:System.Security.SecurityException>如果呼叫端沒有必要的權限，就會擲回。</span><span class="sxs-lookup"><span data-stu-id="e9df5-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="e9df5-135">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> 和 <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="e9df5-136">`msxsl:script`項目具有下列需求：</span><span class="sxs-lookup"><span data-stu-id="e9df5-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="e9df5-137">`msxsl:script`項目屬於`urn:schemas-microsoft-com:xslt`命名空間。</span><span class="sxs-lookup"><span data-stu-id="e9df5-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="e9df5-138">樣式表必須包含命名空間宣告`xmlns:msxsl=urn:schemas-microsoft-com:xslt`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="e9df5-139">`msxsl:script`元素可以包含`language`屬性，指定要使用的指令碼語言。</span><span class="sxs-lookup"><span data-stu-id="e9df5-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="e9df5-140">值`language`屬性必須是下列其中之一： C#、 CSharp、 VB、 VisualBasic、 JScript 或 JavaScript。</span><span class="sxs-lookup"><span data-stu-id="e9df5-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="e9df5-141">語言名稱不區分大小寫，因為 JavaScript 和 javascript 都有效。</span><span class="sxs-lookup"><span data-stu-id="e9df5-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="e9df5-142">如果`language`屬性未指定，則會預設為 JScript。</span><span class="sxs-lookup"><span data-stu-id="e9df5-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="e9df5-143">`msxsl:script`元素必須包含`implements-prefix`包含表示指令碼區塊相關聯的命名空間的前置詞的屬性。</span><span class="sxs-lookup"><span data-stu-id="e9df5-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="e9df5-144">此命名空間必須定義樣式表中。</span><span class="sxs-lookup"><span data-stu-id="e9df5-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="e9df5-145">樣式表可以包含多個指令碼區塊會依命名空間。</span><span class="sxs-lookup"><span data-stu-id="e9df5-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="e9df5-146">您不能有相同的命名空間內的多個語言的指令碼區塊。</span><span class="sxs-lookup"><span data-stu-id="e9df5-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="e9df5-147">指令碼區塊可以呼叫另一個的指令碼區塊中定義的函式，提供指令碼區塊會位於相同的命名空間。</span><span class="sxs-lookup"><span data-stu-id="e9df5-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="e9df5-148">根據規則和指令碼語言的語法會剖析指令碼區塊的內容 (藉由提供`language`屬性)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="e9df5-149">例如，如果您有 C# 指令碼區塊，註解會加上`//`字元。</span><span class="sxs-lookup"><span data-stu-id="e9df5-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="e9df5-150">註解必須是有效的 XML 內容。</span><span class="sxs-lookup"><span data-stu-id="e9df5-150">The comments must be valid XML content.</span></span>  
  
 <span data-ttu-id="e9df5-151">`Note` 建議您將指令碼區塊包裝在 CDATA 區段。</span><span class="sxs-lookup"><span data-stu-id="e9df5-151">`Note` It is recommended that you wrap script blocks in a CDATA section.</span></span>  
  
```  
<msxsl:script implements-prefix='xy' language='C#'>  
  <![CDATA[  
  // Add code here.  
  ]]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="e9df5-152">
        <see cref="T:System.Xml.Xsl.XslTransform" /> 物件是只轉換作業的執行緒安全。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e9df5-152">
          <see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span>
      </span>
      <span data-ttu-id="e9df5-153">其他作業不保證是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e9df5-153">Other operations are not guaranteed to be thread-safe.</span>
      </span>
      <span data-ttu-id="e9df5-154">您必須確定沒有其他方法，會在載入作業期間在物件上呼叫。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e9df5-154">You must ensure that no other methods are called on the object during load operations.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e9df5-155">初始化 <see cref="T:System.Xml.Xsl.XslTransform" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-155">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9df5-156">載入 XSLT 樣式表，包括 <see langword="xsl:include" /> 和 <see langword="xsl:import" /> 項目中參考的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-156">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-157"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-157">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-158"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-158">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-159">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-159">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="e9df5-160">URL，指定要載入的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-160">The URL that specifies the XSLT style sheet to load.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-161">載入 URL 指定的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-161">Loads the XSLT style sheet specified by a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-162"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-162">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-163"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-163">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-164">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-164">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-165"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-165"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-166">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-166">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="e9df5-167">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-167">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e9df5-168">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="e9df5-168">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="e9df5-169">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="e9df5-169">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="e9df5-170">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="e9df5-170">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e9df5-171">樣式表的 URI 用來建立辨識項，會套用至組件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-171">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span> <span data-ttu-id="e9df5-172">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e9df5-172">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-173">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="e9df5-173">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e9df5-174">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-174">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9df5-175">下列範例會將 XML 文件轉換成 HTML 文件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-175">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="e9df5-176">它會在資料表中顯示 ISBN、 標題和每本書籍的價格。</span><span class="sxs-lookup"><span data-stu-id="e9df5-176">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e9df5-177">範例會使用下列兩個輸入檔案。</span><span class="sxs-lookup"><span data-stu-id="e9df5-177">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e9df5-178">載入的資源不是有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-178">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e9df5-179">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-179">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e9df5-180">
            <see cref="T:System.Xml.XmlReader" /> 物件，包含 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-180">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-181">載入 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-181">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-182"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-182">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-183"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-183">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-184">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-184">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-185"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-185"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-186">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-186">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-187">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-187">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e9df5-188">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="e9df5-188">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="e9df5-189">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="e9df5-189">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="e9df5-190">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過其所有子系。</span><span class="sxs-lookup"><span data-stu-id="e9df5-190">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="e9df5-191">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="e9df5-191">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="e9df5-192">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XmlReader>位於樣式表的結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-192">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="e9df5-193">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-193">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="e9df5-194">如果樣式表包含實體，您應該指定<xref:System.Xml.XmlReader>，可解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-194">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="e9df5-195">在此情況下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="e9df5-195">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="e9df5-196">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="e9df5-196">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e9df5-197">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="e9df5-197">The assembly has full trust.</span></span> <span data-ttu-id="e9df5-198">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-198">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="e9df5-199">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e9df5-199">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-200">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="e9df5-200">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e9df5-201">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-201">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9df5-202">下列範例會將轉換依標題排序所有書籍的 XML 檔案。</span><span class="sxs-lookup"><span data-stu-id="e9df5-202">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="e9df5-203">此範例會使用下列的資料檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="e9df5-203">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e9df5-204">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-204">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e9df5-205">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-205">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e9df5-206">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-206">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e9df5-207">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />) 或包含 XSLT 樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-207">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-208">載入 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-208">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-209"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-209">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-210"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-210">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-211">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-211">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-212"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-212"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-213">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-213">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-214">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-214">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e9df5-215">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="e9df5-215">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="e9df5-216">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="e9df5-216">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="e9df5-217">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="e9df5-217">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e9df5-218">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="e9df5-218">The assembly has full trust.</span></span> <span data-ttu-id="e9df5-219">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-219">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="e9df5-220">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e9df5-220">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-221">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="e9df5-221">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e9df5-222">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-222">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e9df5-223">載入的資源不是有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-223">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e9df5-224">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-224">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e9df5-225">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，包含 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-225">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-226">載入 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-226">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-227"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-227">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-228"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-228">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-229">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-229">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-230"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-230"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-231">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-231">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-232">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-232">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e9df5-233">使用解析外部資源<xref:System.Xml.XmlUrlResolver>與不具使用者認證。</span><span class="sxs-lookup"><span data-stu-id="e9df5-233">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="e9df5-234">如果樣式表位於此動作需要驗證的網路資源，請使用採用的多載<xref:System.Xml.XmlResolver>為其中一個引數，並指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="e9df5-234">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="e9df5-235">從目前的位置載入樣式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-235">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e9df5-236">若要使用載入的文件的一部分做為樣式表，瀏覽至樣式表開頭所對應的節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-236">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="e9df5-237">在後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XPath.XPathNavigator>位於樣式表開頭 (上`xsl:style sheet`節點)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-237">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="e9df5-238">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="e9df5-238">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e9df5-239">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="e9df5-239">The assembly has full trust.</span></span> <span data-ttu-id="e9df5-240">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-240">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="e9df5-241">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e9df5-241">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-242">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="e9df5-242">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e9df5-243">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-243">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e9df5-244">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-244">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e9df5-245">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-245">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="e9df5-246">URL，指定要載入的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-246">The URL that specifies the XSLT style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-247">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入樣式表和 <c>xsl:import</c> 與 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-247">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="e9df5-248">如果值為 <see langword="null" />，則會使用不具有使用者認證的預設 <see cref="T:System.Xml.XmlUrlResolver" />，開啟樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-248">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span>
          </span>
          <span data-ttu-id="e9df5-249">因為沒有使用預設的 <see cref="T:System.Xml.XmlUrlResolver" /> 解析樣式表中的任何外部資源，所以不會解析 <c>xsl:import</c> 和 <c>xsl:include</c> 元素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-249">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-250">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-250">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-251">載入 URL 指定的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-251">Loads the XSLT style sheet specified by a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-252"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-252">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-253"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-253">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-254">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-254">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-255"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-255"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-256">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-256">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-257">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="e9df5-257">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e9df5-258">樣式表的 URI 用來建立辨識項，會套用至組件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-258">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span> <span data-ttu-id="e9df5-259">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e9df5-259">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-260">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="e9df5-260">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e9df5-261">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-261">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9df5-262">下列範例會將 XML 文件轉換成 HTML 文件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-262">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="e9df5-263">此範例會載入 XSLT 樣式表包含`xsl:include`參考另一個樣式表的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-263">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="e9df5-264"><xref:System.Xml.XmlUrlResolver>傳遞至<xref:System.Xml.Xsl.XslTransform.Load%2A>設定的認證存取網路資源，包含的樣式表所需的方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-264">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="e9df5-265">此範例會使用下列的資料檔案，做為輸入。</span><span class="sxs-lookup"><span data-stu-id="e9df5-265">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e9df5-266">載入的資源不是有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-266">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e9df5-267">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-267">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e9df5-268">
            <see cref="T:System.Xml.XmlReader" /> 物件，包含 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-268">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-269">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-269">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="e9df5-270">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-270">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-271">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-271">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-272">載入 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-272">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-273"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-273">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-274"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-274">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-275">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-275">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-276"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-276"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-277">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-277">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-278">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-278">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e9df5-279">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過其所有子系。</span><span class="sxs-lookup"><span data-stu-id="e9df5-279">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="e9df5-280">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="e9df5-280">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="e9df5-281">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XmlReader>位於樣式表的結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-281">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="e9df5-282">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-282">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="e9df5-283">如果樣式表包含實體，您應該指定<xref:System.Xml.XmlReader>，可解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-283">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="e9df5-284">在此情況下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="e9df5-284">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="e9df5-285">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="e9df5-285">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e9df5-286">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="e9df5-286">The assembly has full trust.</span></span> <span data-ttu-id="e9df5-287">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-287">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="e9df5-288">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>內嵌指令碼的方法和樣式表，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e9df5-288">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-289">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="e9df5-289">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e9df5-290">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-290">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e9df5-291">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-291">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e9df5-292">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-292">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e9df5-293">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-293">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e9df5-294">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />) 或包含 XSLT 樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-294">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-295">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-295">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="e9df5-296">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-296">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-297">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-297">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-298">載入 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-298">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-299"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-299">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-300"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-300">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-301">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-301">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-302"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-302"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-303">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-303">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-304">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="e9df5-304">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e9df5-305">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="e9df5-305">The assembly has full trust.</span></span> <span data-ttu-id="e9df5-306">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-306">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span> <span data-ttu-id="e9df5-307">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e9df5-307">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-308">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="e9df5-308">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e9df5-309">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-309">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e9df5-310">載入的資源不是有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-310">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e9df5-311">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-311">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e9df5-312">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，包含 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-312">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-313">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-313">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="e9df5-314">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-314">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-315">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-315">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-316">載入 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-316">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-317"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-317">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-318"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-318">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-319">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-319">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-320"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-320"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-321">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-321">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-322">從目前的位置載入樣式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-322">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e9df5-323">若要使用載入的文件的一部分做為樣式表，瀏覽至樣式表開頭所對應的節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-323">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="e9df5-324">在後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XPath.XPathNavigator>位於樣式表開頭 (上`xsl:style sheet`節點)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-324">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="e9df5-325">如果樣式表包含內嵌指令碼，指令碼會編譯成組件中。</span><span class="sxs-lookup"><span data-stu-id="e9df5-325">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="e9df5-326">組件具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="e9df5-326">The assembly has full trust.</span></span> <span data-ttu-id="e9df5-327">建議的做法是提供辨識項使用<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-327">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span> <span data-ttu-id="e9df5-328">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e9df5-328">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-329">如果呼叫端沒有`UnmanagedCode`權限，內嵌指令碼就不會編譯和<xref:System.Security.SecurityException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="e9df5-329">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="e9df5-330">如需詳細資訊，請參閱 <xref:System.Security.Permissions.SecurityPermission> 和 <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-330">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e9df5-331">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-331">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e9df5-332">樣式表包含內嵌指令碼，但呼叫端沒有 <see langword="UnmanagedCode" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-332">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e9df5-333">
            <see cref="T:System.Xml.XmlReader" /> 物件，包含要載入的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-333">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-334">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-334">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="e9df5-335">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-335">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-336">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-336">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="e9df5-337">
            <see cref="T:System.Security.Policy.Evidence" />，設定在 XSLT 樣式表中針對指令碼區塊所產生的組件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-337">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="e9df5-338">如果此為 <see langword="null" />則不會處理指令碼區塊、不支援 XSLT <c>document()</c> 函式，且不允許特殊權限的擴充物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-338">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="e9df5-339">為了提供指令碼組件的辨識項，呼叫端必須擁有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-339">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="e9df5-340">非完全信任呼叫端可以設定這個參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-340">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-341">載入 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-341">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
          <span data-ttu-id="e9df5-342">這個方法可讓您指定辨識項，限制樣式表的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-342">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-343"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-343">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-344"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-344">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-345">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-345">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-346"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-346"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-347">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-347">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-348">這個方法會載入 XSLT 樣式表，包括在中參考的任何樣式表`xsl:include`和`xsl:import`項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-348">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="e9df5-349">從目前節點載入樣式表<xref:System.Xml.XmlReader>透過其所有子系。</span><span class="sxs-lookup"><span data-stu-id="e9df5-349">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="e9df5-350">這可讓您使用做為樣式表的文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="e9df5-350">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="e9df5-351">之後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XmlReader>位於樣式表的結尾之後的下一個節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-351">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="e9df5-352">如果到達文件結尾，則 <xref:System.Xml.XmlReader> 會定位於檔案結尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-352">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="e9df5-353">如果樣式表包含實體，您應該指定<xref:System.Xml.XmlReader>，可解析實體 (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType>傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-353">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="e9df5-354">在此情況下，<xref:System.Xml.XmlValidatingReader>可用。</span><span class="sxs-lookup"><span data-stu-id="e9df5-354">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="e9df5-355">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e9df5-355">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="e9df5-356">有不同的方式，提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="e9df5-356">There are different ways to provide evidence.</span></span> <span data-ttu-id="e9df5-357">下表描述何種辨識項，以便提供一般使用者案例。</span><span class="sxs-lookup"><span data-stu-id="e9df5-357">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
    
  
## Examples  
 <span data-ttu-id="e9df5-358">下列範例會執行 XSLT 轉換所在`xsltReader`是<xref:System.Xml.XmlReader>包含樣式表並`secureURL`是受信任的 URL，可用來建立<xref:System.Security.Policy.Evidence>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-358">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="e9df5-359"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType>方法用來建立<xref:System.Security.Policy.Evidence>套用至樣式表。</span><span class="sxs-lookup"><span data-stu-id="e9df5-359">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e9df5-360">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-360">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e9df5-361">參考的樣式表需要功能，而提供的辨識項不允許此功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-361">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="e9df5-362">呼叫端嘗試提供辨識項，但沒有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-362">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e9df5-363">提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-363">for providing evidence.</span>
          </span>
          <span data-ttu-id="e9df5-364">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-364">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e9df5-365">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-365">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e9df5-366">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />) 或包含 XSLT 樣式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-366">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-367">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-367">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="e9df5-368">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-368">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-369">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-369">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="e9df5-370">
            <see cref="T:System.Security.Policy.Evidence" />，設定在 XSLT 樣式表中針對指令碼區塊所產生的組件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-370">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="e9df5-371">如果此為 <see langword="null" />則不會處理指令碼區塊、不支援 XSLT <c>document()</c> 函式，且不允許特殊權限的擴充物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-371">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="e9df5-372">為了提供指令碼組件的辨識項，呼叫端必須擁有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-372">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="e9df5-373">非完全信任呼叫端可以設定這個參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-373">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-374">載入 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-374">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span>
          </span>
          <span data-ttu-id="e9df5-375">這個方法可讓您指定辨識項，限制樣式表的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-375">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-376"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-376">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-377"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-377">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-378">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-378">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-379"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-379"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-380">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-380">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-381">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e9df5-381">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="e9df5-382">有不同的方式，提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="e9df5-382">There are different ways to provide evidence.</span></span> <span data-ttu-id="e9df5-383">下表描述何種辨識項，以便提供一般使用者案例。</span><span class="sxs-lookup"><span data-stu-id="e9df5-383">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
  ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e9df5-384">載入的資源不是有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-384">The loaded resource is not a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e9df5-385">參考的樣式表需要功能，而提供的辨識項不允許此功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-385">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="e9df5-386">呼叫端嘗試提供辨識項，但沒有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-386">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e9df5-387">提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-387">for providing evidence.</span>
          </span>
          <span data-ttu-id="e9df5-388">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-388">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="stylesheet">
          <span data-ttu-id="e9df5-389">
            <see cref="T:System.Xml.XPath.XPathNavigator" /> 物件，包含要載入的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-389">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-390">
            <see cref="T:System.Xml.XmlResolver" /> 用來載入 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中參考的任何樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-390">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span>
          </span>
          <span data-ttu-id="e9df5-391">如果這個值是 <see langword="null" />，就不會對外部資源進行解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-391">If this is <see langword="null" />, external resources are not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-392">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-392">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span>
          </span>
        </param>
        <param name="evidence">
          <span data-ttu-id="e9df5-393">
            <see cref="T:System.Security.Policy.Evidence" />，設定在 XSLT 樣式表中針對指令碼區塊所產生的組件上。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-393">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span>
          </span>
          <span data-ttu-id="e9df5-394">如果此為 <see langword="null" />則不會處理指令碼區塊、不支援 XSLT <c>document()</c> 函式，且不允許特殊權限的擴充物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-394">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span>
          </span>
          <span data-ttu-id="e9df5-395">為了提供指令碼組件的辨識項，呼叫端必須擁有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-395">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span>
          </span>
          <span data-ttu-id="e9df5-396">非完全信任呼叫端可以設定這個參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-396">Semi-trusted callers can set this parameter to <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-397">載入 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-397">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span>
          </span>
          <span data-ttu-id="e9df5-398">這個方法可讓您指定辨識項，限制樣式表的使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-398">This method allows you to limit the permissions of the style sheet by specifying evidence.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-399"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-399">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-400"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-400">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-401">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-401">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-402"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-402"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-403">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-403">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-404">從目前的位置載入樣式表<xref:System.Xml.XPath.XPathNavigator>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-404">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="e9df5-405">若要使用載入的文件的一部分做為樣式表，瀏覽至樣式表開頭所對應的節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-405">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="e9df5-406">在後<xref:System.Xml.Xsl.XslTransform.Load%2A>方法傳回時，<xref:System.Xml.XPath.XPathNavigator>位於樣式表開頭 (上`xsl:style sheet`節點)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-406">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="e9df5-407">與相關的問題<xref:System.Xml.Xsl.XslTransform.Load%2A>方法和樣式表，內嵌指令碼，請參閱知識庫文件 Q316755 Microsoft 在http://support.microsoft.com。</span><span class="sxs-lookup"><span data-stu-id="e9df5-407">For issues with the <xref:System.Xml.Xsl.XslTransform.Load%2A> method and style sheets with embedded scripts, see article Q316755 in the Microsoft Knowledge Base at http://support.microsoft.com.</span></span>  
  
 <span data-ttu-id="e9df5-408">有不同的方式，提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="e9df5-408">There are different ways to provide evidence.</span></span> <span data-ttu-id="e9df5-409">下表描述何種辨識項，以便提供一般使用者案例。</span><span class="sxs-lookup"><span data-stu-id="e9df5-409">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
    
  
## Examples  
 <span data-ttu-id="e9df5-410">下列範例會使用從外部來源的樣式表的 XSLT 轉換。</span><span class="sxs-lookup"><span data-stu-id="e9df5-410">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="e9df5-411">樣式表來自受信任的來源，因為`resolver`並`evidence`參數會設定為`null`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-411">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
  
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException">
          <span data-ttu-id="e9df5-412">目前的節點不符合有效的樣式表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-412">The current node does not conform to a valid style sheet.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="e9df5-413">參考的樣式表需要功能，而提供的辨識項不允許此功能。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-413">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span>
          </span>
          <span data-ttu-id="e9df5-414">呼叫端嘗試提供辨識項，但沒有 <see langword="ControlEvidence" /> 使用權限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-414">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e9df5-415">提供辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-415">for providing evidence.</span>
          </span>
          <span data-ttu-id="e9df5-416">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-416">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e9df5-417">使用載入的 XSLT 樣式表轉換 XML 資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-417">Transforms the XML data using the loaded XSLT style sheet.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-418"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-418">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-419"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-419">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-420">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-420">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile">
          <span data-ttu-id="e9df5-421">要轉換之來源文件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-421">The URL of the source document to be transformed.</span>
          </span>
        </param>
        <param name="outputfile">
          <span data-ttu-id="e9df5-422">輸出檔案的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-422">The URL of the output file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-423">在輸入檔案中轉換 XML 資料，並將結果輸出至輸出檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-423">Transforms the XML data in the input file and outputs the result to an output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-424"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-424">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-425"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-425">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-426">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-426">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-427"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-427"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-428">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-428">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-429">這個方法是在.NET Framework 1.1 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-429">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="e9df5-430">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="e9df5-430">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e9df5-431">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="e9df5-431">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9df5-432">下列範例會轉換`books.xml`檔案中，使用`output.xsl`樣式表並將結果輸出至`books.html`檔案。</span><span class="sxs-lookup"><span data-stu-id="e9df5-432">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="e9df5-433">此範例會使用下列兩個輸入的檔案：</span><span class="sxs-lookup"><span data-stu-id="e9df5-433">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-434">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-434">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e9df5-435">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-435">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-436">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-436">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-437">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-437">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9df5-438">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-438">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-439"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-439">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-440"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-440">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-441">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-441">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-442"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-442"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-443">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-443">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-444">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-444">This method is now obsolete.</span></span> <span data-ttu-id="e9df5-445">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="e9df5-445">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e9df5-446">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="e9df5-446">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="e9df5-447">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-447">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e9df5-448">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlReader>(`xsl:output`項目會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-448">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="e9df5-449">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="e9df5-449">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e9df5-450">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-450">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="e9df5-451">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-451">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-452">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-452">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-453">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-453">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e9df5-454">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="e9df5-454">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="e9df5-455">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="e9df5-455">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-456">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-456">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-457">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-457">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-458">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-458">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9df5-459">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-459">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-460"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-460">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-461"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-461">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-462">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-462">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-463"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-463"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-464">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-464">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-465">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-465">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e9df5-466">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-466">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-467">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-467">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-468">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="e9df5-468">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e9df5-469">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-469">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e9df5-470">因為<xref:System.Xml.XmlReader>提供唯讀的輸出，`xsl:output`項目會被忽略。</span><span class="sxs-lookup"><span data-stu-id="e9df5-470">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="e9df5-471">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="e9df5-471">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e9df5-472">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-472">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-473">這個方法已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-473">This method is obsolete.</span></span> <span data-ttu-id="e9df5-474">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT document （） 函式已解決。</span><span class="sxs-lookup"><span data-stu-id="e9df5-474">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="e9df5-475">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="e9df5-475">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e9df5-476">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-476">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e9df5-477">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-477">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e9df5-478">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-478">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile">
          <span data-ttu-id="e9df5-479">要轉換之來源文件的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-479">The URL of the source document to be transformed.</span>
          </span>
        </param>
        <param name="outputfile">
          <span data-ttu-id="e9df5-480">輸出檔案的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-480">The URL of the output file.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-481">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-481">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e9df5-482">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-482">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-483">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-483">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-484">在輸入檔案中轉換 XML 資料，並將結果輸出至輸出檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-484">Transforms the XML data in the input file and outputs the result to an output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-485"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-485">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-486"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-486">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-487">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-487">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-488"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-488"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-489">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-489">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9df5-490">下列範例會執行 XSLT 轉換，並輸出至檔案。</span><span class="sxs-lookup"><span data-stu-id="e9df5-490">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="e9df5-491"><xref:System.Xml.XmlUrlResolver>認證會使用有預設外部資源解析。</span><span class="sxs-lookup"><span data-stu-id="e9df5-491">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="e9df5-492">如需詳細資訊，請參閱<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-492">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-493">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-493">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e9df5-494">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-494">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-495">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-495">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e9df5-496">要輸出至的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-496">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-497">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-497">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-498"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-498">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-499"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-499">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-500">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-500">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-501"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-501"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-502">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-502">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-503">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-503">This method is now obsolete.</span></span> <span data-ttu-id="e9df5-504">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="e9df5-504">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e9df5-505">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="e9df5-505">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="e9df5-506">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-506">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="e9df5-507">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-507">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-508">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-508">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-509">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-509">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e9df5-510">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="e9df5-510">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="e9df5-511">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="e9df5-511">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e9df5-512">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-512">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e9df5-513">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-513">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e9df5-514">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-514">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-515">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-515">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e9df5-516">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-516">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-517">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-517">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e9df5-518">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-518">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-519">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-519">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-520"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-520">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-521"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-521">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-522">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-522">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-523"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-523"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-524">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-524">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-525">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-525">This method is now obsolete.</span></span> <span data-ttu-id="e9df5-526">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="e9df5-526">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e9df5-527">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="e9df5-527">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="e9df5-528">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-528">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="e9df5-529">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-529">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="e9df5-530">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="e9df5-530">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="e9df5-531">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-531">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-532">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-532">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-533">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-533">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e9df5-534">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="e9df5-534">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="e9df5-535">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="e9df5-535">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e9df5-536">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-536">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e9df5-537">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-537">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e9df5-538">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-538">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-539">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-539">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e9df5-540">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-540">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-541">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-541">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-542">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-542">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e9df5-543">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-543">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-544">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-544">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-545">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-545">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9df5-546">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-546">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-547"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-547">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-548"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-548">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-549">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-549">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-550"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-550"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-551">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-551">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-552">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-552">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e9df5-553">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlReader>(`xsl:output`項目會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-553">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="e9df5-554">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="e9df5-554">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e9df5-555">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-555">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="e9df5-556">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-556">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-557">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-557">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-558">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-558">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e9df5-559">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="e9df5-559">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="e9df5-560">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="e9df5-560">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e9df5-561">下列範例會將轉換 XML 文件，並將結果輸出至`XmlReader`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-561">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="e9df5-562"><xref:System.Xml.XmlUrlResolver>具有必要認證用來處理所有 XSLT`document()`函式。</span><span class="sxs-lookup"><span data-stu-id="e9df5-562">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-563">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-563">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e9df5-564">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-564">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-565">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-565">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e9df5-566">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-566">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-567">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-567">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-568"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-568">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-569"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-569">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-570">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-570">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-571"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-571"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-572">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-572">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-573">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-573">This method is now obsolete.</span></span> <span data-ttu-id="e9df5-574">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="e9df5-574">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e9df5-575">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="e9df5-575">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="e9df5-576">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-576">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e9df5-577">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-577">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="e9df5-578">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="e9df5-578">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e9df5-579">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-579">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-580">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-580">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-581">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-581">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e9df5-582">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="e9df5-582">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="e9df5-583">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="e9df5-583">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e9df5-584">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-584">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e9df5-585">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-585">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e9df5-586">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-586">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-587">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-587">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-588">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-588">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e9df5-589">要輸出至的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-589">The stream to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-590">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-590">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-591"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-591">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-592"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-592">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-593">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-593">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-594"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-594"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-595">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-595">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-596">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-596">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e9df5-597">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-597">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-598">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-598">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-599">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="e9df5-599">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e9df5-600">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-600">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e9df5-601">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="e9df5-601">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-602">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-602">This method is now obsolete.</span></span> <span data-ttu-id="e9df5-603">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="e9df5-603">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e9df5-604">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="e9df5-604">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e9df5-605">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-605">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e9df5-606">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-606">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e9df5-607">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-607">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-608">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-608">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-609">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-609">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e9df5-610">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-610">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-611">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-611">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-612"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-612">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-613"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-613">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-614">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-614">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-615"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-615"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-616">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-616">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-617">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-617">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e9df5-618">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-618">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-619">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-619">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-620">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="e9df5-620">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e9df5-621">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-621">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e9df5-622">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-622">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="e9df5-623">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="e9df5-623">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-624">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-624">This method is now obsolete.</span></span> <span data-ttu-id="e9df5-625">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="e9df5-625">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e9df5-626">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="e9df5-626">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e9df5-627">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-627">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e9df5-628">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-628">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e9df5-629">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-629">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-630">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-630">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-631">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-631">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-632">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-632">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e9df5-633">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-633">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-634">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-634">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-635">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-635">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e9df5-636">包含轉換結果的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-636">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-637"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-637">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-638"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-638">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-639">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-639">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-640"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-640"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-641">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-641">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-642">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-642">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e9df5-643">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-643">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-644">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-644">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-645">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="e9df5-645">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e9df5-646">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-646">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e9df5-647">因為<xref:System.Xml.XmlReader>提供唯讀的輸出，`xsl:output`項目會被忽略。</span><span class="sxs-lookup"><span data-stu-id="e9df5-647">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="e9df5-648">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="e9df5-648">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e9df5-649">這個方法可讓您執行非同步轉換的來源文件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-649">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e9df5-650">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-650">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e9df5-651">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-651">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e9df5-652">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-652">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-653">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-653">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-654">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-654">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e9df5-655">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-655">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-656">使用指定的引數來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-656">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-657"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-657">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-658"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-658">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-659">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-659">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-660"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-660"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-661">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-661">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-662">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-662">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e9df5-663">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-663">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-664">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-664">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-665">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="e9df5-665">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e9df5-666">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-666">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e9df5-667">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-667">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="e9df5-668">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="e9df5-668">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-669">此方法現在已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-669">This method is now obsolete.</span></span> <span data-ttu-id="e9df5-670">設定<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>屬性會決定如何 XSLT`document()`函式已解決。</span><span class="sxs-lookup"><span data-stu-id="e9df5-670">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="e9df5-671">建議的做法是使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>採用方法<xref:System.Xml.XmlResolver>物件做為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="e9df5-671">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e9df5-672">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-672">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e9df5-673">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-673">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e9df5-674">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-674">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-675">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-675">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e9df5-676">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-676">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-677">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-677">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e9df5-678">要輸出至的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-678">The stream to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-679">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-679">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e9df5-680">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-680">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-681">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-681">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-682">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-682">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-683"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-683">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-684"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-684">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-685">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-685">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-686"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-686"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-687">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-687">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-688">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-688">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="e9df5-689">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-689">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-690">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-690">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-691">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-691">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e9df5-692">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="e9df5-692">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="e9df5-693">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="e9df5-693">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e9df5-694">下列範例會執行 ASP.NET 頁面內的轉換。</span><span class="sxs-lookup"><span data-stu-id="e9df5-694">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e9df5-695">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-695">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e9df5-696">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-696">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e9df5-697">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-697">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-698">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-698">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e9df5-699">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-699">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-700">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-700">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e9df5-701">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-701">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-702">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-702">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e9df5-703">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-703">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-704">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-704">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-705">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-705">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-706"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-706">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-707"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-707">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-708">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-708">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-709"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-709"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-710">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-710">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-711">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-711">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="e9df5-712">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-712">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="e9df5-713">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="e9df5-713">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="e9df5-714">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-714">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-715">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-715">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-716">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-716">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e9df5-717">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="e9df5-717">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="e9df5-718">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="e9df5-718">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e9df5-719">下列範例會轉換為 XML 檔案，並將輸出 HTML 字串。</span><span class="sxs-lookup"><span data-stu-id="e9df5-719">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="e9df5-720"><xref:System.IO.StringReader>和<xref:System.IO.StringWriter>類別用來讀取和寫入字串。</span><span class="sxs-lookup"><span data-stu-id="e9df5-720">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="e9df5-721">該範例使用 `books.xml` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="e9df5-721">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e9df5-722">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-722">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e9df5-723">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-723">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e9df5-724">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-724">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-725">實作 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 介面的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-725">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span>
          </span>
          <span data-ttu-id="e9df5-726">在 .NET Framework 中，這可以是 <see cref="T:System.Xml.XmlNode" /> (一般為 <see cref="T:System.Xml.XmlDocument" />)，或 <see cref="T:System.Xml.XPath.XPathDocument" />，其中包含要轉換的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-726">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-727">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-727">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e9df5-728">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-728">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-729">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-729">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e9df5-730">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-730">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-731">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-731">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-732">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-732">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-733"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-733">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-734"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-734">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-735">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-735">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-736"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-736"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-737">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-737">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-738">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-738">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e9df5-739">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-739">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="e9df5-740">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="e9df5-740">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="e9df5-741">轉換是指套用到整個文件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-741">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-742">換言之，如果您要傳入的節點不是文件的根節點，則不會阻止轉換程序取得已載入文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-742">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-743">若要轉換節點片段，您必須建立<xref:System.Xml.XmlDocument>包含僅節點片段，並將其傳遞<xref:System.Xml.XmlDocument>到<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-743">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="e9df5-744">下列範例會執行的轉換節點片段。</span><span class="sxs-lookup"><span data-stu-id="e9df5-744">The following example performs a transformation on a node fragment.</span></span>  
  
```  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="e9df5-745">此範例會使用`library.xml`和`print_root.xsl`檔案做為輸入，並將下列命令以在主控台的輸出。</span><span class="sxs-lookup"><span data-stu-id="e9df5-745">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```  
<style sheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</style sheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e9df5-746">下列範例會將 XML 文件轉換成 HTML 文件。</span><span class="sxs-lookup"><span data-stu-id="e9df5-746">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="e9df5-747">它會在資料表中顯示 ISBN、 標題和每本書籍的價格。</span><span class="sxs-lookup"><span data-stu-id="e9df5-747">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e9df5-748">範例會使用下列兩個輸入檔案。</span><span class="sxs-lookup"><span data-stu-id="e9df5-748">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e9df5-749">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-749">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e9df5-750">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-750">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e9df5-751">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-751">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-752">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-752">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-753">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-753">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e9df5-754">要輸出至的資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-754">The stream to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-755">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-755">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e9df5-756">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-756">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-757">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-757">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-758">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-758">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-759"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-759">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-760"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-760">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-761">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-761">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-762"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-762"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-763">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-763">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-764">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-764">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e9df5-765">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-765">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-766">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-766">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-767">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="e9df5-767">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e9df5-768">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-768">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e9df5-769">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="e9df5-769">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9df5-770">下列範例會載入至 customer 資料表<xref:System.Xml.XmlDataDocument>和執行 XSLT 轉換成 HTML 表提取客戶資料。</span><span class="sxs-lookup"><span data-stu-id="e9df5-770">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="e9df5-771">此範例會使用 Microsoft SQL Server 2000 的 Northwind 資料庫。</span><span class="sxs-lookup"><span data-stu-id="e9df5-771">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="e9df5-772">該範例使用 `customers.xsl` 檔案做為輸入。</span><span class="sxs-lookup"><span data-stu-id="e9df5-772">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e9df5-773">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-773">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e9df5-774">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-774">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e9df5-775">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-775">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-776">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-776">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-777">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-777">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e9df5-778">您要輸出的目標 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-778">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-779">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-779">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e9df5-780">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-780">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-781">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-781">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-782">使用指定的 <paramref name="args" /> 來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.IO.TextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-782">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-783"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-783">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-784"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-784">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-785">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-785">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-786"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-786"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-787">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-787">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-788">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-788">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e9df5-789">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-789">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-790">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-790">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-791">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="e9df5-791">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e9df5-792">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-792">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e9df5-793">上的編碼方式屬性`xsl:output`項目時，無法輸出至<xref:System.IO.TextWriter>。</span><span class="sxs-lookup"><span data-stu-id="e9df5-793">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="e9df5-794">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊，在其上`xsl:output`支援的屬性。</span><span class="sxs-lookup"><span data-stu-id="e9df5-794">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e9df5-795">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-795">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e9df5-796">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-796">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e9df5-797">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-797">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input">
          <span data-ttu-id="e9df5-798">包含要轉換資料的 <see cref="T:System.Xml.XPath.XPathNavigator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-798">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="e9df5-799">
            <see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用做轉換輸入之符合命名空間的引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-799">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e9df5-800">您要輸出的目標 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-800">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span>
          </span>
        </param>
        <param name="resolver">
          <span data-ttu-id="e9df5-801">
            <see cref="T:System.Xml.XmlResolver" /> 用來解析 XSLT <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-801">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span>
          </span>
          <span data-ttu-id="e9df5-802">如果值為 <see langword="null" />，則不會解析 <c>document()</c> 函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-802">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span>
          </span>
          <span data-ttu-id="e9df5-803">
            <see cref="T:System.Xml.XmlResolver" /> 在 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> 方法完成後不會加以快取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-803">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e9df5-804">使用指定的引數來轉換 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 資料，並將結果輸出至 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-804">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-805"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-805">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-806"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-806">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-807">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-807">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-808"><xref:System.Xml.Xsl.XslTransform> 支援 XSLT 1.0 語法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-808"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="e9df5-809">XSLT 樣式表必須包含命名空間宣告`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="e9df5-809">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="e9df5-810">`args`與進行比對`xsl:param`樣式表中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-810">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="e9df5-811">整體套用至文件的轉換選取項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-811">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="e9df5-812">換句話說，如果目前節點設定在文件根節點以外的節點樹狀結構，轉換程序不會防止存取載入的文件中的所有節點。</span><span class="sxs-lookup"><span data-stu-id="e9df5-812">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="e9df5-813">在執行轉換後，<xref:System.Xml.XPath.XPathNavigator>會保留在其原始狀態。</span><span class="sxs-lookup"><span data-stu-id="e9df5-813">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="e9df5-814">這表示節點，也就是目前轉換程序之前，會保留目前的節點之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>已呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-814">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="e9df5-815">`xsl:output`至輸出時，不支援項目<xref:System.Xml.XmlWriter>(`xsl:output`會被忽略)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-815">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="e9df5-816">請參閱[XslTransform 的輸出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="e9df5-816">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e9df5-817">下列範例會載入並編輯 XML 文件執行 XSLT 轉換之前。</span><span class="sxs-lookup"><span data-stu-id="e9df5-817">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="e9df5-818">處理 XSLT 轉換時發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-818">There was an error processing the XSLT transformation.</span>
          </span>
          <span data-ttu-id="e9df5-819">注意：這是先前版本的行為變更之一。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-819">Note: This is a change in behavior from earlier versions.</span>
          </span>
          <span data-ttu-id="e9df5-820">如果您使用的是 Microsoft .NET Framework 1.1 版 (含) 以前的版本，則會擲回 <see cref="T:System.Xml.Xsl.XsltException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-820">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span>
          </span>
        </exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e9df5-821">呼叫 <see cref="T:System.Xml.XmlResolver" /> 方法時，設定用來解析外部資源的 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-821">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e9df5-822">轉換期間所使用的 <see cref="T:System.Xml.XmlResolver" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-822">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span>
          </span>
          <span data-ttu-id="e9df5-823">如果設定為<see langword="null" />，XSLT <c>document （)</c>函式不會解析。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e9df5-823">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-824"><xref:System.Xml.Xsl.XslTransform>類別是.NET Framework 2.0 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-824">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="e9df5-825"><xref:System.Xml.Xsl.XslCompiledTransform>類別是新的 XSLT 處理器。</span><span class="sxs-lookup"><span data-stu-id="e9df5-825">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="e9df5-826">如需詳細資訊，請參閱 <<c0> [ 使用 XslCompiledTransform 類別](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)並[從 XslTransform 類別移轉](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="e9df5-826">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="e9df5-827">在 1.1 版的.NET framework，應用程式的信任層級會決定預設的行為：</span><span class="sxs-lookup"><span data-stu-id="e9df5-827">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="e9df5-828">`Fully trusted code:` 預設值<xref:System.Xml.XmlUrlResolver>不需要使用者的認證用來解析`document()`函式。</span><span class="sxs-lookup"><span data-stu-id="e9df5-828">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="e9df5-829">如果驗證才能存取外部資源，使用這個屬性來指定<xref:System.Xml.XmlResolver>具有必要認證。</span><span class="sxs-lookup"><span data-stu-id="e9df5-829">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="e9df5-830">`Semi-trusted code:` 屬性設定為`null`，這表示`document()`函式不會解析。</span><span class="sxs-lookup"><span data-stu-id="e9df5-830">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="e9df5-831">由於完全信任，才能指定<xref:System.Xml.XmlResolver>，這個屬性也無法設定。</span><span class="sxs-lookup"><span data-stu-id="e9df5-831">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="e9df5-832">使用這個解析程式時 XSLT`document()`函式會叫用。</span><span class="sxs-lookup"><span data-stu-id="e9df5-832">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="e9df5-833">它將不會用來解決`xsl:import`和`xsl:include`樣式表中所參考的項目。</span><span class="sxs-lookup"><span data-stu-id="e9df5-833">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="e9df5-834">指定<xref:System.Xml.XmlResolver>要用來解析`xsl:import`並`xsl:include`樣式表中所參考的項目會使用<xref:System.Xml.Xsl.XslTransform.Load%2A>多載，這個方法會接受<xref:System.Xml.XmlResolver>為其中一個引數。</span><span class="sxs-lookup"><span data-stu-id="e9df5-834">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e9df5-835">這個屬性是在.NET Framework 1.1 版中已過時。</span><span class="sxs-lookup"><span data-stu-id="e9df5-835">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="e9df5-836">指定<xref:System.Xml.XmlResolver>使用<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法是建議的做法。</span><span class="sxs-lookup"><span data-stu-id="e9df5-836">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="e9df5-837">在此情況下，<xref:System.Xml.XmlResolver>不會快取之後<xref:System.Xml.Xsl.XslTransform.Transform%2A>方法完成。</span><span class="sxs-lookup"><span data-stu-id="e9df5-837">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>